{"ast":null,"code":"import _createForOfIteratorHelper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,Nav,FormGroup,FormLabel}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faTrashAlt,faPencilAlt,faTasks,faDatabase}from'@fortawesome/free-solid-svg-icons';import{toast}from'react-toastify';import ListMaster from'../../components/list-master/list-master.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import AddQuery from'./AddQuery';import AddParameter from'./AddParameter';import QueryTypeFilter from'./QueryTypeFilter';import{callService,crudMaster,validateEsignCredential,updateStore,getSQLQueryDetail,getSQLQueryComboService,filterColumnData,comboChangeQueryType,executeUserQuery,comboColumnValues,getColumnNamesByTableName,getTablesName,getModuleFormName,getDatabaseTables,executeQuery,getForeignTable,getViewColumns,getMasterData}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{transactionStatus,queryTypeFilter,tableType,ColumnType}from'../../components/Enumeration';import{constructOptionList,getControlMap,showEsign}from'../../components/CommonScript';import{ReadOnlyText,ContentPanel}from'../../components/App.styles';import rsapi from'../../rsapi';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import{Affix}from'rsuite';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import{ListWrapper}from'../../components/client-group.styles';import ReactTooltip from'react-tooltip';import PortalModalSlideout from'../../components/portal-modal/portal-modal-slideout';import BuildQuery from'./BuildQuery';// import {validationData} from './QueryBuilderData';\nvar jsonSql=require('json-sql')({separatedValues:true});var SQLBuilder=/*#__PURE__*/function(_Component){_inherits(SQLBuilder,_Component);var _super=_createSuper(SQLBuilder);function SQLBuilder(props){var _this;_classCallCheck(this,SQLBuilder);_this=_super.call(this,props);_this.userQueryDataStateChange=function(event){_this.setState({dataStateUserQuery:event.dataState});};_this.ConfirmDelete=function(deleteId){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteRecord(\"SQLQuery\",_this.props.Login.masterData.SelectedSQLQuery,\"delete\",deleteId);});};_this.handleFilterDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.generateFilterQuery(selectedRecord);};_this.onViewComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;var inputParam={sviewname:comboData.value,selectedRecord:selectedRecord,userinfo:_this.props.Login.userInfo};_this.props.getViewColumns(inputParam);};_this.onRuleChange=function(comboData,fieldName,index){var selectedRecord=_this.state.selectedRecord;_this.clearSelectedRule(selectedRecord,index);var sqlQuery=_this.props.Login.sqlQuery;var oldselectedRecord=selectedRecord;selectedRecord[fieldName]=comboData;var tableData=comboData.items;var mastertablename=tableData.mastertablename;if(comboData.items.needmasterdata&&mastertablename){var inputParam={userinfo:_this.props.Login.userInfo,data:{nflag:2,mastertablename:mastertablename,valuemember:tableData.valuemember,displaymember:tableData.displaymember},selectedRecord:selectedRecord,index:index,optionId:tableData.valuemember};_this.props.getMasterData(inputParam);}else if(comboData.items&&comboData.items.columntype===ColumnType.COMBO){if(sqlQuery){var _inputParam={userinfo:_this.props.Login.userInfo,stablename:comboData.items.foriegntablename,scolumnname:comboData.value,selectedRecord:selectedRecord,index:index};_this.props.getForeignTable(_inputParam,'column');}else{selectedRecord[\"\".concat(comboData.items.sforeigncolumnname,\"_\").concat(index)]=\"\";var _inputParam2={data:_objectSpread(_objectSpread({},comboData.items),{},{nflag:1}),userinfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,index:index,optionId:comboData.items.sforeigncolumnname};_this.props.getMasterData(_inputParam2);}}else if(comboData.items&&comboData.items.columntype===ColumnType.TEXTINPUT&&oldselectedRecord[fieldName].items.columntype!==ColumnType.TEXTINPUT){selectedRecord[\"sinputname_\"+index]=\"\";_this.setState({selectedRecord:selectedRecord});}else{_this.setState({selectedRecord:selectedRecord});}};_this.onMasterDataChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord;selectedRecord[fieldName]=comboData;_this.generateFilterQuery(selectedRecord);};_this.addRule=function(type){var selectedRecord=_this.state.selectedRecord;if(type===\"sql\"){var addRuleList=_this.props.Login.addRuleList||[];if(addRuleList.length>0){var arrayLength=addRuleList.length;addRuleList[arrayLength]=arrayLength;selectedRecord[\"button_and_\"+arrayLength]=true;var updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:addRuleList,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);}else{addRuleList[0]=0;_this.props.getDatabaseTables(_this.props.Login.userInfo,_this.props.Login.sqlQuery,{addRuleList:addRuleList,selectedRecord:{}});}}else{if(selectedRecord[\"sviewname\"]){var viewColumnListByRule=_this.props.Login.viewColumnListByRule||[];var _addRuleList=_this.props.Login.addRuleList||[];var _arrayLength=_addRuleList.length;_addRuleList[_arrayLength]=_arrayLength;viewColumnListByRule[_arrayLength]=_this.props.Login.viewColumnList;if(_arrayLength!==0){selectedRecord[\"button_and_\"+_arrayLength]=true;}var _updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:_addRuleList,viewColumnListByRule:viewColumnListByRule,selectedRecord:selectedRecord}};_this.props.updateStore(_updateInfo);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTVIEW\"}));}}};_this.getDatabaseTables=function(){var sqlQuery=false;_this.props.getDatabaseTables(_this.props.Login.userInfo,sqlQuery,{addRuleList:[]});};_this.closePortalModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openPortalModal:false,selectedRecord:{},addRuleList:[],count:0}};_this.props.updateStore(updateInfo);};_this.onExecuteRule=function(){var selectedRecord=_this.state.selectedRecord;if(selectedRecord[\"sgeneratedquery\"]){var inputParam={sgeneratedquery:selectedRecord[\"sgeneratedquery\"],selectedRecord:selectedRecord,userInfo:_this.props.Login.userInfo};_this.props.executeQuery(inputParam);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_QUERYNOTAVAILABLE\"}));}};_this.deleteRule=function(index){var addRuleList=_this.props.Login.addRuleList;var selectedRecord=_this.state.selectedRecord;addRuleList[index]=-1;selectedRecord[\"button_and_\".concat(index)]&&delete selectedRecord[\"button_and_\".concat(index)];selectedRecord[\"button_or_\".concat(index)]&&delete selectedRecord[\"button_or_\".concat(index)];_this.clearSelectedRule(selectedRecord,index);var updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:addRuleList,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.clearRule=function(){var sviewname=_this.state.selectedRecord.sviewname||\"\";var updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:[],selectedRecord:{sviewname:sviewname},sqlQuery:false}};_this.props.updateStore(updateInfo);};_this.resetRule=function(){var sviewname=_this.state.selectedRecord.sviewname||\"\";_this.setState({selectedRecord:{sviewname:sviewname}});};_this.onSymbolChange=function(comboData,fieldName,index){var selectedRecord=_this.state.selectedRecord;var oldSelectedRecord=selectedRecord[fieldName]||{};selectedRecord[fieldName]=comboData;var items=selectedRecord[\"columnname_\"+index].items;selectedRecord[\"columnname_\"+index][\"items\"][\"needmasterdata\"]=items.needmasterdata?comboData.items.needmasterdata:false;if(comboData.items.symbolType===2||comboData.items.symbolType===3){selectedRecord[items[\"valuemember\"]+\"_\"+index]&&delete selectedRecord[items[\"valuemember\"]+\"_\"+index];selectedRecord[items[\"foreigncolumnname\"]+\"_\"+index]&&delete selectedRecord[items[\"foreigncolumnname\"]+\"_\"+index];selectedRecord[\"sinputname_\"+index]&&delete selectedRecord[\"sinputname_\"+index];}else if(comboData.items.symbolType===5&&oldSelectedRecord.items&&oldSelectedRecord.items.symbolType!==5){selectedRecord[\"snumericinput_\"+index]&&delete selectedRecord[\"snumericinput_\"+index];selectedRecord[\"snumericinputtwo_\"+index]&&delete selectedRecord[\"snumericinputtwo_\"+index];}else if(comboData.items.symbolType===6&&oldSelectedRecord.items&&oldSelectedRecord.items.symbolType===1||comboData.items.symbolType===1&&oldSelectedRecord.items&&oldSelectedRecord.items.symbolType===6){selectedRecord[\"\".concat(items.sforeigncolumnname,\"_\").concat(index)]&&delete selectedRecord[\"\".concat(items.sforeigncolumnname,\"_\").concat(index)];selectedRecord[\"\".concat(items.valuemember,\"_\").concat(index)]&&delete selectedRecord[\"\".concat(items.valuemember,\"_\").concat(index)];}else{}_this.generateFilterQuery(selectedRecord);};_this.onInputChange=function(event,type){var selectedRecord=_this.state.selectedRecord;if(type===2){var inputValue=event.target.value;if(/^-?\\d*?\\.?\\d*?$/.test(inputValue)||inputValue===\"\"){selectedRecord[event.target.name]=event.target.value;}}else{selectedRecord[event.target.name]=event.target.value;}_this.generateFilterQuery(selectedRecord);};_this.generateFilterQuery=function(selectedRecord){var addRuleList=_this.props.Login.addRuleList;jsonSql.setDialect('mssql');var databaseCondition=[];var displayCondition=[];if(addRuleList.length>0){var orDisplayConditionArray=[];var orConditionArray=[];addRuleList.forEach(function(index){var symbolObject={};if(selectedRecord[\"columnname_\"+index]){symbolObject=selectedRecord[\"ssymbolname_\"+index].items||{};var current_button_and=selectedRecord[\"button_and_\".concat(index)];var current_button_or=selectedRecord[\"button_or_\".concat(index)];var next_button_and=selectedRecord[\"button_and_\".concat(index+1)];var next_button_or=selectedRecord[\"button_or_\".concat(index+1)]?selectedRecord[\"button_or_\".concat(index+1)]:false;var inputname=selectedRecord[\"sinputname_\"+index];var symbolname=symbolObject.symbol;var numericinput=selectedRecord[\"snumericinput_\"+index];var columnLabel=selectedRecord[\"columnname_\"+index].label;var columnValue=selectedRecord[\"columnname_\"+index].value;var snumericinputtwo=selectedRecord[\"snumericinputtwo_\"+index];var columnName=undefined;var needmasterdata=selectedRecord[\"columnname_\"+index].items.needmasterdata?selectedRecord[\"columnname_\"+index].items.needmasterdata:false;if(selectedRecord[\"columnname_\"+index].items.needmasterdata){columnName=selectedRecord[\"columnname_\"+index].items.valuemember+\"_\"+index;}else if(selectedRecord[\"columnname_\"+index].items.sforeigncolumnname){columnName=selectedRecord[\"columnname_\"+index].items.sforeigncolumnname+\"_\"+index;}var dateinput=selectedRecord[\"dateinput_\"+index];var dateinputtwo=selectedRecord[\"dateinputtwo_\"+index];if(current_button_or||next_button_or||current_button_and&&next_button_or){if(symbolObject&&inputname){if(symbolObject.symbolType===4){var _index=symbolObject.replacewith.indexOf('_');inputname=symbolObject.replacewith.substr(0,_index)+inputname+symbolObject.replacewith.substr(_index+1);orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,inputname)));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,inputname)));}else{orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,inputname)));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,inputname)));}}else if(symbolObject&&numericinput&&symbolObject.symbolType!==5){orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,numericinput)));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,numericinput)));}else if(symbolObject&&symbolObject.symbolType===2||symbolObject&&symbolObject.symbolType===3){orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,'')));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,'')));}else if(symbolObject&&numericinput&&snumericinputtwo&&symbolObject.symbolType===5){if(symbolObject.symbol===\"\"){var tempValue=[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))];var tempValue1=[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))];orConditionArray.push(tempValue);orDisplayConditionArray.push(tempValue1);}else{var _tempValue=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))])];var _tempValue2=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))])];orConditionArray.push(_tempValue);orDisplayConditionArray.push(_tempValue2);}}else if(symbolObject&&symbolObject.symbolType===6&&columnName&&selectedRecord[columnName]){// if(typeof selectedRecord[columnName] === \"object\") {\n//     orConditionArray.push({[columnValue]: { [symbolname]: [selectedRecord[columnName].value]} });\n//     orDisplayConditionArray.push({[columnLabel]: { [symbolname]: [selectedRecord[columnName].label]} });\n// } else {\nvar data=selectedRecord[columnName]&&selectedRecord[columnName].map(function(item){return item.value;})||[];var data1=selectedRecord[columnName]&&selectedRecord[columnName].map(function(item){return item.label;})||[];if(data.length>0){if(needmasterdata){orConditionArray.push(_defineProperty({},selectedRecord[\"columnname_\"+index].items.valuemember,_defineProperty({},symbolname,data)));}else{orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,data)));}}if(data1.length>0){orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,data1)));}// }\n}else if(symbolObject&&columnName&&symbolObject.isInputVisible&&selectedRecord[columnName]){if(needmasterdata){orConditionArray.push(_defineProperty({},selectedRecord[\"columnname_\"+index].items.valuemember,_defineProperty({},symbolname,selectedRecord[columnName].value)));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,selectedRecord[columnName].label)));}else{orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,selectedRecord[columnName].value)));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,selectedRecord[columnName].label)));}}else if(symbolObject&&dateinput&&symbolObject.symbolType!==5){orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,dateinput)));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,dateinput)));}else if(symbolObject&&dateinput&&dateinputtwo&&symbolObject.symbolType===5){if(symbolObject.symbol===\"\"){var _tempValue3=[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))];var _tempValue4=[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))];orConditionArray.push(_tempValue3);orDisplayConditionArray.push(_tempValue4);}else{var _tempValue5=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))])];var _tempValue6=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))])];orConditionArray.push(_tempValue5);orDisplayConditionArray.push(_tempValue6);}}}else{if(symbolObject&&inputname){if(symbolObject.symbolType===4){var _index2=symbolObject.replacewith.indexOf('_');inputname=symbolObject.replacewith.substr(0,_index2)+inputname+symbolObject.replacewith.substr(_index2+1);databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,inputname)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,inputname)));}else{databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,inputname)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,inputname)));}}else if(symbolObject&&numericinput&&symbolObject.symbolType!==5){databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,numericinput)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,numericinput)));}else if(symbolObject&&symbolObject.symbolType===2||symbolObject&&symbolObject.symbolType===3){databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,'')));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,'')));}else if(symbolObject&&numericinput&&snumericinputtwo&&symbolObject.symbolType===5){if(symbolObject.symbol===\"\"){var _tempValue7=[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))];var _tempValue8=[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))];databaseCondition.push(_tempValue7);displayCondition.push(_tempValue8);}else{var _tempValue9=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))])];var _tempValue10=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))])];databaseCondition.push(_tempValue9);displayCondition.push(_tempValue10);}}else if(symbolObject&&symbolObject.symbolType===6&&columnName&&selectedRecord[columnName]){// if(typeof selectedRecord[columnName] === \"object\") {\n//     databaseCondition.push({[columnValue]: { [symbolname]: [selectedRecord[columnName].value]} });\n//     displayCondition.push({[columnLabel]: { [symbolname]: [selectedRecord[columnName].label]} });\n// } else {\nvar _data=selectedRecord[columnName]&&selectedRecord[columnName].map(function(item){return item.value;})||[];var _data2=selectedRecord[columnName]&&selectedRecord[columnName].map(function(item){return item.label;})||[];if(_data.length>0){if(needmasterdata){databaseCondition.push(_defineProperty({},selectedRecord[\"columnname_\"+index].items.valuemember,_defineProperty({},symbolname,_data)));}else{databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,_data)));}}if(_data2.length>0){displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,_data2)));}// }\n}else if(symbolObject&&columnName&&symbolObject.isInputVisible&&selectedRecord[columnName]){if(needmasterdata){databaseCondition.push(_defineProperty({},selectedRecord[\"columnname_\"+index].items.valuemember,_defineProperty({},symbolname,selectedRecord[columnName].value)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,selectedRecord[columnName].label)));}else{databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,selectedRecord[columnName].value)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,selectedRecord[columnName].label)));}}else if(symbolObject&&dateinput&&symbolObject.symbolType!==5){databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,dateinput)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,dateinput)));}else if(symbolObject&&dateinput&&dateinputtwo&&symbolObject.symbolType===5){if(symbolObject.symbol===\"\"){var _tempValue11=[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))];var _tempValue12=[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))];databaseCondition.push(_tempValue11);displayCondition.push(_tempValue12);}else{var _tempValue13=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))])];var _tempValue14=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))])];databaseCondition.push(_tempValue13);displayCondition.push(_tempValue14);}}}if(current_button_or&&(next_button_and||typeof next_button_and==='undefined')||typeof next_button_or==='undefined'){if(orConditionArray.length>0){databaseCondition.push({$or:orConditionArray});orConditionArray=[];}if(orDisplayConditionArray.length>0){displayCondition.push({$or:orDisplayConditionArray});orDisplayConditionArray=[];}}if(_this.props.Login.sqlQuery){var databaseSQLQuery=jsonSql.build({type:'select',table:selectedRecord[\"stablename_0\"].value,condition:databaseCondition});var displaySQLQuery=jsonSql.build({type:'select',table:selectedRecord[\"stablename_0\"].label,condition:displayCondition});selectedRecord[\"sgeneratedquery\"]=databaseSQLQuery.query;selectedRecord[\"sdisplayquery\"]=displaySQLQuery.query;}else{var _databaseSQLQuery=jsonSql.build({type:'select',table:selectedRecord[\"sviewname\"].value,condition:databaseCondition});var _displaySQLQuery=jsonSql.build({type:'select',table:selectedRecord[\"sviewname\"].label,condition:displayCondition});// jsonSql = jsonSql.setSeparatedValues(true);\nselectedRecord[\"sgeneratedquery\"]=_databaseSQLQuery.query;selectedRecord[\"sdisplayquery\"]=_displaySQLQuery.query;}_this.setState({selectedRecord:selectedRecord});}else{}});}};_this.onConditionClick=function(fieldName,index){var selectedRecord=_this.state.selectedRecord;if(fieldName===\"button_and_\".concat(index)){selectedRecord[fieldName]=selectedRecord[fieldName]===true?false:true;selectedRecord[\"button_or_\".concat(index)]=false;}else if(fieldName===\"button_or_\".concat(index)){selectedRecord[fieldName]=selectedRecord[fieldName]===true?false:true;selectedRecord[\"button_and_\".concat(index)]=false;}else{}_this.generateFilterQuery(selectedRecord);};_this.onQueryTypeOnclick=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{sqlQuery:!_this.state.sqlQuery}};_this.props.updateStore(updateInfo);};_this.getValidationForEdit=function(screenName,operation,primaryKeyName,primaryKeyValue,masterData,userInfo,queryTypeCode,ncontrolCode){var _rsapi$post;rsapi.post(\"sqlquery/getValidationForEdit\",(_rsapi$post={},_defineProperty(_rsapi$post,primaryKeyName,primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",userInfo),_rsapi$post)).then(function(response){if(response.data===\"IDS_SUCCESS\"){_this.props.getSQLQueryComboService(screenName,operation,primaryKeyName,primaryKeyValue,masterData,userInfo,queryTypeCode,ncontrolCode);}else if(response.data===\"IDS_QUERYUSEDINDASHBOARD\"){_this.confirmAlertForEdit(ncontrolCode);}else{toast.warn(_this.props.intl.formatMessage({id:response.data}));}}).catch(function(error){if(error.response.status===500){toast.error(_this.props.intl.formatMessage({id:error.message}));}else{toast.warn(_this.props.intl.formatMessage({id:error.response.data}));}});};_this.confirmAlertForEdit=function(editId){_this.confirmMessage.confirm(_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_QUERYUSEDINDASHBOARD\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),// () => this.performBatchAction(), \nfunction(){return _this.props.getSQLQueryComboService(_this.state.queryTypeName,\"update\",\"nsqlquerycode\",_this.props.Login.masterData.SelectedSQLQuery.nsqlquerycode,_this.props.Login.masterData,_this.props.Login.userInfo,//this.state.selectedcombo[\"nquerytypecode\"].value, \n_this.props.Login.masterData.SelectedQueryType.nquerytypecode,editId);},undefined,function(){return _this.closeAlert();});};_this.closeAlert=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showConfirmAlertForEdit:false}};_this.props.updateStore(updateInfo);};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){_this.searchRef.current.value=\"\";//    const inputParam = {\n//        inputData: { \"userinfo\": this.props.Login.userInfo, \n//                    nquerytypecode:this.state.selectedRecord[\"nquerytypecode\"] ? \n//                                   this.state.selectedRecord[\"nquerytypecode\"].value : 0\n//                 },        \n//        userInfo: this.props.Login.userInfo,\n//        classUrl: \"sqlquery\",\n//        methodUrl: \"SQLQuery\",\n//        displayName: \"IDS_SQLBUILDER\",\n//    };\n//this.props.callService(inputParam);\nvar nquerytypecode=_this.state.selectedRecord[\"nquerytypecode\"]?_this.state.selectedRecord[\"nquerytypecode\"].value:_this.props.Login.masterData.SelectedQueryType.nquerytypecode;_this.props.comboChangeQueryType(nquerytypecode,_this.props.Login.masterData,_this.props.Login.userInfo);};_this.handlePageChange=function(event){_this.setState({skip:event.skip,take:event.take});};_this.onComboChange=function(comboData,fieldName){if(comboData!=null){if(fieldName===\"ncharttypecode\"){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}if(fieldName===\"ntabletypecode\"||fieldName===\"nformcode\"){var selectedTableType=_this.state.selectedTableType||{};selectedTableType[fieldName]=comboData;_this.setState({selectedTableType:selectedTableType});var _selectedRecord=_this.state.selectedRecord||{};//  this.state.ntableTypeCode=comboData.value;\nif(fieldName===\"ntabletypecode\"){if(comboData.value===tableType.ALL){_selectedRecord[\"nformcode\"]=\"\";_this.props.getTablesName(selectedTableType[\"ntabletypecode\"].value,0);}else{var updateInfor={typeName:DEFAULT_RETURN,data:{tableName:[]}};_this.props.updateStore(updateInfor);_this.setState({moduleFormName:[]});_selectedRecord[\"nformcode\"]=\"\";_this.props.getModuleFormName(comboData.value,_this.props.Login.userInfo);}}if(fieldName===\"nformcode\"){_selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:_selectedRecord});//this.state.nFormCode=comboData.value;\n//this.getTablesName(selectedRecord[\"ntabletypecode\"].value ,selectedRecord[\"nformcode\"].value)\n_this.props.getTablesName(selectedTableType[\"ntabletypecode\"].value,_selectedRecord[\"nformcode\"].value);}}else{var selectedcombo=_this.state.selectedcombo||{};selectedcombo[fieldName]=comboData;_this.setState({selectedcombo:selectedcombo});}if(fieldName===\"nquerytypecode\"){_this.searchRef.current.value=\"\";// this.props.comboChangeQueryType(comboData.value, this.props.Login.masterData, this.props.Login.userInfo);\nvar _selectedRecord2=_this.state.selectedRecord||{};_selectedRecord2[fieldName]=comboData;var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:_selectedRecord2}};_this.props.updateStore(updateInfo);}}};_this.onEsignInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){// const selectedRecord = this.state.selectedRecord || {};\nvar selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"ntransactionstatus\")selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;else selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onNumericInputChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var showExecute=_this.props.Login.showExecute;var showParam=_this.props.Login.showParam;var showValidate=_this.props.Login.showValidate;var showSave=_this.props.Login.showSave;var screenName=_this.props.Login.screenName;var operation=_this.props.Login.operation;var slideOperation=_this.props.Login.slideOperation;var parentPopUpSize=_this.props.Login.parentPopUpSize;var resultStatus=_this.props.Login.resultStatus;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord[\"agree\"]=transactionStatus.NO;if(_this.state.param.size>0){showExecute=true;showSave=true;}else{showExecute=false;showSave=false;}parentPopUpSize=\"xl\";}}else{if(_this.props.Login.screenName===\"Parameter for Results\"||_this.props.Login.screenName===\"Results\"){if(_this.props.Login.screenFlag===\"showQuery\"){openModal=true;var queryTypeCode=_this.props.Login.masterData.SelectedQueryType.nquerytypecode;if(queryTypeCode===queryTypeFilter.LIMSDASHBOARDQUERY){screenName=_this.props.intl.formatMessage({id:\"IDS_LIMSDASHBOARDQUERY\"});}else if(queryTypeCode===queryTypeFilter.LIMSALERTQUERY){screenName=_this.props.intl.formatMessage({id:\"IDS_LIMSALERTQUERY\"});}else if(queryTypeCode===queryTypeFilter.LIMSBARCODEQUERY){screenName=_this.props.intl.formatMessage({id:\"IDS_LIMSBARCODEQUERY\"});}else if(queryTypeCode===queryTypeFilter.LIMSGENERALQUERY){screenName=_this.props.intl.formatMessage({id:\"IDS_LIMSGENERALQUERY\"});}else{screenName=_this.props.intl.formatMessage({id:\"IDS_LIMSFILTERQUERY\"});}showSave=false;}else{selectedRecord={};openModal=false;showExecute=false;}showParam=false;showValidate=true;operation=slideOperation;slideOperation=\"\";resultStatus=\"\";}else{openModal=false;selectedRecord={};showExecute=false;}}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,showExecute:showExecute,showParam:showParam,operation:operation,screenName:screenName,showSave:showSave,showValidate:showValidate,parentPopUpSize:parentPopUpSize,resultStatus:resultStatus,showConfirmAlertForEdit:false}};_this.props.updateStore(updateInfo);};_this.upDateComboboxValue=function(i){return function(Value){if(Value!=null){// let parameters = [...this.state.parameters]\n// parameters[i].textValue = Value\n// this.setState({\n//     parameters: parameters\n// })\nvar paramMap=_this.state.param||new Map();paramMap.get(i).textValue=Value;_this.setState({param:paramMap});}};};_this.handleDateChange=function(i){return function(date){// let parameters = [...this.state.parameters]\n// parameters[i].Datetime = date\n// this.setState({\n//     parameters: parameters\n// })\nvar paramMap=_this.state.param||new Map();paramMap.get(i).Datetime=date;_this.setState({param:paramMap});};};_this.handleText=function(i){return function(event){//let parameters = [...this.state.parameters];\n//parameters[i].textValue = e.target.value;\n//this.setState({parameters: parameters});\n// console.log(parameters)\nvar paramMap=_this.state.param||new Map();paramMap.get(event.target.name).textValue=event.target.value;_this.setState({param:paramMap});};};_this.executeQuery=function(methodUrl,selectedRecord,operation,ncontrolCode){var sqlQuery=selectedRecord.ssqlquery;if(sqlQuery.length>10){if(sqlQuery.toUpperCase().indexOf('INSERT')>=0||sqlQuery.toUpperCase().indexOf('UPDATE')>=0||sqlQuery.toUpperCase().indexOf('DELETE')>=0||sqlQuery.toUpperCase().indexOf('TRUNCATE')>=0||sqlQuery.toUpperCase().indexOf('CREATE')>=0||sqlQuery.toUpperCase().indexOf('ALTER')>=0||sqlQuery.toUpperCase().indexOf('DROP')>=0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_CANNOTDATAMANIPULATION\"}));}else{if(sqlQuery.indexOf('P$')>0){var newQuery=sqlQuery;var paramMap=new Map();while(newQuery.indexOf(\"P$\")!==-1){var paramLabelStartIndex=newQuery.indexOf(\"P$\");var paramLabelEndIndex=newQuery.indexOf(\"$P\");var paramLabel=newQuery.substring(paramLabelStartIndex+2,paramLabelEndIndex);if(paramLabel.indexOf(\"T$\")!==-1){var displayName=\"\";var localParam=\"\";var tableName=\"\";newQuery=newQuery.substring(paramLabelEndIndex+2,newQuery.length);if(paramLabel.indexOf(\"D$\")!==-1){localParam=paramLabel.substring(0,paramLabel.indexOf('D$'));displayName=paramLabel.substring(paramLabel.indexOf('D$')+2,paramLabel.indexOf('T$'));//tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\ntableName=paramLabel.substring(paramLabel.indexOf('T$')+2,paramLabel.length);}else{localParam=paramLabel.substring(0,paramLabel.indexOf('T$'));// tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\ntableName=paramLabel.substring(paramLabel.indexOf('T$')+2,paramLabel.length);}if(localParam.startsWith('d')||localParam.startsWith('D')){paramMap.set(\"P$\"+localParam+\"$P\",{value:'DateTimePicker',lableName:localParam,//ID: param.length, \nDatetime:new Date(),textValue:'',TableName:tableName,DisplayParam:displayName,actuallableName:localParam.substring(1,localParam.length)});}else{paramMap.set(\"P$\"+localParam+\"$P\",{value:'TextBox1',lableName:localParam,//ID: param.length, \ntextValue:'',TableName:tableName,DisplayParam:displayName,actuallableName:localParam.substring(1,localParam.length)});}}else{newQuery=newQuery.substring(paramLabelEndIndex+2,newQuery.length);if(paramLabel.startsWith('d')||paramLabel.startsWith('D')){paramMap.set(\"P$\"+paramLabel+\"$P\",{value:'DateTimePicker',lableName:paramLabel,actuallableName:paramLabel.substring(1,paramLabel.length),//ID: param.length, \nDatetime:new Date()});}else{paramMap.set(\"P$\"+paramLabel+\"$P\",{value:'TextBox1',lableName:paramLabel,//ID: param.length, \ntextValue:'',TableName:\"\",DisplayParam:\"\",actuallableName:paramLabel.substring(1,paramLabel.length)});}}}var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:\"Parameter for Results\",openModal:true,showExecute:true,showParam:true,showValidate:false,showSave:false,operation:\"create\",slideOperation:\"\",slideResult:[],slideList:[],screenFlag:\"showParam\",param:paramMap,//param: param, Dparam: Dparam, TBLName: TBLName,\nparentPopUpSize:\"xl\"}};_this.props.updateStore(updateInfo);}else{//query without parameters      \nvar inputParam={query:selectedRecord.ssqlquery.trim(),screenName:\"Results\",openModal:true,showExecute:false,showParam:true,showValidate:false,showSave:false,noSave:true,operation:\"view\",slideOperation:\"\",slideResult:[],slideList:[],//screenFlag: \"showParam\",\nscreenFlag:\"NoParam\",parentPopUpSize:\"xl\",param:new Map()};_this.props.executeUserQuery(inputParam);}}}};_this.deleteRecord=function(methodUrl,selectedRecord,operation,ncontrolCode){var _inputData;var postParam={inputListName:\"SQLQuery\",selectedObject:\"SelectedSQLQuery\",primaryKeyField:\"nsqlquerycode\",primaryKeyValue:_this.props.Login.masterData.SelectedSQLQuery.nsqlquerycode,fetchUrl:\"sqlquery/getSQLQuery\",fecthInputObject:{userInfo:_this.props.Login.userInfo}};var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:methodUrl,postParam:postParam,inputData:(_inputData={},_defineProperty(_inputData,methodUrl.toLowerCase(),selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_defineProperty(_inputData,\"sqlquery\",_this.props.Login.masterData.SelectedSQLQuery),_inputData),operation:operation};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"sqlquery\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.onExecuteClick=function(){// let paramVal;\nvar tempQuery=\"\";var paramFlag=true;var selectedRecord=_this.state.selectedRecord||{};if(_this.props.Login.screenName===\"Parameter for Results\"&&_this.state.param.size>0){if(selectedRecord!=null&&selectedRecord.ssqlquery!=null&&selectedRecord.ssqlquery.length>0){tempQuery=selectedRecord.ssqlquery;}else{tempQuery=_this.props.Login.masterData.SelectedSQLQuery.ssqlquery;}var paramMap=_this.state.param||new Map();var _iterator=_createForOfIteratorHelper(paramMap.entries()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var parameterMap=_step.value;var parameter=parameterMap[0];var parameterDetail=parameterMap[1];var paramVal=\"\";//console.log(\"para detail:\", parameterDetail);\nif(parameterDetail.lableName.toUpperCase().startsWith('D')){if(parameterDetail.Datetime!==null){paramVal=parameterDetail.Datetime.getFullYear()+\"-\";if(parameterDetail.Datetime.getMonth().toString().length>1){paramVal=paramVal+parseInt(parameterDetail.Datetime.getMonth()+1)+\"-\";}else{paramVal=paramVal+\"0\"+parseInt(parameterDetail.Datetime.getMonth()+1)+\"-\";}if(parameterDetail.Datetime.getDate().toString().length>1){paramVal=paramVal+parameterDetail.Datetime.getDate();}else{paramVal=paramVal+\"0\"+parameterDetail.Datetime.getDate();}}if(paramVal===undefined){paramFlag=false;tempQuery=tempQuery.replaceAll(parameter,null);}else if(paramVal.trim().length>0){//tempQuery = tempQuery.replace(parameter, \"P#\" + paramVal + \"$P\");\ntempQuery=tempQuery.replaceAll(parameter,\"'\"+paramVal+\"'\");}else{paramFlag=false;}}else{paramVal=parameterDetail.textValue;if(paramVal!==\"\"){if(parameterDetail.lableName.toUpperCase().startsWith('S')){if(tempQuery.indexOf(parameterDetail.lableName.trim()+'D$')>0){tempQuery=tempQuery.replaceAll('P$'+parameterDetail.lableName.trim()+'D$'+parameterDetail.DisplayParam+'T$'+parameterDetail.TableName+'$P',\"'\"+paramVal+\"'\");}else if(tempQuery.indexOf(parameterDetail.lableName.trim()+'T$')>0){tempQuery=tempQuery.replaceAll('P$'+parameterDetail.lableName.trim()+'T$'+parameterDetail.TableName+'$P',\"'\"+paramVal+\"'\");}else{tempQuery=tempQuery.replaceAll(parameter,\"'\"+paramVal+\"'\");}}else{if(tempQuery.indexOf(parameterDetail.lableName.trim()+'D$')>0){tempQuery=tempQuery.replaceAll('P$'+parameterDetail.lableName.trim()+'D$'+parameterDetail.DisplayParam.trim()+'T$'+parameterDetail.TableName+'$P',paramVal);}else if(tempQuery.indexOf(parameterDetail.lableName.trim()+'T$')>0){tempQuery=tempQuery.replaceAll('P$'+parameterDetail.lableName.trim()+'T$'+parameterDetail.TableName+'$P',paramVal);}else{tempQuery=tempQuery.replaceAll(parameter,paramVal);}}}else{paramFlag=false;}}}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(paramFlag===true){//console.log(\"temp:\", tempQuery);\nvar inputParam={slideOperation:_this.props.Login.slideOperation,screenFlag:_this.props.Login.screenFlag,query:tempQuery.trim(),userInfo:_this.props.Login.userInfo,data:{}};_this.props.executeUserQuery(inputParam);//this.props.executeUserQuery(tempQuery.trim(), this.props.Login.screenFlag, this.props.Login.slideOperation, this.props.Login.userInfo);\n}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_ENTERPAREMETRS\"}));}}else{if(selectedRecord.ssqlquery!==null&&selectedRecord.ssqlquery.length>0){var sqlQuery=selectedRecord.ssqlquery;if(sqlQuery.toUpperCase().indexOf('INSERT')>=0||sqlQuery.toUpperCase().indexOf('UPDATE')>=0||sqlQuery.toUpperCase().indexOf('DELETE')>=0||sqlQuery.toUpperCase().indexOf('TRUNCATE')>=0||sqlQuery.toUpperCase().indexOf('CREATE')>=0||sqlQuery.toUpperCase().indexOf('ALTER')>=0||sqlQuery.toUpperCase().indexOf('DROP')>=0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_CANNOTDATAMANIPULATION\"}));}else{if(sqlQuery.indexOf('P$')>0){var newQuery=sqlQuery;var _paramMap=new Map();while(newQuery.indexOf(\"P$\")!==-1){var paramLabelStartIndex=newQuery.indexOf(\"P$\");var paramLabelEndIndex=newQuery.indexOf(\"$P\");var paramLabel=newQuery.substring(paramLabelStartIndex+2,paramLabelEndIndex);if(paramLabel.indexOf(\"T$\")!==-1){var displayName=\"\";var localParam=\"\";var tableName=\"\";newQuery=newQuery.substring(paramLabelEndIndex+2,newQuery.length);if(paramLabel.indexOf(\"D$\")!==-1){localParam=paramLabel.substring(0,paramLabel.indexOf('D$'));displayName=paramLabel.substring(paramLabel.indexOf('D$')+2,paramLabel.indexOf('T$'));//tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\ntableName=paramLabel.substring(paramLabel.indexOf('T$')+2,paramLabel.length);}else{localParam=paramLabel.substring(0,paramLabel.indexOf('T$'));//tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\ntableName=paramLabel.substring(paramLabel.indexOf('T$')+2,paramLabel.length);}if(localParam.startsWith('d')||localParam.startsWith('D')){_paramMap.set(\"P$\"+localParam+\"$P\",{value:'DateTimePicker',lableName:localParam,//ID: param.length, \nDatetime:new Date(),textValue:'',TableName:tableName,DisplayParam:displayName,actuallableName:localParam.substring(1,localParam.length)});}else{_paramMap.set(\"P$\"+localParam+\"$P\",{value:'TextBox1',lableName:localParam,//ID: param.length, \ntextValue:'',TableName:tableName,DisplayParam:displayName,actuallableName:localParam.substring(1,localParam.length)});}}else{newQuery=newQuery.substring(paramLabelEndIndex+2,newQuery.length);if(paramLabel.startsWith('d')||paramLabel.startsWith('D')){_paramMap.set(\"P$\"+paramLabel+\"$P\",{value:'DateTimePicker',lableName:paramLabel,actuallableName:paramLabel.substring(1,paramLabel.length),//ID: param.length, \nDatetime:new Date()});}else{_paramMap.set(\"P$\"+paramLabel+\"$P\",{value:'TextBox1',lableName:paramLabel,//ID: param.length, \ntextValue:'',TableName:\"\",DisplayParam:\"\",actuallableName:paramLabel.substring(1,paramLabel.length)});}}}var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:\"Parameter for Results\",showExecute:true,showSave:true,showParam:true,showValidate:false,slideOperation:_this.props.Login.operation,slideResult:[],slideList:[],screenFlag:\"showQuery\",param:_paramMap// Dparam: Dparam, TBLName: TBLName\n}};_this.props.updateStore(updateInfo);}else{//query without parameters      \nvar _inputParam3={screenName:\"Results\",query:selectedRecord.ssqlquery.trim(),userInfo:_this.props.Login.userInfo,slideOperation:_this.props.Login.operation,screenFlag:\"showQuery\",data:{showExecute:false,showSave:false,showParam:true,showValidate:false,noSave:false,operation:\"view\",param:new Map(),screenName:\"Results\",slideOperation:_this.props.Login.operation,screenFlag:\"showQuery\"}};_this.props.executeUserQuery(_inputParam3);}}}}};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.resultStatus===\"Success\"){var operation=_this.props.Login.operation;var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;if(operation===\"update\"||operation===\"view\"&&_this.props.Login.slideOperation!==\"create\"){// edit\noperation=\"update\";postParam={inputListName:\"SQLQuery\",selectedObject:\"SelectedSQLQuery\",primaryKeyField:\"nsqlquerycode\"};var selectedRecord=_objectSpread({},_this.state.selectedRecord);delete selectedRecord.nformcode;inputData[\"sqlquery\"]=selectedRecord;_this.queryFieldList.map(function(item){return inputData[\"sqlquery\"][item]=_this.state.selectedRecord[item]?_this.state.selectedRecord[item]:\"\";});}else{//add               \ninputData[\"sqlquery\"]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};operation=\"create\";_this.queryFieldList.map(function(item){return inputData[\"sqlquery\"][item]=_this.state.selectedRecord[item];});}if(inputData[\"sqlquery\"].hasOwnProperty('esignpassword')){if(inputData[\"sqlquery\"]['esignpassword']===''){delete inputData[\"sqlquery\"]['esigncomments'];delete inputData[\"sqlquery\"]['esignpassword'];delete inputData[\"sqlquery\"]['agree'];}}inputData[\"sqlquery\"][\"ncharttypecode\"]=_this.state.selectedRecord[\"ncharttypecode\"]?_this.state.selectedRecord[\"ncharttypecode\"].value:\"-1\";inputData[\"sqlquery\"][\"nquerytypecode\"]=_this.props.Login.masterData.SelectedQueryType.nquerytypecode;///code removed\nvar inputParam={classUrl:\"sqlquery\",methodUrl:\"SQLQuery\",inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType,parentPopUpSize:\"lg\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_INAVLIDDATA\"}));}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.reloadData=function(){_this.searchRef.current.value=\"\";// const inputParam = {\n//     inputData: { \"userinfo\": this.props.Login.userInfo },\n//     classUrl: \"sqlquery\",\n//     methodUrl: \"SQLQuery\",\n//     displayName: \"IDS_SQLBUILDER\",\n//     userInfo: this.props.Login.userInfo\n// };\n// this.props.callService(inputParam);\nvar nquerytypecode=_this.props.Login.masterData.SelectedQueryType?_this.props.Login.masterData.SelectedQueryType.nquerytypecode:0;_this.props.comboChangeQueryType(nquerytypecode,_this.props.Login.masterData,_this.props.Login.userInfo);};var dataStateUserQuery={skip:0,take:10};_this.state={selectedRecord:{},error:\"\",// modalIsOpen: false,\nparameters:[],// objparam: [],\n// objDparam: [],\nqueryName:'',// queryResult: [],\nuserRoleControlRights:[],controlMap:new Map(),dataStateUserQuery:dataStateUserQuery,queryTypeName:'',selectedcombo:[],selectedTableType:[],moduleFormName:[],ntableTypeCode:-1,nFormCode:-1,queryType:[],tableType:[],chartList:[],skip:0,take:_this.props.Login.settings?_this.props.Login.settings[3]:25,//tableName : undefined,tableList:[]\noutputColumns:[],selectedTableList:[],tableColumnList:[],foreignTableColumnList:[],joinTableList:[],symbolsList:[],foreignTableList:[],count:0,foreignTableCount:[],selectedforeignTableList:[],filterColumnList:[],sqlQuery:false,// viewColumnList: [],\nswitchRecord:{}};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();// this.dropItemRef = React.createRef(); \n_this.queryFieldList=['nquerytypecode','ssqlqueryname','ssqlquery','sscreenrecordquery','sscreenheader','svaluemember','sdisplaymember','ncharttypecode'];// this.queryList = [];\n_this.searchFieldList=[\"ssqlqueryname\",\"ssqlquery\",\"sscreenheader\",\"svaluemember\",\"sdisplaymember\",\"squerytypename\",\"schartname\"];return _this;}_createClass(SQLBuilder,[{key:\"render\",value:function render(){var _this2=this;var _this$props$Login=this.props.Login,masterData=_this$props$Login.masterData,userInfo=_this$props$Login.userInfo;var addId=this.state.controlMap.has(\"AddSQLQuery\")&&this.state.controlMap.get(\"AddSQLQuery\").ncontrolcode;var editId=this.state.controlMap.has(\"EditSQLQuery\")&&this.state.controlMap.get(\"EditSQLQuery\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteSQLQuery\")&&this.state.controlMap.get(\"DeleteSQLQuery\").ncontrolcode;var executeId=this.state.controlMap.has(\"ExecuteSQLQuery\")&&this.state.controlMap.get(\"ExecuteSQLQuery\").ncontrolcode;var filterParam={inputListName:\"SQLQuery\",selectedObject:\"SelectedSQLQuery\",primaryKeyField:\"nsqlquerycode\",fetchUrl:\"sqlquery/getSQLQuery\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};this.validationColumnList=[{\"idsName\":\"IDS_SQLQUERYNAME\",\"dataField\":\"ssqlqueryname\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_SQLQUERY\",\"dataField\":\"ssqlquery\",\"width\":\"200px\",\"mandatory\":true}// { \"idsName\": \"IDS_SCREENHEADER\", \"dataField\": \"sscreenheader\", \"width\": \"200px\",\"mandatory\": true }, \n// { \"idsName\": \"IDS_SVALUEMEMBER\", \"dataField\": \"svaluemember\", \"width\": \"200px\",\"mandatory\": true },\n// { \"idsName\": \"IDS_SDISPLAYMEMBER\", \"dataField\": \"sdisplaymember\", \"width\": \"200px\",\"mandatory\": true },\n// { \"idsName\": \"IDS_CHARTTYPE\", \"dataField\": \"ncharttypecode\", \"width\": \"200px\",\"mandatory\": true },\n];if(this.state.selectedcombo.nquerytypecode&&this.state.selectedcombo.nquerytypecode.value===2){this.validationColumnList=[{\"idsName\":\"IDS_SQLQUERYNAME\",\"dataField\":\"ssqlqueryname\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_SQLQUERY\",\"dataField\":\"ssqlquery\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_SCREENHEADER\",\"dataField\":\"sscreenheader\",\"width\":\"200px\",\"mandatory\":true}];}if(this.state.selectedcombo.nquerytypecode&&this.state.selectedcombo.nquerytypecode.value===5){this.validationColumnList=[{\"idsName\":\"IDS_SQLQUERYNAME\",\"dataField\":\"ssqlqueryname\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_SQLQUERY\",\"dataField\":\"ssqlquery\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_SVALUEMEMBER\",\"dataField\":\"svaluemember\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_SDISPLAYMEMBER\",\"dataField\":\"sdisplaymember\",\"width\":\"200px\",\"mandatory\":true}];}if(this.state.selectedcombo.nquerytypecode&&this.state.selectedcombo.nquerytypecode.value===1){this.validationColumnList=[{\"idsName\":\"IDS_SQLQUERYNAME\",\"dataField\":\"ssqlqueryname\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_SQLQUERY\",\"dataField\":\"ssqlquery\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_CHARTTYPE\",\"dataField\":\"ncharttypecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];}var mandatoryFields=[];this.validationColumnList.forEach(function(item){return item.mandatory===true?mandatoryFields.push(item):\"\";});var breadCrumbData=this.state.filterData||[];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},breadCrumbData.length>0?/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(ListMaster,{masterData:this.props.Login.masterData,screenName:this.props.intl.formatMessage({id:\"IDS_SQLBUILDER\"}),masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.SQLQuery,getMasterDetail:function getMasterDetail(sqlQuery){return _this2.props.getSQLQueryDetail(sqlQuery,userInfo,masterData);},selectedMaster:this.props.Login.masterData.SelectedSQLQuery,primaryKeyField:\"nsqlquerycode\",mainField:\"ssqlqueryname\",firstField:\"squerytypename\",secondField:this.state.selectedcombo[\"nquerytypecode\"]&&this.state.selectedcombo[\"nquerytypecode\"].value===queryTypeFilter.LIMSDASHBOARDQUERY?\"schartname\":\"\",filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,openModal:function openModal(){return _this2.props.getSQLQueryComboService(\"\",\"create\",\"nsqlquerycode\",null,_this2.props.Login.masterData,_this2.props.Login.userInfo,_this2.props.Login.masterData.SelectedQueryType.nquerytypecode,//this.state.selectedcombo[\"nquerytypecode\"].value, \naddId);}//{() => this.props.addTest(\"create\", selectedTest, userInfo, addId, this.state.nfilterTestCategory)}\n,needAccordianFilter:false// skip={this.state.skip}\n// take={this.state.take}\n,handlePageChange:this.handlePageChange,showFilterIcon:true,showFilter:this.props.Login.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,showBuildQuery:true,builderData:this.getDatabaseTables,filterComponent:[{\"IDS_QUERYTYPEFILTER\":/*#__PURE__*/React.createElement(QueryTypeFilter,{queryType:this.state.queryType||[]//{this.props.Login.masterData.QueryType || []}\n,selectedRecord:this.state.selectedcombo||{},onComboChange:this.onComboChange,filterQueryType:this.props.Login.masterData.SelectedQueryType})}]})),/*#__PURE__*/React.createElement(Col,{md:\"8\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.SQLQuery&&this.props.Login.masterData.SQLQuery.length>0&&this.props.Login.masterData.SelectedSQLQuery&&Object.values(this.props.Login.masterData.SelectedSQLQuery).length>0?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedSQLQuery.ssqlqueryname),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined outline-secondary btn-sm ml-3\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:this.props.Login.masterData.SelectedSQLQuery.squerytypename}))),/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\",id:\"tooltip_list_wrap\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",name:\"editsqlqueryname\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,onClick:function onClick(){return _this2.getValidationForEdit(_this2.state.queryTypeName,\"update\",\"nsqlquerycode\",_this2.props.Login.masterData.SelectedSQLQuery.nsqlquerycode,_this2.props.Login.masterData,_this2.props.Login.userInfo,//this.state.selectedcombo[\"nquerytypecode\"].value, \n_this2.props.Login.masterData.SelectedQueryType.nquerytypecode,editId);},\"data-for\":\"tooltip_list_wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",name:\"deletesqlqueryname\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),\"data-for\":\"tooltip_list_wrap\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this2.ConfirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",name:\"executequery\",hidden:this.state.userRoleControlRights.indexOf(executeId)===-1,onClick:function onClick(){return _this2.executeQuery(\"SQLQuery\",_this2.props.Login.masterData.SelectedSQLQuery,\"execute\",executeId);},\"data-for\":\"tooltip_list_wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EXECUTEQUERY\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTasks})))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,this.props.Login.masterData.SelectedSQLQuery.nquerytypecode===queryTypeFilter.LIMSALERTQUERY&&/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_SCREENHEADER\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSQLQuery.sscreenheader))),this.props.Login.masterData.SelectedSQLQuery.nquerytypecode===queryTypeFilter.LIMSFILTERQUERY&&/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_SVALUEMEMBER\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSQLQuery.svaluemember))),this.props.Login.masterData.SelectedSQLQuery.nquerytypecode===queryTypeFilter.LIMSFILTERQUERY&&/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_SDISPLAYMEMBER\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSQLQuery.sdisplaymember))),/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_SQLQUERY\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSQLQuery.ssqlquery)))))):\"\"))))))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal//size={this.props.Login.parentPopUpSize}\n,size:this.props.Login.loadEsign?\"lg\":\"xl\",operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,onExecuteClick:this.onExecuteClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,showExecute:this.props.Login.showExecute,showParam:this.props.Login.showParam,noSave:this.props.Login.noSave,showValidate:this.props.Login.showValidate//graphView={this.props.Login.graphView}\n,showSave:this.props.Login.showSave,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.screenName===\"Parameter for Results\"?[]:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):(this.props.Login.screenName===\"Parameter for Results\"||this.props.Login.screenName===\"Results\")&&this.props.Login.showParam?/*#__PURE__*/React.createElement(AddParameter,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.handleText,onComboChange:this.upDateComboboxValue,onChange:this.handleDateChange//parameters={this.state.parameters || []}\n,parameters:this.state.param||new Map(),queryTypeCode:this.props.Login.masterData.SelectedQueryType.nquerytypecode// queryTypeCode={this.state.selectedcombo[\"nquerytypecode\"].value}\n,sscreenheader:this.props.Login.masterData.SelectedSQLQuery===null?\"\":this.props.Login.masterData.SelectedSQLQuery.sscreenheader,slideResult:this.props.Login.slideResult,slideList:this.props.Login.slideList,resultStatus:this.props.Login.resultStatus,dataStateUserQuery:this.state.dataStateUserQuery,userQueryDataStateChange:this.userQueryDataStateChange,controlMap:this.state.controlMap}):/*#__PURE__*/React.createElement(AddQuery,{selectedRecord:this.state.selectedRecord||{},selectedTableType:this.state.selectedTableType||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,chartList:this.state.chartList||[],tableList:this.props.Login.tableList||[],tableName:this.props.Login.tableName||[]//tableList={}\n,tableType:this.state.tableType||[],moduleFormName:this.state.moduleFormName||[],tableTypeCode:this.state.selectedTableType[\"ntabletypecode\"]?this.state.selectedTableType[\"ntabletypecode\"].value:0// onColumnNameDrop={this.onColumnNameDrop}\n,onDrop:this.onDrop.bind(this)//queryTypeCode={this.state.selectedcombo[\"nquerytypecode\"].value}\n,queryTypeCode:this.props.Login.masterData.SelectedQueryType.nquerytypecode})}),this.props.Login.openPortalModal&&/*#__PURE__*/React.createElement(PortalModalSlideout,{show:this.props.Login.openPortalModal,closeModal:this.closePortalModal,screenName:this.props.Login.screenName,addComponent:/*#__PURE__*/React.createElement(BuildQuery,{selectedRecord:this.state.selectedRecord||{},databaseTableList:this.props.Login.databaseTableList,tableColumnList:this.state.tableColumnList,foreignTableList:this.state.foreignTableList||[],foreignTableColumnList:this.props.Login.foreignTableColumnList||[]// validationData={validationData}\n,count:this.state.count,foreignTableCount:this.state.foreignTableCount,sqlQuery:this.state.sqlQuery,viewMasterListByRule:this.props.Login.viewMasterListByRule||[],userInfo:this.props.Login.userInfo,onExecuteRule:this.onExecuteRule,onInputChange:this.onInputChange,deleteRule:this.deleteRule,clearRule:this.clearRule,resetRule:this.resetRule,onSymbolChange:this.onSymbolChange// onForeignTableChange={this.onForeignTableChange}\n// addJoinTable={this.addJoinTable}\n,onQueryTypeOnclick:this.onQueryTypeOnclick,onRuleChange:this.onRuleChange,onViewComboChange:this.onViewComboChange,addRule:this.addRule,onConditionClick:this.onConditionClick,onMasterDataChange:this.onMasterDataChange,handleFilterDateChange:this.handleFilterDateChange,databaseviewList:this.props.Login.databaseviewList,addRuleList:this.props.Login.addRuleList||[],viewColumnListByRule:this.props.Login.viewColumnListByRule||[],masterdata:this.props.Login.masterdata,switchRecord:this.state.switchRecord})}));}},{key:\"clearSelectedRule\",value:function clearSelectedRule(selectedRecord,index){selectedRecord[\"sinputname_\"+index]&&delete selectedRecord[\"sinputname_\"+index];selectedRecord[\"ssymbolname_\"+index]&&delete selectedRecord[\"ssymbolname_\"+index];selectedRecord[\"snumericinput_\"+index]&&delete selectedRecord[\"snumericinput_\"+index];selectedRecord[\"columnname_\"+index]&&delete selectedRecord[\"columnname_\"+index];selectedRecord[\"snumericinputtwo_\"+index]&&delete selectedRecord[\"snumericinputtwo_\"+index];selectedRecord[\"dateinput_\"+index]&&delete selectedRecord[\"dateinput_\"+index];selectedRecord[\"dateinputtwo_\"+index]&&delete selectedRecord[\"dateinputtwo_\"+index];}},{key:\"getTablesName\",value:function getTablesName(selectedRecord){return function(dispatch){var url=\"sqlquery/getTablesFromSchema\";rsapi.post(url,{\"tabletypecode\":parseInt(selectedRecord[\"ntabletypecode\"].value),\"moduleformcode\":parseInt(selectedRecord[\"nformcode\"].value),\"userinfo\":this.props.Login.userInfo}).then(function(response){var tableName=undefined;var tableNameOnly=[];Object.values(response[1].data[0]).forEach(function(p){if(p.stable!==tableName){tableName=p.stable;tableNameOnly.push({tableName:tableName});}});dispatch({type:DEFAULT_RETURN,payload:{tableList:response[0].data[0]||[],tableName:tableNameOnly||[]}});//this.setState({ tableList: response[0].data[0] || [], tableName: tableNameOnly || []})\n}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}},{key:\"getModuleFormName\",value:function getModuleFormName(TableTypeCode){var _this3=this;var url=\"sqlquery/getModuleFormName\";rsapi.post(url,{\"tabletypecode\":parseInt(TableTypeCode),\"userinfo\":this.props.Login.userInfo}).then(function(response){_this3.setState({moduleFormName:response.data[0]});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}},{key:\"onDrop\",value:function onDrop(data){var selectedRecord=this.state.selectedRecord;var sqlquery=selectedRecord.ssqlquery?selectedRecord.ssqlquery:\"\";selectedRecord.ssqlquery=data.dragtable?\"\".concat(sqlquery,\" \").concat(data.dragtable):\"\".concat(sqlquery,\" \").concat(data.dragcolumn);this.setState({selectedRecord:selectedRecord});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this$state=this.state,selectedRecord=_this$state.selectedRecord,dataStateUserQuery=_this$state.dataStateUserQuery,userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,filterData=_this$state.filterData,queryType=_this$state.queryType,chartList=_this$state.chartList,moduleFormName=_this$state.moduleFormName,tableType=_this$state.tableType,selectedTableType=_this$state.selectedTableType,param=_this$state.param,tableColumnList=_this$state.tableColumnList,selectedTableList=_this$state.selectedTableList,foreignTableCount=_this$state.foreignTableCount,foreignTableList=_this$state.foreignTableList,count=_this$state.count,sqlQuery=_this$state.sqlQuery;var updateState=false;// const masterData = this.props.Login.masterData;\nif(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){updateState=true;selectedRecord=this.props.Login.selectedRecord;}if(this.props.Login.sqlQuery!==previousProps.Login.sqlQuery){updateState=true;sqlQuery=this.props.Login.sqlQuery;}if(this.props.Login.tableColumnList!==previousProps.Login.tableColumnList){updateState=true;tableColumnList=this.props.Login.tableColumnList;}if(this.props.Login.slideResult!==previousProps.Login.slideResult){dataStateUserQuery={skip:0,take:10};updateState=true;}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRight=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRight.push(item.ncontrolcode);});}var controlMap1=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);// if (this.props.Login.masterData.QueryType !== previousProps.Login.masterData.QueryType) {\nvar queryTypeMap=constructOptionList(this.props.Login.masterData.QueryType||[],\"nquerytypecode\",\"squerytypename\",\"nsorter\",\"ascending\",false);var QueryTypeList=queryTypeMap.get(\"OptionList\");// const selectedcombo = {\n//     nquerytypecode: QueryTypeList.length > 0 ? {\n//         \"value\": QueryTypeList[0].item.nquerytypecode,\n//         \"label\": QueryTypeList[0].item.squerytypename\n//     } : this.state.selectedcombo[\"nquerytypecode\"]\n// }\n// }\nupdateState=true;userRoleControlRights=userRoleControlRight;controlMap=controlMap1;filterData=this.generateBreadCrumData();queryType=QueryTypeList;}else{filterData=this.generateBreadCrumData();if(this.props.Login.chartList!==previousProps.Login.chartList||this.props.Login.moduleFormName!==previousProps.Login.moduleFormName){var chartListMap=constructOptionList(this.props.Login.chartList||[],\"ncharttypecode\",\"schartname\",undefined,undefined,undefined);var chartTypeList=chartListMap.get(\"OptionList\");var moduleFormNameMap=constructOptionList(this.props.Login.moduleFormName||[],\"nformcode\",\"sformname\",undefined,undefined,undefined);var moduleFormNameList=moduleFormNameMap.get(\"OptionList\");updateState=true;chartList=chartTypeList;moduleFormName=moduleFormNameList;}if(this.props.Login.masterData.QueryType!==previousProps.Login.masterData.QueryType){var _queryTypeMap=constructOptionList(this.props.Login.masterData.QueryType||[],\"nquerytypecode\",\"squerytypename\",\"nsorter\",\"ascending\",false);var _QueryTypeList=_queryTypeMap.get(\"OptionList\");// const selectedcombo = {\n//                         nquerytypecode: QueryTypeList.length > 0 ? {\n//                             \"value\": QueryTypeList[0].item.nquerytypecode,\n//                             \"label\": QueryTypeList[0].item.squerytypename\n//                         } : this.state.selectedcombo[\"nquerytypecode\"]\n//}\nupdateState=true;queryType=_QueryTypeList;//selectedcombo , \n}if(this.props.Login.tableType!==previousProps.Login.tableType){var tableTypeMap=constructOptionList(this.props.Login.tableType||[],\"ntabletypecode\",\"stabletype\",undefined,undefined,undefined);var tableTypeList=tableTypeMap.get(\"OptionList\");selectedTableType={ntabletypecode:tableTypeList.length>0?{\"value\":tableTypeList[0].item.ntabletypecode,\"label\":tableTypeList[0].item.stabletype}:this.state.selectedTableType[\"ntabletypecode\"]};updateState=true;tableType=tableTypeList;}if(this.props.Login.masterData.SelectedQueryType!==previousProps.Login.masterData.SelectedQueryType){updateState=true;}if(this.props.Login.param!==previousProps.Login.param){updateState=true;param=this.props.Login.param;}}if(updateState){this.setState({selectedRecord:selectedRecord,dataStateUserQuery:dataStateUserQuery,userRoleControlRights:userRoleControlRights,controlMap:controlMap,filterData:filterData,queryType:queryType,chartList:chartList,moduleFormName:moduleFormName,tableType:tableType,selectedTableType:selectedTableType,param:param,tableColumnList:tableColumnList,selectedTableList:selectedTableList,foreignTableCount:foreignTableCount,foreignTableList:foreignTableList,count:count,sqlQuery:sqlQuery});}}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(){var breadCrumbData=[];if(this.props.Login.masterData&&this.props.Login.masterData.SelectedQueryType){breadCrumbData.push({\"label\":\"IDS_QUERYTYPE\",\"value\":this.props.Login.masterData.SelectedQueryType?this.props.Login.masterData.SelectedQueryType.squerytypename:\"\"//this.props.intl.formatMessage({ id: this.props.Login.masterData.SelectedQueryType.squerytypename}) : \"\"\n});}return breadCrumbData;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined,testData:{},parameterData:{},otherTestData:{},formulaData:{}}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;}}]);return SQLBuilder;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,filterColumnData:filterColumnData,validateEsignCredential:validateEsignCredential,getSQLQueryDetail:getSQLQueryDetail,getSQLQueryComboService:getSQLQueryComboService,comboChangeQueryType:comboChangeQueryType,executeUserQuery:executeUserQuery,comboColumnValues:comboColumnValues,getColumnNamesByTableName:getColumnNamesByTableName,getTablesName:getTablesName,getModuleFormName:getModuleFormName,getDatabaseTables:getDatabaseTables,executeQuery:executeQuery,getForeignTable:getForeignTable,getViewColumns:getViewColumns,getMasterData:getMasterData})(injectIntl(SQLBuilder));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dashboard/SqlBuilder.jsx"],"names":["React","Component","connect","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faTrashAlt","faPencilAlt","faTasks","faDatabase","toast","ListMaster","SlideOutModal","Esign","AddQuery","AddParameter","QueryTypeFilter","callService","crudMaster","validateEsignCredential","updateStore","getSQLQueryDetail","getSQLQueryComboService","filterColumnData","comboChangeQueryType","executeUserQuery","comboColumnValues","getColumnNamesByTableName","getTablesName","getModuleFormName","getDatabaseTables","executeQuery","getForeignTable","getViewColumns","getMasterData","DEFAULT_RETURN","transactionStatus","queryTypeFilter","tableType","ColumnType","constructOptionList","getControlMap","showEsign","ReadOnlyText","ContentPanel","rsapi","ConfirmMessage","Affix","BreadcrumbComponent","ListWrapper","ReactTooltip","PortalModalSlideout","BuildQuery","jsonSql","require","separatedValues","SQLBuilder","props","userQueryDataStateChange","event","setState","dataStateUserQuery","dataState","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deleteRecord","Login","masterData","SelectedSQLQuery","handleFilterDateChange","dateName","dateValue","selectedRecord","state","Date","generateFilterQuery","onViewComboChange","comboData","fieldName","inputParam","sviewname","value","userinfo","userInfo","onRuleChange","index","clearSelectedRule","sqlQuery","oldselectedRecord","tableData","items","mastertablename","needmasterdata","data","nflag","valuemember","displaymember","optionId","columntype","COMBO","stablename","foriegntablename","scolumnname","sforeigncolumnname","TEXTINPUT","onMasterDataChange","addRule","type","addRuleList","length","arrayLength","updateInfo","typeName","viewColumnListByRule","viewColumnList","info","closePortalModal","openPortalModal","count","onExecuteRule","sgeneratedquery","deleteRule","clearRule","resetRule","onSymbolChange","oldSelectedRecord","symbolType","onInputChange","inputValue","target","test","name","setDialect","databaseCondition","displayCondition","orDisplayConditionArray","orConditionArray","forEach","symbolObject","current_button_and","current_button_or","next_button_and","next_button_or","inputname","symbolname","symbol","numericinput","columnLabel","label","columnValue","snumericinputtwo","columnName","undefined","dateinput","dateinputtwo","replacewith","indexOf","substr","push","tempValue","tempValue1","map","item","data1","isInputVisible","$or","databaseSQLQuery","build","table","condition","displaySQLQuery","query","onConditionClick","onQueryTypeOnclick","getValidationForEdit","screenName","operation","primaryKeyName","primaryKeyValue","queryTypeCode","ncontrolCode","post","then","response","confirmAlertForEdit","warn","catch","error","status","message","editId","queryTypeName","nsqlquerycode","SelectedQueryType","nquerytypecode","closeAlert","showConfirmAlertForEdit","openFilter","showFilter","closeFilter","onFilterSubmit","searchRef","current","handlePageChange","skip","take","onComboChange","selectedTableType","ALL","updateInfor","tableName","moduleFormName","selectedcombo","onEsignInputOnChange","checked","YES","NO","onInputOnChange","ACTIVE","DEACTIVE","onNumericInputChange","closeModal","loadEsign","openModal","showExecute","showParam","showValidate","showSave","slideOperation","parentPopUpSize","resultStatus","param","size","screenFlag","LIMSDASHBOARDQUERY","LIMSALERTQUERY","LIMSBARCODEQUERY","LIMSGENERALQUERY","upDateComboboxValue","i","Value","paramMap","Map","get","textValue","handleDateChange","date","Datetime","handleText","methodUrl","ssqlquery","toUpperCase","newQuery","paramLabelStartIndex","paramLabelEndIndex","paramLabel","substring","displayName","localParam","startsWith","set","lableName","TableName","DisplayParam","actuallableName","slideResult","slideList","trim","noSave","postParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","classUrl","inputData","toLowerCase","userRoleControlRights","nformcode","screenData","onExecuteClick","tempQuery","paramFlag","entries","parameterMap","parameter","parameterDetail","paramVal","getFullYear","getMonth","toString","parseInt","getDate","replaceAll","onSaveClick","saveType","formRef","queryFieldList","nmastersitecode","hasOwnProperty","validateEsign","sreason","password","reloadData","parameters","queryName","controlMap","ntableTypeCode","nFormCode","queryType","chartList","settings","outputColumns","selectedTableList","tableColumnList","foreignTableColumnList","joinTableList","symbolsList","foreignTableList","foreignTableCount","selectedforeignTableList","filterColumnList","switchRecord","createRef","searchFieldList","addId","has","ncontrolcode","executeId","filterParam","validationColumnList","mandatoryFields","mandatory","breadCrumbData","filterData","searchedData","SQLQuery","Object","values","ssqlqueryname","squerytypename","sscreenheader","LIMSFILTERQUERY","svaluemember","sdisplaymember","masterStatus","tableList","onDrop","bind","databaseTableList","viewMasterListByRule","databaseviewList","masterdata","dispatch","url","tableNameOnly","p","stable","payload","TableTypeCode","sqlquery","dragtable","dragcolumn","previousProps","updateState","userRoleControlRight","controlMap1","queryTypeMap","QueryType","QueryTypeList","generateBreadCrumData","chartListMap","chartTypeList","moduleFormNameMap","moduleFormNameList","tableTypeMap","tableTypeList","ntabletypecode","stabletype","modalName","testData","parameterData","otherTestData","formulaData","errorCode","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faPencilAlt, faTasks, faDatabase } from '@fortawesome/free-solid-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport AddQuery from './AddQuery';\r\nimport AddParameter from './AddParameter';\r\nimport QueryTypeFilter from './QueryTypeFilter';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getSQLQueryDetail,\r\n    getSQLQueryComboService, filterColumnData, comboChangeQueryType, executeUserQuery,\r\n    comboColumnValues, getColumnNamesByTableName, getTablesName, getModuleFormName,\r\n    getDatabaseTables, executeQuery, getForeignTable, getViewColumns, getMasterData\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus, queryTypeFilter, tableType, ColumnType } from '../../components/Enumeration';\r\nimport { constructOptionList, getControlMap, showEsign } from '../../components/CommonScript';\r\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\r\nimport rsapi from '../../rsapi';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { Affix } from 'rsuite';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport PortalModalSlideout from '../../components/portal-modal/portal-modal-slideout';\r\nimport BuildQuery from './BuildQuery';\r\n// import {validationData} from './QueryBuilderData';\r\n\r\nconst jsonSql = require('json-sql')({separatedValues: true});\r\n\r\nclass SQLBuilder extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const dataStateUserQuery = {\r\n            skip: 0,\r\n            take: 10,\r\n        };\r\n        this.state = ({\r\n            selectedRecord: {},\r\n            error: \"\",\r\n            // modalIsOpen: false,\r\n            parameters: [],\r\n            // objparam: [],\r\n            // objDparam: [],\r\n            queryName: '',\r\n            // queryResult: [],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            dataStateUserQuery: dataStateUserQuery,\r\n            queryTypeName: '',\r\n            selectedcombo: [],\r\n            selectedTableType: [],\r\n            moduleFormName: [],\r\n            ntableTypeCode: -1,\r\n            nFormCode: -1,\r\n            queryType: [],\r\n            tableType: [],\r\n            chartList: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings ?\r\n                this.props.Login.settings[3] : 25, //tableName : undefined,tableList:[]\r\n            outputColumns: [],\r\n            selectedTableList: [],\r\n            tableColumnList: [],\r\n            foreignTableColumnList: [],\r\n            joinTableList: [],\r\n            symbolsList: [],\r\n            foreignTableList: [],\r\n            count: 0,\r\n            foreignTableCount: [],\r\n            selectedforeignTableList: [],\r\n            filterColumnList: [],\r\n            sqlQuery: false,\r\n            // viewColumnList: [],\r\n            switchRecord: {}\r\n        });\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        // this.dropItemRef = React.createRef(); \r\n\r\n        this.queryFieldList = ['nquerytypecode', 'ssqlqueryname', 'ssqlquery',\r\n            'sscreenrecordquery', 'sscreenheader', 'svaluemember', 'sdisplaymember', 'ncharttypecode'];\r\n        // this.queryList = [];\r\n\r\n        this.searchFieldList = [\"ssqlqueryname\", \"ssqlquery\", \"sscreenheader\", \"svaluemember\", \"sdisplaymember\",\r\n            \"squerytypename\", \"schartname\"];\r\n            \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    userQueryDataStateChange = (event) => {\r\n        this.setState({\r\n            dataStateUserQuery: event.dataState\r\n        });\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(\"SQLQuery\", this.props.Login.masterData.SelectedSQLQuery, \"delete\", deleteId));\r\n    }\r\n\r\n\r\n    render() {\r\n        const { masterData, userInfo } = this.props.Login;\r\n        const addId = this.state.controlMap.has(\"AddSQLQuery\") && this.state.controlMap.get(\"AddSQLQuery\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditSQLQuery\") && this.state.controlMap.get(\"EditSQLQuery\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteSQLQuery\") && this.state.controlMap.get(\"DeleteSQLQuery\").ncontrolcode;\r\n        const executeId = this.state.controlMap.has(\"ExecuteSQLQuery\") && this.state.controlMap.get(\"ExecuteSQLQuery\").ncontrolcode;\r\n\r\n        const filterParam = {\r\n            inputListName: \"SQLQuery\", selectedObject: \"SelectedSQLQuery\", primaryKeyField: \"nsqlquerycode\",\r\n            fetchUrl: \"sqlquery/getSQLQuery\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n        };\r\n        this.validationColumnList = [\r\n            { \"idsName\": \"IDS_SQLQUERYNAME\", \"dataField\": \"ssqlqueryname\", \"width\": \"200px\", \"mandatory\": true },\r\n            { \"idsName\": \"IDS_SQLQUERY\", \"dataField\": \"ssqlquery\", \"width\": \"200px\", \"mandatory\": true },\r\n            // { \"idsName\": \"IDS_SCREENHEADER\", \"dataField\": \"sscreenheader\", \"width\": \"200px\",\"mandatory\": true }, \r\n            // { \"idsName\": \"IDS_SVALUEMEMBER\", \"dataField\": \"svaluemember\", \"width\": \"200px\",\"mandatory\": true },\r\n            // { \"idsName\": \"IDS_SDISPLAYMEMBER\", \"dataField\": \"sdisplaymember\", \"width\": \"200px\",\"mandatory\": true },\r\n            // { \"idsName\": \"IDS_CHARTTYPE\", \"dataField\": \"ncharttypecode\", \"width\": \"200px\",\"mandatory\": true },\r\n        ]\r\n        if (this.state.selectedcombo.nquerytypecode && this.state.selectedcombo.nquerytypecode.value === 2) {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_SQLQUERYNAME\", \"dataField\": \"ssqlqueryname\", \"width\": \"200px\", \"mandatory\": true },\r\n                { \"idsName\": \"IDS_SQLQUERY\", \"dataField\": \"ssqlquery\", \"width\": \"200px\", \"mandatory\": true },\r\n                { \"idsName\": \"IDS_SCREENHEADER\", \"dataField\": \"sscreenheader\", \"width\": \"200px\", \"mandatory\": true },\r\n            ]\r\n        }\r\n        if (this.state.selectedcombo.nquerytypecode && this.state.selectedcombo.nquerytypecode.value === 5) {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_SQLQUERYNAME\", \"dataField\": \"ssqlqueryname\", \"width\": \"200px\", \"mandatory\": true },\r\n                { \"idsName\": \"IDS_SQLQUERY\", \"dataField\": \"ssqlquery\", \"width\": \"200px\", \"mandatory\": true },\r\n                { \"idsName\": \"IDS_SVALUEMEMBER\", \"dataField\": \"svaluemember\", \"width\": \"200px\", \"mandatory\": true },\r\n                { \"idsName\": \"IDS_SDISPLAYMEMBER\", \"dataField\": \"sdisplaymember\", \"width\": \"200px\", \"mandatory\": true },\r\n            ]\r\n        }\r\n        if (this.state.selectedcombo.nquerytypecode && this.state.selectedcombo.nquerytypecode.value === 1) {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_SQLQUERYNAME\", \"dataField\": \"ssqlqueryname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_SQLQUERY\", \"dataField\": \"ssqlquery\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_CHARTTYPE\", \"dataField\": \"ncharttypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n            ]\r\n        }\r\n        const mandatoryFields = [];\r\n        this.validationColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n\r\n        const breadCrumbData = this.state.filterData || [];\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    {/* <div className=\"client-listing-wrap mtop-4\"> */}\r\n                    {/* Start of get display*/}\r\n                    <Row noGutters={true}>\r\n                        <Col md=\"4\">\r\n                            <ListMaster\r\n                                masterData={this.props.Login.masterData}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_SQLBUILDER\" })}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.SQLQuery}\r\n                                getMasterDetail={(sqlQuery) => this.props.getSQLQueryDetail(sqlQuery, userInfo, masterData)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedSQLQuery}\r\n                                primaryKeyField=\"nsqlquerycode\"\r\n                                mainField=\"ssqlqueryname\"\r\n                                firstField=\"squerytypename\"\r\n                                secondField={this.state.selectedcombo[\"nquerytypecode\"] && this.state.selectedcombo[\"nquerytypecode\"].value === queryTypeFilter.LIMSDASHBOARDQUERY ? \"schartname\" : \"\"}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getSQLQueryComboService(\"\", \"create\", \"nsqlquerycode\", null,\r\n                                    this.props.Login.masterData, this.props.Login.userInfo,\r\n                                    this.props.Login.masterData.SelectedQueryType.nquerytypecode,\r\n                                    //this.state.selectedcombo[\"nquerytypecode\"].value, \r\n                                    addId)} //{() => this.props.addTest(\"create\", selectedTest, userInfo, addId, this.state.nfilterTestCategory)}\r\n                                needAccordianFilter={false}\r\n                                // skip={this.state.skip}\r\n                                // take={this.state.take}\r\n                                handlePageChange={this.handlePageChange}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showBuildQuery={true}\r\n                                builderData={this.getDatabaseTables}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_QUERYTYPEFILTER\":\r\n                                            <QueryTypeFilter\r\n                                                queryType={this.state.queryType || []}//{this.props.Login.masterData.QueryType || []}\r\n                                                selectedRecord={this.state.selectedcombo || {}}\r\n                                                onComboChange={this.onComboChange}\r\n                                                filterQueryType={this.props.Login.masterData.SelectedQueryType}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md=\"8\">\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                            {this.props.Login.masterData.SQLQuery && this.props.Login.masterData.SQLQuery.length > 0 && this.props.Login.masterData.SelectedSQLQuery && Object.values(this.props.Login.masterData.SelectedSQLQuery).length > 0 ?\r\n                                                <>\r\n                                                    <Card.Header>\r\n                                                        <Card.Title className=\"product-title-main\">\r\n                                                            {this.props.Login.masterData.SelectedSQLQuery.ssqlqueryname}\r\n                                                        </Card.Title>\r\n                                                        <Card.Subtitle>\r\n                                                            <div className=\"d-flex product-category\">\r\n                                                                <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                    <span className={`btn btn-outlined outline-secondary btn-sm ml-3`}>\r\n                                                                        <FormattedMessage id={this.props.Login.masterData.SelectedSQLQuery.squerytypename} />\r\n                                                                    </span>\r\n                                                                </h2>\r\n                                                                <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n                                                                <div className=\"d-inline\">\r\n                                                                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"editsqlqueryname\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                        onClick={() => this.getValidationForEdit(this.state.queryTypeName,\r\n                                                                            \"update\", \"nsqlquerycode\",\r\n                                                                            this.props.Login.masterData.SelectedSQLQuery.nsqlquerycode,\r\n                                                                            this.props.Login.masterData, this.props.Login.userInfo,\r\n                                                                            //this.state.selectedcombo[\"nquerytypecode\"].value, \r\n                                                                            this.props.Login.masterData.SelectedQueryType.nquerytypecode,\r\n                                                                            editId)}\r\n                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}>\r\n\r\n                                                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                                    </Nav.Link>\r\n                                                                    {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"buildquery\"\r\n                                                                        // hidden={this.state.userRoleControlRights.indexOf(executeId) === -1}\r\n                                                                        onClick={() => this.getDatabaseTables()}\r\n                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_BUILDQUERY\" })}>\r\n                                                                        <FontAwesomeIcon icon={faDatabase} />\r\n                                                                    </Nav.Link> */}\r\n                                                                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"deletesqlqueryname\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                        onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                    </Nav.Link>\r\n                                                                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"executequery\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(executeId) === -1}\r\n                                                                        onClick={() => this.executeQuery(\"SQLQuery\", this.props.Login.masterData.SelectedSQLQuery, \"execute\", executeId)}\r\n                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EXECUTEQUERY\" })}>\r\n                                                                        <FontAwesomeIcon icon={faTasks} />\r\n                                                                    </Nav.Link>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Card.Subtitle>\r\n                                                    </Card.Header>\r\n                                                    <Card.Body>\r\n                                                        <Row>\r\n                                                            {this.props.Login.masterData.SelectedSQLQuery.nquerytypecode === queryTypeFilter.LIMSALERTQUERY &&\r\n                                                                <Col md=\"6\">\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_SCREENHEADER\" })}</FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedSQLQuery.sscreenheader}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                            }\r\n                                                            {this.props.Login.masterData.SelectedSQLQuery.nquerytypecode === queryTypeFilter.LIMSFILTERQUERY &&\r\n                                                                <Col md=\"6\">\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_SVALUEMEMBER\" })}</FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedSQLQuery.svaluemember}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                            }\r\n                                                            {this.props.Login.masterData.SelectedSQLQuery.nquerytypecode === queryTypeFilter.LIMSFILTERQUERY &&\r\n                                                                <Col md=\"6\">\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_SDISPLAYMEMBER\" })}</FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedSQLQuery.sdisplaymember}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                            }\r\n                                                            <Col md=\"12\">\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_SQLQUERY\" })}</FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.SelectedSQLQuery.ssqlquery}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Card.Body>\r\n                                                </>\r\n                                                : \"\"\r\n                                            }\r\n                                        </Card>\r\n                                    </ContentPanel>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {/* </div> */}\r\n                {/* End of get display */}\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        //size={this.props.Login.parentPopUpSize}\r\n                        size={this.props.Login.loadEsign ? \"lg\" : \"xl\"}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        onExecuteClick={this.onExecuteClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        showExecute={this.props.Login.showExecute}\r\n                        showParam={this.props.Login.showParam}\r\n                        noSave={this.props.Login.noSave}\r\n                        showValidate={this.props.Login.showValidate}\r\n                        //graphView={this.props.Login.graphView}\r\n                        showSave={this.props.Login.showSave}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenName === \"Parameter for Results\" ? [] : mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : (this.props.Login.screenName === \"Parameter for Results\" || this.props.Login.screenName === \"Results\") && this.props.Login.showParam ?\r\n                                <AddParameter\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.handleText}\r\n                                    onComboChange={this.upDateComboboxValue}\r\n                                    onChange={this.handleDateChange}\r\n                                    //parameters={this.state.parameters || []}\r\n                                    parameters={this.state.param || new Map()}\r\n                                    queryTypeCode={this.props.Login.masterData.SelectedQueryType.nquerytypecode}\r\n                                    // queryTypeCode={this.state.selectedcombo[\"nquerytypecode\"].value}\r\n                                    sscreenheader={this.props.Login.masterData.SelectedSQLQuery === null ? \"\" : this.props.Login.masterData.SelectedSQLQuery.sscreenheader}\r\n                                    slideResult={this.props.Login.slideResult}\r\n                                    slideList={this.props.Login.slideList}\r\n                                    resultStatus={this.props.Login.resultStatus}\r\n                                    dataStateUserQuery={this.state.dataStateUserQuery}\r\n                                    userQueryDataStateChange={this.userQueryDataStateChange}\r\n                                    controlMap={this.state.controlMap}\r\n                                />\r\n\r\n                                :\r\n                                <AddQuery\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    selectedTableType={this.state.selectedTableType || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    chartList={this.state.chartList || []}\r\n                                    tableList={this.props.Login.tableList || []}\r\n                                    tableName={this.props.Login.tableName || []}\r\n                                    //tableList={}\r\n                                    tableType={this.state.tableType || []}\r\n                                    moduleFormName={this.state.moduleFormName || []}\r\n                                    tableTypeCode={this.state.selectedTableType[\"ntabletypecode\"] ? this.state.selectedTableType[\"ntabletypecode\"].value : 0}\r\n                                    // onColumnNameDrop={this.onColumnNameDrop}\r\n                                    onDrop={this.onDrop.bind(this)}\r\n                                    //queryTypeCode={this.state.selectedcombo[\"nquerytypecode\"].value}\r\n                                    queryTypeCode={this.props.Login.masterData.SelectedQueryType.nquerytypecode}\r\n                                />\r\n                        }\r\n\r\n                    />\r\n                }\r\n\r\n                {\r\n                    this.props.Login.openPortalModal &&\r\n                    <PortalModalSlideout\r\n                        show={this.props.Login.openPortalModal}\r\n                        closeModal={this.closePortalModal}\r\n                        screenName={this.props.Login.screenName}\r\n                        addComponent={\r\n                            <BuildQuery\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                databaseTableList={this.props.Login.databaseTableList}\r\n                                tableColumnList={this.state.tableColumnList}\r\n                                foreignTableList={this.state.foreignTableList || []}\r\n                                foreignTableColumnList={this.props.Login.foreignTableColumnList || []}\r\n                                // validationData={validationData}\r\n                                count={this.state.count}\r\n                                foreignTableCount={this.state.foreignTableCount}\r\n                                sqlQuery={this.state.sqlQuery}\r\n                                viewMasterListByRule={this.props.Login.viewMasterListByRule || []}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                onExecuteRule={this.onExecuteRule}\r\n                                onInputChange={this.onInputChange}\r\n                                deleteRule={this.deleteRule}\r\n                                clearRule={this.clearRule}\r\n                                resetRule={this.resetRule}\r\n                                onSymbolChange={this.onSymbolChange}\r\n                                // onForeignTableChange={this.onForeignTableChange}\r\n                                // addJoinTable={this.addJoinTable}\r\n                                onQueryTypeOnclick={this.onQueryTypeOnclick}\r\n\r\n                                onRuleChange={this.onRuleChange}\r\n                                onViewComboChange={this.onViewComboChange}\r\n                                addRule={this.addRule}\r\n                                onConditionClick={this.onConditionClick}\r\n                                onMasterDataChange={this.onMasterDataChange}\r\n                                handleFilterDateChange={this.handleFilterDateChange}\r\n                                databaseviewList={this.props.Login.databaseviewList}\r\n                                addRuleList={this.props.Login.addRuleList || []}\r\n                                viewColumnListByRule={this.props.Login.viewColumnListByRule || []}\r\n                                masterdata={this.props.Login.masterdata}\r\n                                switchRecord={this.state.switchRecord}\r\n                            />\r\n                        }\r\n                    />\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    onViewComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {}; \r\n        selectedRecord[fieldName] = comboData;\r\n        const inputParam = {\r\n            sviewname: comboData.value,\r\n            selectedRecord,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.getViewColumns(inputParam);\r\n    }\r\n\r\n    onRuleChange = (comboData, fieldName, index) => {\r\n        const { selectedRecord } = this.state;\r\n        this.clearSelectedRule(selectedRecord, index);\r\n        const sqlQuery = this.props.Login.sqlQuery;\r\n        const oldselectedRecord = selectedRecord;\r\n        selectedRecord[fieldName] = comboData;\r\n        const tableData = comboData.items;\r\n        const mastertablename = tableData.mastertablename;    \r\n\r\n        if(comboData.items.needmasterdata && mastertablename) {\r\n            const inputParam = {\r\n                userinfo: this.props.Login.userInfo,\r\n                data: {\r\n                    nflag: 2,\r\n                    mastertablename,\r\n                    valuemember: tableData.valuemember,\r\n                    displaymember: tableData.displaymember,\r\n                },\r\n                selectedRecord, \r\n                index,\r\n                optionId: tableData.valuemember\r\n            };\r\n            this.props.getMasterData(inputParam);\r\n        } else if(comboData.items && comboData.items.columntype === ColumnType.COMBO) {\r\n            if(sqlQuery) {\r\n                const inputParam = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    stablename: comboData.items.foriegntablename,\r\n                    scolumnname: comboData.value,\r\n                    selectedRecord, \r\n                    index\r\n                };\r\n                this.props.getForeignTable(inputParam, 'column');\r\n            } else {\r\n                selectedRecord[`${comboData.items.sforeigncolumnname}_${index}`] = \"\";\r\n                const inputParam = {\r\n                    data: { ...comboData.items, nflag: 1 },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    selectedRecord,\r\n                    index,\r\n                    optionId: comboData.items.sforeigncolumnname\r\n                };\r\n                this.props.getMasterData(inputParam);\r\n            }\r\n        } else if(comboData.items && comboData.items.columntype === ColumnType.TEXTINPUT \r\n            && oldselectedRecord[fieldName].items.columntype !== ColumnType.TEXTINPUT ) {\r\n            selectedRecord[\"sinputname_\"+index] = \"\";\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n    onMasterDataChange = (comboData, fieldName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[fieldName] = comboData;\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    addRule = (type) => {\r\n        const { selectedRecord } = this.state; \r\n        if(type === \"sql\") {\r\n            let addRuleList = this.props.Login.addRuleList || [];\r\n            if(addRuleList.length > 0) {\r\n                const arrayLength = addRuleList.length;\r\n                addRuleList[arrayLength] = arrayLength;\r\n                selectedRecord[\"button_and_\"+arrayLength] = true;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        addRuleList, \r\n                        selectedRecord\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                addRuleList[0] = 0;\r\n                this.props.getDatabaseTables(this.props.Login.userInfo, this.props.Login.sqlQuery, {addRuleList, selectedRecord: {}});\r\n            }\r\n        } else {\r\n            if(selectedRecord[\"sviewname\"]) {\r\n                const viewColumnListByRule = this.props.Login.viewColumnListByRule || [];\r\n                const addRuleList = this.props.Login.addRuleList || [];\r\n                const arrayLength = addRuleList.length;\r\n                addRuleList[arrayLength] = arrayLength;\r\n                viewColumnListByRule[arrayLength] = this.props.Login.viewColumnList;\r\n                if(arrayLength !== 0) {\r\n                    selectedRecord[\"button_and_\"+arrayLength] = true;\r\n                }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        addRuleList, \r\n                        viewColumnListByRule, \r\n                        selectedRecord\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTVIEW\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    getDatabaseTables = () => {\r\n        const sqlQuery = false;\r\n        this.props.getDatabaseTables(this.props.Login.userInfo, sqlQuery, {addRuleList: []});\r\n    }\r\n\r\n    closePortalModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openPortalModal: false, selectedRecord: {}, addRuleList: [], count: 0\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onExecuteRule = () => {\r\n        const { selectedRecord } = this.state;\r\n        if(selectedRecord[\"sgeneratedquery\"]) {\r\n            const inputParam = {\r\n                sgeneratedquery: selectedRecord[\"sgeneratedquery\"],\r\n                selectedRecord,\r\n                userInfo: this.props.Login.userInfo\r\n            }\r\n            this.props.executeQuery(inputParam);\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_QUERYNOTAVAILABLE\" }));\r\n        }       \r\n    }\r\n\r\n    deleteRule = (index) => {\r\n        let addRuleList = this.props.Login.addRuleList;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        addRuleList[index] = -1;\r\n        selectedRecord[`button_and_${index}`] && delete selectedRecord[`button_and_${index}`];\r\n        selectedRecord[`button_or_${index}`] && delete selectedRecord[`button_or_${index}`];\r\n        this.clearSelectedRule(selectedRecord, index);\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { addRuleList, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    clearSelectedRule(selectedRecord, index) {\r\n        selectedRecord[\"sinputname_\"+index] && delete selectedRecord[\"sinputname_\"+index];\r\n        selectedRecord[\"ssymbolname_\"+index] && delete selectedRecord[\"ssymbolname_\"+index];\r\n        selectedRecord[\"snumericinput_\"+index] && delete selectedRecord[\"snumericinput_\"+index];\r\n        selectedRecord[\"columnname_\"+index] && delete selectedRecord[\"columnname_\"+index];\r\n        selectedRecord[\"snumericinputtwo_\"+index] && delete selectedRecord[\"snumericinputtwo_\"+index];\r\n        selectedRecord[\"dateinput_\"+index] && delete selectedRecord[\"dateinput_\"+index];\r\n        selectedRecord[\"dateinputtwo_\"+index] && delete selectedRecord[\"dateinputtwo_\"+index];\r\n    }\r\n\r\n    clearRule = () => {\r\n        const sviewname = this.state.selectedRecord.sviewname || \"\";\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { addRuleList: [], selectedRecord: { sviewname }, sqlQuery: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    resetRule = () => {\r\n        const sviewname = this.state.selectedRecord.sviewname || \"\";\r\n        this.setState({ selectedRecord: { sviewname } });\r\n    }\r\n    \r\n    onSymbolChange = (comboData, fieldName, index) => {\r\n        const { selectedRecord } = this.state;\r\n        const oldSelectedRecord = selectedRecord[fieldName] || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        const items = selectedRecord[\"columnname_\"+index].items;\r\n        selectedRecord[\"columnname_\"+index][\"items\"][\"needmasterdata\"] = items.needmasterdata? comboData.items.needmasterdata: false;\r\n        if(comboData.items.symbolType === 2 || comboData.items.symbolType === 3) {\r\n            selectedRecord[items[\"valuemember\"]+\"_\"+index] && delete selectedRecord[items[\"valuemember\"]+\"_\"+index];\r\n            selectedRecord[items[\"foreigncolumnname\"]+\"_\"+index] && delete selectedRecord[items[\"foreigncolumnname\"]+\"_\"+index];\r\n            selectedRecord[\"sinputname_\"+index] && delete selectedRecord[\"sinputname_\"+index];\r\n        } else if(comboData.items.symbolType === 5 && oldSelectedRecord.items && oldSelectedRecord.items.symbolType !== 5) {\r\n            selectedRecord[\"snumericinput_\"+index] && delete selectedRecord[\"snumericinput_\"+index];\r\n            selectedRecord[\"snumericinputtwo_\"+index] && delete selectedRecord[\"snumericinputtwo_\"+index];\r\n        } else if((comboData.items.symbolType === 6 && oldSelectedRecord.items && oldSelectedRecord.items.symbolType === 1)\r\n            || (comboData.items.symbolType === 1 && oldSelectedRecord.items && oldSelectedRecord.items.symbolType === 6)){\r\n            selectedRecord[`${items.sforeigncolumnname}_${index}`] && delete selectedRecord[`${items.sforeigncolumnname}_${index}`];\r\n            selectedRecord[`${items.valuemember}_${index}`] && delete selectedRecord[`${items.valuemember}_${index}`];\r\n        } else {\r\n           \r\n        }\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    // addJoinTable = (index) => {\r\n    //     const { foreignTableCount, foreignTableList } = this.state;\r\n    //     if(foreignTableList.length > 0) {\r\n    //         const tempCount = foreignTableCount[index]? foreignTableCount[index]: 1;\r\n    //         foreignTableCount[index] = tempCount + 1;\r\n    //         this.setState({ foreignTableCount });\r\n    //     }\r\n    // }\r\n\r\n    // onForeignTableChange = (comboData, fieldName, index) => {\r\n    //     const { selectedRecord, selectedforeignTableList, foreignTableColumnList } = this.state;\r\n    //     selectedforeignTableList[index] = {\r\n    //         \"tablename\": comboData.value,\r\n    //         \"tablevalue\": `\"${comboData.value}\".\"${comboData.items.columnname}\"`\r\n    //     };\r\n    //     selectedRecord[fieldName] = comboData;\r\n    //     // let foreignTableColumnList = [];\r\n    //     foreignTableColumnList[index] = this.props.Login.allTableColumnList.filter(x => x.tablename === comboData.value);\r\n    //     selectedRecord[fieldName] = comboData;\r\n    //     selectedRecord[\"foreigncolumnname\"] = [];\r\n    //     this.setState({ selectedRecord, selectedforeignTableList, foreignTableColumnList });\r\n    // }\r\n\r\n    onInputChange = (event, type) => {\r\n        let selectedRecord = this.state.selectedRecord;       \r\n        if(type === 2) {\r\n            const inputValue = event.target.value;\r\n            if (/^-?\\d*?\\.?\\d*?$/.test(inputValue) || inputValue === \"\") {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    generateFilterQuery = (selectedRecord) => {\r\n        const addRuleList = this.props.Login.addRuleList;\r\n        jsonSql.setDialect('mssql');\r\n        let databaseCondition = [];\r\n        let displayCondition = [];\r\n        if(addRuleList.length > 0) {\r\n            let orDisplayConditionArray = [];\r\n            let orConditionArray = [];\r\n            addRuleList.forEach(index => {\r\n                let symbolObject = {};\r\n                if(selectedRecord[\"columnname_\"+index]) {\r\n                    symbolObject = selectedRecord[\"ssymbolname_\"+index].items || {};\r\n                \r\n                    const current_button_and = selectedRecord[`button_and_${index}`];\r\n                    const current_button_or = selectedRecord[`button_or_${index}`];\r\n                    const next_button_and = selectedRecord[`button_and_${index+1}`];\r\n                    const next_button_or = selectedRecord[`button_or_${index+1}`]? selectedRecord[`button_or_${index+1}`]:false;\r\n\r\n                    let inputname = selectedRecord[\"sinputname_\"+index];\r\n                    const symbolname = symbolObject.symbol;\r\n                    let numericinput = selectedRecord[\"snumericinput_\"+index];\r\n                    const columnLabel = selectedRecord[\"columnname_\"+index].label;\r\n                    const columnValue = selectedRecord[\"columnname_\"+index].value;\r\n                    const snumericinputtwo = selectedRecord[\"snumericinputtwo_\"+index];\r\n                    let columnName = undefined;\r\n                    const needmasterdata = selectedRecord[\"columnname_\"+index].items.needmasterdata? \r\n                        selectedRecord[\"columnname_\"+index].items.needmasterdata: false;\r\n\r\n                    if(selectedRecord[\"columnname_\"+index].items.needmasterdata) {\r\n                        columnName = selectedRecord[\"columnname_\"+index].items.valuemember+\"_\"+index;\r\n                    } else if(selectedRecord[\"columnname_\"+index].items.sforeigncolumnname) {\r\n                        columnName = selectedRecord[\"columnname_\"+index].items.sforeigncolumnname+\"_\"+index;\r\n                    }\r\n                    const dateinput = selectedRecord[\"dateinput_\"+index];\r\n                    const dateinputtwo = selectedRecord[\"dateinputtwo_\"+index];\r\n\r\n                    if(current_button_or || next_button_or || (current_button_and && next_button_or)) {\r\n                        if(symbolObject && inputname) {\r\n                            if(symbolObject.symbolType === 4) {\r\n                                const index = symbolObject.replacewith.indexOf('_'); \r\n                                inputname = symbolObject.replacewith.substr(0, index) + inputname + symbolObject.replacewith.substr(index+1);\r\n                                orConditionArray.push({[columnValue]: { [symbolname]: inputname} });\r\n                                orDisplayConditionArray.push({[columnLabel]: { [symbolname]: inputname} });\r\n                            } else {\r\n                                orConditionArray.push({[columnValue]: { [symbolname]: inputname} });\r\n                                orDisplayConditionArray.push({[columnLabel]: { [symbolname]: inputname} });\r\n                            }\r\n                        } else if(symbolObject && numericinput && symbolObject.symbolType !== 5) {\r\n                            orConditionArray.push({[columnValue]: { [symbolname]: numericinput} });\r\n                            orDisplayConditionArray.push({[columnLabel]: { [symbolname]: numericinput} });\r\n                        } else if(symbolObject && symbolObject.symbolType === 2\r\n                            || symbolObject && symbolObject.symbolType === 3) {\r\n                            orConditionArray.push({[columnValue]: { [symbolname]: ''} });\r\n                            orDisplayConditionArray.push({[columnLabel]: { [symbolname]: ''} });\r\n                        } \r\n                        else if(symbolObject && numericinput && snumericinputtwo && symbolObject.symbolType === 5) {\r\n                            if(symbolObject.symbol === \"\") {\r\n                                const tempValue =  [{[columnValue]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: snumericinputtwo} }];\r\n                                const tempValue1 =  [{ [columnLabel]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: snumericinputtwo} }];\r\n                                orConditionArray.push(tempValue);\r\n                                orDisplayConditionArray.push(tempValue1);\r\n                            } else {\r\n                                const tempValue =  [ \r\n                                    {[symbolObject.symbol]: [{[columnValue]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: snumericinputtwo} }]}\r\n                                ];\r\n                                const tempValue1 =  [ \r\n                                    {[symbolObject.symbol]: [{ [columnLabel]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: snumericinputtwo} }]}\r\n                                ];\r\n                                orConditionArray.push(tempValue);\r\n                                orDisplayConditionArray.push(tempValue1);\r\n                            }\r\n                        } else if(symbolObject && symbolObject.symbolType === 6 && columnName && selectedRecord[columnName]) {\r\n                            // if(typeof selectedRecord[columnName] === \"object\") {\r\n                            //     orConditionArray.push({[columnValue]: { [symbolname]: [selectedRecord[columnName].value]} });\r\n                            //     orDisplayConditionArray.push({[columnLabel]: { [symbolname]: [selectedRecord[columnName].label]} });\r\n                            // } else {\r\n                                const data = selectedRecord[columnName] && selectedRecord[columnName].map(item=>{return item.value}) || [];\r\n                                const data1 = selectedRecord[columnName] && selectedRecord[columnName].map(item=>{return item.label}) || [];\r\n                                if(data.length > 0) {\r\n                                    if(needmasterdata) {\r\n                                        orConditionArray.push({[selectedRecord[\"columnname_\"+index].items.valuemember]: {[symbolname]: data}});\r\n                                    } else {\r\n                                        orConditionArray.push({[columnValue]: {[symbolname]: data}});\r\n                                    }\r\n                                }\r\n                                if(data1.length > 0) {\r\n                                    orDisplayConditionArray.push({[columnLabel]: {[symbolname]: data1}});\r\n                                }\r\n                            // }\r\n                        } else if(symbolObject && columnName && symbolObject.isInputVisible && selectedRecord[columnName]) {\r\n                            if(needmasterdata) {\r\n                                orConditionArray.push({[selectedRecord[\"columnname_\"+index].items.valuemember]: { [symbolname]: selectedRecord[columnName].value} });\r\n                                orDisplayConditionArray.push({[columnLabel]: { [symbolname]: selectedRecord[columnName].label} });\r\n                            } else {\r\n                                orConditionArray.push({[columnValue]: { [symbolname]: selectedRecord[columnName].value} });\r\n                                orDisplayConditionArray.push({[columnLabel]: { [symbolname]: selectedRecord[columnName].label} });\r\n                            }\r\n                        }  else if(symbolObject && dateinput && symbolObject.symbolType !== 5) {\r\n                            orConditionArray.push({[columnValue]: { [symbolname]: dateinput } });\r\n                            orDisplayConditionArray.push({[columnLabel]: { [symbolname]: dateinput } });\r\n                        } else if(symbolObject && dateinput && dateinputtwo && symbolObject.symbolType === 5) {\r\n                            if(symbolObject.symbol === \"\") {\r\n                                const tempValue = [{[columnValue]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: dateinputtwo} }];\r\n                                const tempValue1 =  [{ [columnLabel]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: dateinputtwo} }];\r\n                                orConditionArray.push(tempValue);\r\n                                orDisplayConditionArray.push(tempValue1);\r\n                            } else {\r\n                                const tempValue =  [ \r\n                                    {[symbolObject.symbol]: [{[columnValue]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: dateinputtwo} }]}\r\n                                ];\r\n                                const tempValue1 =  [ \r\n                                    {[symbolObject.symbol]: [{ [columnLabel]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: dateinputtwo} }]}\r\n                                ];\r\n                                orConditionArray.push(tempValue);\r\n                                orDisplayConditionArray.push(tempValue1);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if(symbolObject && inputname) {\r\n                            if(symbolObject.symbolType === 4) {\r\n                                const index = symbolObject.replacewith.indexOf('_'); \r\n                                inputname = symbolObject.replacewith.substr(0, index) + inputname + symbolObject.replacewith.substr(index+1);\r\n                                databaseCondition.push({[columnValue]: { [symbolname]: inputname} });\r\n                                displayCondition.push({[columnLabel]: { [symbolname]: inputname} });\r\n                            } else {\r\n                                databaseCondition.push({[columnValue]: { [symbolname]: inputname} });\r\n                                displayCondition.push({[columnLabel]: { [symbolname]: inputname} });\r\n                            }\r\n                        } else if(symbolObject && numericinput && symbolObject.symbolType !== 5) {\r\n                            databaseCondition.push({[columnValue]: { [symbolname]: numericinput} });\r\n                            displayCondition.push({[columnLabel]: { [symbolname]: numericinput} });\r\n                        } else if(symbolObject && symbolObject.symbolType === 2\r\n                            || symbolObject && symbolObject.symbolType === 3) {\r\n                            databaseCondition.push({[columnValue]: { [symbolname]: ''} });\r\n                            displayCondition.push({[columnLabel]: { [symbolname]: ''} });\r\n                        } else if(symbolObject && numericinput && snumericinputtwo && symbolObject.symbolType === 5) {\r\n                            if(symbolObject.symbol === \"\") {\r\n                                const tempValue = [{[columnValue]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: snumericinputtwo} }];\r\n                                const tempValue1 =  [{ [columnLabel]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: snumericinputtwo} }];\r\n                                databaseCondition.push(tempValue);\r\n                                displayCondition.push(tempValue1);\r\n                            } else {\r\n                                const tempValue =  [ \r\n                                    {[symbolObject.symbol]: [{[columnValue]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: snumericinputtwo} }]}\r\n                                ];\r\n                                const tempValue1 =  [ \r\n                                    {[symbolObject.symbol]: [{ [columnLabel]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: snumericinputtwo} }]}\r\n                                ];\r\n                                databaseCondition.push(tempValue);\r\n                                displayCondition.push(tempValue1);\r\n                            }\r\n                        } else if(symbolObject && symbolObject.symbolType === 6 && columnName && selectedRecord[columnName]) {\r\n                            // if(typeof selectedRecord[columnName] === \"object\") {\r\n                            //     databaseCondition.push({[columnValue]: { [symbolname]: [selectedRecord[columnName].value]} });\r\n                            //     displayCondition.push({[columnLabel]: { [symbolname]: [selectedRecord[columnName].label]} });\r\n                            // } else {\r\n                                const data = selectedRecord[columnName] && selectedRecord[columnName].map(item=>{return item.value}) || [];\r\n                                const data1 = selectedRecord[columnName] && selectedRecord[columnName].map(item=>{return item.label}) || [];\r\n                                if(data.length > 0) {\r\n                                    if(needmasterdata) {\r\n                                        databaseCondition.push({[selectedRecord[\"columnname_\"+index].items.valuemember]: {[symbolname]: data}});\r\n                                    } else {\r\n                                        databaseCondition.push({[columnValue]: {[symbolname]: data}});\r\n                                    }\r\n                                }\r\n                                if(data1.length > 0) {\r\n                                    displayCondition.push({[columnLabel]: {[symbolname]: data1}});\r\n                                }\r\n                            // }\r\n                        } else if(symbolObject && columnName && symbolObject.isInputVisible && selectedRecord[columnName]) {\r\n                            if(needmasterdata) {\r\n                                databaseCondition.push({[selectedRecord[\"columnname_\"+index].items.valuemember]: { [symbolname]: selectedRecord[columnName].value} });\r\n                                displayCondition.push({[columnLabel]: { [symbolname]: selectedRecord[columnName].label} });\r\n                            } else {\r\n                                databaseCondition.push({[columnValue]: { [symbolname]: selectedRecord[columnName].value} });\r\n                                displayCondition.push({[columnLabel]: { [symbolname]: selectedRecord[columnName].label} });\r\n                            }\r\n                        } else if(symbolObject && dateinput && symbolObject.symbolType !== 5) {\r\n                            databaseCondition.push({[columnValue]: { [symbolname]: dateinput } });\r\n                            displayCondition.push({[columnLabel]: { [symbolname]: dateinput } });\r\n                        } else if(symbolObject && dateinput && dateinputtwo && symbolObject.symbolType === 5) {\r\n                            if(symbolObject.symbol === \"\") {\r\n                                const tempValue = [{[columnValue]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: dateinputtwo} }];\r\n                                const tempValue1 =  [{ [columnLabel]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: dateinputtwo} }];\r\n                                databaseCondition.push(tempValue);\r\n                                displayCondition.push(tempValue1);\r\n                            } else {\r\n                                const tempValue =  [ \r\n                                    {[symbolObject.symbol]: [{[columnValue]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: dateinputtwo} }]}\r\n                                ];\r\n                                const tempValue1 =  [ \r\n                                    {[symbolObject.symbol]: [{ [columnLabel]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: dateinputtwo} }]}\r\n                                ];\r\n                                databaseCondition.push(tempValue);\r\n                                displayCondition.push(tempValue1);\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n\r\n                    if(current_button_or \r\n                        && (next_button_and || typeof next_button_and === 'undefined') \r\n                        || typeof next_button_or === 'undefined') {\r\n                        if(orConditionArray.length > 0) {\r\n                            databaseCondition.push({$or: orConditionArray});\r\n                            orConditionArray = [];\r\n                        } \r\n                        if(orDisplayConditionArray.length > 0) {\r\n                            displayCondition.push({$or: orDisplayConditionArray});\r\n                            orDisplayConditionArray = [];\r\n                        }\r\n                    }\r\n\r\n                    if(this.props.Login.sqlQuery) {\r\n                        const databaseSQLQuery = jsonSql.build({\r\n                            type: 'select',\r\n                            table: selectedRecord[\"stablename_0\"].value,\r\n                            condition: databaseCondition\r\n                        });\r\n                        const displaySQLQuery = jsonSql.build({\r\n                            type: 'select',\r\n                            table: selectedRecord[\"stablename_0\"].label,\r\n                            condition: displayCondition\r\n                        });\r\n                        selectedRecord[\"sgeneratedquery\"] = databaseSQLQuery.query;\r\n                        selectedRecord[\"sdisplayquery\"] = displaySQLQuery.query;\r\n                    } else {\r\n                        const databaseSQLQuery = jsonSql.build({\r\n                            type: 'select',\r\n                            table: selectedRecord[\"sviewname\"].value,\r\n                            condition: databaseCondition\r\n                        });\r\n                        const displaySQLQuery = jsonSql.build({\r\n                            type: 'select',\r\n                            table: selectedRecord[\"sviewname\"].label,\r\n                            condition: displayCondition\r\n                        });\r\n                        // jsonSql = jsonSql.setSeparatedValues(true);\r\n                        selectedRecord[\"sgeneratedquery\"] = databaseSQLQuery.query;\r\n                        selectedRecord[\"sdisplayquery\"] = displaySQLQuery.query;\r\n                    }                    \r\n                    this.setState({ selectedRecord });\r\n                } else {\r\n\r\n                }\r\n            });\r\n        }\r\n       \r\n    }\r\n    \r\n    onConditionClick = (fieldName, index) => {\r\n        let { selectedRecord } = this.state;\r\n        if(fieldName === `button_and_${index}`) {\r\n            selectedRecord[fieldName] = selectedRecord[fieldName]===true? false:true;\r\n            selectedRecord[`button_or_${index}`] = false;\r\n        } else if(fieldName === `button_or_${index}`) {\r\n            selectedRecord[fieldName] = selectedRecord[fieldName]===true? false:true;\r\n            selectedRecord[`button_and_${index}`] = false;\r\n        } else {\r\n\r\n        }\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    onQueryTypeOnclick = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { sqlQuery: !this.state.sqlQuery }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    getValidationForEdit = (screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, queryTypeCode, ncontrolCode) => {\r\n        rsapi.post(\"sqlquery/getValidationForEdit\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": userInfo })\r\n            .then(response => {\r\n                if (response.data === \"IDS_SUCCESS\") {\r\n                    this.props.getSQLQueryComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, queryTypeCode, ncontrolCode)\r\n                }\r\n                else if (response.data === \"IDS_QUERYUSEDINDASHBOARD\") {\r\n                    this.confirmAlertForEdit(ncontrolCode)\r\n                }\r\n                else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: response.data }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(this.props.intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n    }\r\n\r\n    confirmAlertForEdit = (editId) => {\r\n        this.confirmMessage.confirm(this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_QUERYUSEDINDASHBOARD\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            // () => this.performBatchAction(), \r\n            () => this.props.getSQLQueryComboService(this.state.queryTypeName,\r\n                \"update\", \"nsqlquerycode\",\r\n                this.props.Login.masterData.SelectedSQLQuery.nsqlquerycode,\r\n                this.props.Login.masterData, this.props.Login.userInfo,\r\n                //this.state.selectedcombo[\"nquerytypecode\"].value, \r\n                this.props.Login.masterData.SelectedQueryType.nquerytypecode, editId),\r\n            undefined,\r\n            () => this.closeAlert()\r\n        );\r\n    }\r\n\r\n    closeAlert = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showConfirmAlertForEdit: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n\r\n        this.searchRef.current.value = \"\";\r\n        //    const inputParam = {\r\n        //        inputData: { \"userinfo\": this.props.Login.userInfo, \r\n        //                    nquerytypecode:this.state.selectedRecord[\"nquerytypecode\"] ? \r\n        //                                   this.state.selectedRecord[\"nquerytypecode\"].value : 0\r\n        //                 },        \r\n        //        userInfo: this.props.Login.userInfo,\r\n        //        classUrl: \"sqlquery\",\r\n        //        methodUrl: \"SQLQuery\",\r\n        //        displayName: \"IDS_SQLBUILDER\",\r\n        //    };\r\n        //this.props.callService(inputParam);\r\n        const nquerytypecode = this.state.selectedRecord[\"nquerytypecode\"] ?\r\n            this.state.selectedRecord[\"nquerytypecode\"].value : this.props.Login.masterData.SelectedQueryType.nquerytypecode;\r\n\r\n        this.props.comboChangeQueryType(nquerytypecode, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n\r\n    }\r\n\r\n    handlePageChange = (event) => {\r\n        this.setState({\r\n            skip: event.skip,\r\n            take: event.take\r\n        });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            if (fieldName === \"ncharttypecode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[fieldName] = comboData;\r\n\r\n                this.setState({ selectedRecord });\r\n            }\r\n\r\n            if (fieldName === \"ntabletypecode\" || fieldName === \"nformcode\") {\r\n                const selectedTableType = this.state.selectedTableType || {};\r\n                selectedTableType[fieldName] = comboData;\r\n\r\n                this.setState({ selectedTableType });\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                //  this.state.ntableTypeCode=comboData.value;\r\n                if (fieldName === \"ntabletypecode\") {\r\n                    if (comboData.value === tableType.ALL) {\r\n                        selectedRecord[\"nformcode\"] = \"\";\r\n                        this.props.getTablesName(selectedTableType[\"ntabletypecode\"].value, 0)\r\n                    }\r\n                    else {\r\n                        const updateInfor = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                tableName: []\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfor);\r\n                        this.setState({ moduleFormName: [] })\r\n                        selectedRecord[\"nformcode\"] = \"\";\r\n                        this.props.getModuleFormName(comboData.value, this.props.Login.userInfo)\r\n                    }\r\n\r\n                }\r\n                if (fieldName === \"nformcode\") {\r\n\r\n                    selectedRecord[fieldName] = comboData;\r\n\r\n                    this.setState({ selectedRecord });\r\n                    //this.state.nFormCode=comboData.value;\r\n                    //this.getTablesName(selectedRecord[\"ntabletypecode\"].value ,selectedRecord[\"nformcode\"].value)\r\n                    this.props.getTablesName(selectedTableType[\"ntabletypecode\"].value, selectedRecord[\"nformcode\"].value)\r\n                }\r\n            }\r\n            else {\r\n                const selectedcombo = this.state.selectedcombo || {};\r\n                selectedcombo[fieldName] = comboData;\r\n\r\n                this.setState({ selectedcombo });\r\n            }\r\n            if (fieldName === \"nquerytypecode\") {\r\n                this.searchRef.current.value = \"\";\r\n                // this.props.comboChangeQueryType(comboData.value, this.props.Login.masterData, this.props.Login.userInfo);\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[fieldName] = comboData;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord: selectedRecord }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getTablesName(selectedRecord) {\r\n        return function (dispatch) {\r\n            const url = \"sqlquery/getTablesFromSchema\";\r\n\r\n            rsapi.post(url, { \"tabletypecode\": parseInt(selectedRecord[\"ntabletypecode\"].value), \"moduleformcode\": parseInt(selectedRecord[\"nformcode\"].value), \"userinfo\": this.props.Login.userInfo })\r\n                .then(response => {\r\n\r\n                    let tableName = undefined;\r\n                    let tableNameOnly = [];\r\n                    Object.values(response[1].data[0]).forEach(p => {\r\n                        if (p.stable !== tableName) {\r\n                            tableName = p.stable;\r\n                            tableNameOnly.push({ tableName });\r\n                        }\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            tableList: response[0].data[0] || [],\r\n                            tableName: tableNameOnly || []\r\n\r\n                        }\r\n                    });\r\n                    //this.setState({ tableList: response[0].data[0] || [], tableName: tableNameOnly || []})\r\n\r\n                })\r\n                .catch(error => {\r\n\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    getModuleFormName(TableTypeCode) {\r\n\r\n        const url = \"sqlquery/getModuleFormName\";\r\n\r\n        rsapi.post(url, { \"tabletypecode\": parseInt(TableTypeCode), \"userinfo\": this.props.Login.userInfo })\r\n            .then(response => {\r\n                this.setState({ moduleFormName: response.data[0] });\r\n            })\r\n            .catch(error => {\r\n\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n    onEsignInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        // const selectedRecord = this.state.selectedRecord || {};\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let showExecute = this.props.Login.showExecute;\r\n        let showParam = this.props.Login.showParam;\r\n        let showValidate = this.props.Login.showValidate;\r\n        let showSave = this.props.Login.showSave;\r\n        let screenName = this.props.Login.screenName;\r\n        let operation = this.props.Login.operation;\r\n        let slideOperation = this.props.Login.slideOperation;\r\n        let parentPopUpSize = this.props.Login.parentPopUpSize;\r\n        let resultStatus = this.props.Login.resultStatus;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord[\"agree\"] = transactionStatus.NO;\r\n                if (this.state.param.size > 0) {\r\n                    showExecute = true;\r\n                    showSave = true;\r\n                }\r\n                else {\r\n                    showExecute = false;\r\n                    showSave = false;\r\n                }\r\n                parentPopUpSize = \"xl\"\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.Login.screenName === \"Parameter for Results\" || this.props.Login.screenName === \"Results\") {\r\n                if (this.props.Login.screenFlag === \"showQuery\") {\r\n                    openModal = true;\r\n\r\n                    let queryTypeCode = this.props.Login.masterData.SelectedQueryType.nquerytypecode;\r\n                    if (queryTypeCode === queryTypeFilter.LIMSDASHBOARDQUERY) {\r\n                        screenName = this.props.intl.formatMessage({ id: \"IDS_LIMSDASHBOARDQUERY\" });\r\n                    }\r\n                    else if (queryTypeCode === queryTypeFilter.LIMSALERTQUERY) {\r\n                        screenName = this.props.intl.formatMessage({ id: \"IDS_LIMSALERTQUERY\" });\r\n                    }\r\n                    else if (queryTypeCode === queryTypeFilter.LIMSBARCODEQUERY) {\r\n                        screenName = this.props.intl.formatMessage({ id: \"IDS_LIMSBARCODEQUERY\" });\r\n                    }\r\n                    else if (queryTypeCode === queryTypeFilter.LIMSGENERALQUERY) {\r\n                        screenName = this.props.intl.formatMessage({ id: \"IDS_LIMSGENERALQUERY\" });\r\n                    }\r\n                    else {\r\n                        screenName = this.props.intl.formatMessage({ id: \"IDS_LIMSFILTERQUERY\" });\r\n                    }\r\n                    showSave = false;\r\n                }\r\n                else {\r\n                    selectedRecord = {};\r\n                    openModal = false;\r\n                    showExecute = false;\r\n                }\r\n\r\n                showParam = false;\r\n                showValidate = true;\r\n                operation = slideOperation;\r\n                slideOperation = \"\";\r\n                resultStatus = \"\";\r\n            }\r\n            else {\r\n                openModal = false;\r\n                selectedRecord = {};\r\n                showExecute = false;\r\n            }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, loadEsign, selectedRecord, showExecute,\r\n                showParam, operation, screenName, showSave, showValidate,\r\n                parentPopUpSize, resultStatus, showConfirmAlertForEdit: false\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    upDateComboboxValue = i => Value => {\r\n        if (Value != null) {\r\n\r\n            // let parameters = [...this.state.parameters]\r\n            // parameters[i].textValue = Value\r\n            // this.setState({\r\n            //     parameters: parameters\r\n            // })\r\n\r\n            const paramMap = this.state.param || new Map();\r\n            paramMap.get(i).textValue = Value;\r\n            this.setState({ param: paramMap })\r\n\r\n        }\r\n    }\r\n\r\n    handleDateChange = i => date => {\r\n\r\n        // let parameters = [...this.state.parameters]\r\n        // parameters[i].Datetime = date\r\n\r\n        // this.setState({\r\n        //     parameters: parameters\r\n        // })\r\n        const paramMap = this.state.param || new Map();\r\n        paramMap.get(i).Datetime = date;\r\n        this.setState({ param: paramMap })\r\n    }\r\n\r\n    handleText = i => event => {\r\n        //let parameters = [...this.state.parameters];\r\n        //parameters[i].textValue = e.target.value;\r\n        //this.setState({parameters: parameters});\r\n        // console.log(parameters)\r\n        const paramMap = this.state.param || new Map();\r\n        paramMap.get(event.target.name).textValue = event.target.value;\r\n        this.setState({ param: paramMap })\r\n\r\n    }\r\n\r\n    onDrop(data) {\r\n        let { selectedRecord } = this.state;\r\n        let sqlquery = selectedRecord.ssqlquery ? selectedRecord.ssqlquery : \"\";\r\n\r\n        selectedRecord.ssqlquery = data.dragtable ? `${sqlquery} ${data.dragtable}` : `${sqlquery} ${data.dragcolumn}`\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    executeQuery = (methodUrl, selectedRecord, operation, ncontrolCode) => {\r\n\r\n        const sqlQuery = selectedRecord.ssqlquery;\r\n        if (sqlQuery.length > 10) {\r\n            if (sqlQuery.toUpperCase().indexOf('INSERT') >= 0\r\n                || sqlQuery.toUpperCase().indexOf('UPDATE') >= 0\r\n                || sqlQuery.toUpperCase().indexOf('DELETE') >= 0\r\n                || sqlQuery.toUpperCase().indexOf('TRUNCATE') >= 0\r\n                || sqlQuery.toUpperCase().indexOf('CREATE') >= 0\r\n                || sqlQuery.toUpperCase().indexOf('ALTER') >= 0\r\n                || sqlQuery.toUpperCase().indexOf('DROP') >= 0) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_CANNOTDATAMANIPULATION\" }));\r\n            }\r\n            else {\r\n                if (sqlQuery.indexOf('P$') > 0) {\r\n                    let newQuery = sqlQuery;\r\n\r\n                    const paramMap = new Map();\r\n                    while (newQuery.indexOf(\"P$\") !== -1) {\r\n                        const paramLabelStartIndex = newQuery.indexOf(\"P$\");\r\n                        const paramLabelEndIndex = newQuery.indexOf(\"$P\");\r\n\r\n                        const paramLabel = newQuery.substring(paramLabelStartIndex + 2, paramLabelEndIndex);\r\n\r\n                        if (paramLabel.indexOf(\"T$\") !== -1) {\r\n                            let displayName = \"\";\r\n                            let localParam = \"\";\r\n                            let tableName = \"\";\r\n\r\n                            newQuery = newQuery.substring(paramLabelEndIndex + 2, newQuery.length);\r\n\r\n                            if (paramLabel.indexOf(\"D$\") !== -1) {\r\n                                localParam = paramLabel.substring(0, paramLabel.indexOf('D$'));\r\n                                displayName = paramLabel.substring(paramLabel.indexOf('D$') + 2, paramLabel.indexOf('T$'));\r\n                                //tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\r\n                                tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.length);\r\n                            }\r\n                            else {\r\n                                localParam = paramLabel.substring(0, paramLabel.indexOf('T$'));\r\n                                // tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\r\n                                tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.length);\r\n                            }\r\n\r\n                            if (localParam.startsWith('d') || localParam.startsWith('D')) {\r\n                                paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                    value: 'DateTimePicker',\r\n                                    lableName: localParam,\r\n                                    //ID: param.length, \r\n                                    Datetime: new Date(),\r\n                                    textValue: '',\r\n                                    TableName: tableName,\r\n                                    DisplayParam: displayName,\r\n                                    actuallableName: localParam.substring(1, localParam.length)\r\n                                })\r\n                            }\r\n                            else {\r\n                                paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                    value: 'TextBox1', lableName: localParam,\r\n                                    //ID: param.length, \r\n                                    textValue: '',\r\n                                    TableName: tableName,\r\n                                    DisplayParam: displayName,\r\n                                    actuallableName: localParam.substring(1, localParam.length)\r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            newQuery = newQuery.substring(paramLabelEndIndex + 2, newQuery.length);\r\n\r\n                            if (paramLabel.startsWith('d') || paramLabel.startsWith('D')) {\r\n                                paramMap.set(\"P$\" + paramLabel + \"$P\", {\r\n                                    value: 'DateTimePicker',\r\n                                    lableName: paramLabel,\r\n                                    actuallableName: paramLabel.substring(1, paramLabel.length),\r\n                                    //ID: param.length, \r\n                                    Datetime: new Date()\r\n                                })\r\n                            }\r\n                            else {\r\n                                paramMap.set(\"P$\" + paramLabel + \"$P\", {\r\n                                    value: 'TextBox1', lableName: paramLabel,\r\n                                    //ID: param.length, \r\n                                    textValue: '',\r\n                                    TableName: \"\",\r\n                                    DisplayParam: \"\",\r\n                                    actuallableName: paramLabel.substring(1, paramLabel.length)\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN, data: {\r\n\r\n                            screenName: \"Parameter for Results\",\r\n                            openModal: true,\r\n                            showExecute: true,\r\n                            showParam: true,\r\n                            showValidate: false,\r\n                            showSave: false,\r\n                            operation: \"create\",\r\n                            slideOperation: \"\",\r\n                            slideResult: [],\r\n                            slideList: [],\r\n                            screenFlag: \"showParam\",\r\n                            param: paramMap,\r\n                            //param: param, Dparam: Dparam, TBLName: TBLName,\r\n                            parentPopUpSize: \"xl\"\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    //query without parameters      \r\n                    const inputParam = {\r\n\r\n                        query: selectedRecord.ssqlquery.trim(),\r\n                        screenName: \"Results\",\r\n                        openModal: true,\r\n                        showExecute: false,\r\n                        showParam: true,\r\n                        showValidate: false,\r\n                        showSave: false,\r\n                        noSave: true,\r\n                        operation: \"view\",\r\n                        slideOperation: \"\",\r\n                        slideResult: [],\r\n                        slideList: [],\r\n                        //screenFlag: \"showParam\",\r\n                        screenFlag: \"NoParam\",\r\n                        parentPopUpSize: \"xl\",\r\n\r\n                        param: new Map(),\r\n\r\n                    }\r\n                    this.props.executeUserQuery(inputParam);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteRecord = (methodUrl, selectedRecord, operation, ncontrolCode) => {\r\n\r\n        const postParam = {\r\n            inputListName: \"SQLQuery\", selectedObject: \"SelectedSQLQuery\",\r\n            primaryKeyField: \"nsqlquerycode\",\r\n            primaryKeyValue: this.props.Login.masterData.SelectedSQLQuery.nsqlquerycode,\r\n            fetchUrl: \"sqlquery/getSQLQuery\",\r\n            fecthInputObject: { userInfo: this.props.Login.userInfo },\r\n        }\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl, postParam,\r\n            inputData: {\r\n                [methodUrl.toLowerCase()]: selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"sqlquery\": this.props.Login.masterData.SelectedSQLQuery\r\n            },\r\n            operation\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"sqlquery\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n\r\n    onExecuteClick = () => {\r\n        // let paramVal;\r\n        let tempQuery = \"\";\r\n        let paramFlag = true;\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (this.props.Login.screenName === \"Parameter for Results\" && this.state.param.size > 0) {\r\n            if (selectedRecord != null && selectedRecord.ssqlquery != null && selectedRecord.ssqlquery.length > 0) {\r\n                tempQuery = selectedRecord.ssqlquery;\r\n            }\r\n            else {\r\n                tempQuery = this.props.Login.masterData.SelectedSQLQuery.ssqlquery;\r\n            }\r\n\r\n            const paramMap = this.state.param || new Map();\r\n            for (let parameterMap of paramMap.entries()) {\r\n                const parameter = parameterMap[0];\r\n                const parameterDetail = parameterMap[1];\r\n                let paramVal = \"\";\r\n                //console.log(\"para detail:\", parameterDetail);\r\n\r\n                if (parameterDetail.lableName.toUpperCase().startsWith('D')) {\r\n                    if (parameterDetail.Datetime !== null) {\r\n                        paramVal = parameterDetail.Datetime.getFullYear() + \"-\";\r\n                        if (parameterDetail.Datetime.getMonth().toString().length > 1) {\r\n                            paramVal = paramVal + parseInt(parameterDetail.Datetime.getMonth() + 1) + \"-\";\r\n                        }\r\n                        else {\r\n                            paramVal = paramVal + \"0\" + parseInt(parameterDetail.Datetime.getMonth() + 1) + \"-\";\r\n                        }\r\n                        if (parameterDetail.Datetime.getDate().toString().length > 1) {\r\n                            paramVal = paramVal + parameterDetail.Datetime.getDate();\r\n                        }\r\n                        else {\r\n                            paramVal = paramVal + \"0\" + parameterDetail.Datetime.getDate();\r\n                        }\r\n                    }\r\n                    if (paramVal === undefined) {\r\n                        paramFlag = false;\r\n                        tempQuery = tempQuery.replaceAll(parameter, null);\r\n                    }\r\n                    else if (paramVal.trim().length > 0) {\r\n                        //tempQuery = tempQuery.replace(parameter, \"P#\" + paramVal + \"$P\");\r\n                        tempQuery = tempQuery.replaceAll(parameter, \"'\" + paramVal + \"'\");\r\n                    }\r\n                    else {\r\n                        paramFlag = false;\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    paramVal = parameterDetail.textValue;\r\n                    if (paramVal !== \"\") {\r\n                        if (parameterDetail.lableName.toUpperCase().startsWith('S')) {\r\n\r\n                            if (tempQuery.indexOf(parameterDetail.lableName.trim() + 'D$') > 0) {\r\n                                tempQuery = tempQuery.replaceAll('P$' + parameterDetail.lableName.trim()\r\n                                    + 'D$' + parameterDetail.DisplayParam\r\n                                    + 'T$' + parameterDetail.TableName\r\n                                    + '$P', \"'\" + paramVal + \"'\");\r\n                            }\r\n                            else if (tempQuery.indexOf(parameterDetail.lableName.trim() + 'T$') > 0) {\r\n                                tempQuery = tempQuery.replaceAll('P$' + parameterDetail.lableName.trim()\r\n                                    + 'T$' + parameterDetail.TableName\r\n                                    + '$P', \"'\" + paramVal + \"'\");\r\n                            }\r\n                            else {\r\n                                tempQuery = tempQuery.replaceAll(parameter, \"'\" + paramVal + \"'\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (tempQuery.indexOf(parameterDetail.lableName.trim() + 'D$') > 0) {\r\n                                tempQuery = tempQuery.replaceAll('P$' + parameterDetail.lableName.trim()\r\n                                    + 'D$' + parameterDetail.DisplayParam.trim()\r\n                                    + 'T$' + parameterDetail.TableName + '$P', paramVal);\r\n                            }\r\n                            else if (tempQuery.indexOf(parameterDetail.lableName.trim() + 'T$') > 0) {\r\n                                tempQuery = tempQuery.replaceAll('P$' + parameterDetail.lableName.trim()\r\n                                    + 'T$' + parameterDetail.TableName + '$P', paramVal);\r\n                            }\r\n                            else {\r\n                                tempQuery = tempQuery.replaceAll(parameter, paramVal);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        paramFlag = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (paramFlag === true) {\r\n                //console.log(\"temp:\", tempQuery);\r\n                const inputParam = {\r\n                    slideOperation: this.props.Login.slideOperation,\r\n                    screenFlag: this.props.Login.screenFlag,\r\n                    query: tempQuery.trim(),\r\n                    userInfo: this.props.Login.userInfo,\r\n                    data: {}\r\n                }\r\n                this.props.executeUserQuery(inputParam);\r\n\r\n                //this.props.executeUserQuery(tempQuery.trim(), this.props.Login.screenFlag, this.props.Login.slideOperation, this.props.Login.userInfo);\r\n            }\r\n            else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERPAREMETRS\" }));\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (selectedRecord.ssqlquery !== null && selectedRecord.ssqlquery.length > 0) {\r\n                const sqlQuery = selectedRecord.ssqlquery;\r\n                if (sqlQuery.toUpperCase().indexOf('INSERT') >= 0 || sqlQuery.toUpperCase().indexOf('UPDATE') >= 0\r\n                    || sqlQuery.toUpperCase().indexOf('DELETE') >= 0 || sqlQuery.toUpperCase().indexOf('TRUNCATE') >= 0\r\n                    || sqlQuery.toUpperCase().indexOf('CREATE') >= 0 || sqlQuery.toUpperCase().indexOf('ALTER') >= 0\r\n                    || sqlQuery.toUpperCase().indexOf('DROP') >= 0) {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_CANNOTDATAMANIPULATION\" }));\r\n                }\r\n                else {\r\n                    if (sqlQuery.indexOf('P$') > 0) {\r\n                        let newQuery = sqlQuery;\r\n\r\n                        const paramMap = new Map();\r\n                        while (newQuery.indexOf(\"P$\") !== -1) {\r\n                            const paramLabelStartIndex = newQuery.indexOf(\"P$\");\r\n                            const paramLabelEndIndex = newQuery.indexOf(\"$P\");\r\n\r\n                            const paramLabel = newQuery.substring(paramLabelStartIndex + 2, paramLabelEndIndex);\r\n\r\n                            if (paramLabel.indexOf(\"T$\") !== -1) {\r\n                                let displayName = \"\";\r\n                                let localParam = \"\";\r\n                                let tableName = \"\";\r\n\r\n                                newQuery = newQuery.substring(paramLabelEndIndex + 2, newQuery.length);\r\n\r\n                                if (paramLabel.indexOf(\"D$\") !== -1) {\r\n                                    localParam = paramLabel.substring(0, paramLabel.indexOf('D$'));\r\n                                    displayName = paramLabel.substring(paramLabel.indexOf('D$') + 2, paramLabel.indexOf('T$'));\r\n                                    //tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\r\n                                    tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.length);\r\n                                }\r\n                                else {\r\n                                    localParam = paramLabel.substring(0, paramLabel.indexOf('T$'));\r\n                                    //tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\r\n                                    tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.length);\r\n                                }\r\n\r\n                                if (localParam.startsWith('d') || localParam.startsWith('D')) {\r\n                                    paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                        value: 'DateTimePicker',\r\n                                        lableName: localParam,\r\n                                        //ID: param.length, \r\n                                        Datetime: new Date(),\r\n                                        textValue: '',\r\n                                        TableName: tableName,\r\n                                        DisplayParam: displayName,\r\n                                        actuallableName: localParam.substring(1, localParam.length)\r\n                                    })\r\n                                }\r\n                                else {\r\n                                    paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                        value: 'TextBox1', lableName: localParam,\r\n                                        //ID: param.length, \r\n                                        textValue: '',\r\n                                        TableName: tableName,\r\n                                        DisplayParam: displayName,\r\n                                        actuallableName: localParam.substring(1, localParam.length)\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                newQuery = newQuery.substring(paramLabelEndIndex + 2, newQuery.length);\r\n\r\n                                if (paramLabel.startsWith('d') || paramLabel.startsWith('D')) {\r\n                                    paramMap.set(\"P$\" + paramLabel + \"$P\", {\r\n                                        value: 'DateTimePicker',\r\n                                        lableName: paramLabel,\r\n                                        actuallableName: paramLabel.substring(1, paramLabel.length),\r\n                                        //ID: param.length, \r\n                                        Datetime: new Date()\r\n                                    })\r\n                                }\r\n                                else {\r\n                                    paramMap.set(\"P$\" + paramLabel + \"$P\", {\r\n                                        value: 'TextBox1', lableName: paramLabel,\r\n                                        //ID: param.length, \r\n                                        textValue: '',\r\n                                        TableName: \"\",\r\n                                        DisplayParam: \"\",\r\n                                        actuallableName: paramLabel.substring(1, paramLabel.length)\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN, data: {\r\n                                screenName: \"Parameter for Results\",\r\n                                showExecute: true,\r\n                                showSave: true,\r\n                                showParam: true,\r\n                                showValidate: false,\r\n                                slideOperation: this.props.Login.operation,\r\n                                slideResult: [],\r\n                                slideList: [],\r\n                                screenFlag: \"showQuery\",\r\n                                param: paramMap,\r\n                                // Dparam: Dparam, TBLName: TBLName\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                    else {\r\n                        //query without parameters      \r\n                        const inputParam = {\r\n                            screenName: \"Results\",\r\n                            query: selectedRecord.ssqlquery.trim(),\r\n                            userInfo: this.props.Login.userInfo,\r\n                            slideOperation: this.props.Login.operation,\r\n                            screenFlag: \"showQuery\",\r\n                            data: {\r\n                                showExecute: false,\r\n                                showSave: false,\r\n                                showParam: true,\r\n                                showValidate: false,\r\n                                noSave: false,\r\n                                operation: \"view\",\r\n                                param: new Map(),\r\n                                screenName: \"Results\",\r\n                                slideOperation: this.props.Login.operation,\r\n                                screenFlag: \"showQuery\"\r\n                            }\r\n\r\n                        }\r\n                        this.props.executeUserQuery(inputParam);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.Login.resultStatus === \"Success\") {\r\n            let operation = this.props.Login.operation;\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            let postParam = undefined;\r\n            if (operation === \"update\"\r\n                || (operation === \"view\" && this.props.Login.slideOperation !== \"create\")) {\r\n                // edit\r\n                operation = \"update\";\r\n                postParam = { inputListName: \"SQLQuery\", selectedObject: \"SelectedSQLQuery\", primaryKeyField: \"nsqlquerycode\" };\r\n                let selectedRecord = { ...this.state.selectedRecord };\r\n                delete selectedRecord.nformcode;\r\n                inputData[\"sqlquery\"] = selectedRecord\r\n                this.queryFieldList.map(item => {\r\n                    return inputData[\"sqlquery\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n                })\r\n            }\r\n            else {\r\n                //add               \r\n                inputData[\"sqlquery\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n                operation = \"create\";\r\n                this.queryFieldList.map(item => {\r\n                    return inputData[\"sqlquery\"][item] = this.state.selectedRecord[item]\r\n                });\r\n            }\r\n            if (inputData[\"sqlquery\"].hasOwnProperty('esignpassword')) {\r\n                if (inputData[\"sqlquery\"]['esignpassword'] === '') {\r\n                    delete inputData[\"sqlquery\"]['esigncomments']\r\n                    delete inputData[\"sqlquery\"]['esignpassword']\r\n                    delete inputData[\"sqlquery\"]['agree']\r\n                }\r\n            }\r\n            inputData[\"sqlquery\"][\"ncharttypecode\"] = this.state.selectedRecord[\"ncharttypecode\"] ? this.state.selectedRecord[\"ncharttypecode\"].value : \"-1\";\r\n            inputData[\"sqlquery\"][\"nquerytypecode\"] = this.props.Login.masterData.SelectedQueryType.nquerytypecode;\r\n            ///code removed\r\n            const inputParam = {\r\n                classUrl: \"sqlquery\",\r\n                methodUrl: \"SQLQuery\",\r\n                inputData: inputData,\r\n                operation,\r\n                saveType, formRef, postParam, searchRef: this.searchRef\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (\r\n                showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType, parentPopUpSize: \"lg\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_INAVLIDDATA\" }));\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        // const inputParam = {\r\n        //     inputData: { \"userinfo\": this.props.Login.userInfo },\r\n        //     classUrl: \"sqlquery\",\r\n        //     methodUrl: \"SQLQuery\",\r\n        //     displayName: \"IDS_SQLBUILDER\",\r\n        //     userInfo: this.props.Login.userInfo\r\n        // };\r\n        // this.props.callService(inputParam);\r\n\r\n        let nquerytypecode = this.props.Login.masterData.SelectedQueryType ?\r\n            this.props.Login.masterData.SelectedQueryType.nquerytypecode : 0;\r\n        this.props.comboChangeQueryType(nquerytypecode, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { selectedRecord, dataStateUserQuery, userRoleControlRights, controlMap, filterData, queryType,\r\n            chartList, moduleFormName, tableType, selectedTableType, param, tableColumnList, selectedTableList,\r\n            foreignTableCount, foreignTableList, count, sqlQuery } = this.state;\r\n        let updateState = false;\r\n        // const masterData = this.props.Login.masterData;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            updateState = true;\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n        }\r\n        \r\n        if (this.props.Login.sqlQuery !== previousProps.Login.sqlQuery) {\r\n            updateState = true;\r\n            sqlQuery = this.props.Login.sqlQuery;\r\n        }\r\n\r\n        if (this.props.Login.tableColumnList !== previousProps.Login.tableColumnList) {\r\n            updateState = true;\r\n            tableColumnList = this.props.Login.tableColumnList;\r\n        }\r\n\r\n        if (this.props.Login.slideResult !== previousProps.Login.slideResult) {\r\n            dataStateUserQuery = {\r\n                skip: 0,\r\n                take: 10,\r\n            };\r\n            updateState = true;\r\n        }\r\n\r\n\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRight = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRight.push(item.ncontrolcode))\r\n            }\r\n            const controlMap1 = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            // if (this.props.Login.masterData.QueryType !== previousProps.Login.masterData.QueryType) {\r\n            const queryTypeMap = constructOptionList(this.props.Login.masterData.QueryType || [], \"nquerytypecode\",\r\n                \"squerytypename\", \"nsorter\", \"ascending\", false);\r\n            const QueryTypeList = queryTypeMap.get(\"OptionList\");\r\n\r\n            // const selectedcombo = {\r\n            //     nquerytypecode: QueryTypeList.length > 0 ? {\r\n            //         \"value\": QueryTypeList[0].item.nquerytypecode,\r\n            //         \"label\": QueryTypeList[0].item.squerytypename\r\n            //     } : this.state.selectedcombo[\"nquerytypecode\"]\r\n\r\n            // }\r\n\r\n            // }\r\n            updateState = true;\r\n            userRoleControlRights = userRoleControlRight;\r\n            controlMap = controlMap1;\r\n            filterData = this.generateBreadCrumData();\r\n            queryType = QueryTypeList;\r\n        }\r\n        else {\r\n            filterData = this.generateBreadCrumData();\r\n            if (this.props.Login.chartList !== previousProps.Login.chartList || this.props.Login.moduleFormName !== previousProps.Login.moduleFormName) {\r\n\r\n                const chartListMap = constructOptionList(this.props.Login.chartList || [], \"ncharttypecode\",\r\n                    \"schartname\", undefined, undefined, undefined);\r\n                const chartTypeList = chartListMap.get(\"OptionList\");\r\n\r\n                const moduleFormNameMap = constructOptionList(this.props.Login.moduleFormName || [], \"nformcode\",\r\n                    \"sformname\", undefined, undefined, undefined);\r\n                const moduleFormNameList = moduleFormNameMap.get(\"OptionList\");\r\n                updateState = true;\r\n                chartList = chartTypeList\r\n                moduleFormName = moduleFormNameList\r\n            }\r\n            if (this.props.Login.masterData.QueryType !== previousProps.Login.masterData.QueryType) {\r\n                const queryTypeMap = constructOptionList(this.props.Login.masterData.QueryType || [], \"nquerytypecode\",\r\n                    \"squerytypename\", \"nsorter\", \"ascending\", false);\r\n                const QueryTypeList = queryTypeMap.get(\"OptionList\");\r\n\r\n                // const selectedcombo = {\r\n                //                         nquerytypecode: QueryTypeList.length > 0 ? {\r\n                //                             \"value\": QueryTypeList[0].item.nquerytypecode,\r\n                //                             \"label\": QueryTypeList[0].item.squerytypename\r\n                //                         } : this.state.selectedcombo[\"nquerytypecode\"]\r\n\r\n                //}\r\n\r\n                updateState = true;\r\n                queryType = QueryTypeList //selectedcombo , \r\n\r\n\r\n            }\r\n            if (this.props.Login.tableType !== previousProps.Login.tableType) {\r\n                const tableTypeMap = constructOptionList(this.props.Login.tableType || [], \"ntabletypecode\",\r\n                    \"stabletype\", undefined, undefined, undefined);\r\n                const tableTypeList = tableTypeMap.get(\"OptionList\");\r\n\r\n                selectedTableType = {\r\n                    ntabletypecode: tableTypeList.length > 0 ? {\r\n                        \"value\": tableTypeList[0].item.ntabletypecode,\r\n                        \"label\": tableTypeList[0].item.stabletype\r\n                    } : this.state.selectedTableType[\"ntabletypecode\"]\r\n\r\n                }\r\n                updateState = true;\r\n                tableType = tableTypeList\r\n\r\n            }\r\n            if (this.props.Login.masterData.SelectedQueryType !== previousProps.Login.masterData.SelectedQueryType) {\r\n                updateState = true;\r\n            }\r\n            if (this.props.Login.param !== previousProps.Login.param) {\r\n                updateState = true;\r\n                param = this.props.Login.param\r\n            }\r\n        }\r\n        if (updateState) {\r\n            this.setState({\r\n                selectedRecord, dataStateUserQuery, userRoleControlRights, controlMap, filterData, queryType,\r\n                chartList, moduleFormName, tableType, selectedTableType, param, tableColumnList, selectedTableList,\r\n                foreignTableCount, foreignTableList, count, sqlQuery\r\n            })\r\n        }\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.SelectedQueryType) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_QUERYTYPE\",\r\n                    \"value\": this.props.Login.masterData.SelectedQueryType ?\r\n                        this.props.Login.masterData.SelectedQueryType.squerytypename : \"\"\r\n                    //this.props.intl.formatMessage({ id: this.props.Login.masterData.SelectedQueryType.squerytypename}) : \"\"\r\n                }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined,\r\n                testData: {}, parameterData: {}, otherTestData: {}, formulaData: {}\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, filterColumnData,\r\n    validateEsignCredential, getSQLQueryDetail, getSQLQueryComboService, comboChangeQueryType,\r\n    executeUserQuery, comboColumnValues, getColumnNamesByTableName,\r\n    getTablesName, getModuleFormName, getDatabaseTables, executeQuery, getForeignTable, \r\n    getViewColumns, getMasterData\r\n})(injectIntl(SQLBuilder));"]},"metadata":{},"sourceType":"module"}