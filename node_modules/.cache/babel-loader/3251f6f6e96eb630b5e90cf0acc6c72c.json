{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\AddMethod.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst AddMethod = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nmethodcatcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_METHODCATCODE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.methodCategoryList || [] // optionId='nmethodcatcode'\n    // optionValue='smethodcatname'\n    ,\n    value: props.selectedRecord ? props.selectedRecord[\"nmethodcatcode\"] : \"\",\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true // alphabeticalSort={true}\n    ,\n    onChange: event => props.onComboChange(event, 'nmethodcatcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_METHODNAME\"\n    }),\n    name: \"smethodname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_METHODNAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"smethodname\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_REMARKS\"\n    }),\n    name: \"sdescription\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_REMARKS\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }), props.operation === \"create\" ? /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_METHODVALIDITYENABLE\"\n    }),\n    type: \"switch\",\n    name: \"nneedvalidity\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_METHODVALIDITYENABLE\"\n    }),\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"nneedvalidity\"] === 3 ? true : false : false,\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord ? props.selectedRecord[\"nneedvalidity\"] === 3 ? true : false : false //disabled={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true :false:false}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }) : \"\", props.operation === \"create\" ? /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dvaliditystartdate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_METHODVALIDITYSTARTDATE\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"dvaliditystartdate\"] ? props.selectedRecord[\"dvaliditystartdate\"] : props.selectedRecord[\"dcurrentdate\"],\n    dateFormat: props.userInfo.ssitedate,\n    isMandatory: props.selectedRecord && props.selectedRecord[\"nneedvalidity\"] ? props.selectedRecord[\"nneedvalidity\"] === 3 ? true : false : false,\n    minDate: props.selectedRecord[\"dcurrentdate\"],\n    isClearable: false,\n    onChange: date => props.handleDateChange(\"dvaliditystartdate\", date, \"svaliditystartdate\"),\n    value: props.selectedRecord[\"dvaliditystartdate\"],\n    isDisabled: props.selectedRecord && props.selectedRecord[\"nneedvalidity\"] ? props.selectedRecord[\"nneedvalidity\"] === 3 ? false : true : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  })) : \"\", props.userInfo.istimezoneshow === transactionStatus.YES && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzvaliditystartdatetimezone\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList,\n    value: props.selectedRecord[\"ntzvaliditystartdatetimezone\"] || \"\",\n    defaultValue: props.selectedRecord[\"ntzvaliditystartdatetimezone\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzvaliditystartdatetimezone', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  })), props.operation === \"create\" ? /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dvalidityenddate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_VALIDITYENDDATE\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"dvalidityenddate\"] ? props.selectedRecord[\"dvalidityenddate\"] : props.selectedRecord[\"dcurrentdate\"],\n    dateFormat: props.userInfo.ssitedate,\n    isMandatory: props.selectedRecord && props.selectedRecord[\"nneedvalidity\"] ? props.selectedRecord[\"nneedvalidity\"] === 3 ? true : false : false,\n    minDate: props.selectedRecord[\"dcurrentdate\"],\n    isClearable: false,\n    onChange: date => props.handleDateChange(\"dvalidityenddate\", date, \"svalidityenddate\"),\n    value: props.selectedRecord[\"dvalidityenddate\"],\n    isDisabled: props.selectedRecord && props.selectedRecord[\"nneedvalidity\"] ? props.selectedRecord[\"nneedvalidity\"] === 3 ? false : true : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  })) : \"\", props.userInfo.istimezoneshow === transactionStatus.YES && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzvalidityenddatetimezone\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList,\n    value: props.selectedRecord[\"ntzvalidityenddatetimezone\"] || \"\",\n    defaultValue: props.selectedRecord[\"ntzvalidityenddatetimezone\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzvalidityenddatetimezone', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    type: \"switch\",\n    name: \"ndefaultstatus\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : false,\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : false //disabled={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true :false:false}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  })));\n};\n\nexport default injectIntl(AddMethod);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/testmanagement/AddMethod.js"],"names":["React","Row","Col","injectIntl","FormInput","CustomSwitch","FormSelectSearch","FormTextarea","DateTimePicker","transactionStatus","AddMethod","props","intl","formatMessage","id","methodCategoryList","selectedRecord","event","onComboChange","onInputOnChange","operation","userInfo","istimezoneshow","YES","ssitedate","date","handleDateChange","TimeZoneList"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport {injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\n\r\nconst AddMethod = (props) => {\r\n        \r\n        return(\r\n                <Row>\r\n                    <Col md={12}>\r\n                            <FormSelectSearch\r\n                                    name={\"nmethodcatcode\"}\r\n                                    formLabel={props.intl.formatMessage({ id:\"IDS_METHODCATCODE\"})}                              \r\n                                    placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                              \r\n                                    options={ props.methodCategoryList || []}\r\n                                   // optionId='nmethodcatcode'\r\n                                   // optionValue='smethodcatname'\r\n                                    value = { props.selectedRecord ? props.selectedRecord[\"nmethodcatcode\"]:\"\"}\r\n                                    isMandatory={true}\r\n                                    isMulti={false}\r\n                                    isSearchable={true}                                \r\n                                    isDisabled={false}\r\n                                    closeMenuOnSelect={true}\r\n                                   // alphabeticalSort={true}\r\n                                    onChange = {(event)=> props.onComboChange(event, 'nmethodcatcode')}                               \r\n                            />\r\n                    {/* </Col>\r\n                    <Col md={12}> */}\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id:\"IDS_METHODNAME\"})}\r\n                            name={\"smethodname\"}\r\n                            type=\"text\"\r\n                            onChange={(event)=>props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_METHODNAME\"})}\r\n                            value ={props.selectedRecord?props.selectedRecord[\"smethodname\"]:\"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={100}\r\n                        />\r\n                    {/* </Col>\r\n\r\n                    <Col md={12}> */}\r\n                        <FormTextarea\r\n                            label={props.intl.formatMessage({ id:\"IDS_REMARKS\"})}\r\n                            name={\"sdescription\"}\r\n                            onChange={(event)=>props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_REMARKS\"})}\r\n                            value ={props.selectedRecord ? props.selectedRecord[\"sdescription\"] :\"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={255}\r\n                            >\r\n                        </FormTextarea>\r\n                        {props.operation===\"create\"?\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id:\"IDS_METHODVALIDITYENABLE\"})}\r\n                            type=\"switch\"\r\n                            name={\"nneedvalidity\"}\r\n                            onChange={(event)=>props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_METHODVALIDITYENABLE\"})}\r\n                            defaultValue ={props.selectedRecord ? props.selectedRecord[\"nneedvalidity\"] === 3 ? true :false:false}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            checked={props.selectedRecord ? props.selectedRecord[\"nneedvalidity\"] === 3 ? true :false:false}\r\n                            //disabled={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true :false:false}\r\n                            >                                               \r\n\r\n                        </CustomSwitch>\r\n                         :\"\"\r\n                    } \r\n                     {props.operation===\"create\"? \r\n                       <Col md={props.userInfo.istimezoneshow === transactionStatus.YES  ? 6 : 12}>\r\n                        <DateTimePicker\r\n                       name={\"dvaliditystartdate\"} \r\n                       label={ props.intl.formatMessage({ id:\"IDS_METHODVALIDITYSTARTDATE\"})}                     \r\n                       className='form-control'\r\n                       placeholderText=\"Select date..\"\r\n                       selected={props.selectedRecord[\"dvaliditystartdate\"]?props.selectedRecord[\"dvaliditystartdate\"]:props.selectedRecord[\"dcurrentdate\"] }\r\n                       dateFormat={props.userInfo.ssitedate}\r\n                       isMandatory={props.selectedRecord && props.selectedRecord[\"nneedvalidity\"] ?props.selectedRecord[\"nneedvalidity\"]===3?true:false:false}\r\n                       minDate={props.selectedRecord[\"dcurrentdate\"]}\r\n                       isClearable={false}\r\n                       onChange={date => props.handleDateChange(\"dvaliditystartdate\", date,\"svaliditystartdate\")}\r\n                       value={props.selectedRecord[\"dvaliditystartdate\"]}\r\n                       isDisabled={props.selectedRecord && props.selectedRecord[\"nneedvalidity\"] ?props.selectedRecord[\"nneedvalidity\"]===3?false:true:true}\r\n                     />\r\n                     \r\n                        \r\n                        \r\n                     </Col>\r\n                     : \"\"\r\n                }\r\n                     {props.userInfo.istimezoneshow  === transactionStatus.YES &&\r\n                        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                name={\"ntzvaliditystartdatetimezone\"}\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                options={props.TimeZoneList}\r\n                                value={props.selectedRecord[\"ntzvaliditystartdatetimezone\"] || \"\"}\r\n                                defaultValue={props.selectedRecord[\"ntzvaliditystartdatetimezone\"]}\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                // isClearable={false}                               \r\n                                isDisabled={false}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                                onChange={(event) => props.onComboChange(event, 'ntzvaliditystartdatetimezone', 1)}\r\n                            />\r\n                        </Col>\r\n                       \r\n                    }\r\n                      \r\n                        \r\n                       {props.operation===\"create\"? \r\n                <Col md={props.userInfo.istimezoneshow === transactionStatus.YES  ? 6 : 12}>\r\n                    <DateTimePicker\r\n                       name={\"dvalidityenddate\"} \r\n                       label={ props.intl.formatMessage({ id:\"IDS_VALIDITYENDDATE\"})}                     \r\n                       className='form-control'\r\n                       placeholderText=\"Select date..\"\r\n                       selected={props.selectedRecord[\"dvalidityenddate\"]?props.selectedRecord[\"dvalidityenddate\"]:props.selectedRecord[\"dcurrentdate\"] }\r\n                       dateFormat={props.userInfo.ssitedate}\r\n                       isMandatory={props.selectedRecord && props.selectedRecord[\"nneedvalidity\"] ?props.selectedRecord[\"nneedvalidity\"]===3?true:false:false}\r\n                       minDate={props.selectedRecord[\"dcurrentdate\"]}\r\n                       isClearable={false}\r\n                       onChange={date => props.handleDateChange(\"dvalidityenddate\", date,\"svalidityenddate\")}\r\n                       value={props.selectedRecord[\"dvalidityenddate\"]}\r\n                       isDisabled={props.selectedRecord && props.selectedRecord[\"nneedvalidity\"] ?props.selectedRecord[\"nneedvalidity\"]===3?false:true:true}\r\n                    />\r\n                    </Col>\r\n                    : \"\" }\r\n                    {props.userInfo.istimezoneshow === transactionStatus.YES  &&\r\n                        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                name={\"ntzvalidityenddatetimezone\"}\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                options={props.TimeZoneList}\r\n                                value={props.selectedRecord[\"ntzvalidityenddatetimezone\"] || \"\"}\r\n                                defaultValue={props.selectedRecord[\"ntzvalidityenddatetimezone\"]}\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                // isClearable={false}                               \r\n                                isDisabled={false}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                                onChange={(event) => props.onComboChange(event, 'ntzvalidityenddatetimezone', 1)}\r\n                            />\r\n                        </Col>\r\n                    }\r\n                    {/* :\"\"\r\n                } */}\r\n\r\n                    {/* </Col>\r\n                    <Col md={12}> */}\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id:\"IDS_DEFAULTSTATUS\"})}\r\n                            type=\"switch\"\r\n                            name={\"ndefaultstatus\"}\r\n                            onChange={(event)=>props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_DEFAULTSTATUS\"})}\r\n                            defaultValue ={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true :false:false}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            checked={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true :false:false}\r\n                            //disabled={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true :false:false}\r\n                            >                                               \r\n\r\n                        </CustomSwitch>\r\n                    </Col>\r\n                        \r\n                </Row>\r\n            )   \r\n}\r\n\r\nexport default injectIntl(AddMethod);"]},"metadata":{},"sourceType":"module"}