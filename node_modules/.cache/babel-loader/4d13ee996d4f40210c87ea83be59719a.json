{"ast":null,"code":"import React from'react';import{Button,Row,Col}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';var AddSampleProcessType=function AddSampleProcessType(props){return/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PROJECTTYPE\"}),isSearchable:true,name:\"sprojecttypename\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.projecttypeList||[],value:props.selectedRecord[\"sprojecttypename\"]||\"\",defaultValue:props.selectedRecord[\"sprojecttypename\"],onChange:function onChange(event){return props.onComboChange(event,\"sprojecttypename\",1);},closeMenuOnSelect:true,isMulti:false}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_SAMPLETYPE\"}),isSearchable:true,name:\"sproductname\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.sampletypeList||[],value:props.selectedRecord[\"sproductname\"]||\"\",defaultValue:props.selectedRecord[\"sproductname\"],onChange:function onChange(event){return props.onComboChange(event,\"sproductname\",1);},closeMenuOnSelect:true}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_COLLECTIONTUBETYPEPROCESSTYPE\"}),isSearchable:true,name:\"stubename\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.collectiontubeList||[],value:props.selectedRecord[\"stubename\"]||\"\",defaultValue:props.selectedRecord[\"stubename\"],onChange:function onChange(event){return props.onComboChange(event,\"stubename\",1);},closeMenuOnSelect:true}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PROCESSTYPENAME\"}),isSearchable:true,name:\"sprocesstypename\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_PROCESSTYPENAME\"}),isMandatory:true,isClearable:false,options:props.processtypeList||[],value:props.selectedRecord[\"sprocesstypename\"]||\"\",defaultValue:props.selectedRecord[\"sprocesstypename\"],onChange:function onChange(event){return props.onComboChange(event,\"sprocesstypename\",1);},closeMenuOnSelect:true}),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_PROCESSTIME\"}),name:\"processtime\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,\"processtime\");},placeholder:props.intl.formatMessage({id:\"IDS_PROCESSTIME\"}),value:props.selectedRecord[\"processtime\"]||\"\",isMandatory:true,isClearable:false,required:true,maxLength:4,isDisabled:false,width:200})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PROCESSPERIODTIME\"}),isSearchable:true,name:\"processperiodtime\",isDisabled:true,placeholder:props.intl.formatMessage({id:\"IDS_PROCESSPERIODTIME\"}),isMandatory:true,isClearable:false,options:props.periodList||[],value:props.selectedRecord[\"processperiodtime\"]||\"\",defaultValue:props.selectedRecord[\"processperiodtime\"],onChange:function onChange(event){return props.onComboChange(event,\"processperiodtime\",1);},closeMenuOnSelect:true}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_GRACETIME\"}),name:\"gracetime\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,\"gracetime\");},placeholder:props.intl.formatMessage({id:\"IDS_GRACETIME\"}),value:props.selectedRecord[\"gracetime\"]||\"\",isMandatory:true,isClearable:false,required:true,maxLength:4,isDisabled:false})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_GRACEPERIODTIME\"}),isSearchable:true,name:\"graceperiodtime\",isDisabled:true,placeholder:props.intl.formatMessage({id:\"IDS_GRACEPERIODTIME\"}),isMandatory:true,isClearable:false,options:props.periodList||[],value:props.selectedRecord[\"graceperiodtime\"]||\"\",defaultValue:props.selectedRecord[\"graceperiodtime\"],onChange:function onChange(event){return props.onComboChange(event,\"graceperiodtime\",1);},closeMenuOnSelect:true}))),/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_EXECTIONORDER\"}),name:\"executionorder\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,\"executionorder\");},placeholder:props.intl.formatMessage({id:\"IDS_EXECTIONORDER\"}),value:props.selectedRecord[\"executionorder\"]||\"\",isMandatory:true,isClearable:false,required:true,maxLength:2,isDisabled:false}),/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),name:\"sdescription\",onChange:function onChange(event){return props.onInputOnChange(event,\"sdescription\");},placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord[\"sdescription\"],rows:\"3\",isMandatory:false,isClearable:false,required:true,maxLength:255,isDisabled:false}));};export default injectIntl(AddSampleProcessType);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/storagemanagement/AddSampleProcessType.js"],"names":["React","Button","Row","Col","FormattedMessage","injectIntl","FormSelectSearch","FormInput","FormTextarea","AddSampleProcessType","props","intl","formatMessage","id","projecttypeList","selectedRecord","event","onComboChange","sampletypeList","collectiontubeList","processtypeList","onInputOnChange","periodList"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\n\r\nconst AddSampleProcessType = (props) => {\r\n\r\n    return (\r\n\r\n        <Col md={12}>\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                isSearchable={true}\r\n                name={\"sprojecttypename\"}\r\n                isDisabled={false}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                options={props.projecttypeList || []}\r\n                value={props.selectedRecord[\"sprojecttypename\"] || \"\"}\r\n                defaultValue={props.selectedRecord[\"sprojecttypename\"]}\r\n                onChange={(event) => props.onComboChange(event, \"sprojecttypename\", 1)}\r\n                closeMenuOnSelect={true}\r\n                isMulti={false}\r\n            />\r\n\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                isSearchable={true}\r\n                name={\"sproductname\"}\r\n                isDisabled={false}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                options={props.sampletypeList || []}\r\n                value={props.selectedRecord[\"sproductname\"] || \"\"}\r\n                defaultValue={props.selectedRecord[\"sproductname\"]}\r\n                onChange={(event) => props.onComboChange(event, \"sproductname\", 1)}\r\n                closeMenuOnSelect={true}\r\n            />\r\n\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_COLLECTIONTUBETYPEPROCESSTYPE\" })}\r\n                isSearchable={true}\r\n                name={\"stubename\"}\r\n                isDisabled={false}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                options={props.collectiontubeList || []}\r\n                value={props.selectedRecord[\"stubename\"] || \"\"}\r\n                defaultValue={props.selectedRecord[\"stubename\"]}\r\n                onChange={(event) => props.onComboChange(event, \"stubename\", 1)}\r\n                closeMenuOnSelect={true}\r\n            />\r\n\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_PROCESSTYPENAME\" })}\r\n                isSearchable={true}\r\n                name={\"sprocesstypename\"}\r\n                isDisabled={false}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_PROCESSTYPENAME\" })}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                options={props.processtypeList || []}\r\n                value={props.selectedRecord[\"sprocesstypename\"] || \"\"}\r\n                defaultValue={props.selectedRecord[\"sprocesstypename\"]}\r\n                onChange={(event) => props.onComboChange(event, \"sprocesstypename\", 1)}\r\n                closeMenuOnSelect={true}\r\n            />\r\n\r\n            <Row>\r\n                <Col md={6}>\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_PROCESSTIME\" })}\r\n                        name={\"processtime\"}\r\n                        type={\"text\"}\r\n                        onChange={(event) => props.onInputOnChange(event, \"processtime\")}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_PROCESSTIME\" })}\r\n                        value={props.selectedRecord[\"processtime\"] || \"\"}\r\n                        isMandatory={true}\r\n                        isClearable={false}\r\n                        required={true}\r\n                        maxLength={4}\r\n                        isDisabled={false}\r\n                        width={200}\r\n                    />\r\n\r\n                </Col>\r\n                <Col md={6}>\r\n\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_PROCESSPERIODTIME\" })}\r\n                        isSearchable={true}\r\n                        name={\"processperiodtime\"}\r\n                        isDisabled={true}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_PROCESSPERIODTIME\" })}\r\n                        isMandatory={true}\r\n                        isClearable={false}\r\n                        options={props.periodList || []}\r\n                        value={props.selectedRecord[\"processperiodtime\"] || \"\"}\r\n                        defaultValue={props.selectedRecord[\"processperiodtime\"]}\r\n                        onChange={(event) => props.onComboChange(event, \"processperiodtime\", 1)}\r\n                        closeMenuOnSelect={true}\r\n                    />\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={6}>\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_GRACETIME\" })}\r\n                        name={\"gracetime\"}\r\n                        type={\"text\"}\r\n                        onChange={(event) => props.onInputOnChange(event, \"gracetime\")}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_GRACETIME\" })}\r\n                        value={props.selectedRecord[\"gracetime\"] || \"\"}\r\n                        isMandatory={true}\r\n                        isClearable={false}\r\n                        required={true}\r\n                        maxLength={4}\r\n                        isDisabled={false}\r\n                    />\r\n                </Col>\r\n                <Col md={6}>\r\n\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_GRACEPERIODTIME\" })}\r\n                        isSearchable={true}\r\n                        name={\"graceperiodtime\"}\r\n                        isDisabled={true}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_GRACEPERIODTIME\" })}\r\n                        isMandatory={true}\r\n                        isClearable={false}\r\n                        options={props.periodList || []}\r\n                        value={props.selectedRecord[\"graceperiodtime\"] || \"\"}\r\n                        defaultValue={props.selectedRecord[\"graceperiodtime\"]}\r\n                        onChange={(event) => props.onComboChange(event, \"graceperiodtime\", 1)}\r\n                        closeMenuOnSelect={true}\r\n                    />\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <FormInput\r\n                label={props.intl.formatMessage({ id: \"IDS_EXECTIONORDER\" })}\r\n                name={\"executionorder\"}\r\n                type={\"text\"}\r\n                onChange={(event) => props.onInputOnChange(event, \"executionorder\")}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_EXECTIONORDER\" })}\r\n                value={props.selectedRecord[\"executionorder\"] || \"\"}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                required={true}\r\n                maxLength={2}\r\n                isDisabled={false}\r\n            />\r\n\r\n            <FormTextarea\r\n                label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                name={\"sdescription\"}\r\n                onChange={(event) => props.onInputOnChange(event, \"sdescription\")}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                value={props.selectedRecord[\"sdescription\"]}\r\n                rows=\"3\"\r\n                isMandatory={false}\r\n                isClearable={false}\r\n                required={true}\r\n                maxLength={255}\r\n                isDisabled={false}\r\n            />\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default injectIntl(AddSampleProcessType);"]},"metadata":{},"sourceType":"module"}