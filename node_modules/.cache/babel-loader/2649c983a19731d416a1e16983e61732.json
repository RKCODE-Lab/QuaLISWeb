{"ast":null,"code":"import{ResultEntry}from'../../components/Enumeration';export function numberConversion(number,rounding){return Number.parseFloat(number).toFixed(rounding);}export function numericGrade(parameter,sfinalresult){var result=parseFloat(sfinalresult);var minA=parseFloat(parameter.smina);var maxA=parseFloat(parameter.smaxa);var minB=parseFloat(parameter.sminb);var maxB=parseFloat(parameter.smaxb);var minLoD=parseFloat(parameter.sminlod);var maxLoD=parseFloat(parameter.smaxlod);var minLOQ=parseFloat(parameter.sminloq);var maxLOQ=parseFloat(parameter.smaxloq);var disregard=parseFloat(parameter.sdisregard);if(disregard!==\"null\"&&disregard>sfinalresult){return ResultEntry.RESULTSTATUS_BELOWDISREGARD;}else if(!isNaN(minLOQ)&&!isNaN(maxLOQ)){if(result>=minLOQ&&result<=maxLOQ){return ResultEntry.RESULTSTATUS_BQL;}else if(!isNaN(minLoD)&&!isNaN(maxLoD)){if(result>=minLoD&&result<=maxLoD){return ResultEntry.RESULTSTATUS_BDL;}else{return findLOQandLOD(minLoD,maxLoD,minLOQ,maxLOQ,minA,maxA,minB,maxB,sfinalresult);}}else{return findLOQandLOD(minLoD,maxLoD,minLOQ,maxLOQ,minA,maxA,minB,maxB,sfinalresult);}}else if(!isNaN(minLoD)&&!isNaN(maxLoD)){if(result>=minLoD&&result<=maxLoD){return ResultEntry.RESULTSTATUS_BDL;}else{return findLOQandLOD(minLoD,maxLoD,minLOQ,maxLOQ,minA,maxA,minB,maxB,sfinalresult);}}else{return findLOQandLOD(minLoD,maxLoD,minLOQ,maxLOQ,minA,maxA,minB,maxB,sfinalresult);}}export function findLOQandLOD(minLoD,maxLoD,minLOQ,maxLOQ,minA,maxA,minB,maxB,result){if(isNaN(minLoD)&&isNaN(maxLoD)&&isNaN(minLOQ)&&isNaN(maxLOQ)){return findGrade(minB,minA,maxA,maxB,result);}else if(!isNaN(minLoD)&&isNaN(maxLoD)&&isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<minLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result===minLoD){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&!isNaN(maxLoD)&&isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<maxLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result===maxLoD){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&isNaN(maxLoD)&&!isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<minLOQ){return ResultEntry.RESULTSTATUS_BLOD;}else if(result===minLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&isNaN(maxLoD)&&isNaN(minLOQ)&&!isNaN(maxLOQ)){if(result<maxLOQ){return ResultEntry.RESULTSTATUS_BLOD;}else if(result===maxLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(!isNaN(minLoD)&&!isNaN(maxLoD)&&isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<minLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=minLoD&&result<=maxLoD){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(!isNaN(minLoD)&&isNaN(maxLoD)&&!isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<minLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=minLoD&&result<=minLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(!isNaN(minLoD)&&isNaN(maxLoD)&&isNaN(minLOQ)&&!isNaN(maxLOQ)){if(result<minLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=minLoD&&result<=maxLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&!isNaN(maxLoD)&&!isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<maxLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=maxLoD&&result<=minLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&!isNaN(maxLoD)&&isNaN(minLOQ)&&!isNaN(maxLOQ)){if(result<maxLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=maxLoD&&result<=maxLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&isNaN(maxLoD)&&!isNaN(minLOQ)&&!isNaN(maxLOQ)){if(result<minLOQ){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=minLOQ&&result<=maxLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(!isNaN(minLoD)&&!isNaN(maxLoD)&&!isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<minLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=minLoD&&result<=minLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&isNaN(maxLoD)&&!isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<maxLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=maxLoD&&result<=minLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(!isNaN(minLoD)&&isNaN(maxLoD)&&!isNaN(minLOQ)&&!isNaN(maxLOQ)){if(result<minLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=minLoD&&result<=maxLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(!isNaN(minLoD)&&isNaN(maxLoD)&&isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<maxLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=maxLoD&&result<=maxLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else{return findGrade(minB,minA,maxA,maxB,result);}}export function findGrade(minB,minA,maxA,maxB,result){if(isNaN(minA)&&isNaN(minB)&&isNaN(maxA)&&isNaN(maxB)){return ResultEntry.RESULTSTATUS_FIO;}else if(isNaN(minA)&&!isNaN(minB)&&isNaN(maxA)&&!isNaN(maxB)){if(result>=minB&&result<=maxB)return ResultEntry.RESULTSTATUS_PASS;else if(result<minB||maxB<result)return ResultEntry.RESULTSTATUS_OOS;else return ResultEntry.RESULTSTATUS_PASS;}else if(!isNaN(minA)&&isNaN(minB)&&!isNaN(maxA)&&isNaN(maxB)){if(result>=minA&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else return ResultEntry.RESULTSTATUS_OOS;}else if(isNaN(minA)&&isNaN(minB)&&isNaN(maxA)&&!isNaN(maxB)){if(result<=maxB){return ResultEntry.RESULTSTATUS_PASS;}else if(result>maxB){return ResultEntry.RESULTSTATUS_OOS;}}else if(isNaN(minA)&&isNaN(minB)&&!isNaN(maxA)&&isNaN(maxB)){if(result<=maxA){return ResultEntry.RESULTSTATUS_PASS;}else if(result>maxA){return ResultEntry.RESULTSTATUS_OOS;}}else if(isNaN(minA)&&isNaN(minB)&&!isNaN(maxA)&&!isNaN(maxB)){if(result>maxA&&result<=maxB)return ResultEntry.RESULTSTATUS_OOS;else if(result>maxB)return ResultEntry.RESULTSTATUS_OOT;else if(result<maxA)return ResultEntry.RESULTSTATUS_PASS;}else if(isNaN(minA)&&!isNaN(minB)&&isNaN(maxA)&&isNaN(maxB)){if(result>=minB)return ResultEntry.RESULTSTATUS_PASS;else if(result<minB)return ResultEntry.RESULTSTATUS_OOS;}else if(isNaN(minA)&&!isNaN(minB)&&isNaN(maxA)&&!isNaN(maxB)){if(result>=minA&&result<=maxB)return ResultEntry.RESULTSTATUS_PASS;else if(result<minA)return ResultEntry.RESULTSTATUS_OOS;else if(result>maxB)return ResultEntry.RESULTSTATUS_OOS;}else if(isNaN(minA)&&!isNaN(minB)&&!isNaN(maxA)&&!isNaN(maxB)){if(result>=minB)return ResultEntry.RESULTSTATUS_PASS;else if(result>maxA&&result<=maxB)return ResultEntry.RESULTSTATUS_OOS;else if(result>maxB)return ResultEntry.RESULTSTATUS_OOT;else if(result<minB)return ResultEntry.RESULTSTATUS_OOT;}else if(!isNaN(minA)&&isNaN(minB)&&isNaN(maxA)&&isNaN(maxB)){if(result>=minA)return ResultEntry.RESULTSTATUS_PASS;else if(result<minA)return ResultEntry.RESULTSTATUS_OOS;}else if(!isNaN(minA)&&isNaN(minB)&&!isNaN(maxA)&&!isNaN(maxB)){if(result>=minA&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else if(result>=minA&&result<=maxB)return ResultEntry.RESULTSTATUS_OOS;else return ResultEntry.RESULTSTATUS_OOT;}else if(isNaN(minA)&&!isNaN(minB)&&!isNaN(maxA)&&isNaN(maxB)){if(result>=minB&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else if(result<minB)return ResultEntry.RESULTSTATUS_OOS;else if(result>maxA)return ResultEntry.RESULTSTATUS_OOS;}else if(isNaN(minA)&&!isNaN(minB)&&!isNaN(maxA)&&isNaN(maxB)){if(result>=minB&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else if(result>maxA&&result<=maxB)return ResultEntry.RESULTSTATUS_OOS;else if(result>maxB||result<minB)return ResultEntry.RESULTSTATUS_OOS;}else if(!isNaN(minA)&&!isNaN(minB)&&isNaN(maxA)&&!isNaN(maxB)){if(result>=minB&&result<minA)return ResultEntry.RESULTSTATUS_OOS;else if(result<minB)return ResultEntry.RESULTSTATUS_OOS;else if(result>=minA)return ResultEntry.RESULTSTATUS_PASS;}else if(isNaN(minA)&&!isNaN(minB)&&isNaN(maxA)&&!isNaN(maxB)){if(result>=minB&&result<minA)return ResultEntry.RESULTSTATUS_OOS;else if(result>=minA&&result<=maxB)return ResultEntry.RESULTSTATUS_PASS;else if(result>maxB||result<minB)return ResultEntry.RESULTSTATUS_OOT;}else if(!isNaN(minA)&&!isNaN(minB)&&!isNaN(maxA)&&isNaN(maxB)){if(result>=minB&&result<minA)return ResultEntry.RESULTSTATUS_OOS;else if(result>=minA&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else if(result<minB)return ResultEntry.RESULTSTATUS_OOT;else if(result>maxA)return ResultEntry.RESULTSTATUS_OOT;}else if(!isNaN(minA)&&!isNaN(minB)&&!isNaN(maxA)&&!isNaN(maxB)){if(result>=minA&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else if(result>=minB&&result<=maxB)return ResultEntry.RESULTSTATUS_OOT;else if((result<minB||maxB<result)&&minB!==0&&maxB!==0)return ResultEntry.RESULTSTATUS_OOS;else return ResultEntry.RESULTSTATUS_PASS;}}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryValidation.jsx"],"names":["ResultEntry","numberConversion","number","rounding","Number","parseFloat","toFixed","numericGrade","parameter","sfinalresult","result","minA","smina","maxA","smaxa","minB","sminb","maxB","smaxb","minLoD","sminlod","maxLoD","smaxlod","minLOQ","sminloq","maxLOQ","smaxloq","disregard","sdisregard","RESULTSTATUS_BELOWDISREGARD","isNaN","RESULTSTATUS_BQL","RESULTSTATUS_BDL","findLOQandLOD","findGrade","RESULTSTATUS_BLOD","RESULTSTATUS_BLOQ","RESULTSTATUS_FIO","RESULTSTATUS_PASS","RESULTSTATUS_OOS","RESULTSTATUS_OOT"],"mappings":"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","sourcesContent":["import { ResultEntry } from '../../components/Enumeration';\r\n\r\nexport function numberConversion(number, rounding) {\r\n    return Number.parseFloat(number).toFixed(rounding);\r\n}\r\n\r\nexport function numericGrade(parameter, sfinalresult) {\r\n    let result = parseFloat(sfinalresult);\r\n    let minA = parseFloat(parameter.smina);\r\n    let maxA = parseFloat(parameter.smaxa);\r\n    let minB = parseFloat(parameter.sminb);\r\n    let maxB = parseFloat(parameter.smaxb);\r\n    let minLoD = parseFloat(parameter.sminlod);\r\n    let maxLoD = parseFloat(parameter.smaxlod);\r\n    let minLOQ = parseFloat(parameter.sminloq);\r\n    let maxLOQ = parseFloat(parameter.smaxloq);\r\n    let disregard = parseFloat(parameter.sdisregard);\r\n    if (disregard !== \"null\" && disregard > sfinalresult) {\r\n        return ResultEntry.RESULTSTATUS_BELOWDISREGARD;\r\n    } else if (!isNaN(minLOQ) && !isNaN(maxLOQ)) {\r\n        if (result >= minLOQ && result <= maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BQL;\r\n        }\r\n        else if (!isNaN(minLoD) && !isNaN(maxLoD)) {\r\n            if (result >= minLoD && result <= maxLoD) {\r\n                return ResultEntry.RESULTSTATUS_BDL;\r\n            }\r\n            else {\r\n                return findLOQandLOD(minLoD, maxLoD, minLOQ, maxLOQ, minA, maxA, minB, maxB, sfinalresult);\r\n            }\r\n        } else {\r\n            return findLOQandLOD(minLoD, maxLoD, minLOQ, maxLOQ, minA, maxA, minB, maxB, sfinalresult);\r\n        }\r\n    } else if (!isNaN(minLoD) && !isNaN(maxLoD)) {\r\n        if (result >= minLoD && result <= maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BDL;\r\n        }\r\n        else {\r\n            return findLOQandLOD(minLoD, maxLoD, minLOQ, maxLOQ, minA, maxA, minB, maxB, sfinalresult);\r\n        }\r\n    } else {\r\n        return findLOQandLOD(minLoD, maxLoD, minLOQ, maxLOQ, minA, maxA, minB, maxB, sfinalresult);\r\n    }\r\n}\r\n\r\n\r\nexport function findLOQandLOD(minLoD, maxLoD, minLOQ, maxLOQ, minA, maxA, minB, maxB, result) {\r\n    if (isNaN(minLoD) && isNaN(maxLoD) && isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        return findGrade(minB, minA, maxA, maxB, result)\r\n    } else if (!isNaN(minLoD) && isNaN(maxLoD) && isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result === minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && !isNaN(maxLoD) && isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result === maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && isNaN(maxLoD) && !isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result === minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && isNaN(maxLoD) && isNaN(minLOQ) && !isNaN(maxLOQ)) {\r\n        if (result < maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result === maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (!isNaN(minLoD) && !isNaN(maxLoD) && isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= minLoD && result <= maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (!isNaN(minLoD) && isNaN(maxLoD) && !isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= minLoD && result <= minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (!isNaN(minLoD) && isNaN(maxLoD) && isNaN(minLOQ) && !isNaN(maxLOQ)) {\r\n        if (result < minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= minLoD && result <= maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && !isNaN(maxLoD) && !isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= maxLoD && result <= minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && !isNaN(maxLoD) && isNaN(minLOQ) && !isNaN(maxLOQ)) {\r\n        if (result < maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= maxLoD && result <= maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && isNaN(maxLoD) && !isNaN(minLOQ) && !isNaN(maxLOQ)) {\r\n        if (result < minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= minLOQ && result <= maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (!isNaN(minLoD) && !isNaN(maxLoD) && !isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= minLoD && result <= minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && isNaN(maxLoD) && !isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= maxLoD && result <= minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (!isNaN(minLoD) && isNaN(maxLoD) && !isNaN(minLOQ) && !isNaN(maxLOQ)) {\r\n        if (result < minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= minLoD && result <= maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (!isNaN(minLoD) && isNaN(maxLoD) && isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= maxLoD && result <= maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else {\r\n        return findGrade(minB, minA, maxA, maxB, result);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function findGrade(minB, minA, maxA, maxB, result) {\r\n    if (isNaN(minA) && isNaN(minB) && isNaN(maxA) && isNaN(maxB)) {\r\n        return ResultEntry.RESULTSTATUS_FIO;\r\n    } else if (isNaN(minA) && !isNaN(minB) && isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minB && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result < minB || maxB < result)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n    } else if (!isNaN(minA) && isNaN(minB) && !isNaN(maxA) && isNaN(maxB)) {\r\n        if (result >= minA && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n    } else if (isNaN(minA) && isNaN(minB) && isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result <= maxB) {\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        } else if (result > maxB) {\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        }\r\n    } else if (isNaN(minA) && isNaN(minB) && !isNaN(maxA) && isNaN(maxB)) {\r\n        if (result <= maxA) {\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        } else if (result > maxA) {\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        }\r\n    } else if (isNaN(minA) && isNaN(minB) && !isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result > maxA && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result > maxB)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n        else if (result < maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n    } else if (isNaN(minA) && !isNaN(minB) && isNaN(maxA) && isNaN(maxB)) {\r\n        if (result >= minB)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n    } else if (isNaN(minA) && !isNaN(minB) && isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minA && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result < minA)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result > maxB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n    } else if (isNaN(minA) && !isNaN(minB) && !isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minB)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result > maxA && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result > maxB)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n        else if (result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n    } else if (!isNaN(minA) && isNaN(minB) && isNaN(maxA) && isNaN(maxB)) {\r\n        if (result >= minA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result < minA)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n    } else if (!isNaN(minA) && isNaN(minB) && !isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minA && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result >= minA && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n    } else if (isNaN(minA) && !isNaN(minB) && !isNaN(maxA) && isNaN(maxB)) {\r\n        if (result >= minB && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result > maxA)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n    } else if (isNaN(minA) && !isNaN(minB) && !isNaN(maxA) && isNaN(maxB)) {\r\n        if (result >= minB && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result > maxA && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result > maxB || result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n    } else if (!isNaN(minA) && !isNaN(minB) && isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minB && result < minA)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result >= minA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n    } else if (isNaN(minA) && !isNaN(minB) && isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minB && result < minA)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result >= minA && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result > maxB || result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n    } else if (!isNaN(minA) && !isNaN(minB) && !isNaN(maxA) && isNaN(maxB)) {\r\n        if (result >= minB && result < minA)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result >= minA && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n        else if (result > maxA)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n    } else if (!isNaN(minA) && !isNaN(minB) && !isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minA && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result >= minB && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n        else if ((result < minB || maxB < result) && (minB !== 0 && maxB !== 0))\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}