{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Row,Col,Card,Nav,FormGroup,FormLabel}from\"react-bootstrap\";import{connect}from\"react-redux\";import{toast}from\"react-toastify\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faTrashAlt,faPencilAlt,faThumbsUp,faPlus,faEye}from'@fortawesome/free-solid-svg-icons';import{ReactComponent as Quotationdiscount}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/quotationdiscount.svg\";import{injectIntl,FormattedMessage}from\"react-intl\";import{callService,crudMaster,validateEsignCredential,updateStore,getQuotation,filterColumnData,getProjectTypeComboService,viewAttachment,addQuotation,getreloadQuotation,getQuotationAddTestService,getQuotationPricingEditService,GrossQuotation,getClientCategoryComboService,getQuotaionClientComboService,getProjectCodeComboService,getQuotaionProductCategoryComboService}from\"../../actions\";import ListMaster from\"../../components/list-master/list-master.component\";import{transactionStatus}from\"../../components/Enumeration\";import AddQuotation from\"../../pages/quotation/AddQuotation\";import{DEFAULT_RETURN}from\"../../actions/LoginTypes\";import SlideOutModal from\"../../components/slide-out-modal/SlideOutModal\";import Esign from\"../audittrail/Esign\";import{showEsign,getControlMap,formatInputDate}from\"../../components/CommonScript\";import{ReadOnlyText,ContentPanel}from\"../../components/App.styles\";import{process}from\"@progress/kendo-data-query\";import ConfirmMessage from\"../../components/confirm-alert/confirm-message.component\";// import ProjectMasterFilter from './ProjectMasterFilter';\nimport{intl}from\"../../components/App\";// import DataGrid from '../../components/data-grid/data-grid.component';\nimport QuotationTab from\"./QuotationTab\";import AddQuotationPreview from\"../../pages/quotation/AddQuotationPreview\";var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var Quotation=/*#__PURE__*/function(_Component){_inherits(Quotation,_Component);var _super=_createSuper(Quotation);function Quotation(props){var _this;_classCallCheck(this,Quotation);_this=_super.call(this,props);_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event,optional){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type===\"checkbox\"){selectedRecord[event.target.name]=event.target.checked===true?3:4;}else if(event.target.type==='radio'){selectedRecord[event.target.name]=optional;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onSaveClick=function(saveType,formRef){var quotationData=[];var inputParam={};var slideOutModal;quotationData[\"userinfo\"]=_this.props.Login.userInfo;var postParam={inputListName:\"Quotation\",selectedObject:\"SelectedQuotation\",primaryKeyField:\"nquotationcode\"};if(_this.props.Login.operation===\"update\"&&_this.props.Login.screenName===\"IDS_QUOTATION\"){postParam[\"primaryKeyValue\"]=_this.props.Login.masterData.SelectedQuotation.nquotationcode;quotationData[\"quotation\"]={nquotationcode:_this.props.Login.masterData.SelectedQuotation.nquotationcode,nsitecode:_this.props.Login.userInfo.nmastersitecode,sprojecttitle:_this.state.selectedRecord.sprojecttitle===undefined?\"\":_this.state.selectedRecord.sprojecttitle,sclientsiteaddress:_this.state.selectedRecord.sclientsiteaddress===undefined?\"\":_this.state.selectedRecord.sclientsiteaddress,sinvoiceaddress:_this.state.selectedRecord.sinvoiceaddress===undefined?\"\":_this.state.selectedRecord.sinvoiceaddress,sdescription:_this.state.selectedRecord.sdescription===undefined?\"\":_this.state.selectedRecord.sdescription,ntransactionstatus:transactionStatus.DRAFT,sdeviationremarks:_this.state.selectedRecord.sdeviationremarks===undefined?\"\":_this.state.selectedRecord.sdeviationremarks,soem:_this.state.selectedRecord.soem===undefined?\"\":_this.state.selectedRecord.soem,squotationleadtime:_this.state.selectedRecord.squotationleadtime===undefined?\"\":_this.state.selectedRecord.squotationleadtime};}else if(_this.props.Login.operation===\"create\"&&_this.props.Login.screenName===\"IDS_QUOTATION\"){quotationData[\"quotation\"]={nsitecode:_this.props.Login.userInfo.nmastersitecode,sprojecttitle:_this.state.selectedRecord.sprojecttitle===undefined?\"\":_this.state.selectedRecord.sprojecttitle,sclientsiteaddress:_this.state.selectedRecord.sclientsiteaddress===undefined?\"\":_this.state.selectedRecord.sclientsiteaddress,sinvoiceaddress:_this.state.selectedRecord.sinvoiceaddress===undefined?\"\":_this.state.selectedRecord.sinvoiceaddress,sdescription:_this.state.selectedRecord.sdescription===undefined?\"\":_this.state.selectedRecord.sdescription,ntransactionstatus:transactionStatus.DRAFT,sdeviationremarks:_this.state.selectedRecord.sdeviationremarks===undefined?\"\":_this.state.selectedRecord.sdeviationremarks,soem:_this.state.selectedRecord.soem===undefined?\"\":_this.state.selectedRecord.soem,squotationleadtime:_this.state.selectedRecord.squotationleadtime===undefined?\"\":_this.state.selectedRecord.squotationleadtime};}if((_this.props.Login.operation===\"create\"||_this.props.Login.operation===\"update\")&&_this.props.Login.screenName===\"IDS_QUOTATION\"){quotationData[\"quotation\"][\"nclientcatcode\"]=_this.state.selectedRecord[\"nclientcatcode\"]?_this.state.selectedRecord[\"nclientcatcode\"].value:transactionStatus.NA;quotationData[\"quotation\"][\"nclientcode\"]=_this.state.selectedRecord[\"nclientcode\"]!==\"\"?_this.state.selectedRecord[\"nclientcode\"].value:transactionStatus.NA;// quotationData[\"quotation\"][\"nquotationtypecode\"] = this.state.selectedRecord[\"nquotationtypecode\"]!==\"\" ? this.state.selectedRecord[\"nquotationtypecode\"].value\n//   : transactionStatus.NA;\nquotationData[\"quotation\"][\"nquotationtypecode\"]=transactionStatus.ACTIVE;quotationData[\"quotation\"][\"nprojecttypecode\"]=_this.state.selectedRecord[\"nprojecttypecode\"]?_this.state.selectedRecord[\"nprojecttypecode\"].value:transactionStatus.NA;quotationData[\"quotation\"][\"nprojectmastercode\"]=_this.state.selectedRecord[\"nprojectmastercode\"]?_this.state.selectedRecord[\"nprojectmastercode\"].value:transactionStatus.NA;/*     quotationData[\"quotation\"][\"nuserrolecode\"] = this.state.selectedRecord[\"nuserrolecode\"]!==\"\" ? this.state.selectedRecord[\"nuserrolecode\"]\r\n         : transactionStatus.NA; */quotationData[\"quotation\"][\"nusercode\"]=_this.state.selectedRecord[\"nusercode\"]?_this.state.selectedRecord[\"nusercode\"]:transactionStatus.NA;// quotationData[\"quotation\"][\"drfwdate\"] = formatInputDate(this.state.selectedRecord[\"srfwdate\"], false);\nquotationData[\"quotation\"][\"dquotationdate\"]=_this.QuotationformatInputDate(_this.state.selectedRecord[\"dquotationdate\"]);//     quotationData[\"quotation\"][\"dquotationdate\"] = rearrangeDateFormat(quotationData.userinfo,this.state.selectedRecord[\"dquotationdate\"]);\nquotationData[\"quotation\"][\"ntzrfwdate\"]=quotationData.userinfo.ntimezonecode?quotationData.userinfo.ntimezonecode:\"-1\";quotationData[\"quotation\"][\"ntzquotationdate\"]=quotationData.userinfo.ntimezonecode?quotationData.userinfo.ntimezonecode:\"-1\";quotationData[\"quotation\"][\"nproductcatcode\"]=_this.state.selectedRecord[\"nproductcatcode\"]!==\"\"?_this.state.selectedRecord[\"nproductcatcode\"].value:transactionStatus.NA;quotationData[\"quotation\"][\"nproductcode\"]=_this.state.selectedRecord[\"nproductcode\"]!==\"\"?_this.state.selectedRecord[\"nproductcode\"].value:transactionStatus.NA;}if(_this.props.Login.operation===\"create\"&&_this.props.Login.screenName===\"IDS_TEST\"){inputParam=_this.onSaveQuotationTest(saveType,formRef);}if(_this.props.Login.operation===\"update\"&&(_this.props.Login.screenName===\"IDS_PRICE\"||_this.props.Login.screenName===\"IDS_CALCULATEPRICING\")){inputParam=_this.onSaveQuotationTestPrice(saveType,formRef);}if(_this.props.Login.operation===\"create\"&&_this.props.Login.screenName===\"IDS_CALCULATEPRICING\"){inputParam=_this.onSaveGrossQuotation(saveType,formRef);}if((_this.props.Login.operation===\"create\"||_this.props.Login.operation===\"update\")&&_this.props.Login.screenName===\"IDS_QUOTATION\"){inputParam={classUrl:\"quotation\",methodUrl:\"Quotation\",inputData:quotationData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef,isClearSearch:_this.props.Login.isClearSearch};}slideOutModal=_this.props.Login.screenName===\"IDS_TEST\"||_this.props.Login.screenName===\"IDS_PRICE\"||_this.props.Login.screenName===\"IDS_CALCULATEPRICING\"?\"openChildModal\":\"openModal\";var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,slideOutModal);}};_this.onSaveQuotationTestPrice=function(saveType,formRef){var quotationtestPriceData={\"userinfo\":_this.props.Login.userInfo,\"QuotationTest\":_this.props.Login.masterData.SelectedQuotation,\"nquotationcode\":_this.props.Login.masterData.SelectedQuotation.nquotationcode,\"nprojectmastercode\":_this.props.Login.masterData.SelectedQuotation.nprojectmastercode,\"nclientcode\":_this.props.Login.masterData.SelectedQuotation.nclientcode//    \"ncost\":this.props.Login.selectedRecord[0].ncost\n};var postParam=undefined;var dataState=undefined;var selectedId=null;if(_this.props.Login.operation===\"update\"){// edit\ndataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;postParam={inputListName:\"Quotation\",selectedObject:\"SelectedQuotation\",primaryKeyField:\"nquotationcode\"};//  let selectedRecord1=[this.props.Login.selectedRecord];\nvar QuotationTestPriceArray=[];_this.props.Login.selectedRecord.forEach(function(item,index){if(item.ntotalamount<0){QuotationTestPriceArray[index]=_objectSpread(_objectSpread({},_this.props.Login.selectedRecord[index]),{},{ntotalamount:0});}QuotationTestPriceArray[index]={namount:_this.props.Login.selectedRecord[index].namount,nclientcode:_this.props.Login.selectedRecord[index].nclientcode,ncost:_this.props.Login.selectedRecord[index].ncost,nnoofsamples:_this.props.Login.selectedRecord[index].nnoofsamples,nprojectmastercode:_this.props.Login.selectedRecord[index].nprojectmastercode,nquotationcode:_this.props.Login.selectedRecord[index].nquotationcode,nquotationtestcode:_this.props.Login.selectedRecord[index].nquotationtestcode,ntestcode:_this.props.Login.selectedRecord[index].ntestcode,ntotalamount:_this.props.Login.selectedRecord[index].ntotalamount,ntotalgrosstamount:_this.props.Login.selectedRecord[index].ntotalgrosstamount,//  stestdescription: this.props.Login.selectedRecord[index].stestdescription,\nstestsynonym:_this.props.Login.selectedRecord[index].stestsynonym,ndiscountbandcode:_this.props.Login.selectedRecord[index].ndiscountbandcode.value,stestplatform:_this.props.Login.selectedRecord[index].stestplatform,snotes:_this.props.Login.selectedRecord[index].snotes,nmethodcode:_this.props.Login.selectedRecord[index].nmethodcode};});quotationtestPriceData[\"QuotationTest\"]=JSON.parse(JSON.stringify(QuotationTestPriceArray));}else{//add               \nvar priceList=[];_this.state.selectedRecord[\"ntestcode\"]&&_this.state.selectedRecord[\"ntestcode\"].map(function(item){return priceList.push({ntestcode:item.value});});quotationtestPriceData[\"QuotationTest\"]=priceList;}if(quotationtestPriceData[\"QuotationTest\"].hasOwnProperty('esignpassword')){if(quotationtestPriceData[\"QuotationTest\"]['esignpassword']===''){delete quotationtestPriceData[\"QuotationTest\"]['esigncomments'];delete quotationtestPriceData[\"QuotationTest\"]['esignpassword'];delete quotationtestPriceData[\"QuotationTest\"][\"agree\"];}}//console.log(\"update data:\", quotationtestPriceData);\nvar inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"QuotationTest\",inputData:quotationtestPriceData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef,isClearSearch:_this.props.Login.isClearSearch,selectedId:selectedId,dataState:dataState};return inputParam;};_this.onNumericInputOnChange=function(event,primaryFieldKey){var selectedRecord=_this.state.selectedRecord||{};if(primaryFieldKey&&event.target.name===\"nnoofsamples\"){var index=selectedRecord.findIndex(function(item){return item.nquotationtestcode===primaryFieldKey;});if(/^-?\\d*?\\.?\\d*?$/.test(event.target.value)){selectedRecord[index][\"nnoofsamples\"]=event.target.value;}}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.validateEsign=function(){var inputParam={inputData:{userinfo:_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.DeleteQuotation=function(methodUrl,selectedQuotation,operation,ncontrolCode){var postParam={inputListName:\"QuotationList\",selectedObject:\"SelectedQuotation\",primaryKeyField:\"nquotationcode\",primaryKeyValue:selectedQuotation.nquotationcode,fetchUrl:\"quotation/getQuotation\",fecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:methodUrl,postParam:postParam,inputData:{userinfo:_this.props.Login.userInfo,quotation:selectedQuotation},operation:operation,isClearSearch:_this.props.Login.isClearSearch};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_QUOTATION\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.QuotationPreview=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:\"IDS_VIEW\",openModal:true,operation:\"create\",modalScreenSize:false}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName,caseNo,nquotationtestcode){var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 1:if(fieldName===\"nclientcatcode\"){// const selectedRecord = this.state.selectedRecord || {};\nif(selectedRecord.nclientcatcode){if(parseInt(comboData.value)!==parseInt(selectedRecord.nclientcatcode.value)){// selectedRecord.nusercode={};\ndelete selectedRecord.nclientcode;delete selectedRecord.sclientsiteaddress;}}selectedRecord[fieldName]=comboData;selectedRecord[\"sclientcatname\"]=comboData.item[\"sclientcatname\"];_this.props.getClientCategoryComboService({inputData:{userinfo:_this.props.Login.userInfo,sdisplayname:selectedRecord.nclientcatcode.label,primarykey:selectedRecord.nclientcatcode.value}},selectedRecord);}if(fieldName===\"nclientcode\"){// const selectedRecord = this.state.selectedRecord || {};\nif(selectedRecord.nclientcode){if(parseInt(comboData.value)!==parseInt(selectedRecord.nclientcode.value)){// selectedRecord.nusercode={};\ndelete selectedRecord.sclientsiteaddress;}}selectedRecord[fieldName]=comboData;selectedRecord[\"sclientname\"]=comboData.item[\"sclientname\"];_this.props.getQuotaionClientComboService({inputData:{userinfo:_this.props.Login.userInfo,sdisplayname:selectedRecord.nclientcode.label,primarykey:selectedRecord.nclientcode.value}},selectedRecord);}if(fieldName===\"nproductcatcode\"){//\n// const selectedRecord = this.state.selectedRecord || {};\nif(selectedRecord.nproductcatcode){if(parseInt(comboData.value)!==parseInt(selectedRecord.nproductcatcode.value)){// selectedRecord.nusercode={};\ndelete selectedRecord.nproductcode;}}selectedRecord[fieldName]=comboData;selectedRecord[\"sproductcatname\"]=comboData.item[\"sproductcatname\"];_this.props.getQuotaionProductCategoryComboService({inputData:{userinfo:_this.props.Login.userInfo,sdisplayname:selectedRecord.nproductcatcode.label,primarykey:selectedRecord.nproductcatcode.value}},selectedRecord);}break;case 2:// const selectedRecordfilter = this.state.selectedRecordfilter || {};\n// selectedRecordfilter[fieldName] = comboData;\n// this.setState({ selectedRecordfilter });\n// break;\n// const selectedRecord = this.state.selectedRecord || {};\nselectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});break;case 3:selectedRecord[fieldName]=comboData;if(fieldName===\"ndiscountbandcode\"){var VatAmount=_this.state.selectedRecord.VatAmount===undefined?0.00:_this.state.selectedRecord.VatAmount;selectedRecord[\"DiscountAmount\"]=parseFloat((_this.props.Login.QuotationGrossAmount[0].ntotalgrossamount*(selectedRecord.ndiscountbandcode.item.namount/100)).toFixed(2));//        selectedRecord[\"TotalNetAmount\"]=this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+(this.state.selectedRecord.DiscountAmount-VatAmount);\nselectedRecord[\"TotalNetAmount\"]=parseFloat((_this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+VatAmount-_this.state.selectedRecord.DiscountAmount).toFixed(2));selectedRecord[\"ndiscountpercentage\"]=selectedRecord.ndiscountbandcode.item.namount;}else if(fieldName===\"nvatbandcode\"){selectedRecord[\"VatAmount\"]=parseFloat((_this.props.Login.QuotationGrossAmount[0].ntotalgrossamount*(selectedRecord.nvatbandcode.item.namount/100)).toFixed(2));//        selectedRecord[\"TotalNetAmount\"]=this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+(selectedRecord.DiscountAmount-this.state.selectedRecord.VatAmount);\nselectedRecord[\"TotalNetAmount\"]=parseFloat((_this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+_this.state.selectedRecord.VatAmount-selectedRecord.DiscountAmount).toFixed(2));selectedRecord[\"nvatpercentage\"]=selectedRecord.nvatbandcode.item.namount;}_this.setState({selectedRecord:selectedRecord});break;case 4:if(fieldName===\"nprojecttypecode\"){if(selectedRecord.nprojecttypecode){if(parseInt(comboData.value)!==parseInt(selectedRecord.nprojecttypecode.value)){delete selectedRecord.nprojectmastercode;delete selectedRecord.sprojecttitle;delete selectedRecord.srfwdate;delete selectedRecord.suserrolename;delete selectedRecord.susername;}}selectedRecord[fieldName]=comboData;selectedRecord[\"sprojecttypename\"]=comboData.item[\"sprojecttypename\"];_this.props.getProjectTypeComboService({inputData:{userinfo:_this.props.Login.userInfo,sdisplayname:selectedRecord.nprojecttypecode.label,primarykey:selectedRecord.nprojecttypecode.value}},selectedRecord);}if(fieldName===\"nprojectmastercode\"){if(selectedRecord.nprojectmastercode){if(parseInt(comboData.value)!==parseInt(selectedRecord.nprojectmastercode.value)){delete selectedRecord.sprojecttitle;delete selectedRecord.srfwdate;delete selectedRecord.suserrolename;delete selectedRecord.susername;}}selectedRecord[fieldName]=comboData;selectedRecord[\"sprojectcode\"]=comboData.item[\"sprojectcode\"];_this.props.getProjectCodeComboService({inputData:{userinfo:_this.props.Login.userInfo,sdisplayname:selectedRecord.nprojectmastercode.label,primarykey:selectedRecord.nprojectmastercode.value}},selectedRecord);}break;case 5://  selectedRecord[fieldName] = comboData;\n//  selectedRecord[\"namount\"]=comboData.item.namount;\nvar selectedRecordindex=selectedRecord.findIndex(function(item){return item.nquotationtestcode===nquotationtestcode?item:\"\";});var str=selectedRecord[selectedRecordindex];var discountamount=parseFloat((str.ncost*str.nnoofsamples*(comboData.item.namount/100)).toFixed(2));var count=str.ncost*str.nnoofsamples-discountamount;selectedRecord[selectedRecordindex]=_objectSpread(_objectSpread({},str),{},{ntotalamount:parseFloat(count.toFixed(2)),namount:comboData.item.namount,ndiscountbandcode:comboData.item.ndiscountbandcode});selectedRecord[selectedRecordindex][\"ndiscountbandcode\"]={label:comboData.item.sdiscountbandname,value:comboData.item.ndiscountbandcode};//    selectedRecord[selectedRecordindex][\"ndiscountbandcode\"]=  {...selectedRecord[selectedRecordindex],\n//     label :comboData.item.sdiscountbandname,\n//     value:comboData.item.ndiscountbandcode\n// }\n_this.setState(selectedRecord);break;default:break;}};_this.onNumericInputChange=function(value,name,primaryFieldKey){var selectedRecord=_this.state.selectedRecord||{};var index=selectedRecord.findIndex(function(item){return item.nquotationtestcode===primaryFieldKey;});selectedRecord[index][name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event,primaryFieldKey){var selectedRecord=_this.state.selectedRecord||{};if(event.target.name==='snotes'||event.target.name==='stestplatform'){var index=selectedRecord.findIndex(function(item){return item.nquotationtestcode===primaryFieldKey;});selectedRecord[index][event.target.name]=event.target.value;}else{if(primaryFieldKey&&(event.target.name===\"ncost\"||event.target.name===\"nnoofsamples\"||event.target.name===\"ntotalamount\")){var _index=selectedRecord.findIndex(function(item){return item.nquotationtestcode===primaryFieldKey;});// if (/^-?\\d*?\\.?\\d*?$/.test(event.target.value)){\nif(/^-?\\d*?$/.test(event.target.value)){selectedRecord[_index][event.target.name]=event.target.value;}}else{selectedRecord[event.target.name]=event.target.value;}}_this.setState({selectedRecord:selectedRecord});};_this.onnetAmountEvent=function(nquotationtestcode){var selectedRecord=_this.state.selectedRecord;var selectedRecordindex=selectedRecord.findIndex(function(item){return item.nquotationtestcode===nquotationtestcode?item:\"\";});var str=selectedRecord[selectedRecordindex];//  let count= (str.ncost * str.nnoofsamples)-str.namount; \nvar discountamount=parseFloat((str.ncost*str.nnoofsamples*(str.namount/100)).toFixed(2));var count=str.ncost*str.nnoofsamples-discountamount;// selectedRecord[selectedRecordindex]={...str,ntotalamount:count}\nselectedRecord[selectedRecordindex]=_objectSpread(_objectSpread({},str),{},{ntotalamount:parseFloat(count.toFixed(2))});_this.setState(selectedRecord);};_this.approveQuotation=function(methodUrl,selectedQuotation,operation,ncontrolCode){if(selectedQuotation.ntransactionstatus===transactionStatus.DRAFT){var postParam={inputListName:\"Quotation\",selectedObject:\"SelectedQuotation\",primaryKeyField:\"nquotationcode\",primaryKeyValue:selectedQuotation.nquotationcode,fetchUrl:\"quotation/getQuotation\",fecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:methodUrl,postParam:postParam,inputData:{\"userinfo\":_this.props.Login.userInfo,\"quotation\":selectedQuotation},operation:operation,isClearSearch:_this.props.Login.isClearSearch};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_QUOTATION\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}else if(selectedQuotation.ntransactionstatus===transactionStatus.APPROVED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_ALREADYAPPROVED\"}));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName}};_this.props.updateStore(updateInfo);};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.historydataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.historydataState),historydataState:event.historydataState});};_this.ConfirmDelete=function(selectedQuotation,operation,deleteId,screenName){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.DeleteQuotation(screenName,selectedQuotation,operation,deleteId);});};_this.reloadData=function(){_this.searchRef.current.value=\"\";//    if (Object.values(this.props.Login.masterData.SelectedQuotation).length && this.props.Login.masterData.SelectedQuotation !== undefined) {\nif(_this.props.Login.masterData.SelectedQuotation!==undefined){var inputParam={inputData:{userinfo:_this.props.Login.userInfo},classUrl:\"quotation\",methodUrl:\"Quotation\"};_this.props.getreloadQuotation(inputParam);}// else {\n//   toast.warn(\n//     this.props.intl.formatMessage({\n//       id: \"IDS_PROJECTTYPENOTAVAILABLE\",\n//     })\n//   );\n// }\n};_this.DeleteQuotationTest=function(deleteParam){deleteParam.selectedRecord[\"nclientcode\"]=_this.props.Login.masterData.SelectedQuotation.nclientcode;deleteParam.selectedRecord[\"nprojectmastercode\"]=_this.props.Login.masterData.SelectedQuotation.nprojectmastercode;var postParam={inputListName:\"QuotationList\",selectedObject:\"SelectedQuotation\",primaryKeyField:\"nquotationcode\",primaryKeyValue:deleteParam.selectedRecord.nquotationtestcode,fetchUrl:\"quotation/getQuotationTest\",fecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={classUrl:\"quotation\",methodUrl:\"QuotationPrice\",postParam:postParam,inputData:{\"QuotationTestPrice\":deleteParam.selectedRecord,//.dataItem,\n//      \"npriceversioncode\":this.props.Login.masterData.SelectedTestPriceVersion.npriceversioncode,\n\"userinfo\":_this.props.Login.userInfo},operation:\"delete\"//  priceDataState:this.state.priceDataState\n};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:\"IDS_TESTPRICE\"}),operation:deleteParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.state.selectedRecord;//    let selectedRecord = this.state.selectedRecord;\nif(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"approve\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']='';selectedRecord['esigncomments']='';selectedRecord['esignreason']='';}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={selectedRecord:{},error:\"\",userRoleControlRights:[],selectedQuotation:undefined,controlMap:new Map(),Instrument:[],dataState:_dataState,dataResult:[],data:[]};_this.searchRef=React.createRef();_this.searchFieldList=[\"squotationno\",\"sclientcatname\",\"sclientname\",\"sclientsiteaddress\",\"soem\",\"sproductcatname\",\"sproductname\",\"squotationdate\",\"squotationleadtime\",\"sdescription\",\"sdeviationremarks\",\"sversionstatus\"];_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(Quotation,[{key:\"onSaveQuotationTest\",value:function onSaveQuotationTest(saveType,formRef){var _this2=this;var inputData=[];inputData[\"userinfo\"]=this.props.Login.userInfo;// inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\n//  inputData[\"Quotation\"] = {};\nvar testArray=[];testArray=this.state.selectedRecord.ntestcode.map(function(item){var QuotationData={};QuotationData[\"ntestcode\"]=item.value;QuotationData[\"nquotationcode\"]=_this2.props.Login.masterData.SelectedQuotation.nquotationcode;QuotationData[\"nclientcode\"]=_this2.props.Login.masterData.SelectedQuotation.nclientcode;QuotationData[\"nprojectmastercode\"]=_this2.props.Login.masterData.SelectedQuotation.nprojectmastercode;return QuotationData;});inputData['QuotationTest']=testArray;var inputParam={classUrl:\"quotation\",methodUrl:\"QuotationTest\",inputData:inputData,operation:this.props.Login.operation,saveType:saveType,formRef:formRef,searchRef:this.searchRef,isClearSearch:this.props.Login.isClearSearch,isChild:true};return inputParam;}},{key:\"QuotationformatInputDate\",value:function QuotationformatInputDate(date){var formattedDate=\"\";formattedDate=date.getFullYear()+\"-\"+(\"00\"+(date.getMonth()+1)).slice(-2)+\"-\"+(\"00\"+date.getDate()).slice(-2)+\"T00:00:00Z\";return formattedDate;}},{key:\"onSaveGrossQuotation\",value:function onSaveGrossQuotation(saveType,formRef){var quotationData={};quotationData[\"userinfo\"]=this.props.Login.userInfo;quotationData[\"GrossQuotation\"]={nquotationcode:this.props.Login.masterData.SelectedQuotation.nquotationcode,nsitecode:this.props.Login.userInfo.nmastersitecode,ndiscountamount:this.state.selectedRecord.DiscountAmount,nvatamount:this.state.selectedRecord.VatAmount,ntotalnetamount:this.state.selectedRecord.TotalNetAmount,ntotalgrossamount:this.props.Login.QuotationGrossAmount[0].ntotalgrossamount,nclientcode:this.props.Login.masterData.SelectedQuotation.nclientcode,nprojectmastercode:this.props.Login.masterData.SelectedQuotation.nprojectmastercode};quotationData[\"GrossQuotation\"][\"ndiscountbandcode\"]=this.state.selectedRecord[\"ndiscountbandcode\"]?this.state.selectedRecord[\"ndiscountbandcode\"].value:transactionStatus.NA;quotationData[\"GrossQuotation\"][\"nvatbandcode\"]=this.state.selectedRecord[\"nvatbandcode\"]?this.state.selectedRecord[\"nvatbandcode\"].value:transactionStatus.NA;// const postParam = {\n//   inputListName: \"Quotation\",\n//   selectedObject: \"SelectedQuotation\",\n//   primaryKeyField: \"nquotationcode\",\n//   primaryKeyValue: this.props.Login.masterData.SelectedQuotation.nquotationcode,\n//   fetchUrl: \"quotation/getQuotation\",\n//   fecthInputObject: { userinfo: this.props.Login.userInfo },\n// };\nvar inputParam={classUrl:\"quotation\",methodUrl:\"GrossQuotation\",// postParam,\ninputData:quotationData,searchRef:this.searchRef,operation:this.props.Login.operation,saveType:saveType,formRef:formRef,isClearSearch:this.props.Login.isClearSearch,isChild:true};return inputParam;}},{key:\"render\",value:function render(){var _this3=this;var versionStatusCSS=\"outline-secondary\";var activeIconCSS=\"fa fa-check\";if(this.props.Login.masterData.SelectedQuotation&&this.props.Login.masterData.SelectedQuotation.ntransactionstatus===transactionStatus.APPROVED){versionStatusCSS=\"outline-success\";}else if(this.props.Login.masterData.SelectedQuotation&&this.props.Login.masterData.SelectedQuotation.ntransactionstatus===transactionStatus.DRAFT){activeIconCSS=\"\";}if(this.props.Login.openModal){this.mandatoryFields=this.findMandatoryFields(this.props.Login.screenName,this.state.selectedRecord,this.props.Login.operation);}var userInfo=this.props.Login.userInfo;var addId=this.state.controlMap.has(\"AddQuotation\")&&this.state.controlMap.get(\"AddQuotation\").ncontrolcode;var editId=this.state.controlMap.has(\"EditQuotation\")&&this.state.controlMap.get(\"EditQuotation\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteQuotation\")&&this.state.controlMap.get(\"DeleteQuotation\").ncontrolcode;var approveId=this.state.controlMap.has(\"ApproveQuotation\")&&this.state.controlMap.get(\"ApproveQuotation\").ncontrolcode;var addQuotationTestId=this.state.controlMap.has(\"AddQuotationTest\")&&this.state.controlMap.get(\"AddQuotationTest\").ncontrolcode;var updateQuotationTestId=this.state.controlMap.has(\"EditQuotationTest\")&&this.state.controlMap.get(\"EditQuotationTest\").ncontrolcode;// const grossQuotationeId = this.state.controlMap.has(\"CalculatePricing\") && this.state.controlMap.get(\"CalculatePricing\").ncontrolcode;\nvar viewQuotationId=this.state.controlMap.has(\"ViewQuotation\")&&this.state.controlMap.get(\"ViewQuotation\").ncontrolcode;var editTestPriceParam={screenName:\"IDS_PRICE\",\"operation\":\"update\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolCode:updateQuotationTestId};var selectedQuotation=this.props.Login.masterData.SelectedQuotation;var filterParam={inputListName:\"Quotation\",selectedObject:\"SelectedQuotation\",primaryKeyField:\"nquotationcode\",fetchUrl:\"quotation/getActiveQuotationById\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMaster,{screenName:this.props.intl.formatMessage({id:\"IDS_QUOTATION\"}),masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.Quotation,getMasterDetail:function getMasterDetail(quotationData){return _this3.props.getQuotation(quotationData,_this3.props.Login.userInfo,_this3.props.Login.masterData);},selectedMaster:selectedQuotation,primaryKeyField:\"nquotationcode\",mainField:\"squotationno\",firstField:\"sclientname\",secondField:\"sversionstatus\",filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData//     openModal={() => this.props.addQuotation(\"create\", selectedQuotation, userInfo, addId, this.state.ProjectMasterList)}\n,openModal:function openModal(){return _this3.props.addQuotation(\"create\",userInfo,addId,selectedQuotation);},isMultiSelecct:false,hidePaging:false,isClearSearch:this.props.Login.isClearSearch,openFilter:this.openFilter,closeFilter:this.closeFilter// onFilterSubmit={this.onFilterSubmit}    \n,showFilterIcon:false,showFilter:this.props.Login.showFilter/*         filterComponent={[\r\n                  {\r\n                    \"IDS_PROJECTMASTERFILTER\":\r\n                      <ProjectMasterFilter\r\n                        filterProjectType={this.state.ProjectMasterList || []}\r\n                        nfilterProjectType={this.props.Login.masterData.SelectedProjectType || {}}\r\n                        onComboChange={this.onComboChange}\r\n                        selectedRecord={this.state.selectedRecordfilter || {}}\r\n                      />\r\n                  }\r\n                ]} */})),/*#__PURE__*/React.createElement(Col,{md:8},selectedQuotation?/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},selectedQuotation.sclientname),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined \".concat(versionStatusCSS,\" btn-sm ml-3\")},selectedQuotation.sversionstatus)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",name:\"edittestname\",hidden:this.state.userRoleControlRights.indexOf(viewQuotationId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_VIEW\"}),onClick:function onClick(){return _this3.QuotationPreview();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",name:\"edittestname\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"})//data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this3.props.addQuotation(\"update\",userInfo,editId,selectedQuotation);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",name:\"deletetestname\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"})//   data-for=\"tooltip_list_wrap\"\n,hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this3.ConfirmDelete(selectedQuotation,\"delete\",deleteId,\"Quotation\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"approveQuotation\",className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(approveId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_APPROVE\"})//data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this3.approveQuotation(\"Quotation\",selectedQuotation,\"approve\",approveId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faThumbsUp})))))),/*#__PURE__*/React.createElement(Card.Body,{className:\"form-static-wrap\"},/*#__PURE__*/React.createElement(Card,{className:\"at-tabs border-0\"},/*#__PURE__*/React.createElement(Card,{className:\"at-tabs border-0\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(QuotationTab,{primaryKeyField:\"nquotationtestcode\"// data={this.props.Login.masterData.ProjectMember}\n,data:this.state.data// dataResult={this.props.Login.masterData.ProjectMember}\n,dataResult:this.state.dataResult,masterData:this.props.Login.masterData,screenName:this.props.Login.screenName,operation:this.props.Login.operation,openChildModal:this.props.Login.openChildModal,crudMaster:this.props.crudMaster,errorCode:this.props.Login.errorCode,validateEsignCredential:this.props.validateEsignCredential,loadEsign:this.props.Login.loadEsign,showAccordian:this.state.showAccordian,selectedRecord:this.state.selectedRecord||{}// dataState={{skip: 0, take: 10}}\n// dataState={this.props.Login.dataState}\n,dataState:this.state.dataState,dataStateChange:this.dataStateChange// extractedColumnList={fieldsForGrid} --\n,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo//    getProjectmasterAddMemberService={(this.props.Login.screenName,this.props.Login.operation,this.props.getProjectmasterAddMemberService,this.props.Login.userInfo,this.props.Login.ncontrolCode)}\n,getProjectmasterAddMemberService:this.props.getProjectmasterAddMemberService// --   fetchRecord={this.props.getPricingEditService}\n//--       editParam={{...editTestPriceParam, \"updateType\":\"Single\", priceDataState:this.state.priceDataState}}\n//  deleteParam={{operation:\"delete\"}}\n// reloadData={this.reloadData}\n// --      addRecord = {() => this.openModal(addId)}\n,pageable:true,onTabChange:this.onTabChange,updateStore:this.props.updateStore,scrollable:'scrollable'// gridHeight = {'600px'}\n,isActionRequired:true,isToolBarRequired:false,selectedId:this.props.Login.selectedId,viewAttachment:this.props.viewAttachment,MembersList:this.props.Login.MembersList,onComboChange:this.onComboChange// File\n,addProjectMasterFile:this.props.addProjectMasterFile,esignRights:this.props.Login.userRoleControlRights// ntransactionstatus={selectedProjectMaster.ntransactionstatus}  ---\n//  selectedRecord={this.props.Login.selectedRecord}\n,onDropProjectMasterFile:this.onDropProjectMasterFile,onInputOnChange:this.onInputOnChange,screenData:this.props.Login.screenData,deleteAttachment:this.deleteAttachment,ncontrolCode:this.props.Login.ncontrolCode,linkMaster:this.props.Login.linkMaster,addQuotationTestId:this.props.Login.addQuotationTestId,updateQuotationTestId:this.props.Login.updateQuotationTestId,addId:this.props.Login.addId,editParam:_objectSpread({},editTestPriceParam)// fetchRecord={this.props.getQuotationPricingEditService}\n,deleteRecord:this.DeleteQuotationTest,getQuotationAddTestService:this.props.getQuotationAddTestService,getQuotationPricingEditService:this.props.getQuotationPricingEditService,QuotationTestList:this.props.Login.QuotationTestList,onSaveClick:this.onSaveClick,onnetAmountEvent:this.onnetAmountEvent,onNumericInputChange:this.onNumericInputChange,DiscountBand:this.props.Login.DiscountBand,VATBand:this.props.Login.VATBand,modalScreenSize:this.props.Login.modalScreenSize,QuotationGrossAmount:this.props.Login.QuotationGrossAmount,QuotationHistorydata:this.props.Login.masterData.QuotationHistory,QuotationHistorydataResult:this.props.Login.masterData.QuotationHistory,historydataState:this.state.historydataState,historydataStateChange:this.historydataStateChange,selectedQuotation:selectedQuotation,GrossQuotation:this.props.GrossQuotation})))),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"horizontal-line\"})))))):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,size:this.props.Login.modalScreenSize===true?\"xl\":\"lg\",closeModal:this.closeModal,hideSave:this.props.Login.screenName===\"IDS_VIEW\"?true:false,operation:this.props.Login.screenName===\"IDS_CALCULATEPRICING\"||this.props.Login.screenName===\"IDS_VIEW\"?\"\":this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord||{}//  mandatoryFields={this.props.Login.screenName !==\"IDS_PRICE\" ? this.mandatoryFields : []}\n,mandatoryFields:this.mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.screenName===\"IDS_QUOTATION\"?/*#__PURE__*/React.createElement(AddQuotation,{userInfo:this.props.Login.userInfo,genericlabel:this.props.Login.genericLabel,selectedRecord:this.state.selectedRecord||{}// selectedclientcode={this.state.selectedRecord.nclientcode || {}}\n,sclientsiteaddress:this.props.Login.sclientsiteaddress,SelectedClient:this.props.Login.SelectedClient,ClientCategory:this.props.Login.ClientCategory,Client:this.props.Login.Client,ProjectCode:this.props.Login.ProjectCode,ProjectType:this.props.Login.ProjectType,ProjectMaster:this.props.Login.ProjectMaster,QuotationType:this.props.Login.QuotationType,Product:this.props.Login.Product,ProductCategory:this.props.Login.ProductCategory,onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange//     onNumericInputChange={this.onNumericInputChange}\n,handleDateChange:this.handleDateChange}):this.props.Login.screenName===\"IDS_VIEW\"?/*#__PURE__*/React.createElement(AddQuotationPreview,{selectedQuotation:this.props.Login.masterData.SelectedQuotation,userInfo:this.props.Login.userInfo}):\"\"}));}},{key:\"findMandatoryFields\",value:function findMandatoryFields(screenName,selectedRecord,operation){var mandatoryFields=[];if(screenName===\"IDS_QUOTATION\"){mandatoryFields=[{\"idsName\":\"IDS_CLIENTCATEGORY\",\"dataField\":\"nclientcatcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_CLIENT\",\"dataField\":\"nclientcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"textbox\"},//      { \"idsName\": \"IDS_INVOICEADDRESS\", \"dataField\": \"sinvoiceaddress\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\n//      { \"idsName\": \"IDS_QUOTATIONTYPE\", \"dataField\": \"nquotationtypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\n//      { \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"nprojecttypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\n//      { \"idsName\": \"IDS_PROJECTCODE\", \"dataField\": \"nprojectmastercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\n//      { \"idsName\": \"IDS_PROJECTTITLE\", \"dataField\": \"sprojecttitle\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\n//      { \"idsName\": \"IDS_RFWDATE\", \"dataField\": \"srfwdate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"textbox\" },\n//     { \"idsName\": \"IDS_ROLE\", \"dataField\": \"suserrolename\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\n//     { \"idsName\": \"IDS_USER\", \"dataField\": \"susername\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\n{\"idsName\":this.props.Login.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]||\"\",\"dataField\":\"nproductcatcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]||\"\",\"dataField\":\"nproductcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_QUOTATIONDATE\",\"dataField\":\"dquotationdate\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"selectbox\"}];// mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\nreturn mandatoryFields;}else{return[];}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this$state=this.state,selectedRecord=_this$state.selectedRecord,userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,filterData=_this$state.filterData,dataResult=_this$state.dataResult;if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;this.setState({selectedRecord:selectedRecord});}//   if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n//     userRoleControlRights = [];\n//     if (this.props.Login.userRoleControlRights) {\n//       this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode\n//       ] &&\n//         Object.values(\n//           this.props.Login.userRoleControlRights[\n//           this.props.Login.userInfo.nformcode\n//           ]\n//         ).map((item) => userRoleControlRights.push(item.ncontrolcode));\n//     }\n//     controlMap = getControlMap(\n//       this.props.Login.userRoleControlRights,\n//       this.props.Login.userInfo.nformcode\n//     );\n//     // this.setState({ controlMap, userRoleControlRights });\n//     this.setState({\n//       userRoleControlRights, controlMap, data: this.props.Login.masterData.QuotationTest,\n//       dataResult: process(this.props.Login.masterData.QuotationTest, this.state.dataState)\n//   });\n//   }\n//   else {\n//     let {dataState}=this.state;\n//         if(this.state.dataResult !== undefined){ \n//             if(this.state.dataResult.data){\n//                 if(this.state.dataResult.data.length ===1){\n//                     let skipcount=this.state.dataState.skip>0?(this.state.dataState.skip-this.state.dataState.take):\n//                     this.state.dataState.skip\n//                     dataState={skip:skipcount,take:this.state.dataState.take}\n//                 }\n//               } \n//               this.setState({\n//                 dataResult: process( this.props.Login.masterData || [], dataState),\n//                 dataState\n//           });\n//     }\n// }\nif(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);// this.setState({ controlMap, userRoleControlRights });\nthis.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData.QuotationTest,dataResult:process(this.props.Login.masterData.QuotationTest||[],this.state.dataState)// QuotationHistorydataResult: process(this.props.Login.masterData.QuotationHistory || [], this.state.historydataState)\n// QuotationHistorydata: this.props.Login.masterData.QuotationHistory, QuotationHistorydataResult: process(this.props.Login.masterData.QuotationHistory || [], this.state.dataState)\n});}else{var dataState=this.state.dataState;// let {historydataState}=this.state;\nif(this.state.dataResult!==undefined){if(this.state.dataResult.data){if(this.state.dataResult.data.length===1){var skipcount=this.state.dataState.skip>0?this.state.dataState.skip-this.state.dataState.take:this.state.dataState.skip;dataState={skip:skipcount,take:this.state.dataState.take};}}this.setState({data:this.props.Login.masterData.QuotationTest,dataResult:process(this.props.Login.masterData.QuotationTest||[],dataState),dataState:dataState// QuotationHistorydata: this.props.Login.masterData.QuotationHistory, QuotationHistorydataResult: process(this.props.Login.masterData.QuotationHistory || [], this.state.dataState)\n});}//       if(this.state.QuotationHistorydataResult !== undefined){ \n//         if(this.state.QuotationHistorydataResult.data){\n//             if(this.state.QuotationHistorydataResult.data.length ===1){\n//                 let skipcount=this.state.historydataState.skip>0?(this.state.historydataState.skip-this.state.historydataState.take):\n//                 this.state.historydataState.skip\n//                 historydataState={skip:skipcount,take:this.state.historydataState.take}\n//             }\n//           } \n//           this.setState({\n//             QuotationHistorydata: this.props.Login.masterData.QuotationHistory,\n//             QuotationHistorydataResult: process( this.props.Login.masterData.QuotationHistory || [], historydataState),\n//             historydataState \n//             // QuotationHistorydata: this.props.Login.masterData.QuotationHistory, QuotationHistorydataResult: process(this.props.Login.masterData.QuotationHistory || [], this.state.dataState)\n//       });\n// }\n}// dataResult = this.props.Login.masterData.QuotationTest;\n// this.setState({\n//   selectedRecord,dataResult\n// });\n// this.setState({ filterData });\n}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;}}]);return Quotation;}(Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,filterColumnData:filterColumnData,updateStore:updateStore,validateEsignCredential:validateEsignCredential,getQuotation:getQuotation,getProjectTypeComboService:getProjectTypeComboService,viewAttachment:viewAttachment,addQuotation:addQuotation,getreloadQuotation:getreloadQuotation,getQuotationAddTestService:getQuotationAddTestService,getQuotationPricingEditService:getQuotationPricingEditService,GrossQuotation:GrossQuotation,getClientCategoryComboService:getClientCategoryComboService,getQuotaionClientComboService:getQuotaionClientComboService,getProjectCodeComboService:getProjectCodeComboService,getQuotaionProductCategoryComboService:getQuotaionProductCategoryComboService})(injectIntl(Quotation));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/quotation/Quotation.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","connect","toast","FontAwesomeIcon","faTrashAlt","faPencilAlt","faThumbsUp","faPlus","faEye","injectIntl","FormattedMessage","callService","crudMaster","validateEsignCredential","updateStore","getQuotation","filterColumnData","getProjectTypeComboService","viewAttachment","addQuotation","getreloadQuotation","getQuotationAddTestService","getQuotationPricingEditService","GrossQuotation","getClientCategoryComboService","getQuotaionClientComboService","getProjectCodeComboService","getQuotaionProductCategoryComboService","ListMaster","transactionStatus","AddQuotation","DEFAULT_RETURN","SlideOutModal","Esign","showEsign","getControlMap","formatInputDate","ReadOnlyText","ContentPanel","process","ConfirmMessage","intl","QuotationTab","AddQuotationPreview","mapStateToProps","state","Login","Quotation","props","handleDateChange","dateName","dateValue","selectedRecord","setState","onInputOnChange","event","optional","target","type","name","checked","value","onSaveClick","saveType","formRef","quotationData","inputParam","slideOutModal","userInfo","postParam","inputListName","selectedObject","primaryKeyField","operation","screenName","masterData","SelectedQuotation","nquotationcode","nsitecode","nmastersitecode","sprojecttitle","undefined","sclientsiteaddress","sinvoiceaddress","sdescription","ntransactionstatus","DRAFT","sdeviationremarks","soem","squotationleadtime","NA","ACTIVE","QuotationformatInputDate","userinfo","ntimezonecode","onSaveQuotationTest","onSaveQuotationTestPrice","onSaveGrossQuotation","classUrl","methodUrl","inputData","searchRef","isClearSearch","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","quotationtestPriceData","nprojectmastercode","nclientcode","dataState","selectedId","QuotationTestPriceArray","forEach","item","index","ntotalamount","namount","ncost","nnoofsamples","nquotationtestcode","ntestcode","ntotalgrosstamount","stestsynonym","ndiscountbandcode","stestplatform","snotes","nmethodcode","JSON","parse","stringify","priceList","map","push","hasOwnProperty","onNumericInputOnChange","primaryFieldKey","findIndex","test","validateEsign","sreason","password","DeleteQuotation","selectedQuotation","primaryKeyValue","fetchUrl","fecthInputObject","quotation","openModal","QuotationPreview","modalScreenSize","onComboChange","comboData","fieldName","caseNo","nclientcatcode","parseInt","sdisplayname","label","primarykey","nproductcatcode","nproductcode","VatAmount","parseFloat","QuotationGrossAmount","ntotalgrossamount","toFixed","DiscountAmount","nvatbandcode","nprojecttypecode","srfwdate","suserrolename","susername","selectedRecordindex","str","discountamount","count","sdiscountbandname","onNumericInputChange","onnetAmountEvent","approveQuotation","APPROVED","warn","formatMessage","id","onTabChange","tabProps","dataStateChange","dataResult","historydataStateChange","historydataState","ConfirmDelete","deleteId","confirmMessage","confirm","reloadData","current","DeleteQuotationTest","deleteParam","closeModal","openFilter","showFilter","closeFilter","skip","take","settings","error","controlMap","Map","Instrument","createRef","searchFieldList","testArray","QuotationData","isChild","date","formattedDate","getFullYear","getMonth","slice","getDate","ndiscountamount","nvatamount","ntotalnetamount","TotalNetAmount","versionStatusCSS","activeIconCSS","mandatoryFields","findMandatoryFields","addId","has","get","ncontrolcode","editId","approveId","addQuotationTestId","updateQuotationTestId","viewQuotationId","editTestPriceParam","filterParam","searchedData","sclientname","sversionstatus","indexOf","openChildModal","errorCode","showAccordian","getProjectmasterAddMemberService","MembersList","addProjectMasterFile","onDropProjectMasterFile","deleteAttachment","linkMaster","QuotationTestList","DiscountBand","VATBand","QuotationHistory","genericLabel","SelectedClient","ClientCategory","Client","ProjectCode","ProjectType","ProjectMaster","QuotationType","Product","ProductCategory","slanguagetypecode","previousProps","filterData","Object","values","QuotationTest","length","skipcount","masterStatus"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faPencilAlt, faThumbsUp,faPlus,faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport { ReactComponent as Quotationdiscount } from '../../assets/image/quotationdiscount.svg';\r\nimport { injectIntl,FormattedMessage } from \"react-intl\";\r\nimport {\r\n  callService, crudMaster, validateEsignCredential, updateStore, getQuotation, filterColumnData,getProjectTypeComboService,\r\n  viewAttachment, addQuotation, getreloadQuotation, getQuotationAddTestService, getQuotationPricingEditService, GrossQuotation,\r\n  getClientCategoryComboService,getQuotaionClientComboService,getProjectCodeComboService ,getQuotaionProductCategoryComboService\r\n} from \"../../actions\";\r\n\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport { transactionStatus } from \"../../components/Enumeration\";\r\nimport AddQuotation from \"../../pages/quotation/AddQuotation\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\n\r\nimport Esign from \"../audittrail/Esign\";\r\nimport { showEsign, getControlMap, formatInputDate }\r\n  from \"../../components/CommonScript\";\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\n// import ProjectMasterFilter from './ProjectMasterFilter';\r\nimport { intl } from \"../../components/App\";\r\n// import DataGrid from '../../components/data-grid/data-grid.component';\r\nimport QuotationTab from \"./QuotationTab\";\r\nimport AddQuotationPreview from \"../../pages/quotation/AddQuotationPreview\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\n\r\nclass Quotation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const dataState = {\r\n      skip: 0,\r\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n  };\r\n\r\n\r\n  \r\n  this.state = {\r\n      selectedRecord: {},\r\n      error: \"\",\r\n      userRoleControlRights: [],\r\n      selectedQuotation: undefined,\r\n      controlMap: new Map(),\r\n      Instrument: [],\r\n      dataState: dataState,\r\n      dataResult: [], data: []\r\n\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.searchFieldList = [\"squotationno\",\"sclientcatname\", \"sclientname\", \"sclientsiteaddress\", \"soem\",\"sproductcatname\",\"sproductname\",\"squotationdate\",\"squotationleadtime\",\"sdescription\",\"sdeviationremarks\",\"sversionstatus\"]\r\n    this.confirmMessage = new ConfirmMessage();\r\n\r\n  }\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n\r\n  onInputOnChange = (event, optional) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if (event.target.type === \"checkbox\") {\r\n      selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n    } else if (event.target.type === 'radio') {\r\n      selectedRecord[event.target.name] = optional;\r\n    } else {\r\n      selectedRecord[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n\r\n  onSaveClick = (saveType, formRef) => {\r\n\r\n    let quotationData = [];\r\n    let inputParam = {};\r\n    let slideOutModal;\r\n    quotationData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n    let postParam = {\r\n      inputListName: \"Quotation\",\r\n      selectedObject: \"SelectedQuotation\",\r\n      primaryKeyField: \"nquotationcode\",\r\n    };\r\n\r\n    if ((this.props.Login.operation === \"update\") && (this.props.Login.screenName === \"IDS_QUOTATION\")) {\r\n\r\n      postParam[\"primaryKeyValue\"] =\r\n        this.props.Login.masterData.SelectedQuotation.nquotationcode;\r\n\r\n      quotationData[\"quotation\"] = {\r\n        nquotationcode: this.props.Login.masterData.SelectedQuotation.nquotationcode,\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n        sprojecttitle: this.state.selectedRecord.sprojecttitle === undefined ? \"\" : this.state.selectedRecord.sprojecttitle, \r\n        sclientsiteaddress: this.state.selectedRecord.sclientsiteaddress === undefined ? \"\" : this.state.selectedRecord.sclientsiteaddress, \r\n        sinvoiceaddress: this.state.selectedRecord.sinvoiceaddress === undefined ? \"\" : this.state.selectedRecord.sinvoiceaddress, \r\n        sdescription: this.state.selectedRecord.sdescription === undefined ? \"\" : this.state.selectedRecord.sdescription, \r\n        ntransactionstatus: transactionStatus.DRAFT,\r\n        sdeviationremarks: this.state.selectedRecord.sdeviationremarks === undefined ? \"\" : this.state.selectedRecord.sdeviationremarks,\r\n\r\n        soem: this.state.selectedRecord.soem === undefined ? \"\" : this.state.selectedRecord.soem,\r\n        squotationleadtime: this.state.selectedRecord.squotationleadtime === undefined ? \"\" : this.state.selectedRecord.squotationleadtime\r\n\r\n      };\r\n\r\n    } else if ((this.props.Login.operation === \"create\") && (this.props.Login.screenName === \"IDS_QUOTATION\")) {\r\n\r\n      quotationData[\"quotation\"] = {  \r\n\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n        sprojecttitle: this.state.selectedRecord.sprojecttitle === undefined ? \"\" : this.state.selectedRecord.sprojecttitle, \r\n        sclientsiteaddress: this.state.selectedRecord.sclientsiteaddress === undefined ? \"\" : this.state.selectedRecord.sclientsiteaddress, \r\n        sinvoiceaddress: this.state.selectedRecord.sinvoiceaddress === undefined ? \"\" : this.state.selectedRecord.sinvoiceaddress, \r\n        sdescription: this.state.selectedRecord.sdescription === undefined ? \"\" : this.state.selectedRecord.sdescription, \r\n        ntransactionstatus: transactionStatus.DRAFT,\r\n        sdeviationremarks: this.state.selectedRecord.sdeviationremarks === undefined ? \"\" : this.state.selectedRecord.sdeviationremarks,\r\n\r\n        soem: this.state.selectedRecord.soem === undefined ? \"\" : this.state.selectedRecord.soem,\r\n        squotationleadtime: this.state.selectedRecord.squotationleadtime === undefined ? \"\" : this.state.selectedRecord.squotationleadtime\r\n\r\n      };\r\n\r\n     \r\n    }\r\n\r\n    if (((this.props.Login.operation === \"create\") || (this.props.Login.operation === \"update\")) && (this.props.Login.screenName === \"IDS_QUOTATION\")) {\r\n\r\n      quotationData[\"quotation\"][\"nclientcatcode\"] = this.state.selectedRecord[\"nclientcatcode\"] ? this.state.selectedRecord[\"nclientcatcode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      quotationData[\"quotation\"][\"nclientcode\"] = this.state.selectedRecord[\"nclientcode\"]!==\"\" ? this.state.selectedRecord[\"nclientcode\"].value\r\n        : transactionStatus.NA;\r\n\r\n    // quotationData[\"quotation\"][\"nquotationtypecode\"] = this.state.selectedRecord[\"nquotationtypecode\"]!==\"\" ? this.state.selectedRecord[\"nquotationtypecode\"].value\r\n    //   : transactionStatus.NA;\r\n\r\n      quotationData[\"quotation\"][\"nquotationtypecode\"] = transactionStatus.ACTIVE;\r\n      quotationData[\"quotation\"][\"nprojecttypecode\"] = this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      quotationData[\"quotation\"][\"nprojectmastercode\"] = this.state.selectedRecord[\"nprojectmastercode\"]  ? this.state.selectedRecord[\"nprojectmastercode\"].value\r\n        : transactionStatus.NA;\r\n\r\n\r\n /*     quotationData[\"quotation\"][\"nuserrolecode\"] = this.state.selectedRecord[\"nuserrolecode\"]!==\"\" ? this.state.selectedRecord[\"nuserrolecode\"]\r\n         : transactionStatus.NA; */\r\n        \r\n      quotationData[\"quotation\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"]\r\n        : transactionStatus.NA;\r\n\r\n\r\n // quotationData[\"quotation\"][\"drfwdate\"] = formatInputDate(this.state.selectedRecord[\"srfwdate\"], false);\r\n      quotationData[\"quotation\"][\"dquotationdate\"] = this.QuotationformatInputDate(this.state.selectedRecord[\"dquotationdate\"]);\r\n //     quotationData[\"quotation\"][\"dquotationdate\"] = rearrangeDateFormat(quotationData.userinfo,this.state.selectedRecord[\"dquotationdate\"]);\r\n      quotationData[\"quotation\"][\"ntzrfwdate\"] =  quotationData.userinfo.ntimezonecode ? quotationData.userinfo.ntimezonecode : \"-1\";\r\n      quotationData[\"quotation\"][\"ntzquotationdate\"] =  quotationData.userinfo.ntimezonecode ? quotationData.userinfo.ntimezonecode : \"-1\";\r\n\r\n      quotationData[\"quotation\"][\"nproductcatcode\"] = this.state.selectedRecord[\"nproductcatcode\"]!==\"\" ? this.state.selectedRecord[\"nproductcatcode\"].value\r\n      : transactionStatus.NA;\r\n\r\n      quotationData[\"quotation\"][\"nproductcode\"] = this.state.selectedRecord[\"nproductcode\"]!==\"\" ? this.state.selectedRecord[\"nproductcode\"].value\r\n      : transactionStatus.NA;\r\n      \r\n    }\r\n\r\nif ((this.props.Login.operation  === \"create\") && (this.props.Login.screenName === \"IDS_TEST\")) {\r\n          \r\n      inputParam = this.onSaveQuotationTest(saveType, formRef);\r\n  }\r\n\r\nif ((this.props.Login.operation  === \"update\") && ((this.props.Login.screenName === \"IDS_PRICE\") || (this.props.Login.screenName === \"IDS_CALCULATEPRICING\")) ) {\r\n      \r\n    inputParam = this.onSaveQuotationTestPrice(saveType, formRef);\r\n}\r\n\r\nif ((this.props.Login.operation  === \"create\") && (this.props.Login.screenName === \"IDS_CALCULATEPRICING\")) {\r\n          \r\n  inputParam = this.onSaveGrossQuotation(saveType, formRef);\r\n}\r\n    \r\n    if (((this.props.Login.operation === \"create\") || (this.props.Login.operation === \"update\")) && (this.props.Login.screenName === \"IDS_QUOTATION\")) {\r\n\r\n      inputParam = {\r\n        classUrl: \"quotation\",\r\n        methodUrl: \"Quotation\",\r\n        inputData: quotationData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        postParam,\r\n        searchRef: this.searchRef,\r\n        isClearSearch: this.props.Login.isClearSearch,\r\n      };\r\n    } \r\n    \r\n   \r\n\r\n  slideOutModal= ((this.props.Login.screenName === \"IDS_TEST\") || (this.props.Login.screenName === \"IDS_PRICE\") \r\n  || (this.props.Login.screenName === \"IDS_CALCULATEPRICING\")) ? \"openChildModal\" : \"openModal\";\r\n\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          saveType,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, slideOutModal);\r\n    }\r\n\r\n  };\r\n\r\n  onSaveQuotationTest(saveType, formRef) {\r\n    let inputData = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    // inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\r\n  //  inputData[\"Quotation\"] = {};\r\n\r\n\r\n    let testArray = []\r\n    testArray = this.state.selectedRecord.ntestcode.map(item => {\r\n        let QuotationData = {}\r\n\r\n        QuotationData[\"ntestcode\"] = item.value\r\n        QuotationData[\"nquotationcode\"] = this.props.Login.masterData.SelectedQuotation.nquotationcode;\r\n        QuotationData[\"nclientcode\"] = this.props.Login.masterData.SelectedQuotation.nclientcode;\r\n        QuotationData[\"nprojectmastercode\"] = this.props.Login.masterData.SelectedQuotation.nprojectmastercode;\r\n\r\n\r\n        return QuotationData;\r\n    });\r\n    inputData['QuotationTest'] = testArray;\r\n\r\n    const inputParam = {\r\n        classUrl: \"quotation\",\r\n        methodUrl: \"QuotationTest\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation, saveType, formRef,\r\n        searchRef: this.searchRef,\r\n        isClearSearch: this.props.Login.isClearSearch,\r\n        isChild: true\r\n\r\n\r\n    }\r\n    return inputParam;\r\n}\r\n\r\n\r\nQuotationformatInputDate(date) {\r\n\r\n  let formattedDate = \"\";\r\n\r\n  formattedDate = date.getFullYear() + \"-\" +\r\n      (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" +\r\n      (\"00\" + date.getDate()).slice(-2) +\r\n      (\"T00:00:00Z\");\r\n\r\n  return formattedDate;\r\n}\r\n\r\nonSaveQuotationTestPrice = (saveType, formRef) => {\r\n\r\n  const quotationtestPriceData = {\"userinfo\": this.props.Login.userInfo,\r\n                           \"QuotationTest\":this.props.Login.masterData.SelectedQuotation,\r\n                           \"nquotationcode\":this.props.Login.masterData.SelectedQuotation.nquotationcode,\r\n                           \"nprojectmastercode\":this.props.Login.masterData.SelectedQuotation.nprojectmastercode,\r\n                           \"nclientcode\":this.props.Login.masterData.SelectedQuotation.nclientcode,\r\n                       //    \"ncost\":this.props.Login.selectedRecord[0].ncost\r\n                          };\r\n\r\n   let postParam = undefined;\r\n   let dataState = undefined;\r\n   let selectedId = null;\r\n   \r\n   if (this.props.Login.operation === \"update\") {\r\n       // edit\r\n       dataState = this.state.dataState;\r\n       selectedId = this.props.Login.selectedId; \r\n       postParam = { inputListName: \"Quotation\", selectedObject: \"SelectedQuotation\", primaryKeyField: \"nquotationcode\" };\r\n\r\n      //  let selectedRecord1=[this.props.Login.selectedRecord];\r\n        let QuotationTestPriceArray=[];\r\n      \r\n       (this.props.Login.selectedRecord).forEach((item,index) => {\r\n               if(item.ntotalamount<0){\r\n                QuotationTestPriceArray[index]={...this.props.Login.selectedRecord[index],ntotalamount:0}\r\n               } \r\n\r\n               QuotationTestPriceArray[index] = {\r\n                 \r\n                 namount: this.props.Login.selectedRecord[index].namount,\r\n                 nclientcode: this.props.Login.selectedRecord[index].nclientcode,\r\n                 ncost: this.props.Login.selectedRecord[index].ncost,\r\n                 nnoofsamples: this.props.Login.selectedRecord[index].nnoofsamples,\r\n                 nprojectmastercode: this.props.Login.selectedRecord[index].nprojectmastercode,\r\n                 nquotationcode: this.props.Login.selectedRecord[index].nquotationcode,\r\n                 nquotationtestcode: this.props.Login.selectedRecord[index].nquotationtestcode,\r\n                 ntestcode: this.props.Login.selectedRecord[index].ntestcode, \r\n                 ntotalamount: this.props.Login.selectedRecord[index].ntotalamount,\r\n                 ntotalgrosstamount: this.props.Login.selectedRecord[index].ntotalgrosstamount,\r\n                //  stestdescription: this.props.Login.selectedRecord[index].stestdescription,\r\n                 stestsynonym: this.props.Login.selectedRecord[index].stestsynonym,\r\n                 ndiscountbandcode: this.props.Login.selectedRecord[index].ndiscountbandcode.value,\r\n                 stestplatform: this.props.Login.selectedRecord[index].stestplatform, \r\n                 snotes: this.props.Login.selectedRecord[index].snotes ,\r\n                 nmethodcode: this.props.Login.selectedRecord[index].nmethodcode \r\n\r\n                };\r\n         \r\n     });\r\n     \r\n       quotationtestPriceData[\"QuotationTest\"] = JSON.parse(JSON.stringify(QuotationTestPriceArray));           \r\n   }\r\n   else {\r\n       //add               \r\n                                          \r\n       let priceList = [];\r\n       this.state.selectedRecord[\"ntestcode\"] &&\r\n           this.state.selectedRecord[\"ntestcode\"].map(item => {\r\n               return priceList.push({\r\n                  ntestcode: item.value                      \r\n               })\r\n           })\r\n      \r\n       quotationtestPriceData[\"QuotationTest\"] = priceList;                             \r\n\r\n   }\r\n   if (quotationtestPriceData[\"QuotationTest\"].hasOwnProperty('esignpassword')) {\r\n       if (quotationtestPriceData[\"QuotationTest\"]['esignpassword'] === '') {\r\n           delete quotationtestPriceData[\"QuotationTest\"]['esigncomments']\r\n           delete quotationtestPriceData[\"QuotationTest\"]['esignpassword']\r\n           delete quotationtestPriceData[\"QuotationTest\"][\"agree\"]\r\n       }\r\n   }\r\n  //console.log(\"update data:\", quotationtestPriceData);\r\n   const inputParam = {\r\n       classUrl: this.props.Login.inputParam.classUrl,\r\n       methodUrl: \"QuotationTest\",\r\n       inputData: quotationtestPriceData,\r\n       operation: this.props.Login.operation,\r\n       saveType, formRef, postParam, searchRef: this.searchRef,\r\n       isClearSearch: this.props.Login.isClearSearch,\r\n       selectedId, dataState\r\n   }\r\n   \r\n   return inputParam;\r\n}\r\n\r\n\r\nonSaveGrossQuotation(saveType, formRef) {\r\n\r\n  let quotationData = {};\r\n  quotationData[\"userinfo\"] = this.props.Login.userInfo;\r\n \r\n\r\n\r\n  quotationData[\"GrossQuotation\"] = {  \r\n\r\n    nquotationcode: this.props.Login.masterData.SelectedQuotation.nquotationcode,\r\n    nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n    ndiscountamount:this.state.selectedRecord.DiscountAmount,\r\n    nvatamount:this.state.selectedRecord.VatAmount,\r\n    ntotalnetamount:this.state.selectedRecord.TotalNetAmount,\r\n    ntotalgrossamount : this.props.Login.QuotationGrossAmount[0].ntotalgrossamount,\r\n    nclientcode : this.props.Login.masterData.SelectedQuotation.nclientcode,\r\n    nprojectmastercode : this.props.Login.masterData.SelectedQuotation.nprojectmastercode\r\n    \r\n  };\r\n\r\n  quotationData[\"GrossQuotation\"][\"ndiscountbandcode\"] = this.state.selectedRecord[\"ndiscountbandcode\"] ? this.state.selectedRecord[\"ndiscountbandcode\"].value\r\n  : transactionStatus.NA;\r\n\r\n  quotationData[\"GrossQuotation\"][\"nvatbandcode\"] = this.state.selectedRecord[\"nvatbandcode\"] ? this.state.selectedRecord[\"nvatbandcode\"].value\r\n  : transactionStatus.NA;\r\n\r\n  // const postParam = {\r\n  //   inputListName: \"Quotation\",\r\n  //   selectedObject: \"SelectedQuotation\",\r\n  //   primaryKeyField: \"nquotationcode\",\r\n  //   primaryKeyValue: this.props.Login.masterData.SelectedQuotation.nquotationcode,\r\n  //   fetchUrl: \"quotation/getQuotation\",\r\n  //   fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n  // };\r\n\r\n  const inputParam = {\r\n    classUrl: \"quotation\",\r\n    methodUrl: \"GrossQuotation\",// postParam,\r\n    inputData: quotationData,\r\n    searchRef: this.searchRef,\r\n    operation: this.props.Login.operation, saveType, formRef,\r\n    isClearSearch: this.props.Login.isClearSearch,\r\n    isChild: true\r\n  }\r\n \r\n  return inputParam;\r\n}\r\n\r\n \r\n  onNumericInputOnChange = (event, primaryFieldKey) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n\r\n     \r\n        if(primaryFieldKey && ( event.target.name === \"nnoofsamples\" )){\r\n            const index = selectedRecord.findIndex(item=>item.nquotationtestcode === primaryFieldKey);\r\n            if (/^-?\\d*?\\.?\\d*?$/.test(event.target.value)){\r\n                selectedRecord[index][\"nnoofsamples\"] = event.target.value;\r\n            }\r\n        }\r\n        else{      \r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }           \r\n    \r\n    this.setState({ selectedRecord });\r\n}\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.Login.masterStatus !== \"\") {\r\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n        toast.warn(props.Login.masterStatus);\r\n        props.Login.masterStatus = \"\";\r\n      }\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n      toast.error(props.Login.error);\r\n      props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n      return { selectedRecord: {} };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateEsign = () => {\r\n    const inputParam = {\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedRecord[\"esigncomments\"],\r\n        },\r\n        password: this.state.selectedRecord[\"esignpassword\"],\r\n      },\r\n      screenData: this.props.Login.screenData,\r\n    };\r\n    this.props.validateEsignCredential(inputParam, \"openModal\");\r\n\r\n  };\r\n\r\n\r\n\r\n  DeleteQuotation = (methodUrl, selectedQuotation, operation, ncontrolCode) => {\r\n    const postParam = {\r\n      inputListName: \"QuotationList\",\r\n      selectedObject: \"SelectedQuotation\",\r\n      primaryKeyField: \"nquotationcode\",\r\n      primaryKeyValue: selectedQuotation.nquotationcode,\r\n      fetchUrl: \"quotation/getQuotation\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n    };\r\n\r\n    const inputParam = {\r\n      classUrl: this.props.Login.inputParam.classUrl,\r\n      methodUrl,\r\n      postParam,\r\n      inputData: {\r\n        userinfo: this.props.Login.userInfo,\r\n        quotation: selectedQuotation,\r\n      },\r\n      operation,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openModal: true,\r\n          screenName: \"IDS_QUOTATION\",\r\n          operation,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n\r\n\r\n    let versionStatusCSS = \"outline-secondary\";\r\n    let activeIconCSS = \"fa fa-check\"\r\n\r\n\r\n    if (this.props.Login.masterData.SelectedQuotation && this.props.Login.masterData.SelectedQuotation.ntransactionstatus === transactionStatus.APPROVED) {\r\n      versionStatusCSS = \"outline-success\";\r\n    }\r\n    else if (this.props.Login.masterData.SelectedQuotation && this.props.Login.masterData.SelectedQuotation.ntransactionstatus === transactionStatus.DRAFT) {\r\n      activeIconCSS = \"\";\r\n\r\n    }\r\n\r\n    if (this.props.Login.openModal) {\r\n      this.mandatoryFields = this.findMandatoryFields(this.props.Login.screenName, this.state.selectedRecord, this.props.Login.operation)\r\n    }\r\n\r\n\r\n    const { userInfo } = this.props.Login;\r\n    const addId = this.state.controlMap.has(\"AddQuotation\") && this.state.controlMap.get(\"AddQuotation\").ncontrolcode;\r\n    const editId = this.state.controlMap.has(\"EditQuotation\") && this.state.controlMap.get(\"EditQuotation\").ncontrolcode;\r\n    const deleteId = this.state.controlMap.has(\"DeleteQuotation\") && this.state.controlMap.get(\"DeleteQuotation\").ncontrolcode;\r\n    const approveId = this.state.controlMap.has(\"ApproveQuotation\") && this.state.controlMap.get(\"ApproveQuotation\").ncontrolcode;\r\n    \r\n    const addQuotationTestId = this.state.controlMap.has(\"AddQuotationTest\") && this.state.controlMap.get(\"AddQuotationTest\").ncontrolcode;\r\n    const updateQuotationTestId = this.state.controlMap.has(\"EditQuotationTest\") && this.state.controlMap.get(\"EditQuotationTest\").ncontrolcode;\r\n    // const grossQuotationeId = this.state.controlMap.has(\"CalculatePricing\") && this.state.controlMap.get(\"CalculatePricing\").ncontrolcode;\r\n    const viewQuotationId = this.state.controlMap.has(\"ViewQuotation\") && this.state.controlMap.get(\"ViewQuotation\").ncontrolcode;\r\n\r\n    const editTestPriceParam = {screenName:\"IDS_PRICE\", \"operation\":\"update\", \r\n    masterData:this.props.Login.masterData, userInfo: this.props.Login.userInfo, \r\n    ncontrolCode:updateQuotationTestId};\r\n\r\n  const selectedQuotation = this.props.Login.masterData.SelectedQuotation;\r\n\r\n    const filterParam = {\r\n      inputListName: \"Quotation\",\r\n      selectedObject: \"SelectedQuotation\",\r\n      primaryKeyField: \"nquotationcode\",\r\n      fetchUrl: \"quotation/getActiveQuotationById\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n          \r\n          <Row noGutters={true}>\r\n            <Col md={4}>\r\n              <ListMaster\r\n                screenName={this.props.intl.formatMessage({ id: \"IDS_QUOTATION\" })}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Quotation}\r\n                getMasterDetail={(quotationData) => this.props.getQuotation(quotationData, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                selectedMaster={selectedQuotation}\r\n                primaryKeyField=\"nquotationcode\"\r\n                mainField=\"squotationno\"\r\n                firstField=\"sclientname\"\r\n                secondField=\"sversionstatus\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                addId={addId}\r\n                searchRef={this.searchRef}\r\n                reloadData={this.reloadData}\r\n                //     openModal={() => this.props.addQuotation(\"create\", selectedQuotation, userInfo, addId, this.state.ProjectMasterList)}\r\n                openModal={() => this.props.addQuotation(\"create\", userInfo, addId, selectedQuotation)}\r\n                isMultiSelecct={false}\r\n                hidePaging={false}\r\n                isClearSearch={this.props.Login.isClearSearch}\r\n                openFilter={this.openFilter}\r\n                closeFilter={this.closeFilter}\r\n                // onFilterSubmit={this.onFilterSubmit}    \r\n                showFilterIcon={false}\r\n                showFilter={this.props.Login.showFilter}\r\n       /*         filterComponent={[\r\n                  {\r\n                    \"IDS_PROJECTMASTERFILTER\":\r\n                      <ProjectMasterFilter\r\n                        filterProjectType={this.state.ProjectMasterList || []}\r\n                        nfilterProjectType={this.props.Login.masterData.SelectedProjectType || {}}\r\n                        onComboChange={this.onComboChange}\r\n                        selectedRecord={this.state.selectedRecordfilter || {}}\r\n                      />\r\n                  }\r\n                ]} */\r\n\r\n              />\r\n            </Col>\r\n            <Col md={8}>\r\n              {selectedQuotation ?\r\n                <ContentPanel className=\"panel-main-content\">\r\n                  <Card className=\"border-0\">\r\n                    <Card.Header>\r\n                      {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                      <Card.Title className=\"product-title-main\">\r\n                        {selectedQuotation.sclientname}\r\n                      </Card.Title>\r\n                      <Card.Subtitle>\r\n                        <div className=\"d-flex product-category\">\r\n                          <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                            <span className={`btn btn-outlined ${versionStatusCSS} btn-sm ml-3`}>\r\n                              {/* <i class={activeIconCSS}></i> */}\r\n                              {selectedQuotation.sversionstatus}\r\n\r\n                            </span>\r\n                          </h2>\r\n                          {/* </Col>\r\n                             <Col md=\"4\"> */}\r\n                          {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                          <div className=\"d-inline\">\r\n                            {/* Don't delete these commented lines because additional info feature is needed for Agaram LIMS */}\r\n                            {/* Start Here */}\r\n                            {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"\" >  \r\n                                                            <FontAwesomeIcon icon={faEye} className=\"ActionIconColor\" onClick={(e)=>this.viewAdditionalInfo(e)} />\r\n                                                        </Nav.Link> */}\r\n                            {/* End Here */}\r\n\r\n                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" name=\"edittestname\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(viewQuotationId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEW\" })}\r\n                              \r\n                              onClick={() => this.QuotationPreview()}>\r\n                              <FontAwesomeIcon icon={faEye} />\r\n                            </Nav.Link>\r\n\r\n                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" name=\"edittestname\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={() => this.props.addQuotation(\"update\",userInfo, editId, selectedQuotation )}>\r\n                              <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </Nav.Link>\r\n                            \r\n                            <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"deletetestname\"\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                              //   data-for=\"tooltip_list_wrap\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                              onClick={() => this.ConfirmDelete(selectedQuotation, \"delete\", deleteId, \"Quotation\")}\r\n                            >\r\n                              <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                            </Nav.Link>\r\n                           \r\n\r\n                            <Nav.Link name=\"approveQuotation\" className=\"btn btn-circle outline-grey mr-2\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={() => this.approveQuotation(\"Quotation\", selectedQuotation, \"approve\", approveId)}>\r\n                              <FontAwesomeIcon icon={faThumbsUp} />\r\n                            </Nav.Link>\r\n\r\n                          </div>\r\n                          {/* </Tooltip> */}\r\n                        </div>\r\n                        {/* </Col>\r\n                                            </Row> */}\r\n                      </Card.Subtitle>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"form-static-wrap\">\r\n                      \r\n                      {/* <Col md={12}>\r\n                        <div className=\"horizontal-line\"></div>\r\n                      </Col> */}\r\n                     \r\n                         \r\n                      <Card className=\"at-tabs border-0\">\r\n                              {/* <Row noGutters>  --\r\n                                  <Col md={12}>\r\n                                      <div className=\"d-flex justify-content-end\">\r\n                                      <Nav.Link name=\"addPrice\" className=\"add-txt-btn\" \r\n                                              hidden={this.state.userRoleControlRights.indexOf(addQuotationTestId) === -1}\r\n                                              onClick={()=>this.props.getQuotationAddTestService(\"IDS_TEST\", \"create\", this.props.Login.masterData, this.props.Login.userInfo, addQuotationTestId)}\r\n                                              >\r\n                                            <FontAwesomeIcon icon={faPlus} /> { } \r\n                                          <FormattedMessage id='IDS_TEST' defaultMessage='Test' />\r\n                                      </Nav.Link>\r\n                                      <Nav.Link name=\"updatePrice\" className=\"add-txt-btn\" \r\n                                              hidden={this.state.userRoleControlRights.indexOf(updateQuotationTestId) === -1}\r\n                                              onClick={()=>this.props.getQuotationPricingEditService({...editTestPriceParam, \"updateType\":\"All\", dataState:undefined})}\r\n                                              >\r\n                                          <FontAwesomeIcon icon={faPencilAlt} /> { }\r\n                                          <FormattedMessage id='IDS_PRICE' defaultMessage='Price' />\r\n                                      </Nav.Link>\r\n                                      </div>\r\n                                  </Col>\r\n                              </Row> */}\r\n                              {/* <Row noGutters>\r\n                                  <Col md={12}>\r\n                                      <DataGrid\r\n                                          primaryKeyField={\"nquotationtestcode\"}\r\n                                       // data={this.props.Login.masterData.QuotationTest}\r\n                                          data={this.state.data}\r\n                                       // dataResult={this.props.Login.masterData.QuotationTest}\r\n                                      //  dataResult={process(this.props.Login.masterData.QuotationTest || [], this.state.quotationDataState)}\r\n                                          dataResult={this.state.dataResult}\r\n                                     //   dataState={this.state.quotationDataState}\r\n                                          dataState={this.state.dataState}\r\n                                       // dataStateChange={this.dataStateChange}\r\n                                       //   dataStateChange={(event) => this.setState({ quotationDataState: event.dataState })}\r\n                                          dataStateChange={this.dataStateChange}\r\n                                          extractedColumnList={this.extractedColumnList}\r\n                                          expandField=\"expanded\"\r\n                                          controlMap={this.state.controlMap}\r\n                                          userRoleControlRights={this.state.userRoleControlRights}\r\n                                          inputParam={this.props.Login.inputParam}\r\n                                          userInfo={this.props.Login.userInfo}\r\n                                          fetchRecord={this.props.getQuotationPricingEditService}\r\n                                          editParam={{...editTestPriceParam, \"updateType\":\"Single\", dataState:this.state.dataState}}\r\n                                          gridHeight={'335px'}\r\n                                          deleteRecord={this.DeleteQuotationTest}\r\n                                          deleteParam={{operation:\"delete\"}}\r\n                                          methodUrl={\"QuotationTest\"}\r\n                                          addRecord = {() => this.openModal(addId)}\r\n                                          pageable={true}\r\n                                          scrollable={'scrollable'}\r\n                                          isActionRequired={true}\r\n                                          isToolBarRequired={false}\r\n                                          selectedId={this.props.Login.selectedId}\r\n                                      />\r\n                                  </Col>\r\n                              </Row> */}\r\n\r\n                                  <Card className=\"at-tabs border-0\">\r\n                                    <Row noGutters>\r\n                                      <Col md={12}>\r\n                                        <QuotationTab\r\n                                          primaryKeyField={\"nquotationtestcode\"}\r\n                                          // data={this.props.Login.masterData.ProjectMember}\r\n                                          data={this.state.data}\r\n                                          // dataResult={this.props.Login.masterData.ProjectMember}\r\n                                          dataResult={this.state.dataResult}\r\n                                          masterData={this.props.Login.masterData}\r\n                                          screenName={this.props.Login.screenName}\r\n                                          operation={this.props.Login.operation}\r\n                                          openChildModal={this.props.Login.openChildModal}\r\n                                          crudMaster={this.props.crudMaster}\r\n                                          errorCode={this.props.Login.errorCode}\r\n                                          validateEsignCredential={this.props.validateEsignCredential}\r\n                                          loadEsign={this.props.Login.loadEsign}\r\n                                          showAccordian={this.state.showAccordian}\r\n                                          selectedRecord={this.state.selectedRecord || {}}\r\n                                          // dataState={{skip: 0, take: 10}}\r\n                                          // dataState={this.props.Login.dataState}\r\n                                          dataState={this.state.dataState}\r\n                                          dataStateChange={this.dataStateChange}\r\n                                          // extractedColumnList={fieldsForGrid} --\r\n                                          controlMap={this.state.controlMap}\r\n                                          userRoleControlRights={this.state.userRoleControlRights}\r\n                                          inputParam={this.props.Login.inputParam}\r\n                                          userInfo={this.props.Login.userInfo}\r\n                                          //    getProjectmasterAddMemberService={(this.props.Login.screenName,this.props.Login.operation,this.props.getProjectmasterAddMemberService,this.props.Login.userInfo,this.props.Login.ncontrolCode)}\r\n                                          getProjectmasterAddMemberService={this.props.getProjectmasterAddMemberService}\r\n                                          // --   fetchRecord={this.props.getPricingEditService}\r\n                                          //--       editParam={{...editTestPriceParam, \"updateType\":\"Single\", priceDataState:this.state.priceDataState}}\r\n                                          //  deleteParam={{operation:\"delete\"}}\r\n                                       \r\n                                          // reloadData={this.reloadData}\r\n                                          // --      addRecord = {() => this.openModal(addId)}\r\n                                          pageable={true}\r\n                                          onTabChange={this.onTabChange}\r\n                                          updateStore={this.props.updateStore}\r\n                                          scrollable={'scrollable'}\r\n                                          // gridHeight = {'600px'}\r\n                                          isActionRequired={true}\r\n                                          isToolBarRequired={false}\r\n                                          selectedId={this.props.Login.selectedId}\r\n                                          viewAttachment={this.props.viewAttachment}\r\n                                          MembersList={this.props.Login.MembersList}\r\n                                          onComboChange={this.onComboChange}\r\n                                          // File\r\n                                          addProjectMasterFile={this.props.addProjectMasterFile}\r\n                                          esignRights={this.props.Login.userRoleControlRights}\r\n                                          // ntransactionstatus={selectedProjectMaster.ntransactionstatus}  ---\r\n                                          //  selectedRecord={this.props.Login.selectedRecord}\r\n                                          onDropProjectMasterFile={this.onDropProjectMasterFile}\r\n                                          onInputOnChange={this.onInputOnChange}\r\n                                          screenData={this.props.Login.screenData}\r\n                                          deleteAttachment={this.deleteAttachment}\r\n                                          ncontrolCode={this.props.Login.ncontrolCode}\r\n                                          linkMaster= {this.props.Login.linkMaster}\r\n\r\n\r\n                                          addQuotationTestId= {this.props.Login.addQuotationTestId}\r\n                                          updateQuotationTestId= {this.props.Login.updateQuotationTestId}\r\n                                          addId= {this.props.Login.addId}\r\n                                          editParam={{...editTestPriceParam}}\r\n                                          // fetchRecord={this.props.getQuotationPricingEditService}\r\n                                          deleteRecord={this.DeleteQuotationTest}\r\n                                          getQuotationAddTestService={this.props.getQuotationAddTestService}\r\n                                          getQuotationPricingEditService={this.props.getQuotationPricingEditService}\r\n                                          QuotationTestList={this.props.Login.QuotationTestList}\r\n                                          onSaveClick={this.onSaveClick}\r\n                                          onnetAmountEvent={this.onnetAmountEvent}\r\n                                          onNumericInputChange={this.onNumericInputChange}\r\n                                          DiscountBand={this.props.Login.DiscountBand}\r\n                                          VATBand={this.props.Login.VATBand}\r\n                                          modalScreenSize={this.props.Login.modalScreenSize}\r\n                                          QuotationGrossAmount={this.props.Login.QuotationGrossAmount}\r\n\r\n                                          QuotationHistorydata={this.props.Login.masterData.QuotationHistory}\r\n                                          QuotationHistorydataResult={this.props.Login.masterData.QuotationHistory}\r\n                                          historydataState={this.state.historydataState}\r\n                                          historydataStateChange={this.historydataStateChange}\r\n                                          selectedQuotation={selectedQuotation}\r\n                                          GrossQuotation={this.props.GrossQuotation}\r\n                                        />\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Card>\r\n\r\n                          <Col md={12}>\r\n                            <div className=\"horizontal-line\"></div>\r\n                          </Col>\r\n\r\n                         \r\n                      {/* <Card>\r\n                        <Card.Body>\r\n\r\n                          <Row className='justify-content-end pr-2 m-0'>\r\n\r\n                                <Nav.Link name=\"CalculatePricing\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                    hidden={this.state.userRoleControlRights.indexOf(grossQuotationeId) === -1}\r\n                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_VATCALCULATION\" })}\r\n                                    onClick={() => this.props.GrossQuotation(\"create\", userInfo, grossQuotationeId, selectedQuotation)}>\r\n                                    \r\n                                  <Quotationdiscount className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                </Nav.Link>\r\n\r\n                          </Row>  \r\n\r\n                         <Row className='justify-content-end '>\r\n                            <Col md=\"4\">\r\n                              <FormGroup>\r\n                                <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_TOTALGROSSAMOUNT\" })}</FormLabel>\r\n                                <ReadOnlyText>{parseFloat((selectedQuotation.ntotalgrossamount).toFixed(2))}</ReadOnlyText>\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n\r\n                          <Row>\r\n                          <Col md=\"4\">\r\n                              <FormGroup>\r\n                                <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_DISCOUNTBAND\" })}</FormLabel>\r\n                                <ReadOnlyText>{selectedQuotation.sdiscountbandname}</ReadOnlyText>\r\n                              </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col md=\"4\">\r\n                              <FormGroup>\r\n                                <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_AMOUNT\" })}</FormLabel>\r\n                                <ReadOnlyText>{selectedQuotation.ndiscountpercentage}</ReadOnlyText>\r\n                              </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col md=\"4\">\r\n                              <FormGroup>\r\n                                <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_DISCOUNTAMOUNT\" })}</FormLabel>\r\n                                <ReadOnlyText>{parseFloat((selectedQuotation.ndiscountamount).toFixed(2))} </ReadOnlyText>\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n\r\n                          <Row>\r\n                          <Col md=\"4\">\r\n                              <FormGroup>\r\n                                <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_VATBAND\" })}</FormLabel>\r\n                                <ReadOnlyText>{selectedQuotation.svatbandname}</ReadOnlyText>\r\n                              </FormGroup>\r\n                          </Col>\r\n\r\n                           \r\n                            <Col md=\"4\">\r\n                              <FormGroup>\r\n                                <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_AMOUNT\" })}</FormLabel>\r\n                                <ReadOnlyText>{selectedQuotation.nvatpercentage}</ReadOnlyText>\r\n                              </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col md=\"4\">\r\n                              <FormGroup>\r\n                                <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_VATAMOUNT\" })}</FormLabel>\r\n                                <ReadOnlyText>{parseFloat((selectedQuotation.nvatamount).toFixed(2))} </ReadOnlyText>\r\n                              </FormGroup>\r\n                            </Col>\r\n\r\n                          </Row>\r\n\r\n                          <Row className='justify-content-end'>\r\n                          <Col md=\"4\">\r\n\r\n                            <FormGroup>\r\n                              <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}</FormLabel>\r\n                                <ReadOnlyText>{parseFloat((selectedQuotation.ntotalnetamount).toFixed(2))}</ReadOnlyText>\r\n                            </FormGroup>\r\n\r\n                           </Col>\r\n\r\n\r\n                          </Row>         \r\n                        </Card.Body>\r\n                      </Card> */}\r\n                      </Card>\r\n                      {/* <Card className=\"at-tabs border-0\">\r\n                        <Row noGutters>\r\n                          <Col md={12}>\r\n                            <QuotationTab\r\n                              primaryKeyField={\"nprojectmembercode\"}\r\n                              // data={this.props.Login.masterData.ProjectMember}\r\n                              data={this.state.data}\r\n                              // dataResult={this.props.Login.masterData.ProjectMember}\r\n                              dataResult={this.state.dataResult}\r\n                              masterData={this.props.Login.masterData}\r\n                              screenName={this.props.Login.screenName}\r\n                              operation={this.props.Login.operation}\r\n                              openChildModal={this.props.Login.openChildModal}\r\n                              crudMaster={this.props.crudMaster}\r\n                              errorCode={this.props.Login.errorCode}\r\n                              validateEsignCredential={this.props.validateEsignCredential}\r\n                              loadEsign={this.props.Login.loadEsign}\r\n                              showAccordian={this.state.showAccordian}\r\n                              selectedRecord={this.state.selectedRecord || {}}\r\n                              // dataState={{skip: 0, take: 10}}\r\n                              // dataState={this.props.Login.dataState}\r\n                              dataState={this.state.dataState}\r\n                              dataStateChange={this.dataStateChange}\r\n                              // extractedColumnList={fieldsForGrid} --\r\n                              controlMap={this.state.controlMap}\r\n                              userRoleControlRights={this.state.userRoleControlRights}\r\n                              inputParam={this.props.Login.inputParam}\r\n                              userInfo={this.props.Login.userInfo}\r\n                              //    getProjectmasterAddMemberService={(this.props.Login.screenName,this.props.Login.operation,this.props.getProjectmasterAddMemberService,this.props.Login.userInfo,this.props.Login.ncontrolCode)}\r\n                              getProjectmasterAddMemberService={this.props.getProjectmasterAddMemberService}\r\n                              // --   fetchRecord={this.props.getPricingEditService}\r\n                              //--       editParam={{...editTestPriceParam, \"updateType\":\"Single\", priceDataState:this.state.priceDataState}}\r\n                              //  deleteParam={{operation:\"delete\"}}\r\n                              methodUrl={\"Teammembers\"}\r\n                              // reloadData={this.reloadData}\r\n                              // --      addRecord = {() => this.openModal(addId)}\r\n                              pageable={true}\r\n                              onTabChange={this.onTabChange}\r\n                              updateStore={this.props.updateStore}\r\n                              scrollable={'scrollable'}\r\n                              // gridHeight = {'600px'}\r\n                              isActionRequired={true}\r\n                              isToolBarRequired={false}\r\n                              selectedId={this.props.Login.selectedId}\r\n                              viewAttachment={this.props.viewAttachment}\r\n                              MembersList={this.props.Login.MembersList}\r\n                              onComboChange={this.onComboChange}\r\n                              // File\r\n                              addProjectMasterFile={this.props.addProjectMasterFile}\r\n                              esignRights={this.props.Login.userRoleControlRights}\r\n                              // ntransactionstatus={selectedProjectMaster.ntransactionstatus}  ---\r\n                              //  selectedRecord={this.props.Login.selectedRecord}\r\n                              onDropProjectMasterFile={this.onDropProjectMasterFile}\r\n                              onInputOnChange={this.onInputOnChange}\r\n                              screenData={this.props.Login.screenData}\r\n                              deleteAttachment={this.deleteAttachment}\r\n                              ncontrolCode={this.props.Login.ncontrolCode}\r\n                              linkMaster= {this.props.Login.linkMaster}\r\n\r\n\r\n                              addQuotationTestId= {this.props.Login.addQuotationTestId}\r\n                              updateQuotationTestId= {this.props.Login.updateQuotationTestId}\r\n                              addId= {this.props.Login.addId}\r\n                              editParam={{...editTestPriceParam}}\r\n                              fetchRecord={this.props.getQuotationPricingEditService}\r\n                              deleteRecord={this.DeleteQuotationTest}\r\n                             \r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Card> */}\r\n\r\n\r\n\r\n                    </Card.Body>\r\n                  </Card>\r\n                </ContentPanel>\r\n                : \"\"\r\n              }\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n        </div>\r\n        {/* End of get display */}\r\n\r\n        {/* Start of Modal Sideout for Test Creation */}\r\n        {this.props.Login.openModal &&\r\n           <SlideOutModal\r\n           show={this.props.Login.openModal}\r\n           size={this.props.Login.modalScreenSize===true ? \"xl\" : \"lg\" }\r\n           closeModal={this.closeModal}\r\n           hideSave={this.props.Login.screenName ===  \"IDS_VIEW\" ? true :  false}\r\n           operation={(this.props.Login.screenName === \"IDS_CALCULATEPRICING\" || this.props.Login.screenName === \"IDS_VIEW\") ? \"\" :  this.props.Login.operation}\r\n           inputParam={this.props.Login.inputParam}\r\n           screenName={this.props.Login.screenName}\r\n           onSaveClick={this.onSaveClick}\r\n           esign={this.props.Login.loadEsign}\r\n           validateEsign={this.validateEsign}\r\n           selectedRecord={this.state.selectedRecord || {}} \r\n          //  mandatoryFields={this.props.Login.screenName !==\"IDS_PRICE\" ? this.mandatoryFields : []}\r\n           mandatoryFields={ this.mandatoryFields} \r\n           addComponent={this.props.Login.loadEsign ?\r\n            <Esign\r\n               operation={this.props.Login.operation}\r\n               onInputOnChange={this.onInputOnChange}\r\n               inputParam={this.props.Login.inputParam}\r\n               selectedRecord={this.state.selectedRecord || {}}\r\n             />\r\n             : (this.props.Login.screenName === \"IDS_QUOTATION\") ?\r\n\r\n               <AddQuotation\r\n\r\n                userInfo={this.props.Login.userInfo}\r\n                genericlabel={this.props.Login.genericLabel}\r\n                selectedRecord={this.state.selectedRecord || {}}\r\n                // selectedclientcode={this.state.selectedRecord.nclientcode || {}}\r\n                sclientsiteaddress={this.props.Login.sclientsiteaddress}\r\n                SelectedClient={this.props.Login.SelectedClient}\r\n                ClientCategory={this.props.Login.ClientCategory}\r\n                Client={this.props.Login.Client}\r\n                ProjectCode={this.props.Login.ProjectCode}\r\n                ProjectType={this.props.Login.ProjectType}\r\n                ProjectMaster={this.props.Login.ProjectMaster}\r\n                QuotationType={this.props.Login.QuotationType}\r\n                Product={this.props.Login.Product}\r\n                ProductCategory={this.props.Login.ProductCategory}\r\n                onInputOnChange={this.onInputOnChange}\r\n                onComboChange={this.onComboChange}\r\n         //     onNumericInputChange={this.onNumericInputChange}\r\n                 handleDateChange={this.handleDateChange}\r\n               /> \r\n              : (this.props.Login.screenName === \"IDS_VIEW\") ? \r\n\r\n               <AddQuotationPreview\r\n\r\n                selectedQuotation ={this.props.Login.masterData.SelectedQuotation}\r\n                userInfo={this.props.Login.userInfo}\r\n\r\n              ></AddQuotationPreview> : \"\"\r\n           }\r\n         />\r\n        }\r\n        {/* End of Modal Sideout for Test Creation */}\r\n      </>\r\n    );\r\n  }\r\n\r\n  findMandatoryFields(screenName, selectedRecord, operation) {\r\n    let mandatoryFields = [];\r\n    if (screenName === \"IDS_QUOTATION\") {\r\n\r\n      mandatoryFields = [\r\n        { \"idsName\": \"IDS_CLIENTCATEGORY\", \"dataField\": \"nclientcatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_CLIENT\", \"dataField\": \"nclientcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"textbox\" },\r\n//      { \"idsName\": \"IDS_INVOICEADDRESS\", \"dataField\": \"sinvoiceaddress\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n//      { \"idsName\": \"IDS_QUOTATIONTYPE\", \"dataField\": \"nquotationtypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n//      { \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"nprojecttypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n//      { \"idsName\": \"IDS_PROJECTCODE\", \"dataField\": \"nprojectmastercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n//      { \"idsName\": \"IDS_PROJECTTITLE\", \"dataField\": \"sprojecttitle\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n//      { \"idsName\": \"IDS_RFWDATE\", \"dataField\": \"srfwdate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"textbox\" },\r\n //     { \"idsName\": \"IDS_ROLE\", \"dataField\": \"suserrolename\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n //     { \"idsName\": \"IDS_USER\", \"dataField\": \"susername\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": (this.props.Login.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] || \"\"), \"dataField\": \"nproductcatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": (this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] || \"\"), \"dataField\": \"nproductcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n        { \"idsName\": \"IDS_QUOTATIONDATE\", \"dataField\": \"dquotationdate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n        \r\n      ]\r\n\r\n      // mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\r\n      return mandatoryFields;\r\n\r\n    } \r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  QuotationPreview = () => {\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: {\r\n        screenName: \"IDS_VIEW\",\r\n        openModal: true,\r\n        operation: \"create\",\r\n        modalScreenSize : false\r\n        \r\n      },\r\n    };\r\n\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n\r\n\r\n  onComboChange = (comboData, fieldName, caseNo, nquotationtestcode) => {\r\n\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    switch (caseNo) {\r\n      case 1:\r\n\r\n      if(fieldName===\"nclientcatcode\"){\r\n        // const selectedRecord = this.state.selectedRecord || {};\r\n        if (selectedRecord.nclientcatcode) {\r\n          if (parseInt(comboData.value) !== parseInt(selectedRecord.nclientcatcode.value)) {\r\n            // selectedRecord.nusercode={};\r\n            delete (selectedRecord.nclientcode);\r\n            delete (selectedRecord.sclientsiteaddress);\r\n          }\r\n        }\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        selectedRecord[\"sclientcatname\"] = comboData.item[\"sclientcatname\"];\r\n        this.props.getClientCategoryComboService({\r\n\r\n          inputData: {\r\n            userinfo: this.props.Login.userInfo,\r\n            sdisplayname: selectedRecord.nclientcatcode.label,\r\n            primarykey: selectedRecord.nclientcatcode.value,\r\n          }\r\n\r\n        }, selectedRecord);\r\n      }\r\n\r\n      if(fieldName===\"nclientcode\"){\r\n        // const selectedRecord = this.state.selectedRecord || {};\r\n        if (selectedRecord.nclientcode) {\r\n          if (parseInt(comboData.value) !== parseInt(selectedRecord.nclientcode.value)) {\r\n            // selectedRecord.nusercode={};\r\n            delete (selectedRecord.sclientsiteaddress);\r\n            \r\n          }\r\n        }\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        selectedRecord[\"sclientname\"] = comboData.item[\"sclientname\"];\r\n        this.props.getQuotaionClientComboService({\r\n\r\n          inputData: {\r\n            userinfo: this.props.Login.userInfo,\r\n            sdisplayname: selectedRecord.nclientcode.label,\r\n            primarykey: selectedRecord.nclientcode.value,\r\n          }\r\n\r\n        }, selectedRecord);\r\n      }\r\n\r\n      if(fieldName===\"nproductcatcode\"){ //\r\n        // const selectedRecord = this.state.selectedRecord || {};\r\n        if (selectedRecord.nproductcatcode) {\r\n          if (parseInt(comboData.value) !== parseInt(selectedRecord.nproductcatcode.value)) {\r\n            // selectedRecord.nusercode={};\r\n            delete (selectedRecord.nproductcode);\r\n            \r\n          }\r\n        }\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        selectedRecord[\"sproductcatname\"] = comboData.item[\"sproductcatname\"];\r\n        this.props.getQuotaionProductCategoryComboService({\r\n\r\n          inputData: {\r\n            userinfo: this.props.Login.userInfo,\r\n            sdisplayname: selectedRecord.nproductcatcode.label,\r\n            primarykey: selectedRecord.nproductcatcode.value,\r\n          }\r\n\r\n        }, selectedRecord);\r\n      }\r\n\r\n        break;\r\n\r\n      case 2:\r\n\r\n        // const selectedRecordfilter = this.state.selectedRecordfilter || {};\r\n        // selectedRecordfilter[fieldName] = comboData;\r\n        // this.setState({ selectedRecordfilter });\r\n        // break;\r\n\r\n        // const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n        break;\r\n        \r\n      case 3:\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        if(fieldName===\"ndiscountbandcode\"){\r\n\r\n          const VatAmount=(this.state.selectedRecord.VatAmount === undefined ? 0.00 : this.state.selectedRecord.VatAmount)\r\n          selectedRecord[\"DiscountAmount\"]=parseFloat((this.props.Login.QuotationGrossAmount[0].ntotalgrossamount * (selectedRecord.ndiscountbandcode.item.namount/100)).toFixed(2));\r\n//        selectedRecord[\"TotalNetAmount\"]=this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+(this.state.selectedRecord.DiscountAmount-VatAmount);\r\n          selectedRecord[\"TotalNetAmount\"]=parseFloat(((this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+VatAmount)-this.state.selectedRecord.DiscountAmount).toFixed(2));\r\n          selectedRecord[\"ndiscountpercentage\"]= selectedRecord.ndiscountbandcode.item.namount;\r\n\r\n\r\n          }else if(fieldName===\"nvatbandcode\"){\r\n\r\n            selectedRecord[\"VatAmount\"]=parseFloat((this.props.Login.QuotationGrossAmount[0].ntotalgrossamount * (selectedRecord.nvatbandcode.item.namount/100)).toFixed(2));\r\n  //        selectedRecord[\"TotalNetAmount\"]=this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+(selectedRecord.DiscountAmount-this.state.selectedRecord.VatAmount);\r\n            selectedRecord[\"TotalNetAmount\"]=parseFloat(((this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+this.state.selectedRecord.VatAmount)-selectedRecord.DiscountAmount).toFixed(2));\r\n            selectedRecord[\"nvatpercentage\"] = selectedRecord.nvatbandcode.item.namount; \r\n\r\n          }\r\n\r\n        \r\n        this.setState({ selectedRecord });\r\n        break;\r\n\r\n        case 4:\r\n         \r\n          if(fieldName===\"nprojecttypecode\"){\r\n            if (selectedRecord.nprojecttypecode) {\r\n              if (parseInt(comboData.value) !== parseInt(selectedRecord.nprojecttypecode.value)) {\r\n                delete (selectedRecord.nprojectmastercode);\r\n                delete (selectedRecord.sprojecttitle);\r\n                delete (selectedRecord.srfwdate);\r\n                delete (selectedRecord.suserrolename);\r\n                delete (selectedRecord.susername);\r\n              }\r\n            }\r\n    \r\n            selectedRecord[fieldName] = comboData;\r\n            selectedRecord[\"sprojecttypename\"] = comboData.item[\"sprojecttypename\"];\r\n            this.props.getProjectTypeComboService({\r\n    \r\n              inputData: {\r\n                userinfo: this.props.Login.userInfo,\r\n                sdisplayname: selectedRecord.nprojecttypecode.label,\r\n                primarykey: selectedRecord.nprojecttypecode.value,\r\n              }\r\n    \r\n            }, selectedRecord);\r\n          }\r\n\r\n          if(fieldName===\"nprojectmastercode\"){\r\n            if (selectedRecord.nprojectmastercode) {\r\n              if (parseInt(comboData.value) !== parseInt(selectedRecord.nprojectmastercode.value)) {\r\n                delete (selectedRecord.sprojecttitle);\r\n                delete (selectedRecord.srfwdate);\r\n                delete (selectedRecord.suserrolename);\r\n                delete (selectedRecord.susername);\r\n              }\r\n            }\r\n    \r\n            selectedRecord[fieldName] = comboData;\r\n            selectedRecord[\"sprojectcode\"] = comboData.item[\"sprojectcode\"];\r\n            this.props.getProjectCodeComboService({\r\n    \r\n              inputData: {\r\n                userinfo: this.props.Login.userInfo,\r\n                sdisplayname: selectedRecord.nprojectmastercode.label,\r\n                primarykey: selectedRecord.nprojectmastercode.value,\r\n              }\r\n    \r\n            }, selectedRecord);\r\n          }\r\n\r\n          break;\r\n          case 5:\r\n\r\n          //  selectedRecord[fieldName] = comboData;\r\n          //  selectedRecord[\"namount\"]=comboData.item.namount;\r\n           let selectedRecordindex=selectedRecord.findIndex((item) => (item.nquotationtestcode === nquotationtestcode ? item : \"\"));\r\n           let str=selectedRecord[selectedRecordindex];\r\n           let discountamount = parseFloat(( (str.ncost * str.nnoofsamples) * (comboData.item.namount/100)).toFixed(2));\r\n           let count= ( str.ncost * str.nnoofsamples ) - ( discountamount ); \r\n           selectedRecord[selectedRecordindex]={...str, ntotalamount:parseFloat((count).toFixed(2)), namount:comboData.item.namount , ndiscountbandcode:comboData.item.ndiscountbandcode}\r\n           selectedRecord[selectedRecordindex][\"ndiscountbandcode\"]={label :comboData.item.sdiscountbandname,value:comboData.item.ndiscountbandcode}\r\n\r\n        //    selectedRecord[selectedRecordindex][\"ndiscountbandcode\"]=  {...selectedRecord[selectedRecordindex],\r\n\r\n        //     label :comboData.item.sdiscountbandname,\r\n        //     value:comboData.item.ndiscountbandcode\r\n            \r\n        // }\r\n\r\n           this.setState(selectedRecord);\r\n\r\n          break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // onNumericInputChange = (event, primaryFieldKey) => {\r\n  //   // console.log(\"value:\", value, name);\r\n  //    const selectedRecord = this.state.selectedRecord || {};\r\n  //    if (event.target.name === \"nnoofsamples\") {\r\n  //     const index = selectedRecord.findIndex(item=>item.nquotationtestcode === primaryFieldKey);\r\n  //        if (/^-?\\d*?$/.test(event.target.value) || event.target.value === \"\") {\r\n    \r\n  //         selectedRecord[index][event.target.name] = event.target.value;\r\n  //        }\r\n  //    }\r\n  //    else {\r\n  //     selectedRecord[event.target.name] = event.target.value;\r\n  //    }\r\n  \r\n  //    this.setState({ selectedRecord });\r\n  // }\r\n\r\n  onNumericInputChange = (value, name,primaryFieldKey) => {\r\n\r\n     const selectedRecord = this.state.selectedRecord || {};\r\n     const index = selectedRecord.findIndex(item=>item.nquotationtestcode === primaryFieldKey);\r\n     selectedRecord[index][name] = value;\r\n   \r\n\r\n     this.setState({ selectedRecord });\r\n }\r\n\r\n  onInputOnChange = (event, primaryFieldKey) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n\r\n    if (event.target.name === 'snotes' || event.target.name === 'stestplatform') {\r\n\r\n      const index = selectedRecord.findIndex(item=>item.nquotationtestcode === primaryFieldKey);\r\n      selectedRecord[index][event.target.name] = event.target.value;\r\n\r\n    }\r\n    else {   \r\n        if(primaryFieldKey && (event.target.name === \"ncost\" || event.target.name === \"nnoofsamples\" || event.target.name === \"ntotalamount\")){\r\n            const index = selectedRecord.findIndex(item=>item.nquotationtestcode === primaryFieldKey);\r\n            // if (/^-?\\d*?\\.?\\d*?$/.test(event.target.value)){\r\n              if (/^-?\\d*?$/.test(event.target.value)) {\r\n                selectedRecord[index][event.target.name] = event.target.value;\r\n            }\r\n        }\r\n        else{      \r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }           \r\n    }\r\n    this.setState({ selectedRecord });\r\n}\r\n\r\nonnetAmountEvent = (nquotationtestcode) => {\r\n\r\n  let selectedRecord=this.state.selectedRecord;\r\n  let selectedRecordindex=selectedRecord.findIndex((item) => (item.nquotationtestcode === nquotationtestcode ? item : \"\"));\r\n  let str=selectedRecord[selectedRecordindex];\r\n//  let count= (str.ncost * str.nnoofsamples)-str.namount; \r\n  let discountamount = parseFloat(( (str.ncost * str.nnoofsamples) * (str.namount/100)).toFixed(2));\r\n  let count= ( str.ncost * str.nnoofsamples ) - ( discountamount ); \r\n  // selectedRecord[selectedRecordindex]={...str,ntotalamount:count}\r\n  selectedRecord[selectedRecordindex]={...str,ntotalamount: parseFloat((count).toFixed(2))}\r\n\r\n  this.setState(selectedRecord);\r\n\r\n  \r\n} \r\n\r\n\r\n\r\n  approveQuotation = (methodUrl, selectedQuotation, operation, ncontrolCode) => {\r\n    if (selectedQuotation.ntransactionstatus === transactionStatus.DRAFT) {\r\n\r\n      const postParam = {\r\n        inputListName: \"Quotation\",\r\n        selectedObject: \"SelectedQuotation\",\r\n        primaryKeyField: \"nquotationcode\",\r\n        primaryKeyValue: selectedQuotation.nquotationcode,\r\n        fetchUrl: \"quotation/getQuotation\",\r\n        fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      };\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl, postParam,\r\n        inputData: {\r\n          \"userinfo\": this.props.Login.userInfo, \r\n          \"quotation\": selectedQuotation\r\n        },\r\n        operation,\r\n        isClearSearch: this.props.Login.isClearSearch\r\n      }\r\n\r\n      const masterData = this.props.Login.masterData;\r\n\r\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true, screenData: { inputParam, masterData },\r\n            openModal: true, screenName: \"IDS_QUOTATION\", operation\r\n          }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n      }\r\n      else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }else if(selectedQuotation.ntransactionstatus === transactionStatus.APPROVED){\r\n\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYAPPROVED\" }));\r\n\r\n    }else {\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }));\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  onTabChange = (tabProps) => {\r\n    const screenName = tabProps.screenName;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { screenName },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n\r\n  /*\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(\r\n        this.props.Login.masterData[\"selectedSection\"],\r\n        event.dataState\r\n      ),\r\n      sectionDataState: event.dataState,\r\n    });\r\n  };\r\n*/\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(this.state.data, event.dataState),\r\n      dataState: event.dataState\r\n    });\r\n  }\r\n\r\n  historydataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(this.state.data, event.historydataState),\r\n      historydataState: event.historydataState\r\n    });\r\n  }\r\n\r\n  ConfirmDelete = (selectedQuotation, operation, deleteId, screenName) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.DeleteQuotation(\r\n          screenName,\r\n          selectedQuotation,\r\n          operation,\r\n          deleteId\r\n\r\n        )\r\n    );\r\n  };\r\n  reloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n//    if (Object.values(this.props.Login.masterData.SelectedQuotation).length && this.props.Login.masterData.SelectedQuotation !== undefined) {\r\n      if (this.props.Login.masterData.SelectedQuotation !== undefined) {\r\n      let inputParam = {\r\n        inputData: {\r\n     \r\n          userinfo: this.props.Login.userInfo,\r\n          \r\n        },\r\n        classUrl: \"quotation\",\r\n        methodUrl: \"Quotation\",\r\n      };\r\n\r\n      this.props.getreloadQuotation(inputParam);\r\n\r\n    } \r\n    // else {\r\n    //   toast.warn(\r\n    //     this.props.intl.formatMessage({\r\n    //       id: \"IDS_PROJECTTYPENOTAVAILABLE\",\r\n    //     })\r\n    //   );\r\n    // }\r\n  };\r\n\r\n  DeleteQuotationTest = (deleteParam) =>{\r\n\r\n  \r\n    deleteParam.selectedRecord[\"nclientcode\"]=this.props.Login.masterData.SelectedQuotation.nclientcode;\r\n    deleteParam.selectedRecord[\"nprojectmastercode\"]=this.props.Login.masterData.SelectedQuotation.nprojectmastercode;\r\n\r\n    const postParam = { \r\n      \r\n      inputListName: \"QuotationList\", selectedObject: \"SelectedQuotation\",\r\n      primaryKeyField: \"nquotationcode\", primaryKeyValue: deleteParam.selectedRecord.nquotationtestcode,\r\n      fetchUrl: \"quotation/getQuotationTest\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo }\r\n  };\r\n\r\n    const inputParam = {\r\n        classUrl: \"quotation\",\r\n        methodUrl: \"QuotationPrice\",\r\n        postParam,\r\n\r\n        inputData: {\r\n            \"QuotationTestPrice\": deleteParam.selectedRecord,//.dataItem,\r\n      //      \"npriceversioncode\":this.props.Login.masterData.SelectedTestPriceVersion.npriceversioncode,\r\n            \"userinfo\": this.props.Login.userInfo,\r\n\r\n        },\r\n        operation:\"delete\",\r\n     //  priceDataState:this.state.priceDataState\r\n    }\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_TESTPRICE\" }),\r\n                operation:deleteParam.operation\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    else {\r\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n    }\r\n}\r\n\r\n\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n\r\n    let openModal = this.props.Login.openModal;\r\n    let selectedRecord = this.state.selectedRecord;\r\n//    let selectedRecord = this.state.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\r\n            loadEsign = false;\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        else {\r\n            loadEsign = false;\r\n            selectedRecord['esignpassword'] = '';\r\n            selectedRecord['esigncomments'] = '';\r\n            selectedRecord['esignreason'] = '';\r\n        } \r\n    }\r\n    else {\r\n        openModal = false;\r\n        selectedRecord = {};\r\n    }\r\n\r\n    const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { openModal, loadEsign, selectedRecord }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n\r\n}\r\n\r\n  componentDidUpdate(previousProps) {\r\n    let {\r\n      selectedRecord,\r\n      userRoleControlRights,\r\n      controlMap,\r\n      filterData,dataResult\r\n      \r\n    } = this.state;\r\n\r\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n      selectedRecord = this.props.Login.selectedRecord;\r\n      this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n//   if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n//     userRoleControlRights = [];\r\n//     if (this.props.Login.userRoleControlRights) {\r\n//       this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode\r\n//       ] &&\r\n//         Object.values(\r\n//           this.props.Login.userRoleControlRights[\r\n//           this.props.Login.userInfo.nformcode\r\n//           ]\r\n//         ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n//     }\r\n//     controlMap = getControlMap(\r\n//       this.props.Login.userRoleControlRights,\r\n//       this.props.Login.userInfo.nformcode\r\n//     );\r\n//     // this.setState({ controlMap, userRoleControlRights });\r\n\r\n\r\n//     this.setState({\r\n//       userRoleControlRights, controlMap, data: this.props.Login.masterData.QuotationTest,\r\n//       dataResult: process(this.props.Login.masterData.QuotationTest, this.state.dataState)\r\n//   });\r\n//   }\r\n//   else {\r\n\r\n//     let {dataState}=this.state;\r\n//         if(this.state.dataResult !== undefined){ \r\n//             if(this.state.dataResult.data){\r\n//                 if(this.state.dataResult.data.length ===1){\r\n//                     let skipcount=this.state.dataState.skip>0?(this.state.dataState.skip-this.state.dataState.take):\r\n//                     this.state.dataState.skip\r\n//                     dataState={skip:skipcount,take:this.state.dataState.take}\r\n//                 }\r\n//               } \r\n\r\n//               this.setState({\r\n//                 dataResult: process( this.props.Login.masterData || [], dataState),\r\n//                 dataState\r\n//           });\r\n//     }\r\n    \r\n// }\r\n\r\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n        userRoleControlRights = [];\r\n        if (this.props.Login.userRoleControlRights) {\r\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode\r\n          ] &&\r\n            Object.values(\r\n              this.props.Login.userRoleControlRights[\r\n              this.props.Login.userInfo.nformcode\r\n              ]\r\n            ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n        }\r\n        controlMap = getControlMap(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode\r\n        );\r\n        // this.setState({ controlMap, userRoleControlRights });\r\n  \r\n  \r\n        this.setState({\r\n          userRoleControlRights, controlMap, data: this.props.Login.masterData.QuotationTest,\r\n          dataResult: process(this.props.Login.masterData.QuotationTest || [], this.state.dataState),\r\n\r\n          // QuotationHistorydataResult: process(this.props.Login.masterData.QuotationHistory || [], this.state.historydataState)\r\n          // QuotationHistorydata: this.props.Login.masterData.QuotationHistory, QuotationHistorydataResult: process(this.props.Login.masterData.QuotationHistory || [], this.state.dataState)\r\n      });\r\n      \r\n   \r\n      \r\n      }\r\n      else {\r\n  \r\n        let {dataState}=this.state;\r\n        // let {historydataState}=this.state;\r\n            if(this.state.dataResult !== undefined){ \r\n                if(this.state.dataResult.data){\r\n                    if(this.state.dataResult.data.length ===1){\r\n                        let skipcount=this.state.dataState.skip>0?(this.state.dataState.skip-this.state.dataState.take):\r\n                        this.state.dataState.skip\r\n                        dataState={skip:skipcount,take:this.state.dataState.take}\r\n                    }\r\n                  } \r\n  \r\n                  this.setState({\r\n                    data: this.props.Login.masterData.QuotationTest,\r\n                    dataResult: process( this.props.Login.masterData.QuotationTest || [], dataState),\r\n                    dataState \r\n                    // QuotationHistorydata: this.props.Login.masterData.QuotationHistory, QuotationHistorydataResult: process(this.props.Login.masterData.QuotationHistory || [], this.state.dataState)\r\n\r\n              });\r\n        }\r\n\r\n  //       if(this.state.QuotationHistorydataResult !== undefined){ \r\n  //         if(this.state.QuotationHistorydataResult.data){\r\n  //             if(this.state.QuotationHistorydataResult.data.length ===1){\r\n  //                 let skipcount=this.state.historydataState.skip>0?(this.state.historydataState.skip-this.state.historydataState.take):\r\n  //                 this.state.historydataState.skip\r\n  //                 historydataState={skip:skipcount,take:this.state.historydataState.take}\r\n  //             }\r\n  //           } \r\n\r\n  //           this.setState({\r\n  //             QuotationHistorydata: this.props.Login.masterData.QuotationHistory,\r\n  //             QuotationHistorydataResult: process( this.props.Login.masterData.QuotationHistory || [], historydataState),\r\n  //             historydataState \r\n  //             // QuotationHistorydata: this.props.Login.masterData.QuotationHistory, QuotationHistorydataResult: process(this.props.Login.masterData.QuotationHistory || [], this.state.dataState)\r\n\r\n  //       });\r\n  // }\r\n        \r\n    }\r\n      // dataResult = this.props.Login.masterData.QuotationTest;\r\n      // this.setState({\r\n      //   selectedRecord,dataResult\r\n      // });\r\n\r\n      // this.setState({ filterData });\r\n    }\r\n\r\n\r\n  }\r\n  \r\n  openFilter = () => {\r\n    let showFilter = !this.props.Login.showFilter;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  closeFilter = () => {\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter: false },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  filterColumnData,\r\n  updateStore,\r\n  validateEsignCredential,\r\n  getQuotation,getProjectTypeComboService,\r\n  viewAttachment, addQuotation, getreloadQuotation, getQuotationAddTestService, getQuotationPricingEditService,\r\n   GrossQuotation,getClientCategoryComboService,getQuotaionClientComboService,getProjectCodeComboService ,getQuotaionProductCategoryComboService\r\n})(injectIntl(Quotation));\r\n"]},"metadata":{},"sourceType":"module"}