{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nvar mapListValues = Utils.ListUtils.mapListValues;\nexport default (function (_ref) {\n  var listValues = _ref.listValues,\n      value = _ref.value,\n      setValue = _ref.setValue,\n      allowCustomValues = _ref.allowCustomValues,\n      readonly = _ref.readonly,\n      customProps = _ref.customProps;\n\n  var renderOptions = function renderOptions() {\n    return mapListValues(listValues, function (_ref2) {\n      var title = _ref2.title,\n          value = _ref2.value;\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: value,\n        value: value\n      }, title);\n    });\n  };\n\n  var getMultiSelectValues = function getMultiSelectValues(multiselect) {\n    var values = [];\n    var options = multiselect.options;\n\n    for (var i = 0; i < options.length; i++) {\n      var opt = options[i];\n\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n\n    if (!values.length) values = undefined; //not allow []\n\n    return values;\n  };\n\n  var onChange = function onChange(e) {\n    return setValue(getMultiSelectValues(e.target));\n  };\n\n  return /*#__PURE__*/React.createElement(\"select\", _extends({\n    multiple: true,\n    onChange: onChange,\n    value: value,\n    disabled: readonly\n  }, omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])), renderOptions());\n});","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/@react-awesome-query-builder/ui/esm/components/widgets/vanilla/value/VanillaMultiSelect.js"],"names":["_extends","React","Utils","omit","mapListValues","ListUtils","_ref","listValues","value","setValue","allowCustomValues","readonly","customProps","renderOptions","_ref2","title","createElement","key","getMultiSelectValues","multiselect","values","options","i","length","opt","selected","push","undefined","onChange","e","target","multiple","disabled"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,mCAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,IAAIC,aAAa,GAAGF,KAAK,CAACG,SAAN,CAAgBD,aAApC;AACA,gBAAgB,UAAUE,IAAV,EAAgB;AAC9B,MAAIC,UAAU,GAAGD,IAAI,CAACC,UAAtB;AAAA,MACEC,KAAK,GAAGF,IAAI,CAACE,KADf;AAAA,MAEEC,QAAQ,GAAGH,IAAI,CAACG,QAFlB;AAAA,MAGEC,iBAAiB,GAAGJ,IAAI,CAACI,iBAH3B;AAAA,MAIEC,QAAQ,GAAGL,IAAI,CAACK,QAJlB;AAAA,MAKEC,WAAW,GAAGN,IAAI,CAACM,WALrB;;AAMA,MAAIC,aAAa,GAAG,SAASA,aAAT,GAAyB;AAC3C,WAAOT,aAAa,CAACG,UAAD,EAAa,UAAUO,KAAV,EAAiB;AAChD,UAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AAAA,UACEP,KAAK,GAAGM,KAAK,CAACN,KADhB;AAEA,aAAO,aAAaP,KAAK,CAACe,aAAN,CAAoB,QAApB,EAA8B;AAChDC,QAAAA,GAAG,EAAET,KAD2C;AAEhDA,QAAAA,KAAK,EAAEA;AAFyC,OAA9B,EAGjBO,KAHiB,CAApB;AAID,KAPmB,CAApB;AAQD,GATD;;AAUA,MAAIG,oBAAoB,GAAG,SAASA,oBAAT,CAA8BC,WAA9B,EAA2C;AACpE,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,OAAO,GAAGF,WAAW,CAACE,OAA1B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,UAAIE,GAAG,GAAGH,OAAO,CAACC,CAAD,CAAjB;;AACA,UAAIE,GAAG,CAACC,QAAR,EAAkB;AAChBL,QAAAA,MAAM,CAACM,IAAP,CAAYF,GAAG,CAAChB,KAAhB;AACD;AACF;;AACD,QAAI,CAACY,MAAM,CAACG,MAAZ,EAAoBH,MAAM,GAAGO,SAAT,CATgD,CAS5B;;AACxC,WAAOP,MAAP;AACD,GAXD;;AAYA,MAAIQ,QAAQ,GAAG,SAASA,QAAT,CAAkBC,CAAlB,EAAqB;AAClC,WAAOpB,QAAQ,CAACS,oBAAoB,CAACW,CAAC,CAACC,MAAH,CAArB,CAAf;AACD,GAFD;;AAGA,SAAO,aAAa7B,KAAK,CAACe,aAAN,CAAoB,QAApB,EAA8BhB,QAAQ,CAAC;AACzD+B,IAAAA,QAAQ,EAAE,IAD+C;AAEzDH,IAAAA,QAAQ,EAAEA,QAF+C;AAGzDpB,IAAAA,KAAK,EAAEA,KAHkD;AAIzDwB,IAAAA,QAAQ,EAAErB;AAJ+C,GAAD,EAKvDR,IAAI,CAACS,WAAD,EAAc,CAAC,YAAD,EAAe,OAAf,EAAwB,gBAAxB,CAAd,CALmD,CAAtC,EAK8CC,aAAa,EAL3D,CAApB;AAMD,CAtCD","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nvar mapListValues = Utils.ListUtils.mapListValues;\nexport default (function (_ref) {\n  var listValues = _ref.listValues,\n    value = _ref.value,\n    setValue = _ref.setValue,\n    allowCustomValues = _ref.allowCustomValues,\n    readonly = _ref.readonly,\n    customProps = _ref.customProps;\n  var renderOptions = function renderOptions() {\n    return mapListValues(listValues, function (_ref2) {\n      var title = _ref2.title,\n        value = _ref2.value;\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: value,\n        value: value\n      }, title);\n    });\n  };\n  var getMultiSelectValues = function getMultiSelectValues(multiselect) {\n    var values = [];\n    var options = multiselect.options;\n    for (var i = 0; i < options.length; i++) {\n      var opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length) values = undefined; //not allow []\n    return values;\n  };\n  var onChange = function onChange(e) {\n    return setValue(getMultiSelectValues(e.target));\n  };\n  return /*#__PURE__*/React.createElement(\"select\", _extends({\n    multiple: true,\n    onChange: onChange,\n    value: value,\n    disabled: readonly\n  }, omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])), renderOptions());\n});"]},"metadata":{},"sourceType":"module"}