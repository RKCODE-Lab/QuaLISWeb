{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\components\\\\BarcodeGeneratorComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport Barcode from 'react-barcode'; // import { intl } from './App';\n\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { faPrint } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // import ReactToPrint from 'react-to-print';\n// import { toast } from 'react-toastify';\n\nclass BarcodeGeneratorComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePrintButtonClick = () => {\n      console.log('Print button clicked!');\n      const content = this.printRef.current.innerHTML;\n      const printWindow = window.open('', '_blank');\n      printWindow.document.open();\n      printWindow.document.write('<html><head><title>Print Barcode</title><style>@media print { body { font-size: 45px; font-weight: bold; } }</style></head><body>' + this.props.additionalDesignsToPrint + '<br>' + content + '</body></html>');\n      printWindow.document.close();\n      printWindow.print();\n      printWindow.close();\n    };\n\n    this.printRef = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"barcode-print-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.printRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Barcode, {\n      value: this.props.barcodeData,\n      format: this.props.format,\n      width: this.props.width,\n      height: this.props.height,\n      background: this.props.background,\n      ref: event => this.componentRef = event,\n      textAlign: this.props.textAlign,\n      fontSize: this.props.fontSize,\n      fontOption: this.props.fontOption,\n      textPosition: this.props.textPosition,\n      margin: this.props.margin,\n      marginTop: this.props.marginTop,\n      marginBottom: this.props.marginBottom,\n      marginLeft: this.props.marginLeft,\n      marginRight: this.props.marginRight,\n      flat: this.props.flat,\n      lineColor: this.props.lineColor,\n      displayValue: this.props.displayValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    })), this.props.printBarcode && /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: this.handlePrintButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPrint,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PRINT\",\n      defaultMessage: \"Print\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    })));\n  }\n\n}\n\nexport default injectIntl(BarcodeGeneratorComponent);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/components/BarcodeGeneratorComponent.jsx"],"names":["React","Component","Button","Barcode","injectIntl","FormattedMessage","faPrint","FontAwesomeIcon","BarcodeGeneratorComponent","constructor","props","handlePrintButtonClick","console","log","content","printRef","current","innerHTML","printWindow","window","open","document","write","additionalDesignsToPrint","close","print","createRef","render","barcodeData","format","width","height","background","event","componentRef","textAlign","fontSize","fontOption","textPosition","margin","marginTop","marginBottom","marginLeft","marginRight","flat","lineColor","displayValue","printBarcode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nimport Barcode from 'react-barcode';\r\n// import { intl } from './App';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { faPrint } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import ReactToPrint from 'react-to-print';\r\n// import { toast } from 'react-toastify';\r\n\r\nclass BarcodeGeneratorComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.printRef = React.createRef();\r\n    }\r\n\r\n\r\n    handlePrintButtonClick = () => {\r\n        console.log('Print button clicked!');\r\n        const content = this.printRef.current.innerHTML;\r\n        const printWindow = window.open('', '_blank');\r\n        printWindow.document.open();\r\n        printWindow.document.write('<html><head><title>Print Barcode</title><style>@media print { body { font-size: 45px; font-weight: bold; } }</style></head><body>' + this.props.additionalDesignsToPrint\r\n            + '<br>'+ content + '</body></html>');\r\n        printWindow.document.close();\r\n        printWindow.print();\r\n        printWindow.close();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"barcode-print-container\">\r\n                <div ref={this.printRef}>\r\n                    <Barcode\r\n                        value={this.props.barcodeData}\r\n                        format={this.props.format}\r\n                        width={this.props.width}\r\n                        height={this.props.height}\r\n                        background={this.props.background}\r\n                        ref={(event) => (this.componentRef = event)}\r\n                        textAlign={this.props.textAlign}\r\n                        fontSize={this.props.fontSize}\r\n                        fontOption={this.props.fontOption}\r\n                        textPosition={this.props.textPosition}\r\n                        margin={this.props.margin}\r\n                        marginTop={this.props.marginTop}\r\n                        marginBottom={this.props.marginBottom}\r\n                        marginLeft={this.props.marginLeft}\r\n                        marginRight={this.props.marginRight}\r\n                        flat={this.props.flat}\r\n                        lineColor={this.props.lineColor}\r\n                        displayValue={this.props.displayValue}\r\n                    />\r\n                </div>\r\n                {this.props.printBarcode &&\r\n                    <Button className=\"btn-user btn-primary-blue\" onClick={this.handlePrintButtonClick}>\r\n                        <FontAwesomeIcon icon={faPrint} /> { }\r\n                        <FormattedMessage id='IDS_PRINT' defaultMessage='Print' />\r\n                    </Button>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectIntl(BarcodeGeneratorComponent);"]},"metadata":{},"sourceType":"module"}