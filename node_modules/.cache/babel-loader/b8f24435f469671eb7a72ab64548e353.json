{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import DropZone from'../../components/dropzone/dropzone.component';import{Row,Col,Form}from'react-bootstrap';import FormMultiSelect from'../../components/form-multi-select/form-multi-select.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{formCode,transactionStatus}from'../../components/Enumeration';import CustomSwitch from'../../components/custom-switch/custom-switch.component';var AddImportFileData=function AddImportFileData(props){var _props$selectedRecord=props.selectedRecord,importTest=_props$selectedRecord.importTest,disabled=_props$selectedRecord.disabled;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DropZone,{name:\"sfilename\",label:props.intl.formatMessage({id:\"IDS_FILENAME\"}),isMandatory:true,maxFiles:\"1\",minSize:0,maxSize:props.maxSize,accept:\".xlsx, .xls\",onDrop:function onDrop(event){return props.onDropFile(event,\"sfilename\",\"1\");},actionType:props.actionType,deleteAttachment:props.deleteAttachment,multiple:props.multiple,editFiles:props.selectedRecord?props.selectedRecord:{},attachmentTypeCode:props.editFiles&&props.editFiles.nattachmenttypecode,fileSizeName:\"nfilesize\",fileName:\"sfilename\"// disabled={disabled}\n})),/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_IMPORTWITHSPECSALLTEST\"}),type:\"switch\",name:\"importTest\",onChange:function onChange(event){return props.onInputOnChange(event,'','');},placeholder:props.intl.formatMessage({id:\"IDS_IMPORTWITHSPECSALLTEST\"}),defaultValue:props.selectedRecord?props.selectedRecord[\"importTest\"]===transactionStatus.YES?true:false:\"\",isMandatory:false,required:false,checked:props.selectedRecord?props.selectedRecord[\"importTest\"]===transactionStatus.YES?true:false:false//disabled={props.specBasedComponent && props.specBasedComponent === true ? true : false }\n})),/*#__PURE__*/React.createElement(Col,{md:\"12\"},props.specBasedComponent!==true&&props.selectedRecord.importTest===transactionStatus.NO&&/*#__PURE__*/React.createElement(FormMultiSelect,{name:\"ntestgrouptestcode\",label:props.intl.formatMessage({id:\"IDS_TESTNAME\"}),options:props.TestCombined||[],optionId:\"ntestgrouptestcode\",optionValue:\"stestsynonym\",value:props.selectedTestData&&props.selectedTestData[\"ntestgrouptestcode\"]?props.selectedTestData[\"ntestgrouptestcode\"]:[],isMandatory:props.hasTest?true:false,isClearable:true,disableSearch:false,disabled:false,closeMenuOnSelect:false,alphabeticalSort:true,onChange:function onChange(event){return props.TestChange(event,\"ntestgrouptestcode\");}})));};export default injectIntl(AddImportFileData);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/registration/AddImportFileData.jsx"],"names":["React","injectIntl","DropZone","Row","Col","Form","FormMultiSelect","FormSelectSearch","formCode","transactionStatus","CustomSwitch","AddImportFileData","props","selectedRecord","importTest","disabled","intl","formatMessage","id","maxSize","event","onDropFile","actionType","deleteAttachment","multiple","editFiles","nattachmenttypecode","onInputOnChange","YES","specBasedComponent","NO","TestCombined","selectedTestData","hasTest","TestChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nimport { Row, Col,Form } from 'react-bootstrap';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { formCode, transactionStatus } from '../../components/Enumeration';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nconst AddImportFileData = props => {\r\n    const {  importTest,disabled } = props.selectedRecord;\r\n\r\n    return (\r\n        <Row>\r\n            <Col md=\"12\">\r\n                    <DropZone\r\n                        name={\"sfilename\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                        isMandatory={true}\r\n                        maxFiles={\"1\"}\r\n                        minSize={0}\r\n                        maxSize={props.maxSize}\r\n                        accept={\".xlsx, .xls\"}\r\n                        onDrop={(event) => props.onDropFile(event, \"sfilename\", \"1\")}\r\n                        actionType={props.actionType}\r\n                        deleteAttachment={props.deleteAttachment}\r\n                        multiple={props.multiple}\r\n                        editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                        attachmentTypeCode={props.editFiles && props.editFiles.nattachmenttypecode}\r\n                        fileSizeName=\"nfilesize\"\r\n                        fileName=\"sfilename\"\r\n                       // disabled={disabled}\r\n                    />\r\n            </Col>\r\n\r\n            {/* ALPD-3596 Start */}\r\n            <Col md=\"12\">\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_IMPORTWITHSPECSALLTEST\" })}\r\n                            type=\"switch\"\r\n                            name={\"importTest\"}\r\n                            onChange={(event) => props.onInputOnChange(event,'','')}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_IMPORTWITHSPECSALLTEST\" })}\r\n                            defaultValue={props.selectedRecord ? props.selectedRecord[\"importTest\"] === transactionStatus.YES ? true : false : \"\"}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                           checked={props.selectedRecord ? props.selectedRecord[\"importTest\"] === transactionStatus.YES ? true : false : false}\r\n                           //disabled={props.specBasedComponent && props.specBasedComponent === true ? true : false }\r\n\r\n                        />\r\n            </Col>\r\n            <Col md=\"12\">\r\n            {props.specBasedComponent!==true && props.selectedRecord.importTest === transactionStatus.NO &&\r\n                    <FormMultiSelect\r\n                        name={\"ntestgrouptestcode\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                        options={props.TestCombined || []}\r\n                        optionId={\"ntestgrouptestcode\"}\r\n                        optionValue=\"stestsynonym\"\r\n                        value={props.selectedTestData && props.selectedTestData[\"ntestgrouptestcode\"] ?\r\n                            props.selectedTestData[\"ntestgrouptestcode\"] : []}\r\n                        isMandatory={props.hasTest ? true : false}\r\n                        isClearable={true}\r\n                        disableSearch={false}\r\n                        disabled={false}\r\n                        closeMenuOnSelect={false}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => props.TestChange(event, \"ntestgrouptestcode\")}\r\n\r\n                    />\r\n                }\r\n            </Col>\r\n            {/* ALPD-3596 End */}\r\n\r\n           \r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddImportFileData);\r\n\r\n"]},"metadata":{},"sourceType":"module"}