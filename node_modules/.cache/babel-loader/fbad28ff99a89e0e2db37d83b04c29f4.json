{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{transactionStatus}from'../../components/Enumeration';var AddCompletionDate=function AddCompletionDate(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:props.userInfo.istimezoneshow===transactionStatus.YES?6:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"drfwdate\",label:props.intl.formatMessage({id:\"IDS_PROJECTCOMPLETIONDATE\"}),className:\"form-control\",placeholderText:props.intl.formatMessage({id:\"IDS_SELECTDATE\"}),selected:props.selectedRecord[\"dprojectcompletiondate\"]//    dateFormat={props.userInfo.ssitedate}\n,dateFormat:props.userInfo?props.userInfo.ssitedate||[]:[],timeInputLabel:props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:false,isClearable:false,isMandatory:true,required:true,value:props.selectedRecord[\"dprojectcompletiondate\"]//maxDate={props.currentTime}\n// maxTime={props.currentTime}\n,onChange:function onChange(date){return props.handleDateChange(\"dprojectcompletiondate\",date);}})),props.userInfo.istimezoneshow===transactionStatus.YES&&/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntzprojectcompletiondate\",formLabel:props.intl.formatMessage({id:\"IDS_TIMEZONE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.TimeZoneList// optionId=\"ntimezonecode\"\n// optionValue=\"stimezoneid\"\n,value:props.selectedRecord[\"ntzprojectcompletiondate\"],defaultValue:props.selectedRecord[\"ntzprojectcompletiondate\"],isMandatory:false,isMulti:false,isSearchable:true// isClearable={false}                               \n,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'ntzprojectcompletiondate',1);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_REMARKS\"}),name:\"scompletionremarks\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_REMARKS\"}),value:props.selectedRecord?props.selectedRecord[\"scompletionremarks\"]:\"\",rows:\"2\",isMandatory:false,required:false,maxLength:\"255\"})));};export default injectIntl(AddCompletionDate);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/project/AddCompletionDate.jsx"],"names":["React","injectIntl","Row","Col","DateTimePicker","FormTextarea","FormSelectSearch","transactionStatus","AddCompletionDate","props","userInfo","istimezoneshow","YES","intl","formatMessage","id","selectedRecord","ssitedate","date","handleDateChange","TimeZoneList","event","onComboChange","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst AddCompletionDate = (props) => {\r\n    return (\r\n        <Row>\r\n                \r\n            <Col md={props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12}>\r\n            <DateTimePicker\r\n                            name={\"drfwdate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_PROJECTCOMPLETIONDATE\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord[\"dprojectcompletiondate\"]}\r\n                            //    dateFormat={props.userInfo.ssitedate}\r\n                            dateFormat={props.userInfo ? props.userInfo.ssitedate || [] : []}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            isClearable={false}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            value={props.selectedRecord[\"dprojectcompletiondate\"]}\r\n\r\n                            //maxDate={props.currentTime}\r\n                           // maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"dprojectcompletiondate\", date)}/>\r\n            </Col>\r\n\r\n            {props.userInfo.istimezoneshow  === transactionStatus.YES &&\r\n                <Col md={6}>\r\n                    <FormSelectSearch\r\n                        name={\"ntzprojectcompletiondate\"}\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={props.TimeZoneList}\r\n                        // optionId=\"ntimezonecode\"\r\n                        // optionValue=\"stimezoneid\"\r\n                        value={props.selectedRecord[\"ntzprojectcompletiondate\"]}\r\n                        defaultValue={props.selectedRecord[\"ntzprojectcompletiondate\"]}\r\n                        isMandatory={false}\r\n                        isMulti={false}\r\n                        isSearchable={true}\r\n                        // isClearable={false}                               \r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => props.onComboChange(event, 'ntzprojectcompletiondate', 1)}\r\n                    />\r\n\r\n                </Col>\r\n            }\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                    name={\"scompletionremarks\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"scompletionremarks\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={\"255\"}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddCompletionDate);"]},"metadata":{},"sourceType":"module"}