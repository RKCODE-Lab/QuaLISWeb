{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\dashboardtypes\\\\DashBoard.jsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { updateStore } from '../../actions';\nimport HomeDashBoard from \"./HomeDashBoard\";\nimport StaticHomeDashBoard from './StaticHomeDashBoard';\nimport { injectIntl } from \"react-intl\";\nimport { ListWrapper } from \"../../components/client-group.styles\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass DashBoard extends React.Component {\n  constructor(Props) {\n    super(Props);\n\n    this.toggleSilde = () => {\n      this.setState({\n        SliderOpen: !this.state.SliderOpen,\n        loader: !this.state.loader\n      });\n    };\n\n    this.getPreviousPage = () => {\n      if (this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length > 0) {\n        let initialPage = Object.keys(this.props.Login.homeDashBoard)[0];\n\n        if (this.props.Login.masterDataStatic && Object.values(this.props.Login.masterDataStatic).length > 0) {\n          initialPage = -1;\n        }\n\n        console.log(\"initial page:\", initialPage, this.props.Login.currentPageNo);\n\n        if (this.props.Login.currentPageNo > initialPage) {\n          const currentPageNo = this.props.Login.currentPageNo - 1;\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              currentPageNo\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      }\n    };\n\n    this.getNextPage = () => {\n      if (this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length - 1 > this.props.Login.currentPageNo) {\n        const currentPageNo = this.props.Login.currentPageNo + 1;\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            currentPageNo\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.state = { ...Props,\n      SliderOpen: false,\n      loader: false\n    };\n  }\n\n  render() {\n    let initialPage = this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length > 0 && Object.keys(this.props.Login.homeDashBoard)[0];\n\n    if (this.props.Login.masterDataStatic && Object.values(this.props.Login.masterDataStatic).length > 0) {\n      initialPage = -1;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, this.props.Login.currentPageNo === -1 && this.props.Login.masterDataStatic && Object.values(this.props.Login.masterDataStatic).length > 0 ? /*#__PURE__*/React.createElement(StaticHomeDashBoard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(HomeDashBoard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 27\n      }\n    }), this.props.Login.currentPageNo > initialPage ? /*#__PURE__*/React.createElement(\"a\", {\n      href: () => false,\n      class: \"left-arrow\",\n      onClick: this.getPreviousPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null), this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length > 0 && this.props.Login.homeDashBoard.length - 1 !== this.props.Login.currentPageNo ? /*#__PURE__*/React.createElement(\"a\", {\n      href: () => false,\n      class: \"right-arrow\",\n      onClick: this.getNextPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n  } // componentDidMount() {\n  //   const thisBoundedIncrementer = this.getListAlert1.bind(this);\n  //   setInterval(thisBoundedIncrementer, 100000);\n  // }\n\n\n}\n\nexport default connect(mapStateToProps, {\n  updateStore\n})(injectIntl(DashBoard));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/dashboardtypes/DashBoard.jsx"],"names":["React","FontAwesomeIcon","faArrowLeft","faArrowRight","connect","DEFAULT_RETURN","updateStore","HomeDashBoard","StaticHomeDashBoard","injectIntl","ListWrapper","mapStateToProps","state","Login","DashBoard","Component","constructor","Props","toggleSilde","setState","SliderOpen","loader","getPreviousPage","props","homeDashBoard","length","initialPage","Object","keys","masterDataStatic","values","console","log","currentPageNo","updateInfo","typeName","data","getNextPage","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { updateStore } from '../../actions';\r\nimport HomeDashBoard from \"./HomeDashBoard\";\r\nimport StaticHomeDashBoard from './StaticHomeDashBoard';\r\nimport { injectIntl } from \"react-intl\";\r\nimport { ListWrapper } from \"../../components/client-group.styles\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass DashBoard extends React.Component {\r\n    constructor(Props) {\r\n        super(Props);\r\n        this.state = { ...Props, SliderOpen: false, loader: false }\r\n    }\r\n\r\n    toggleSilde = () => {\r\n        this.setState({ SliderOpen: !this.state.SliderOpen, loader: !this.state.loader })\r\n    }\r\n    render() {\r\n        let initialPage = this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length > 0\r\n            && Object.keys(this.props.Login.homeDashBoard)[0];\r\n        if (this.props.Login.masterDataStatic && Object.values(this.props.Login.masterDataStatic).length > 0) {\r\n            initialPage = -1;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\">\r\n                    {/* <div className=\"modal-inner-content\"> */}\r\n                    {this.props.Login.currentPageNo === -1\r\n                        && (this.props.Login.masterDataStatic && Object.values(this.props.Login.masterDataStatic).length > 0)\r\n                        ? <StaticHomeDashBoard />\r\n                        : <HomeDashBoard />\r\n                    }\r\n\r\n\r\n                    {this.props.Login.currentPageNo > initialPage ?\r\n                        <a href={() => false} class=\"left-arrow\" onClick={this.getPreviousPage}>\r\n                            <FontAwesomeIcon icon={faArrowLeft} />\r\n                        </a>\r\n                        :\r\n                        <></>\r\n                    }\r\n                    {this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length > 0\r\n                        && (this.props.Login.homeDashBoard.length - 1) !== this.props.Login.currentPageNo\r\n                        ?\r\n                        <a href={() => false} class=\"right-arrow\" onClick={this.getNextPage}>\r\n                            <FontAwesomeIcon icon={faArrowRight} />\r\n                        </a>\r\n                        :\r\n                        <></>\r\n                    }\r\n                    {/* </div> */}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    getPreviousPage = () => {\r\n        if (this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length > 0) {\r\n            let initialPage = Object.keys(this.props.Login.homeDashBoard)[0];\r\n            if (this.props.Login.masterDataStatic && Object.values(this.props.Login.masterDataStatic).length > 0) {\r\n                initialPage = -1;\r\n            }\r\n            console.log(\"initial page:\", initialPage, this.props.Login.currentPageNo);\r\n            if (this.props.Login.currentPageNo > initialPage) {\r\n                const currentPageNo = this.props.Login.currentPageNo - 1;\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { currentPageNo }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n    }\r\n\r\n    getNextPage = () => {\r\n        if (this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length - 1 > this.props.Login.currentPageNo) {\r\n            const currentPageNo = this.props.Login.currentPageNo + 1;\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { currentPageNo }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //   const thisBoundedIncrementer = this.getListAlert1.bind(this);\r\n    //   setInterval(thisBoundedIncrementer, 100000);\r\n    // }\r\n\r\n}\r\nexport default connect(mapStateToProps, { updateStore })(injectIntl(DashBoard));\r\n\r\n"]},"metadata":{},"sourceType":"module"}