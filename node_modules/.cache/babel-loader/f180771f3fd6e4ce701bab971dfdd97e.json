{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\audittrail\\\\EsignStateHandle.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { TagLine } from \"../../components/login/login.styles\";\nimport { transactionStatus } from '../../components/Enumeration';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass EsignStateHandle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      this.setState({\n        selectedRecord\n      });\n      this.props.childDataChange(selectedRecord);\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = this.state.selectedRecord;\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n      this.props.childDataChange(selectedRecord);\n    };\n\n    this.state = {\n      selectedRecord: { ...this.props.selectedRecord,\n        'esignpassword': \"\",\n        'esigncomments': \"\",\n        'esignreason': \"\"\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"sloginid\",\n      type: \"text\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_LOGINID\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_LOGINID\"\n      }),\n      defaultValue: this.props.inputParam && this.props.inputParam.inputData && (this.props.inputParam.inputData.userinfo[\"sdeputyid\"] || \"\"),\n      isMandatory: false,\n      required: false,\n      maxLength: 20,\n      readOnly: true,\n      onChange: event => this.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"esignpassword\",\n      type: \"password\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_PASSWORD\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_PASSWORD\"\n      }),\n      isMandatory: true,\n      required: true,\n      maxLength: 50,\n      onChange: event => this.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"esignreason\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REASON\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props.Login.esignReasonList || [] // value = {this.props.selectedRecord[\"esignreason\"] ? this.props.selectedRecord[\"esignreason\"] : \"\"}\n      ,\n      isMandatory: true,\n      isMulti: false,\n      isClearable: false,\n      isSearchable: true,\n      isDisabled: false,\n      closeMenuOnSelect: true,\n      onChange: event => this.onComboChange(event, \"esignreason\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormTextarea, {\n      name: \"esigncomments\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_COMMENTS\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_COMMENTS\"\n      }),\n      rows: \"2\",\n      isMandatory: true,\n      required: true,\n      maxLength: 255,\n      onChange: event => this.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"esigndate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_ESIGNDATE\"\n      }),\n      className: \"form-control\",\n      placeholderText: \"Select date..\",\n      selected: this.props.Login.serverTime,\n      dateFormat: this.props.Login.userInfo.ssitedatetime,\n      isClearable: false,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TagLine, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ELECTRONICSIGN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 86\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ESIGNTEXT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(CustomSwitch, {\n      name: \"agree\",\n      type: \"switch\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_AGREE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_AGREE\"\n      }) // defaultValue ={ this.props.selectedRecord[\"agree\"] === transactionStatus.NO ? false :true }\n      ,\n      isMandatory: true,\n      required: true,\n      checked: this.state.selectedRecord && this.state.selectedRecord.agree ? this.state.selectedRecord.agree === transactionStatus.YES ? true : false : true,\n      onChange: event => this.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  componentWillUnmount() {\n    let selectedRecord = this.state.selectedRecord;\n    delete selectedRecord['esignpassword'];\n    delete selectedRecord['esigncomments'];\n    delete selectedRecord['esignreason'];\n    delete selectedRecord['agree'];\n    this.setState({\n      selectedRecord\n    });\n    this.props.childDataChange(selectedRecord);\n  }\n\n}\n\nexport default connect(mapStateToProps, {})(injectIntl(EsignStateHandle));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/audittrail/EsignStateHandle.jsx"],"names":["React","connect","Row","Col","FormInput","FormTextarea","CustomSwitch","FormattedMessage","injectIntl","DateTimePicker","TagLine","transactionStatus","FormSelectSearch","mapStateToProps","state","Login","EsignStateHandle","Component","constructor","props","onComboChange","comboData","fieldName","selectedRecord","setState","childDataChange","onInputOnChange","event","target","type","name","checked","YES","NO","value","render","intl","formatMessage","id","inputParam","inputData","userinfo","esignReasonList","serverTime","userInfo","ssitedatetime","agree","componentWillUnmount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { TagLine } from \"../../components/login/login.styles\";\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass EsignStateHandle extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedRecord: {\r\n                ...this.props.selectedRecord,\r\n                'esignpassword': \"\",\r\n                'esigncomments': \"\",\r\n                'esignreason': \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Row>\r\n                <Col md={12}>\r\n                    <FormInput\r\n                        name={\"sloginid\"}\r\n                        type=\"text\"\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_LOGINID\" })}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_LOGINID\" })}\r\n                        defaultValue={this.props.inputParam && this.props.inputParam.inputData\r\n                            && (this.props.inputParam.inputData.userinfo[\"sdeputyid\"] || \"\")}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={20}\r\n                        readOnly={true}\r\n                        onChange={(event) => this.onInputOnChange(event)}\r\n                    />\r\n\r\n                    <FormInput\r\n                        name={\"esignpassword\"}\r\n                        type=\"password\"\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_PASSWORD\" })}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_PASSWORD\" })}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={50}\r\n                        onChange={(event) => this.onInputOnChange(event)}\r\n                    />\r\n\r\n                    <FormSelectSearch\r\n                        name={\"esignreason\"}\r\n                        formLabel={this.props.intl.formatMessage({ id: \"IDS_REASON\" })}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={this.props.Login.esignReasonList || []}\r\n                        // value = {this.props.selectedRecord[\"esignreason\"] ? this.props.selectedRecord[\"esignreason\"] : \"\"}\r\n                        isMandatory={true}\r\n                        isMulti={false}\r\n                        isClearable={false}\r\n                        isSearchable={true}\r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        onChange={(event) => this.onComboChange(event, \"esignreason\")}\r\n                    />\r\n\r\n                    <FormTextarea\r\n                        name={\"esigncomments\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        rows=\"2\"\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={255}\r\n                        onChange={(event) => this.onInputOnChange(event)}\r\n                    />\r\n\r\n                    <DateTimePicker\r\n                        name={\"esigndate\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_ESIGNDATE\" })}\r\n                        className='form-control'\r\n                        placeholderText=\"Select date..\"\r\n                        selected={this.props.Login.serverTime}\r\n                        dateFormat={this.props.Login.userInfo.ssitedatetime}\r\n                        isClearable={false}\r\n                        readOnly={true}\r\n                    />\r\n\r\n                    <TagLine>\r\n                        <FormattedMessage id=\"IDS_ELECTRONICSIGN\"></FormattedMessage><br />\r\n                        <FormattedMessage id=\"IDS_ESIGNTEXT\"></FormattedMessage>\r\n                    </TagLine>\r\n\r\n                    <CustomSwitch\r\n                        name={\"agree\"}\r\n                        type=\"switch\"\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_AGREE\" })}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_AGREE\" })}\r\n                        // defaultValue ={ this.props.selectedRecord[\"agree\"] === transactionStatus.NO ? false :true }\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        checked={this.state.selectedRecord && this.state.selectedRecord.agree ? this.state.selectedRecord.agree === transactionStatus.YES ? true : false : true}\r\n                        onChange={(event) => this.onInputOnChange(event)}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        delete (selectedRecord['esignpassword'])\r\n        delete (selectedRecord['esigncomments'])\r\n        delete (selectedRecord['esignreason'])\r\n        delete (selectedRecord['agree'])\r\n        this.setState({ selectedRecord });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(injectIntl(EsignStateHandle));"]},"metadata":{},"sourceType":"module"}