{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{process}from'@progress/kendo-data-query';import React from'react';import{Col,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import DataGrid from'../../components/data-grid/data-grid.component';var TestWiseMyJobsSampleInfoGrid=/*#__PURE__*/function(_React$Component){_inherits(TestWiseMyJobsSampleInfoGrid,_React$Component);var _super=_createSuper(TestWiseMyJobsSampleInfoGrid);function TestWiseMyJobsSampleInfoGrid(){_classCallCheck(this,TestWiseMyJobsSampleInfoGrid);return _super.apply(this,arguments);}_createClass(TestWiseMyJobsSampleInfoGrid,[{key:\"render\",value:function render(){var sample=this.props.selectedSample;var data=sample&&sample.filter(function(person,index){return index===sample.findIndex(function(other){return person.npreregno===other.npreregno;});});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{noGutters:\"true\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"npreregno\",data:this.props.selectedSample//dataResult={process(this.props.selectedSample||[],this.props.dataState)}\n,dataResult:process(data||[],this.props.dataState),dataState:this.props.dataState,dataStateChange:this.props.dataStateChange,expandField:\"expanded\",detailedFieldList:this.props.detailedFieldList,extractedColumnList:this.props.extractedColumnList,userInfo:this.props.userInfo,controlMap:new Map(),userRoleControlRights:{},inputParam:this.props.inputParam,pageable:true,isActionRequired:false,isToolBarRequired:false,scrollable:\"scrollable\",gridHeight:\"500px\",jsonField:this.props.jsonField}))));}}]);return TestWiseMyJobsSampleInfoGrid;}(React.Component);export default injectIntl(TestWiseMyJobsSampleInfoGrid);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/myjobs/TestWiseMyJobsSampleInfoGrid.jsx"],"names":["process","React","Col","Row","injectIntl","DataGrid","TestWiseMyJobsSampleInfoGrid","sample","props","selectedSample","data","filter","person","index","findIndex","other","npreregno","dataState","dataStateChange","detailedFieldList","extractedColumnList","userInfo","Map","inputParam","jsonField","Component"],"mappings":"wnBAAA,OAASA,OAAT,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gDAArB,C,GACMC,CAAAA,4B,uVAGF,iBAAQ,CACJ,GAAIC,CAAAA,MAAM,CAAG,KAAKC,KAAL,CAAWC,cAAxB,CAEA,GAAIC,CAAAA,IAAI,CAAGH,MAAM,EAAIA,MAAM,CAACI,MAAP,CACjB,SAACC,MAAD,CAASC,KAAT,QAAmBA,CAAAA,KAAK,GAAKN,MAAM,CAACO,SAAP,CAC3B,SAAAC,KAAK,QAAIH,CAAAA,MAAM,CAACI,SAAP,GAAqBD,KAAK,CAACC,SAA/B,EADsB,CAA7B,EADiB,CAArB,CAKA,mBACI,qDACA,oBAAC,GAAD,EAAK,SAAS,CAAE,MAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,QAAD,EACI,eAAe,CAAE,WADrB,CAEI,IAAI,CAAE,KAAKR,KAAL,CAAWC,cACjB;AAHJ,CAII,UAAU,CAAET,OAAO,CAACU,IAAI,EAAE,EAAP,CAAU,KAAKF,KAAL,CAAWS,SAArB,CAJvB,CAKI,SAAS,CAAE,KAAKT,KAAL,CAAWS,SAL1B,CAMI,eAAe,CAAE,KAAKT,KAAL,CAAWU,eANhC,CAOI,WAAW,CAAC,UAPhB,CAQI,iBAAiB,CAAE,KAAKV,KAAL,CAAWW,iBARlC,CASI,mBAAmB,CAAE,KAAKX,KAAL,CAAWY,mBATpC,CAUI,QAAQ,CAAE,KAAKZ,KAAL,CAAWa,QAVzB,CAWI,UAAU,CAAE,GAAIC,CAAAA,GAAJ,EAXhB,CAYI,qBAAqB,CAAE,EAZ3B,CAaI,UAAU,CAAE,KAAKd,KAAL,CAAWe,UAb3B,CAcI,QAAQ,CAAE,IAdd,CAeI,gBAAgB,CAAE,KAftB,CAgBI,iBAAiB,CAAE,KAhBvB,CAiBI,UAAU,CAAE,YAjBhB,CAkBI,UAAU,CAAE,OAlBhB,CAmBI,SAAS,CAAE,KAAKf,KAAL,CAAWgB,SAnB1B,EADJ,CADJ,CADA,CADJ,CA6BH,C,0CAxCsCvB,KAAK,CAACwB,S,EA0CjD,cAAerB,CAAAA,UAAU,CAACE,4BAAD,CAAzB","sourcesContent":["import { process } from '@progress/kendo-data-query';\r\nimport React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nclass TestWiseMyJobsSampleInfoGrid extends React.Component{\r\n   \r\n\r\n    render(){\r\n        let sample = this.props.selectedSample;\r\n\r\n        let data = sample && sample.filter(\r\n            (person, index) => index === sample.findIndex(\r\n              other => person.npreregno === other.npreregno\r\n              \r\n            ));\r\n        return(\r\n            <>\r\n            <Row noGutters={\"true\"}>\r\n                <Col md={12}>\r\n                    <DataGrid\r\n                        primaryKeyField={\"npreregno\"}\r\n                        data={this.props.selectedSample}\r\n                        //dataResult={process(this.props.selectedSample||[],this.props.dataState)}\r\n                        dataResult={process(data||[],this.props.dataState)}\r\n                        dataState={this.props.dataState}\r\n                        dataStateChange={this.props.dataStateChange}\r\n                        expandField=\"expanded\"\r\n                        detailedFieldList={this.props.detailedFieldList}\r\n                        extractedColumnList={this.props.extractedColumnList}\r\n                        userInfo={this.props.userInfo}\r\n                        controlMap={new Map()}\r\n                        userRoleControlRights={{}}\r\n                        inputParam={this.props.inputParam}\r\n                        pageable={true}\r\n                        isActionRequired={false}\r\n                        isToolBarRequired={false}\r\n                        scrollable={\"scrollable\"}\r\n                        gridHeight={\"500px\"}\r\n                        jsonField={this.props.jsonField}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(TestWiseMyJobsSampleInfoGrid);"]},"metadata":{},"sourceType":"module"}