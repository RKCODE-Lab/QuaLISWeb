{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\components\\\\droparea\\\\Dynamicinputs.jsx\";\nimport React, { useState, useCallback } from \"react\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport DropArea from \"./DropArea.jsx\";\nimport TrashDropZone from \"./TrashDropZone\";\nimport SideBarItem from \"./SideBarItem\";\nimport DynamicRow from \"./Row\";\nimport { handleMoveWithinParent, handleMoveToDifferentParent, handleMoveSidebarComponentIntoParent, handleRemoveItemFromLayout } from \"./helpers\";\nimport { AtAccordion } from '../custom-accordion/custom-accordion.styles';\nimport { SIDEBAR_ITEM, COMPONENT, COLUMN, COMPONENTROW } from \"./constants\";\nimport \"./styles.css\";\nimport { Col, Row, Accordion, Card, useAccordionToggle, AccordionContext } from \"react-bootstrap\";\nimport DynamicFieldProperties from \"./DynamicFieldProperties.jsx\";\nimport { injectIntl } from \"react-intl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\nimport shortid from \"shortid\"; // import Component from \"./Component.jsx\";\n\nconst Dynamicinput = props => {\n  const handleDropToTrashBin = useCallback((dropZone, item) => {\n    const splitItemPath = item.path.split(\"-\");\n    props.validateDelete(handleRemoveItemFromLayout(props.layout, splitItemPath), item.path, true);\n  }, [props.layout]);\n  const handleDrop = useCallback((dropZone, item) => {\n    const splitDropZonePath = dropZone.path.split(\"-\");\n    const pathToDropZone = splitDropZonePath.slice(0, -1).join(\"-\");\n    let newItem = {\n      id: item.id,\n      type: item.type\n    };\n\n    if (item.type === COLUMN) {\n      newItem.children = item.children;\n    }\n\n    if (item.type === COMPONENTROW) {\n      newItem = { ...item.data,\n        ...newItem\n      };\n    }\n\n    if (item.type === COMPONENT) {\n      newItem = { ...item.data,\n        type: item.type\n      };\n    } // sidebar into\n\n\n    if (item.type === SIDEBAR_ITEM) {\n      // 1. Move sidebar item into page\n      const newComponent = {\n        id: shortid.generate(),\n        ...item.component\n      };\n      const newItem = {\n        id: newComponent.id,\n        ...item,\n        type: COMPONENT\n      };\n      props.setLayout(handleMoveSidebarComponentIntoParent(props.layout, splitDropZonePath, newItem), dropZone.path);\n      return;\n    } // move down here since sidebar items dont have path\n\n\n    const splitItemPath = item.path.split(\"-\");\n    const pathToItem = splitItemPath.slice(0, -1).join(\"-\"); // 2. Pure move (no create)\n\n    if (splitItemPath.length === splitDropZonePath.length) {\n      // 2.a. move within parent\n      if (pathToItem === pathToDropZone) {\n        props.setLayout(handleMoveWithinParent(props.layout, splitDropZonePath, splitItemPath), dropZone.path);\n        return;\n      } // 2.b. OR move different parent\n      // TODO FIX columns. item includes children\n\n\n      props.setLayout(handleMoveToDifferentParent(props.layout, splitDropZonePath, splitItemPath, newItem), dropZone.path);\n      return;\n    } // 3. Move + Create\n\n\n    props.setLayout(handleMoveToDifferentParent(props.layout, splitDropZonePath, splitItemPath, newItem), dropZone.path);\n  }, [props.layout // components\n  ]);\n\n  const renderRow = (row, currentPath, index) => {\n    return /*#__PURE__*/React.createElement(DynamicRow, {\n      key: row.id,\n      data: row,\n      handleDrop: handleDrop // components={components}\n      ,\n      path: currentPath,\n      index: index,\n      onclickcomponent: props.onclickcomponent,\n      selectedFieldRecord: props.selectedFieldRecord,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const CustomToggle = _ref => {\n    let {\n      children,\n      eventKey\n    } = _ref;\n    const currentEventKey = React.useContext(AccordionContext);\n    const isCurrentEventKey = currentEventKey === eventKey;\n    const decoratedOnClick = useAccordionToggle(eventKey, \"\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      onClick: decoratedOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, children, isCurrentEventKey ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronDown //onClick={children.props.onExpandCall}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    className: \"sideBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AtAccordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    defaultActiveKey: \"InputFields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomToggle, {\n    eventKey: \"InputFields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_INPUTFIELDS\"\n  })))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"InputFields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, Object.values(props.reactComponents).map((sideBarItem, index) => /*#__PURE__*/React.createElement(SideBarItem, {\n    key: sideBarItem.id,\n    data: sideBarItem,\n    displayField: \"componentname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomToggle, {\n    eventKey: \"PredefinedComponents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_COMPONENTS\"\n  })))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"PredefinedComponents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, Object.values(props.reactInputFields).map((sideBarItem, index) => /*#__PURE__*/React.createElement(SideBarItem, {\n    key: sideBarItem.id,\n    data: sideBarItem,\n    displayField: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }))))))))), /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    className: \"pageContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TrashDropZone, {\n    data: props.layout,\n    onDrop: handleDropToTrashBin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    style: {\n      minHeight: \"150px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, props.layout.map((row, index) => {\n    const currentPath = `${index}`;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: row.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DropArea, {\n      data: {\n        path: currentPath,\n        childrenCount: props.layout.length\n      },\n      onDrop: handleDrop,\n      path: currentPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }), renderRow(row, currentPath, index));\n  }), /*#__PURE__*/React.createElement(DropArea, {\n    data: {\n      path: `${props.layout.length}`,\n      childrenCount: props.layout.length\n    },\n    onDrop: handleDrop,\n    isLast: true,\n    isEmpty: props.layout.length ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    className: \"pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fielpropsidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, props.selectedFieldRecord.label ? props.selectedFieldRecord.label : props.selectedFieldRecord.componentname ? props.selectedFieldRecord.componentname : \"\"), /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"pr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DynamicFieldProperties, {\n    onInputOnChange: props.onInputOnChange,\n    onNumericInputChange: props.onNumericInputChange,\n    selectedFieldRecord: props.selectedFieldRecord,\n    tables: props.ReactTables,\n    onComboChange: props.onComboChange,\n    tableColumn: props.tableColumn,\n    inputFields: props.inputFields,\n    addChildMapping: props.addChildMapping,\n    valueMembers: props.valueMembers,\n    addTag: props.addTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default injectIntl(Dynamicinput);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/droparea/Dynamicinputs.jsx"],"names":["React","useState","useCallback","PerfectScrollbar","DropArea","TrashDropZone","SideBarItem","DynamicRow","handleMoveWithinParent","handleMoveToDifferentParent","handleMoveSidebarComponentIntoParent","handleRemoveItemFromLayout","AtAccordion","SIDEBAR_ITEM","COMPONENT","COLUMN","COMPONENTROW","Col","Row","Accordion","Card","useAccordionToggle","AccordionContext","DynamicFieldProperties","injectIntl","FontAwesomeIcon","faChevronDown","faChevronUp","shortid","Dynamicinput","props","handleDropToTrashBin","dropZone","item","splitItemPath","path","split","validateDelete","layout","handleDrop","splitDropZonePath","pathToDropZone","slice","join","newItem","id","type","children","data","newComponent","generate","component","setLayout","pathToItem","length","renderRow","row","currentPath","index","onclickcomponent","selectedFieldRecord","CustomToggle","eventKey","currentEventKey","useContext","isCurrentEventKey","decoratedOnClick","intl","formatMessage","Object","values","reactComponents","map","sideBarItem","reactInputFields","minHeight","childrenCount","textAlign","label","componentname","onInputOnChange","onNumericInputChange","ReactTables","onComboChange","tableColumn","inputFields","addChildMapping","valueMembers","addTag"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport DropArea from \"./DropArea.jsx\";\r\nimport TrashDropZone from \"./TrashDropZone\";\r\nimport SideBarItem from \"./SideBarItem\";\r\nimport DynamicRow from \"./Row\";\r\nimport {\r\n  handleMoveWithinParent,\r\n  handleMoveToDifferentParent,\r\n  handleMoveSidebarComponentIntoParent,\r\n  handleRemoveItemFromLayout\r\n} from \"./helpers\";\r\nimport { AtAccordion } from '../custom-accordion/custom-accordion.styles';\r\nimport { SIDEBAR_ITEM, COMPONENT, COLUMN, COMPONENTROW } from \"./constants\";\r\nimport \"./styles.css\"\r\nimport { Col, Row, Accordion, Card, useAccordionToggle, AccordionContext } from \"react-bootstrap\";\r\nimport DynamicFieldProperties from \"./DynamicFieldProperties.jsx\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport shortid from \"shortid\";\r\n// import Component from \"./Component.jsx\";\r\n\r\nconst Dynamicinput = (props) => {\r\n  const handleDropToTrashBin = useCallback(\r\n    (dropZone, item) => {\r\n      const splitItemPath = item.path.split(\"-\");\r\n      props.validateDelete(handleRemoveItemFromLayout(props.layout, splitItemPath), item.path, true);\r\n    },\r\n    [props.layout]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    (dropZone, item) => {\r\n      const splitDropZonePath = dropZone.path.split(\"-\");\r\n      const pathToDropZone = splitDropZonePath.slice(0, -1).join(\"-\");\r\n\r\n      let newItem = { id: item.id, type: item.type };\r\n      if (item.type === COLUMN) {\r\n        newItem.children = item.children;\r\n      }\r\n      if (item.type === COMPONENTROW) {\r\n        newItem = { ...item.data, ...newItem }\r\n      }\r\n      if (item.type === COMPONENT) {\r\n        newItem = { ...item.data, type: item.type }\r\n      }\r\n      // sidebar into\r\n      if (item.type === SIDEBAR_ITEM) {\r\n        // 1. Move sidebar item into page\r\n        const newComponent = {\r\n          id: shortid.generate(),\r\n          ...item.component\r\n        };\r\n        const newItem = {\r\n          id: newComponent.id,\r\n          ...item,\r\n          type: COMPONENT,\r\n        };\r\n        props.setLayout(\r\n          handleMoveSidebarComponentIntoParent(\r\n            props.layout,\r\n            splitDropZonePath,\r\n            newItem\r\n          ), dropZone.path\r\n        );\r\n        return;\r\n      }\r\n\r\n      // move down here since sidebar items dont have path\r\n      const splitItemPath = item.path.split(\"-\");\r\n      const pathToItem = splitItemPath.slice(0, -1).join(\"-\");\r\n\r\n      // 2. Pure move (no create)\r\n      if (splitItemPath.length === splitDropZonePath.length) {\r\n        // 2.a. move within parent\r\n        if (pathToItem === pathToDropZone) {\r\n          props.setLayout(\r\n            handleMoveWithinParent(props.layout, splitDropZonePath, splitItemPath), dropZone.path\r\n          );\r\n          return;\r\n        }\r\n\r\n        // 2.b. OR move different parent\r\n        // TODO FIX columns. item includes children\r\n        props.setLayout(\r\n          handleMoveToDifferentParent(\r\n            props.layout,\r\n            splitDropZonePath,\r\n            splitItemPath,\r\n            newItem\r\n          ), dropZone.path\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 3. Move + Create\r\n      props.setLayout(\r\n        handleMoveToDifferentParent(\r\n          props.layout,\r\n          splitDropZonePath,\r\n          splitItemPath,\r\n          newItem\r\n        ), dropZone.path\r\n      );\r\n    },\r\n    [props.layout,// components\r\n    ]\r\n  );\r\n\r\n  const renderRow = (row, currentPath, index) => {\r\n    return (\r\n      <DynamicRow\r\n        key={row.id}\r\n        data={row}\r\n        handleDrop={handleDrop}\r\n        // components={components}\r\n        path={currentPath}\r\n        index={index}\r\n        onclickcomponent={props.onclickcomponent}\r\n        selectedFieldRecord={props.selectedFieldRecord}\r\n      />\r\n    );\r\n  };\r\n  const CustomToggle = ({ children, eventKey }) => {\r\n    const currentEventKey = React.useContext(AccordionContext);\r\n    const isCurrentEventKey = currentEventKey === eventKey;\r\n    const decoratedOnClick = useAccordionToggle(eventKey, \"\");\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"d-flex justify-content-between\"\r\n        onClick={decoratedOnClick}>\r\n        {children}\r\n        {isCurrentEventKey ?\r\n          <FontAwesomeIcon icon={faChevronUp} />\r\n          : <FontAwesomeIcon icon={faChevronDown} //onClick={children.props.onExpandCall}\r\n          />}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col md={2} className=\"sideBar\">\r\n        <PerfectScrollbar>\r\n          <AtAccordion>\r\n            <Accordion defaultActiveKey=\"InputFields\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <CustomToggle eventKey={\"InputFields\"}>\r\n                    <Card.Title>\r\n                      {props.intl.formatMessage({ id: \"IDS_INPUTFIELDS\" })}\r\n                    </Card.Title>\r\n                  </CustomToggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey={\"InputFields\"}>\r\n                  <>\r\n                    {\r\n                      Object.values(props.reactComponents).map((sideBarItem, index) => (\r\n                        <SideBarItem key={sideBarItem.id} data={sideBarItem} displayField={\"componentname\"} />\r\n                      ))\r\n                    }\r\n                  </>\r\n                </Accordion.Collapse>\r\n                <Card.Header>\r\n                  <CustomToggle eventKey={\"PredefinedComponents\"}>\r\n                    <Card.Title>\r\n                      {props.intl.formatMessage({ id: \"IDS_COMPONENTS\" })}\r\n                    </Card.Title>\r\n                  </CustomToggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey={\"PredefinedComponents\"}>\r\n                  <>\r\n                    {\r\n                      Object.values(props.reactInputFields).map((sideBarItem, index) => (\r\n                        <SideBarItem key={sideBarItem.id} data={sideBarItem} displayField={\"label\"} />\r\n                      ))\r\n                    }\r\n                  </>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          </AtAccordion>\r\n\r\n        </PerfectScrollbar>\r\n      </Col>\r\n      <Col md={8} className=\"pageContainer\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <TrashDropZone\r\n              data={props.layout}\r\n              onDrop={handleDropToTrashBin}\r\n            />\r\n          </Col>\r\n          <Col md={12}>\r\n            <div className=\"page\" style={{ minHeight: \"150px\" }}>\r\n              {props.layout.map((row, index) => {\r\n                const currentPath = `${index}`;\r\n\r\n                return (\r\n                  <React.Fragment key={row.id}>\r\n                    <DropArea\r\n                      data={{\r\n                        path: currentPath,\r\n                        childrenCount: props.layout.length\r\n                      }}\r\n                      onDrop={handleDrop}\r\n                      path={currentPath}\r\n                    />\r\n                    {renderRow(row, currentPath, index)}\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n              <DropArea\r\n                data={{\r\n                  path: `${props.layout.length}`,\r\n                  childrenCount: props.layout.length\r\n                }}\r\n                onDrop={handleDrop}\r\n                isLast\r\n                isEmpty={props.layout.length ? false : true}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Col>\r\n      <Col md={2} className=\"pl-0\">\r\n        <Card>\r\n          <div className=\"fielpropsidebar\">\r\n            <Card.Title style={{ textAlign: \"center\" }}>\r\n              {props.selectedFieldRecord.label ? props.selectedFieldRecord.label : props.selectedFieldRecord.componentname\r\n                ? props.selectedFieldRecord.componentname : \"\"}\r\n            </Card.Title>\r\n            <Card.Body className=\"pr-2\">\r\n              <DynamicFieldProperties\r\n                onInputOnChange={props.onInputOnChange}\r\n                onNumericInputChange={props.onNumericInputChange}\r\n                selectedFieldRecord={props.selectedFieldRecord}\r\n                tables={props.ReactTables}\r\n                onComboChange={props.onComboChange}\r\n                tableColumn={props.tableColumn}\r\n                inputFields={props.inputFields}\r\n                addChildMapping={props.addChildMapping}\r\n                valueMembers={props.valueMembers}\r\n                addTag={props.addTag}\r\n              />\r\n            </Card.Body>\r\n          </div>\r\n        </Card>\r\n\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(Dynamicinput);\r\n"]},"metadata":{},"sourceType":"module"}