{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\SampleInfoView.jsx\";\nimport React from 'react';\nimport { Card, Row, Col, FormGroup, FormLabel } from 'react-bootstrap';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { ReadOnlyText } from '../../components/App.styles';\nimport { designProperties } from '../../components/Enumeration';\nimport { faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FontIconWrap } from '../../../src/components/data-grid/data-grid.styles';\nimport { dynamicFileDownload } from '../../../src/actions/ServiceAction';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass SampleInfoView extends React.Component {\n  render() {\n    const jsondata = this.props.data;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, this.props.SingleItem && this.props.SingleItem.map((field, index) =>\n    /*#__PURE__*/\n    // ALPD-950\n    React.createElement(Col, {\n      md: this.props.size ? this.props.size : 6,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: field[designProperties.LABEL][this.props.userInfo.slanguagetypecode] || \"-\",\n      message: field[designProperties.LABEL][this.props.userInfo.slanguagetypecode] || \"-\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }\n    }, jsondata[field[designProperties.VALUE]] || \"-\", field && field[3] === 'files' ? /*#__PURE__*/React.createElement(FontIconWrap, {\n      icon: faCloudDownloadAlt,\n      className: \"ml-2 className action-icons-wrap\",\n      size: \"lg\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DOWNLOAD\"\n      }),\n      \"data-place\": \"left\",\n      onClick: () => this.props.dynamicFileDownload({\n        field,\n        ...jsondata,\n        viewName: 'InfoView',\n        userInfo: this.props.userInfo\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCloudDownloadAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 45\n      }\n    })) : \"\")))))));\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  dynamicFileDownload\n})(injectIntl(SampleInfoView));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/approval/SampleInfoView.jsx"],"names":["React","Card","Row","Col","FormGroup","FormLabel","injectIntl","FormattedMessage","ReadOnlyText","designProperties","faCloudDownloadAlt","FontAwesomeIcon","FontIconWrap","dynamicFileDownload","connect","mapStateToProps","state","Login","SampleInfoView","Component","render","jsondata","props","data","SingleItem","map","field","index","size","LABEL","userInfo","slanguagetypecode","VALUE","intl","formatMessage","id","viewName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Card, Row, Col, FormGroup, FormLabel } from 'react-bootstrap'\r\nimport { injectIntl, FormattedMessage } from 'react-intl'\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport { designProperties } from '../../components/Enumeration';\r\nimport {faCloudDownloadAlt} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  FontIconWrap } from '../../../src/components/data-grid/data-grid.styles';\r\nimport {dynamicFileDownload} from '../../../src/actions/ServiceAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\nclass SampleInfoView extends React.Component {\r\n    render() {\r\n        const jsondata = this.props.data\r\n        return (\r\n            <Card className=\"border-0\">\r\n                <Card.Body>\r\n                    <Row>\r\n                        {this.props.SingleItem && this.props.SingleItem.map((field, index) =>\r\n                            // ALPD-950\r\n                            <Col md={this.props.size ? this.props.size : 6} key={index}>\r\n                                <FormGroup>\r\n                                    <FormLabel>\r\n                                        <FormattedMessage\r\n                                            id={field[designProperties.LABEL][this.props.userInfo.slanguagetypecode] || \"-\"}\r\n                                            message={field[designProperties.LABEL][this.props.userInfo.slanguagetypecode] || \"-\"} />\r\n                                    </FormLabel>\r\n                                    {/* <ReadOnlyText>{jsondata[field[designProperties.VALUE]]||\r\n                                        jsondata.jsondata[field[designProperties.VALUE]]&& \r\n                                        jsondata.jsondata[field[designProperties.VALUE]].label||\r\n                                    jsondata.jsondata[field[designProperties.VALUE]]||\"-\"}</ReadOnlyText> */}\r\n                                    <ReadOnlyText>{jsondata[field[designProperties.VALUE]] || \"-\"}\r\n                                    {field && field[3] === 'files' ?\r\n                                        <FontIconWrap icon={faCloudDownloadAlt} className=\"ml-2 className action-icons-wrap\" size=\"lg\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                                            data-place=\"left\"\r\n                                            onClick={() => this.props.dynamicFileDownload({field,...jsondata ,viewName:'InfoView',userInfo:this.props.userInfo})}>\r\n                                            <FontAwesomeIcon icon={faCloudDownloadAlt} />\r\n                                        </FontIconWrap> : \"\"\r\n                                    }</ReadOnlyText>\r\n                                   \r\n                                </FormGroup>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{dynamicFileDownload})(injectIntl(SampleInfoView));"]},"metadata":{},"sourceType":"module"}