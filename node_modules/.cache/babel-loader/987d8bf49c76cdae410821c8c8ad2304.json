{"ast":null,"code":"import rsapi from \"../rsapi\";\nimport { toast } from \"react-toastify\";\nimport { constructOptionList, sortData } from \"../components/CommonScript\";\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\nimport { initRequest } from \"./LoginAction\";\nimport Axios from 'axios';\nimport { transactionStatus, attachmentType } from \"../components/Enumeration\";\nexport const getTrainingUpdate = (trainingupdate, userInfo, masterData) => {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"trainingupdate/getTrainingUpdateById\", {\n      ntrainingcode: trainingupdate.ntrainingcode,\n      userinfo: userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          dataState: undefined\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(error.message);\n    });\n  };\n};\nexport const changeTechniqueFilter = (inputParam, filterTechnique, selectedTechinque) => {\n  return dispatch => {\n    dispatch(initRequest(true));\n    rsapi.post(\"/trainingupdate/get\" + inputParam.methodUrl, inputParam.inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      };\n\n      if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\n        inputParam.searchRef.current.value = \"\";\n        masterData['searchedData'] = undefined;\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData: { ...masterData,\n            filterTechnique,\n            nfilterTechnique: inputParam.inputData.nfilterTechnique,\n            selectedTechinque: selectedTechinque.item\n          }\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n};\nexport function getParticipantsAccordion(versionObject) {\n  let {\n    version,\n    masterData,\n    userInfo\n  } = versionObject;\n  return function (dispatch) {\n    if (!(masterData.selectedParticipants.nparticipantcode === version.nparticipantcode)) {\n      const inputData = {\n        nparticipantcode: version.nparticipantcode,\n        userinfo: userInfo\n      };\n      rsapi.post('trainingupdate/getParticipantsAccordion', inputData).then(response => {\n        sortData(masterData);\n        masterData = { ...masterData,\n          selectedParticipants: response.data.selectedParticipants,\n          TraineeDocuments: response.data.TraineeDocuments\n        };\n        sortData(masterData);\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            masterData,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    } else {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }\n  };\n}\nexport function getTrainingParticipantsAttended(trainingUpdate, selectedRecord, userInfo, operation, attendanceId) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"trainingupdate/getInvitedParticipants\", {\n      \"userinfo\": userInfo,\n      \"ntrainingcode\": parseInt(trainingUpdate.ntrainingcode)\n    }).then(response => {\n      let nusercode = []; // const attendUsersMap = constructOptionList(response.data.InvitedParticipant || [], \"nusercode\",\n      //     \"sfullname\", undefined, undefined, true);\n\n      const attendUsersList = response.data.InvitedParticipant;\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          ncontrolCode: attendanceId,\n          usersStatus: attendUsersList,\n          nusercode: nusercode,\n          loading: false,\n          openChildModal: true,\n          screenName: \"IDS_ATTENDPARTICIPANTSDETAILS\",\n          nFlag: 2,\n          selectedRecord: selectedRecord,\n          operation: operation\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getTrainingParticipantsCertified(trainingUpdate, selectedRecord, userInfo, operation, certifiedId) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"trainingupdate/getAttendedParticipants\", {\n      \"userinfo\": userInfo,\n      \"ntrainingcode\": parseInt(trainingUpdate.ntrainingcode)\n    }).then(response => {\n      let nusercode = [];\n      const certifyUsersMap = constructOptionList(response.data.AttendedParticipant || [], \"nusercode\", \"sfullname\", undefined, undefined, true);\n      const certifyUsersList = response.data.AttendedParticipant;\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          ncontrolCode: certifiedId,\n          usersStatus: certifyUsersList,\n          nusercode: nusercode,\n          loading: false,\n          openChildModal: true,\n          screenName: \"IDS_CERTIFYPARTICIPANTSDETAILS\",\n          nFlag: 3,\n          selectedRecord: selectedRecord,\n          operation: operation\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getTrainingParticipantsCompetent(trainingUpdate, selectedRecord, userInfo, operation, competentId) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"trainingupdate/getCertifiedParticipants\", {\n      \"userinfo\": userInfo,\n      \"ntrainingcode\": parseInt(trainingUpdate.ntrainingcode)\n    }).then(response => {\n      let nusercode = []; // const competentUsersMap = constructOptionList(response.data.CompetentParticipant || [], \"nusercode\",\n      //     \"sfullname\", undefined, undefined, true);\n\n      const competentUsersList = response.data.CompetentParticipant;\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          ncontrolCode: competentId,\n          usersStatus: competentUsersList,\n          nusercode: nusercode,\n          loading: false,\n          openChildModal: true,\n          screenName: \"IDS_COMPETENTPARTICIPANTSDETAILS\",\n          nFlag: 4,\n          selectedRecord: selectedRecord,\n          operation: operation\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport const addtrainingdocfile = inputParam => {\n  return dispatch => {\n    dispatch(initRequest(true));\n    let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\n      userinfo: inputParam.userInfo\n    })];\n\n    if (inputParam.operation === \"update\") {\n      urlArray.push(rsapi.post(\"/trainingupdate/editTrainingFile\", {\n        userinfo: inputParam.userInfo,\n        trainingfile: inputParam.selectedRecord\n      }));\n    }\n\n    Axios.all(urlArray).then(response => {\n      const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\n      const linkmaster = linkMap.get(\"OptionList\");\n      let selectedRecord = {};\n      const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\n      let disabled = false;\n      let editObject = {};\n\n      if (inputParam.operation === \"update\") {\n        editObject = response[1].data;\n        let nlinkcode = {};\n        let link = {};\n\n        if (editObject.nattachmenttypecode === attachmentType.LINK) {\n          nlinkcode = {\n            \"label\": editObject.slinkname,\n            \"value\": editObject.nlinkcode\n          };\n          link = {\n            slinkfilename: editObject.sfilename,\n            slinkdescription: editObject.sfiledesc,\n            nlinkdefaultstatus: editObject.ndefaultstatus,\n            sfilesize: '',\n            nfilesize: 0,\n            ndefaultstatus: 4,\n            sfilename: '',\n            sfiledesc: ''\n          };\n        } else {\n          nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\"; //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\n\n          link = {\n            slinkfilename: '',\n            slinkdescription: '',\n            nlinkdefaultstatus: 4,\n            sfilesize: editObject.sfilesize,\n            nfilesize: editObject.nfilesize,\n            ndefaultstatus: editObject.ndefaultstatus,\n            sfilename: editObject.sfilename,\n            ...editObject\n          };\n        }\n\n        selectedRecord = {\n          // ...editObject,\n          ntrainingdoccode: editObject.ntrainingdoccode,\n          nattachmenttypecode: editObject.nattachmenttypecode,\n          ...link,\n          nlinkcode // disabled: true\n\n        };\n      } else {\n        selectedRecord = {\n          nattachmenttypecode: response[0].data.AttachmentType.length > 0 ? response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\n          nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\",\n          //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\n          disabled\n        };\n      } // let selectedRecord = {\n      //         nattachmenttypecode:response[0].data.AttachmentType.length>0?\n      //         response[0].data.AttachmentType[0].nattachmenttypecode:attachmentType.FTP,\n      //         nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\n      //         disabled\n      //     };\n\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openChildModal: true,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          ncontrolCode: inputParam.ncontrolCode,\n          selectedRecord,\n          loading: false,\n          linkMaster: linkmaster,\n          showSaveContinue: false,\n          editFiles: editObject.nattachmenttypecode === \"1\" ? editObject : {}\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n};\nexport const addtraineedocfile = inputParam => {\n  return dispatch => {\n    dispatch(initRequest(true));\n    let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\n      userinfo: inputParam.userInfo\n    })];\n\n    if (inputParam.operation === \"update\") {\n      urlArray.push(rsapi.post(\"/trainingupdate/editTraineeFile\", {\n        userinfo: inputParam.userInfo,\n        traineefile: inputParam.selectedRecord\n      }));\n    }\n\n    Axios.all(urlArray).then(response => {\n      const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\n      const linkmaster = linkMap.get(\"OptionList\");\n      let selectedRecord = {};\n      const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\n      let disabled = false;\n      let editObject = {};\n\n      if (inputParam.operation === \"update\") {\n        editObject = response[1].data;\n        let nlinkcode = {};\n        let link = {};\n\n        if (editObject.nattachmenttypecode === attachmentType.LINK) {\n          nlinkcode = {\n            \"label\": editObject.slinkname,\n            \"value\": editObject.nlinkcode\n          };\n          link = {\n            slinkfilename: editObject.sfilename,\n            slinkdescription: editObject.sfiledesc,\n            nlinkdefaultstatus: editObject.ndefaultstatus,\n            sfilesize: '',\n            nfilesize: 0,\n            ndefaultstatus: 4,\n            sfilename: '',\n            sfiledesc: ''\n          };\n        } else {\n          nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\"; //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\n\n          link = {\n            slinkfilename: '',\n            slinkdescription: '',\n            nlinkdefaultstatus: 4,\n            sfilesize: editObject.sfilesize,\n            nfilesize: editObject.nfilesize,\n            ndefaultstatus: editObject.ndefaultstatus,\n            sfilename: editObject.sfilename,\n            ...editObject\n          };\n        }\n\n        selectedRecord = {\n          // ...editObject,\n          ntraineedoccode: editObject.ntraineedoccode,\n          nattachmenttypecode: editObject.nattachmenttypecode,\n          ...link,\n          nlinkcode // disabled: true\n\n        };\n      } else {\n        selectedRecord = {\n          nattachmenttypecode: response[0].data.AttachmentType.length > 0 ? response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\n          nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\",\n          //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\n          disabled\n        };\n      } // let selectedRecord = {\n      //         nattachmenttypecode:response[0].data.AttachmentType.length>0?\n      //         response[0].data.AttachmentType[0].nattachmenttypecode:attachmentType.FTP,\n      //         nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\n      //         disabled\n      //     };\n\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openChildModal: true,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          ncontrolCode: inputParam.ncontrolCode,\n          selectedRecord,\n          loading: false,\n          linkMaster: linkmaster,\n          showSaveContinue: false,\n          editFiles: editObject.nattachmenttypecode === \"1\" ? editObject : {}\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n};","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/actions/TrainingUpdateAction.js"],"names":["rsapi","toast","constructOptionList","sortData","DEFAULT_RETURN","initRequest","Axios","transactionStatus","attachmentType","getTrainingUpdate","trainingupdate","userInfo","masterData","dispatch","post","ntrainingcode","userinfo","then","response","data","type","payload","loading","dataState","undefined","catch","error","message","changeTechniqueFilter","inputParam","filterTechnique","selectedTechinque","methodUrl","inputData","responseData","searchRef","current","value","nfilterTechnique","item","status","warn","getParticipantsAccordion","versionObject","version","selectedParticipants","nparticipantcode","TraineeDocuments","getTrainingParticipantsAttended","trainingUpdate","selectedRecord","operation","attendanceId","parseInt","nusercode","attendUsersList","InvitedParticipant","ncontrolCode","usersStatus","openChildModal","screenName","nFlag","getTrainingParticipantsCertified","certifiedId","certifyUsersMap","AttendedParticipant","certifyUsersList","getTrainingParticipantsCompetent","competentId","competentUsersList","CompetentParticipant","addtrainingdocfile","urlArray","push","trainingfile","all","linkMap","LinkMaster","linkmaster","get","defaultLink","filter","items","ndefaultlink","YES","disabled","editObject","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","sfiledesc","nlinkdefaultstatus","ndefaultstatus","sfilesize","nfilesize","length","ntrainingdoccode","AttachmentType","FTP","linkMaster","showSaveContinue","editFiles","addtraineedocfile","traineefile","ntraineedoccode"],"mappings":"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","sourcesContent":["import rsapi from \"../rsapi\";\r\nimport {\r\n    toast\r\n} from \"react-toastify\";\r\nimport {\r\n    constructOptionList,\r\n    sortData\r\n} from \"../components/CommonScript\";\r\nimport {\r\n    DEFAULT_RETURN\r\n} from \"./LoginTypes\";\r\nimport {\r\n    initRequest\r\n} from \"./LoginAction\";\r\nimport Axios from 'axios';\r\nimport {\r\n    transactionStatus,\r\n    attachmentType\r\n} from \"../components/Enumeration\";\r\n\r\n\r\n\r\nexport const getTrainingUpdate = (trainingupdate, userInfo, masterData) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"trainingupdate/getTrainingUpdateById\", {\r\n            ntrainingcode: trainingupdate.ntrainingcode,\r\n                userinfo: userInfo\r\n            })\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        dataState: undefined\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const changeTechniqueFilter = (inputParam, filterTechnique,selectedTechinque) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/trainingupdate/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\r\n                    inputParam.searchRef.current.value = \"\";\r\n                    masterData['searchedData'] = undefined\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            filterTechnique,\r\n                            nfilterTechnique: inputParam.inputData.nfilterTechnique,\r\n                            selectedTechinque:selectedTechinque.item\r\n\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getParticipantsAccordion(versionObject) {\r\n    let { version, masterData, userInfo } = versionObject\r\n    return function (dispatch) {\r\n        if (!(masterData.selectedParticipants.nparticipantcode === version.nparticipantcode)) {\r\n            const inputData = { nparticipantcode: version.nparticipantcode, userinfo: userInfo }\r\n            rsapi.post('trainingupdate/getParticipantsAccordion', inputData)\r\n            \r\n                .then(response => {\r\n                    sortData(masterData)\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedParticipants: response.data.selectedParticipants,\r\n                        TraineeDocuments: response.data.TraineeDocuments\r\n                    }\r\n                    sortData(masterData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: { masterData, loading: false }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function getTrainingParticipantsAttended(trainingUpdate,selectedRecord,userInfo,operation,attendanceId) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"trainingupdate/getInvitedParticipants\", { \"userinfo\": userInfo,  \"ntrainingcode\": parseInt(trainingUpdate.ntrainingcode) })\r\n            .then(response => {\r\n\r\n                let nusercode = [];\r\n\r\n                // const attendUsersMap = constructOptionList(response.data.InvitedParticipant || [], \"nusercode\",\r\n                //     \"sfullname\", undefined, undefined, true);\r\n\r\n                const attendUsersList =response.data.InvitedParticipant;\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ncontrolCode:attendanceId,\r\n                        usersStatus: attendUsersList, nusercode: nusercode, loading: false,openChildModal: true,\r\n                        screenName:\"IDS_ATTENDPARTICIPANTSDETAILS\",nFlag:2,selectedRecord:selectedRecord,operation:operation\r\n                    }\r\n                });\r\n\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getTrainingParticipantsCertified(trainingUpdate,selectedRecord,userInfo,operation,certifiedId) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"trainingupdate/getAttendedParticipants\", { \"userinfo\": userInfo,  \"ntrainingcode\": parseInt(trainingUpdate.ntrainingcode) })\r\n            .then(response => {\r\n\r\n                let nusercode = [];\r\n\r\n                const certifyUsersMap = constructOptionList(response.data.AttendedParticipant || [], \"nusercode\",\r\n                    \"sfullname\", undefined, undefined, true);\r\n\r\n                const certifyUsersList = response.data.AttendedParticipant;\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ncontrolCode:certifiedId,\r\n                        usersStatus: certifyUsersList, nusercode: nusercode, loading: false,openChildModal: true,\r\n                        screenName:\"IDS_CERTIFYPARTICIPANTSDETAILS\",nFlag:3,selectedRecord:selectedRecord,operation:operation\r\n                    }\r\n                });\r\n\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getTrainingParticipantsCompetent(trainingUpdate,selectedRecord,userInfo,operation,competentId) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"trainingupdate/getCertifiedParticipants\", { \"userinfo\": userInfo,  \"ntrainingcode\": parseInt(trainingUpdate.ntrainingcode) })\r\n            .then(response => {\r\n\r\n                let nusercode = [];\r\n\r\n                // const competentUsersMap = constructOptionList(response.data.CompetentParticipant || [], \"nusercode\",\r\n                //     \"sfullname\", undefined, undefined, true);\r\n\r\n                const competentUsersList = response.data.CompetentParticipant;\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ncontrolCode:competentId,\r\n                        usersStatus: competentUsersList, nusercode: nusercode, loading: false,openChildModal: true,\r\n                        screenName:\"IDS_COMPETENTPARTICIPANTSDETAILS\",nFlag:4,selectedRecord:selectedRecord,operation:operation\r\n                    }\r\n                });\r\n\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const addtrainingdocfile = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n            userinfo: inputParam.userInfo\r\n        })];\r\n\r\n        if (inputParam.operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"/trainingupdate/editTrainingFile\", {\r\n                userinfo: inputParam.userInfo,\r\n                trainingfile: inputParam.selectedRecord\r\n            }))\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n            \r\n                const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                const linkmaster = linkMap.get(\"OptionList\");\r\n                let selectedRecord = {};\r\n                const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                let disabled = false;\r\n                let editObject = {};\r\n                if (inputParam.operation === \"update\") {\r\n                    editObject = response[1].data;\r\n                    let nlinkcode = {};\r\n                    let link = {};\r\n                    if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                        nlinkcode = {\r\n                            \"label\": editObject.slinkname,\r\n                            \"value\": editObject.nlinkcode\r\n                        }\r\n\r\n                        link = {\r\n                            slinkfilename: editObject.sfilename,\r\n                            slinkdescription: editObject.sfiledesc,\r\n                            nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                            sfilesize: '',\r\n                            nfilesize: 0,\r\n                            ndefaultstatus: 4,\r\n                            sfilename: '',\r\n                            sfiledesc:''\r\n                        }\r\n\r\n                    } else {\r\n                        nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\" //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\r\n                        link = {\r\n                            slinkfilename: '',\r\n                            slinkdescription: '',\r\n                            nlinkdefaultstatus: 4,\r\n                            sfilesize: editObject.sfilesize,\r\n                            nfilesize: editObject.nfilesize,\r\n                            ndefaultstatus: editObject.ndefaultstatus,\r\n                            sfilename: editObject.sfilename,\r\n                            ...editObject\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    selectedRecord = {\r\n                       // ...editObject,\r\n                        ntrainingdoccode: editObject.ntrainingdoccode,\r\n                        nattachmenttypecode: editObject.nattachmenttypecode,\r\n                        ...link,\r\n                        nlinkcode,\r\n\r\n                        // disabled: true\r\n                    };\r\n                } else {\r\n                    selectedRecord = {\r\n                        nattachmenttypecode: response[0].data.AttachmentType.length > 0 ?\r\n                            response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\r\n                        nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\r\n                        disabled\r\n                    };\r\n                }\r\n                \r\n                // let selectedRecord = {\r\n                //         nattachmenttypecode:response[0].data.AttachmentType.length>0?\r\n                //         response[0].data.AttachmentType[0].nattachmenttypecode:attachmentType.FTP,\r\n                //         nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\r\n                //         disabled\r\n                //     };\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openChildModal: true,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        linkMaster: linkmaster,\r\n                        showSaveContinue: false,\r\n                        editFiles: editObject.nattachmenttypecode === \"1\" ? editObject : {}\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const addtraineedocfile = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n            userinfo: inputParam.userInfo\r\n        })];\r\n\r\n        if (inputParam.operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"/trainingupdate/editTraineeFile\", {\r\n                userinfo: inputParam.userInfo,\r\n                traineefile: inputParam.selectedRecord\r\n            }))\r\n        }\r\n\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n\r\n                const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                const linkmaster = linkMap.get(\"OptionList\");\r\n                 let selectedRecord = {};\r\n                const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                let disabled = false;\r\n                let editObject = {};\r\n                if (inputParam.operation === \"update\") {\r\n                    editObject = response[1].data;\r\n                    let nlinkcode = {};\r\n                    let link = {};\r\n                    if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                        nlinkcode = {\r\n                            \"label\": editObject.slinkname,\r\n                            \"value\": editObject.nlinkcode\r\n                        }\r\n\r\n                        link = {\r\n                            slinkfilename: editObject.sfilename,\r\n                            slinkdescription: editObject.sfiledesc,\r\n                            nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                            sfilesize: '',\r\n                            nfilesize: 0,\r\n                            ndefaultstatus: 4,\r\n                            sfilename: '',\r\n                            sfiledesc:''\r\n                        }\r\n\r\n                    } else {\r\n                        nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\" //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\r\n                        link = {\r\n                            slinkfilename: '',\r\n                            slinkdescription: '',\r\n                            nlinkdefaultstatus: 4,\r\n                            sfilesize: editObject.sfilesize,\r\n                            nfilesize: editObject.nfilesize,\r\n                            ndefaultstatus: editObject.ndefaultstatus,\r\n                            sfilename: editObject.sfilename,\r\n                            ...editObject\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    selectedRecord = {\r\n                       // ...editObject,\r\n                       ntraineedoccode: editObject.ntraineedoccode,\r\n                        nattachmenttypecode: editObject.nattachmenttypecode,\r\n                        ...link,\r\n                        nlinkcode,\r\n\r\n                        // disabled: true\r\n                    };\r\n                } else {\r\n                    selectedRecord = {\r\n                        nattachmenttypecode: response[0].data.AttachmentType.length > 0 ?\r\n                            response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\r\n                        nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\r\n                        disabled\r\n                    };\r\n                }\r\n                // let selectedRecord = {\r\n                //         nattachmenttypecode:response[0].data.AttachmentType.length>0?\r\n                //         response[0].data.AttachmentType[0].nattachmenttypecode:attachmentType.FTP,\r\n                //         nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\r\n                //         disabled\r\n                //     };\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openChildModal: true,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        linkMaster: linkmaster,\r\n                        showSaveContinue: false,\r\n                        editFiles: editObject.nattachmenttypecode === \"1\" ? editObject : {}\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n                             \r\n       \r\n"]},"metadata":{},"sourceType":"module"}