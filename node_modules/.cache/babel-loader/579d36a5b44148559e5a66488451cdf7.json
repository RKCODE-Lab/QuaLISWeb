{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\Material\\\\AddMaterialCategory.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { injectIntl } from 'react-intl';\n\nconst AddMaterialCategory = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nmaterialtypecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_MATERIALTYPECODE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.materialCatgeoryList || [],\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"nmaterialtypecode\"] : \"\",\n    value: props.selectedRecord ? props.selectedRecord[\"nmaterialtypecode\"] : \"\",\n    isMandatory: true,\n    required: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'nmaterialtypecode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MATERIALCATEGORY\"\n    }),\n    name: \"smaterialcatname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MATERIALCATEGORY\"\n    }),\n    value: props.selectedRecord[\"smaterialcatname\"] ? props.selectedRecord[\"smaterialcatname\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nbarcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_BARCODE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.barcodeList || [],\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"nbarcode\"] : \"\",\n    value: props.selectedRecord ? props.selectedRecord[\"nbarcode\"] : \"\",\n    isMandatory: false,\n    required: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'nbarcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    name: \"sdescription\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord[\"sdescription\"] ? props.selectedRecord[\"sdescription\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_CATEGORYBASEDFLOW\"\n    }),\n    type: \"switch\",\n    name: \"ncategorybasedflow\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_CATEGORYBASEDFLOW\"\n    }),\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"ncategorybasedflow\"] === 3 ? true : false : \"\",\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord ? props.selectedRecord[\"ncategorybasedflow\"] === 3 ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    type: \"switch\",\n    name: \"ndefaultstatus\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : \"\",\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_NEEDSECTIOWISE\"\n    }),\n    type: \"switch\",\n    name: \"needSectionwise\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NEEDSECTIOWISE\"\n    }),\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"needSectionwise\"] === 3 ? true : false : \"\",\n    isMandatory: false,\n    required: false,\n    disabled: props.needSectionwisedisabled,\n    checked: props.selectedRecord ? props.selectedRecord[\"needSectionwise\"] === 3 ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddMaterialCategory);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/Material/AddMaterialCategory.jsx"],"names":["React","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","injectIntl","AddMaterialCategory","props","intl","formatMessage","id","materialCatgeoryList","selectedRecord","event","onComboChange","onInputOnChange","barcodeList","needSectionwisedisabled"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst AddMaterialCategory = (props) => {\r\n    return (\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"nmaterialtypecode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_MATERIALTYPECODE\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.materialCatgeoryList || []}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"nmaterialtypecode\"] : \"\"}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nmaterialtypecode\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    onChange={(event) => props.onComboChange(event, 'nmaterialtypecode')}\r\n                />\r\n                 \r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_MATERIALCATEGORY\" })}\r\n                    name=\"smaterialcatname\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_MATERIALCATEGORY\" })}\r\n                    value={props.selectedRecord[\"smaterialcatname\"] ? props.selectedRecord[\"smaterialcatname\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n                />\r\n                <FormSelectSearch\r\n                    name={\"nbarcode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_BARCODE\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.barcodeList || []}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"nbarcode\"] : \"\"}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nbarcode\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={true}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true} \r\n                    onChange={(event) => props.onComboChange(event, 'nbarcode')}\r\n                />\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    name=\"sdescription\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord[\"sdescription\"] ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={255}\r\n                />\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_CATEGORYBASEDFLOW\" })}\r\n                    type=\"switch\"\r\n                    name={\"ncategorybasedflow\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_CATEGORYBASEDFLOW\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"ncategorybasedflow\"] === 3 ? true : false : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"ncategorybasedflow\"] === 3 ? true : false : false}\r\n                >\r\n                </CustomSwitch>\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                    type=\"switch\"\r\n                    name={\"ndefaultstatus\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : false}\r\n                >\r\n                </CustomSwitch>\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_NEEDSECTIOWISE\" })}\r\n                    type=\"switch\"\r\n                    name={\"needSectionwise\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_NEEDSECTIOWISE\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"needSectionwise\"] === 3 ? true : false : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    disabled={props.needSectionwisedisabled}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"needSectionwise\"] === 3 ? true : false : false}\r\n                >\r\n                </CustomSwitch>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport default injectIntl(AddMaterialCategory);"]},"metadata":{},"sourceType":"module"}