{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import MultiColumnComboSearch from'../../components/multi-column-combo-search/multi-column-combo-search';var AddBatchCreation=function AddBatchCreation(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_SECTION\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"nsectioncode\",optionId:\"nsectioncode\",optionValue:\"ssectionname\"// className='form-control'\n,options:props.Section,value:props.selectedSection?props.selectedSection:\"\",isMandatory:true,isMulti:false,isSearchable:true//isDisabled={true}\n,isDisabled:props.operation==\"update\"?true:false,alphabeticalSort:false,isClearable:false// required={true}\n,onChange:function onChange(event){return props.onComboChange(event,\"ssectionname\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TEST\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"ntestcode\",optionId:\"ntestcode\",optionValue:\"stestsynonym\"// className='form-control'\n,options:props.Test,value:props.Test?props.TestValue:\"\",isMandatory:true,isMulti:false,isSearchable:true,isDisabled:props.operation==\"update\"?true:false,alphabeticalSort:false,isClearable:false,required:true,onChange:function onChange(event){return props.onComboChange(event,\"stestname\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PRODUCT\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"nproductcode\",optionId:\"nproductcode\",optionValue:\"sproductname\",className:\"form-control\",options:props.product,value:props.selectedProduct?props.selectedProduct:\"\",isMandatory:true,isMulti:false,isSearchable:true,isDisabled:false,alphabeticalSort:false,isClearable:false,required:true,onChange:function onChange(event){return props.onComboChange(event,\"sproductname\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_INSTRUMENTCATEGORY\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"ninstrumentcatcode\",optionId:\"ninstrumentcatcode\",optionValue:\"sinstrumentcatname\",className:\"form-control\",options:props.InstrumentCategory,value:props.InstrumentCategory?props.selectedInstrumentCategory:\"\",isMandatory:true,isMulti:false,isSearchable:true,required:true,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return props.onComboChange(event,\"sinstrumentcatname\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_INSTRUMENT\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"ninstrumentcode\",optionId:\"ninstrumentcode\",optionValue:\"sinstrumentname\",className:\"form-control\",options:props.Instrument,value:props.Instrument?props.selectedInstrument:\"\",isMandatory:true,isMulti:false,isSearchable:true,isDisabled:false,alphabeticalSort:false,isClearable:false,required:true,onChange:function onChange(event){return props.onComboChange(event,\"sinstrumentname\");}}))))));};export default injectIntl(AddBatchCreation);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/batchruncreation/AddBatchCreation.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","FormSelectSearch","DateTimePicker","FormNumericInput","MultiColumnComboSearch","AddBatchCreation","props","intl","formatMessage","id","Section","selectedSection","operation","event","onComboChange","Test","TestValue","product","selectedProduct","InstrumentCategory","selectedInstrumentCategory","Instrument","selectedInstrument"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport MultiColumnComboSearch from '../../components/multi-column-combo-search/multi-column-combo-search';\r\n\r\nconst AddBatchCreation = (props) =>{    \r\n       return (<>\r\n           <Row>                                \r\n                <Col md={12}>\r\n                   <Row>\r\n                   <Col md={12}>\r\n                        <FormSelectSearch\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_SECTION\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"nsectioncode\"\r\n                                optionId=\"nsectioncode\"\r\n                                optionValue=\"ssectionname\"\r\n                                // className='form-control'\r\n                                options={props.Section}\r\n                                value={props.selectedSection ? props.selectedSection : \"\"}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                //isDisabled={true}\r\n                                isDisabled={props.operation == \"update\" ? true : false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                // required={true}\r\n                                onChange={(event) => props.onComboChange(event, \"ssectionname\")}\r\n                            />\r\n                        </Col>\r\n                        \r\n                   <Col md={12}>\r\n                        <FormSelectSearch\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"ntestcode\"\r\n                                optionId=\"ntestcode\"\r\n                                optionValue=\"stestsynonym\"\r\n                                // className='form-control'\r\n                                options={props.Test}\r\n                                value={props.Test ? props.TestValue : \"\"}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                isDisabled={props.operation == \"update\" ? true : false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                required={true}\r\n                                onChange={(event) => props.onComboChange(event, \"stestname\")}\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col md={12}>\r\n                        <FormSelectSearch\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_PRODUCT\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"nproductcode\"\r\n                                optionId=\"nproductcode\"\r\n                                optionValue=\"sproductname\"\r\n                                className='form-control'\r\n                                options={props.product}\r\n                                value={props.selectedProduct ? props.selectedProduct : \"\"}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                required={true}\r\n                                onChange={(event) => props.onComboChange(event, \"sproductname\")}\r\n                            />\r\n                     </Col>\r\n\r\n                        <Col md={12}>\r\n                        <FormSelectSearch\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORY\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"ninstrumentcatcode\"\r\n                                optionId=\"ninstrumentcatcode\"\r\n                                optionValue=\"sinstrumentcatname\"\r\n                                className='form-control'\r\n                                options={props.InstrumentCategory}\r\n                                value={props.InstrumentCategory ? props.selectedInstrumentCategory : \"\"}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                required={true}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                onChange={(event) => props.onComboChange(event, \"sinstrumentcatname\")}\r\n                            />\r\n                        </Col> \r\n\r\n                        \r\n                        <Col md={12}>\r\n                        <FormSelectSearch\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_INSTRUMENT\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"ninstrumentcode\"\r\n                                optionId=\"ninstrumentcode\"\r\n                                optionValue=\"sinstrumentname\"\r\n                                className='form-control'\r\n                                options={props.Instrument}\r\n                                value={props.Instrument ? props.selectedInstrument : \"\"}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                required={true}\r\n                                onChange={(event) => props.onComboChange(event, \"sinstrumentname\")}\r\n                            />\r\n                        </Col>    \r\n\r\n                        {/* <Col md={12}>\r\n                        <FormSelectSearch\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_PRODUCT\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"nproductcode\"\r\n                                optionId=\"nproductcode\"\r\n                                optionValue=\"sproductname\"\r\n                                className='form-control'\r\n                                options={props.product}\r\n                                value={props.selectedProduct ? props.selectedProduct : \"\"}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                required={true}\r\n                                onChange={(event) => props.onComboChange(event, \"sproductname\")}\r\n                            />\r\n                     </Col> */}\r\n                   </Row>\r\n               </Col>      \r\n        </Row>   \r\n       \r\n      </>\r\n       )\r\n   }\r\n   export default injectIntl(AddBatchCreation);\r\n"]},"metadata":{},"sourceType":"module"}