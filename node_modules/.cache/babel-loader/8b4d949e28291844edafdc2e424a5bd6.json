{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\attachmentscomments\\\\attachments\\\\Attachments.jsx\";\nimport React, { Component } from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport ListAttachment from '../../../components/ListAttachment';\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\nimport AddAttachment from './AddAttachment';\nimport { updateStore, getAttachmentCombo, validateEsignCredential, crudMaster, viewAttachment, deleteAttachment } from '../../../actions';\nimport { connect } from 'react-redux';\nimport { attachmentType, designProperties, transactionStatus } from '../../../components/Enumeration';\nimport Esign from '../../audittrail/Esign';\nimport { QUALISFORMS } from '../../../components/Enumeration';\nimport { deleteAttachmentDropZone, onDropAttachFileList } from '../../../components/CommonScript';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Attachments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\" //fileToDelete:file.name \n\n      });\n    };\n\n    this.onDropFiles = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.onAttachmentInputChange = (event, caseNo, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      switch (caseNo) {\n        case 1:\n          if (event.target.type === 'radio') {\n            selectedRecord[event.target.name] = event.target.checked === true && optional; // selectedRecord[\"sfilename\"] = \"\";\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n\n          this.setState({\n            selectedRecord\n          });\n          break;\n\n        default:\n          selectedRecord[event.target.name] = event.target.value;\n          this.setState({\n            selectedRecord\n          });\n          break;\n      }\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, comboName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData) {\n        selectedRecord[comboName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      } else {\n        selectedRecord[comboName] = [];\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      // const masterData = this.props.Login.masterData;\n      // let inputData = {}\n      // let inputParam = {}\n      // inputData[\"userinfo\"] = this.props.Login.userInfo;\n      // if(this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n      //     let saveParam={userInfo:this.props.Login.userInfo,\n      //         selectedRecord:this.state.selectedRecord,\n      //         masterData:this.props.Login.masterData,\n      //         saveType, formRef,\n      //         operation:this.props.Login.operation,\n      //         selectedMaster:this.props.selectedMaster\n      //     }\n      //     inputParam = onSaveSampleAttachment(saveParam,this.props.selectedMaster);\n      // }else if(this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\n      //     let saveParam={userInfo:this.props.Login.userInfo,\n      //         selectedRecord:this.state.selectedRecord,\n      //         masterData:this.props.Login.masterData,\n      //         saveType, formRef,\n      //         operation:this.props.Login.operation,\n      //         selectedMaster:this.props.selectedMaster\n      //     }\n      //     inputParam = onSaveTestAttachment(saveParam,this.props.selectedMaster);\n      this.props.onSaveClick(saveType, formRef, this.state.selectedRecord); // }\n      // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: {\n      //             loadEsign: true,\n      //             screenData: { inputParam, masterData },\n      //             operation: this.props.Login.operation,\n      //             screenName: this.props.Login.screenName,\n      //         }\n      //     }\n      //     this.props.updateStore(updateInfo);\n      // }\n      // else {\n      //     this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\n      // }\n    };\n\n    this.handleClose = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openAttachmentModal = this.props.Login.openAttachmentModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let operation = this.props.Login.operation;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openAttachmentModal = false;\n          selectedRecord = {};\n          operation = undefined;\n        } else {\n          loadEsign = false;\n          selectedRecord[\"esigncomments\"] = \"\";\n          selectedRecord[\"esignpassword\"] = \"\";\n        }\n      } else {\n        openAttachmentModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openAttachmentModal,\n          loadEsign,\n          selectedRecord,\n          selectedParamId: null,\n          operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n\n      if (this.props.Login.operation === 'dynamic') {\n        this.props.validateEsignforApproval(inputParam, \"openChildModal\");\n      } else {\n        this.props.validateEsignCredential(inputParam, \"openAttachmentModal\");\n      }\n    };\n\n    this.viewFile = filedata => {\n      const inputParam = {\n        inputData: {\n          file: filedata,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"attachment\",\n        operation: \"view\",\n        methodUrl: this.props.methodUrl,\n        screenName: this.props.Login.screenName\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.state = {\n      showMore: {},\n      selectedRecord: {}\n    };\n  }\n\n  render() {\n    let subFields = this.props.subFields ? this.props.subFields : [{\n      [designProperties.LABEL]: `${this.props.nsubsampleneed && this.props.nsubsampleneed.nneedsubsample ? \"IDS_SAMPLEARNO\" : \"IDS_ARNO\"}`\n    }, {\n      [designProperties.VALUE]: `${this.props.screenName === 'IDS_SAMPLEATTACHMENTS' ? this.props.Login.userInfo && this.props.Login.userInfo.nformcode === QUALISFORMS.SAMPLEREGISTRATION ? \"groupingField\" : \"sarno\" : this.props.Login.screenName === 'IDS_SUBSAMPLEATTACHMENTS' ? this.props.Login.userInfo && this.props.Login.userInfo.nformcode === QUALISFORMS.SAMPLEREGISTRATION ? \"groupingField2\" : \"samplearno\" : \"stestsynonym\"}`\n    }, {\n      [designProperties.VALUE]: \"screateddate\"\n    } // { [designProperties.VALUE]: \"nfilesize\", \"fieldType\": \"size\" }\n    ];\n    let moreField = this.props.moreField ? this.props.moreField : [{\n      [designProperties.LABEL]: \"IDS_SCREENNAME\",\n      [designProperties.VALUE]: \"sdisplayname\"\n    }, {\n      [designProperties.LABEL]: \"IDS_USERNAME\",\n      [designProperties.VALUE]: \"susername\"\n    }, {\n      [designProperties.LABEL]: \"IDS_USERROLE\",\n      [designProperties.VALUE]: \"suserrolename\"\n    }, {\n      [designProperties.LABEL]: \"IDS_DESCRIPTION\",\n      [designProperties.VALUE]: \"sdescription\"\n    }];\n\n    if (this.props.moreField === undefined && this.props.screenName === 'IDS_TESTATTACHMENTS') {\n      moreField.unshift({\n        [designProperties.LABEL]: this.props.nsubsampleneed && `${this.props.nsubsampleneed.nneedsubsample ? \"IDS_SAMPLEARNO\" : \"IDS_ARNO\"}`,\n        [designProperties.VALUE]: this.props.nsubsampleneed && `${this.props.nsubsampleneed.nneedsubsample ? \"ssamplearno\" : \"sarno\"}`\n      });\n    }\n\n    ;\n    let addFileId = this.props.controlMap.has(this.props.addName) && this.props.controlMap.get(this.props.addName).ncontrolcode;\n    let editFileId = this.props.controlMap.has(this.props.editName) && this.props.controlMap.get(this.props.editName).ncontrolcode;\n    let deleteFileId = this.props.controlMap.has(this.props.deleteName) && this.props.controlMap.get(this.props.deleteName).ncontrolcode;\n    let viewFileId = this.props.controlMap.has(this.props.viewName) && this.props.controlMap.get(this.props.viewName).ncontrolcode;\n    let mandatoryFields = [];\n\n    if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\n      mandatoryFields = [{\n        \"idsName\": \"IDS_FILENAME\",\n        \"dataField\": \"slinkfilename\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }, {\n        \"idsName\": \"IDS_LINKNAME\",\n        \"dataField\": \"nlinkcode\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }];\n    } else {\n      // if (this.props.Login.operation !== 'update') {\n      mandatoryFields = [{\n        \"idsName\": \"IDS_FILE\",\n        \"dataField\": \"sfilename\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }]; // }\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe border-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: `add_${this.props.Login.screenName}_file`,\n      className: \"add-txt-btn\",\n      hidden: this.props.userRoleControlRights.indexOf(addFileId) === -1,\n      onClick: () => this.props.getAttachmentCombo({\n        userInfo: this.props.Login.userInfo,\n        operation: \"create\",\n        ncontrolCode: addFileId,\n        screenName: this.props.screenName,\n        modalName: \"openAttachmentModal\",\n        masterList: this.props.masterList,\n        masterAlertStatus: this.props.masterAlertStatus\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ATTACHMENT\",\n      defaultMessage: \"Attachment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(ListAttachment, {\n      attachmentList: this.props.attachments,\n      fileName: \"sfilename\",\n      filesize: \"nfilesize\",\n      linkname: \"slinkname\",\n      isjsonfield: true,\n      jsonfield: \"jsondata\",\n      deleteRecord: this.props.deleteAttachment,\n      deleteParam: this.props.deleteParam,\n      editParam: { ...this.props.editParam,\n        operation: \"update\",\n        ncontrolCode: editFileId,\n        screenName: this.props.screenName,\n        modalName: \"openAttachmentModal\",\n        masterList: this.props.masterList,\n        masterAlertStatus: this.props.masterAlertStatus\n      },\n      fetchRecord: this.props.fetchRecord,\n      deleteId: deleteFileId,\n      editId: editFileId,\n      viewId: viewFileId,\n      userRoleControlRights: this.props.userRoleControlRights,\n      viewFile: this.viewFile,\n      mainField: this.props.mainField,\n      subFields: subFields,\n      moreField: moreField,\n      hidePaging: false,\n      userInfo: this.props.Login.userInfo // skip={this.props.skip}\n      // take={this.props.take}\n      ,\n      settings: this.props.Login.settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), this.props.Login.openAttachmentModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      onSaveClick: this.onSaveClick,\n      operation: this.props.Login.operation,\n      screenName: this.props.Login.screenName,\n      closeModal: this.handleClose,\n      show: this.props.Login.openAttachmentModal,\n      inputParam: this.props.Login.inputParam,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: mandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(AddAttachment, {\n        selectedRecord: this.state.selectedRecord || {},\n        onDrop: this.onDropFiles,\n        deleteAttachment: this.deleteAttachment,\n        jsonField: 'jsondata',\n        actionType: this.state.actionType,\n        linkMaster: this.props.Login.linkMaster,\n        onInputOnChange: this.onAttachmentInputChange,\n        editFiles: this.props.Login.editFiles,\n        onComboChange: this.onComboChange,\n        maxSize: 20,\n        fileNameLength: this.props.screenName === 'IDS_TESTATTACHMENTS' ? 255 : 150,\n        maxFiles: this.props.Login.operation === \"update\" ? 1 : 3,\n        operation: this.props.Login.operation,\n        selectedListName: this.props.selectedListName,\n        displayName: this.props.displayName,\n        masterList: this.props.masterList,\n        multiple: this.props.Login.operation === \"update\" ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  updateStore,\n  viewAttachment,\n  validateEsignCredential,\n  crudMaster,\n  getAttachmentCombo,\n  deleteAttachment\n})(injectIntl(Attachments));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/attachmentscomments/attachments/Attachments.jsx"],"names":["React","Component","Nav","FontAwesomeIcon","FormattedMessage","injectIntl","faPlus","ListAttachment","SlideOutModal","DEFAULT_RETURN","AddAttachment","updateStore","getAttachmentCombo","validateEsignCredential","crudMaster","viewAttachment","deleteAttachment","connect","attachmentType","designProperties","transactionStatus","Esign","QUALISFORMS","deleteAttachmentDropZone","onDropAttachFileList","mapStateToProps","state","Login","Attachments","constructor","props","event","file","fieldName","selectedRecord","setState","actionType","onDropFiles","attachedFiles","maxSize","onAttachmentInputChange","caseNo","optional","target","type","name","checked","value","onInputOnChange","YES","NO","onComboChange","comboData","comboName","onSaveClick","saveType","formRef","handleClose","loadEsign","openAttachmentModal","operation","undefined","updateInfo","typeName","data","selectedParamId","validateEsign","inputParam","inputData","userInfo","sreason","password","screenData","validateEsignforApproval","viewFile","filedata","userinfo","classUrl","methodUrl","screenName","showMore","render","subFields","LABEL","nsubsampleneed","nneedsubsample","VALUE","nformcode","SAMPLEREGISTRATION","moreField","unshift","addFileId","controlMap","has","addName","get","ncontrolcode","editFileId","editName","deleteFileId","deleteName","viewFileId","viewName","mandatoryFields","nattachmenttypecode","LINK","userRoleControlRights","indexOf","ncontrolCode","modalName","masterList","masterAlertStatus","attachments","deleteParam","editParam","fetchRecord","mainField","settings","masterStatus","linkMaster","editFiles","selectedListName","displayName","componentDidUpdate","previousProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport ListAttachment from '../../../components/ListAttachment';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport AddAttachment from './AddAttachment';\r\nimport {\r\n    updateStore, getAttachmentCombo, validateEsignCredential, crudMaster, viewAttachment, deleteAttachment\r\n} from '../../../actions'\r\nimport { connect } from 'react-redux';\r\nimport { attachmentType, designProperties, transactionStatus } from '../../../components/Enumeration';\r\nimport Esign from '../../audittrail/Esign';\r\nimport { QUALISFORMS } from '../../../components/Enumeration';\r\nimport { deleteAttachmentDropZone, onDropAttachFileList } from '../../../components/CommonScript';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Attachments extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore: {},\r\n            selectedRecord: {}\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let subFields = this.props.subFields ? this.props.subFields : [\r\n            ({ [designProperties.LABEL]:  `${this.props.nsubsampleneed && this.props.nsubsampleneed.nneedsubsample ? \"IDS_SAMPLEARNO\" : \"IDS_ARNO\"}`}),\r\n            {[designProperties.VALUE]: `${this.props.screenName === 'IDS_SAMPLEATTACHMENTS' \r\n                    ? this.props.Login.userInfo && this.props.Login.userInfo.nformcode === QUALISFORMS.SAMPLEREGISTRATION \r\n                            ? \"groupingField\" : \"sarno\" \r\n                    : this.props.Login.screenName === 'IDS_SUBSAMPLEATTACHMENTS' \r\n                    ? this.props.Login.userInfo && this.props.Login.userInfo.nformcode === QUALISFORMS.SAMPLEREGISTRATION ?\r\n                    \"groupingField2\":\"samplearno\" : \r\n                               \"stestsynonym\"}` },\r\n            { [designProperties.VALUE]: \"screateddate\" },\r\n           // { [designProperties.VALUE]: \"nfilesize\", \"fieldType\": \"size\" }\r\n        ];\r\n        let moreField = this.props.moreField ? this.props.moreField : [\r\n            { [designProperties.LABEL]: \"IDS_SCREENNAME\", [designProperties.VALUE]: \"sdisplayname\" },\r\n            { [designProperties.LABEL]: \"IDS_USERNAME\", [designProperties.VALUE]: \"susername\" },\r\n            { [designProperties.LABEL]: \"IDS_USERROLE\", [designProperties.VALUE]: \"suserrolename\" },\r\n            { [designProperties.LABEL]: \"IDS_DESCRIPTION\", [designProperties.VALUE]: \"sdescription\" }\r\n        ];\r\n        if (this.props.moreField===undefined && this.props.screenName === 'IDS_TESTATTACHMENTS') {\r\n            moreField.unshift({\r\n             [designProperties.LABEL]: this.props.nsubsampleneed && `${this.props.nsubsampleneed.nneedsubsample ? \"IDS_SAMPLEARNO\" : \"IDS_ARNO\"}`, \r\n             [designProperties.VALUE]: this.props.nsubsampleneed && `${this.props.nsubsampleneed.nneedsubsample ? \"ssamplearno\" : \"sarno\"}` })\r\n        };\r\n        let addFileId = this.props.controlMap.has(this.props.addName) && this.props.controlMap.get(this.props.addName).ncontrolcode;\r\n        let editFileId = this.props.controlMap.has(this.props.editName) && this.props.controlMap.get(this.props.editName).ncontrolcode;\r\n        let deleteFileId = this.props.controlMap.has(this.props.deleteName) && this.props.controlMap.get(this.props.deleteName).ncontrolcode;\r\n        let viewFileId = this.props.controlMap.has(this.props.viewName) && this.props.controlMap.get(this.props.viewName).ncontrolcode;\r\n        let mandatoryFields = [];\r\n        if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n            ];\r\n        } else {\r\n           // if (this.props.Login.operation !== 'update') {\r\n                mandatoryFields = [\r\n                    { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\" , \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"file\"},\r\n                ];\r\n           // }\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"actions-stripe border-bottom\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <Nav.Link name={`add_${this.props.Login.screenName}_file`} className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addFileId) === -1}\r\n                            onClick={() => this.props.getAttachmentCombo({ userInfo: this.props.Login.userInfo, operation: \"create\", ncontrolCode: addFileId, screenName: this.props.screenName, modalName: \"openAttachmentModal\", masterList: this.props.masterList, masterAlertStatus: this.props.masterAlertStatus })}>\r\n                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                            <FormattedMessage id=\"IDS_ATTACHMENT\" defaultMessage=\"Attachment\" />\r\n                        </Nav.Link>\r\n                    </div>\r\n                </div>\r\n                <ListAttachment\r\n                    attachmentList={this.props.attachments}\r\n                    fileName=\"sfilename\"\r\n                    filesize=\"nfilesize\"\r\n                    linkname=\"slinkname\"\r\n                    isjsonfield={true}\r\n                    jsonfield =\"jsondata\"\r\n                    deleteRecord={this.props.deleteAttachment}\r\n                    deleteParam={this.props.deleteParam}\r\n                    editParam={{ ...this.props.editParam, operation: \"update\", ncontrolCode: editFileId, screenName: this.props.screenName, modalName: \"openAttachmentModal\",masterList: this.props.masterList, masterAlertStatus: this.props.masterAlertStatus }}\r\n                    fetchRecord={this.props.fetchRecord}\r\n                    deleteId={deleteFileId}\r\n                    editId={editFileId}\r\n                    viewId={viewFileId}\r\n                    userRoleControlRights={this.props.userRoleControlRights}\r\n                    viewFile={this.viewFile}\r\n                    mainField={this.props.mainField}\r\n                    subFields={subFields}\r\n                    moreField={moreField}\r\n                    hidePaging={false}\r\n                    userInfo={ this.props.Login.userInfo}\r\n                    // skip={this.props.skip}\r\n                    // take={this.props.take}\r\n                    settings = {this.props.Login.settings}\r\n                />\r\n                {\r\n                    this.props.Login.openAttachmentModal ?\r\n                        <SlideOutModal\r\n                            onSaveClick={this.onSaveClick}\r\n                            operation={this.props.Login.operation}\r\n                            screenName={this.props.Login.screenName}\r\n                            closeModal={this.handleClose}\r\n                            show={this.props.Login.openAttachmentModal}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            esign={this.props.Login.loadEsign}\r\n                            validateEsign={this.validateEsign}\r\n                            masterStatus={this.props.Login.masterStatus}\r\n                            updateStore={this.props.updateStore}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            mandatoryFields={mandatoryFields}\r\n                            addComponent={this.props.Login.loadEsign ?\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                                :\r\n                                <AddAttachment\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onDrop={this.onDropFiles}\r\n                                    deleteAttachment={this.deleteAttachment}\r\n                                    jsonField = {'jsondata'}\r\n                                    actionType={this.state.actionType}\r\n                                    linkMaster={this.props.Login.linkMaster}\r\n                                    onInputOnChange={this.onAttachmentInputChange}\r\n                                    editFiles={this.props.Login.editFiles}\r\n                                    onComboChange={this.onComboChange}\r\n                                    maxSize={20}\r\n                                    fileNameLength={this.props.screenName==='IDS_TESTATTACHMENTS'?255:150}\r\n                                    maxFiles={this.props.Login.operation===\"update\"?1:3}\r\n                                    operation={this.props.Login.operation}\r\n                                    selectedListName={this.props.selectedListName}\r\n                                    displayName={this.props.displayName}\r\n                                    masterList={this.props.masterList}\r\n                                    multiple={this.props.Login.operation===\"update\"?false:true}\r\n                                />\r\n                            }\r\n                        />\r\n                        : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName]= deleteAttachmentDropZone(selectedRecord[fieldName],file)\r\n      \r\n        this.setState({\r\n            selectedRecord,  actionType:\"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n\r\n    onDropFiles = (attachedFiles, fieldName,maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName]=onDropAttachFileList(selectedRecord[fieldName],attachedFiles,maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n\r\n    onAttachmentInputChange = (event, caseNo, optional) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                if (event.target.type === 'radio') {\r\n                    selectedRecord[event.target.name] = event.target.checked === true && optional;\r\n                   // selectedRecord[\"sfilename\"] = \"\";\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            default:\r\n                selectedRecord[event.target.name] = event.target.value;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n        }\r\n    }\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onComboChange = (comboData, comboName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (comboData) {\r\n            selectedRecord[comboName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n            selectedRecord[comboName] = []\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        // const masterData = this.props.Login.masterData;\r\n        // let inputData = {}\r\n        // let inputParam = {}\r\n        // inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        // if(this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n        //     let saveParam={userInfo:this.props.Login.userInfo,\r\n        //         selectedRecord:this.state.selectedRecord,\r\n        //         masterData:this.props.Login.masterData,\r\n        //         saveType, formRef,\r\n        //         operation:this.props.Login.operation,\r\n        //         selectedMaster:this.props.selectedMaster\r\n        //     }\r\n        //     inputParam = onSaveSampleAttachment(saveParam,this.props.selectedMaster);\r\n        // }else if(this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n        //     let saveParam={userInfo:this.props.Login.userInfo,\r\n        //         selectedRecord:this.state.selectedRecord,\r\n        //         masterData:this.props.Login.masterData,\r\n        //         saveType, formRef,\r\n        //         operation:this.props.Login.operation,\r\n        //         selectedMaster:this.props.selectedMaster\r\n        //     }\r\n        //     inputParam = onSaveTestAttachment(saveParam,this.props.selectedMaster);\r\n        this.props.onSaveClick(saveType, formRef, this.state.selectedRecord)\r\n        // }\r\n        // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             loadEsign: true,\r\n        //             screenData: { inputParam, masterData },\r\n        //             operation: this.props.Login.operation,\r\n        //             screenName: this.props.Login.screenName,\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n        // }\r\n    }\r\n    handleClose = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openAttachmentModal = this.props.Login.openAttachmentModal\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let operation = this.props.Login.operation;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openAttachmentModal = false;\r\n                selectedRecord = {};\r\n                operation = undefined;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord[\"esigncomments\"] = \"\";\r\n                selectedRecord[\"esignpassword\"] = \"\";\r\n            }\r\n        }\r\n        else {\r\n            openAttachmentModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openAttachmentModal, loadEsign, selectedRecord, selectedParamId: null, operation }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if (this.props.Login.operation === 'dynamic') {\r\n            this.props.validateEsignforApproval(inputParam, \"openChildModal\");\r\n        } else {\r\n            this.props.validateEsignCredential(inputParam, \"openAttachmentModal\");\r\n        }\r\n    }\r\n    viewFile = (filedata) => {\r\n        const inputParam = {\r\n            inputData: {\r\n                file: filedata,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"attachment\",\r\n            operation: \"view\",\r\n            methodUrl: this.props.methodUrl,\r\n            screenName: this.props.Login.screenName\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateStore, viewAttachment, validateEsignCredential, crudMaster, getAttachmentCombo, deleteAttachment\r\n})(injectIntl(Attachments));"]},"metadata":{},"sourceType":"module"}