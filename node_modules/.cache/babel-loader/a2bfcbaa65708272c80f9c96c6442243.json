{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\dashboard\\\\BuildQuery.js\";\nimport { faGripVertical, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { BuilderBorder, ContionalButton, DeleteRule } from './Sqlbuilder.styled';\nimport '../../assets/styles/querybuilder.css';\nimport { ColumnType } from '../../components/Enumeration';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport { stringOperatorData, conditionalOperatorData, numericOperatorData, joinConditionData } from './QueryBuilderData';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\n\nconst BuildQuery = props => {\n  // function createRuleDesign(count) {\n  //     const design = [];\n  //     for(let parentIndex=1; parentIndex<=count; parentIndex++) {\n  //         const foreignTableCount = props.foreignTableCount[parentIndex]? props.foreignTableCount[parentIndex]: 1;\n  //         design.push(\n  //             <BuilderBorder key={`parentkey_${parentIndex}`}>\n  //                 <Row className=\"mt-3\">\n  //                     {/* <Col md={1}> */}\n  //                         <DeleteRule key={`deletekey_${parentIndex}`} onClick={()=>props.deleteRule(parentIndex)}>\n  //                             <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\n  //                         </DeleteRule>\n  //                     {/* </Col> */}\n  //                     <Col md={2} key={`tablekey_${parentIndex}`}>\n  //                         <FormSelectSearch\n  //                             formGroupClassName=\"remove-floating-label-margin\"\n  //                             formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\n  //                             isSearchable={ true }\n  //                             name={ `stablename_${parentIndex}` }\n  //                             placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\n  //                             showOption={ true }\n  //                             options={ props.databaseTableList }\n  //                             optionId='stablename'\n  //                             optionValue='displayname'\n  //                             value={ props.selectedRecord[`stablename_${parentIndex}`] || \"\" }\n  //                             onChange={ value => props.onTableChange(value, `stablename_${parentIndex}`, parentIndex) }\n  //                         >\n  //                         </FormSelectSearch>\n  //                     </Col>\n  //                     <Col md={2} key={`columnkey_${parentIndex}`}>\n  //                         <FormSelectSearch\n  //                             formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n  //                             isSearchable={ true }\n  //                             name={ `columnname_${parentIndex}` }\n  //                             placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n  //                             showOption={ true }\n  //                             options={ props.tableColumnList[parentIndex] || [] }\n  //                             optionId='columnname'\n  //                             optionValue='displayname'\n  //                             value={ props.selectedRecord[`columnname_${parentIndex}`] || \"\" }\n  //                             onChange={ value => props.onColumnChange(value, `columnname_${parentIndex}`, parentIndex) }\n  //                         >\n  //                         </FormSelectSearch>\n  //                     </Col>\n  //                     {\n  //                         props.selectedRecord[`columnname_${parentIndex}`] ? props.selectedRecord[`columnname_${parentIndex}`].items.columntype === ColumnType.TEXTINPUT ? \n  //                         <>\n  //                             <Col md={2}>\n  //                                 <FormSelectSearch\n  //                                     formLabel=\"\"\n  //                                     isSearchable={true}\n  //                                     name={ `ssymbolname_${parentIndex}` }\n  //                                     placeholder=\"\"\n  //                                     showOption={true}\n  //                                     options={props.validationData}\n  //                                     optionId='nvalidationcode'\n  //                                     optionValue='ssymbolname'\n  //                                     value={props.selectedRecord[`ssymbolname_${parentIndex}`] || \"\"}\n  //                                     onChange={value => props.onSymbolChange(value, `ssymbolname_${parentIndex}`, parentIndex)}\n  //                                 >\n  //                                 </FormSelectSearch>\n  //                             </Col>\n  //                             <Col md={2}>\n  //                                 <FormInput\n  //                                     name={ `sinputname_${parentIndex}` }\n  //                                     label={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\n  //                                     type=\"text\"\n  //                                     onChange={(event) => props.onInputChange(event, parentIndex)}\n  //                                     placeholder={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\n  //                                     value={ props.selectedRecord?props.selectedRecord[`sinputname_${parentIndex}`]:\"\" }\n  //                                     maxLength={100}\n  //                                 />\n  //                             </Col>\n  //                        </>\n  //                         : props.selectedRecord[`columnname_${parentIndex}`].items.columntype === ColumnType.COMBO ?\n  //                          createForeignTableDesign(foreignTableCount) \n  //                         : \"\"\n  //                         :\"\"\n  //                     }\n  //                 </Row>\n  //             </BuilderBorder>\n  //         )\n  //     }\n  //     return design;\n  // }\n  // function createForeignTableDesign(foreignTableCount, parentIndex) {\n  //     const fDesign = [];\n  //     for(let childIndex=1; childIndex < foreignTableCount; childIndex++) {\n  //         fDesign.push(\n  //             <>\n  //                {\n  //                     <>\n  //                         <Col md={1}>\n  //                             <FormSelectSearch\n  //                                 formLabel=\"\"\n  //                                 isSearchable={true}\n  //                                 name={ `ssymbolname_${parentIndex+''+childIndex}` }\n  //                                 placeholder=\"\"\n  //                                 showOption={true}\n  //                                 options={props.validationData}\n  //                                 optionId='nvalidationcode'\n  //                                 optionValue='ssymbolname'\n  //                                 value={props.selectedRecord[`ssymbolname_${parentIndex+''+childIndex}`]}\n  //                                 onChange={value => props.onSymbolChange(value, `ssymbolname_${parentIndex+''+childIndex}`, parentIndex+''+childIndex)}\n  //                             >\n  //                             </FormSelectSearch>\n  //                         </Col>\n  //                         <Col md={2}>\n  //                             <FormSelectSearch\n  //                                 formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n  //                                 isSearchable={ true }\n  //                                 name={ `foreigncolumnname_${parentIndex+''+childIndex}` }\n  //                                 placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n  //                                 showOption={ true }\n  //                                 options={ props.tableColumnList[parentIndex+''+childIndex] || [] }\n  //                                 optionId='columnname'\n  //                                 optionValue='displayname'\n  //                                 value={ props.selectedRecord[`foreigncolumnname_${parentIndex+''+childIndex}`] }\n  //                                 onChange={ value => props.onColumnChange(value, `foreigncolumnname_${parentIndex+''+childIndex}`, parentIndex+''+childIndex) }\n  //                             >\n  //                             </FormSelectSearch>\n  //                         </Col>\n  //                     </>\n  //                 }\n  //             </>\n  //         )\n  //     }\n  //     return fDesign;\n  // }\n  function createViewRules() {\n    let indexCount = 0;\n    let design = [];\n    props.addRuleList.map((items, index) => {\n      let stringOperators = stringOperatorData;\n\n      if (props.selectedRecord[`columnname_${index}`] && !props.selectedRecord[`columnname_${index}`].items.needmasterdata && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT) {\n        const temp = stringOperators.filter(item => {\n          if (item.items.symbolType !== 6) {\n            return item;\n          }\n        });\n        stringOperators = temp;\n      }\n\n      if (items > -1) {\n        indexCount = indexCount + 1;\n      }\n\n      ;\n      design.push( /*#__PURE__*/React.createElement(React.Fragment, null, items > -1 ? /*#__PURE__*/React.createElement(React.Fragment, null, indexCount !== 1 ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[`button_and_${index}`] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 1,\n        onClick: () => props.onConditionClick(`button_and_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_AND\",\n        defaultMessage: \"And\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 35\n        }\n      }))), /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[`button_or_${index}`] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 0,\n        onClick: () => props.onConditionClick(`button_or_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_OR\",\n        defaultMessage: \"Or\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 35\n        }\n      })))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(BuilderBorder, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DeleteRule, {\n        marginLeft: 1,\n        onClick: () => props.deleteRule(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTrashAlt,\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        isSearchable: true,\n        name: `columnname_${index}`,\n        showOption: true,\n        options: props.viewColumnListByRule[index] || [],\n        optionId: \"columnname\",\n        optionValue: \"displayname\",\n        value: props.selectedRecord[`columnname_${index}`] || \"\",\n        onChange: value => props.onRuleChange(value, `columnname_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 33\n        }\n      })), props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: \"\",\n        isSearchable: true,\n        name: `ssymbolname_${index}`,\n        placeholder: \"\",\n        showOption: true,\n        options: stringOperators,\n        optionId: \"nvalidationcode\",\n        optionValue: \"ssymbolname\",\n        value: props.selectedRecord[`ssymbolname_${index}`] || \"\",\n        onChange: value => props.onSymbolChange(value, `ssymbolname_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 37\n        }\n      })), props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible ? /*#__PURE__*/React.createElement(React.Fragment, null, props.selectedRecord[`columnname_${index}`].items.needmasterdata ? /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        isSearchable: true,\n        name: `${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`,\n        showOption: true,\n        options: props.viewMasterListByRule[index] || [],\n        optionId: props.selectedRecord[`columnname_${index}`].items.valuemember,\n        optionValue: props.selectedRecord[`columnname_${index}`].items.displaymember,\n        value: props.selectedRecord[`${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`] || \"\",\n        isMulti: props.selectedRecord[`ssymbolname_${index}`].items.ismulti,\n        onChange: value => props.onMasterDataChange(value, `${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 37\n        }\n      })) : /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        name: `sinputname_${index}`,\n        type: \"text\",\n        onChange: event => props.onInputChange(event, 1),\n        value: props.selectedRecord ? props.selectedRecord[`sinputname_${index}`] : \"\",\n        maxLength: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 37\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, null)) : props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.NUMERICINPUT ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: \"\",\n        isSearchable: true,\n        name: `ssymbolname_${index}`,\n        placeholder: \"\",\n        showOption: true,\n        options: numericOperatorData,\n        optionId: \"nvalidationcode\",\n        optionValue: \"ssymbolname\",\n        value: props.selectedRecord[`ssymbolname_${index}`] || \"\",\n        onChange: value => props.onSymbolChange(value, `ssymbolname_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 37\n        }\n      })), props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        label: props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ? props.intl.formatMessage({\n          id: \"IDS_FROM\"\n        }) : \"\",\n        name: `snumericinput_${index}`,\n        type: \"text\",\n        required: false,\n        isMandatory: false,\n        value: props.selectedRecord[`snumericinput_${index}`] ? props.selectedRecord[`snumericinput_${index}`] : \"\",\n        onChange: event => props.onInputChange(event, 2),\n        maxLength: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 41\n        }\n      })), props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ? /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        label: props.intl.formatMessage({\n          id: \"IDS_TO\"\n        }),\n        name: `snumericinputtwo_${index}`,\n        type: \"text\",\n        required: false,\n        isMandatory: false,\n        value: props.selectedRecord[`snumericinputtwo_${index}`] ? props.selectedRecord[`snumericinputtwo_${index}`] : \"\",\n        onChange: event => props.onInputChange(event, 2),\n        maxLength: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 45\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null)) : props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.COMBO ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: \"\",\n        isSearchable: true,\n        name: `ssymbolname_${index}`,\n        placeholder: \"\",\n        showOption: true,\n        options: conditionalOperatorData,\n        optionId: \"nvalidationcode\",\n        optionValue: \"ssymbolname\",\n        value: props.selectedRecord[`ssymbolname_${index}`] || \"\",\n        onChange: value => props.onSymbolChange(value, `ssymbolname_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 37\n        }\n      })), props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ? /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: \"\",\n        isSearchable: true,\n        name: `${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`,\n        placeholder: \"\",\n        showOption: true,\n        options: props.masterdata && props.masterdata[index] || [],\n        optionId: props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname,\n        optionValue: \"sdisplayname\",\n        value: props.selectedRecord[`${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`] || \"\",\n        onChange: value => props.onMasterDataChange(value, `${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`, index),\n        isMulti: props.selectedRecord[`ssymbolname_${index}`].items.ismulti,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 37\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null)) : props.selectedRecord[`columnname_${index}`] && (props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME || props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATE) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: \"\",\n        isSearchable: true,\n        name: `ssymbolname_${index}`,\n        placeholder: \"\",\n        showOption: true,\n        options: numericOperatorData,\n        optionId: \"nvalidationcode\",\n        optionValue: \"ssymbolname\",\n        value: props.selectedRecord[`ssymbolname_${index}`] || \"\",\n        onChange: value => props.onSymbolChange(value, `ssymbolname_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 37\n        }\n      })), props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(DateTimePicker, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        label: props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ? props.intl.formatMessage({\n          id: \"IDS_FROM\"\n        }) : \"\",\n        name: `dateinput_${index}`,\n        className: \"form-control\",\n        placeholderText: \"Select date..\",\n        selected: props.selectedRecord[`dateinput_${index}`],\n        dateFormat: props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"],\n        isClearable: false,\n        showTimeInput: props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? true : false,\n        onChange: date => props.handleFilterDateChange(`dateinput_${index}`, date),\n        value: props.selectedRecord[`dateinput_${index}`] || \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 41\n        }\n      })), props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ? /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(DateTimePicker, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        label: props.intl.formatMessage({\n          id: \"IDS_TO\"\n        }),\n        name: `dateinputtwo_${index}`,\n        className: \"form-control\",\n        placeholderText: \"Select date..\",\n        selected: props.selectedRecord[`dateinputtwo_${index}`],\n        dateFormat: props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"],\n        isClearable: false,\n        showTimeInput: props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? true : false,\n        onChange: date => props.handleFilterDateChange(`dateinputtwo_${index}`, date),\n        value: props.selectedRecord[`dateinputtwo_${index}`] || \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 45\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null)))) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n    });\n    return design;\n  }\n\n  function createSqlRules() {\n    let indexCount = 0;\n    let design = [];\n    props.addRuleList.map((items, index) => {\n      const stringOperators = props.selectedRecord[`columnname_${index}`].items && props.selectedRecord[`columnname_${index}`].items.needmasterdata ? stringOperatorData : stringOperatorData.map(item => {\n        return item.symbolType !== 6;\n      });\n\n      if (items > -1) {\n        indexCount = indexCount + 1;\n      }\n\n      ;\n      design.push( /*#__PURE__*/React.createElement(React.Fragment, null, items > -1 ? /*#__PURE__*/React.createElement(React.Fragment, null, indexCount !== 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[`button_and_${index}`] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 1,\n        onClick: () => props.onConditionClick(`button_and_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_AND\",\n        defaultMessage: \"And\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 39\n        }\n      }))), /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[`button_or_${index}`] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 0,\n        onClick: () => props.onConditionClick(`button_or_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_OR\",\n        defaultMessage: \"Or\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 39\n        }\n      }))))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(BuilderBorder, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DeleteRule, {\n        marginLeft: 1,\n        onClick: () => props.deleteRule(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTrashAlt,\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        key: `tablekey_${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\" // formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\n        ,\n        isSearchable: true,\n        name: `stablename_${index}` // placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\n        ,\n        showOption: true,\n        options: props.databaseTableList,\n        optionId: \"stablename\",\n        optionValue: \"displayname\",\n        value: props.selectedRecord[`stablename_${index}`] || \"\",\n        onChange: value => props.onTableChange(value, `stablename_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        key: `columnkey_${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\" // formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n        ,\n        isSearchable: true,\n        name: `columnname_${index}` // placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n        ,\n        showOption: true,\n        options: props.tableColumnList[index] || [],\n        optionId: \"columnname\",\n        optionValue: \"displayname\",\n        value: props.selectedRecord[`columnname_${index}`] || \"\" // onChange={ value => props.onColumnChange(value, `columnname_${index}`, index) }\n        ,\n        onChange: value => props.onRuleChange(value, `columnname_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 33\n        }\n      })), props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.COMBO ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: \"\",\n        isSearchable: true,\n        name: `ssymbolname_${index}`,\n        placeholder: \"\",\n        showOption: true,\n        options: joinConditionData,\n        optionId: \"nvalidationcode\",\n        optionValue: \"ssymbolname\",\n        value: props.selectedRecord[`ssymbolname_${index}`],\n        onChange: value => props.onSymbolChange(value, `ssymbolname_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        key: `foreigncolumnkey_${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\" // formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n        ,\n        isSearchable: true,\n        name: `foreigncolumnname_${index}` // placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n        ,\n        showOption: true,\n        options: props.foreignTableColumnList[index] || [],\n        optionId: \"columnname\",\n        optionValue: \"displayname\",\n        value: props.selectedRecord[`foreigncolumnname_${index}`] || \"\" // onChange={ value => props.onColumnChange(value, `columnname_${index}`, index) }\n        ,\n        onChange: value => props.onRuleChange(value, `foreigncolumnname_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 37\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, null), props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: \"\",\n        isSearchable: true,\n        name: `ssymbolname_${index}`,\n        placeholder: \"\",\n        showOption: true,\n        options: stringOperators,\n        optionId: \"nvalidationcode\",\n        optionValue: \"ssymbolname\",\n        value: props.selectedRecord[`ssymbolname_${index}`] || \"\",\n        onChange: value => props.onSymbolChange(value, `ssymbolname_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 37\n        }\n      })), props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ? /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        name: `sinputname_${index}` // label={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\n        ,\n        type: \"text\",\n        onChange: event => props.onInputChange(event, 1) // placeholder={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\n        ,\n        value: props.selectedRecord ? props.selectedRecord[`sinputname_${index}`] : \"\",\n        maxLength: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 37\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null)) : props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.NUMERICINPUT ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: \"\",\n        isSearchable: true,\n        name: `ssymbolname_${index}`,\n        placeholder: \"\",\n        showOption: true,\n        options: numericOperatorData,\n        optionId: \"nvalidationcode\",\n        optionValue: \"ssymbolname\",\n        value: props.selectedRecord[`ssymbolname_${index}`] || \"\",\n        onChange: value => props.onSymbolChange(value, `ssymbolname_${index}`, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 37\n        }\n      })), props.selectedRecord[`ssymbolname_${index}`] ? /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        name: `snumericinput_${index}`,\n        label: props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ? props.intl.formatMessage({\n          id: \"IDS_TO\"\n        }) : \"\",\n        type: \"text\",\n        required: false,\n        isMandatory: false,\n        value: props.selectedRecord[`snumericinput_${index}`] ? props.selectedRecord[`snumericinput_${index}`] : \"\",\n        onChange: event => props.onInputChange(event, 2),\n        maxLength: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 41\n        }\n      })) : props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ? /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        label: props.intl.formatMessage({\n          id: \"IDS_TO\"\n        }),\n        name: `snumericinputtwo_${index}`,\n        type: \"text\",\n        required: false,\n        isMandatory: false,\n        value: props.selectedRecord[`snumericinputtwo_${index}`] ? props.selectedRecord[`snumericinputtwo_${index}`] : \"\",\n        onChange: event => props.onInputChange(event, 2),\n        maxLength: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 45\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null)))) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n    });\n    return design;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    inline: true,\n    label: props.intl.formatMessage({\n      id: \"IDS_VIEWS\"\n    }),\n    name: \"viewquery\",\n    type: 'radio',\n    checked: !props.sqlQuery,\n    disabled: !props.sqlQuery,\n    id: `inline-view`,\n    onClick: () => props.onQueryTypeOnclick(\"views\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    inline: true,\n    label: props.intl.formatMessage({\n      id: \"IDS_SQL\"\n    }),\n    name: \"sqlquery\",\n    type: 'radio',\n    checked: props.sqlQuery,\n    disabled: props.sqlQuery,\n    id: `inline-sql`,\n    onClick: () => props.onQueryTypeOnclick(\"sql\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.clearRule(),\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_CLEAR\",\n    defaultMessage: \"Clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.resetRule(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_RESET\",\n    defaultMessage: \"Reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 17\n    }\n  }, props.sqlQuery ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.addRule(\"sql\"),\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 29\n    }\n  }, '+', \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_ADDRULE\",\n    defaultMessage: \"Add Rule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.onGenerateQuery(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_GENERATEQUERY\",\n    defaultMessage: \"Generate Query\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null))), props.sqlQuery === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 25\n    }\n  }, props.addRuleList.length > 0 ? createSqlRules() : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 33\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_QUERY\"\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.onExecuteRule(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_EXECUTE\",\n    defaultMessage: \"Execute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 33\n    }\n  }, props.selectedRecord && props.selectedRecord[\"sdisplayquery\"] ? props.selectedRecord[\"sdisplayquery\"] : \"No Query\"))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formGroupClassName: \"remove-floating-label-margin\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_VIEWS\"\n    }),\n    isSearchable: true,\n    name: \"sviewname\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_VIEWS\"\n    }),\n    showOption: true,\n    options: props.databaseviewList || [],\n    optionId: \"sviewname\",\n    optionValue: \"displayname\",\n    value: props.selectedRecord[\"sviewname\"] || \"\",\n    onChange: value => props.onViewComboChange(value, \"sviewname\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.addRule(\"views\"),\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 29\n    }\n  }, '+', \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_ADDRULE\",\n    defaultMessage: \"Add Rule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 39\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 25\n    }\n  }, props.addRuleList.length > 0 ? createViewRules() : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 33\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_QUERY\"\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.onExecuteRule(),\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_EXECUTE\",\n    defaultMessage: \"Execute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 33\n    }\n  }, props.selectedRecord && props.selectedRecord[\"sdisplayquery\"] ? props.selectedRecord[\"sdisplayquery\"] : \"No Query\"))))));\n};\n\nexport default injectIntl(BuildQuery);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/dashboard/BuildQuery.js"],"names":["faGripVertical","faTrashAlt","FontAwesomeIcon","React","Button","Card","Col","Form","Row","FormattedMessage","injectIntl","FormSelectSearch","FormInput","BuilderBorder","ContionalButton","DeleteRule","ColumnType","FormTextarea","stringOperatorData","conditionalOperatorData","numericOperatorData","joinConditionData","CustomSwitch","DateTimePicker","BuildQuery","props","createViewRules","indexCount","design","addRuleList","map","items","index","stringOperators","selectedRecord","needmasterdata","columntype","TEXTINPUT","temp","filter","item","symbolType","push","onConditionClick","deleteRule","viewColumnListByRule","value","onRuleChange","onSymbolChange","isInputVisible","valuemember","viewMasterListByRule","displaymember","ismulti","onMasterDataChange","event","onInputChange","NUMERICINPUT","intl","formatMessage","id","COMBO","sforeigncolumnname","masterdata","DATATIME","DATE","userInfo","date","handleFilterDateChange","createSqlRules","databaseTableList","onTableChange","tableColumnList","foreignTableColumnList","sqlQuery","onQueryTypeOnclick","clearRule","resetRule","addRule","onGenerateQuery","length","onExecuteRule","databaseviewList","onViewComboChange"],"mappings":";AAAA,SAASA,cAAT,EAAyBC,UAAzB,QAA2C,mCAA3C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCC,GAAlC,QAA6C,iBAA7C;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,UAAzC,QAA2D,qBAA3D;AACA,OAAO,sCAAP;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,SAASC,kBAAT,EAA6BC,uBAA7B,EAAsDC,mBAAtD,EAA2EC,iBAA3E,QAAoG,oBAApG;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,cAAP,MAA2B,8DAA3B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;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","sourcesContent":["import { faGripVertical, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { BuilderBorder, ContionalButton, DeleteRule } from './Sqlbuilder.styled';\r\nimport '../../assets/styles/querybuilder.css';\r\nimport { ColumnType } from '../../components/Enumeration';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { stringOperatorData, conditionalOperatorData, numericOperatorData, joinConditionData } from './QueryBuilderData';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nconst BuildQuery = (props) => {\r\n    \r\n    // function createRuleDesign(count) {\r\n    //     const design = [];\r\n    //     for(let parentIndex=1; parentIndex<=count; parentIndex++) {\r\n    //         const foreignTableCount = props.foreignTableCount[parentIndex]? props.foreignTableCount[parentIndex]: 1;\r\n    //         design.push(\r\n    //             <BuilderBorder key={`parentkey_${parentIndex}`}>\r\n    //                 <Row className=\"mt-3\">\r\n    //                     {/* <Col md={1}> */}\r\n    //                         <DeleteRule key={`deletekey_${parentIndex}`} onClick={()=>props.deleteRule(parentIndex)}>\r\n    //                             <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\r\n    //                         </DeleteRule>\r\n    //                     {/* </Col> */}\r\n    //                     <Col md={2} key={`tablekey_${parentIndex}`}>\r\n    //                         <FormSelectSearch\r\n    //                             formGroupClassName=\"remove-floating-label-margin\"\r\n    //                             formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n    //                             isSearchable={ true }\r\n    //                             name={ `stablename_${parentIndex}` }\r\n    //                             placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n    //                             showOption={ true }\r\n    //                             options={ props.databaseTableList }\r\n    //                             optionId='stablename'\r\n    //                             optionValue='displayname'\r\n    //                             value={ props.selectedRecord[`stablename_${parentIndex}`] || \"\" }\r\n    //                             onChange={ value => props.onTableChange(value, `stablename_${parentIndex}`, parentIndex) }\r\n    //                         >\r\n    //                         </FormSelectSearch>\r\n    //                     </Col>\r\n    //                     <Col md={2} key={`columnkey_${parentIndex}`}>\r\n    //                         <FormSelectSearch\r\n    //                             formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n    //                             isSearchable={ true }\r\n    //                             name={ `columnname_${parentIndex}` }\r\n    //                             placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n    //                             showOption={ true }\r\n    //                             options={ props.tableColumnList[parentIndex] || [] }\r\n    //                             optionId='columnname'\r\n    //                             optionValue='displayname'\r\n    //                             value={ props.selectedRecord[`columnname_${parentIndex}`] || \"\" }\r\n    //                             onChange={ value => props.onColumnChange(value, `columnname_${parentIndex}`, parentIndex) }\r\n    //                         >\r\n    //                         </FormSelectSearch>\r\n    //                     </Col>\r\n    //                     {\r\n    //                         props.selectedRecord[`columnname_${parentIndex}`] ? props.selectedRecord[`columnname_${parentIndex}`].items.columntype === ColumnType.TEXTINPUT ? \r\n    //                         <>\r\n    //                             <Col md={2}>\r\n    //                                 <FormSelectSearch\r\n    //                                     formLabel=\"\"\r\n    //                                     isSearchable={true}\r\n    //                                     name={ `ssymbolname_${parentIndex}` }\r\n    //                                     placeholder=\"\"\r\n    //                                     showOption={true}\r\n    //                                     options={props.validationData}\r\n    //                                     optionId='nvalidationcode'\r\n    //                                     optionValue='ssymbolname'\r\n    //                                     value={props.selectedRecord[`ssymbolname_${parentIndex}`] || \"\"}\r\n    //                                     onChange={value => props.onSymbolChange(value, `ssymbolname_${parentIndex}`, parentIndex)}\r\n    //                                 >\r\n    //                                 </FormSelectSearch>\r\n    //                             </Col>\r\n    //                             <Col md={2}>\r\n    //                                 <FormInput\r\n    //                                     name={ `sinputname_${parentIndex}` }\r\n    //                                     label={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\r\n    //                                     type=\"text\"\r\n    //                                     onChange={(event) => props.onInputChange(event, parentIndex)}\r\n    //                                     placeholder={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\r\n    //                                     value={ props.selectedRecord?props.selectedRecord[`sinputname_${parentIndex}`]:\"\" }\r\n    //                                     maxLength={100}\r\n    //                                 />\r\n    //                             </Col>\r\n                                \r\n    //                        </>\r\n    //                         : props.selectedRecord[`columnname_${parentIndex}`].items.columntype === ColumnType.COMBO ?\r\n\r\n    //                          createForeignTableDesign(foreignTableCount) \r\n    //                         : \"\"\r\n    //                         :\"\"\r\n    //                     }\r\n    //                 </Row>\r\n                    \r\n    //             </BuilderBorder>\r\n    //         )\r\n    //     }\r\n    //     return design;\r\n    // }\r\n\r\n    // function createForeignTableDesign(foreignTableCount, parentIndex) {\r\n    //     const fDesign = [];\r\n    //     for(let childIndex=1; childIndex < foreignTableCount; childIndex++) {\r\n    //         fDesign.push(\r\n    //             <>\r\n    //                {\r\n    //                     <>\r\n    //                         <Col md={1}>\r\n    //                             <FormSelectSearch\r\n    //                                 formLabel=\"\"\r\n    //                                 isSearchable={true}\r\n    //                                 name={ `ssymbolname_${parentIndex+''+childIndex}` }\r\n    //                                 placeholder=\"\"\r\n    //                                 showOption={true}\r\n    //                                 options={props.validationData}\r\n    //                                 optionId='nvalidationcode'\r\n    //                                 optionValue='ssymbolname'\r\n    //                                 value={props.selectedRecord[`ssymbolname_${parentIndex+''+childIndex}`]}\r\n    //                                 onChange={value => props.onSymbolChange(value, `ssymbolname_${parentIndex+''+childIndex}`, parentIndex+''+childIndex)}\r\n    //                             >\r\n    //                             </FormSelectSearch>\r\n    //                         </Col>\r\n    //                         <Col md={2}>\r\n    //                             <FormSelectSearch\r\n    //                                 formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n    //                                 isSearchable={ true }\r\n    //                                 name={ `foreigncolumnname_${parentIndex+''+childIndex}` }\r\n    //                                 placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n    //                                 showOption={ true }\r\n    //                                 options={ props.tableColumnList[parentIndex+''+childIndex] || [] }\r\n    //                                 optionId='columnname'\r\n    //                                 optionValue='displayname'\r\n    //                                 value={ props.selectedRecord[`foreigncolumnname_${parentIndex+''+childIndex}`] }\r\n    //                                 onChange={ value => props.onColumnChange(value, `foreigncolumnname_${parentIndex+''+childIndex}`, parentIndex+''+childIndex) }\r\n    //                             >\r\n    //                             </FormSelectSearch>\r\n    //                         </Col>\r\n    //                     </>\r\n    //                 }\r\n                    \r\n    //             </>\r\n    //         )\r\n    //     }\r\n    //     return fDesign;\r\n    // }\r\n\r\n    function createViewRules() {\r\n        let indexCount = 0;\r\n        let design = [];\r\n        props.addRuleList.map((items, index) => {\r\n\r\n            let stringOperators = stringOperatorData;\r\n            if(props.selectedRecord[`columnname_${index}`]\r\n            && !props.selectedRecord[`columnname_${index}`].items.needmasterdata \r\n            && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT) {\r\n                const temp = stringOperators.filter(item=> { \r\n                    if(item.items.symbolType !== 6){ \r\n                        return item \r\n                    }\r\n                });\r\n                stringOperators = temp;\r\n            }\r\n\r\n            if(items > -1) { \r\n                indexCount = indexCount + 1;\r\n            };\r\n            design.push(\r\n            <>\r\n                { items > -1? \r\n                <>\r\n                    { indexCount !== 1? \r\n                    <Row>\r\n                        {/* <ContionalButton type=\"button\" className=\"builder-btn-primary\" marginLeft={1} \r\n                            onClick={()=>props.onConditionClick1(`button_${index}`, 'not')}>\r\n                            <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"Not\" /></span>\r\n                        </ContionalButton> */}\r\n                        <ContionalButton type=\"button\" className={props.selectedRecord[`button_and_${index}`]===true? \"builder-btn-primary\": \"\"} marginLeft={1} \r\n                            onClick={()=>props.onConditionClick(`button_and_${index}`, index)}>\r\n                            <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                        </ContionalButton>\r\n                        <ContionalButton type=\"button\" className={props.selectedRecord[`button_or_${index}`]===true? \"builder-btn-primary\": \"\"} marginLeft={0}\r\n                            onClick={()=>props.onConditionClick(`button_or_${index}`, index)}>\r\n                            <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                        </ContionalButton>\r\n                    </Row>: <></>\r\n                    }\r\n                    <BuilderBorder key={index}>\r\n                        <Row className=\"mt-3\">\r\n                            <DeleteRule marginLeft={1} onClick={()=>props.deleteRule(index)}>\r\n                                <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\r\n                            </DeleteRule>\r\n                            <Col md={4}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    isSearchable={ true }\r\n                                    name={ `columnname_${index}` }\r\n                                    showOption={ true }\r\n                                    options={ props.viewColumnListByRule[index] || [] }\r\n                                    optionId='columnname'\r\n                                    optionValue='displayname'\r\n                                    value={ props.selectedRecord[`columnname_${index}`] || \"\" }\r\n                                    onChange={ value => props.onRuleChange(value, `columnname_${index}`, index) }\r\n                                ></FormSelectSearch>\r\n                            </Col>\r\n                            { props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT ? \r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={stringOperators}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                { props.selectedRecord[`ssymbolname_${index}`] \r\n                                && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible ?\r\n                                <>\r\n                                { props.selectedRecord[`columnname_${index}`].items.needmasterdata? \r\n                                \r\n                                <Col md={4}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        isSearchable={ true }\r\n                                        name={ `${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}` }\r\n                                        showOption={ true }\r\n                                        options={ props.viewMasterListByRule[index] || [] }\r\n                                        optionId={props.selectedRecord[`columnname_${index}`].items.valuemember}\r\n                                        optionValue={props.selectedRecord[`columnname_${index}`].items.displaymember}\r\n                                        value={ props.selectedRecord[`${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`] || \"\" }\r\n                                        isMulti={props.selectedRecord[`ssymbolname_${index}`].items.ismulti}\r\n                                        onChange={ value => props.onMasterDataChange(value, `${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`, index) }\r\n                                    ></FormSelectSearch>\r\n                                </Col>:  \r\n                                <Col md={4}>\r\n                                    <FormInput\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        name={ `sinputname_${index}` }\r\n                                        type=\"text\"\r\n                                        onChange={(event) => props.onInputChange(event, 1)}\r\n                                        value={ props.selectedRecord?props.selectedRecord[`sinputname_${index}`]: \"\" }\r\n                                        maxLength={100}\r\n                                    />\r\n                                </Col>\r\n\r\n                                }\r\n                                </>\r\n                               : <></>\r\n                                }\r\n                                                                            \r\n                            </>: props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.NUMERICINPUT ? \r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={numericOperatorData}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                {props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true?\r\n                                <>\r\n                                    <Col md={2}>\r\n                                        <FormInput\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            label={props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5? props.intl.formatMessage({ id: \"IDS_FROM\"}): \"\"}\r\n                                            name={`snumericinput_${index}`}\r\n                                            type=\"text\"\r\n                                            required={false}\r\n                                            isMandatory={false}\r\n                                            value={props.selectedRecord[`snumericinput_${index}`]? props.selectedRecord[`snumericinput_${index}`]: \"\"}\r\n                                            onChange = { (event) => props.onInputChange(event, 2) }\r\n                                            maxLength={10}\r\n                                        />\r\n                                    </Col>\r\n                                    {props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5?\r\n                                    (\r\n                                        <Col md={2}>\r\n                                            <FormInput\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                label={props.intl.formatMessage({ id: \"IDS_TO\"})}\r\n                                                name={`snumericinputtwo_${index}`}\r\n                                                type=\"text\"\r\n                                                required={false}\r\n                                                isMandatory={false}\r\n                                                value={props.selectedRecord[`snumericinputtwo_${index}`]? props.selectedRecord[`snumericinputtwo_${index}`]: \"\"}\r\n                                                onChange = { (event) => props.onInputChange(event, 2) }\r\n                                                maxLength={10}\r\n                                            />\r\n                                        </Col>\r\n                                    ): <></>\r\n                                    \r\n                                }\r\n                                </>\r\n                                :<></>\r\n                                }\r\n                                \r\n                            </>: props.selectedRecord[`columnname_${index}`] \r\n                            && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.COMBO ? \r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={conditionalOperatorData}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                { props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true?\r\n                                <Col md={4}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={props.masterdata && props.masterdata[index] || []}\r\n                                        optionId={props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}\r\n                                        optionValue='sdisplayname'\r\n                                        value={props.selectedRecord[`${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`] || \"\"}\r\n                                        onChange={value => props.onMasterDataChange(value, `${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`, index)}\r\n                                        isMulti={props.selectedRecord[`ssymbolname_${index}`].items.ismulti}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>: <></>\r\n                                }\r\n                            </>: props.selectedRecord[`columnname_${index}`] \r\n                            && (props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME\r\n                            || props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATE) ? \r\n                            <>\r\n                                 <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={numericOperatorData}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                {props.selectedRecord[`ssymbolname_${index}`] \r\n                                && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ?\r\n                                <>\r\n                                    <Col md={2}>\r\n                                        <DateTimePicker\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            label={props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5? props.intl.formatMessage({ id: \"IDS_FROM\"}): \"\"}\r\n                                            name={`dateinput_${index}`}\r\n                                            className='form-control'\r\n                                            placeholderText=\"Select date..\"\r\n                                            selected={props.selectedRecord[`dateinput_${index}`]}\r\n                                            dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME? props.userInfo[\"ssitedatetime\"]: props.userInfo[\"ssitedate\"]}\r\n                                            isClearable={false}\r\n                                            showTimeInput={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME? true: false}\r\n                                            onChange={date => props.handleFilterDateChange(`dateinput_${index}`, date)}\r\n                                            value={ props.selectedRecord[`dateinput_${index}`] || \"\" }\r\n                                        />\r\n                                    </Col>\r\n                                    { props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5?\r\n                                    (\r\n                                        <Col md={2}>\r\n                                            <DateTimePicker\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                label={props.intl.formatMessage({ id: \"IDS_TO\"})}\r\n                                                name={`dateinputtwo_${index}`}\r\n                                                className='form-control'\r\n                                                placeholderText=\"Select date..\"\r\n                                                selected={props.selectedRecord[`dateinputtwo_${index}`]}\r\n                                                dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME? props.userInfo[\"ssitedatetime\"]: props.userInfo[\"ssitedate\"]}\r\n                                                isClearable={false}\r\n                                                showTimeInput={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME? true: false}\r\n                                                onChange={date => props.handleFilterDateChange(`dateinputtwo_${index}`, date)}\r\n                                                value={ props.selectedRecord[`dateinputtwo_${index}`] || \"\" }\r\n                                            />\r\n                                        </Col>\r\n                                    ): <></>\r\n                                    }\r\n                                </>\r\n                                :<></>\r\n                                }\r\n                            </>\r\n                            : <></>\r\n                            }\r\n                        </Row>\r\n                    </BuilderBorder>\r\n                </>: <></>\r\n                }\r\n            </>)\r\n            \r\n        });\r\n            \r\n        return design;\r\n    }\r\n\r\n    function createSqlRules() {\r\n        let indexCount = 0;\r\n        let design = [];\r\n        props.addRuleList.map((items, index) => {\r\n\r\n            const stringOperators = props.selectedRecord[`columnname_${index}`].items \r\n                && props.selectedRecord[`columnname_${index}`].items.needmasterdata? \r\n                stringOperatorData: stringOperatorData.map(item=> {return item.symbolType !== 6});\r\n\r\n            if(items > -1) { \r\n                indexCount = indexCount + 1;\r\n            };\r\n            design.push(\r\n            <>\r\n                { items > -1?  \r\n                <>\r\n                    { indexCount !== 1? \r\n                    <>\r\n                        <Row>\r\n                            {/* <ContionalButton type=\"button\" className=\"builder-btn-primary\" marginLeft={1} \r\n                                onClick={()=>props.onConditionClick1(`button_${index}`, 'not')}>\r\n                                <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"Not\" /></span>\r\n                            </ContionalButton> */}\r\n                            <ContionalButton type=\"button\" className={props.selectedRecord[`button_and_${index}`]===true? \"builder-btn-primary\": \"\"} marginLeft={1} \r\n                                onClick={()=>props.onConditionClick(`button_and_${index}`, index)}>\r\n                                <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                            </ContionalButton>\r\n                            <ContionalButton type=\"button\" className={props.selectedRecord[`button_or_${index}`]===true? \"builder-btn-primary\": \"\"} marginLeft={0}\r\n                                onClick={()=>props.onConditionClick(`button_or_${index}`, index)}>\r\n                                <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                            </ContionalButton>\r\n                        </Row> \r\n                    </>: <></>\r\n                    }\r\n                    <BuilderBorder key={index}>\r\n                        <Row>\r\n                            <DeleteRule marginLeft={1} onClick={()=>props.deleteRule(index)}>\r\n                                <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\r\n                            </DeleteRule>\r\n                            <Col md={2} key={`tablekey_${index}`}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    // formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n                                    isSearchable={ true }\r\n                                    name={ `stablename_${index}` }\r\n                                    // placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n                                    showOption={ true }\r\n                                    options={ props.databaseTableList }\r\n                                    optionId='stablename'\r\n                                    optionValue='displayname'\r\n                                    value={ props.selectedRecord[`stablename_${index}`] || \"\" }\r\n                                    onChange={ value => props.onTableChange(value, `stablename_${index}`, index) }\r\n                                >\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n                            <Col md={2} key={`columnkey_${index}`}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    // formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n                                    isSearchable={ true }\r\n                                    name={ `columnname_${index}` }\r\n                                    // placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n                                    showOption={ true }\r\n                                    options={ props.tableColumnList[index] || [] }\r\n                                    optionId='columnname'\r\n                                    optionValue='displayname'\r\n                                    value={ props.selectedRecord[`columnname_${index}`] || \"\" }\r\n                                    // onChange={ value => props.onColumnChange(value, `columnname_${index}`, index) }\r\n                                    onChange={ value => props.onRuleChange(value, `columnname_${index}`, index) }\r\n                                >\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n                            { props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.COMBO ? \r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={joinConditionData}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`]}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                <Col md={2} key={`foreigncolumnkey_${index}`}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        // formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n                                        isSearchable={ true }\r\n                                        name={ `foreigncolumnname_${index}` }\r\n                                        // placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n                                        showOption={ true }\r\n                                        options={ props.foreignTableColumnList[index] || [] }\r\n                                        optionId='columnname'\r\n                                        optionValue='displayname'\r\n                                        value={ props.selectedRecord[`foreigncolumnname_${index}`] || \"\" }\r\n                                        // onChange={ value => props.onColumnChange(value, `columnname_${index}`, index) }\r\n                                        onChange={ value => props.onRuleChange(value, `foreigncolumnname_${index}`, index) }\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                            </>\r\n                            : <></>}\r\n                            {/* <Col md={2} key={`tablekey_${index}`}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    // formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n                                    isSearchable={ true }\r\n                                    name={ `stablename_${index}` }\r\n                                    // placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n                                    showOption={ true }\r\n                                    options={ props.databaseTableList }\r\n                                    optionId='stablename'\r\n                                    optionValue='displayname'\r\n                                    value={ props.selectedRecord[`stablename_${index}`] || \"\" }\r\n                                    onChange={ value => props.onTableChange(value, `stablename_${index}`, index) }\r\n                                >\r\n                                </FormSelectSearch>\r\n                            </Col> */}\r\n\r\n                            { props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT ? \r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={stringOperators}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                { props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true?\r\n                                <Col md={4}>\r\n                                    <FormInput\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        name={ `sinputname_${index}` }\r\n                                        // label={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\r\n                                        type=\"text\"\r\n                                        onChange={(event) => props.onInputChange(event, 1)}\r\n                                        // placeholder={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\r\n                                        value={ props.selectedRecord?props.selectedRecord[`sinputname_${index}`]: \"\" }\r\n                                        maxLength={100}\r\n                                    />\r\n                                </Col>: <></>\r\n                                }\r\n                                                                            \r\n                            </>: props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.NUMERICINPUT ? \r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={numericOperatorData}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                {\r\n                                    props.selectedRecord[`ssymbolname_${index}`] ?\r\n                                    <Col md={2}>\r\n                                        <FormInput\r\n                                            name={`snumericinput_${index}`}\r\n                                            label={props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5?props.intl.formatMessage({ id: \"IDS_TO\"}):\"\"}\r\n                                            type=\"text\"\r\n                                            required={false}\r\n                                            isMandatory={false}\r\n                                            value={props.selectedRecord[`snumericinput_${index}`]? props.selectedRecord[`snumericinput_${index}`]: \"\"}\r\n                                            onChange = { (event) => props.onInputChange(event, 2) }\r\n                                            maxLength={10}\r\n                                        />\r\n                                    </Col>:\r\n                                    (props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5?\r\n                                        <Col md={2}>\r\n                                            <FormInput\r\n                                                label={props.intl.formatMessage({ id: \"IDS_TO\"})}\r\n                                                name={`snumericinputtwo_${index}`}\r\n                                                type=\"text\"\r\n                                                required={false}\r\n                                                isMandatory={false}\r\n                                                value={props.selectedRecord[`snumericinputtwo_${index}`]? props.selectedRecord[`snumericinputtwo_${index}`]: \"\"}\r\n                                                onChange = { (event) => props.onInputChange(event, 2) }\r\n                                                maxLength={10}\r\n                                            />\r\n                                        </Col>\r\n                                        :<></>\r\n                                    )\r\n                                }\r\n                            </>                      \r\n                            : <></>\r\n                            }\r\n                        </Row>\r\n                    </BuilderBorder>\r\n                </>\r\n                : <></>}\r\n            </>);\r\n            \r\n        });\r\n            \r\n        return design;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={8}>\r\n\r\n                    {/* <Button onClick={() => props.onQueryTypeOnclick()}  className=\"mr-1\">\r\n                        { props.sqlQuery ?\r\n                        <FormattedMessage id=\"IDS_SQL\" defaultMessage=\"SQL\" />:\r\n                            <FormattedMessage id=\"IDS_VIEWS\" defaultMessage=\"Views\" />\r\n                            }\r\n                    </Button> */}\r\n                    \r\n                    <Form.Check\r\n                        inline\r\n                        label={props.intl.formatMessage({ id: \"IDS_VIEWS\" })}\r\n                        name=\"viewquery\"\r\n                        type={'radio'}\r\n                        checked={!props.sqlQuery}\r\n                        disabled={!props.sqlQuery}\r\n                        id={`inline-view`}\r\n                        onClick={() => props.onQueryTypeOnclick(\"views\")}\r\n                    />\r\n                    <Form.Check\r\n                        inline\r\n                        label={props.intl.formatMessage({ id: \"IDS_SQL\" })}\r\n                        name=\"sqlquery\"\r\n                        type={'radio'}\r\n                        checked={props.sqlQuery}\r\n                        disabled={props.sqlQuery}\r\n                        id={`inline-sql`}\r\n                        onClick={() => props.onQueryTypeOnclick(\"sql\")}\r\n                    />\r\n\r\n                    <Button onClick={() => props.clearRule()} className=\"mr-1\">\r\n                        <FormattedMessage id=\"IDS_CLEAR\" defaultMessage=\"Clear\" />\r\n                    </Button>\r\n                    <Button onClick={() => props.resetRule()}>\r\n                        <FormattedMessage id=\"IDS_RESET\" defaultMessage=\"Reset\" />\r\n                    </Button>\r\n                </Col>\r\n                <Col md={4}>\r\n                    {\r\n                        props.sqlQuery ? \r\n                        <>\r\n                            <Button onClick={() => props.addRule(\"sql\")} className=\"mr-1\">\r\n                            {'+'} <FormattedMessage id=\"IDS_ADDRULE\" defaultMessage=\"Add Rule\" />\r\n                            </Button>\r\n                            <Button onClick={() => props.onGenerateQuery()}>\r\n                                <FormattedMessage id=\"IDS_GENERATEQUERY\" defaultMessage=\"Generate Query\" />\r\n                            </Button>\r\n                        </>: <></>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            \r\n            {\r\n                props.sqlQuery === true ? \r\n                <>\r\n                    <Row className=\"mt-3\">\r\n                        <Col md={12}> \r\n                            { props.addRuleList.length > 0? createSqlRules(): <></> }\r\n                        </Col>\r\n                        <Col md={12} >\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    {props.intl.formatMessage({ id: \"IDS_QUERY\" })}\r\n                                    <Button onClick={() => props.onExecuteRule()}>\r\n                                        <FormattedMessage id=\"IDS_EXECUTE\" defaultMessage=\"Execute\" />\r\n                                    </Button>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    { props.selectedRecord && props.selectedRecord[\"sdisplayquery\"] ? props.selectedRecord[\"sdisplayquery\"]: \"No Query\" }\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>  \r\n                </>: \r\n                <>\r\n                    <Row className=\"mt-4 mb-4\">\r\n                        <Col md={4}>\r\n                            <FormSelectSearch\r\n                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                formLabel={ props.intl.formatMessage({ id: \"IDS_VIEWS\" }) }\r\n                                isSearchable={ true }\r\n                                name={ \"sviewname\" }\r\n                                placeholder={ props.intl.formatMessage({ id: \"IDS_VIEWS\" }) }\r\n                                showOption={ true }\r\n                                options={ props.databaseviewList || [] }\r\n                                optionId='sviewname'\r\n                                optionValue='displayname'\r\n                                value={ props.selectedRecord[\"sviewname\"] || \"\" }\r\n                                onChange={ value => props.onViewComboChange(value, \"sviewname\") }\r\n                            ></FormSelectSearch>\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            <Button onClick={() => props.addRule(\"views\")} className=\"mr-1\">\r\n                                {'+'} <FormattedMessage id=\"IDS_ADDRULE\" defaultMessage=\"Add Rule\" />\r\n                            </Button>\r\n                        </Col>\r\n                        <Col md={4}></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={12}> \r\n                            { props.addRuleList.length > 0? createViewRules(): <></> }\r\n                        </Col>\r\n                        <Col md={12} >\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    {props.intl.formatMessage({ id: \"IDS_QUERY\" })}\r\n                                    <Button onClick={() => props.onExecuteRule()} className=\"float-right\">\r\n                                        <FormattedMessage id=\"IDS_EXECUTE\" defaultMessage=\"Execute\" />\r\n                                    </Button>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    { props.selectedRecord && props.selectedRecord[\"sdisplayquery\"] ? props.selectedRecord[\"sdisplayquery\"]: \"No Query\" }\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            }\r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(BuildQuery);"]},"metadata":{},"sourceType":"module"}