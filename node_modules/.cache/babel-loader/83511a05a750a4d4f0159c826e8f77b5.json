{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import DropZone from'../../../components/dropzone/dropzone.component';import{Row,Col,Form}from'react-bootstrap';import FormTextarea from'../../../components/form-textarea/form-textarea.component';import FormInput from'../../../components/form-input/form-input.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import{attachmentType}from'../../../components/Enumeration';import{MediaHeader}from'../../../components/App.styles';import TestPopOver from'../../ResultEntryBySample/TestPopOver';var AddAttachment=function AddAttachment(props){var _props$selectedRecord=props.selectedRecord,nattachmenttypecode=_props$selectedRecord.nattachmenttypecode,disabled=_props$selectedRecord.disabled;// let nameString = props.operation === 'update'? props.selectedRecord && props.selectedRecord[props.displayName] && [props.selectedRecord[props.displayName]] : props.masterList ? props.masterList.map(obj=>obj[props.displayName]||obj[props.jsonField][props.displayName]) : []\nvar nameString=[];if(props.operation==='update'){if(props.selectedRecord&&props.selectedRecord[props.displayName]&&props.selectedRecord[props.displayName]!==\"-\"){nameString=[props.selectedRecord[props.displayName]];}else if(props.masterList){nameString=props.masterList.map(function(obj){return obj[props.displayName]||obj[props.jsonField][props.displayName];});}}else if(props.operation==='create'){if(props.masterList){nameString=props.masterList.map(function(obj){return obj[props.displayName]||obj[props.jsonField][props.displayName];});}}var message=\"\".concat(nameString.length,\" \").concat(props.intl.formatMessage({id:props.selectedListName||\"IDS_TESTS\"}),\" \").concat(props.intl.formatMessage({id:\"IDS_SELECTED\"}));var sdescrption=nattachmenttypecode===attachmentType.LINK?\"slinkdescription\":\"sdescription\";//console.log(\"props in file:\", props, nameString);\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,props.masterList&&Object.values(props.masterList).length>0?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\"},nameString.length===1?\"\".concat(props.intl.formatMessage({id:props.selectedListName||\"IDS_TESTS\"}),\": \").concat(nameString[0]):/*#__PURE__*/React.createElement(TestPopOver,{stringList:nameString,message:message}))))):\"\"),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Check,{name:\"nattachmenttypecode\",type:\"radio\",id:\"AddFiles\",label:props.intl.formatMessage({id:\"IDS_FTP\"}),inline:true,onChange:function onChange(event){return props.onInputOnChange(event,1,attachmentType.FTP);},checked:nattachmenttypecode===attachmentType.FTP?true:false,disabled:disabled}),/*#__PURE__*/React.createElement(Form.Check,{name:\"nattachmenttypecode\",type:\"radio\",id:\"AddLink\",label:props.intl.formatMessage({id:\"IDS_LINK\"}),inline:true,onChange:function onChange(event){return props.onInputOnChange(event,1,attachmentType.LINK);},checked:nattachmenttypecode===attachmentType.LINK?true:false,disabled:disabled}))),props.selectedRecord&&nattachmenttypecode===attachmentType.FTP&&/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DropZone,{name:\"AttachmentFile\",label:props.intl.formatMessage({id:\"IDS_FILE\"}),isMandatory:true,maxFiles:props.maxFiles,minSize:0,maxSize:props.maxSize,onDrop:function onDrop(event){return props.onDrop(event,'sfilename',props.maxFiles);},deleteAttachment:props.deleteAttachment,actionType:props.actionType,fileNameLength:props.fileNameLength,multiple:props.multiple!==undefined?props.multiple:true,editFiles:props.selectedRecord?props.selectedRecord:{},attachmentTypeCode:props.editFiles&&props.editFiles.nattachmenttypecode,fileSizeName:\"nfilesize\",fileName:\"sfilename\"//disabled={disabled}\n})),props.selectedRecord&&nattachmenttypecode===attachmentType.LINK&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormInput,{name:\"slinkfilename\",label:props.intl.formatMessage({id:\"IDS_FILENAME\"}),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_FILENAME\"}),value:props.selectedRecord?props.selectedRecord[\"slinkfilename\"]:\"\",isMandatory:\"*\",required:true,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_LINKNAME\"}),isSearchable:true,name:\"nlinkcode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_PLEASESELECT\"}),isMandatory:true,showOption:true,options:props.linkMaster||[],optionId:\"nlinkcode\",optionValue:\"slinkname\",value:props.selectedRecord[\"nlinkcode\"],onChange:function onChange(value){return props.onComboChange(value,\"nlinkcode\",1);},alphabeticalSort:true}))),/*#__PURE__*/React.createElement(Col,{md:\"12\",className:\"mt-4\"},/*#__PURE__*/React.createElement(FormTextarea,{name:sdescrption,label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord[sdescrption]?props.selectedRecord[sdescrption]:\"\",rows:\"2\",required:false,maxLength:255}))));};export default injectIntl(AddAttachment);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/attachmentscomments/attachments/AddAttachment.jsx"],"names":["React","injectIntl","DropZone","Row","Col","Form","FormTextarea","FormInput","FormSelectSearch","attachmentType","MediaHeader","TestPopOver","AddAttachment","props","selectedRecord","nattachmenttypecode","disabled","nameString","operation","displayName","masterList","map","obj","jsonField","message","length","intl","formatMessage","id","selectedListName","sdescrption","LINK","Object","values","event","onInputOnChange","FTP","maxFiles","maxSize","onDrop","deleteAttachment","actionType","fileNameLength","multiple","undefined","editFiles","linkMaster","value","onComboChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../../components/dropzone/dropzone.component';\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport { attachmentType } from '../../../components/Enumeration';\r\nimport { MediaHeader } from '../../../components/App.styles';\r\nimport TestPopOver from '../../ResultEntryBySample/TestPopOver';\r\n\r\nconst AddAttachment = props => {\r\n    const {nattachmenttypecode, disabled} = props.selectedRecord;\r\n   // let nameString = props.operation === 'update'? props.selectedRecord && props.selectedRecord[props.displayName] && [props.selectedRecord[props.displayName]] : props.masterList ? props.masterList.map(obj=>obj[props.displayName]||obj[props.jsonField][props.displayName]) : []\r\n   \r\n    let nameString = [];\r\n    if(props.operation === 'update'){\r\n        if(props.selectedRecord && props.selectedRecord[props.displayName] && props.selectedRecord[props.displayName] !== \"-\"){\r\n            nameString = [props.selectedRecord[props.displayName]];\r\n        }\r\n        else if(props.masterList){\r\n            nameString = props.masterList.map(obj=>obj[props.displayName]||obj[props.jsonField][props.displayName]);\r\n        }\r\n    }else if(props.operation === 'create'){\r\n        if(props.masterList){\r\n            nameString = props.masterList.map(obj=>obj[props.displayName]||obj[props.jsonField][props.displayName]);\r\n        }\r\n    }\r\n    \r\n    let message= `${nameString.length} ${props.intl.formatMessage({ id: props.selectedListName||\"IDS_TESTS\" })} ${props.intl.formatMessage({ id: \"IDS_SELECTED\" })}`\r\n    const sdescrption=nattachmenttypecode === attachmentType.LINK?\"slinkdescription\":\"sdescription\";\r\n    //console.log(\"props in file:\", props, nameString);\r\n     \r\n    return (\r\n        <>\r\n        <Row>\r\n            {props.masterList && Object.values(props.masterList).length > 0 ?\r\n                <div>\r\n                    <Row className=\"mb-4\">\r\n                        <Col md={12}>\r\n                            <MediaHeader className={`labelfont`}>\r\n                                {nameString.length === 1 ?\r\n                                        `${props.intl.formatMessage({id:props.selectedListName||\"IDS_TESTS\"})}: ${nameString[0] }`:\r\n                                        <TestPopOver stringList={nameString} message={message}></TestPopOver>\r\n\r\n                                }\r\n                            </MediaHeader>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            : \"\"}\r\n        </Row>\r\n        <Row>\r\n            <Col md=\"12\">\r\n                <Form.Group>\r\n                    <Form.Check \r\n                        name=\"nattachmenttypecode\" \r\n                        type=\"radio\"\r\n                        id=\"AddFiles\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_FTP\" })}\r\n                        inline={true}\r\n                        onChange={(event)=>props.onInputOnChange(event, 1, attachmentType.FTP)}\r\n                        checked={nattachmenttypecode===attachmentType.FTP?true:false}\r\n                        disabled={disabled}\r\n                    >\r\n                    </Form.Check>\r\n                    <Form.Check\r\n                        name=\"nattachmenttypecode\"\r\n                        type=\"radio\"\r\n                        id=\"AddLink\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_LINK\" })}\r\n                        inline={true}\r\n                        onChange={(event)=>props.onInputOnChange(event, 1, attachmentType.LINK)}\r\n                        checked={nattachmenttypecode===attachmentType.LINK?true:false}\r\n                        disabled={disabled}\r\n                    >\r\n                    </Form.Check>\r\n                </Form.Group>\r\n            </Col>\r\n            { props.selectedRecord && nattachmenttypecode === attachmentType.FTP &&\r\n            <Col md={12}>\r\n                <DropZone\r\n                    name = 'AttachmentFile'\r\n                    label = {props.intl.formatMessage({id:\"IDS_FILE\"})}\r\n                    isMandatory = {true}\r\n                    maxFiles={props.maxFiles}\r\n                    minSize={0}\r\n                    maxSize={props.maxSize}\r\n                    onDrop={(event)=>props.onDrop(event,'sfilename',props.maxFiles)}\r\n                    deleteAttachment={props.deleteAttachment}\r\n                    actionType={props.actionType}\r\n                    fileNameLength={props.fileNameLength}\r\n                    multiple={props.multiple!== undefined ? props.multiple:true}\r\n                    editFiles={props.selectedRecord?props.selectedRecord:{}}\r\n                    attachmentTypeCode={props.editFiles && props.editFiles.nattachmenttypecode}\r\n                    fileSizeName=\"nfilesize\"\r\n                    fileName=\"sfilename\"\r\n                    //disabled={disabled}\r\n                />\r\n            </Col>\r\n            }\r\n            { props.selectedRecord && nattachmenttypecode === attachmentType.LINK &&\r\n            <>\r\n                <Col md=\"12\">\r\n                    <FormInput\r\n                        name={\"slinkfilename\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event, 1)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                        value={props.selectedRecord?props.selectedRecord[\"slinkfilename\"]:\"\"}\r\n                        isMandatory=\"*\" \r\n                        required={true}\r\n                        maxLength={100}\r\n                    />\r\n                </Col>\r\n                <Col md=\"12\">\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_LINKNAME\" })}\r\n                        isSearchable={true}\r\n                        name={\"nlinkcode\"}\r\n                        isDisabled={false}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                        isMandatory={true}\r\n                        showOption={true}\r\n                        options={props.linkMaster || []}\r\n                        optionId='nlinkcode'\r\n                        optionValue='slinkname'\r\n                        value={props.selectedRecord[\"nlinkcode\"]}\r\n                        onChange={value => props.onComboChange(value, \"nlinkcode\", 1)}\r\n                        alphabeticalSort={true}\r\n                    >\r\n                    </FormSelectSearch>\r\n                </Col>\r\n            </>\r\n            }\r\n            \r\n            <Col md=\"12\" className=\"mt-4\">\r\n                <FormTextarea\r\n                    name={sdescrption}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    onChange={(event) => props.onInputOnChange(event, 1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord[sdescrption]?props.selectedRecord[sdescrption]:\"\"}\r\n                    rows=\"2\"\r\n                    required={false}\r\n                    maxLength={255}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddAttachment);"]},"metadata":{},"sourceType":"module"}