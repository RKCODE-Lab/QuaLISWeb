{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\ResultEntryBySample\\\\ResultEntryImport.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport DropZone from '../../components/dropzone/dropzone.component';\n\nconst ResultEntryImport = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropZone, {\n    name: \"ResultFile\",\n    label: \"Result File\",\n    maxFiles: 1 // accept=\".pdf\"\n    ,\n    minSize: 0,\n    maxSize: 20,\n    multiple: false // attachmentTypeCode={attachmentType.FTP}\n    ,\n    editFiles: props.selectedImportFile && props.selectedImportFile,\n    isMandatory: true,\n    fileSizeName: \"nfilesize\",\n    fileName: \"sfilename\",\n    onDrop: event => props.onDropFile(event),\n    deleteAttachment: props.deleteAttachment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default ResultEntryImport;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryImport.jsx"],"names":["React","Col","Row","DropZone","ResultEntryImport","props","selectedImportFile","event","onDropFile","deleteAttachment"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,QAAP,MAAqB,8CAArB;;AAGA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAGjC,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,YADT;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,QAAQ,EAAE,CAHd,CAII;AAJJ;AAKI,IAAA,OAAO,EAAE,CALb;AAMI,IAAA,OAAO,EAAE,EANb;AAOI,IAAA,QAAQ,EAAE,KAPd,CAQI;AARJ;AASI,IAAA,SAAS,EAAEA,KAAK,CAACC,kBAAN,IAA4BD,KAAK,CAACC,kBATjD;AAUI,IAAA,WAAW,EAAE,IAVjB;AAWI,IAAA,YAAY,EAAC,WAXjB;AAYI,IAAA,QAAQ,EAAC,WAZb;AAaI,IAAA,MAAM,EAAGC,KAAD,IAAWF,KAAK,CAACG,UAAN,CAAiBD,KAAjB,CAbvB;AAcI,IAAA,gBAAgB,EAAIF,KAAK,CAACI,gBAd9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAsBH,CAzBD;;AA4BA,eAAeL,iBAAf","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\n\r\n\r\nconst ResultEntryImport = (props) => {\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <DropZone\r\n                    name='ResultFile'\r\n                    label='Result File'\r\n                    maxFiles={1}\r\n                    // accept=\".pdf\"\r\n                    minSize={0}\r\n                    maxSize={20}\r\n                    multiple={false}\r\n                    // attachmentTypeCode={attachmentType.FTP}\r\n                    editFiles={props.selectedImportFile && props.selectedImportFile}\r\n                    isMandatory={true}\r\n                    fileSizeName=\"nfilesize\"\r\n                    fileName=\"sfilename\"\r\n                    onDrop={(event) => props.onDropFile(event)}\r\n                    deleteAttachment = {props.deleteAttachment}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\n\r\nexport default ResultEntryImport;"]},"metadata":{},"sourceType":"module"}