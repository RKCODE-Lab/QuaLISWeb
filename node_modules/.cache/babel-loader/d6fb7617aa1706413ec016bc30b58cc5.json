{"ast":null,"code":"import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col,Button,Form,InputGroup}from'react-bootstrap';import{injectIntl}from'react-intl';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormInput from'../../components/form-input/form-input.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{transactionStatus}from'../../components/Enumeration';import{toast}from'react-toastify';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormEmail from'../../components/form-email/form-email.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import DropZone from'../../components/dropzone/dropzone.component';var DynamicSlideout=/*#__PURE__*/function(_React$Component){_inherits(DynamicSlideout,_React$Component);var _super=_createSuper(DynamicSlideout);function DynamicSlideout(){var _this;_classCallCheck(this,DynamicSlideout);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.renderSwitch=function(control,selectedRecord){switch(control.inputtype){case'combo':{// let comboData = control.squestiondata ? control.squestiondata.split(\",\") : []\n// let options = comboData ? comboData.map(option => ({ \"value\": option, \"label\": option })) : []\n//  console.log(control.label, this.props.selectedRecord[control.label])\nreturn/*#__PURE__*/React.createElement(FormSelectSearch,{name:control.label,as:\"select\",onChange:function onChange(event){return _this.props.onComboChange(event,control);},formLabel:control.isMultiLingualLabel?_this.props.intl.formatMessage({id:control.label}):control.label,placeholder:_this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:control.mandatory,value:_this.props.selectedRecord[control.label]?_this.props.selectedRecord[control.label]:\"\",options:_this.props.comboData[control.label],optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:control.readonly,isSearchable:false,isClearable:false});}case'textinput':{return/*#__PURE__*/React.createElement(FormInput,{name:control.label,label:control.isMultiLingualLabel?_this.props.intl.formatMessage({id:control.label}):control.label,type:\"text\",value:_this.props.selectedRecord[control.label]?_this.props.selectedRecord[control.label]:\"\",isMandatory:control.mandatory,required:control.mandatory,maxLength:control.sfieldlength,isDisabled:control.readonly,onChange:function onChange(event){return _this.props.onInputOnChange(event,control.label);}// id={control.nchecklistversionqbcode}\n});}case'email':{return/*#__PURE__*/React.createElement(FormEmail,{name:control.label,label:control.label,type:\"email\",value:_this.props.selectedRecord[control.label]?_this.props.selectedRecord[control.label]:\"\",isMandatory:control.mandatory,required:control.mandatory,maxLength:control.sfieldlength,isDisabled:control.readonly,onChange:function onChange(event){return _this.props.onInputOnChange(event,control.label);}// id={control.nchecklistversionqbcode}\n});}case'textarea':{// console.log(control.label, this.props.selectedRecord[control.label])\nreturn/*#__PURE__*/React.createElement(FormTextarea,{name:control.label,label:control.isMultiLingualLabel?_this.props.intl.formatMessage({id:control.label}):control.label,type:\"text\",value:_this.props.selectedRecord[control.label]?_this.props.selectedRecord[control.label]:\"\",isMandatory:control.mandatory,required:control.mandatory,onChange:function onChange(event){return _this.props.onInputOnChange(event,control.label);},rows:\"2\",maxLength:control.sfieldlength,isDisabled:control.readonly});}case'toggle':return/*#__PURE__*/React.createElement(CustomSwitch,{label:control.isMultiLingualLabel?_this.props.intl.formatMessage({id:control.label}):control.label,type:\"switch\",name:control.label,onChange:function onChange(event){return _this.props.onInputOnChange(event);},placeholder:control.label,defaultValue:_this.props.selectedRecord[control.label]&&_this.props.selectedRecord[control.label]===3?true:false,checked:_this.props.selectedRecord[control.label]&&_this.props.selectedRecord[control.label]===3?true:false//disabled={props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true :false}\n});case 5:{return/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,control.isMultiLingualLabel?_this.props.intl.formatMessage({id:control.squestion}):control.squestion,control.mandatory&&/*#__PURE__*/React.createElement(\"sup\",null,\"*\")));}case 6:{return/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{htmlFor:control.squestion},control.squestion,control.mandatory&&/*#__PURE__*/React.createElement(\"sup\",null,\"*\")),/*#__PURE__*/React.createElement(Button,{className:\"btn\",name:control.squestion},control.squestion));}case'Numeric':{return/*#__PURE__*/React.createElement(FormNumericInput,{name:control.label,label:control.isMultiLingualLabel?_this.props.intl.formatMessage({id:control.label}):control.label,className:\"form-control\",type:\"text\",strict:true,value:_this.props.selectedRecord[control.label]?_this.props.selectedRecord[control.label]:\"\",isMandatory:control.mandatory,required:control.mandatory,maxLength:control.sfieldlength,isDisabled:control.readonly,onChange:function onChange(event){return _this.props.onNumericInputChange(event,control.label);},precision:control.precision||0,max:control.max,min:control.min,noStyle:true// id={control.nchecklistversionqbcode}\n});}case'date':{return/*#__PURE__*/ (// <DateTimePicker\n//     name={control.squestion}\n//     label={control.squestion}\n//     placeholderText={\"DD/MM/YYYY\"}\n//     showTimeSelect={control.dateonly==true?false:true}\n//     selected={\n//         selectedRecord && this.props.selectedRecord[control.label] ? new Date(this.props.selectedRecord[control.label]) : null\n//     }\n//     isMandatory={control.mandatory}\n//     dateFormat=\"dd/MM/yyyy\"\n//     className='form-control'\n//     onChange={(date) => this.props.handleDateChange(date, control.label)}\n//     isClearable={true}\n// />\nReact.createElement(React.Fragment,null,control.timezone?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:control.label,label:control.label,className:\"form-control\",placeholderText:_this.props.intl.formatMessage({id:\"IDS_SELECTDATE\"}),selected:selectedRecord&&_this.props.selectedRecord[control.label]?new Date(_this.props.selectedRecord[control.label]):control.loadcurrentdate?new Date():null,dateFormat:control.dateonly===true?_this.props.userInfo[\"ssitedate\"]:control.timeonly?'HH:mm':_this.props.userInfo[\"ssitedatetime\"],timeInputLabel:_this.props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:control.dateonly===true?false:true,showTimeSelectOnly:control.timeonly// isClearable={false}\n,isMandatory:control.mandatory,maxDate:_this.props.CurrentTime,maxTime:_this.props.CurrentTime,onChange:function onChange(date){return _this.props.handleDateChange(date,control.label);},value:_this.props.selectedRecord?_this.props.selectedRecord[\"dcollectiondate\"]:new Date()})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"tz\".concat(control.label),as:\"select\",onChange:function onChange(event){return _this.props.onComboChange(event,control,\"tz\".concat(control.label));},formLabel:_this.props.intl.formatMessage({id:\"IDS_TIMEZONE\"}),placeholder:_this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true// defaultValue={this.props.defaultTimeZone}\n,value:_this.props.selectedRecord[\"tz\".concat(control.label)]?_this.props.selectedRecord[\"tz\".concat(control.label)]:_this.props.defaultTimeZone,options:_this.props.timeZoneList,optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:control.readonly,isSearchable:false,isClearable:false}))):/*#__PURE__*/React.createElement(DateTimePicker,{name:control.label,label:control.isMultiLingualLabel?_this.props.intl.formatMessage({id:control.label}):control.label,className:\"form-control\",placeholderText:_this.props.intl.formatMessage({id:\"IDS_SELECTDATE\"}),selected:selectedRecord&&_this.props.selectedRecord[control.label]?new Date(_this.props.selectedRecord[control.label]):null,dateFormat:control.dateonly===true?_this.props.userInfo[\"ssitedate\"]:control.timeonly?'HH:mm':_this.props.userInfo[\"ssitedatetime\"],timeInputLabel:_this.props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:control.dateonly===true?false:true,showTimeSelectOnly:control.timeonly// isClearable={false}\n,isMandatory:control.mandatory,maxDate:_this.props.CurrentTime,maxTime:_this.props.CurrentTime,onChange:function onChange(date){return _this.props.handleDateChange(date,control.label);},value:_this.props.selectedRecord?_this.props.selectedRecord[\"dcollectiondate\"]:new Date()})));}case'checkbox':{var checkboxes=control.radioOptions?control.radioOptions.tags:[];console.log('checkbox:',checkboxes);return/*#__PURE__*/React.createElement(InputGroup,{size:'lg'},/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{as:\"legend\",htmlFor:control.label},control.isMultiLingualLabel?_this.props.intl.formatMessage({id:control.label}):control.label),checkboxes.map(function(checkbox){return/*#__PURE__*/React.createElement(Form.Check,{inline:true,type:\"checkbox\",name:control.label,label:control.isMultiLingualLabel?_this.props.intl.formatMessage({id:checkbox.text}):checkbox.text// label={checkbox.text}\n,onChange:function onChange(event){return _this.props.onInputOnChange(event,checkbox.text);},id:checkbox.id// defaultChecked={this.props.selectedRecord[control.label] ?\n//       checkbox.text.trim() === this.props.selectedRecord[control.label] ? true : false : false}\n,defaultChecked:_this.props.selectedRecord[control.label]===3?true:false,isMandatory:control.mandatory,required:control.mandatory,size:'lg'});})));}case'radio':{var radioButtons=control.radioOptions?control.radioOptions.tags:[];return/*#__PURE__*/React.createElement(\"fieldset\",null,/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{as:\"legend\",htmlFor:control.label},control.label),radioButtons.map(function(radioButton){return/*#__PURE__*/React.createElement(Form.Check,{inline:true,type:\"radio\",name:control.label,label:radioButton.text,onChange:function onChange(event){return _this.props.onInputOnChange(event,radioButton.text);},id:radioButton.id,defaultChecked:selectedRecord[control.label]?radioButton.text.trim()===selectedRecord[control.label].trim()?true:false:false,isMandatory:control.mandatory,required:control.mandatory,disabled:control.readonly});})));}case'files':{return/*#__PURE__*/React.createElement(DropZone,{name:control.label,label:control.label,maxFiles:control.maxFiles||1,accept:control.accept&&control.accept.value,minSize:0,maxSize:1,onDrop:function onDrop(event){return _this.props.onDropFile(event,control.label,1);},multiple:control.maxFiles>1?true:false,editFiles:_this.props.selectedRecord?_this.props.selectedRecord:{}// attachmentTypeCode={this.props.operation === \"update\" ? attachmentType.PRN : \"\"}\n// fileSizeName=\"nfilesize\"\n,fileName:control.label,deleteAttachment:_this.props.deleteAttachment,actionType:_this.props.actionType});}default:return\"\";}};_this.onSaveClick=function(){if(_this.props.needValidation){var failedControls=[];var mandatoryFields=[];_this.props.templateData.map(function(control){return control.nmandatoryfield===transactionStatus.YES?mandatoryFields.push(control):'';});mandatoryFields.forEach(function(item){if(_this.props.selectedRecord&&_this.props.selectedRecord[item.nchecklistversionqbcode]&&_this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue){if(typeof _this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue===\"object\"){//to validate FormSelectSearch component\nif(_this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length===0){var alertMessage=item.squestion;failedControls.push(alertMessage);}}else if(typeof _this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue===\"string\"){if(_this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.trim().length===0){var _alertMessage=item.squestion;failedControls.push(_alertMessage);}}else{if(_this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length===0){var _alertMessage2=item.squestion;failedControls.push(_alertMessage2);}}}else{var _alertMessage3=item.squestion;failedControls.push(_alertMessage3);}});// console.log(\"validationPassed:\", failedControls);\nif(failedControls.length===0){_this.props.onSaveClick(_this.props.selectedRecord,_this.props.Login.userInfo,_this.props.nregtypecode,_this.props.nregsubtypecode);}else{toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \").concat(failedControls[0]));}}else{_this.props.onSaveClick(_this.props.selectedRecord,_this.props.Login.userInfo,_this.props.nregtypecode,_this.props.nregsubtypecode);}};return _this;}_createClass(DynamicSlideout,[{key:\"render\",value:function render(){var _this2=this;// this.props.templateData && Object.keys(this.props.templateData).map(design =>\nconsole.log('design',Object.keys(this.props.templateData).length);console.log('design11',this.props.templateData);// )\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,this.props.templateData?this.props.templateData.map(function(item){return/*#__PURE__*/React.createElement(Row,null,item.children.length>0?item.children.map(function(column){return/*#__PURE__*/React.createElement(Col,{md:12/item.children.length},column.children.map(function(component){return component.hasOwnProperty(\"children\")?/*#__PURE__*/React.createElement(Row,null,component.children.map(function(componentrow){return/*#__PURE__*/React.createElement(Col,{md:12/componentrow.length},_this2.renderSwitch(componentrow,_this2.props.selectedRecord));})):/*#__PURE__*/React.createElement(React.Fragment,null,_this2.renderSwitch(component,_this2.props.selectedRecord));}));}):\"\");}):\"\");}}]);return DynamicSlideout;}(React.Component);export default injectIntl(DynamicSlideout);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/dynamicpreregdesign/DynamicSlideout.jsx"],"names":["React","Row","Col","Button","Form","InputGroup","injectIntl","FormTextarea","FormInput","FormSelectSearch","DateTimePicker","transactionStatus","toast","CustomSwitch","FormEmail","FormNumericInput","DropZone","DynamicSlideout","renderSwitch","control","selectedRecord","inputtype","label","event","props","onComboChange","isMultiLingualLabel","intl","formatMessage","id","mandatory","comboData","readonly","sfieldlength","onInputOnChange","squestion","onNumericInputChange","precision","max","min","timezone","Date","loadcurrentdate","dateonly","userInfo","timeonly","CurrentTime","date","handleDateChange","defaultTimeZone","timeZoneList","checkboxes","radioOptions","tags","console","log","map","checkbox","text","radioButtons","radioButton","trim","maxFiles","accept","value","onDropFile","deleteAttachment","actionType","onSaveClick","needValidation","failedControls","mandatoryFields","templateData","nmandatoryfield","YES","push","forEach","item","nchecklistversionqbcode","sdefaultvalue","length","alertMessage","Login","nregtypecode","nregsubtypecode","info","Object","keys","children","column","component","hasOwnProperty","componentrow","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Button, Form, InputGroup } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { transactionStatus } from '../../components/Enumeration'\r\nimport { toast } from 'react-toastify';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormEmail from '../../components/form-email/form-email.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nclass DynamicSlideout extends React.Component {\r\n\r\n    renderSwitch = (control, selectedRecord) => {\r\n        switch (control.inputtype) {\r\n            case 'combo': {\r\n                // let comboData = control.squestiondata ? control.squestiondata.split(\",\") : []\r\n                // let options = comboData ? comboData.map(option => ({ \"value\": option, \"label\": option })) : []\r\n                //  console.log(control.label, this.props.selectedRecord[control.label])\r\n                return (\r\n                    <FormSelectSearch\r\n                        name={control.label}\r\n                        as={\"select\"}\r\n                        onChange={(event) => this.props.onComboChange(event, control)}\r\n                        formLabel={control.isMultiLingualLabel ? this.props.intl.formatMessage({ id: control.label }) : control.label}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isMandatory={control.mandatory}\r\n                        value={this.props.selectedRecord[control.label] ? this.props.selectedRecord[control.label] : \"\"}\r\n                        options={this.props.comboData[control.label]}\r\n                        optionId={\"value\"}\r\n                        optionValue={\"label\"}\r\n                        isMulti={false}\r\n                        isDisabled={control.readonly}\r\n                        isSearchable={false}\r\n                        isClearable={false}\r\n                    />\r\n                );\r\n            }\r\n            case 'textinput': {\r\n                return (\r\n                    <FormInput\r\n                        name={control.label}\r\n                        label={control.isMultiLingualLabel ? this.props.intl.formatMessage({ id: control.label }) : control.label}\r\n                        type=\"text\"\r\n                        value={this.props.selectedRecord[control.label] ? this.props.selectedRecord[control.label] : \"\"}\r\n                        isMandatory={control.mandatory}\r\n                        required={control.mandatory}\r\n                        maxLength={control.sfieldlength}\r\n                        isDisabled={control.readonly}\r\n                        onChange={(event) => this.props.onInputOnChange(event, control.label)}\r\n                    // id={control.nchecklistversionqbcode}\r\n                    />\r\n                );\r\n            }\r\n            case 'email': {\r\n                return (\r\n                    <FormEmail\r\n                        name={control.label}\r\n                        label={control.label}\r\n                        type=\"email\"\r\n                        value={this.props.selectedRecord[control.label] ? this.props.selectedRecord[control.label] : \"\"}\r\n                        isMandatory={control.mandatory}\r\n                        required={control.mandatory}\r\n                        maxLength={control.sfieldlength}\r\n                        isDisabled={control.readonly}\r\n                        onChange={(event) => this.props.onInputOnChange(event, control.label)}\r\n                    // id={control.nchecklistversionqbcode}\r\n                    />\r\n                );\r\n            }\r\n            case 'textarea': {\r\n                // console.log(control.label, this.props.selectedRecord[control.label])\r\n                return (\r\n                    <FormTextarea\r\n                        name={control.label}\r\n                        label={control.isMultiLingualLabel ? this.props.intl.formatMessage({ id: control.label }) : control.label}\r\n                        type=\"text\"\r\n                        value={this.props.selectedRecord[control.label] ? this.props.selectedRecord[control.label] : \"\"}\r\n                        isMandatory={control.mandatory}\r\n                        required={control.mandatory}\r\n                        onChange={(event) => this.props.onInputOnChange(event, control.label)}\r\n                        rows=\"2\"\r\n                        maxLength={control.sfieldlength}\r\n                        isDisabled={control.readonly}\r\n                    />\r\n                );\r\n            }\r\n            case 'toggle':\r\n                return (\r\n                    <CustomSwitch\r\n                        label={control.isMultiLingualLabel ? this.props.intl.formatMessage({ id: control.label }) : control.label}\r\n                        type=\"switch\"\r\n                        name={control.label}\r\n                        onChange={(event) => this.props.onInputOnChange(event)}\r\n                        placeholder={control.label}\r\n                        defaultValue={this.props.selectedRecord[control.label] && this.props.selectedRecord[control.label] === 3 ? true : false}\r\n                        checked={this.props.selectedRecord[control.label] && this.props.selectedRecord[control.label] === 3 ? true : false}\r\n                    //disabled={props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true :false}\r\n                    />\r\n                );\r\n            case 5: {\r\n                return (\r\n                    <Form.Group>\r\n                        <Form.Label>{control.isMultiLingualLabel ? this.props.intl.formatMessage({ id: \r\n                        control.squestion}) : control.squestion}{control.mandatory && <sup>*</sup>}</Form.Label>{ }\r\n                    </Form.Group>\r\n                );\r\n            }\r\n            case 6: {\r\n                return (\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor={control.squestion}>{control.squestion}{control.mandatory && <sup>*</sup>}</Form.Label>\r\n                        <Button className=\"btn\" name={control.squestion}>\r\n                            {control.squestion}\r\n                        </Button>\r\n                    </Form.Group>\r\n                );\r\n            }\r\n            case 'Numeric': {\r\n                return (\r\n                    <FormNumericInput\r\n                        name={control.label}\r\n                        label={control.isMultiLingualLabel ? this.props.intl.formatMessage({ id: control.label }) : control.label}\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        strict={true}\r\n                        value={this.props.selectedRecord[control.label] ? this.props.selectedRecord[control.label] : \"\"}\r\n                        isMandatory={control.mandatory}\r\n                        required={control.mandatory}\r\n                        maxLength={control.sfieldlength}\r\n                        isDisabled={control.readonly}\r\n                        onChange={(event) => this.props.onNumericInputChange(event, control.label)}\r\n                        precision={control.precision || 0}\r\n                        max={control.max}\r\n                        min={control.min}\r\n                        noStyle={true}\r\n                    // id={control.nchecklistversionqbcode}\r\n                    />\r\n                )\r\n            }\r\n            case 'date': {\r\n                return (\r\n                    // <DateTimePicker\r\n                    //     name={control.squestion}\r\n                    //     label={control.squestion}\r\n                    //     placeholderText={\"DD/MM/YYYY\"}\r\n                    //     showTimeSelect={control.dateonly==true?false:true}\r\n                    //     selected={\r\n                    //         selectedRecord && this.props.selectedRecord[control.label] ? new Date(this.props.selectedRecord[control.label]) : null\r\n                    //     }\r\n                    //     isMandatory={control.mandatory}\r\n                    //     dateFormat=\"dd/MM/yyyy\"\r\n                    //     className='form-control'\r\n                    //     onChange={(date) => this.props.handleDateChange(date, control.label)}\r\n                    //     isClearable={true}\r\n                    // />\r\n                    <>\r\n                        {control.timezone ?\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <DateTimePicker\r\n                                        name={control.label}\r\n                                        label={control.label}\r\n                                        className='form-control'\r\n                                        placeholderText={this.props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                                        selected={selectedRecord && this.props.selectedRecord[control.label] ? new Date(this.props.selectedRecord[control.label]) : control.loadcurrentdate ? new Date() : null}\r\n                                        dateFormat={control.dateonly === true ? this.props.userInfo[\"ssitedate\"] : control.timeonly ? 'HH:mm' : this.props.userInfo[\"ssitedatetime\"]}\r\n                                        timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                                        showTimeInput={control.dateonly === true ? false : true}\r\n                                        showTimeSelectOnly={control.timeonly}\r\n                                        // isClearable={false}\r\n                                        isMandatory={control.mandatory}\r\n                                        maxDate={this.props.CurrentTime}\r\n                                        maxTime={this.props.CurrentTime}\r\n                                        onChange={(date) => this.props.handleDateChange(date, control.label)}\r\n                                        value={this.props.selectedRecord ? this.props.selectedRecord[\"dcollectiondate\"] : new Date()}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <FormSelectSearch\r\n                                        name={`tz${control.label}`}\r\n                                        as={\"select\"}\r\n                                        onChange={(event) => this.props.onComboChange(event, control, `tz${control.label}`)}\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        // defaultValue={this.props.defaultTimeZone}\r\n                                        value={this.props.selectedRecord[`tz${control.label}`] ? this.props.selectedRecord[`tz${control.label}`] : this.props.defaultTimeZone}\r\n                                        options={this.props.timeZoneList}\r\n                                        optionId={\"value\"}\r\n                                        optionValue={\"label\"}\r\n                                        isMulti={false}\r\n                                        isDisabled={control.readonly}\r\n                                        isSearchable={false}\r\n                                        isClearable={false}\r\n                                    />\r\n                                </Col>\r\n                            </Row> :\r\n                            <DateTimePicker\r\n                                name={control.label}\r\n                                label={control.isMultiLingualLabel ? this.props.intl.formatMessage({ id: control.label }) : control.label}\r\n                                className='form-control'\r\n                                placeholderText={this.props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                                selected={selectedRecord && this.props.selectedRecord[control.label] ? new Date(this.props.selectedRecord[control.label]) : null}\r\n                                dateFormat={control.dateonly === true ? this.props.userInfo[\"ssitedate\"] : control.timeonly ? 'HH:mm' : this.props.userInfo[\"ssitedatetime\"]}\r\n                                timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                                showTimeInput={control.dateonly === true ? false : true}\r\n                                showTimeSelectOnly={control.timeonly}\r\n                                // isClearable={false}\r\n                                isMandatory={control.mandatory}\r\n                                maxDate={this.props.CurrentTime}\r\n                                maxTime={this.props.CurrentTime}\r\n                                onChange={(date) => this.props.handleDateChange(date, control.label)}\r\n                                value={this.props.selectedRecord ? this.props.selectedRecord[\"dcollectiondate\"] : new Date()}\r\n                            />\r\n                        }\r\n\r\n                    </>\r\n                );\r\n            }\r\n            case 'checkbox': {\r\n                let checkboxes = control.radioOptions ? control.radioOptions.tags : []\r\n                console.log('checkbox:', checkboxes)\r\n                return (\r\n                    <InputGroup size={'lg'}>\r\n                        <Form.Group>\r\n                            <Form.Label as=\"legend\" htmlFor={control.label}>{\r\n                                control.isMultiLingualLabel ? this.props.intl.formatMessage({\r\n                                    id:\r\n                                        control.label\r\n                                }) : control.label}</Form.Label>\r\n                            {checkboxes.map(checkbox =>\r\n\r\n                                <Form.Check\r\n                                    inline={true}\r\n                                    type=\"checkbox\"\r\n                                    name={control.label}\r\n                                    label={control.isMultiLingualLabel ? this.props.intl.formatMessage({ id: checkbox.text }) : checkbox.text}\r\n                                    // label={checkbox.text}\r\n                                    onChange={(event) => this.props.onInputOnChange(event, checkbox.text)}\r\n                                    id={checkbox.id}\r\n                                    // defaultChecked={this.props.selectedRecord[control.label] ?\r\n                                    //       checkbox.text.trim() === this.props.selectedRecord[control.label] ? true : false : false}\r\n\r\n                                    defaultChecked={this.props.selectedRecord[control.label] === 3 ? true : false}\r\n                                    isMandatory={control.mandatory}\r\n                                    required={control.mandatory}\r\n                                    size={'lg'}\r\n                                />\r\n\r\n                            )}\r\n                        </Form.Group>\r\n                    </InputGroup >\r\n\r\n                );\r\n            }\r\n            case 'radio': {\r\n                let radioButtons = control.radioOptions ? control.radioOptions.tags : []\r\n                return (\r\n                    <fieldset>\r\n                        <Form.Group>\r\n                            <Form.Label as=\"legend\" htmlFor={control.label}>{control.label}</Form.Label>\r\n                            {radioButtons.map(radioButton =>\r\n\r\n                                <Form.Check\r\n                                    inline={true}\r\n                                    type=\"radio\"\r\n                                    name={control.label}\r\n                                    label={radioButton.text}\r\n                                    onChange={(event) => this.props.onInputOnChange(event, radioButton.text)}\r\n                                    id={radioButton.id}\r\n                                    defaultChecked={selectedRecord[control.label] ? radioButton.text.trim() === selectedRecord[control.label].trim() ? true : false : false}\r\n                                    isMandatory={control.mandatory}\r\n                                    required={control.mandatory}\r\n                                    disabled={control.readonly}\r\n                                />\r\n\r\n                            )}\r\n                        </Form.Group>\r\n                    </fieldset>\r\n                );\r\n            }\r\n            case 'files': {\r\n                return (\r\n                    <DropZone\r\n                        name={control.label}\r\n                        label={control.label}\r\n                        maxFiles={control.maxFiles || 1}\r\n                        accept={control.accept && control.accept.value}\r\n                        minSize={0}\r\n                        maxSize={1}\r\n                        onDrop={(event) => this.props.onDropFile(event, control.label, 1)}\r\n                        multiple={control.maxFiles > 1 ? true : false}\r\n                        editFiles={this.props.selectedRecord ? this.props.selectedRecord : {}}\r\n                        // attachmentTypeCode={this.props.operation === \"update\" ? attachmentType.PRN : \"\"}\r\n                        // fileSizeName=\"nfilesize\"\r\n                        fileName={control.label}\r\n                        deleteAttachment={this.props.deleteAttachment}\r\n                        actionType={this.props.actionType}\r\n                    />\r\n                )\r\n            }\r\n            default:\r\n                return (\"\");\r\n        }\r\n\r\n    }\r\n    onSaveClick = () => {\r\n        if (this.props.needValidation) {\r\n            const failedControls = [];\r\n            const mandatoryFields = [];\r\n            this.props.templateData.map(control =>\r\n                control.nmandatoryfield === transactionStatus.YES ? mandatoryFields.push(control) : ''\r\n\r\n            )\r\n            mandatoryFields.forEach(item => {\r\n\r\n                if (this.props.selectedRecord && this.props.selectedRecord[item.nchecklistversionqbcode] && this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue) {\r\n                    if (typeof this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue === \"object\") {\r\n                        //to validate FormSelectSearch component\r\n                        if (this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length === 0) {\r\n                            const alertMessage = item.squestion\r\n                            failedControls.push(alertMessage);\r\n                        }\r\n                    }\r\n                    else if (typeof this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue === \"string\") {\r\n                        if (this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.trim().length === 0) {\r\n                            const alertMessage = item.squestion\r\n                            failedControls.push(alertMessage);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length === 0) {\r\n                            const alertMessage = item.squestion\r\n                            failedControls.push(alertMessage);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    const alertMessage = item.squestion\r\n                    failedControls.push(alertMessage);\r\n                }\r\n            });\r\n            // console.log(\"validationPassed:\", failedControls);\r\n\r\n            if (failedControls.length === 0) {\r\n                this.props.onSaveClick(this.props.selectedRecord, this.props.Login.userInfo, this.props.nregtypecode, this.props.nregsubtypecode)\r\n            }\r\n            else {\r\n\r\n                toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${failedControls[0]}`);\r\n\r\n\r\n            }\r\n        } else {\r\n            this.props.onSaveClick(this.props.selectedRecord, this.props.Login.userInfo, this.props.nregtypecode, this.props.nregsubtypecode)\r\n        }\r\n    }\r\n    render() {\r\n        // this.props.templateData && Object.keys(this.props.templateData).map(design =>\r\n        console.log('design', Object.keys(this.props.templateData).length)\r\n        console.log('design11', this.props.templateData)\r\n        // )\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.templateData ?\r\n                        this.props.templateData.map((item) =>\r\n                            <Row>\r\n                                {item.children.length > 0 ?\r\n                                    item.children.map((column) =>\r\n                                        <Col md={12 / item.children.length}>\r\n                                            {\r\n                                                column.children.map((component) => {\r\n                                                    return (\r\n                                                        component.hasOwnProperty(\"children\") ?\r\n                                                            <Row>\r\n                                                                {component.children.map(componentrow =>\r\n                                                                    <Col md={12 / componentrow.length}>\r\n                                                                        {this.renderSwitch(componentrow, this.props.selectedRecord)}\r\n                                                                    </Col>\r\n                                                                )\r\n                                                                }\r\n                                                            </Row>\r\n                                                            : <>\r\n                                                                {this.renderSwitch(component, this.props.selectedRecord)}\r\n                                                            </>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n\r\n                                        </Col>\r\n                                    )\r\n                                    : \"\"}\r\n                            </Row>\r\n                        )\r\n                        :\r\n                        \"\"\r\n                }\r\n            </>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default injectIntl(DynamicSlideout);"]},"metadata":{},"sourceType":"module"}