{"ast":null,"code":"import React from'react';import CustomAccordion from'../../components/custom-accordion/custom-accordion.component';import{injectIntl}from'react-intl';import TestGroupParameterAccordion from'./TestGroupParameterAccordion';var TestGroupParameterTab=function TestGroupParameterTab(props){var _props$masterData=props.masterData,TestGroupTestParameter=_props$masterData.TestGroupTestParameter,selectedParameter=_props$masterData.selectedParameter,TestGroupTestFormula=_props$masterData.TestGroupTestFormula,TestGroupTestNumericParameter=_props$masterData.TestGroupTestNumericParameter,TestGroupTestPredefinedParameter=_props$masterData.TestGroupTestPredefinedParameter,TestGroupTestCharParameter=_props$masterData.TestGroupTestCharParameter,SelectedSpecification=_props$masterData.SelectedSpecification;function testGroupParameterAccordion(TestGroupParameter){var accordionMap=new Map();TestGroupParameter.map(function(testGroupParameter){return accordionMap.set(testGroupParameter.ntestparametercode,/*#__PURE__*/React.createElement(TestGroupParameterAccordion,{testgrouptestparameter:testGroupParameter,selectedSpecification:SelectedSpecification,userRoleControlRights:props.userRoleControlRights,controlMap:props.controlMap,userInfo:props.userInfo,selectedParameter:selectedParameter,addParameter:props.addParameter,deleteAction:props.deleteAction,addCodedResult:props.addCodedResult,addFormula:props.addFormula,onSwitchChange:props.onSwitchChange,addParameterSpecification:props.addParameterSpecification,testGroupTestFormula:TestGroupTestFormula,testGroupTestNumericParameter:TestGroupTestNumericParameter,testGroupTestPredefinedParameter:TestGroupTestPredefinedParameter,testGroupCharParameter:TestGroupTestCharParameter,addTestGroupFormula:props.addTestGroupFormula,filterData:props.filterData,editTestGroupParameter:props.editTestGroupParameter,addTestGroupCodedResult:props.addTestGroupCodedResult,viewTestGroupCheckList:props.viewTestGroupCheckList,masterData:props.masterData}));});return accordionMap;}return/*#__PURE__*/React.createElement(React.Fragment,null,TestGroupTestParameter&&TestGroupTestParameter.length>0&&/*#__PURE__*/React.createElement(CustomAccordion,{key:\"testgroupparameteraccordion\",accordionTitle:\"sparametersynonym\",accordionComponent:testGroupParameterAccordion(TestGroupTestParameter),inputParam:{masterData:props.masterData,userinfo:props.userInfo},accordionClick:props.getTestGroupParameter,accordionPrimaryKey:\"ntestgrouptestparametercode\",accordionObjectName:\"testgrouptestparameter\",selectedKey:selectedParameter?selectedParameter.ntestgrouptestparametercode:0}));};export default injectIntl(TestGroupParameterTab);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/testgroup/TestGroupParameterTab.jsx"],"names":["React","CustomAccordion","injectIntl","TestGroupParameterAccordion","TestGroupParameterTab","props","masterData","TestGroupTestParameter","selectedParameter","TestGroupTestFormula","TestGroupTestNumericParameter","TestGroupTestPredefinedParameter","TestGroupTestCharParameter","SelectedSpecification","testGroupParameterAccordion","TestGroupParameter","accordionMap","Map","map","testGroupParameter","set","ntestparametercode","userRoleControlRights","controlMap","userInfo","addParameter","deleteAction","addCodedResult","addFormula","onSwitchChange","addParameterSpecification","addTestGroupFormula","filterData","editTestGroupParameter","addTestGroupCodedResult","viewTestGroupCheckList","length","userinfo","getTestGroupParameter","ntestgrouptestparametercode"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,eAAP,KAA4B,8DAA5B,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,2BAAP,KAAwC,+BAAxC,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,CAAW,CACrC,sBAC4FA,KAAK,CAACC,UADlG,CAAQC,sBAAR,mBAAQA,sBAAR,CAAgCC,iBAAhC,mBAAgCA,iBAAhC,CAAmDC,oBAAnD,mBAAmDA,oBAAnD,CAAyEC,6BAAzE,mBAAyEA,6BAAzE,CACIC,gCADJ,mBACIA,gCADJ,CACsCC,0BADtC,mBACsCA,0BADtC,CACkEC,qBADlE,mBACkEA,qBADlE,CAEA,QAASC,CAAAA,2BAAT,CAAqCC,kBAArC,CAAyD,CACrD,GAAMC,CAAAA,YAAY,CAAG,GAAIC,CAAAA,GAAJ,EAArB,CACAF,kBAAkB,CAACG,GAAnB,CAAuB,SAACC,kBAAD,QACnBH,CAAAA,YAAY,CAACI,GAAb,CAAiBD,kBAAkB,CAACE,kBAApC,cACI,oBAAC,2BAAD,EACI,sBAAsB,CAAEF,kBAD5B,CAEI,qBAAqB,CAAEN,qBAF3B,CAGI,qBAAqB,CAAER,KAAK,CAACiB,qBAHjC,CAII,UAAU,CAAEjB,KAAK,CAACkB,UAJtB,CAKI,QAAQ,CAAElB,KAAK,CAACmB,QALpB,CAMI,iBAAiB,CAAEhB,iBANvB,CAOI,YAAY,CAAEH,KAAK,CAACoB,YAPxB,CAQI,YAAY,CAAEpB,KAAK,CAACqB,YARxB,CASI,cAAc,CAAErB,KAAK,CAACsB,cAT1B,CAUI,UAAU,CAAEtB,KAAK,CAACuB,UAVtB,CAWI,cAAc,CAAEvB,KAAK,CAACwB,cAX1B,CAYI,yBAAyB,CAAExB,KAAK,CAACyB,yBAZrC,CAaI,oBAAoB,CAAErB,oBAb1B,CAcI,6BAA6B,CAAEC,6BAdnC,CAeI,gCAAgC,CAAEC,gCAftC,CAgBI,sBAAsB,CAAEC,0BAhB5B,CAiBI,mBAAmB,CAAEP,KAAK,CAAC0B,mBAjB/B,CAkBI,UAAU,CAAE1B,KAAK,CAAC2B,UAlBtB,CAmBI,sBAAsB,CAAE3B,KAAK,CAAC4B,sBAnBlC,CAoBI,uBAAuB,CAAE5B,KAAK,CAAC6B,uBApBnC,CAqBI,sBAAsB,CAAE7B,KAAK,CAAC8B,sBArBlC,CAsBI,UAAU,CAAE9B,KAAK,CAACC,UAtBtB,EADJ,CADmB,EAAvB,EA4BA,MAAOU,CAAAA,YAAP,CACH,CAED,mBACI,wCACKT,sBAAsB,EAAIA,sBAAsB,CAAC6B,MAAvB,CAAgC,CAA1D,eACG,oBAAC,eAAD,EACI,GAAG,CAAC,6BADR,CAEI,cAAc,CAAE,mBAFpB,CAGI,kBAAkB,CAAEtB,2BAA2B,CAACP,sBAAD,CAHnD,CAII,UAAU,CAAE,CAAED,UAAU,CAAED,KAAK,CAACC,UAApB,CAAgC+B,QAAQ,CAAEhC,KAAK,CAACmB,QAAhD,CAJhB,CAKI,cAAc,CAAEnB,KAAK,CAACiC,qBAL1B,CAMI,mBAAmB,CAAE,6BANzB,CAOI,mBAAmB,CAAE,wBAPzB,CAQI,WAAW,CAAE9B,iBAAiB,CAAGA,iBAAiB,CAAC+B,2BAArB,CAAmD,CARrF,EAFR,CADJ,CAgBH,CApDD,CAsDA,cAAerC,CAAAA,UAAU,CAACE,qBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component'\r\nimport { injectIntl } from 'react-intl';\r\nimport TestGroupParameterAccordion from './TestGroupParameterAccordion';\r\n\r\nconst TestGroupParameterTab = (props) => {\r\n    const { TestGroupTestParameter, selectedParameter, TestGroupTestFormula, TestGroupTestNumericParameter,\r\n        TestGroupTestPredefinedParameter, TestGroupTestCharParameter, SelectedSpecification } = props.masterData;\r\n    function testGroupParameterAccordion(TestGroupParameter) {\r\n        const accordionMap = new Map();\r\n        TestGroupParameter.map((testGroupParameter) =>\r\n            accordionMap.set(testGroupParameter.ntestparametercode,\r\n                <TestGroupParameterAccordion\r\n                    testgrouptestparameter={testGroupParameter}\r\n                    selectedSpecification={SelectedSpecification}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    controlMap={props.controlMap}\r\n                    userInfo={props.userInfo}\r\n                    selectedParameter={selectedParameter}\r\n                    addParameter={props.addParameter}\r\n                    deleteAction={props.deleteAction}\r\n                    addCodedResult={props.addCodedResult}\r\n                    addFormula={props.addFormula}\r\n                    onSwitchChange={props.onSwitchChange}\r\n                    addParameterSpecification={props.addParameterSpecification}\r\n                    testGroupTestFormula={TestGroupTestFormula}\r\n                    testGroupTestNumericParameter={TestGroupTestNumericParameter}\r\n                    testGroupTestPredefinedParameter={TestGroupTestPredefinedParameter}\r\n                    testGroupCharParameter={TestGroupTestCharParameter}\r\n                    addTestGroupFormula={props.addTestGroupFormula}\r\n                    filterData={props.filterData}\r\n                    editTestGroupParameter={props.editTestGroupParameter}\r\n                    addTestGroupCodedResult={props.addTestGroupCodedResult}\r\n                    viewTestGroupCheckList={props.viewTestGroupCheckList}\r\n                    masterData={props.masterData}\r\n\r\n                />)\r\n        );\r\n        return accordionMap;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {TestGroupTestParameter && TestGroupTestParameter.length > 0 &&\r\n                <CustomAccordion\r\n                    key=\"testgroupparameteraccordion\"\r\n                    accordionTitle={\"sparametersynonym\"}\r\n                    accordionComponent={testGroupParameterAccordion(TestGroupTestParameter)}\r\n                    inputParam={{ masterData: props.masterData, userinfo: props.userInfo }}\r\n                    accordionClick={props.getTestGroupParameter}\r\n                    accordionPrimaryKey={\"ntestgrouptestparametercode\"}\r\n                    accordionObjectName={\"testgrouptestparameter\"}\r\n                    selectedKey={selectedParameter ? selectedParameter.ntestgrouptestparametercode : 0}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestGroupParameterTab);"]},"metadata":{},"sourceType":"module"}