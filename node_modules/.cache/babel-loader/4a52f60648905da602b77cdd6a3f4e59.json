{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\ResultEntryBySample\\\\ResultEntryInstrumentForm.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { intl } from '../../components/App';\nimport { injectIntl } from 'react-intl';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { MediaHeader } from '../../components/App.styles';\n\nconst ResultEntryInstrumentForm = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Object.values(props.selecteRecord).length > 0 ? /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, props.needSubSample ? /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MediaHeader, {\n    className: `labelfont`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  }, intl.formatMessage({\n    id: \"IDS_SAMPLEARNO\"\n  }), \": \", \" \" + props.selecteRecord.ssamplearno)) : /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MediaHeader, {\n    className: `labelfont`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }\n  }, intl.formatMessage({\n    id: \"IDS_ARNO\"\n  }), \": \", \" \" + props.selecteRecord.sarno)), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MediaHeader, {\n    className: `labelfont`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, intl.formatMessage({\n    id: \"IDS_TEST\"\n  }), \": \", \" \" + props.selecteRecord.stestsynonym))) : \"\", /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: intl.formatMessage({\n      id: \"IDS_INSTRUMENTCATEGORY\"\n    }),\n    placeholder: intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isSearchable: false,\n    name: \"ninstrumentcatcode\",\n    isDisabled: false,\n    isMandatory: true,\n    options: props.instrumentcatValue || [],\n    optionId: \"ninstrumentcatcode\",\n    optionValue: \"sinstrumentcatname\",\n    value: props.selecteRecord ? props.selecteRecord.ninstrumentcatcode : \"\",\n    showOption: true,\n    required: true,\n    onChange: event => props.onComboCategoryChange(event, 'ninstrumentcatcode'),\n    isMulti: false,\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: intl.formatMessage({\n      id: \"IDS_INSTRUMENTID\"\n    }),\n    placeholder: intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isSearchable: false,\n    name: \"ninstrumentcode\",\n    isDisabled: false,\n    isMandatory: true,\n    options: props.instrumentValue || [],\n    optionId: \"ninstrumentcode\",\n    optionValue: \"sinstrumentid\",\n    value: props.selecteRecord ? props.selecteRecord.ninstrumentcode : \"\",\n    showOption: true,\n    required: true,\n    onChange: event => props.onComboChange(event, 'ninstrumentcode'),\n    isMulti: false,\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dfromdate\",\n    label: intl.formatMessage({\n      id: \"IDS_FROM\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selecteRecord[\"dfromdate\"],\n    value: props.selecteRecord[\"dfromdate\"] //dateFormat={\"dd/MM/yyyy HH:mm:ss\"}\n    ,\n    dateFormat: props.userInfo.ssitedatetime,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: true,\n    isClearable: false,\n    isMandatory: true,\n    required: true,\n    onChange: date => props.onDateChange(\"dfromdate\", date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzfromdate\",\n    formLabel: intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.timeZoneListData,\n    optionId: \"ntimezonecode\",\n    optionValue: \"stimezoneid\",\n    value: props.selecteRecord.ntzfromdate,\n    defaultValue: props.selecteRecord.ntzfromdate,\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isClearable: false,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzfromdate'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dtodate\",\n    label: intl.formatMessage({\n      id: \"IDS_TO\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selecteRecord[\"dtodate\"],\n    value: props.selecteRecord[\"dtodate\"] //  dateFormat={\"dd/MM/yyyy HH:mm:ss\"}\n    ,\n    dateFormat: props.userInfo.ssitedatetime,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: true,\n    isClearable: false,\n    isMandatory: true,\n    required: true,\n    onChange: date => props.onDateChange(\"dtodate\", date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntztodate\",\n    formLabel: intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.timeZoneListData,\n    optionId: \"ntimezonecode\",\n    optionValue: \"stimezoneid\",\n    value: props.selecteRecord.ntztodate,\n    defaultValue: props.selecteRecord.ntztodate,\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isClearable: false,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntztodate'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default injectIntl(ResultEntryInstrumentForm);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryInstrumentForm.jsx"],"names":["React","Row","Col","FormSelectSearch","intl","injectIntl","DateTimePicker","MediaHeader","ResultEntryInstrumentForm","props","Object","values","selecteRecord","length","needSubSample","formatMessage","id","ssamplearno","sarno","stestsynonym","instrumentcatValue","ninstrumentcatcode","event","onComboCategoryChange","instrumentValue","ninstrumentcode","onComboChange","userInfo","ssitedatetime","date","onDateChange","timeZoneListData","ntzfromdate","ntztodate"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { intl } from '../../components/App';\r\nimport { injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { MediaHeader } from '../../components/App.styles';\r\n\r\nconst ResultEntryInstrumentForm = (props) => {\r\n    return (\r\n        <>\r\n            {Object.values(props.selecteRecord).length > 0 ?\r\n                <Row className=\"mb-4\">\r\n                    {props.needSubSample ?\r\n\r\n                        <Col md={12}>\r\n                            <MediaHeader className={`labelfont`}>{intl.formatMessage({ id: \"IDS_SAMPLEARNO\" })}: {\" \" + props.selecteRecord.ssamplearno}</MediaHeader>\r\n                        </Col>\r\n                        :\r\n                        <Col md={12}>\r\n                            <MediaHeader className={`labelfont`}>{intl.formatMessage({ id: \"IDS_ARNO\" })}: {\" \" + props.selecteRecord.sarno}</MediaHeader>\r\n                        </Col>\r\n                    }\r\n                    <Col md={12}>\r\n                        <MediaHeader className={`labelfont`}>{intl.formatMessage({ id: \"IDS_TEST\" })}: {\" \" + props.selecteRecord.stestsynonym}</MediaHeader>\r\n                    </Col>\r\n                </Row>\r\n                : \"\"}\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORY\" })}\r\n                        placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isSearchable={false}\r\n                        name={\"ninstrumentcatcode\"}\r\n                        isDisabled={false}\r\n                        isMandatory={true}\r\n                        options={props.instrumentcatValue || []}\r\n                        optionId='ninstrumentcatcode'\r\n                        optionValue='sinstrumentcatname'\r\n                        value={props.selecteRecord ? props.selecteRecord.ninstrumentcatcode : \"\"}\r\n                        showOption={true}\r\n                        required={true}\r\n                        onChange={(event) => props.onComboCategoryChange(event, 'ninstrumentcatcode')}\r\n                        isMulti={false}\r\n                        closeMenuOnSelect={true}\r\n                    />\r\n                </Col>\r\n\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                        placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isSearchable={false}\r\n                        name={\"ninstrumentcode\"}\r\n                        isDisabled={false}\r\n                        isMandatory={true}\r\n                        options={props.instrumentValue || []}\r\n                        optionId='ninstrumentcode'\r\n                        optionValue='sinstrumentid'\r\n                        value={props.selecteRecord ? props.selecteRecord.ninstrumentcode : \"\"}\r\n                        showOption={true}\r\n                        required={true}\r\n                        onChange={(event) => props.onComboChange(event, 'ninstrumentcode')}\r\n                        isMulti={false}\r\n                        closeMenuOnSelect={true}\r\n                    />\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                    <DateTimePicker\r\n                        name={\"dfromdate\"}\r\n                        label={intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                        className='form-control'\r\n                        placeholderText=\"Select date..\"\r\n                        selected={props.selecteRecord[\"dfromdate\"]}\r\n                        value={props.selecteRecord[\"dfromdate\"]}\r\n                        //dateFormat={\"dd/MM/yyyy HH:mm:ss\"}\r\n                        dateFormat={props.userInfo.ssitedatetime}\r\n                        timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                        showTimeInput={true}\r\n                        isClearable={false}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        onChange={date => props.onDateChange(\"dfromdate\", date)}\r\n\r\n                    />\r\n                </Col>\r\n                <Col md={6}>\r\n                    <FormSelectSearch\r\n                        name={\"ntzfromdate\"}\r\n                        formLabel={intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                        placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={props.timeZoneListData}\r\n                        optionId=\"ntimezonecode\"\r\n                        optionValue=\"stimezoneid\"\r\n                        value={props.selecteRecord.ntzfromdate}\r\n                        defaultValue={props.selecteRecord.ntzfromdate}\r\n                        isMandatory={true}\r\n                        isMulti={false}\r\n                        isSearchable={true}\r\n                        isClearable={false}\r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => props.onComboChange(event, 'ntzfromdate')}\r\n                    />\r\n                </Col>\r\n                <Col md={6}>\r\n                    <DateTimePicker\r\n                        name={\"dtodate\"}\r\n                        label={intl.formatMessage({ id: \"IDS_TO\" })}\r\n                        className='form-control'\r\n                        placeholderText=\"Select date..\"\r\n                        selected={props.selecteRecord[\"dtodate\"]}\r\n                        value={props.selecteRecord[\"dtodate\"]}\r\n                        //  dateFormat={\"dd/MM/yyyy HH:mm:ss\"}\r\n                        dateFormat={props.userInfo.ssitedatetime}\r\n                        timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                        showTimeInput={true}\r\n                        isClearable={false}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        onChange={date => props.onDateChange(\"dtodate\", date)}\r\n\r\n                    />\r\n                </Col>\r\n                <Col md={6}>\r\n                    <FormSelectSearch\r\n                        name={\"ntztodate\"}\r\n                        formLabel={intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                        placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={props.timeZoneListData}\r\n                        optionId=\"ntimezonecode\"\r\n                        optionValue=\"stimezoneid\"\r\n                        value={props.selecteRecord.ntztodate}\r\n                        defaultValue={props.selecteRecord.ntztodate}\r\n                        isMandatory={true}\r\n                        isMulti={false}\r\n                        isSearchable={true}\r\n                        isClearable={false}\r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => props.onComboChange(event, 'ntztodate')}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(ResultEntryInstrumentForm);\r\n"]},"metadata":{},"sourceType":"module"}