{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\data-grid\\\\DataGridWithMultipleGrid.jsx\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\nimport { AtTableWrap, FormControlStatic } from '../data-grid/data-grid.styles';\nimport ReactTooltip from 'react-tooltip';\nimport { Card, Col, FormGroup, FormLabel, Row } from 'react-bootstrap';\nimport SimpleGrid from './SimpleGrid';\nimport { parse } from '@fortawesome/fontawesome-svg-core';\nimport SimpleGridWithSelection from './SimpleGridWithSelection';\nimport ConfirmMessage from '../confirm-alert/confirm-message.component';\n\nclass DataGridWithMultipleGrid extends React.Component {\n  constructor(_props) {\n    super(_props); //this.confirmMessage = new ConfirmMessage();\n\n    this.expandChange = event => {\n      const isExpanded = event.dataItem.expanded === undefined ? event.dataItem.aggregates : event.dataItem.expanded;\n\n      if (this.props.hasChild && event.value === true) {\n        event.dataItem.expanded = !isExpanded;\n        this.props.handleExpandChange(event, this.props.dataState);\n      } else {\n        event.dataItem.expanded = !isExpanded;\n        this.setState({\n          isExpanded\n        });\n      }\n    };\n\n    this.detailBand = props => {\n      return /*#__PURE__*/React.createElement(Row, {\n        bsPrefix: \"margin_class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, this.props.hasDynamicColSize ? /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_MOREINFO\",\n        message: \"More Info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 42\n        }\n      })), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"form-static-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginLeft: -18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }\n      }, this.props.detailedFieldList.map(item => {\n        return /*#__PURE__*/React.createElement(Col, {\n          md: item.columnSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(FormLabel, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: item.idsName,\n          message: item.idsName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 64\n          }\n        })), /*#__PURE__*/React.createElement(FormControlStatic, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 53\n          }\n        }, props.dataItem[item.dataField] === undefined || props.dataItem[item.dataField] === null || props.dataItem[item.dataField].length === 0 ? '-' : item.isIdsField ? /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: props.dataItem[item.dataField],\n          message: props.dataItem[item.dataField],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 83\n          }\n        }) : item.isHTML ? parse(props.dataItem[item.dataField]) : props.dataItem[item.dataField])));\n      })))) : this.props.hasChild ? /*#__PURE__*/React.createElement(SimpleGridWithSelection, {\n        dataResult1: this.props.dataResult1 && this.props.dataResult1 || [],\n        extractedColumnList: this.props.childColumnList,\n        hasSubChild: true,\n        expandField: \"expanded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_MOREINFO\",\n        message: \"More Info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 46\n        }\n      })), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"form-static-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }\n      }, this.props.detailedFieldList.map(item => {\n        return /*#__PURE__*/React.createElement(Col, {\n          md: 6,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(FormLabel, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: item.idsName,\n          message: item.idsName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 68\n          }\n        })), /*#__PURE__*/React.createElement(FormControlStatic, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 57\n          }\n        }, props.dataItem[item.dataField] === undefined || props.dataItem[item.dataField] === null || props.dataItem[item.dataField].length === 0 ? '-' : item.isIdsField ? /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: props.dataItem[item.dataField],\n          message: props.dataItem[item.dataField],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 83\n          }\n        }) : item.isHTML ? parse(props.dataItem[item.dataField]) : props.dataItem[item.dataField])));\n      }))))), \" \");\n    };\n  }\n\n  render() {\n    console.log(\"parentchild\", this.props.childList);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AtTableWrap, {\n      className: \"at-list-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      data: this.props.data,\n      style: {\n        height: '400px'\n      },\n      selectedField: \"selected\",\n      onSelectionChange: this.props.selectionChange,\n      onHeaderSelectionChange: this.props.headerSelectionChange,\n      onExpandChange: this.expandChange,\n      onRowClick: this.props.rowClick,\n      expandField: this.props.expandField ? this.props.expandField : false,\n      detail: this.props.hideDetailBand ? false : this.detailBand,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      field: \"selected\",\n      width: \"50px\",\n      title: this.props.title,\n      headerSelectionValue: this.props.selectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }), this.props.extractedColumnList.map((item, index) => /*#__PURE__*/React.createElement(Column, {\n      key: index,\n      width: item.width,\n      title: this.props.intl.formatMessage({\n        id: item.idsName\n      }),\n      cell: row => /*#__PURE__*/React.createElement(\"td\", {\n        \"data-tip\": row[\"dataItem\"][item.dataField],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 37\n        }\n      }, item.isIdsField ? /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: row[\"dataItem\"][item.dataField],\n        defaultMessage: row[\"dataItem\"][item.dataField],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 45\n        }\n      }) : row[\"dataItem\"][item.dataField]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default injectIntl(DataGridWithMultipleGrid);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/data-grid/DataGridWithMultipleGrid.jsx"],"names":["React","FormattedMessage","injectIntl","Grid","GridColumn","Column","AtTableWrap","FormControlStatic","ReactTooltip","Card","Col","FormGroup","FormLabel","Row","SimpleGrid","parse","SimpleGridWithSelection","ConfirmMessage","DataGridWithMultipleGrid","Component","constructor","props","expandChange","event","isExpanded","dataItem","expanded","undefined","aggregates","hasChild","value","handleExpandChange","dataState","setState","detailBand","hasDynamicColSize","marginLeft","detailedFieldList","map","item","columnSize","idsName","dataField","length","isIdsField","isHTML","dataResult1","childColumnList","render","console","log","childList","data","height","selectionChange","headerSelectionChange","rowClick","expandField","hideDetailBand","title","selectAll","extractedColumnList","index","width","intl","formatMessage","id","row"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\r\nimport { AtTableWrap, FormControlStatic } from '../data-grid/data-grid.styles';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { Card, Col, FormGroup, FormLabel, Row } from 'react-bootstrap';\r\nimport SimpleGrid from './SimpleGrid';\r\nimport { parse } from '@fortawesome/fontawesome-svg-core';\r\nimport SimpleGridWithSelection from './SimpleGridWithSelection';\r\nimport ConfirmMessage from '../confirm-alert/confirm-message.component';\r\n\r\nclass DataGridWithMultipleGrid extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        //this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    expandChange = (event) => {\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined ?\r\n                event.dataItem.aggregates : event.dataItem.expanded;\r\n\r\n        if (this.props.hasChild && event.value === true) {\r\n            event.dataItem.expanded = !isExpanded;\r\n            this.props.handleExpandChange(event, this.props.dataState)\r\n        }\r\n        else {\r\n            event.dataItem.expanded = !isExpanded;\r\n            this.setState({ isExpanded });\r\n        }\r\n    }\r\n    detailBand = (props) => {\r\n        return (\r\n            <Row bsPrefix=\"margin_class\">\r\n                <Col md={12}>\r\n                    {this.props.hasDynamicColSize ?\r\n                        <Card>\r\n                            <Card.Header><FormattedMessage id=\"IDS_MOREINFO\" message=\"More Info\" /></Card.Header>\r\n                            <Card.Body className=\"form-static-wrap\">\r\n                                <Row style={{ marginLeft: -18 }}>\r\n                                    {this.props.detailedFieldList.map((item) => {\r\n                                        return (\r\n\r\n                                            <Col md={item.columnSize}>\r\n                                                <FormGroup>\r\n                                                    <FormLabel><FormattedMessage id={item.idsName} message={item.idsName} /></FormLabel>\r\n                                                    <FormControlStatic>\r\n                                                        {\r\n                                                                props.dataItem[item.dataField] === undefined ||\r\n                                                                props.dataItem[item.dataField] === null ||\r\n                                                                props.dataItem[item.dataField].length === 0  ? '-' :\r\n                                                                item.isIdsField ? <FormattedMessage id={props.dataItem[item.dataField]} message={props.dataItem[item.dataField]} /> :\r\n                                                                    item.isHTML ? parse(props.dataItem[item.dataField]) : props.dataItem[item.dataField]}\r\n                                                    </FormControlStatic>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        )\r\n                                    })}\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        : this.props.hasChild ?\r\n                            <SimpleGridWithSelection dataResult1={this.props.dataResult1&&this.props.dataResult1 || []}\r\n                                extractedColumnList={this.props.childColumnList}\r\n                                hasSubChild={true}\r\n                                expandField=\"expanded\" />\r\n                            :\r\n                            <Card>\r\n                                <Card.Header><FormattedMessage id=\"IDS_MOREINFO\" message=\"More Info\" /></Card.Header>\r\n                                <Card.Body className=\"form-static-wrap\">\r\n                                    <Row>\r\n                                        {this.props.detailedFieldList.map((item) => {\r\n                                            return (\r\n\r\n                                                <Col md={6}>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id={item.idsName} message={item.idsName} /></FormLabel>\r\n                                                        <FormControlStatic>\r\n                                                            {props.dataItem[item.dataField] === undefined || props.dataItem[item.dataField] === null || props.dataItem[item.dataField].length === 0 ? '-' :\r\n                                                                item.isIdsField ? <FormattedMessage id={props.dataItem[item.dataField]} message={props.dataItem[item.dataField]} /> : item.isHTML ? parse(props.dataItem[item.dataField]) : props.dataItem[item.dataField]}\r\n                                                        </FormControlStatic>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            )\r\n                                        })}\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>}\r\n                </Col> </Row>\r\n        )\r\n    }\r\n    render() {\r\nconsole.log(\"parentchild\",this.props.childList)\r\n        return (\r\n            <div>\r\n\r\n                <AtTableWrap className=\"at-list-table\">\r\n                    <ReactTooltip place=\"bottom\" globalEventOff='click' />\r\n                    <Grid\r\n                        data={this.props.data}\r\n                        style={{ height: '400px' }}\r\n                        selectedField=\"selected\"\r\n                        onSelectionChange={this.props.selectionChange}\r\n                        onHeaderSelectionChange={this.props.headerSelectionChange}\r\n                        onExpandChange={this.expandChange}\r\n                        onRowClick={this.props.rowClick}\r\n                        expandField={this.props.expandField ? this.props.expandField : false}\r\n                        detail={this.props.hideDetailBand ? false : this.detailBand}\r\n                        \r\n\r\n                    >\r\n                        <Column\r\n                           field=\"selected\"\r\n                            width=\"50px\"\r\n                            title={this.props.title}\r\n                            headerSelectionValue={this.props.selectAll}\r\n\r\n                                         \r\n                        />\r\n                        \r\n                        \r\n                        {this.props.extractedColumnList.map((item, index) =>\r\n                            <Column key={index}\r\n                                width={item.width}\r\n                                title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                cell={(row) => (\r\n                                    <td data-tip={row[\"dataItem\"][item.dataField]}>\r\n                                        {item.isIdsField ?\r\n                                            <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                            : row[\"dataItem\"][item.dataField]}\r\n                                    </td>\r\n                                )} />\r\n                        )}\r\n\r\n                    </Grid>\r\n                </AtTableWrap>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectIntl(DataGridWithMultipleGrid);"]},"metadata":{},"sourceType":"module"}