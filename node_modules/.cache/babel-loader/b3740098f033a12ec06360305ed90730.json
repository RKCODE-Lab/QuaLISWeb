{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\release\\\\Release.jsx\";\nimport React from 'react';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { callService, crudMaster, updateStore, validateEsignCredential, filterColumnData, getReleasedSelectedSampleSubSampleTest, getReleasedRegistrationType, getReleasedRegistrationSubType, getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, generateReleasedReport, getApprovedSample, getReleasedDataDetails } from '../../actions';\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, searchJsonData } from '../../components/CommonScript';\nimport { designProperties, transactionStatus } from '../../components/Enumeration';\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\nimport BreadcrumbComponentToolbar from '../../components/ToolbarBreadcrumb.Component';\nimport COAReleaseFilter from '../coarelease/COAReleaseFilter';\nimport { Affix } from 'rsuite';\nimport ModalShow from '../../components/ModalShow';\nimport AddRelease from '../coarelease/AddRelease';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport ReleaseFilter from './ReleaseFilter';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport SampleInfoView from '../approval/SampleInfoView';\nimport { ReadOnlyText } from '../../components/App.styles';\nimport { ContentPanel } from '../product/product.styled';\nimport { faCloudDownloadAlt, faExpandArrowsAlt, faRecycle } from '@fortawesome/free-solid-svg-icons';\nimport { FontIconWrap } from '../../components/data-grid/data-grid.styles';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Iframe from 'react-iframe';\nimport { fileViewUrl } from '../../rsapi';\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\nimport Reports from '../reports/viewreports/Reports';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Release extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n      this.expandNextData(event.dataState);\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getReleasedApprovalVersion(inputParam);\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item\n            };\n            this.props.getReleasedRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item\n            };\n            this.props.getReleasedRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getReleaseApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          const inputParamData = {\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            userinfo: this.props.Login.userInfo,\n            masterData: { ...this.props.Login.masterData\n            },\n            RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n            ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n            stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n            nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n            ndesigntemplatemappingcode: comboData.value,\n            DesignTemplateMappingValue: comboData.item\n          };\n          this.props.getReleaseFilterBasedTest(inputParamData);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getReleaseFilterStatus(inputParamData);\n          }\n        } else if (fieldName === 'nsectioncode') {\n          if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n            // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                UserSectionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              nsectioncode: comboData.value === -1 ? null // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n              : comboData.value,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n            };\n            this.props.getReleasedFilterBasedTest(inputParamData);\n          }\n        } else if (fieldName === 'njobstatuscode') {\n          if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n            let masterData = { ...this.props.Login.masterData,\n              JobStatusValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else {\n          if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n            //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n            //  const updateInfo = {\n            //     typeName: DEFAULT_RETURN,\n            //    data: { masterData }\n            // }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                FilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: comboData.value,\n              stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n              nsectioncode: null //this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n              //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n              //: this.props.Login.masterData.UserSectionValue.nsectioncode,\n              ,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n            };\n            this.props.getReleaseFilterBasedTest(inputParamData);\n          }\n        }\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      delete this.props.Login.masterData[\"searchedData1\"];\n      delete this.props.Login.masterData[\"searchedData2\"];\n      delete this.props.Login.masterData[\"searchedData3\"];\n      this.props.Login.change = false;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n      let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n      let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        ntype: 2,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake\n        };\n        this.props.getReleasedSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.searchedGridData = (filterValue, filterParam) => {\n      let masterData1 = filterParam.masterData;\n      let primaryKeyValue = 0;\n      let searchedData = undefined;\n\n      if (filterValue === \"\") {\n        if (masterData1[filterParam.inputListName] && masterData1[filterParam.inputListName].length > 0) {\n          primaryKeyValue = masterData1[filterParam.inputListName][0][filterParam.primaryKeyField]; // }\n        }\n      } else {\n        if (filterParam.isjsondata) {\n          searchedData = searchJsonData(filterValue, masterData1[filterParam.inputListName], filterParam.searchFieldList || []);\n        } else {\n          searchedData = this.searchNestedGridData(filterValue, masterData1[filterParam.inputListName], filterParam.searchFieldList || [], masterData1);\n        }\n\n        masterData1[\"searchedData3\"] = searchedData.test;\n        masterData1[\"searchedData1\"] = searchedData.sample;\n        masterData1[\"searchedData2\"] = searchedData.subsample; //    masterData1[\"searchedData\"][\"selected\"]=false\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: { ...masterData1\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.searchNestedGridData = (filterValue, originalData, fieldList, masterData) => {\n      let searchedData = [];\n      let ntransactionsamplecode = [];\n      let subdata = [];\n      let detail = [];\n      let npreregno = [];\n      Object.entries(originalData).map(item1 => {\n        item1[1].map(item => {\n          detail.push(item);\n        });\n      });\n      let temp = detail.filter(item => {\n        const itemArray = [];\n        fieldList.map(itemKey => item[itemKey] && item[itemKey] !== null ? itemArray.push(typeof item[itemKey] === \"string\" ? item[itemKey].toLowerCase() : item[itemKey].toString().toLowerCase()) : \"\");\n        return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1;\n      });\n      temp.map(item1 => {\n        if (!npreregno.includes(item1.npreregno)) npreregno.push(item1.npreregno);\n        if (!ntransactionsamplecode.includes(item1.ntransactionsamplecode)) ntransactionsamplecode.push(item1.ntransactionsamplecode);\n      });\n      let test = groupBy(temp, 'ntransactionsamplecode');\n      let sample = masterData.ReleaseSample.filter(item => {\n        for (var i = 0; i < npreregno.length; i++) {\n          if (npreregno[i] === item.npreregno && npreregno[i] !== undefined) {\n            return item;\n          }\n        }\n      });\n      Object.entries(masterData.ReleaseSubSample).map(item1 => {\n        item1[1].map(item => {\n          subdata.push(item);\n        });\n      });\n      let subsample1 = subdata.filter(item => {\n        for (var i = 0; i < ntransactionsamplecode.length; i++) {\n          if (ntransactionsamplecode[i] === item.ntransactionsamplecode && ntransactionsamplecode[i] !== undefined) {\n            return item;\n          }\n        }\n      });\n      let subsample = groupBy(subsample1, \"npreregno\");\n\n      function groupBy(objectArray, property) {\n        return objectArray.reduce((acc, obj) => {\n          const key = obj[property];\n\n          if (!acc[key]) {\n            acc[key] = [];\n          }\n\n          acc[key].push(obj);\n          return acc;\n        }, {});\n      }\n\n      searchedData = {\n        test,\n        sample,\n        subsample\n      };\n      return searchedData;\n    };\n\n    this.checkFunction = data => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          arrayfalse: data.arrayfalse,\n          childfalsearray: data.childfalsearray\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.checkFunction1 = () => {\n      this.setState({\n        count: 1\n      });\n    };\n\n    this.expandFunc = change => {\n      let count = change.count;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: { ...this.props.Login.masterData\n          },\n          change: change.change,\n          checkFlag: \"1\",\n          count: count\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewReport = () => {\n      if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\n        let showReport = true;\n        this.setState({\n          showReport\n        });\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_GENERATETHEREPORT\"\n        }));\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewDownloadFile = (inputData, row) => {\n      // this.props.generateReport()\n      this.onSaveModalClick(true, row, 'IDS_DOWNLOADFILE');\n    };\n\n    this.regnerateFile = (inputData, row) => {\n      // this.props.generateReport()\n      this.onSaveModalClick(true, row, 'IDS_REGENERATEFILE');\n    };\n\n    this.downloadReleasedFile = action => {\n      let ntransactionsamplecode = \"\";\n      let ntransactiontestcode = \"\";\n      let npreregno = \"\";\n      let sample = this.state.npreregno.filter((c, index) => {\n        return this.state.npreregno.indexOf(c) === index;\n      });\n      let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n        return this.state.ntransactionsamplecode.indexOf(c) === index;\n      });\n      let test = this.state.ntransactiontestcode.filter((c, index) => {\n        return this.state.ntransactiontestcode.indexOf(c) === index;\n      });\n      npreregno = sample.map(x => x).join(\",\");\n      ntransactionsamplecode = subsample.map(x => x).join(\",\");\n      ntransactiontestcode = test.map(x => x).join(\",\");\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\n      // if (ntransCode === transactionStatus.ALL) {\n      //     ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n      // } else {\n      //     ntransCode = ntransCode\n      // }\n\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory.npreregno,\n          ntransactionsamplecode: ntransactionsamplecode,\n          ntransactiontestcode: ntransactiontestcode,\n          nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          ntransactionstatus: String(transactionStatus.RELEASED),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          nflag: 2,\n          ntype: 1,\n          userinfo: this.props.Login.userInfo,\n          APSelectedSample: this.props.Login.masterData.APSelectedSample,\n          APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n          APSelectedTest: this.props.Login.masterData.APSelectedTest,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          checkBoxOperation: 3,\n          action,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n        },\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData);\n    };\n\n    this.regenerateReleasedFile = action => {\n      let ntransactionsamplecode = \"\";\n      let ntransactiontestcode = \"\";\n      let npreregno = \"\";\n      let sample = this.state.npreregno.filter((c, index) => {\n        return this.state.npreregno.indexOf(c) === index;\n      });\n      let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n        return this.state.ntransactionsamplecode.indexOf(c) === index;\n      });\n      let test = this.state.ntransactiontestcode.filter((c, index) => {\n        return this.state.ntransactiontestcode.indexOf(c) === index;\n      });\n      npreregno = sample.map(x => x).join(\",\");\n      ntransactionsamplecode = subsample.map(x => x).join(\",\");\n      ntransactiontestcode = test.map(x => x).join(\",\");\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\n      // if (ntransCode === transactionStatus.ALL) {\n      //     ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n      // } else {\n      //     ntransCode = ntransCode\n      // }\n\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory.npreregno,\n          ntransactionsamplecode: ntransactionsamplecode,\n          ntransactiontestcode: ntransactiontestcode,\n          nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          ntransactionstatus: String(transactionStatus.RELEASED),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          nflag: 2,\n          ntype: 1,\n          userinfo: this.props.Login.userInfo,\n          APSelectedSample: this.props.Login.masterData.APSelectedSample,\n          APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n          APSelectedTest: this.props.Login.masterData.APSelectedTest,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          checkBoxOperation: 3,\n          action,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n        },\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData);\n    };\n\n    this.onSaveModalClick = (nflag, row, action) => {\n      let ntransactionsamplecode = \"\";\n      let ntransactiontestcode = \"\";\n      let npreregno = \"\";\n\n      if (this.state.npreregno && this.state.npreregno.length > 0) {\n        let sample = this.state.npreregno.filter((c, index) => {\n          return this.state.npreregno.indexOf(c) === index;\n        });\n        let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n          return this.state.ntransactionsamplecode.indexOf(c) === index;\n        });\n        let test = this.state.ntransactiontestcode.filter((c, index) => {\n          return this.state.ntransactiontestcode.indexOf(c) === index;\n        });\n\n        if (nflag === true) {\n          npreregno = row.dataItem['npreregno'];\n        } else {\n          npreregno = sample.map(x => x).join(\",\");\n        }\n\n        ntransactionsamplecode = subsample.map(x => x).join(\",\");\n        ntransactiontestcode = test.map(x => x).join(\",\");\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\n        // if (ntransCode === transactionStatus.ALL) {\n        //     ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n        // } else {\n        //     ntransCode = ntransCode\n        // }\n\n        const inputParam = {\n          inputData: {\n            change: this.props.Login.change,\n            npreregno: npreregno,\n            ntransactionsamplecode: ntransactionsamplecode,\n            ntransactiontestcode: ntransactiontestcode,\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n            // nTransStatus: ntransCode,\n            // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n            //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n            //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n            ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nflag: 2,\n            ntype: 1,\n            userinfo: this.props.Login.userInfo,\n            APSelectedSample: this.props.Login.masterData.APSelectedSample,\n            APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n            APSelectedTest: this.props.Login.masterData.APSelectedTest,\n            // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n            // ncontrolCode,\n            checkBoxOperation: 3,\n            action,\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n          },\n          userinfo: this.props.Login.userInfo\n        };\n\n        if (nflag === true) {\n          this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData);\n        } else {\n          this.props.getReleasedSelectedSampleSubSampleTest(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData);\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTANYONESAMPLE/SUBSAMPLE/TEST\"\n        }));\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      delete this.props.Login.masterData[\"searchedData1\"];\n      delete this.props.Login.masterData[\"searchedData2\"];\n      delete this.props.Login.masterData[\"searchedData3\"];\n      this.props.Login.change = false;\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        ntransactionstatus: realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined || realFilterStatusValue.ntransactionstatus !== '0' ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\n        ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab || \"\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\n        checkBoxOperation: 3,\n        ntype: 2,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchRef: this.searchRef,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          resultDataState: this.state.resultDataState,\n          instrumentDataState: this.state.instrumentDataState,\n          materialDataState: this.state.materialDataState,\n          taskDataState: this.state.taskDataState,\n          documentDataState: this.state.documentDataState,\n          resultChangeDataState: this.state.resultChangeDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          historyDataState: this.state.historyDataState,\n          samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n          sampleHistoryDataState: this.state.sampleHistoryDataState\n        };\n        this.props.getReleasedSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord[\"agree\"] = 4;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeDocModal = () => {\n      let openModal = false;\n      let showReport = false;\n      let selectedRecord = {};\n      this.setState({\n        showReport,\n        openModal,\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.selectionChange = (event, nflag, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (nflag === undefined) {\n        this.state.dataResult.data.map(item => {\n          if (item.npreregno === event.dataItem.npreregno) {\n            item.selected = checked;\n          }\n        });\n        let preregno = event.dataItem.npreregno;\n        let ncoahistorycode = event.dataItem.ncoahistorycode;\n        let ssystemfilename = event.dataItem.ssystemfilename;\n        const coaFileInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncoahistorycode,\n            ssystemfilename\n          }\n        };\n        this.props.updateStore(coaFileInfo);\n        this.childHeaderSelectionChange(event, preregno, checkedflag);\n      } else {\n        let data = [];\n        event.dataItems.map(item => {\n          data.push({\n            \"npreregno\": item.npreregno\n          });\n        });\n        this.childHeaderSelectionChange(event, data, checkedflag);\n      } // const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //     }\n      // }\n      // this.props.updateStore(updateInfo);\n\n    };\n\n    this.childHeaderSelectionChange = (event, preregno, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let subsamplecode = [];\n      let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno;\n\n      if (npreregno.length === 0 || npreregno.length === undefined) {\n        this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\n          item.selected = checked;\n\n          if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n            subsamplecode.push({\n              \"ntransactionsamplecode\": item.ntransactionsamplecode\n            });\n          }\n        });\n        this.props.Login.masterData.ReleaseSample.map(data => {\n          if (data.npreregno === npreregno) {\n            data.selected = checked;\n          }\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      } else {\n        npreregno.map(value => {\n          this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\n            item.selected = checked;\n\n            if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n              subsamplecode.push({\n                \"ntransactionsamplecode\": item.ntransactionsamplecode\n              });\n            }\n          }); //    this.props.Login.masterData.ReleaseSample.map(data => {\n          //        if (data.npreregno === value.npreregno) {\n          //         data.selected = checked\n          //        }\n          //    })\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      } // const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //     }\n      // }\n      // this.props.updateStore(updateInfo);\n\n    };\n\n    this.subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let transactionsamplecode = [];\n\n      if (subsamplecode !== undefined) {\n        transactionsamplecode = subsamplecode;\n        transactionsamplecode.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          this.collectData(item, checkedflag);\n          return item;\n        }));\n      } else {\n        let rFlag = true;\n        event.dataItems.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          this.collectData(item, checkedflag);\n          return item;\n        }));\n        this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\n          if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        } // let x;\n        // let i;\n        // for (i = 0; i < this.props.Login.masterData.ReleaseSample.length; i++){\n        //     x=i\n        //         if (event.dataItems[0].npreregno !== this.props.Login.masterData.ReleaseSample[i].npreregno) {\n        //             // item.selected = checked;\n        //             rFlag = false;\n        //             break;\n        //         }\n        // }\n        // if (rFlag === true) {\n        //     this.props.Login.masterData.ReleaseSample[x].selected = checked;\n        // }\n\n      } // const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //     }\n      // }\n      // this.props.updateStore(updateInfo);\n\n    };\n\n    this.headerSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked; // if(checked===true)\n      // {\n\n      this.state.dataResult.data.map(item => {\n        item.selected = checked;\n        return item;\n      }); //this.setState({headerSelect:checked})  \n\n      this.selectionChange(event, 1, checked); // }else\n      // {\n      //     this.setState({npreregno:[]})\n      // }\n    };\n\n    this.childSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          item.selected = checked;\n        }\n      });\n      let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n        return item.slected === true;\n      });\n\n      if (data === true) {\n        this.props.Login.masterData.ReleaseSample.map(item => {\n          if (event.dataItem.npreregno === item.npreregno) {\n            item.selected = checked;\n          }\n        });\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n      } // const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //     }\n      // }\n      // this.props.updateStore(updateInfo); \n\n    };\n\n    this.subChildSelectionChange = event => {\n      let x = [];\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n        if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\n          item.selected = checked;\n          this.collectData(item);\n        }\n      });\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\n            x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode];\n          }\n        }\n      });\n      let y = x.filter(t => t.selected === true);\n\n      if (x.length === y.length) {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true;\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false;\n          }\n        });\n      }\n\n      this.state.dataResult.data.map(item => {\n        if (item.npreregno === event.dataItem.npreregno) {\n          if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\n            x = this.props.Login.masterData.ReleaseSubSample[item.npreregno];\n          }\n        }\n      });\n      let y1 = x.filter(t => t.selected === true);\n\n      if (x.length === y1.length) {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === y1[0].npreregno) {\n            this.state.dataResult.data[i].selected = true;\n          }\n        });\n      } else {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === event.dataItem.npreregno) {\n            this.state.dataResult.data[i].selected = false;\n          }\n        });\n      }\n    };\n\n    this.collectData = (item, checkedflag) => {\n      let npreregno = this.state.npreregno || [];\n      let ntransactionsamplecode = this.state.ntransactionsamplecode || [];\n      let ntransactiontestcode = this.state.ntransactiontestcode || [];\n\n      if (item.selected === true) {\n        if (!npreregno.includes(item.npreregno)) {\n          npreregno.push(item.npreregno);\n        }\n\n        if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n          ntransactionsamplecode.push(item.ntransactionsamplecode);\n        }\n\n        if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n          ntransactiontestcode.push(item.ntransactiontestcode);\n        }\n      } else {\n        const npreregno1 = npreregno.filter(data => data !== item.npreregno);\n        npreregno = npreregno1;\n        const ntransactionsamplecode1 = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode);\n        ntransactionsamplecode = ntransactionsamplecode1;\n        const ntransactiontestcode1 = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode);\n        ntransactiontestcode = ntransactiontestcode1;\n      } //      const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //         npreregno: npreregno,\n      //         ntransactionsamplecode:ntransactionsamplecode,\n      //         ntransactiontestcode:ntransactiontestcode\n      //     }\n      // }\n      // this.props.updateStore(updateInfo);\n\n\n      this.setState({\n        npreregno: checkedflag === false ? [] : npreregno,\n        ntransactionsamplecode: ntransactionsamplecode,\n        ntransactiontestcode: ntransactiontestcode\n      });\n    };\n\n    this.formRef = React.createRef();\n    const dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      childDataResult: [],\n      dataState: dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      SampletypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      searchedData: [],\n      count: 0,\n      SampleGridItem: [],\n      combinedSearchField: [],\n      npreregno: [],\n      ntransactiontestcode: [],\n      ntransactionsamplecode: []\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sreportno\"];\n    this.extractedColumnList = [{\n      \"idsName\": \"IDS_ARNO\",\n      \"dataField\": \"sarno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PRODUCT\",\n      \"dataField\": \"Specimen Type\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PRODUCTCATEGORY\",\n      \"dataField\": \"Specimen Category\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"200px\"\n    }];\n    this.sampleColumnList = [{\n      \"idsName\": \"IDS_SAMPLEARNO\",\n      \"dataField\": \"ssamplearno\",\n      \"width\": \"150px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_SAMPLENAME\",\n      \"dataField\": \"Sample Name\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    this.testColumnList = [{\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestname\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n  }\n\n  expandNextData(y) {\n    let change = [];\n    let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\n    let data = x.data.every(item => {\n      return item.expanded === true;\n    });\n\n    if (data === true) {\n      change = true;\n    } else {\n      change = false;\n    }\n\n    this.expandFunc({\n      change: change\n    });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  gridfillingColumn(data) {\n    //  const tempArray = [];\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    let filePath = \"\";\n\n    if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\n      filePath = fileViewUrl() + \"/Connecting_to_Databases01/\";\n    } else {\n      filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\n    }\n\n    const filterParam = {\n      inputListName: \"ReleaseHistory\",\n      selectedObject: \"selectedReleaseHistory\",\n      primaryKeyField: \"ncoaparentcode\",\n      fetchUrl: \"release/getReleaseHistory\",\n      fecthInputObject: {\n        isSearch: true,\n        userinfo: this.props.Login.userInfo,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const filterTestParam = {\n      inputListName: \"ReleaseTest\",\n      //  selectedObject: \"APSelectedTest\",\n      primaryKeyField: \"ntransactiontestcode\",\n      //    fetchUrl: this.getActiveTestURL(),\n      // fecthInputObject: {\n      //     ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\n      //     userinfo: this.props.Login.userInfo,\n      //     checkBoxOperation: 3,\n      //     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n      // },\n      isSingleSelect: false,\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.state.combinedSearchField || []\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }];\n    const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"Release\") && this.state.controlMap.get('Release').ncontrolcode;\n    const filterSubSampleParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\n      realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.npreregno || \"0\",\n        'nsampletypecode': this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n        'nsectioncode': this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        //  'ncoahistorycode':this.props.Login.masterData.selectedCOAHistory && this.props.Login.masterData.selectedCOAHistory.ncoahistorycode,\n        'nneedsubsample': this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1 // 'ncoahistorycode':COAHistory\n\n      }\n    };\n    const filterModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\n      realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\n        'nsectioncode': this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        //  'ncoahistorycode':this.props.Login.masterData.selectedCOAHistory && this.props.Login.masterData.selectedCOAHistory.ncoahistorycode,\n        'nneedsubsample': this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'preregCheck': true,\n        'ModalStatusValue': true // 'ncoahistorycode':COAHistory\n\n      }\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Release\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory,\n      getMasterDetail: ReleaseSample => this.props.getReleasedDataDetails({ ...filterSubSampleParam,\n        ...ReleaseSample\n      }),\n      selectedMaster: this.props.Login.masterData.selectedReleaseHistory,\n      primaryKeyField: \"ncoaparentcode\",\n      mainField: \"sreportno\" // firstField=\"sclientid\"\n      // secondField=\"stransdisplaystatus\"\n      ,\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: releaseId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openModal: () => this.props.getApprovedSample(filterModalParam),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(ReleaseFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          UserSection: this.state.UserSectionList || [],\n          UserSectionValue: this.props.Login.masterData.UserSectionValue || [],\n          Test: this.state.TestList || [],\n          TestValue: this.props.Login.masterData.TestValue || [],\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 58\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.sreportno), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontIconWrap, {\n      className: \"btn btn-circle outline-grey mr-2\" //hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(downloadId) === -1}\n      ,\n      onClick: () => this.downloadReleasedFile('IDS_DOWNLOADFILE'),\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-grid-wrap\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCloudDownloadAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(FontIconWrap, {\n      className: \"btn btn-circle outline-grey mr-2\" // hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(regenerateId) === -1}\n      ,\n      onClick: () => this.regenerateReleasedFile('IDS_REGENERATEFILE'),\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-grid-wrap\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faRecycle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(FontIconWrap, {\n      className: \"btn btn-circle outline-grey mr-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_VIEWREPORT\"\n      }),\n      onClick: () => this.viewReport(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faExpandArrowsAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 33\n      }\n    }))))))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n      needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n      data: this.state.data,\n      dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      expandNextData: this.expandNextData,\n      checkFunction: this.checkFunction,\n      checkFunction1: this.checkFunction1,\n      expandFunc: this.expandFunc //expandData={this.expandData}\n      ,\n      childDataResult: this.state.childDataResult,\n      subChildDataResult: this.state.subChildDataResult,\n      extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n      subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n      expandField: \"expanded\",\n      handleExpandChange: this.handleExpandChange,\n      childHandleExpandChange: this.childHandleExpandChange,\n      reloadData: this.reloadData,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '600px',\n      gridTop: '10px' //   isActionRequired={true}\n      //   isToolBarRequired={true}\n      //  isExpandRequired={true}\n      //   isDownloadRequired={true}\n      ,\n      isCheckBoxRequired: false,\n      isCollapseRequired: true,\n      selectedId: this.props.Login.selectedId,\n      hasChild: true,\n      hasSubChild: true,\n      childList: this.props.Login.masterData.searchedData2 || this.props.Login.masterData.ReleasedSubSampleDetails,\n      childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n      childMappingField: \"npreregno\",\n      subChildMappingField: \"ntransactionsamplecode\" // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\n      ,\n      subChildList: this.props.Login.masterData.searchedData3 || this.props.Login.masterData.ReleasedTestDetails,\n      selectedsubcild: this.props.Login.selectedsubcild,\n      methodUrl: \"Release\",\n      headerSelectionChange: this.headerSelectionChange,\n      childHeaderSelectionChange: this.childHeaderSelectionChange,\n      childSelectAll: this.props.Login.childSelectAll,\n      childSelectionChange: this.childSelectionChange,\n      subChildSelectionChange: this.subChildSelectionChange,\n      subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n      subChildSelectAll: this.props.Login.subChildSelectAll,\n      selectionChange: this.selectionChange,\n      selectAll: this.props.Login.selectAll,\n      releaseRecord: //this.props.getCOAReportType\n      this.onSaveModalClick,\n      viewDownloadFile: this.viewDownloadFile,\n      regnerateFile: this.regnerateFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 45\n      }\n    })))) : \"\"))), this.state.showReport ? /*#__PURE__*/React.createElement(DocViewer, {\n      file: filePath,\n      showReport: this.state.showReport,\n      closeModal: this.closeDocModal,\n      type: \"pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 21\n      }\n    }) : \"\", this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      size: \"xl\",\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_RELEASE\"\n      }),\n      onSaveClick: this.onSaveModalClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore // selectedRecord={this.state.selectedRecord || {}}\n      //  mandatoryFields={this.props.Login.operation == \"create\" ? this.mandatoryFields || [] : this.mandatoryUpdateFields || []}\n      ,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n        needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        data: this.state.data,\n        dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        dataState: this.state.dataState,\n        dataStateChange: this.dataStateChange,\n        expandNextData: this.expandNextData,\n        checkFunction: this.checkFunction,\n        checkFunction1: this.checkFunction1,\n        expandFunc: this.expandFunc //expandData={this.expandData}\n        ,\n        childDataResult: this.state.childDataResult,\n        subChildDataResult: this.state.subChildDataResult,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n        expandField: \"expanded\",\n        handleExpandChange: this.handleExpandChange,\n        childHandleExpandChange: this.childHandleExpandChange,\n        isCheckBoxRequired: true,\n        reloadData: this.reloadData,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        pageable: true,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        gridTop: '10px',\n        isActionRequired: true //   isToolBarRequired={true}\n        //  isExpandRequired={true}\n        //   isDownloadRequired={true}\n        ,\n        isCollapseRequired: true,\n        selectedId: this.props.Login.selectedId,\n        hasChild: true,\n        hasSubChild: true,\n        childList: this.props.Login.masterData.searchedData2 || this.props.Login.masterData.ReleaseSubSample,\n        childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n        childMappingField: \"npreregno\",\n        subChildMappingField: \"ntransactionsamplecode\" // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\n        ,\n        subChildList: this.props.Login.masterData.searchedData3 || this.props.Login.masterData.ReleaseTest,\n        selectedsubcild: this.props.Login.selectedsubcild,\n        methodUrl: \"Release\",\n        headerSelectionChange: this.headerSelectionChange,\n        childHeaderSelectionChange: this.childHeaderSelectionChange,\n        childSelectAll: this.props.Login.childSelectAll,\n        childSelectionChange: this.childSelectionChange,\n        subChildSelectionChange: this.subChildSelectionChange,\n        subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n        subChildSelectAll: this.props.Login.subChildSelectAll,\n        selectionChange: this.selectionChange,\n        selectAll: this.props.Login.selectAll,\n        releaseRecord: //this.props.getCOAReportType\n        this.onSaveModalClick,\n        viewDownloadFile: this.viewDownloadFile,\n        regnerateFile: this.regnerateFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      sampleListColumns,\n      subSampleListColumns,\n      testListColumns,\n      SingleItem,\n      sampleListMainField,\n      subSampleListMainField,\n      testListMainField,\n      SampleGridItem,\n      SampleGridExpandableItem,\n      testMoreField,\n      resultDataState,\n      instrumentDataState,\n      materialDataState,\n      taskDataState,\n      documentDataState,\n      resultChangeDataState,\n      historyDataState,\n      testCommentDataState,\n      samplePrintHistoryDataState,\n      sampleHistoryDataState,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      UserSectionList,\n      TestList,\n      skip,\n      take,\n      testskip,\n      testtake,\n      selectedFilter,\n      DynamicSampleColumns,\n      DynamicSubSampleColumns,\n      DynamicTestColumns,\n      DynamicGridItem,\n      DynamicTestGridItem,\n      DynamicSubSampleGridItem,\n      DynamicGridMoreField,\n      stateDynamicDesign,\n      sampleSearchField,\n      subsampleSearchField,\n      testSearchField,\n      combinedSearchField,\n      checkedflag,\n      npreregno\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\n      if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\n        let dataState = {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \n\n        };\n        resultDataState = dataState;\n        instrumentDataState = dataState;\n        materialDataState = dataState;\n        taskDataState = dataState;\n        documentDataState = dataState;\n        resultChangeDataState = dataState;\n        historyDataState = dataState;\n        testCommentDataState = dataState;\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\n      checkedflag = this.props.Login.checkedflag;\n      bool = true;\n    }\n\n    if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\n      npreregno = this.props.Login.npreregno;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\n      UserSectionList = UserSectionListMap.get(\"OptionList\");\n      TestList = TestListMap.get(\"OptionList\");\n      bool = true;\n      skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\n      take = this.props.Login.take || take;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      let selectFilterStatus = {\n        ntransactionstatus: transactionStatus.PARTIAL,\n        sfilterstatus: this.props.intl.formatMessage({\n          id: \"IDS_PARTIAL\"\n        }),\n        scolorhexcode: \"#800000\"\n      };\n      const selectedFilters = this.props.Login.masterData.FilterStatus || [];\n      const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\n      const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL);\n\n      if (selectedFiltersNew.length > 0 && index === -1) {\n        selectedFiltersNew.push(selectFilterStatus);\n      }\n\n      selectedFilter = selectedFiltersNew;\n\n      if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\n        resultDataState = this.props.Login.resultDataState;\n      }\n\n      if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\n        instrumentDataState = this.props.Login.instrumentDataState;\n      }\n\n      if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\n        taskDataState = this.props.Login.taskDataState;\n      }\n\n      if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\n        resultChangeDataState = this.props.Login.resultChangeDataState;\n      }\n\n      if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\n        historyDataState = this.props.Login.historyDataState;\n      }\n\n      if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\n        testCommentDataState = this.props.Login.testCommentDataState;\n      }\n\n      if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\n        samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\n      }\n\n      if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\n        sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\n      }\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\n      DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []; // DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n\n      DynamicGridItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\n      DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\n      testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\n      subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\n      testSearchField = dynamicColumn.testsearchfields ? dynamicColumn.testsearchfields : [];\n      sampleSearchField.map(item => {\n        combinedSearchField.push(item);\n      });\n      subsampleSearchField.map(item => {\n        combinedSearchField.push(item);\n      });\n      testSearchField.map(item => {\n        combinedSearchField.push(item);\n      });\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    }\n\n    if (bool) {\n      bool = false;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        sampleListColumns,\n        subSampleListColumns,\n        testListColumns,\n        SingleItem,\n        sampleListMainField,\n        subSampleListMainField,\n        testListMainField,\n        SampleGridItem,\n        SampleGridExpandableItem,\n        testMoreField,\n        resultDataState,\n        instrumentDataState,\n        materialDataState,\n        taskDataState,\n        documentDataState,\n        resultChangeDataState,\n        historyDataState,\n        testCommentDataState,\n        samplePrintHistoryDataState,\n        sampleHistoryDataState,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        UserSectionList,\n        TestList,\n        skip,\n        take,\n        testskip,\n        testtake,\n        selectedFilter,\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        DynamicGridItem,\n        DynamicTestGridItem,\n        DynamicSubSampleGridItem,\n        DynamicGridMoreField,\n        stateDynamicDesign,\n        sampleSearchField,\n        subsampleSearchField,\n        testSearchField,\n        combinedSearchField,\n        checkedflag,\n        npreregno\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        const reportFilePath = this.props.Login.masterData.ReportPDFFile;\n        this.setState({\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData,\n          data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\n          dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n          reportFilePath\n        });\n      } else {\n        let {\n          dataState\n        } = this.state;\n\n        if (this.state.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n          };\n        }\n\n        const npreregno = this.props.Login.npreregno || [];\n        const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n        const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n        const reportFilePath = this.props.Login.ntransactiontestcode || [];\n        this.setState({\n          data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\n          dataResult: process(this.props.Login.masterData.ReleaseSample || [], this.props.Login.dataState || dataState),\n          npreregno,\n          ntransactionsamplecode,\n          ntransactiontestcode,\n          dataState\n        });\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  filterColumnData,\n  getReleasedSelectedSampleSubSampleTest,\n  getReleasedRegistrationType,\n  getReleasedRegistrationSubType,\n  getReleasedFilterStatus,\n  getReleasedApprovalVersion,\n  getReleasedFilterBasedTest,\n  getReleasedSample,\n  getApprovedSample,\n  generateReleasedReport,\n  getReleasedDataDetails\n})(injectIntl(Release));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/release/Release.jsx"],"names":["React","ListWrapper","Row","Col","Card","FormGroup","FormLabel","Nav","toast","process","connect","FormattedMessage","injectIntl","callService","crudMaster","updateStore","validateEsignCredential","filterColumnData","getReleasedSelectedSampleSubSampleTest","getReleasedRegistrationType","getReleasedRegistrationSubType","getReleasedFilterStatus","getReleasedApprovalVersion","getReleasedFilterBasedTest","getReleasedSample","generateReleasedReport","getApprovedSample","getReleasedDataDetails","ListMaster","getControlMap","convertDateValuetoString","rearrangeDateFormat","constructOptionList","searchJsonData","designProperties","transactionStatus","DataGridWithMultipleGrid","BreadcrumbComponentToolbar","COAReleaseFilter","Affix","ModalShow","AddRelease","DEFAULT_RETURN","BreadcrumbComponent","ReleaseFilter","SlideOutModal","Esign","SampleInfoView","ReadOnlyText","ContentPanel","faCloudDownloadAlt","faExpandArrowsAlt","faRecycle","FontIconWrap","FormSelectSearch","FontAwesomeIcon","Iframe","fileViewUrl","DocViewer","Reports","mapStateToProps","state","Login","Release","Component","constructor","props","dataStateChange","event","setState","dataState","dataResult","data","expandNextData","handleDateChange","dateName","dateValue","Date","dfrom","masterData","fromDate","userInfo","dto","toDate","obj","inputParam","inputData","nflag","nregtypecode","RegTypeValue","nregsubtypecode","RegSubTypeValue","String","userinfo","onFilterComboChange","comboData","fieldName","inputParamData","value","SampleTypeValue","nsampletypecode","item","nsectioncode","UserSectionValue","UserSection","map","join","getReleaseApprovalVersion","napprovalversioncode","ApprovalVersionValue","napprovalconfigversioncode","ntransactionstatus","FilterStatusValue","stransactionstatus","FilterStatus","ndesigntemplatemappingcode","DesignTemplateMappingValue","getReleaseFilterBasedTest","napproveconfversioncode","getReleaseFilterStatus","JobStatusValue","njobstatuscode","updateInfo","typeName","TestValue","ntestcode","onFilterSubmit","searchRef","current","change","realFromDate","realToDate","realSampleTypeValue","realRegTypeValue","realRegSubTypeValue","realFilterStatusValue","realApprovalVersionValue","realUserSectionValue","realTestValue","realDesignTemplateMappingValue","npreregno","parseInt","undefined","napprovalconfigcode","section","nneedsubsample","nneedtemplatebasedflow","ntype","sfilterstatus","searchSampleRef","searchSubSampleRef","searchTestRef","skip","take","testskip","testtake","warn","intl","formatMessage","id","searchedGridData","filterValue","filterParam","masterData1","primaryKeyValue","searchedData","inputListName","length","primaryKeyField","isjsondata","searchFieldList","searchNestedGridData","test","sample","subsample","originalData","fieldList","ntransactionsamplecode","subdata","detail","Object","entries","item1","push","temp","filter","itemArray","itemKey","toLowerCase","toString","findIndex","element","includes","groupBy","ReleaseSample","i","ReleaseSubSample","subsample1","objectArray","property","reduce","acc","key","checkFunction","arrayfalse","childfalsearray","checkFunction1","count","expandFunc","checkFlag","viewReport","ReportPDFFile","showReport","onComboChange","selectedRecord","closeModalShow","loadEsign","modalShow","selectedId","viewDownloadFile","row","onSaveModalClick","regnerateFile","downloadReleasedFile","action","ntransactiontestcode","c","index","indexOf","x","selectedReleaseHistory","RELEASED","APSelectedSample","APSelectedSubSample","APSelectedTest","checkBoxOperation","regenerateReleasedFile","dataItem","info","reloadData","activeTestTab","activeSampleTab","activeSubSampleTab","resultDataState","instrumentDataState","materialDataState","taskDataState","documentDataState","resultChangeDataState","testCommentDataState","historyDataState","samplePrintHistoryDataState","sampleHistoryDataState","closeModal","openModal","operation","closeDocModal","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","screenData","selectionChange","checkedflag","checked","syntheticEvent","target","selected","preregno","ncoahistorycode","ssystemfilename","coaFileInfo","childHeaderSelectionChange","dataItems","subsamplecode","subChildHeaderSelectionChange","transactionsamplecode","ReleaseTest","collectData","rFlag","every","headerSelectionChange","childSelectionChange","slected","subChildSelectionChange","y","t","y1","npreregno1","ntransactionsamplecode1","ntransactiontestcode1","formRef","createRef","settings","masterStatus","error","childDataResult","userRoleControlRights","controlMap","Map","SampletypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","sampleSearchField","subsampleSearchField","testSearchField","SampleGridItem","combinedSearchField","extractedColumnList","sampleColumnList","testColumnList","searchedData1","expanded","getDerivedStateFromProps","gridfillingColumn","temparray","option","LABEL","slanguagetypecode","VALUE","render","filePath","filetype","reportFilePath","selectedObject","fetchUrl","fecthInputObject","isSearch","filterTestParam","isSingleSelect","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","releaseId","has","get","ncontrolcode","filterSubSampleParam","filterModalParam","PARTIAL","ReleaseHistory","openFilter","closeFilter","showFilter","ConfigVersionList","UserSectionList","TestList","values","sreportno","ReleasedSampleDetails","subChildDataResult","DynamicGridItem","DynamicTestGridItem","handleExpandChange","childHandleExpandChange","searchedData2","ReleasedSubSampleDetails","DynamicSubSampleGridItem","searchedData3","ReleasedTestDetails","selectedsubcild","childSelectAll","subChildSelectAll","selectAll","onInputOnChange","componentDidUpdate","previousProps","sampleListColumns","subSampleListColumns","testListColumns","SingleItem","sampleListMainField","subSampleListMainField","testListMainField","SampleGridExpandableItem","testMoreField","selectedFilter","DynamicSampleColumns","DynamicSubSampleColumns","DynamicTestColumns","DynamicGridMoreField","stateDynamicDesign","bool","nformcode","nsubsampleneed","NO","SampletypeListMap","SampleType","RegistrationTypeListMap","RegType","RegistrationSubTypeListMap","RegSubType","FilterStatusListMap","ConfigVersionListMap","ApprovalVersion","UserSectionListMap","TestListMap","Test","selectFilterStatus","scolorhexcode","selectedFilters","selectedFiltersNew","JSON","parse","stringify","DynamicDesign","dynamicColumn","jsondata","samplelistitem","subsamplelistitem","testlistitem","sampledisplayfields","testListFields","releasetestfields","samplegridmoreitem","testlistmoreitems","samplesearchfields","subsamplesearchfields","testsearchfields","DesignTemplateMapping","DesignTemplateMappingMap"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n      filterColumnData,\r\n    getReleasedSelectedSampleSubSampleTest,\r\n    getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, generateReleasedReport,\r\n    getApprovedSample, getReleasedDataDetails\r\n} from '../../actions';\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\n\r\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, searchJsonData } from '../../components/CommonScript';\r\nimport { designProperties, transactionStatus } from '../../components/Enumeration';\r\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\r\nimport BreadcrumbComponentToolbar from '../../components/ToolbarBreadcrumb.Component';\r\nimport COAReleaseFilter from '../coarelease/COAReleaseFilter';\r\nimport { Affix } from 'rsuite';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport AddRelease from '../coarelease/AddRelease';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ReleaseFilter from './ReleaseFilter';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport { ContentPanel } from '../product/product.styled';\r\nimport { faCloudDownloadAlt, faExpandArrowsAlt, faRecycle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontIconWrap } from '../../components/data-grid/data-grid.styles';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Iframe from 'react-iframe';\r\nimport { fileViewUrl } from '../../rsapi';\r\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\r\nimport Reports from '../reports/viewreports/Reports';\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Release extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            childDataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            SampletypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            searchedData: [],\r\n            count: 0,\r\n            SampleGridItem: [],\r\n            combinedSearchField: [],\r\n            npreregno: [],\r\n            ntransactiontestcode: [],\r\n            ntransactionsamplecode: []\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"sreportno\"];\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n            {\r\n                \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"Specimen Type\", \"width\": \"200px\"\r\n            },\r\n            { \"idsName\": \"IDS_PRODUCTCATEGORY\", \"dataField\": \"Specimen Category\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\r\n        ];\r\n\r\n        this.sampleColumnList = [{ \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"150px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_SAMPLENAME\", \"dataField\": \"Sample Name\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n\r\n        this.testColumnList = [\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n    }\r\n\r\n  \r\n    \r\n    expandNextData(y) {\r\n        let change = []\r\n        let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\r\n\r\n        let data = x.data.every(item => {\r\n            return item.expanded === true\r\n        })\r\n        if (data === true) {\r\n            change = true\r\n        } else {\r\n            change = false\r\n        }\r\n        this.expandFunc({ change: change })\r\n\r\n    }\r\n    dataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ dataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        this.expandNextData(event.dataState);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getReleasedApprovalVersion(inputParam)\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item\r\n                    };\r\n                    this.props.getReleasedRegistrationType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item\r\n                    }\r\n                    this.props.getReleasedRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getReleaseApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                const inputParamData = {\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: { ...this.props.Login.masterData },\r\n                    RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                    ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                    stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    ndesigntemplatemappingcode: comboData.value,\r\n                    DesignTemplateMappingValue: comboData.item\r\n                }\r\n                this.props.getReleaseFilterBasedTest(inputParamData)\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getReleaseFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'nsectioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n                    // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        nsectioncode: comboData.value === -1 ? null\r\n                            // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                            : comboData.value,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n                        DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n                    }\r\n\r\n                    this.props.getReleasedFilterBasedTest(inputParamData);\r\n                }\r\n            } else if (fieldName === 'njobstatuscode') {\r\n                if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n                    let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else {\r\n                if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n                    //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n                    //  const updateInfo = {\r\n                    //     typeName: DEFAULT_RETURN,\r\n                    //    data: { masterData }\r\n                    // }\r\n\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: comboData.value,\r\n                        stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n                        nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n                        //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                        //: this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                        , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                        , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n\r\n                    }\r\n\r\n                    this.props.getReleaseFilterBasedTest(inputParamData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        delete this.props.Login.masterData[\"searchedData1\"]\r\n        delete this.props.Login.masterData[\"searchedData2\"]\r\n\r\n        delete this.props.Login.masterData[\"searchedData3\"]\r\n        this.props.Login.change = false\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\r\n\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n\r\n            }\r\n            this.props.getReleasedSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    searchedGridData = (filterValue, filterParam) => {\r\n\r\n        let masterData1 = filterParam.masterData;\r\n\r\n        let primaryKeyValue = 0;\r\n        let searchedData = undefined;\r\n        if (filterValue === \"\") {\r\n            if (masterData1[filterParam.inputListName] && masterData1[filterParam.inputListName].length > 0) {\r\n\r\n                primaryKeyValue = masterData1[filterParam.inputListName][0][filterParam.primaryKeyField];\r\n                // }\r\n            }\r\n        }\r\n        else {\r\n            if (filterParam.isjsondata) {\r\n                searchedData = searchJsonData(filterValue, masterData1[filterParam.inputListName], filterParam.searchFieldList || []);\r\n            }\r\n            else {\r\n                searchedData = this.searchNestedGridData(filterValue, masterData1[filterParam.inputListName], filterParam.searchFieldList || [], masterData1);\r\n\r\n            }\r\n            masterData1[\"searchedData3\"] = searchedData.test;\r\n            masterData1[\"searchedData1\"] = searchedData.sample;\r\n            masterData1[\"searchedData2\"] = searchedData.subsample;\r\n\r\n            //    masterData1[\"searchedData\"][\"selected\"]=false\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: { ...masterData1 }\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    searchNestedGridData = (filterValue, originalData, fieldList, masterData) => {\r\n        let searchedData = [];\r\n        let ntransactionsamplecode = [];\r\n        let subdata = [];\r\n        let detail = []\r\n        let npreregno = []\r\n\r\n        Object.entries(originalData).map(item1 => {\r\n            item1[1].map(item => {\r\n                detail.push(item)\r\n            })\r\n        })\r\n\r\n        let temp =\r\n            detail.filter(item => {\r\n                const itemArray = [];\r\n\r\n                fieldList.map(itemKey =>\r\n                    item[itemKey] && item[itemKey] !== null ?\r\n                        itemArray.push(typeof item[itemKey] === \"string\" ? item[itemKey].toLowerCase()\r\n                            : item[itemKey].toString().toLowerCase())\r\n                        : \"\")\r\n                return itemArray\r\n                    .findIndex(element => element\r\n                        .includes(filterValue.toLowerCase())) > -1\r\n\r\n            })\r\n\r\n        temp.map(item1 => {\r\n            if (!npreregno.includes(item1.npreregno))\r\n                npreregno.push(item1.npreregno)\r\n            if (!ntransactionsamplecode.includes(item1.ntransactionsamplecode))\r\n                ntransactionsamplecode.push(item1.ntransactionsamplecode)\r\n        })\r\n        let test = groupBy(temp, 'ntransactionsamplecode');\r\n        let sample = masterData.ReleaseSample.filter(item => {\r\n\r\n            for (var i = 0; i < npreregno.length; i++) {\r\n                if (npreregno[i] === item.npreregno && npreregno[i] !== undefined) {\r\n                    return item\r\n                }\r\n            }\r\n\r\n        })\r\n\r\n        Object.entries(masterData.ReleaseSubSample).map(item1 => {\r\n            item1[1].map(item => {\r\n                subdata.push(item)\r\n            })\r\n        })\r\n        let subsample1 = subdata.filter(item => {\r\n\r\n            for (var i = 0; i < ntransactionsamplecode.length; i++) {\r\n                if (ntransactionsamplecode[i] === item.ntransactionsamplecode && ntransactionsamplecode[i] !== undefined) {\r\n                    return item\r\n                }\r\n            }\r\n\r\n        })\r\n        let subsample = groupBy(subsample1, \"npreregno\");\r\n        function groupBy(objectArray, property) {\r\n            return objectArray.reduce((acc, obj) => {\r\n                const key = obj[property];\r\n                if (!acc[key]) {\r\n                    acc[key] = [];\r\n                }\r\n                acc[key].push(obj);\r\n                return acc;\r\n            }, {});\r\n        }\r\n        searchedData = { test, sample, subsample }\r\n        return searchedData;\r\n    }\r\n    //end- search logic\r\n    checkFunction = (data) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                arrayfalse: data.arrayfalse,\r\n                childfalsearray: data.childfalsearray\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    checkFunction1 = () => {\r\n        this.setState({\r\n            count: 1\r\n        })\r\n    }\r\n    expandFunc = (change) => {\r\n        let count = change.count;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: { ...this.props.Login.masterData },\r\n                change: change.change,\r\n                checkFlag: \"1\",\r\n                count: count\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n    viewReport=()=>{\r\n        if(this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0)\r\n        {\r\n            let showReport = true;\r\n            this.setState({ showReport });\r\n        }\r\n       else{\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_GENERATETHEREPORT\" }));\r\n       }       \r\n    }\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let filePath = \"\";\r\n        if (this.props.Login.masterData.filetype&&this.props.Login.masterData.filetype == \"mrt\"){\r\n            filePath = fileViewUrl() + \"/Connecting_to_Databases01/\";\r\n        }else{\r\n            filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\r\n        }\r\n        const filterParam = {\r\n            inputListName: \"ReleaseHistory\",\r\n            selectedObject: \"selectedReleaseHistory\",\r\n            primaryKeyField: \"ncoaparentcode\",\r\n            fetchUrl: \"release/getReleaseHistory\",\r\n            fecthInputObject: { isSearch:true,userinfo: this.props.Login.userInfo,nregtypecode:this.props.Login.masterData.RegTypeValue&&this.props.Login.masterData.RegTypeValue.nregtypecode,nregsubtypecode :this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode},\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList,\r\n          };\r\n\r\n\r\n        const filterTestParam = {\r\n            inputListName: \"ReleaseTest\",\r\n            //  selectedObject: \"APSelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            //    fetchUrl: this.getActiveTestURL(),\r\n            // fecthInputObject: {\r\n            //     ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n            //     userinfo: this.props.Login.userInfo,\r\n            //     checkBoxOperation: 3,\r\n            //     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\r\n            // },\r\n            isSingleSelect: false,\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.combinedSearchField || [],\r\n\r\n        };\r\n\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n\r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            }\r\n        ];\r\n        const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"Release\")\r\n            && this.state.controlMap.get('Release').ncontrolcode;\r\n\r\n\r\n        const filterSubSampleParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\r\n            realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.npreregno) || \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': String(transactionStatus.RELEASED)+','+String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                'nsectioncode': this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                //  'ncoahistorycode':this.props.Login.masterData.selectedCOAHistory && this.props.Login.masterData.selectedCOAHistory.ncoahistorycode,\r\n                'nneedsubsample': (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n\r\n                // 'ncoahistorycode':COAHistory\r\n\r\n            }\r\n        };\r\n        const filterModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\r\n            realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.FilterStatusValue&&this.props.Login.masterData.FilterStatusValue.ntransactionstatus?String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus)+','+String(transactionStatus.PARTIAL):\"-1\",\r\n                'nsectioncode': this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                //  'ncoahistorycode':this.props.Login.masterData.selectedCOAHistory && this.props.Login.masterData.selectedCOAHistory.ncoahistorycode,\r\n                'nneedsubsample': (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'preregCheck': true,\r\n                'ModalStatusValue':true\r\n                // 'ncoahistorycode':COAHistory\r\n\r\n            }\r\n        };\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Release\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory}\r\n                                getMasterDetail={(ReleaseSample) =>\r\n                                    this.props.getReleasedDataDetails(\r\n\r\n                                        {\r\n                                            ...filterSubSampleParam,\r\n                                            ...ReleaseSample\r\n                                        }\r\n                                    )\r\n                                }\r\n                                selectedMaster={this.props.Login.masterData.selectedReleaseHistory}\r\n                                primaryKeyField=\"ncoaparentcode\"\r\n                                mainField=\"sreportno\"\r\n                                // firstField=\"sclientid\"\r\n                                // secondField=\"stransdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={releaseId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openModal={() => this.props.getApprovedSample(filterModalParam)}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"Sample Filter\": <ReleaseFilter\r\n                                            SampleType={this.state.SampletypeList || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                            RegType={this.state.RegistrationTypeList || []}\r\n                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                            UserSection={this.state.UserSectionList || []}\r\n                                            UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                            Test={this.state.TestList || []}\r\n                                            TestValue={this.props.Login.masterData.TestValue || []}\r\n                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            {this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                                {this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.sreportno}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\"></h2>\r\n                                                    <div className=\"d-inline\">\r\n                                                        <Nav.Link>\r\n                                                            <FontIconWrap className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                //hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(downloadId) === -1}\r\n                                                                onClick={() => this.downloadReleasedFile('IDS_DOWNLOADFILE')}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-grid-wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faCloudDownloadAlt}\r\n                                                                />\r\n\r\n                                                            </FontIconWrap>\r\n                                                            <FontIconWrap className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                // hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(regenerateId) === -1}\r\n                                                                onClick={() => this.regenerateReleasedFile('IDS_REGENERATEFILE')}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-grid-wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faRecycle}\r\n                                                                />\r\n                                                            </FontIconWrap>\r\n                                                            <FontIconWrap className=\"btn btn-circle outline-grey mr-2\"\r\n                             //   data-for=\"tooltip_list_wrap\"\r\n                                data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWREPORT\" })}\r\n                                onClick={() => this.viewReport()}>\r\n                                <FontAwesomeIcon icon={faExpandArrowsAlt}/>\r\n                            </FontIconWrap>\r\n                                                        </Nav.Link>\r\n                                                       \r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">\r\n                                            {/* <Row>\r\n                                                <Col md=\"4\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REPORTNO\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.selectedReleaseHistory &&\r\n                                                            this.props.Login.masterData.selectedReleaseHistory.sreportno}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n\r\n                                            </Row> */}\r\n                                            <DataGridWithMultipleGrid\r\n                                needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                data={this.state.data}\r\n                                dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState)}\r\n                                dataState={this.state.dataState}\r\n                                dataStateChange={this.dataStateChange}\r\n                                expandNextData={this.expandNextData}\r\n                                checkFunction={this.checkFunction}\r\n                                checkFunction1={this.checkFunction1}\r\n                                expandFunc={this.expandFunc}\r\n                                //expandData={this.expandData}\r\n                                childDataResult={this.state.childDataResult}\r\n                                subChildDataResult={this.state.subChildDataResult}\r\n                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                expandField=\"expanded\"\r\n                                handleExpandChange={this.handleExpandChange}\r\n                                childHandleExpandChange={this.childHandleExpandChange}\r\n\r\n                                reloadData={this.reloadData}\r\n                                controlMap={this.state.controlMap}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                pageable={true}\r\n                                scrollable={'scrollable'}\r\n                                gridHeight={'600px'}\r\n                                gridTop={'10px'}\r\n                             //   isActionRequired={true}\r\n                             //   isToolBarRequired={true}\r\n                                //  isExpandRequired={true}\r\n                                //   isDownloadRequired={true}\r\n                                isCheckBoxRequired={false}\r\n                                isCollapseRequired={true}\r\n\r\n                                selectedId={this.props.Login.selectedId}\r\n                                hasChild={true}\r\n                                hasSubChild={true}\r\n                                childList={\r\n                                    this.props.Login.masterData.searchedData2 ||\r\n                                    this.props.Login.masterData.ReleasedSubSampleDetails\r\n                                }\r\n                                childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                childMappingField={\"npreregno\"}\r\n                                subChildMappingField={\"ntransactionsamplecode\"}\r\n\r\n                                // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\r\n                                subChildList={\r\n                                    this.props.Login.masterData.searchedData3 ||\r\n                                    this.props.Login.masterData.ReleasedTestDetails\r\n                                }\r\n                                selectedsubcild={this.props.Login.selectedsubcild}\r\n                                methodUrl={\"Release\"}\r\n                                headerSelectionChange={this.headerSelectionChange}\r\n                                childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                childSelectAll={this.props.Login.childSelectAll}\r\n                                childSelectionChange={this.childSelectionChange}\r\n                                subChildSelectionChange={this.subChildSelectionChange}\r\n                                subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                selectionChange={this.selectionChange}\r\n                                selectAll={this.props.Login.selectAll}\r\n                                releaseRecord={//this.props.getCOAReportType\r\n                                    this.onSaveModalClick}\r\n                                viewDownloadFile={this.viewDownloadFile}\r\n                                regnerateFile={this.regnerateFile}\r\n                                />\r\n                                            {/* {this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0\r\n                            && this.state.reportFilePath ?\r\n                            <Iframe \r\n                                url={filePath}\r\n                                width=\"98%\"\r\n                                height=\"1000px\"\r\n                                id=\"reportviewID\"\r\n                                className=\"reportview\"\r\n                                display=\"initial\"\r\n                                position=\"relative\" />:\"\"\r\n                        } */}\r\n\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"\r\n                            }\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n                {this.state.showReport ?\r\n                    <DocViewer file={filePath} \r\n                    showReport = {this.state.showReport}\r\n                    closeModal = {this.closeDocModal}\r\n                    type={\"pdf\"}>\r\n                    </DocViewer>  \r\n                    :\"\"\r\n                }\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        size={\"xl\"}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.intl.formatMessage({ id: \"IDS_RELEASE\" })}\r\n                        onSaveClick={this.onSaveModalClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        // selectedRecord={this.state.selectedRecord || {}}\r\n                        //  mandatoryFields={this.props.Login.operation == \"create\" ? this.mandatoryFields || [] : this.mandatoryUpdateFields || []}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <>\r\n                                {/* <Row>\r\n                            <Col md={6}>\r\n            <FormSelectSearch\r\n                    name={\"ncoareporttypecode\"}\r\n                    formLabel={this.props.intl.formatMessage({ id: \"IDS_REPORTTYPE\" })}\r\n                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={this.props.Login.ReportTypeList}\r\n                    // optionId=\"ntimezonecode\"\r\n                    // optionValue=\"stimezoneid\"\r\n                    value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ncoareporttypecode\"] : \"\"}\r\n                    defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ncoareporttypecode\"] : \"\"}\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    // isClearable={false}                               \r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    onChange={(event) => this.onComboChange(event, 'ncoareporttypecode', 1)}\r\n                />\r\n                                </Col>\r\n                                <Col md={6}>\r\n            <FormSelectSearch\r\n                    name={\"ncoareporttypecode\"}\r\n                    formLabel={this.props.intl.formatMessage({ id: \"IDS_REPORTTYPE\" })}\r\n                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={this.props.Login.ReportTypeList}\r\n                    // optionId=\"ntimezonecode\"\r\n                    // optionValue=\"stimezoneid\"\r\n                    value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ncoareporttypecode\"] : \"\"}\r\n                    defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ncoareporttypecode\"] : \"\"}\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    // isClearable={false}                               \r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    onChange={(event) => this.onComboChange(event, 'ncoareporttypecode', 1)}\r\n                />\r\n                                    </Col>\r\n                                    </Row> */}\r\n            <DataGridWithMultipleGrid\r\n                                needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                data={this.state.data}\r\n                                dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                                dataState={this.state.dataState}\r\n                                dataStateChange={this.dataStateChange}\r\n                                expandNextData={this.expandNextData}\r\n                                checkFunction={this.checkFunction}\r\n                                checkFunction1={this.checkFunction1}\r\n                                expandFunc={this.expandFunc}\r\n                                //expandData={this.expandData}\r\n                                childDataResult={this.state.childDataResult}\r\n                                subChildDataResult={this.state.subChildDataResult}\r\n                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                expandField=\"expanded\"\r\n                                handleExpandChange={this.handleExpandChange}\r\n                                childHandleExpandChange={this.childHandleExpandChange}\r\n                                isCheckBoxRequired={true}\r\n\r\n                                reloadData={this.reloadData}\r\n                                controlMap={this.state.controlMap}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                pageable={true}\r\n                                scrollable={'scrollable'}\r\n                                gridHeight={'600px'}\r\n                                gridTop={'10px'}\r\n                                isActionRequired={true}\r\n                             //   isToolBarRequired={true}\r\n                                //  isExpandRequired={true}\r\n                                //   isDownloadRequired={true}\r\n                                isCollapseRequired={true}\r\n\r\n                                selectedId={this.props.Login.selectedId}\r\n                                hasChild={true}\r\n                                hasSubChild={true}\r\n                                childList={\r\n                                    this.props.Login.masterData.searchedData2 ||\r\n                                    this.props.Login.masterData.ReleaseSubSample\r\n                                }\r\n                                childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                childMappingField={\"npreregno\"}\r\n                                subChildMappingField={\"ntransactionsamplecode\"}\r\n\r\n                                // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\r\n                                subChildList={\r\n                                    this.props.Login.masterData.searchedData3 ||\r\n                                    this.props.Login.masterData.ReleaseTest\r\n                                }\r\n                                selectedsubcild={this.props.Login.selectedsubcild}\r\n                                methodUrl={\"Release\"}\r\n                                headerSelectionChange={this.headerSelectionChange}\r\n                                childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                childSelectAll={this.props.Login.childSelectAll}\r\n                                childSelectionChange={this.childSelectionChange}\r\n                                subChildSelectionChange={this.subChildSelectionChange}\r\n                                subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                selectionChange={this.selectionChange}\r\n                                selectAll={this.props.Login.selectAll}\r\n                                releaseRecord={//this.props.getCOAReportType\r\n                                    this.onSaveModalClick}\r\n                                viewDownloadFile={this.viewDownloadFile}\r\n                                regnerateFile={this.regnerateFile}\r\n                                />\r\n                            </>}\r\n                    />\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n\r\n        let modalShow = this.props.Login.modalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n        } else {\r\n            modalShow = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n    viewDownloadFile = (inputData, row) => {\r\n        // this.props.generateReport()\r\n        this.onSaveModalClick(true, row, 'IDS_DOWNLOADFILE')\r\n    }\r\n    regnerateFile = (inputData, row) => {\r\n        // this.props.generateReport()\r\n        this.onSaveModalClick(true, row, 'IDS_REGENERATEFILE')\r\n    }\r\n    downloadReleasedFile = (action) => {\r\n        let ntransactionsamplecode = \"\"\r\n        let ntransactiontestcode = \"\"\r\n        let npreregno = \"\"\r\n            let sample = this.state.npreregno.filter((c, index) => {\r\n                return this.state.npreregno.indexOf(c) === index;\r\n            });\r\n            let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n                return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n            });\r\n            let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n                return this.state.ntransactiontestcode.indexOf(c) === index;\r\n            });\r\n        \r\n                npreregno = sample.map(x => x).join(\",\")\r\n            \r\n            ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n            ntransactiontestcode = test.map(x => x).join(\",\")\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            // let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n            // if (ntransCode === transactionStatus.ALL) {\r\n            //     ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n            // } else {\r\n            //     ntransCode = ntransCode\r\n            // }\r\n            const inputParam = {\r\n                inputData: {\r\n                    change: this.props.Login.change,\r\n                    npreregno: this.props.Login.masterData.selectedReleaseHistory.npreregno,\r\n                    ntransactionsamplecode: ntransactionsamplecode,\r\n                    ntransactiontestcode: ntransactiontestcode,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                        this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                            this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                            String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                        null,\r\n                    ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                    // nTransStatus: ntransCode,\r\n                    // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                    //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                    //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n                    ntransactionstatus: String(transactionStatus.RELEASED),\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nflag: 2,\r\n                    ntype: 1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                    APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                    APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                    // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                    // ncontrolCode,\r\n                    checkBoxOperation: 3,\r\n                    action,\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n                },\r\n                userinfo: this.props.Login.userInfo\r\n            }\r\n                this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData)\r\n            \r\n        \r\n       \r\n    }\r\n    regenerateReleasedFile = (action) => {\r\n        let ntransactionsamplecode = \"\"\r\n        let ntransactiontestcode = \"\"\r\n        let npreregno = \"\"\r\n            let sample = this.state.npreregno.filter((c, index) => {\r\n                return this.state.npreregno.indexOf(c) === index;\r\n            });\r\n            let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n                return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n            });\r\n            let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n                return this.state.ntransactiontestcode.indexOf(c) === index;\r\n            });\r\n        \r\n                npreregno = sample.map(x => x).join(\",\")\r\n            \r\n            ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n            ntransactiontestcode = test.map(x => x).join(\",\")\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            // let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n            // if (ntransCode === transactionStatus.ALL) {\r\n            //     ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n            // } else {\r\n            //     ntransCode = ntransCode\r\n            // }\r\n            const inputParam = {\r\n                inputData: {\r\n                    change: this.props.Login.change,\r\n                    npreregno: this.props.Login.masterData.selectedReleaseHistory.npreregno,\r\n                    ntransactionsamplecode: ntransactionsamplecode,\r\n                    ntransactiontestcode: ntransactiontestcode,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                        this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                            this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                            String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                        null,\r\n                    ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                    // nTransStatus: ntransCode,\r\n                    // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                    //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                    //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n                    ntransactionstatus: String(transactionStatus.RELEASED),\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nflag: 2,\r\n                    ntype: 1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                    APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                    APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                    // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                    // ncontrolCode,\r\n                    checkBoxOperation: 3,\r\n                    action,\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n                },\r\n                userinfo: this.props.Login.userInfo\r\n            }\r\n                this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData)\r\n            \r\n        \r\n       \r\n    }\r\n    onSaveModalClick = (nflag, row, action) => {\r\n        let ntransactionsamplecode = \"\"\r\n        let ntransactiontestcode = \"\"\r\n        let npreregno = \"\"\r\n        if (this.state.npreregno && this.state.npreregno.length > 0) {\r\n            let sample = this.state.npreregno.filter((c, index) => {\r\n                return this.state.npreregno.indexOf(c) === index;\r\n            });\r\n            let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n                return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n            });\r\n            let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n                return this.state.ntransactiontestcode.indexOf(c) === index;\r\n            });\r\n            if (nflag === true) {\r\n                npreregno = row.dataItem['npreregno']\r\n\r\n            }\r\n            else {\r\n                npreregno = sample.map(x => x).join(\",\")\r\n            }\r\n            ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n            ntransactiontestcode = test.map(x => x).join(\",\")\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            // let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n            // if (ntransCode === transactionStatus.ALL) {\r\n            //     ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n            // } else {\r\n            //     ntransCode = ntransCode\r\n            // }\r\n            const inputParam = {\r\n                inputData: {\r\n                    change: this.props.Login.change,\r\n                    npreregno: npreregno,\r\n                    ntransactionsamplecode: ntransactionsamplecode,\r\n                    ntransactiontestcode: ntransactiontestcode,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                        this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                            this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                            String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                        null,\r\n                    ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                    // nTransStatus: ntransCode,\r\n                    // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                    //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                    //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n                    ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nflag: 2,\r\n                    ntype: 1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                    APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                    APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                    // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                    // ncontrolCode,\r\n                    checkBoxOperation: 3,\r\n                    action,\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n                },\r\n                userinfo: this.props.Login.userInfo\r\n            }\r\n            if (nflag === true) {\r\n                this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData)\r\n            }\r\n            else {\r\n                this.props.getReleasedSelectedSampleSubSampleTest(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\r\n            }\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE/SUBSAMPLE/TEST\" }));\r\n        }\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            sampleListMainField, subSampleListMainField, testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n            resultDataState, instrumentDataState,\r\n            materialDataState, taskDataState,\r\n            documentDataState, resultChangeDataState,\r\n            historyDataState, testCommentDataState,\r\n            samplePrintHistoryDataState, sampleHistoryDataState,\r\n            selectedRecord, SampletypeList, RegistrationTypeList,\r\n            RegistrationSubTypeList, FilterStatusList,\r\n            ConfigVersionList, UserSectionList, TestList, skip, take, testskip, testtake, selectedFilter,\r\n            DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns, DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem,\r\n            DynamicGridMoreField, stateDynamicDesign, sampleSearchField, subsampleSearchField, testSearchField, combinedSearchField, checkedflag, npreregno } = this.state;\r\n\r\n        let bool = false;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\r\n            if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\r\n                let dataState = {\r\n                    skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \r\n                }\r\n                resultDataState = dataState\r\n                instrumentDataState = dataState\r\n                materialDataState = dataState\r\n                taskDataState = dataState\r\n                documentDataState = dataState\r\n                resultChangeDataState = dataState\r\n                historyDataState = dataState\r\n                testCommentDataState = dataState\r\n\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\r\n\r\n            checkedflag = this.props.Login.checkedflag\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\r\n\r\n            npreregno = this.props.Login.npreregno\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            TestList = TestListMap.get(\"OptionList\");\r\n            bool = true;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n            const selectedFilters = this.props.Login.masterData.FilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\r\n                instrumentDataState = this.props.Login.instrumentDataState;\r\n            }\r\n            if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\r\n                taskDataState = this.props.Login.taskDataState;\r\n            }\r\n            if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\r\n                resultChangeDataState = this.props.Login.resultChangeDataState;\r\n            }\r\n            if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\r\n                historyDataState = this.props.Login.historyDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\r\n                samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\r\n            }\r\n            if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\r\n                sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n\r\n            // DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\r\n            DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\r\n            testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\r\n\r\n            sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n            subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n            testSearchField = dynamicColumn.testsearchfields ? dynamicColumn.testsearchfields : [];\r\n            sampleSearchField.map(item => { combinedSearchField.push(item) });\r\n            subsampleSearchField.map(item => { combinedSearchField.push(item) });\r\n            testSearchField.map(item => { combinedSearchField.push(item) });\r\n\r\n\r\n            bool = true;\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap,\r\n                sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n                sampleListMainField, subSampleListMainField, testListMainField,\r\n                SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n                resultDataState, instrumentDataState,\r\n                materialDataState, taskDataState,\r\n                documentDataState, resultChangeDataState,\r\n                historyDataState, testCommentDataState,\r\n                samplePrintHistoryDataState, sampleHistoryDataState,\r\n                selectedRecord, SampletypeList, RegistrationTypeList,\r\n                RegistrationSubTypeList, FilterStatusList,\r\n                ConfigVersionList, UserSectionList, TestList,\r\n                skip, take, testskip, testtake, selectedFilter,\r\n                DynamicSampleColumns, DynamicSubSampleColumns,\r\n                DynamicTestColumns, DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem,\r\n                DynamicGridMoreField, stateDynamicDesign,\r\n                sampleSearchField, subsampleSearchField, testSearchField, combinedSearchField, checkedflag, npreregno\r\n            });\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                const reportFilePath =this.props.Login.masterData.ReportPDFFile;\r\n\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\r\n                    dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\r\n                     reportFilePath \r\n\r\n\r\n                });\r\n\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.state.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n                const npreregno = this.props.Login.npreregno || [];\r\n                const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n\r\n                const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n                \r\n                const reportFilePath = this.props.Login.ntransactiontestcode || [];\r\n\r\n                this.setState({\r\n                    data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\r\n                    dataResult: process(this.props.Login.masterData.ReleaseSample || [], this.props.Login.dataState || dataState),\r\n                    npreregno,ntransactionsamplecode,ntransactiontestcode,\r\n                    dataState\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        delete this.props.Login.masterData[\"searchedData1\"]\r\n        delete this.props.Login.masterData[\"searchedData2\"]\r\n\r\n        delete this.props.Login.masterData[\"searchedData3\"]\r\n\r\n        this.props.Login.change = false\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue } = this.props.Login.masterData\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus)+','+String(transactionStatus.RELEASED) : \"-1\",\r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab || \"\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\r\n            checkBoxOperation: 3,\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchRef: this.searchRef,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getReleasedSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    closeDocModal = () => {\r\n        let openModal = false;\r\n        let showReport = false;\r\n        let selectedRecord = {};\r\n        this.setState({ showReport,openModal, selectedRecord });\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    selectionChange = (event, nflag, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (nflag === undefined) {\r\n            this.state.dataResult.data.map(item => {\r\n                if (item.npreregno === event.dataItem.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n\r\n            })\r\n            let preregno = event.dataItem.npreregno\r\n            let ncoahistorycode = event.dataItem.ncoahistorycode\r\n            let ssystemfilename = event.dataItem.ssystemfilename\r\n            const coaFileInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { ncoahistorycode, ssystemfilename },\r\n            };\r\n            this.props.updateStore(coaFileInfo);\r\n\r\n            this.childHeaderSelectionChange(event, preregno, checkedflag)\r\n        }\r\n        else {\r\n            let data = []\r\n            event.dataItems.map(item => {\r\n                data.push({ \"npreregno\": item.npreregno })\r\n            })\r\n            this.childHeaderSelectionChange(event, data, checkedflag)\r\n\r\n        }\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n    childHeaderSelectionChange = (event, preregno, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let subsamplecode = [];\r\n        let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno\r\n        if (npreregno.length === 0 || npreregno.length === undefined) {\r\n            this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\r\n\r\n                item.selected = checked\r\n                if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                    subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                }\r\n\r\n            })\r\n            this.props.Login.masterData.ReleaseSample.map(data => {\r\n                if (data.npreregno === npreregno) {\r\n                    data.selected = checked\r\n\r\n                }\r\n            })\r\n\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n        else {\r\n            npreregno.map(value => {\r\n                this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\r\n                    item.selected = checked\r\n                    if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                        subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                    }\r\n                })\r\n                //    this.props.Login.masterData.ReleaseSample.map(data => {\r\n                //        if (data.npreregno === value.npreregno) {\r\n                //         data.selected = checked\r\n\r\n                //        }\r\n                //    })\r\n            })\r\n\r\n\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let transactionsamplecode = []\r\n        if (subsamplecode !== undefined) {\r\n            transactionsamplecode = subsamplecode\r\n            transactionsamplecode.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item, checkedflag)\r\n\r\n                    return item;\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            let rFlag = true;\r\n            event.dataItems.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item, checkedflag)\r\n\r\n                    return item;\r\n                })\r\n\r\n            )\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\r\n                if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\r\n                return item.selected === true;\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n\r\n                    }\r\n\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n\r\n                })\r\n            }\r\n\r\n            // let x;\r\n            // let i;\r\n            // for (i = 0; i < this.props.Login.masterData.ReleaseSample.length; i++){\r\n            //     x=i\r\n            //         if (event.dataItems[0].npreregno !== this.props.Login.masterData.ReleaseSample[i].npreregno) {\r\n            //             // item.selected = checked;\r\n            //             rFlag = false;\r\n            //             break;\r\n            //         }\r\n            // }\r\n\r\n            // if (rFlag === true) {\r\n            //     this.props.Login.masterData.ReleaseSample[x].selected = checked;\r\n            // }\r\n        }\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        // if(checked===true)\r\n        // {\r\n        this.state.dataResult.data.map(item => {\r\n            item.selected = checked;\r\n            return item;\r\n        });\r\n        //this.setState({headerSelect:checked})  \r\n        this.selectionChange(event, 1, checked);\r\n        // }else\r\n        // {\r\n        //     this.setState({npreregno:[]})\r\n        // }\r\n\r\n\r\n    }\r\n    childSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                item.selected = checked;\r\n            }\r\n\r\n        })\r\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n            return item.slected === true\r\n        })\r\n        if (data === true) {\r\n            this.props.Login.masterData.ReleaseSample.map(item => {\r\n                if (event.dataItem.npreregno === item.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n                return item.selected === true\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo); \r\n    }\r\n    subChildSelectionChange = (event) => {\r\n        let x = []\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = checked;\r\n                this.collectData(item)\r\n            }\r\n\r\n        })\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n\r\n\r\n            if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\r\n                    x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y = x.filter(t => t.selected === true);\r\n        if (x.length === y.length) {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true\r\n                }\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false\r\n                }\r\n            })\r\n        }\r\n        this.state.dataResult.data.map(item => {\r\n\r\n\r\n            if (item.npreregno === event.dataItem.npreregno) {\r\n                if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\r\n                    x = this.props.Login.masterData.ReleaseSubSample[item.npreregno]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y1 = x.filter(t => t.selected === true);\r\n        if (x.length === y1.length) {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === y1[0].npreregno) {\r\n                    this.state.dataResult.data[i].selected = true\r\n                }\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === event.dataItem.npreregno) {\r\n                    this.state.dataResult.data[i].selected = false\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n    collectData = (item, checkedflag) => {\r\n        let npreregno = this.state.npreregno || []\r\n        let ntransactionsamplecode = this.state.ntransactionsamplecode || []\r\n        let ntransactiontestcode = this.state.ntransactiontestcode || []\r\n        if (item.selected === true) {\r\n            if (!npreregno.includes(item.npreregno)) {\r\n                npreregno.push(item.npreregno)\r\n            }\r\n            if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                ntransactionsamplecode.push(item.ntransactionsamplecode)\r\n            }\r\n            if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n                ntransactiontestcode.push(item.ntransactiontestcode)\r\n            }\r\n        }\r\n        else {\r\n            const npreregno1 = npreregno.filter(data => data !== item.npreregno)\r\n            npreregno = npreregno1\r\n\r\n            const ntransactionsamplecode1 = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode)\r\n            ntransactionsamplecode = ntransactionsamplecode1\r\n\r\n            const ntransactiontestcode1 = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode)\r\n            ntransactiontestcode = ntransactiontestcode1\r\n        }\r\n        //      const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n        //         npreregno: npreregno,\r\n        //         ntransactionsamplecode:ntransactionsamplecode,\r\n        //         ntransactiontestcode:ntransactiontestcode\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        this.setState({ npreregno: checkedflag === false ? [] : npreregno, ntransactionsamplecode: ntransactionsamplecode, ntransactiontestcode: ntransactiontestcode })\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential, filterColumnData,\r\n    getReleasedSelectedSampleSubSampleTest, getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, getApprovedSample\r\n    , generateReleasedReport, getReleasedDataDetails\r\n})(injectIntl(Release));"]},"metadata":{},"sourceType":"module"}