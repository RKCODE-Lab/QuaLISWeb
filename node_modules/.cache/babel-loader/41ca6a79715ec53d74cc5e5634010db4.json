{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\release\\\\Release.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { callService, crudMaster, updateStore, validateEsignCredential, filterColumnData, getApprovedRecordsAsDraft, getReleasedRegistrationType, getReleasedRegistrationSubType, getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, generateReleasedReport, getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample, getSectionForSectionWise } from '../../actions';\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, searchJsonData, showEsign } from '../../components/CommonScript';\nimport { SampleType, designProperties, formCode, reportCOAType, transactionStatus } from '../../components/Enumeration';\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\nimport { Affix } from 'rsuite';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport ReleaseFilter from './ReleaseFilter';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { ContentPanel, ProductList } from '../product/product.styled';\nimport { faEdit, faExpandArrowsAlt, faEye, faInfoCircle, faRecycle, faStore, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { ReactComponent as Generate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/generate-certificate.svg\";\nimport { ReactComponent as ReGenerate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/regenerate-icon.svg\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fileViewUrl, reportUrl } from '../../rsapi';\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\nimport { REPORTTYPE } from \"../../components/Enumeration\";\nimport { jsonSchema } from 'uuidv4';\nimport SampleInfoView from '../approval/SampleInfoView';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Release extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getReleasedApprovalVersion(inputParam);\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item\n            };\n            this.props.getReleasedRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item\n            };\n            this.props.getReleasedRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getReleasedApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          // const inputParamData = {\n          //     dfrom: obj.fromDate,\n          //     dto: obj.toDate,\n          //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          //     userinfo: this.props.Login.userInfo,\n          //     masterData: { ...this.props.Login.masterData },\n          //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n          //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     ndesigntemplatemappingcode: comboData.value,\n          //     DesignTemplateMappingValue: comboData.item\n          // }\n          // this.props.getReleaseFilterBasedTest(inputParamData)\n          let masterData = { ...this.props.Login.masterData,\n            DesignTemplateMappingValue: comboData.item\n          };\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              masterData\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getReleasedFilterStatus(inputParamData);\n          }\n        } //Don't Remove\n        // else if (fieldName === 'nsectioncode') {\n        //     if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n        //         // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n        //         inputParamData = {\n        //             dfrom: obj.fromDate,\n        //             dto: obj.toDate,\n        //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n        //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n        //             userinfo: this.props.Login.userInfo,\n        //             masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\n        //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n        //             ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        //             nsectioncode: comboData.value === -1 ? null\n        //                 // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n        //                 : comboData.value,\n        //             stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        //             ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n        //             DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n        //         }\n        //         this.props.getReleasedFilterBasedTest(inputParamData);\n        //     }\n        // }\n        // else if (fieldName === 'njobstatuscode') {\n        //     if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n        //         let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\n        //         const updateInfo = {\n        //             typeName: DEFAULT_RETURN,\n        //             data: { masterData }\n        //         }\n        //         this.props.updateStore(updateInfo);\n        //     }\n        // }\n        else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ncoareporttypecode') {\n          if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\n            let masterData = { ...this.props.Login.masterData,\n              ReportTypeValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } // else {\n        //     if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n        //         //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n        //         //  const updateInfo = {\n        //         //     typeName: DEFAULT_RETURN,\n        //         //    data: { masterData }\n        //         // }\n        //         inputParamData = {\n        //             dfrom: obj.fromDate,\n        //             dto: obj.toDate,\n        //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n        //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n        //             userinfo: this.props.Login.userInfo,\n        //             masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\n        //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n        //             ntransactionstatus: comboData.value,\n        //             stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n        //             nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n        //             //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n        //             //: this.props.Login.masterData.UserSectionValue.nsectioncode,\n        //             , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n        //             , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n        //         }\n        //         this.props.getReleaseFilterBasedTest(inputParamData);\n        //     }\n        // }\n\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      this.props.Login.change = false;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue; //  let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\n      //  let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\n\n      let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        //  realUserSectionValue, realTestValue,\n        realDesignTemplateMappingValue,\n        realReportTypeValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\n        // ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode) {\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData\n        };\n        this.props.getReleasedSample(inputParam);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.checkFunction = data => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          arrayfalse: data.arrayfalse,\n          childfalsearray: data.childfalsearray\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.checkFunction1 = () => {\n      this.setState({\n        count: 1\n      });\n    };\n\n    this.expandFunc = change => {\n      let count = change.count;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: { ...this.props.Login.masterData\n          },\n          change: change.change,\n          isAddPopup: false,\n          isEditPopup: false,\n          isDeletePopup: false,\n          checkFlag: \"1\",\n          count: count\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewReport = () => {\n      if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\n        let showReport = true;\n        this.setState({\n          showReport\n        });\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_REPORTNOTGENERATED\"\n        }));\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n\n      if (fieldName === 'nprojecttypecode') {\n        const inputParamData = {\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          nprojecttypecode: comboData.value,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        };\n        this.props.getApprovedProjectByProjectType(inputParamData);\n      }\n\n      if (fieldName === 'nprojectmastercode') {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let realFromDate = obj.fromDate;\n        let realToDate = obj.toDate;\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          realFromDate,\n          realToDate,\n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nprojectmastercode: comboData.value,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          // ModalStatusValue: true,\n          isPopup: true,\n          isAddPopup: true,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData\n          };\n\n          if (inputData.nsampletypecode === SampleType.PROJECTSAMPLETYPE && inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) {\n            this.props.getSectionForSectionWise(inputParam);\n          } else {\n            this.props.getReleasedSample(inputParam);\n          }\n        }\n      }\n\n      if (fieldName === 'nsectioncode') {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let realFromDate = obj.fromDate;\n        let realToDate = obj.toDate;\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          realFromDate,\n          realToDate,\n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nsectioncode: comboData.value,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          // ModalStatusValue: true,\n          isPopup: true,\n          isAddPopup: true,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData\n          };\n          this.props.getReleasedSample(inputParam);\n        }\n      }\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let closeModal = true;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign,\n          closeModal\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.previewReport = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          nflag: 2,\n          change: this.props.Login.change,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          url: this.props.Login.settings[24],\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          userinfo: this.props.Login.userInfo,\n          nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          userinfo: this.props.Login.userInfo,\n          action: 'IDS_DOWNLOADFILE',\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n        },\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.previewAndFinalReport(inputParam.inputData, this.props.Login.masterData);\n    };\n\n    this.downloadReleasedFile = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          url: this.props.Login.settings[24],\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          // ntransactionsamplecode: ntransactionsamplecode,\n          //ntransactiontestcode: ntransactiontestcode,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          // ntransactionstatus: String(transactionStatus.RELEASED),\n          ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          userinfo: this.props.Login.userInfo,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          // nsectioncode: -1,\n          nflag: 2,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n        },\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData);\n    };\n\n    this.regenerateReleasedFile = action => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          ntransactionstatus: String(transactionStatus.RELEASED),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          nflag: 2,\n          userinfo: this.props.Login.userInfo,\n          nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          action,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n        },\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.previewAndFinalReport(inputParam.inputData, this.props.Login.masterData);\n    };\n\n    this.onSaveModalClick = () => {\n      let ntransactionsamplecode = \"\";\n      let ntransactiontestcode = \"\";\n      let npreregno = \"\";\n\n      if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\n        if (this.state.npreregno && this.state.npreregno.length > 0) {\n          let sample = this.state.npreregno.filter((c, index) => {\n            return this.state.npreregno.indexOf(c) === index;\n          });\n          let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n            return this.state.ntransactionsamplecode.indexOf(c) === index;\n          });\n          let test = this.state.ntransactiontestcode.filter((c, index) => {\n            return this.state.ntransactiontestcode.indexOf(c) === index;\n          });\n          npreregno = sample.map(x => x).join(\",\");\n          ntransactionsamplecode = subsample.map(x => x).join(\",\");\n          ntransactiontestcode = test.map(x => x).join(\",\");\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          const inputParam = {\n            inputData: {\n              change: this.props.Login.change,\n              npreregno: String(npreregno),\n              ntransactionsamplecode: ntransactionsamplecode,\n              ntransactiontestcode: ntransactiontestcode,\n              ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode : -1,\n              url: this.props.Login.settings[24],\n              ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              isAddPopup: false,\n              isEditPopup: false,\n              nflag: 2,\n              userinfo: this.props.Login.userInfo,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n            },\n            userinfo: this.props.Login.userInfo,\n            methodUrl: \"Release\",\n            classUrl: \"release\",\n            operation: this.props.Login.operation\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                operation: this.props.Login.operation,\n                screenName: this.props.Login.screenName\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            if (this.props.Login.isDeletePopup) {\n              this.props.getDeleteApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData);\n            } else if (this.props.Login.isEditPopup) {\n              this.props.UpdateApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData);\n            } else {\n              this.props.getApprovedRecordsAsDraft(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData);\n            }\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTANYONESAMPLE\"\n          }));\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTANYONESAMPLE\"\n        }));\n      }\n    };\n\n    this.sendToPortal = () => {\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        url: this.props.Login.settings[24],\n        isPortal: true,\n        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n        allPreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.getReportForPortal(inputParam);\n    };\n\n    this.patientInfo = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          isPatientDetails: true,\n          openModal: true,\n          hideSave: true,\n          isAddPopup: false,\n          isEditPopup: false,\n          isDeletePopup: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      delete this.props.Login.masterData[\"searchedData\"];\n      this.props.Login.change = false;\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        // realUserSectionValue, realTestValue,\n        realReportTypeValue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        // realUserSectionValue, realTestValue,\n        realReportTypeValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        ncoareporttypecode: realReportTypeValue && realReportTypeValue.ncoareporttypecode || -1,\n        ntransactionstatus: realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined || realFilterStatusValue.ntransactionstatus !== '0' ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\n        // ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode !== -1) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData\n        };\n        this.props.getReleasedSample(inputParam);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let isPatientDetails = this.props.Login.isPatientDetails;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let hideSave = this.props.Login.hideSave;\n      let isAddPopup = this.props.Login.isAddPopup;\n      let isEditPopup = this.props.Login.isEditPopup;\n      let isDeletePopup = this.props.Login.isDeletePopup;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          isPatientDetails = false;\n          hideSave = false;\n          isAddPopup = false;\n          isEditPopup = false;\n          isDeletePopup = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord[\"agree\"] = 4;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        isPatientDetails = false;\n        hideSave = false;\n        isAddPopup = false;\n        isEditPopup = false;\n        isDeletePopup = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          isPatientDetails,\n          hideSave,\n          isAddPopup,\n          isEditPopup,\n          isDeletePopup\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeDocModal = () => {\n      let openModal = false;\n      let showReport = false;\n      let selectedRecord = {};\n      this.setState({\n        showReport,\n        openModal,\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[event.target.name] = event.target.value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.selectionChange = (event, nflag, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (nflag === undefined) {\n        this.state.dataResult.data.map(item => {\n          if (item.npreregno === event.dataItem.npreregno) {\n            item.selected = checked;\n          }\n        });\n        let preregno = event.dataItem.npreregno;\n        let ncoahistorycode = event.dataItem.ncoahistorycode;\n        let ssystemfilename = event.dataItem.ssystemfilename;\n        const coaFileInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncoahistorycode,\n            ssystemfilename\n          }\n        };\n        this.props.updateStore(coaFileInfo);\n        this.childHeaderSelectionChange(event, preregno, checkedflag);\n      } else {\n        let data = [];\n        event.dataItems.map(item => {\n          data.push({\n            \"npreregno\": item.npreregno\n          });\n        });\n        this.childHeaderSelectionChange(event, data, checkedflag);\n      }\n    };\n\n    this.childHeaderSelectionChange = (event, preregno, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let subsamplecode = [];\n      let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno;\n\n      if (npreregno.length === 0 || npreregno.length === undefined) {\n        this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\n          item.selected = checked;\n\n          if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n            subsamplecode.push({\n              \"ntransactionsamplecode\": item.ntransactionsamplecode\n            });\n          }\n        });\n        this.props.Login.masterData.ReleaseSample.map(data => {\n          if (data.npreregno === npreregno) {\n            data.selected = checked;\n          }\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      } else {\n        npreregno.map(value => {\n          this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\n            item.selected = checked;\n\n            if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n              subsamplecode.push({\n                \"ntransactionsamplecode\": item.ntransactionsamplecode\n              });\n            }\n          });\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      }\n    };\n\n    this.subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let transactionsamplecode = subsamplecode;\n\n      if (subsamplecode !== undefined) {\n        //  transactionsamplecode = subsamplecode\n        transactionsamplecode.map(value => {\n          this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n            item.selected = checked;\n            this.collectData(item, checkedflag);\n            return item;\n          });\n        });\n      } else {\n        event.dataItems.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          this.collectData(item, checkedflag);\n          return item;\n        }));\n        this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\n          if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n      }\n    };\n\n    this.headerSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (event.dataItems.length !== 0) {\n        this.state.dataResult.data.map(item => {\n          item.selected = checked;\n          return item;\n        });\n        this.selectionChange(event, 1, checked);\n      } else {\n        this.setState({\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      }\n    };\n\n    this.childSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          item.selected = checked;\n        }\n      });\n      let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n        return item.slected === true;\n      });\n\n      if (data === true) {\n        this.props.Login.masterData.ReleaseSample.map(item => {\n          if (event.dataItem.npreregno === item.npreregno) {\n            item.selected = checked;\n          }\n        });\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n      }\n    };\n\n    this.subChildSelectionChange = event => {\n      let x = [];\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n        if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\n          item.selected = checked;\n          this.collectData(item);\n        }\n      });\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\n            x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode];\n          }\n        }\n      });\n      let y = x.filter(t => t.selected === true);\n\n      if (x.length === y.length) {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true;\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false;\n          }\n        });\n      }\n\n      this.state.dataResult.data.map(item => {\n        if (item.npreregno === event.dataItem.npreregno) {\n          if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\n            x = this.props.Login.masterData.ReleaseSubSample[item.npreregno];\n          }\n        }\n      });\n      let y1 = x.filter(t => t.selected === true);\n\n      if (x.length === y1.length) {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === y1[0].npreregno) {\n            this.state.dataResult.data[i].selected = true;\n          }\n        });\n      } else {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === event.dataItem.npreregno) {\n            this.state.dataResult.data[i].selected = false;\n          }\n        });\n      }\n    };\n\n    this.collectData = (item, checkedflag) => {\n      let npreregno = this.state.npreregno || [];\n      let ntransactionsamplecode = this.state.ntransactionsamplecode || [];\n      let ntransactiontestcode = this.state.ntransactiontestcode || [];\n\n      if (item.selected === true) {\n        if (!npreregno.includes(item.npreregno)) {\n          npreregno.push(item.npreregno);\n        }\n\n        if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n          ntransactionsamplecode.push(item.ntransactionsamplecode);\n        } // Don't Remove\n\n\n        if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n          ntransactiontestcode.push(item.ntransactiontestcode);\n        }\n      } else {\n        const preregno = npreregno.filter(data => data !== item.npreregno);\n        npreregno = preregno;\n        const transactionsamplecode = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode);\n        ntransactionsamplecode = transactionsamplecode; // Don't Remove\n\n        const transactiontestcode = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode);\n        ntransactiontestcode = transactiontestcode;\n      }\n\n      this.setState({\n        npreregno: checkedflag === false ? [] : npreregno,\n        ntransactionsamplecode: checkedflag === false ? [] : ntransactionsamplecode,\n        ntransactiontestcode: checkedflag === false ? [] : ntransactiontestcode\n      });\n    };\n\n    this.formRef = React.createRef();\n    const dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      childDataResult: [],\n      dataState: dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      SampletypeList: [],\n      ProjecttypeList: [],\n      ProjectMasterList: [],\n      SectionList: [],\n      ReporttypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      searchedData: [],\n      count: 0,\n      SampleGridItem: [],\n      combinedSearchField: [],\n      npreregno: [],\n      ntransactiontestcode: [],\n      ntransactionsamplecode: [],\n      stateDynamicDesign: [],\n      sidebarview: false\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sreportno\", \"susername\", \"stransdisplaystatus\"];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  gridfillingColumn(data) {\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    let filePath = \"\";\n\n    if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\n      filePath = reportUrl();\n    } else {\n      filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\n    }\n\n    let userStatusCSS = \"\";\n    let activeIconCSS = \"fa fa-check\";\n\n    if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.DRAFT) {\n      userStatusCSS = \"outline-secondary\";\n      activeIconCSS = \"\";\n    } else if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.RELEASED) {\n      userStatusCSS = \"outline-success\";\n    } else {\n      userStatusCSS = \"outline-Final\";\n    }\n\n    const filterParam = {\n      inputListName: \"ReleaseHistory\",\n      selectedObject: \"selectedReleaseHistory\",\n      primaryKeyField: \"ncoaparentcode\",\n      fetchUrl: \"release/getReleaseHistory\",\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList,\n      fecthInputObject: {\n        isSearch: true,\n        userinfo: this.props.Login.userInfo,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        masterData: this.props.Login.masterData,\n        searchFieldList: this.searchFieldList,\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        //  ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      }\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, {\n      \"label\": \"IDS_REPORTTYPE\",\n      \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" : this.props.Login.masterData.ReportTypeValue ? this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\n    }];\n    const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"AddSamples\") && this.state.controlMap.get('AddSamples').ncontrolcode;\n    const previewId = this.state.controlMap.has(\"PreviewFinalReport\") && this.state.controlMap.get(\"PreviewFinalReport\").ncontrolcode;\n    const downloadId = this.state.controlMap.has(\"ReleaseReportGeneration\") && this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\n    const regenerateId = this.state.controlMap.has(\"RegenerateRelease\") && this.state.controlMap.get(\"RegenerateRelease\").ncontrolcode;\n    const viewreportId = this.state.controlMap.has(\"ViewReportRelease\") && this.state.controlMap.get(\"ViewReportRelease\").ncontrolcode;\n    const sendtoportalId = this.state.controlMap.has(\"SendToPortal\") && this.state.controlMap.get(\"SendToPortal\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"AppendSamples\") && this.state.controlMap.get(\"AppendSamples\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"RemoveSamples\") && this.state.controlMap.get(\"RemoveSamples\").ncontrolcode;\n    const patientinfoId = this.state.controlMap.has(\"PatientInfo\") && this.state.controlMap.get(\"PatientInfo\").ncontrolcode;\n    const ReleaseMasterDataParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      //   realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\n      //   realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue,\n      masterData: { ...this.props.Login.masterData\n      },\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.npreregno || \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n        //  'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode // 'ncoahistorycode':COAHistory\n\n      }\n    };\n    const ApprovedModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'isAddPopup': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        })\n      }\n    };\n    const RemoveModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'nneedremove': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\n        ncontrolCode: deleteId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_REMOVESAMPLES\"\n        })\n      }\n    };\n    const EditModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'nneededit': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\n        ncontrolCode: editId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_EDITSAMPLES\"\n        }),\n        nsectioncode: this.props.Login.nsectioncode\n      }\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.setState({\n        sidebarview: !this.state.sidebarview\n      }),\n      className: \"sidebar-view-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 29\n      }\n    }, !this.state.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_RELEASE\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory,\n      getMasterDetail: ReleaseSample => this.props.getReleasedDataDetails({ ...ReleaseMasterDataParam,\n        ...ReleaseSample\n      }),\n      selectedMaster: this.props.Login.masterData.selectedReleaseHistory,\n      primaryKeyField: \"ncoaparentcode\",\n      mainField: \"sreportno\",\n      firstField: \"susername\",\n      secondField: \"sgenerateddate\" // secondField=\"stransdisplaystatus\"\n      ,\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: releaseId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openModal: () => this.props.getApprovedSample(ApprovedModalParam, releaseId),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(ReleaseFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          ReportType: this.state.ReporttypeList || [],\n          ReportTypeValue: this.props.Login.masterData.ReportTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          DesignTemplateMapping: this.props.Login.masterData.DesignTemplateMapping,\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {} //   UserSection={this.state.UserSectionList || []}\n          //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\n          //   Test={this.state.TestList || []}\n          //  TestValue={this.props.Login.masterData.TestValue || []}\n          ,\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          userInfo: this.props.Login.userInfo,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 58\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '8' : \"10\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.selectedReleaseHistory.stransdisplaystatus)), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(ProductList, {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 53\n      }\n    }, (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDITSAMPLES\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      onClick: () => this.props.getEditApprovedSample(EditModalParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 65\n      }\n    })), (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REMOVESAMPLES\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.props.getRemoveApprovedSample(RemoveModalParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 61\n      }\n    })), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PATIENTINFO\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(patientinfoId) === -1,\n      onClick: () => this.patientInfo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faInfoCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(previewId) === -1,\n      onClick: () => this.previewReport(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(downloadId) === -1,\n      onClick: () => this.downloadReleasedFile(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Generate, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(regenerateId) === -1,\n      onClick: () => this.regenerateReleasedFile('IDS_REGENERATEFILE'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ReGenerate, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_VIEWREPORT\"\n      }),\n      hidden: this.state.userRoleControlRights.indexOf(viewreportId) === -1,\n      onClick: () => this.viewReport(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faExpandArrowsAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 61\n      }\n    })), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_SENDTOPORTAL\"\n      }),\n      hidden: this.state.userRoleControlRights.indexOf(sendtoportalId) === -1,\n      onClick: () => this.sendToPortal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faStore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 65\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n      needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n      data: this.state.data,\n      dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      expandNextData: this.expandNextData,\n      checkFunction: this.checkFunction,\n      checkFunction1: this.checkFunction1,\n      expandFunc: this.expandFunc //expandData={this.expandData}\n      ,\n      childDataResult: this.state.childDataResult,\n      subChildDataResult: this.state.subChildDataResult,\n      extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n      subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n      expandField: \"expanded\",\n      reloadData: this.reloadData,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '525px',\n      gridTop: '10px' //   isActionRequired={true}\n      //   isToolBarRequired={true}\n      //  isExpandRequired={true}\n      //   isDownloadRequired={true}\n      ,\n      isCheckBoxRequired: false,\n      isCollapseRequired: true,\n      selectedId: this.props.Login.selectedId,\n      hasChild: true,\n      hasSubChild: true,\n      childList: this.props.Login.masterData.ReleasedSubSampleDetails,\n      childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n      childMappingField: \"npreregno\",\n      subChildMappingField: \"ntransactionsamplecode\" // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\n      ,\n      subChildList: this.props.Login.masterData.ReleasedTestDetails,\n      selectedsubcild: this.props.Login.selectedsubcild,\n      methodUrl: \"Release\",\n      headerSelectionChange: this.headerSelectionChange,\n      childHeaderSelectionChange: this.childHeaderSelectionChange,\n      childSelectionChange: this.childSelectionChange,\n      subChildSelectionChange: this.subChildSelectionChange,\n      subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n      selectionChange: this.selectionChange,\n      releaseRecord: this.onSaveModalClick // viewDownloadFile={this.viewDownloadFile}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 45\n      }\n    })))) : \"\"))), this.state.showReport ? /*#__PURE__*/React.createElement(DocViewer, {\n      file: filePath,\n      showReport: this.state.showReport,\n      closeModal: this.closeDocModal,\n      type: \"pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 25\n      }\n    }) : \"\", this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      size: \"xl\",\n      closeModal: this.closeModal,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.isPatientDetails ? this.props.intl.formatMessage({\n        id: \"IDS_PATIENTINFO\"\n      }) : this.props.Login.screenName,\n      onSaveClick: this.onSaveModalClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      hideSave: this.props.Login.hideSave,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 29\n        }\n      }) : this.props.Login.isPatientDetails ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length > 0 ? this.props.Login.masterData.ReleasedSampleDetails[this.props.Login.masterData.ReleasedSampleDetails.length - 1] : {},\n        SingleItem: this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails ? this.state.SingleItem : [],\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 37\n        }\n      }, this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE && this.props.Login.isDeletePopup !== true && this.props.Login.isComboCheck !== true && this.props.Login.isEditPopup !== true && /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nprojecttypecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_PROJECTTYPE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.ProjectTypeList,\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\",\n        defaultValue: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\",\n        isMandatory: true,\n        isMulti: false,\n        isSearchable: true,\n        isDisabled: this.props.Login.isEditPopup === true ? true : false,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, 'nprojecttypecode', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 49\n        }\n      })), this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE && this.props.Login.isDeletePopup !== true && this.props.Login.isComboCheck !== true && this.props.Login.isEditPopup !== true && /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nprojectmastercode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_PROJECTCODE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.projectMasterList,\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\",\n        defaultValue: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\",\n        isMandatory: true,\n        isMulti: false,\n        isSearchable: true,\n        isDisabled: this.props.Login.isEditPopup === true ? true : false,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, 'nprojectmastercode', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 49\n        }\n      })), this.props.Login.masterData.realReportTypeValue && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) && this.props.Login.isDeletePopup !== true && this.props.Login.isComboCheck !== true && this.props.Login.isEditPopup !== true && /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1072,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nsectioncode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_SECTION\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.sectionList,\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\",\n        defaultValue: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\",\n        isMandatory: true,\n        isMulti: false,\n        isSearchable: true,\n        isDisabled: this.props.Login.isEditPopup === true ? true : false,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, 'nsectioncode', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n        needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        data: this.state.data,\n        dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        dataState: this.state.dataState,\n        dataStateChange: this.dataStateChange,\n        expandNextData: this.expandNextData,\n        checkFunction: this.checkFunction,\n        checkFunction1: this.checkFunction1,\n        expandFunc: this.expandFunc,\n        childDataResult: this.state.childDataResult,\n        subChildDataResult: this.state.subChildDataResult,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n        expandField: \"expanded\",\n        handleExpandChange: this.handleExpandChange,\n        childHandleExpandChange: this.childHandleExpandChange,\n        isCheckBoxRequired: true,\n        reloadData: this.reloadData,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        pageable: true,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        gridTop: '10px' // isActionRequired={true}\n        //   isToolBarRequired={true}\n        //  isExpandRequired={true}\n        //   isDownloadRequired={true}\n        ,\n        isCollapseRequired: true,\n        selectedId: this.props.Login.selectedId,\n        hasChild: true,\n        hasSubChild: true,\n        childList: this.props.Login.masterData.searchedData2 || this.props.Login.masterData.ReleaseSubSample,\n        childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n        childMappingField: \"npreregno\",\n        subChildMappingField: \"ntransactionsamplecode\",\n        subChildList: this.props.Login.masterData.searchedData3 || this.props.Login.masterData.ReleaseTest,\n        selectedsubcild: this.props.Login.selectedsubcild,\n        methodUrl: \"Release\",\n        headerSelectionChange: this.headerSelectionChange,\n        childHeaderSelectionChange: this.childHeaderSelectionChange,\n        childSelectAll: this.props.Login.childSelectAll,\n        childSelectionChange: this.childSelectionChange,\n        subChildSelectionChange: this.subChildSelectionChange,\n        subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n        subChildSelectAll: this.props.Login.subChildSelectAll,\n        selectionChange: this.selectionChange,\n        selectAll: this.props.Login.selectAll,\n        releaseRecord: this.onSaveModalClick // viewDownloadFile={this.viewDownloadFile}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 33\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      SampleGridItem,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      ReporttypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      //UserSectionList, TestList,\n      SingleItem,\n      DynamicGridItem,\n      DynamicTestGridItem,\n      DynamicSubSampleGridItem,\n      stateDynamicDesign,\n      checkedflag,\n      dataState\n    } = this.state;\n    let bool = false;\n    let reportFilePath = \"\";\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      reportFilePath = this.props.Login.masterData.ReportPDFFile;\n      bool = true;\n    } // else {\n    //     if (this.state.dataState === undefined) {\n    //         dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\n    //     }\n    //     //  const npreregno =  [];\n    //     //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n    //     //  const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n    //     bool = true;\n    // }\n\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\n      checkedflag = this.props.Login.checkedflag;\n      bool = true;\n    } // if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\n    //     npreregno = this.props.Login.npreregno\n    //     bool = true;\n    // }\n\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false); // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\n      // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \n\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      ReporttypeList = ReporttypeListMap.get(\"OptionList\"); // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\n      //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\n\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\"); //  UserSectionList = UserSectionListMap.get(\"OptionList\");\n      //   TestList = TestListMap.get(\"OptionList\");\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\n      DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    }\n\n    if (bool) {\n      bool = false;\n      let allData = {\n        userRoleControlRights,\n        controlMap,\n        SampleGridItem,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        ReporttypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        //UserSectionList, TestList,\n        SingleItem,\n        DynamicGridItem,\n        DynamicTestGridItem,\n        DynamicSubSampleGridItem,\n        stateDynamicDesign,\n        checkedflag,\n        data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\n        dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        reportFilePath\n      };\n\n      if (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true || this.props.Login.isEditPopup && this.props.Login.isEditPopup === true || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true) {\n        this.setState({ ...allData,\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      } else {\n        this.setState(allData);\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  filterColumnData,\n  getApprovedRecordsAsDraft,\n  getReleasedRegistrationType,\n  getReleasedRegistrationSubType,\n  getReleasedFilterStatus,\n  getReleasedApprovalVersion,\n  getReleasedFilterBasedTest,\n  getReleasedSample,\n  getApprovedSample,\n  generateReleasedReport,\n  getReleasedDataDetails,\n  getApprovedProjectByProjectType,\n  getApprovedProjectType,\n  getReportForPortal,\n  previewAndFinalReport,\n  getRemoveApprovedSample,\n  getDeleteApprovedSample,\n  UpdateApprovedSample,\n  getEditApprovedSample,\n  getSectionForSectionWise\n})(injectIntl(Release));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/release/Release.jsx"],"names":["React","Row","Col","Card","FormGroup","FormLabel","Nav","toast","process","connect","injectIntl","callService","crudMaster","updateStore","validateEsignCredential","filterColumnData","getApprovedRecordsAsDraft","getReleasedRegistrationType","getReleasedRegistrationSubType","getReleasedFilterStatus","getReleasedApprovalVersion","getReleasedFilterBasedTest","getReleasedSample","generateReleasedReport","getApprovedSample","getReleasedDataDetails","getApprovedProjectByProjectType","getApprovedProjectType","getReportForPortal","previewAndFinalReport","getRemoveApprovedSample","getDeleteApprovedSample","UpdateApprovedSample","getEditApprovedSample","getSectionForSectionWise","ListMaster","getControlMap","convertDateValuetoString","rearrangeDateFormat","constructOptionList","searchJsonData","showEsign","SampleType","designProperties","formCode","reportCOAType","transactionStatus","DataGridWithMultipleGrid","Affix","DEFAULT_RETURN","BreadcrumbComponent","ReleaseFilter","SlideOutModal","Esign","ContentPanel","ProductList","faEdit","faExpandArrowsAlt","faEye","faInfoCircle","faRecycle","faStore","faTrash","FormSelectSearch","FontAwesomeIcon","fileViewUrl","reportUrl","DocViewer","REPORTTYPE","jsonSchema","SampleInfoView","mapStateToProps","state","Login","Release","Component","constructor","props","sidebarExpandCollapse","setState","sidebarview","dataStateChange","event","dataState","dataResult","data","handleDateChange","dateName","dateValue","Date","dfrom","masterData","fromDate","userInfo","dto","toDate","obj","inputParam","inputData","nflag","nregtypecode","RegTypeValue","nregsubtypecode","RegSubTypeValue","String","userinfo","onFilterComboChange","comboData","fieldName","inputParamData","value","SampleTypeValue","nsampletypecode","item","DesignTemplateMappingValue","updateInfo","typeName","ApprovalVersionValue","napproveconfversioncode","napprovalversioncode","ndesigntemplatemappingcode","TestValue","ntestcode","ReportTypeValue","ncoareporttypecode","onFilterSubmit","searchRef","current","change","realFromDate","realToDate","realSampleTypeValue","realRegTypeValue","realRegSubTypeValue","realFilterStatusValue","FilterStatusValue","realApprovalVersionValue","realReportTypeValue","realDesignTemplateMappingValue","npreregno","parseInt","ntransactionstatus","undefined","RELEASED","napprovalconfigcode","napprovalconfigversioncode","nneedsubsample","nneedtemplatebasedflow","info","intl","formatMessage","id","checkFunction","arrayfalse","childfalsearray","checkFunction1","count","expandFunc","isAddPopup","isEditPopup","isDeletePopup","checkFlag","viewReport","ReportPDFFile","length","showReport","warn","onComboChange","selectedRecord","nprojecttypecode","realUserSectionValue","UserSectionValue","realTestValue","nprojectmastercode","isPopup","sfilterstatus","PROJECTSAMPLETYPE","SECTIONWISEMULTIPLESAMPLE","nsectioncode","closeModalShow","loadEsign","closeModal","modalShow","selectedId","previewReport","ncoaparentcode","selectedReleaseHistory","spreregno","ntransactionsamplecode","stransactionsamplecode","ntransactiontestcode","stransactiontestcode","url","settings","nprimarykey","nreporttypecode","COAREPORT","sprimarykeyname","action","downloadReleasedFile","nclinicaltyperequired","regenerateReleasedFile","onSaveModalClick","ReleaseSample","sample","filter","c","index","indexOf","subsample","test","map","x","join","methodUrl","classUrl","operation","userRoleControlRights","nformcode","ncontrolCode","screenData","screenName","sendToPortal","isPortal","allPreregno","patientInfo","isPatientDetails","openModal","hideSave","reloadData","closeDocModal","onInputOnChange","target","name","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","selectionChange","checkedflag","checked","syntheticEvent","dataItem","selected","preregno","ncoahistorycode","ssystemfilename","coaFileInfo","childHeaderSelectionChange","dataItems","push","subsamplecode","ReleaseSubSample","includes","subChildHeaderSelectionChange","transactionsamplecode","ReleaseTest","collectData","every","headerSelectionChange","childSelectionChange","slected","subChildSelectionChange","y","t","i","y1","transactiontestcode","formRef","createRef","skip","take","masterStatus","error","childDataResult","controlMap","Map","SampletypeList","ProjecttypeList","ProjectMasterList","SectionList","ReporttypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","sampleSearchField","subsampleSearchField","testSearchField","searchedData","SampleGridItem","combinedSearchField","stateDynamicDesign","searchFieldList","getDerivedStateFromProps","gridfillingColumn","temparray","option","LABEL","slanguagetypecode","VALUE","render","filePath","filetype","reportFilePath","userStatusCSS","activeIconCSS","DRAFT","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","isSearch","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","scoareporttypename","releaseId","has","get","ncontrolcode","previewId","downloadId","regenerateId","viewreportId","sendtoportalId","editId","deleteId","patientinfoId","ReleaseMasterDataParam","ApprovedModalParam","PARTIAL","RemoveModalParam","EditModalParam","ReleaseHistory","openFilter","closeFilter","showFilter","ConfigVersionList","DesignTemplateMapping","onDesignTemplateChange","Object","values","stransdisplaystatus","nprojectspecrequired","YES","nportalrequired","searchedData1","ReleasedSampleDetails","expandNextData","subChildDataResult","DynamicGridItem","DynamicTestGridItem","ReleasedSubSampleDetails","DynamicSubSampleGridItem","ReleasedTestDetails","selectedsubcild","SingleItem","PROJECTWISE","isComboCheck","ProjectTypeList","projectMasterList","SECTIONWISE","sectionList","handleExpandChange","childHandleExpandChange","searchedData2","searchedData3","childSelectAll","subChildSelectAll","selectAll","componentDidUpdate","previousProps","bool","SampletypeListMap","ReporttypeListMap","ReportType","RegistrationTypeListMap","RegType","RegistrationSubTypeListMap","RegSubType","FilterStatusListMap","FilterStatus","ConfigVersionListMap","ApprovalVersion","TestListMap","Test","DynamicDesign","dynamicColumn","JSON","parse","jsondata","samplegriditem","testListFields","releasetestfields","subsamplelistitem","sampledisplayfields","DesignTemplateMappingMap","allData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    filterColumnData,\r\n    getApprovedRecordsAsDraft,\r\n    getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, generateReleasedReport,\r\n    getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal,\r\n    previewAndFinalReport,getRemoveApprovedSample,getDeleteApprovedSample,UpdateApprovedSample ,getEditApprovedSample,getSectionForSectionWise\r\n} from '../../actions';\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, searchJsonData, showEsign } from '../../components/CommonScript';\r\nimport { SampleType, designProperties, formCode, reportCOAType, transactionStatus } from '../../components/Enumeration';\r\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\r\nimport { Affix } from 'rsuite';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ReleaseFilter from './ReleaseFilter';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { ContentPanel, ProductList } from '../product/product.styled';\r\nimport { faEdit, faExpandArrowsAlt, faEye, faInfoCircle, faRecycle, faStore, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { ReactComponent as Generate } from '../../assets/image/generate-certificate.svg'\r\nimport { ReactComponent as ReGenerate } from '../../assets/image/regenerate-icon.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { fileViewUrl, reportUrl } from '../../rsapi';\r\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\r\nimport { REPORTTYPE } from \"../../components/Enumeration\";\r\nimport { jsonSchema } from 'uuidv4';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Release extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            childDataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            SampletypeList: [],\r\n            ProjecttypeList: [],\r\n            ProjectMasterList: [],\r\n            SectionList: [],\r\n            ReporttypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            searchedData: [],\r\n            count: 0,\r\n            SampleGridItem: [],\r\n            combinedSearchField: [],\r\n            npreregno: [],\r\n            ntransactiontestcode: [],\r\n            ntransactionsamplecode: [],\r\n            stateDynamicDesign: [],\r\n            sidebarview: false\r\n\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"sreportno\", \"susername\",\"stransdisplaystatus\"];\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n\r\n\r\n\r\n    // expandNextData(y) {\r\n    //     let change = []\r\n    //     let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\r\n\r\n    //     let data = x.data.every(item => {\r\n    //         return item.expanded === true\r\n    //     })\r\n    //     if (data === true) {\r\n    //         change = true\r\n    //     } else {\r\n    //         change = false\r\n    //     }\r\n    //     this.expandFunc({ change: change })\r\n\r\n    // }\r\n    dataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ dataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getReleasedApprovalVersion(inputParam)\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item\r\n                    };\r\n                    this.props.getReleasedRegistrationType(inputParamData)\r\n                }\r\n            }\r\n\r\n            else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item\r\n                    }\r\n                    this.props.getReleasedRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getReleasedApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n\r\n\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                // const inputParamData = {\r\n                //     dfrom: obj.fromDate,\r\n                //     dto: obj.toDate,\r\n                //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                //     userinfo: this.props.Login.userInfo,\r\n                //     masterData: { ...this.props.Login.masterData },\r\n                //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     ndesigntemplatemappingcode: comboData.value,\r\n                //     DesignTemplateMappingValue: comboData.item\r\n                // }\r\n                // this.props.getReleaseFilterBasedTest(inputParamData)\r\n\r\n                let masterData = { ...this.props.Login.masterData, DesignTemplateMappingValue: comboData.item }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getReleasedFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            //Don't Remove\r\n            // else if (fieldName === 'nsectioncode') {\r\n            //     if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n            //         // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n            //         inputParamData = {\r\n            //             dfrom: obj.fromDate,\r\n            //             dto: obj.toDate,\r\n            //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n            //             userinfo: this.props.Login.userInfo,\r\n            //             masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n            //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n            //             ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            //             nsectioncode: comboData.value === -1 ? null\r\n            //                 // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n            //                 : comboData.value,\r\n            //             stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            //             ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n            //             DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            //         }\r\n\r\n            //         this.props.getReleasedFilterBasedTest(inputParamData);\r\n            //     }\r\n            // }\r\n            // else if (fieldName === 'njobstatuscode') {\r\n            //     if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n            //         let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n            //         const updateInfo = {\r\n            //             typeName: DEFAULT_RETURN,\r\n            //             data: { masterData }\r\n            //         }\r\n            //         this.props.updateStore(updateInfo);\r\n            //     }\r\n            // }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ncoareporttypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\r\n                    let masterData = { ...this.props.Login.masterData, ReportTypeValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            // else {\r\n            //     if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n            //         //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n            //         //  const updateInfo = {\r\n            //         //     typeName: DEFAULT_RETURN,\r\n            //         //    data: { masterData }\r\n            //         // }\r\n\r\n            //         inputParamData = {\r\n            //             dfrom: obj.fromDate,\r\n            //             dto: obj.toDate,\r\n            //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n            //             userinfo: this.props.Login.userInfo,\r\n            //             masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n            //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n            //             ntransactionstatus: comboData.value,\r\n            //             stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n            //             nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n            //             //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n            //             //: this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n            //             , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n            //             , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n\r\n            //         }\r\n\r\n            //         this.props.getReleaseFilterBasedTest(inputParamData);\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        this.props.Login.change = false\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        //  let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        //  let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n            realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            //  realUserSectionValue, realTestValue,\r\n            realDesignTemplateMappingValue,\r\n            realReportTypeValue\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            // ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode) {\r\n\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData\r\n            }\r\n            this.props.getReleasedSample(inputParam)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    //end- search logic\r\n    checkFunction = (data) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                arrayfalse: data.arrayfalse,\r\n                childfalsearray: data.childfalsearray\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    checkFunction1 = () => {\r\n        this.setState({\r\n            count: 1\r\n        })\r\n    }\r\n    expandFunc = (change) => {\r\n        let count = change.count;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: { ...this.props.Login.masterData },\r\n                change: change.change,\r\n                isAddPopup: false,\r\n                isEditPopup:false,\r\n                isDeletePopup:false,\r\n                checkFlag: \"1\",\r\n                count: count,\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n    viewReport = () => {\r\n        if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\r\n            let showReport = true;\r\n            this.setState({ showReport });\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTNOTGENERATED\" }));\r\n        }\r\n    }\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let filePath = \"\";\r\n        if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\r\n            filePath = reportUrl();\r\n        } else {\r\n            filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\r\n        }\r\n        let userStatusCSS = \"\";\r\n        let activeIconCSS = \"fa fa-check\";\r\n        if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.DRAFT) {\r\n            userStatusCSS = \"outline-secondary\";\r\n            activeIconCSS = \"\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.RELEASED) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else {\r\n            userStatusCSS = \"outline-Final\";\r\n        }\r\n        const filterParam = {\r\n            inputListName: \"ReleaseHistory\",\r\n            selectedObject: \"selectedReleaseHistory\",\r\n            primaryKeyField: \"ncoaparentcode\",\r\n            fetchUrl: \"release/getReleaseHistory\",\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList,\r\n            fecthInputObject: {\r\n                isSearch: true, userinfo: this.props.Login.userInfo,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: this.searchFieldList,\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined)\r\n                    || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                //  ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n        };\r\n\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n\r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REPORTTYPE\",\r\n                \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" :\r\n                    this.props.Login.masterData.ReportTypeValue ?\r\n                        this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\r\n            }\r\n        ];\r\n        const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"AddSamples\")\r\n            && this.state.controlMap.get('AddSamples').ncontrolcode; \r\n        const previewId =\r\n            this.state.controlMap.has(\"PreviewFinalReport\") &&\r\n            this.state.controlMap.get(\"PreviewFinalReport\").ncontrolcode;\r\n        const downloadId =\r\n            this.state.controlMap.has(\"ReleaseReportGeneration\") &&\r\n            this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\r\n        const regenerateId =\r\n            this.state.controlMap.has(\"RegenerateRelease\") &&\r\n            this.state.controlMap.get(\"RegenerateRelease\").ncontrolcode;\r\n        const viewreportId =\r\n            this.state.controlMap.has(\"ViewReportRelease\") &&\r\n            this.state.controlMap.get(\"ViewReportRelease\").ncontrolcode;\r\n        const sendtoportalId =\r\n            this.state.controlMap.has(\"SendToPortal\") &&\r\n            this.state.controlMap.get(\"SendToPortal\").ncontrolcode;\r\n        const editId =\r\n            this.state.controlMap.has(\"AppendSamples\") &&\r\n            this.state.controlMap.get(\"AppendSamples\").ncontrolcode;\r\n        const deleteId =\r\n            this.state.controlMap.has(\"RemoveSamples\") &&\r\n            this.state.controlMap.get(\"RemoveSamples\").ncontrolcode;\r\n        const patientinfoId =\r\n            this.state.controlMap.has(\"PatientInfo\") &&\r\n            this.state.controlMap.get(\"PatientInfo\").ncontrolcode;\r\n        \r\n        const ReleaseMasterDataParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            //   realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\r\n            //   realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue,\r\n            masterData: { ...this.props.Login.masterData },\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.npreregno) || \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                //  'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n\r\n                // 'ncoahistorycode':COAHistory\r\n\r\n            }\r\n        };\r\n\r\n        const ApprovedModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'isAddPopup': true,\r\n                'isPopup': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                 screenName:this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" })\r\n\r\n\r\n            }\r\n        };\r\n        const RemoveModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus)  : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'nneedremove': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'ncoaparentcode':this.props.Login.masterData.selectedReleaseHistory&&this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\r\n                ncontrolCode: deleteId,\r\n                screenName:this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" })\r\n\r\n\r\n\r\n            }\r\n        };\r\n        const EditModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus)  : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'nneededit': true,\r\n                'isPopup':true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'ncoaparentcode':this.props.Login.masterData.selectedReleaseHistory&&this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\r\n                ncontrolCode: editId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" }),\r\n                nsectioncode:this.props.Login.nsectioncode\r\n\r\n\r\n\r\n            }\r\n        };\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n                            <span onClick= {()=>this.setState({sidebarview:!this.state.sidebarview})} className='sidebar-view-btn'>\r\n                                {!this.state.sidebarview ?\r\n                                    <i class=\"fa fa-less-than\"></i> :\r\n                                    <i class=\"fa fa-greater-than\"></i> \r\n                                }\r\n                            </span>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_RELEASE\" })}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory}\r\n                                getMasterDetail={(ReleaseSample) =>\r\n                                    this.props.getReleasedDataDetails(\r\n\r\n                                        {\r\n                                            ...ReleaseMasterDataParam,\r\n                                            ...ReleaseSample\r\n                                        }\r\n                                    )\r\n                                }\r\n                                selectedMaster={this.props.Login.masterData.selectedReleaseHistory}\r\n                                primaryKeyField=\"ncoaparentcode\"\r\n                                mainField=\"sreportno\"\r\n                                firstField=\"susername\" \r\n                                secondField=\"sgenerateddate\"\r\n                              // secondField=\"stransdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={releaseId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openModal={() => this.props.getApprovedSample(ApprovedModalParam, releaseId)}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"Sample Filter\": <ReleaseFilter\r\n                                            SampleType={this.state.SampletypeList || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                            ReportType={this.state.ReporttypeList || []}\r\n                                            ReportTypeValue={this.props.Login.masterData.ReportTypeValue || []}\r\n                                            RegType={this.state.RegistrationTypeList || []}\r\n                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                            //   UserSection={this.state.UserSectionList || []}\r\n                                            //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                            //   Test={this.state.TestList || []}\r\n                                            //  TestValue={this.props.Login.masterData.TestValue || []}\r\n                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n                            {this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                            <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                {/* <i className={activeIconCSS}></i> */}\r\n                                                                {this.props.Login.masterData.selectedReleaseHistory.stransdisplaystatus}\r\n                                                            </span>\r\n                                                {/* {this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.sreportno} */}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\"></h2>\r\n                                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                    {((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                             (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE)) &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                onClick={() => this.props.getEditApprovedSample(EditModalParam)}\r\n                                                            \r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faEdit} />\r\n\r\n                                                            </Nav.Link>\r\n                                                          } \r\n                                                        {((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                             (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE)) &&\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                           onClick={() => this.props.getRemoveApprovedSample(RemoveModalParam)}\r\n                                                            \r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faTrash} />\r\n\r\n                                                        </Nav.Link>\r\n                                                        }  \r\n                                                        {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n\r\n                                                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_PATIENTINFO\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(patientinfoId) === -1}\r\n                                                                onClick={() => this.patientInfo()}>\r\n                                                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                                                            </Nav.Link>\r\n                                                        } \r\n                                                    <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(previewId) === -1}\r\n                                                           onClick={() => this.previewReport()}\r\n                                                            \r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faEye} />\r\n\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadId) === -1}\r\n                                                            onClick={() => this.downloadReleasedFile()}>\r\n                                                            <Generate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(regenerateId) === -1}\r\n                                                            onClick={() => this.regenerateReleasedFile('IDS_REGENERATEFILE')}>\r\n                                                            <ReGenerate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link>\r\n\r\n\r\n                                                        <Nav.Link\r\n\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWREPORT\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(viewreportId) === -1}\r\n                                                            onClick={() => this.viewReport()}>\r\n                                                            <FontAwesomeIcon icon={faExpandArrowsAlt} />\r\n                                                        </Nav.Link>\r\n                                                        {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n\r\n                                                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_SENDTOPORTAL\" })}\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(sendtoportalId) === -1}\r\n                                                                onClick={() => this.sendToPortal()}>\r\n                                                                <FontAwesomeIcon icon={faStore} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n                                                    </ProductList>\r\n                                                </div>\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">\r\n                                            {/* <Row>\r\n                                                <Col md=\"4\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REPORTNO\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.selectedReleaseHistory &&\r\n                                                            this.props.Login.masterData.selectedReleaseHistory.sreportno}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n\r\n                                            </Row> */}\r\n                                            <DataGridWithMultipleGrid\r\n                                                needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                data={this.state.data}\r\n                                                dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState)}\r\n                                                dataState={this.state.dataState}\r\n                                                dataStateChange={this.dataStateChange}\r\n                                                expandNextData={this.expandNextData}\r\n                                                checkFunction={this.checkFunction}\r\n                                                checkFunction1={this.checkFunction1}\r\n                                                expandFunc={this.expandFunc}\r\n                                                //expandData={this.expandData}\r\n                                                childDataResult={this.state.childDataResult}\r\n                                                subChildDataResult={this.state.subChildDataResult}\r\n                                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                                expandField=\"expanded\"\r\n                                                reloadData={this.reloadData}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                pageable={true}\r\n                                                scrollable={'scrollable'}\r\n                                                gridHeight={'525px'}\r\n                                                gridTop={'10px'}\r\n                                                //   isActionRequired={true}\r\n                                                //   isToolBarRequired={true}\r\n                                                //  isExpandRequired={true}\r\n                                                //   isDownloadRequired={true}\r\n                                                isCheckBoxRequired={false}\r\n                                                isCollapseRequired={true}\r\n\r\n                                                selectedId={this.props.Login.selectedId}\r\n                                                hasChild={true}\r\n                                                hasSubChild={true}\r\n                                                childList={\r\n                                                    this.props.Login.masterData.ReleasedSubSampleDetails\r\n                                                }\r\n                                                childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                childMappingField={\"npreregno\"}\r\n                                                subChildMappingField={\"ntransactionsamplecode\"}\r\n\r\n                                                // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\r\n                                                subChildList={\r\n                                                    this.props.Login.masterData.ReleasedTestDetails\r\n                                                }\r\n                                                selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                methodUrl={\"Release\"}\r\n                                                headerSelectionChange={this.headerSelectionChange}\r\n                                                childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                childSelectionChange={this.childSelectionChange}\r\n                                                subChildSelectionChange={this.subChildSelectionChange}\r\n                                                subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                selectionChange={this.selectionChange}\r\n                                                releaseRecord={this.onSaveModalClick}\r\n                                               // viewDownloadFile={this.viewDownloadFile}\r\n                                            />\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"\r\n                            }\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div >\r\n                {\r\n                    this.state.showReport ?\r\n                        <DocViewer file={filePath}\r\n                            showReport={this.state.showReport}\r\n                            closeModal={this.closeDocModal}\r\n                            type={\"pdf\"}>\r\n                        </DocViewer>\r\n                        : \"\"\r\n                }\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        size={\"xl\"}\r\n                        closeModal={this.closeModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.isPatientDetails ?\r\n                            this.props.intl.formatMessage({ id: \"IDS_PATIENTINFO\" })\r\n                            : this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveModalClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        hideSave={this.props.Login.hideSave}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.isPatientDetails ?\r\n                            <SampleInfoView\r\n                            data={(this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length > 0) ?\r\n                                this.props.Login.masterData.ReleasedSampleDetails[this.props.Login.masterData.ReleasedSampleDetails.length - 1] : {}}\r\n                            SingleItem={this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails ?\r\n                                this.state.SingleItem : []}\r\n                            screenName=\"IDS_SAMPLEINFO\"\r\n                            userInfo={this.props.Login.userInfo}\r\n                        />      \r\n                                :\r\n                            <>\r\n                                    <Row>\r\n                                        {this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\r\n                                        (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                        this.props.Login.isDeletePopup !== true && this.props.Login.isComboCheck !== true && \r\n                                        this.props.Login.isEditPopup !== true &&\r\n                                            <Col md={4}>\r\n                                        \r\n                                                <FormSelectSearch\r\n                                                    name={\"nprojecttypecode\"}\r\n                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                    options={this.props.Login.ProjectTypeList}\r\n                                                    value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                    defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                    isMandatory={true}\r\n                                                    isMulti={false}\r\n                                                    isSearchable={true}\r\n                                                    isDisabled={this.props.Login.isEditPopup===true?true:false}\r\n                                                    closeMenuOnSelect={true}\r\n                                                    alphabeticalSort={true}\r\n                                                    onChange={(event) => this.onComboChange(event, 'nprojecttypecode', 1)}\r\n                                                />\r\n                                        \r\n                                            </Col>\r\n                                        }\r\n                                        {this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE|| \r\n                                        (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                        this.props.Login.isDeletePopup !== true && this.props.Login.isComboCheck !== true && \r\n                                        this.props.Login.isEditPopup !== true &&\r\n                                            <Col md={4}>\r\n                                        \r\n                                                <FormSelectSearch\r\n                                                    name={\"nprojectmastercode\"}\r\n                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                    options={this.props.Login.projectMasterList}\r\n                                                    value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\"}\r\n                                                    defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\"}\r\n                                                    isMandatory={true}\r\n                                                    isMulti={false}\r\n                                                    isSearchable={true}\r\n                                                    isDisabled={this.props.Login.isEditPopup===true?true:false}\r\n                                                    closeMenuOnSelect={true}\r\n                                                    alphabeticalSort={true}\r\n                                                    onChange={(event) => this.onComboChange(event, 'nprojectmastercode', 1)}\r\n                                                />\r\n                                        \r\n                                            </Col>\r\n                                        }\r\n                                        {this.props.Login.masterData.realReportTypeValue\r\n                                            && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) &&\r\n                                        this.props.Login.isDeletePopup !== true && this.props.Login.isComboCheck !== true && this.props.Login.isEditPopup !== true &&\r\n                                            <Col md={4}>\r\n                                                <FormSelectSearch\r\n                                                    name={\"nsectioncode\"}\r\n                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_SECTION\" })}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                    options={this.props.Login.sectionList}\r\n                                                    value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\"}\r\n                                                    defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\"}\r\n                                                    isMandatory={true}\r\n                                                    isMulti={false}\r\n                                                    isSearchable={true}\r\n                                                    isDisabled={this.props.Login.isEditPopup===true?true:false}\r\n                                                    closeMenuOnSelect={true}\r\n                                                    alphabeticalSort={true}\r\n                                                    onChange={(event) => this.onComboChange(event, 'nsectioncode', 1)}\r\n                                                />\r\n                                        \r\n                                            </Col>\r\n                                        }\r\n                                </Row>\r\n                                <DataGridWithMultipleGrid\r\n                                    needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                    data={this.state.data}\r\n                                    dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    expandNextData={this.expandNextData}\r\n                                    checkFunction={this.checkFunction}\r\n                                    checkFunction1={this.checkFunction1}\r\n                                    expandFunc={this.expandFunc}\r\n                                    childDataResult={this.state.childDataResult}\r\n                                    subChildDataResult={this.state.subChildDataResult}\r\n                                    extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                    subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                    expandField=\"expanded\"\r\n                                    handleExpandChange={this.handleExpandChange}\r\n                                    childHandleExpandChange={this.childHandleExpandChange}\r\n                                    isCheckBoxRequired={true}\r\n\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    pageable={true}\r\n                                    scrollable={'scrollable'}\r\n                                    gridHeight={'600px'}\r\n                                    gridTop={'10px'}\r\n                                   // isActionRequired={true}\r\n                                    //   isToolBarRequired={true}\r\n                                    //  isExpandRequired={true}\r\n                                    //   isDownloadRequired={true}\r\n                                    isCollapseRequired={true}\r\n\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    hasChild={true}\r\n                                    hasSubChild={true}\r\n                                    childList={\r\n                                        this.props.Login.masterData.searchedData2 ||\r\n                                        this.props.Login.masterData.ReleaseSubSample\r\n                                    }\r\n                                    childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                    childMappingField={\"npreregno\"}\r\n                                    subChildMappingField={\"ntransactionsamplecode\"}\r\n                                    subChildList={\r\n                                        this.props.Login.masterData.searchedData3 ||\r\n                                        this.props.Login.masterData.ReleaseTest\r\n                                    }\r\n                                    selectedsubcild={this.props.Login.selectedsubcild}\r\n                                    methodUrl={\"Release\"}\r\n                                    headerSelectionChange={this.headerSelectionChange}\r\n                                    childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                    childSelectAll={this.props.Login.childSelectAll}\r\n                                    childSelectionChange={this.childSelectionChange}\r\n                                    subChildSelectionChange={this.subChildSelectionChange}\r\n                                    subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                    subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                    selectionChange={this.selectionChange}\r\n                                    selectAll={this.props.Login.selectAll}\r\n                                    releaseRecord={this.onSaveModalClick}\r\n                                   // viewDownloadFile={this.viewDownloadFile}\r\n                                />\r\n                            </>}\r\n                    />\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n        if (fieldName === 'nprojecttypecode') {\r\n            const inputParamData = {\r\n\r\n                nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                nprojecttypecode: comboData.value,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n            }\r\n            this.props.getApprovedProjectByProjectType(inputParamData)\r\n        }\r\n        if (fieldName === 'nprojectmastercode') {\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let realFromDate = obj.fromDate;\r\n            let realToDate = obj.toDate\r\n            let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n            let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n            let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n            let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n            let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n            let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n            let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n            let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n            let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            let masterData = {\r\n                ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n                realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n            }\r\n            let inputData = {\r\n                npreregno: \"0\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                nprojectmastercode: comboData.value,\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                userinfo: this.props.Login.userInfo,\r\n               // ModalStatusValue: true,\r\n                isPopup: true,\r\n                isAddPopup: true,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n            if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                inputData['dfrom'] = obj.fromDate;\r\n                inputData['dto'] = obj.toDate;\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData\r\n                }\r\n                if (inputData.nsampletypecode === SampleType.PROJECTSAMPLETYPE && inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE){\r\n                    this.props.getSectionForSectionWise(inputParam)\r\n            }\r\n            else {\r\n                this.props.getReleasedSample(inputParam)\r\n            }\r\n            }\r\n        }\r\n        if (fieldName === 'nsectioncode') {\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let realFromDate = obj.fromDate;\r\n            let realToDate = obj.toDate\r\n            let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n            let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n            let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n            let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n            let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n            let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n            let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n            let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n            let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            let masterData = {\r\n                ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n                realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n            }\r\n            let inputData = {\r\n                npreregno: \"0\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                 nsectioncode: comboData.value,\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                userinfo: this.props.Login.userInfo,\r\n               // ModalStatusValue: true,\r\n                isPopup: true,\r\n                isAddPopup: true,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n            if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                inputData['dfrom'] = obj.fromDate;\r\n                inputData['dto'] = obj.toDate;\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData\r\n                }\r\n\r\n                this.props.getReleasedSample(inputParam)\r\n            }\r\n        }\r\n    }\r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let closeModal = true;\r\n        let modalShow = this.props.Login.modalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n        } else {\r\n            modalShow = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign,closeModal },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n   \r\n    previewReport = () => {\r\n   \r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                change: this.props.Login.change,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                url: this.props.Login.settings[24],\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) ,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                userinfo: this.props.Login.userInfo,\r\n                \r\n                nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                napproveconfversioncode:this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                action :'IDS_DOWNLOADFILE',\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n            },\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.previewAndFinalReport(inputParam.inputData, this.props.Login.masterData)\r\n    }\r\n    downloadReleasedFile = () => {\r\n      \r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                url: this.props.Login.settings[24],\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n               // ntransactionsamplecode: ntransactionsamplecode,\r\n                //ntransactiontestcode: ntransactiontestcode,\r\n                \r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                // nTransStatus: ntransCode,\r\n                // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n               // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) ,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                // ncontrolCode,\r\n                nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n               // nsectioncode: -1,\r\n                nflag: 2,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n            },\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData)\r\n\r\n\r\n\r\n    }\r\n    regenerateReleasedFile = (action) => {\r\n    \r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n      \r\n        const inputParam = {\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                 npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n\r\n            \r\n                ntransactionstatus: String(transactionStatus.RELEASED),\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                napproveconfversioncode:this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                nflag: 2,\r\n                userinfo: this.props.Login.userInfo,\r\n                \r\n                nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                action,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n            },\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.previewAndFinalReport(inputParam.inputData, this.props.Login.masterData)\r\n\r\n\r\n\r\n    }\r\n    onSaveModalClick = () => {\r\n        let ntransactionsamplecode = \"\"\r\n        let ntransactiontestcode = \"\"\r\n        let npreregno = \"\"\r\n        if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\r\n            if (this.state.npreregno && this.state.npreregno.length > 0) {\r\n                let sample = this.state.npreregno.filter((c, index) => {\r\n                    return this.state.npreregno.indexOf(c) === index;\r\n                });\r\n                let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n                    return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n                });\r\n                let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n                    return this.state.ntransactiontestcode.indexOf(c) === index;\r\n                });\r\n                \r\n                npreregno = sample.map(x => x).join(\",\")\r\n                ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n                ntransactiontestcode = test.map(x => x).join(\",\")\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                const inputParam = {\r\n                    inputData: {\r\n                        change: this.props.Login.change,\r\n                        npreregno: String(npreregno),\r\n                        ntransactionsamplecode: ntransactionsamplecode,\r\n                        ntransactiontestcode: ntransactiontestcode,\r\n                        ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\r\n                            && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode:-1,\r\n                        url: this.props.Login.settings[24],\r\n                        ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        isAddPopup: false,\r\n                        isEditPopup: false,\r\n                        nflag: 2,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                    },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    methodUrl: \"Release\",\r\n                    classUrl: \"release\",\r\n                    operation:this.props.Login.operation\r\n                }\r\n              \r\n                    const masterData = this.props.Login.masterData;\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode,this.props.Login.ncontrolCode)) {\r\n\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true,\r\n                                screenData: { inputParam, masterData },\r\n                                operation:this.props.Login.operation,\r\n                                screenName: this.props.Login.screenName,\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                    else {\r\n                        if (this.props.Login.isDeletePopup) {\r\n                            this.props.getDeleteApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\r\n                        }\r\n                        else if (this.props.Login.isEditPopup) {\r\n                            this.props.UpdateApprovedSample (this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)  \r\n                        }\r\n                        else {\r\n                            this.props.getApprovedRecordsAsDraft(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\r\n                        }\r\n                    }\r\n                \r\n            }\r\n            else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n            }\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n        }\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            SampleGridItem,\r\n            selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n            RegistrationSubTypeList, FilterStatusList, ConfigVersionList,\r\n            //UserSectionList, TestList,\r\n            SingleItem,DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem,\r\n             stateDynamicDesign, checkedflag, dataState } = this.state;\r\n\r\n        let bool = false;\r\n        let reportFilePath = \"\";\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            reportFilePath = this.props.Login.masterData.ReportPDFFile;\r\n\r\n            bool = true;\r\n        }\r\n        // else {\r\n        //     if (this.state.dataState === undefined) {\r\n        //         dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n        //     }\r\n        //     //  const npreregno =  [];\r\n        //     //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n        //     //  const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n        //     bool = true;\r\n\r\n        // }\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\r\n\r\n            checkedflag = this.props.Login.checkedflag\r\n            bool = true;\r\n        }\r\n        // if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\r\n\r\n        //     npreregno = this.props.Login.npreregno\r\n        //     bool = true;\r\n        // }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false);\r\n            // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\r\n            // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            ReporttypeList = ReporttypeListMap.get(\"OptionList\");\r\n            // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\r\n            //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            //  UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            //   TestList = TestListMap.get(\"OptionList\");\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\r\n            DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n\r\n            bool = true;\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n\r\n        if (bool) {\r\n            bool = false;\r\n            let allData = {\r\n                userRoleControlRights, controlMap,\r\n                SampleGridItem, selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n                RegistrationSubTypeList, FilterStatusList, ConfigVersionList,\r\n                //UserSectionList, TestList,\r\n                SingleItem,DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem, stateDynamicDesign, checkedflag,\r\n                data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\r\n                dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\r\n                reportFilePath\r\n            }\r\n            if (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true\r\n                || this.props.Login.isEditPopup && this.props.Login.isEditPopup === true\r\n                || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true) {\r\n                this.setState({ ...allData,npreregno: [],ntransactionsamplecode:[],ntransactiontestcode:[] });\r\n\r\n            }\r\n            else {\r\n                this.setState(allData);\r\n            }\r\n\r\n        }\r\n       \r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n    }\r\n    sendToPortal = () => {\r\n            const inputParam = {\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                url: this.props.Login.settings[24],\r\n                isPortal:true,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                allPreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                userinfo: this.props.Login.userInfo\r\n\r\n            }\r\n\r\n            this.props.getReportForPortal(inputParam)\r\n        \r\n    }\r\n    patientInfo = () => {\r\n   \r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { isPatientDetails:true,openModal:true,hideSave:true,isAddPopup:false,isEditPopup:false,isDeletePopup:false}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    \r\n}\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        delete this.props.Login.masterData[\"searchedData\"]\r\n\r\n        this.props.Login.change = false\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue,\r\n            // realUserSectionValue, realTestValue,\r\n            realReportTypeValue } = this.props.Login.masterData\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            // realUserSectionValue, realTestValue,\r\n            realReportTypeValue\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ncoareporttypecode: (realReportTypeValue && realReportTypeValue.ncoareporttypecode) || -1,\r\n            ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            // ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode !== -1\r\n        ) {\r\n\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n            }\r\n            this.props.getReleasedSample(inputParam)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let isPatientDetails = this.props.Login.isPatientDetails;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let hideSave = this.props.Login.hideSave;\r\n        let isAddPopup = this.props.Login.isAddPopup;\r\n        let isEditPopup = this.props.Login.isEditPopup;\r\n        let isDeletePopup = this.props.Login.isDeletePopup;\r\n    \r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                isPatientDetails = false;\r\n                hideSave = false;\r\n                isAddPopup = false;\r\n                isEditPopup = false;\r\n                isDeletePopup = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            isPatientDetails = false;\r\n            hideSave = false;\r\n            isAddPopup = false;\r\n            isEditPopup = false;\r\n            isDeletePopup = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null,isPatientDetails,hideSave,isAddPopup,isEditPopup,isDeletePopup }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    closeDocModal = () => {\r\n        let openModal = false;\r\n        let showReport = false;\r\n        let selectedRecord = {};\r\n        this.setState({ showReport, openModal, selectedRecord });\r\n    }\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[event.target.name] = event.target.value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    selectionChange = (event, nflag, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (nflag === undefined) {\r\n            this.state.dataResult.data.map(item => {\r\n                if (item.npreregno === event.dataItem.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n\r\n            })\r\n            let preregno = event.dataItem.npreregno\r\n            let ncoahistorycode = event.dataItem.ncoahistorycode\r\n            let ssystemfilename = event.dataItem.ssystemfilename\r\n            const coaFileInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { ncoahistorycode, ssystemfilename },\r\n            };\r\n            this.props.updateStore(coaFileInfo);\r\n\r\n            this.childHeaderSelectionChange(event, preregno, checkedflag)\r\n        }\r\n        else {\r\n            let data = []\r\n            event.dataItems.map(item => {\r\n                data.push({ \"npreregno\": item.npreregno })\r\n            })\r\n            this.childHeaderSelectionChange(event, data, checkedflag)\r\n\r\n        }\r\n\r\n    }\r\n    childHeaderSelectionChange = (event, preregno, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let subsamplecode = [];\r\n        let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno\r\n        if (npreregno.length === 0 || npreregno.length === undefined) {\r\n            this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\r\n\r\n                item.selected = checked\r\n                if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                    subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                }\r\n\r\n            })\r\n            this.props.Login.masterData.ReleaseSample.map(data => {\r\n                if (data.npreregno === npreregno) {\r\n                    data.selected = checked\r\n                }\r\n            })\r\n\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n        else {\r\n            npreregno.map(value => {\r\n                this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\r\n                    item.selected = checked\r\n                    if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                        subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                    }\r\n                })\r\n\r\n            })\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n\r\n    }\r\n\r\n    subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let transactionsamplecode = subsamplecode;\r\n        if (subsamplecode !== undefined) {\r\n          //  transactionsamplecode = subsamplecode\r\n            transactionsamplecode.map(value => {\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item, checkedflag)\r\n\r\n                    return item;\r\n                })\r\n            })\r\n        }\r\n        else {\r\n            event.dataItems.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item, checkedflag)\r\n                    return item;\r\n                })\r\n            )\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\r\n                if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\r\n                return item.selected === true;\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (event.dataItems.length !== 0) {\r\n            this.state.dataResult.data.map(item => {\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n            this.selectionChange(event, 1, checked);\r\n        }\r\n        else {\r\n            this.setState({ npreregno: [], ntransactionsamplecode: [], ntransactiontestcode: [] })\r\n        }\r\n    }\r\n    childSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                item.selected = checked;\r\n            }\r\n\r\n        })\r\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n            return item.slected === true\r\n        })\r\n        if (data === true) {\r\n            this.props.Login.masterData.ReleaseSample.map(item => {\r\n                if (event.dataItem.npreregno === item.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n                return item.selected === true\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n    subChildSelectionChange = (event) => {\r\n        let x = []\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = checked;\r\n                this.collectData(item)\r\n            }\r\n        })\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n\r\n            if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\r\n                    x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y = x.filter(t => t.selected === true);\r\n        if (x.length === y.length) {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true\r\n                }\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false\r\n                }\r\n            })\r\n        }\r\n        this.state.dataResult.data.map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno) {\r\n                if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\r\n                    x = this.props.Login.masterData.ReleaseSubSample[item.npreregno]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y1 = x.filter(t => t.selected === true);\r\n        if (x.length === y1.length) {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === y1[0].npreregno) {\r\n                    this.state.dataResult.data[i].selected = true\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === event.dataItem.npreregno) {\r\n                    this.state.dataResult.data[i].selected = false\r\n                }\r\n            })\r\n        }\r\n    }\r\n    collectData = (item, checkedflag) => {\r\n        let npreregno = this.state.npreregno || []\r\n        let ntransactionsamplecode = this.state.ntransactionsamplecode || []\r\n        let ntransactiontestcode = this.state.ntransactiontestcode || []\r\n        if (item.selected === true) {\r\n            if (!npreregno.includes(item.npreregno)) {\r\n                npreregno.push(item.npreregno)\r\n            }\r\n            if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                ntransactionsamplecode.push(item.ntransactionsamplecode)\r\n            }\r\n            // Don't Remove\r\n            if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n                ntransactiontestcode.push(item.ntransactiontestcode)\r\n            }\r\n        }\r\n        else {\r\n            const preregno = npreregno.filter(data => data !== item.npreregno)\r\n            npreregno = preregno\r\n\r\n            const transactionsamplecode = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode)\r\n            ntransactionsamplecode = transactionsamplecode\r\n            // Don't Remove\r\n            const transactiontestcode = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode)\r\n            ntransactiontestcode = transactiontestcode\r\n        }\r\n        this.setState({\r\n            npreregno: checkedflag === false ? [] : npreregno,\r\n            ntransactionsamplecode: checkedflag === false ? [] : ntransactionsamplecode, ntransactiontestcode: checkedflag === false ? [] : ntransactiontestcode\r\n        })\r\n    }\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential, filterColumnData,\r\n    getApprovedRecordsAsDraft, getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, getApprovedSample\r\n    , generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal,\r\n    previewAndFinalReport,getRemoveApprovedSample,getDeleteApprovedSample,UpdateApprovedSample ,getEditApprovedSample,getSectionForSectionWise\r\n})(injectIntl(Release));"]},"metadata":{},"sourceType":"module"}