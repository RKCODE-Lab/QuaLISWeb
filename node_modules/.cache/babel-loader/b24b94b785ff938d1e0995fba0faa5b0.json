{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\quotation\\\\AddQuotation.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component'; // import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\n\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { injectIntl } from 'react-intl';\n\nconst AddQuotation = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_CLIENTCATEGORY\"\n    }),\n    isSearchable: true,\n    name: \"nclientcatcode\",\n    isDisabled: false //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n    ,\n    isMandatory: true,\n    isClearable: false,\n    options: props.ClientCategory,\n    value: props.selectedRecord[\"nclientcatcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nclientcatcode\"],\n    onChange: event => props.onComboChange(event, \"nclientcatcode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_CLIENT\"\n    }),\n    isSearchable: true,\n    name: \"nclientcode\",\n    isDisabled: false //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n    ,\n    isMandatory: true,\n    isClearable: false,\n    options: props.Client,\n    value: props.selectedRecord[\"nclientcode\"] || \"\" // value={props.selectedRecord ? { \"label\": props.selectedRecord.sclientname, \"value\": props.selectedRecord.nclientcode } : \"\"}\n    ,\n    defaultValue: props.selectedRecord[\"nclientcode\"],\n    onChange: event => props.onComboChange(event, \"nclientcode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sclientsiteaddress\",\n    label: props.intl.formatMessage({\n      id: \"IDS_CLIENTADDRESS\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_CLIENTADDRESS\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord.sclientsiteaddress : \"\",\n    rows: \"2\",\n    required: false,\n    maxLength: 255,\n    isMandatory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sinvoiceaddress\",\n    label: props.intl.formatMessage({\n      id: \"IDS_INVOICEADDRESS\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_INVOICEADDRESS\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sinvoiceaddress\"] : \"\",\n    rows: \"2\",\n    required: false,\n    maxLength: 500,\n    isMandatory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_QUOTATIONTYPE\"\n    }),\n    isSearchable: true,\n    name: \"nquotationtypecode\",\n    isDisabled: false //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n    ,\n    isMandatory: true,\n    isClearable: false,\n    options: props.QuotationType,\n    value: props.selectedRecord[\"nquotationtypecode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nquotationtypecode\"],\n    onChange: event => props.onComboChange(event, \"nquotationtypecode\", 3),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PROJECTTYPE\"\n    }),\n    isSearchable: true,\n    name: \"nprojecttypecode\",\n    isDisabled: false //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n    ,\n    isMandatory: true,\n    isClearable: false,\n    options: props.ProjectType,\n    value: props.selectedRecord[\"nprojecttypecode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nprojecttypecode\"],\n    onChange: event => props.onComboChange(event, \"nprojecttypecode\", 4),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PROJECTCODE\"\n    }),\n    isSearchable: true,\n    name: \"nprojectmastercode\",\n    isDisabled: false //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n    ,\n    isMandatory: true,\n    isClearable: false,\n    options: props.ProjectCode,\n    value: props.selectedRecord[\"nprojectmastercode\"] || \"\" // value={props.ProjectCode? { \"label\": props.ProjectCode[0].label, \"value\": props.ProjectCode[0].value } : \"\"}\n    ,\n    defaultValue: props.selectedRecord[\"nprojectmastercode\"],\n    onChange: event => props.onComboChange(event, \"nprojectmastercode\", 4),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sprojecttitle\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PROJECTTITLE\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PROJECTTITLE\"\n    }),\n    value: props.ProjectMaster ? props.ProjectMaster[\"sprojecttitle\"] : \"\",\n    rows: \"2\",\n    required: false,\n    maxLength: 255,\n    isMandatory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"srfwdate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_RFWDATE\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord[\"srfwdate\"],\n    dateFormat: props.userInfo ? props.userInfo.ssitedate || [] : [],\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false,\n    isClearable: true,\n    isMandatory: true,\n    required: true //maxDate={props.currentTime}\n    ,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"srfwdate\", date),\n    value: props.ProjectMaster ? props.ProjectMaster[\"srfwdate\"] : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ROLE\"\n    }),\n    name: \"suserrolename\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ROLE\"\n    }),\n    value: props.ProjectMaster ? props.ProjectMaster[\"suserrolename\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_USER\"\n    }),\n    name: \"susername\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_USER\"\n    }),\n    value: props.ProjectMaster ? props.ProjectMaster[\"susername\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dquotationdate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_QUOTATIONDATE\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord[\"dquotationdate\"],\n    dateFormat: props.userInfo ? props.userInfo.ssitedate || [] : [],\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false,\n    isClearable: true,\n    isMandatory: true,\n    required: true,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dquotationdate\", date),\n    value: props.selectedRecord[\"dquotationdate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sdescription\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sdescription\"] === \"-\" ? \"\" : props.selectedRecord[\"sdescription\"] : \"\",\n    rows: \"2\",\n    required: false,\n    maxLength: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sdeviationremarks\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DEVIATIONREMARKS\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEVIATIONREMARKS\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sdeviationremarks\"] === \"-\" ? \"\" : props.selectedRecord[\"sdeviationremarks\"] : \"\",\n    rows: \"2\",\n    required: false,\n    maxLength: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default injectIntl(AddQuotation);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/quotation/AddQuotation.jsx"],"names":["React","Row","Col","FormSelectSearch","FormInput","FormTextarea","DateTimePicker","injectIntl","AddQuotation","props","intl","formatMessage","id","ClientCategory","selectedRecord","event","onComboChange","Client","onInputOnChange","sclientsiteaddress","QuotationType","ProjectType","ProjectCode","ProjectMaster","userInfo","ssitedate","currentTime","date","handleDateChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n// import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\nconst AddQuotation = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_CLIENTCATEGORY\" })}\r\n                            isSearchable={true}\r\n                            name={\"nclientcatcode\"}\r\n                            isDisabled={false}\r\n                            //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.ClientCategory}\r\n                            value={props.selectedRecord[\"nclientcatcode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nclientcatcode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nclientcatcode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_CLIENT\" })}\r\n                            isSearchable={true}\r\n                            name={\"nclientcode\"}\r\n                            isDisabled={false}\r\n                     //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.Client}\r\n                            value={props.selectedRecord[\"nclientcode\"] || \"\"}\r\n                            // value={props.selectedRecord ? { \"label\": props.selectedRecord.sclientname, \"value\": props.selectedRecord.nclientcode } : \"\"}\r\n                            defaultValue={props.selectedRecord[\"nclientcode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nclientcode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sclientsiteaddress\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_CLIENTADDRESS\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_CLIENTADDRESS\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord.sclientsiteaddress : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={255}\r\n                            isMandatory={true}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sinvoiceaddress\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_INVOICEADDRESS\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_INVOICEADDRESS\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sinvoiceaddress\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={500}\r\n                            isMandatory={true}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_QUOTATIONTYPE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nquotationtypecode\"}\r\n                            isDisabled={false}\r\n                            //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.QuotationType}\r\n                            value={props.selectedRecord[\"nquotationtypecode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nquotationtypecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nquotationtypecode\", 3)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nprojecttypecode\"}\r\n                            isDisabled={false}\r\n                            //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.ProjectType}\r\n                            value={props.selectedRecord[\"nprojecttypecode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nprojecttypecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nprojecttypecode\", 4)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nprojectmastercode\"}\r\n                            isDisabled={false}\r\n                     //     placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.ProjectCode}\r\n                            value={props.selectedRecord[\"nprojectmastercode\"] || \"\"}\r\n                            // value={props.ProjectCode? { \"label\": props.ProjectCode[0].label, \"value\": props.ProjectCode[0].value } : \"\"}\r\n                            defaultValue={props.selectedRecord[\"nprojectmastercode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nprojectmastercode\", 4)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </Col>\r\n\r\n\r\n            <Col md={6}>\r\n                <Row>\r\n\r\n\r\n                <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sprojecttitle\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_PROJECTTITLE\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_PROJECTTITLE\" })}\r\n                            value={props.ProjectMaster ? props.ProjectMaster[\"sprojecttitle\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={255}\r\n                            isMandatory={true}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>  \r\n\r\n                <Col md={12}>\r\n                        <DateTimePicker\r\n                            name={\"srfwdate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_RFWDATE\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord[\"srfwdate\"]}\r\n                            dateFormat={props.userInfo ? props.userInfo.ssitedate || [] : []}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            isClearable={true}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            //maxDate={props.currentTime}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"srfwdate\", date)}\r\n                            value={props.ProjectMaster ? props.ProjectMaster[\"srfwdate\"] : \"\"}\r\n\r\n\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_ROLE\" })}\r\n                            name={\"suserrolename\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_ROLE\" })}\r\n                            value={props.ProjectMaster ? props.ProjectMaster[\"suserrolename\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={\"100\"}\r\n                        />\r\n                    </Col>\r\n\r\n\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_USER\" })}\r\n                            name={\"susername\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_USER\" })}\r\n                            value={props.ProjectMaster ? props.ProjectMaster[\"susername\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={\"100\"}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <DateTimePicker\r\n                            name={\"dquotationdate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_QUOTATIONDATE\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord[\"dquotationdate\"]}\r\n                            dateFormat={props.userInfo ? props.userInfo.ssitedate || [] : []}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            isClearable={true}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"dquotationdate\", date)}\r\n                            value={props.selectedRecord[\"dquotationdate\"]}\r\n\r\n\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sdescription\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sdescription\"] === \"-\" ? \"\" : props.selectedRecord[\"sdescription\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={500}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sdeviationremarks\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_DEVIATIONREMARKS\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_DEVIATIONREMARKS\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sdeviationremarks\"] === \"-\" ? \"\" : props.selectedRecord[\"sdeviationremarks\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={1000}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Col>\r\n\r\n        </Row>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default injectIntl(AddQuotation);"]},"metadata":{},"sourceType":"module"}