{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{ListWrapper}from'../../../components/client-group.styles';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{callService,crudMaster,showRegTypeAddScreen,fetchRegTypeById,updateStore,validateEsignCredential}from'../../../actions';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import DataGrid from'../../../components/data-grid/data-grid.component';import FormTextarea from'../../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import{showEsign,getControlMap}from'../../../components/CommonScript';import Esign from'../../audittrail/Esign';import FormInput from'../../../components/form-input/form-input.component';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var RegistrationType=/*#__PURE__*/function(_React$Component){_inherits(RegistrationType,_React$Component);var _super=_createSuper(RegistrationType);function RegistrationType(props){var _this;_classCallCheck(this,RegistrationType);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData,event.dataState),dataState:event.dataState});};_this.onSaveClick=function(saveType,formRef){var inputData=[];var selectedId=null;inputData[\"userinfo\"]=_this.props.Login.userInfo;var dataState=undefined;if(_this.props.Login.operation===\"update\"){// edit\nselectedId=_this.state.selectedRecord.nregtypecode;dataState=_this.state.dataState;inputData[\"registrationtype\"]={\"nregtypecode\":_this.state.selectedRecord.nregtypecode?_this.state.selectedRecord.nregtypecode:-1,\"nsampletypecode\":_this.state.selectedRecord.nsampletypecode,\"sregtypename\":_this.state.selectedRecord.sregtypename,\"sdescription\":_this.state.selectedRecord.sdescription};}else{//add               \ninputData[\"registrationtype\"]={\"nsampletypecode\":_this.state.selectedRecord.nsampletypecode?_this.state.selectedRecord.nsampletypecode:-1,\"sregtypename\":_this.state.selectedRecord.sregtypename,\"sdescription\":_this.state.selectedRecord.sdescription};}var inputParam={methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,dataState:dataState,selectedId:selectedId};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.deleteRecord=function(deleteParam){var inputParam={methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,dataState:_this.state.dataState,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',inputData:{\"registrationtype\":deleteParam.selectedRecord,\"userinfo\":_this.props.Login.userInfo},operation:deleteParam.operation};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:deleteParam.operation,openModal:true,screenName:_this.props.Login.inputParam.displayName,optionsSampleType:_this.props.Login.optionsSampleType//,\n}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.reloadData=function(){var inputParam={inputData:{userinfo:_this.props.Login.userInfo},methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,//displayName:this.props.Login.inputParam.displayName?this.props.Login.inputParam.displayName:'',\nuserInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?3:4;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var _ref=_this.state||{},selectedRecord=_ref.selectedRecord;if(comboData){fieldName='nsampletypecode';selectedRecord['SampleTypes']=comboData;selectedRecord[fieldName]=comboData.value;}else{fieldName='nsampletypecode';selectedRecord['SampleTypes']=comboData;selectedRecord[fieldName]=\"\";}_this.setState({selectedRecord:selectedRecord});};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.handleClose=_this.handleClose.bind(_assertThisInitialized(_this));var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},userRoleControlRights:[],controlMap:new Map(),dataResult:[],dataState:_dataState,action:\"\",mandatoryFields:[{\"idsName\":\"IDS_SAMPLETYPENAME\",\"dataField\":\"SampleTypes\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_REGISTRATIONTYPENAME\",\"dataField\":\"sregtypename\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}//{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\n]};return _this;}_createClass(RegistrationType,[{key:\"handleClose\",value://to close side out\nfunction handleClose(){var loadEsign=this.props.Login.loadEsign;var openModal=this.props.Login.openModal;var selectedRecord=this.props.Login.selectedRecord;if(this.props.Login.loadEsign){if(this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;}else{loadEsign=false;}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,optionsChecklistComponent:[],optionsSampleType:[]}};this.props.updateStore(updateInfo);}},{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";if(this.props.Login.inputParam!==undefined){this.extractedColumnList=[{\"idsName\":\"IDS_SAMPLETYPENAME\",\"dataField\":\"ssampletypename\",\"width\":\"250px\"},{\"idsName\":\"IDS_REGISTRATIONTYPENAME\",\"dataField\":\"sregtypename\",\"width\":\"250px\"},{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"150px\"}];primaryKeyField=\"nregtypecode\";}var addID=this.props.Login.inputParam&&this.state.controlMap.has(\"AddRegistrationType\")&&this.state.controlMap.get('AddRegistrationType').ncontrolcode;var editId=this.props.Login.inputParam&&this.state.controlMap.has(\"EditRegistrationType\")&&this.state.controlMap.get('EditRegistrationType').ncontrolcode;var editParam={screenName:\"RegistrationType\",operation:\"update\",primaryKeyField:primaryKeyField,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolCode:editId};var deleteParam={screenName:\"RegistrationType\",methodUrl:\"RegistrationType\",operation:\"delete\",key:'registrationtype'};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,fetchRecord:this.props.fetchRegTypeById,deleteRecord:this.deleteRecord,reloadData:this.reloadData,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,editParam:editParam,deleteParam:deleteParam,pageable:true,isActionRequired:true,isToolBarRequired:true,gridHeight:'600px',scrollable:\"scrollable\",selectedId:this.props.Login.selectedId,addRecord:function addRecord(){return _this2.props.showRegTypeAddScreen(_this2.props.Login.userInfo,addID);}}):\"\"))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{onSaveClick:this.onSaveClick,operation:this.props.Login.operation,screenName:this.props.Login.inputParam.displayName,closeModal:this.handleClose,show:this.props.Login.openModal,showSaveContinue:false,inputParam:this.props.Login.inputParam,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord,mandatoryFields:this.state.mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation?this.props.Login.operation:'',onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsampletypecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_SAMPLETYPENAME\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:this.state.selectedRecord.SampleTypes?this.state.selectedRecord.SampleTypes:[],options:this.props.Login.optionsSampleType?this.props.Login.optionsSampleType:[],optionId:\"nsampletypecode\",optionValue:\"ssampletypename\",isMandatory:true,required:true,as:\"select\",onChange:function onChange(event){return _this2.onComboChange(event,\"nsampletypecode\");}}),/*#__PURE__*/React.createElement(FormInput,{name:\"sregtypename\",placeholder:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONTYPENAME\"}),onChange:function onChange(event){return _this2.onInputOnChange(event);},className:\"\",isMandatory:true,rows:\"1\",label:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONTYPENAME\"}),type:\"textarea\",required:true,value:this.state.selectedRecord?this.state.selectedRecord.sregtypename:\"\",maxLength:\"255\"}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"sdescription\",placeholder:this.props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),onChange:function onChange(event){return _this2.onInputOnChange(event);},isMandatory:false,rows:\"1\",label:this.props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),type:\"textarea\",value:this.state.selectedRecord?this.state.selectedRecord.sdescription:\"\",maxLength:\"255\"})))}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{if(this.props.Login.operation===\"create\"&&this.props.Login.inputParam.saveType===2){this.props.Login.inputParam.formRef.current.reset();}var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState,selectedRecord:{sregtypename:'',sdescription:''}});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){var mandatoryFields=this.props.Login.mandatoryFields?this.props.Login.mandatoryFields:[{\"idsName\":\"IDS_SAMPLETYPENAME\",\"dataField\":\"SampleTypes\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_REGISTRATIONTYPENAME\",\"dataField\":\"sregtypename\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}//{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\n];this.setState({selectedRecord:this.props.Login.selectedRecord,mandatoryFields:mandatoryFields});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return RegistrationType;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,showRegTypeAddScreen:showRegTypeAddScreen,fetchRegTypeById:fetchRegTypeById,updateStore:updateStore,validateEsignCredential:validateEsignCredential})(injectIntl(RegistrationType));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/dynamicpreregdesign/registrationtype/RegistrationType.jsx"],"names":["React","ListWrapper","Row","Col","toast","process","connect","injectIntl","callService","crudMaster","showRegTypeAddScreen","fetchRegTypeById","updateStore","validateEsignCredential","DEFAULT_RETURN","DataGrid","FormTextarea","FormSelectSearch","SlideOutModal","showEsign","getControlMap","Esign","FormInput","mapStateToProps","state","Login","RegistrationType","props","dataStateChange","event","setState","dataResult","masterData","dataState","onSaveClick","saveType","formRef","inputData","selectedId","userInfo","undefined","operation","selectedRecord","nregtypecode","nsampletypecode","sregtypename","sdescription","inputParam","methodUrl","classUrl","displayName","userRoleControlRights","nformcode","ncontrolcode","updateInfo","typeName","data","loadEsign","screenData","deleteRecord","deleteParam","ncontrolCode","openModal","screenName","optionsSampleType","reloadData","userinfo","validateEsign","sreason","password","onInputOnChange","target","type","name","checked","value","onComboChange","comboData","fieldName","createRef","extractedColumnList","handleClose","bind","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","action","mandatoryFields","optionsChecklistComponent","primaryKeyField","addID","has","get","editId","editParam","key","intl","formatMessage","id","SampleTypes","previousProps","Object","values","map","item","push","current","reset","modalName","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { ListWrapper } from '../../../components/client-group.styles'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { callService, crudMaster, showRegTypeAddScreen, fetchRegTypeById, updateStore, validateEsignCredential } from '../../../actions';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport DataGrid from '../../../components/data-grid/data-grid.component';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport { showEsign, getControlMap } from '../../../components/CommonScript';\r\nimport Esign from '../../audittrail/Esign';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass RegistrationType extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.handleClose = this.handleClose.bind(this);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {}, userRoleControlRights: [], controlMap: new Map(),\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            action: \"\",\r\n            mandatoryFields: [\r\n                { \"idsName\": \"IDS_SAMPLETYPENAME\", \"dataField\": \"SampleTypes\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_REGISTRATIONTYPENAME\", \"dataField\": \"sregtypename\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                //{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            ]\r\n        };\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    //to close side out\r\n    handleClose() {\r\n\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, optionsChecklistComponent: [], optionsSampleType: [] }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    //to open side out\r\n\r\n    //to perform save action for both add and edit\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let selectedId = null;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let dataState = undefined;\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            selectedId = this.state.selectedRecord.nregtypecode\r\n            dataState = this.state.dataState\r\n            inputData[\"registrationtype\"] = {\r\n                \"nregtypecode\": this.state.selectedRecord.nregtypecode ? this.state.selectedRecord.nregtypecode : -1,\r\n                \"nsampletypecode\": this.state.selectedRecord.nsampletypecode,\r\n                \"sregtypename\": this.state.selectedRecord.sregtypename,\r\n                \"sdescription\": this.state.selectedRecord.sdescription,\r\n            }\r\n        }\r\n        else {\r\n            //add               \r\n            inputData[\"registrationtype\"] =\r\n            {\r\n                \"nsampletypecode\": this.state.selectedRecord.nsampletypecode ? this.state.selectedRecord.nsampletypecode : -1,\r\n                \"sregtypename\": this.state.selectedRecord.sregtypename,\r\n                \"sdescription\": this.state.selectedRecord.sdescription,\r\n            };\r\n        }\r\n\r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : '',\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, dataState, selectedId\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n    //to get the edit record\r\n\r\n    //to delete a recoed\r\n    deleteRecord = (deleteParam) => {\r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            dataState: this.state.dataState,\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : '',\r\n            inputData: {\r\n                \"registrationtype\": deleteParam.selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: deleteParam.operation\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, operation: deleteParam.operation, openModal: true,\r\n                    screenName: this.props.Login.inputParam.displayName, optionsSampleType: this.props.Login.optionsSampleType//,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    //to reload data\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { userinfo: this.props.Login.userInfo },\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            //displayName:this.props.Login.inputParam.displayName?this.props.Login.inputParam.displayName:'',\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let primaryKeyField = \"\";\r\n        if (this.props.Login.inputParam !== undefined) {\r\n            this.extractedColumnList = [\r\n                { \"idsName\": \"IDS_SAMPLETYPENAME\", \"dataField\": \"ssampletypename\", \"width\": \"250px\" },\r\n                { \"idsName\": \"IDS_REGISTRATIONTYPENAME\", \"dataField\": \"sregtypename\", \"width\": \"250px\" },\r\n                { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"150px\" },\r\n            ]\r\n            primaryKeyField = \"nregtypecode\";\r\n        }\r\n\r\n        const addID = this.props.Login.inputParam && this.state.controlMap.has(\"AddRegistrationType\")\r\n            && this.state.controlMap.get('AddRegistrationType').ncontrolcode;\r\n        const editId = this.props.Login.inputParam && this.state.controlMap.has(\"EditRegistrationType\")\r\n            && this.state.controlMap.get('EditRegistrationType').ncontrolcode;\r\n        const editParam = {\r\n            screenName: \"RegistrationType\", operation: \"update\", primaryKeyField: primaryKeyField,\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, ncontrolCode: editId\r\n        };\r\n\r\n        const deleteParam = { screenName: \"RegistrationType\", methodUrl: \"RegistrationType\", operation: \"delete\", key: 'registrationtype' };\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={primaryKeyField}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    fetchRecord={this.props.fetchRegTypeById}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    editParam={editParam}\r\n                                    deleteParam={deleteParam}\r\n                                    pageable={true}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    gridHeight={'600px'}\r\n                                    scrollable={\"scrollable\"}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    addRecord={() => this.props.showRegTypeAddScreen(this.props.Login.userInfo, addID)}\r\n                                />\r\n                                : \"\"}\r\n\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        onSaveClick={this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={this.props.Login.inputParam.displayName}\r\n                        closeModal={this.handleClose}\r\n                        show={this.props.Login.openModal}\r\n                        showSaveContinue={false}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord}\r\n                        mandatoryFields={this.state.mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation ? this.props.Login.operation : ''}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <FormSelectSearch\r\n                                        name={\"nsampletypecode\"}\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENAME\" })}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        value={this.state.selectedRecord.SampleTypes ? this.state.selectedRecord.SampleTypes : []}\r\n                                        options={this.props.Login.optionsSampleType ? this.props.Login.optionsSampleType : []}\r\n                                        optionId=\"nsampletypecode\"\r\n                                        optionValue=\"ssampletypename\"\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        as={\"select\"}\r\n                                        onChange={(event) => this.onComboChange(event, \"nsampletypecode\")}\r\n                                    />\r\n                                    <FormInput\r\n                                        name={\"sregtypename\"}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPENAME\" })}\r\n                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                        className=\"\"\r\n                                        isMandatory={true}\r\n                                        rows=\"1\"\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPENAME\" })}\r\n                                        type=\"textarea\"\r\n                                        required={true}\r\n                                        value={this.state.selectedRecord ? this.state.selectedRecord.sregtypename : \"\"}\r\n                                        maxLength={\"255\"}\r\n                                    />\r\n                                    <FormTextarea\r\n                                        name={\"sdescription\"}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                        isMandatory={false}\r\n                                        rows=\"1\"\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                        type=\"textarea\"\r\n                                        value={this.state.selectedRecord ? this.state.selectedRecord.sdescription : \"\"}\r\n                                        maxLength={\"255\"}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        } />\r\n                    : \"\"}\r\n            </>\r\n\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState)\r\n                });\r\n            }\r\n            else {\r\n                if (this.props.Login.operation === \"create\" && this.props.Login.inputParam.saveType === 2) {\r\n                    this.props.Login.inputParam.formRef.current.reset();\r\n                }\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState,\r\n                    selectedRecord: { sregtypename: '', sdescription: '' }\r\n                });\r\n            }\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            let mandatoryFields = this.props.Login.mandatoryFields ? (this.props.Login.mandatoryFields) : [\r\n                { \"idsName\": \"IDS_SAMPLETYPENAME\", \"dataField\": \"SampleTypes\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_REGISTRATIONTYPENAME\", \"dataField\": \"sregtypename\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                //{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            ]\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord, mandatoryFields });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const { selectedRecord } = this.state || {};\r\n        if (comboData) {\r\n\r\n            fieldName = 'nsampletypecode';\r\n            selectedRecord['SampleTypes'] = comboData;\r\n            selectedRecord[fieldName] = comboData.value;\r\n        }\r\n        else {\r\n            fieldName = 'nsampletypecode';\r\n            selectedRecord['SampleTypes'] = comboData;\r\n            selectedRecord[fieldName] = \"\";\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, showRegTypeAddScreen, fetchRegTypeById,\r\n    updateStore, validateEsignCredential\r\n})(injectIntl(RegistrationType));"]},"metadata":{},"sourceType":"module"}