{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\sidebar\\\\sidebar.component.jsx\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Tab, Nav, Image, Badge, Accordion } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Preloader from '../preloader/preloader.component';\nimport { callService, navPage, elnLoginAction, sdmsLoginAction, updateStore, getDashBoardForHome } from '../../actions';\nimport { SidebarNav, SidebarBrand, SidebarBrandTxt, NavHeader, CollapseInner } from '../../components/sidebar/sidebar.styles';\nimport MenuExpand from \"../../assets/image/menu-expand.svg\";\nimport PrimaryLogo from '../../assets/image/sidebar-logo.png';\nimport Logo from '../../assets/image/qualis-lims@3x.png';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { formatInputDate } from '../CommonScript'; //import LogiLabLogo from '../../assets/image/logilablogo.png'\n//import SDMSLogo from '../../assets/image/sdmslogo.png'\n\nimport { toast } from 'react-toastify';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell, faHome, faServer } from '@fortawesome/free-solid-svg-icons';\nimport ContextAwareToggle from './ContextAwareToggle';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Menu extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = (classUrl, methodUrl, formCode, displayName, moduleCode, formname, modulename) => {\n      if (this.props.inputRef.current) this.props.inputRef.current.value = \"\";\n\n      if (this.props.Login.userInfo.nformcode !== formCode) {\n        const userInfo = { ...this.props.Login.userInfo,\n          \"nformcode\": formCode,\n          \"nmodulecode\": moduleCode,\n          \"sformname\": formname.sdisplayname,\n          \"smodulename\": modulename.sdisplayname\n        };\n        const inputParam = {\n          inputData: {\n            \"userinfo\": userInfo,\n            settings: this.props.Login.settings,\n            currentdate: formatInputDate(new Date(), true)\n          },\n          classUrl,\n          methodUrl,\n          displayName,\n          key: `MenuId_${formname.nmenucode}`,\n          serviceNeed: true\n        };\n        this.props.menuHide();\n        this.props.callService(inputParam);\n      }\n    };\n\n    this.onELNLoginClick = () => {\n      if (this.props.Login.sdmselnsettings && this.props.Login.sdmselnsettings[3]) {\n        const serverUrl = this.props.Login.sdmselnsettings[3] + \"Login/Validateuser\";\n        const uiUrl = this.props.Login.sdmselnsettings[4];\n        const userInfo = this.props.Login.userInfo;\n        const inputParam = {\n          username: userInfo.sloginid,\n          lssitemaster: {\n            \"sitecode\": \"1\"\n          },\n          password: userInfo.spassword,\n          lsusergroup: {\n            \"usergroupname\": userInfo.suserrolename\n          }\n        };\n        this.props.elnLoginAction(inputParam, serverUrl, uiUrl);\n      } else {\n        toast.info(this.intl.FormattedMessage({\n          id: \"IDS_ELNSERVERURLNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.onSDMSLoginClick = () => {\n      if (this.props.Login.sdmselnsettings && this.props.Login.sdmselnsettings[1]) {\n        const serverUrl = this.props.Login.sdmselnsettings[1] + \"/Login/validatelinkUser\";\n        const uiUrl = this.props.Login.sdmselnsettings[2];\n        const userInfo = this.props.Login.userInfo;\n        const inputParam = {\n          sUserName: userInfo.sloginid,\n          sSiteCode: \"DEFAULT\",\n          sGroupName: userInfo.suserrolename\n        };\n        this.props.sdmsLoginAction(inputParam, serverUrl, uiUrl);\n      } else {\n        toast.info(this.intl.FormattedMessage({\n          id: \"IDS_ELNSERVERURLNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.setKey = k => {\n      this.setState({\n        key: k\n      });\n    };\n\n    this.setKeyMenu = k => {\n      this.setState({\n        keyMenu: k\n      });\n    };\n\n    this.getDetailHome = menu => {\n      const userInfo = { ...this.props.Login.userInfo\n      };\n      userInfo['nformcode'] = -1;\n      userInfo['nmodulecode'] = -1;\n      userInfo['sformname'] = null;\n      userInfo['smodulename'] = null;\n      let inputParam = {};\n\n      if (menu.shomename === 'apiservice') {\n        inputParam = {\n          classUrl: menu.shomename,\n          methodUrl: menu.smethodurl\n        };\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: {},\n          userInfo,\n          organisation: undefined,\n          loading: false,\n          displayName: menu.sdisplayname,\n          shomename: menu.shomename,\n          ...inputParam\n        }\n      };\n      this.props.layOutGetHome(updateInfo);\n    };\n\n    this.toggleSearch = () => {\n      this.setState({\n        showSearch: !this.state.showSearch\n      });\n    };\n\n    this.ToggleAction = value => {\n      this.setState({\n        isSidebarActive: value,\n        MenuVisible: !value\n      }); //this.setState({MenuVisible: !this.state.MenuVisible})\n    };\n\n    this.pinnedEvent = () => {\n      let {\n        isPinned\n      } = this.state;\n      this.setState({\n        isPinned: !isPinned\n      });\n    };\n\n    this.formRef = React.createRef();\n    this.state = {\n      show: false,\n      nusermultirolecode: -1,\n      selectedRecord: {},\n      isSidebarActive: false,\n      isPinned: false,\n      MenuVisible: false,\n      key: this.props.Login.defaultMenuHome && this.props.Login.defaultMenuHome ? `MenuId_${this.props.Login.defaultMenuHome.nhomedesigncode}` : \"MenuId_1\",\n      keyMenu: this.props.Login.menuDesign && this.props.Login.menuDesign ? `MenuId_${this.props.Login.menuDesign[0].nmenucode}` : \"MenuId_-2\",\n      alert: []\n    };\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  toggleMenu() {\n    this.setState({\n      MenuVisible: !this.state.MenuVisible\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.Login.menuDesign !== prevProps.Login.menuDesign) {\n      this.setState({\n        key: this.props.Login.HomeDesign && this.props.Login.HomeDesign[0] ? `MenuId_${this.props.Login.defaultMenuHome.nhomedesigncode}` : \"MenuId_1\"\n      });\n    }\n  }\n\n  render() {\n    const {\n      isSidebarActive\n    } = this.state;\n    const {\n      HomeDesign,\n      loading,\n      menuDesign\n    } = this.props.Login;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, !this.props.fullView && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"text-center menu-toggle-btn\",\n      onMouseEnter: () => this.setState({\n        MenuVisible: !this.state.MenuVisible\n      }),\n      onMouseLeave: () => this.ToggleAction(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: MenuExpand,\n      alt: \"Lims-Logo\",\n      width: \"40\",\n      height: \"40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    })), (this.props.fullView || this.state.MenuVisible) && /*#__PURE__*/React.createElement(React.Fragment, null, (this.props.history.history.location.pathname === \"/home\" || this.props.history.history.location.pathname === \"/dashboard\" || this.props.history.history.location.pathname === \"/alert\" || this.props.history.history.location.pathname === \"/apiservice\") && /*#__PURE__*/React.createElement(SidebarNav, {\n      className: `d-flex side-nav sidebar sidebar-dark bg-gradient-primary toggled ${this.props.fullView && 'sidebar-fullview'}`,\n      onMouseEnter: () => this.ToggleAction(false),\n      onMouseLeave: () => this.ToggleAction(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Tab.Container, {\n      activeKey: this.state.key,\n      onSelect: k => this.setKey(k),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      className: \"nav flex-column side-nav\",\n      variant: \"pills\",\n      key: \"MenuIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"text-center menu-toggle-btn menu-toggle-btn1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: MenuExpand,\n      alt: \"Lims-Logo\",\n      width: \"40\",\n      height: \"40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 49\n      }\n    })), HomeDesign && HomeDesign.map(menu => {\n      return menu.shomename === 'dashboard' ? /*#__PURE__*/React.createElement(Nav.Link, {\n        key: menu.nhomedesigncode,\n        eventKey: `MenuId_${menu.nhomedesigncode}`,\n        onClick: e => this.getDetailHome(menu),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/${menu.shomename.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        width: \"34\",\n        height: \"34\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 61\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 61\n        }\n      }, menu.sdisplayname)) : menu.shomename === 'home' ? /*#__PURE__*/React.createElement(Nav.Link, {\n        to: '/home',\n        key: menu.nhomedesigncode,\n        eventKey: `MenuId_${menu.nhomedesigncode}`,\n        onClick: e => this.getDetailHome(menu),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faHome,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 65\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 65\n        }\n      }, menu.sdisplayname)) : menu.shomename === 'apiservice' ? /*#__PURE__*/React.createElement(Nav.Link, {\n        to: '/apiservice',\n        key: menu.nhomedesigncode,\n        eventKey: `MenuId_${menu.nhomedesigncode}`,\n        onClick: e => this.getDetailHome(menu),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faServer,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 69\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 69\n        }\n      }, menu.sdisplayname)) : /*#__PURE__*/React.createElement(Nav.Link, {\n        to: '/alert',\n        key: menu.nhomedesigncode,\n        eventKey: `MenuId_${menu.nhomedesigncode}`,\n        onClick: e => this.getDetailHome(menu),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 67\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faBell,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 69\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 69\n        }\n      }, menu.sdisplayname), this.props.Login.alert && this.props.Login.alert.length > 0 ? /*#__PURE__*/React.createElement(Badge, {\n        style: {\n          \"position\": \"relative\",\n          \"bottom\": \"56px\",\n          \"font-size\": \"0.7rem\",\n          \"width\": \"20px\",\n          \"left\": \"30px\"\n        },\n        pill: true,\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 73\n        }\n      }, this.props.Login.alert && this.props.Login.alert.length) : \"\");\n    }), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"mt-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: PrimaryLogo,\n      alt: \"Primary-Logo\",\n      width: \"45\",\n      height: \"60\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 49\n      }\n    }))))), this.props.history.history.location.pathname !== \"/home\" && this.props.history.history.location.pathname !== \"/dashboard\" && this.props.history.history.location.pathname !== \"/alert\" && this.props.history.history.location.pathname !== \"/apiservice\" && /*#__PURE__*/React.createElement(SidebarNav, {\n      className: `d-flex side-nav sidebar sidebar-dark bg-gradient-primary  ${this.state.keyMenu === 'MenuId_-2' && 'toggled'}  ${this.props.fullView && 'sidebar-fullview'}`,\n      onMouseEnter: () => this.ToggleAction(false),\n      onMouseLeave: () => this.ToggleAction(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Tab.Container, {\n      activeKey: this.state.keyMenu,\n      onSelect: k => this.setKeyMenu(k),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      className: \"nav flex-column side-nav\",\n      variant: \"pills\",\n      key: \"MenuIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"text-center menu-toggle-btn menu-toggle-btn1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: MenuExpand,\n      alt: \"Lims-Logo\",\n      width: \"40\",\n      height: \"40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 53\n      }\n    })), menuDesign && menuDesign.map(menu => {\n      return menu.nmenucode !== -2 ? /*#__PURE__*/React.createElement(Nav.Link, {\n        key: menu.nmenucode,\n        eventKey: `MenuId_${menu.nmenucode}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/${menu.smenuname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        width: \"34\",\n        height: \"34\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 65\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 65\n        }\n      }, menu.sdisplayname)) : /*#__PURE__*/React.createElement(Nav.Link, {\n        to: '/home',\n        key: menu.nmenucode,\n        eventKey: `MenuId_${menu.nmenucode}`,\n        onClick: e => this.getDetailHome(HomeDesign.filter(x => x.shomename === 'home')[0]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 75\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faHome,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 65\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 65\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_HOME\"\n      })));\n    }), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"mt-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: PrimaryLogo,\n      alt: \"Primary-Logo\",\n      width: \"45\",\n      height: \"60\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(Tab.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 45\n      }\n    }, menuDesign && menuDesign.map(menu => {\n      return /*#__PURE__*/React.createElement(Tab.Pane, {\n        key: menu.nmenucode,\n        eventKey: `MenuId_${menu.nmenucode}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        className: \"navbar-nav position-relative\",\n        as: \"ul\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(SidebarBrand, {\n        className: \"sidebar-brand d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(SidebarBrandTxt, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: menu.sdisplayname,\n        defaultMessage: menu.sdisplayname,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 73\n        }\n      }))), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n        className: \"sidebar-scroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 65\n        }\n      }, menu.nmenucode !== -2 && menu.lstmodule.map(module => {\n        return /*#__PURE__*/React.createElement(Nav.Item, {\n          key: module.nmodulecode,\n          as: \"li\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 81\n          }\n        }, /*#__PURE__*/React.createElement(ContextAwareToggle, {\n          eventKey: module.nmodulecode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 85\n          }\n        }, /*#__PURE__*/React.createElement(NavHeader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 89\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: module.sdisplayname,\n          defaultMessage: module.sdisplayname,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 93\n          }\n        }))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n          eventKey: module.nmodulecode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 85\n          }\n        }, /*#__PURE__*/React.createElement(CollapseInner, {\n          className: \"bg-transparent py-2 collapse-inner rounded\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 89\n          }\n        }, module.lstforms !== null && module.lstforms.map(forms => {\n          return /*#__PURE__*/React.createElement(NavLink, {\n            className: `collapse-item ${forms.nformcode === this.props.Login.userInfo.nformcode ? 'active-form' : ''}`,\n            key: forms.nformcode,\n            nformcode: forms.nformcode,\n            to: '/' + forms.sclassname,\n            onClick: () => this.getDetail(forms.sclassname.toLowerCase(), forms.surl, forms.nformcode, forms.sdisplayname, module.nmodulecode, forms, module),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 105\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: forms.sdisplayname,\n            defaultMessage: forms.sdisplayname,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 109\n            }\n          }));\n        }))));\n      }))));\n    })))))), /*#__PURE__*/React.createElement(Preloader, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }\n    }));\n  } // selectInputOnChange = (ComboVal, fieldName) =>  {\n  //     this.setState({ [fieldName] : ComboVal }); \n  // }\n\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  navPage,\n  elnLoginAction,\n  sdmsLoginAction,\n  updateStore,\n  getDashBoardForHome\n})(injectIntl(Menu));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/sidebar/sidebar.component.jsx"],"names":["React","PureComponent","connect","NavLink","Tab","Nav","Image","Badge","Accordion","FormattedMessage","injectIntl","Preloader","callService","navPage","elnLoginAction","sdmsLoginAction","updateStore","getDashBoardForHome","SidebarNav","SidebarBrand","SidebarBrandTxt","NavHeader","CollapseInner","PrimaryLogo","Logo","formatInputDate","toast","DEFAULT_RETURN","FontAwesomeIcon","faBell","faHome","faServer","ContextAwareToggle","PerfectScrollbar","mapStateToProps","state","Login","Menu","constructor","props","getDetail","classUrl","methodUrl","formCode","displayName","moduleCode","formname","modulename","inputRef","current","value","userInfo","nformcode","sdisplayname","inputParam","inputData","settings","currentdate","Date","key","nmenucode","serviceNeed","menuHide","onELNLoginClick","sdmselnsettings","serverUrl","uiUrl","username","sloginid","lssitemaster","password","spassword","lsusergroup","suserrolename","info","intl","id","onSDMSLoginClick","sUserName","sSiteCode","sGroupName","setKey","k","setState","setKeyMenu","keyMenu","getDetailHome","menu","shomename","smethodurl","updateInfo","typeName","data","masterData","organisation","undefined","loading","layOutGetHome","toggleSearch","showSearch","ToggleAction","isSidebarActive","MenuVisible","pinnedEvent","isPinned","formRef","createRef","show","nusermultirolecode","selectedRecord","defaultMenuHome","nhomedesigncode","menuDesign","alert","toggleMenu","bind","componentDidUpdate","prevProps","HomeDesign","render","fullView","MenuExpand","history","location","pathname","map","e","require","toLowerCase","length","smenuname","filter","x","formatMessage","lstmodule","module","nmodulecode","lstforms","forms","sclassname","surl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,KAA1B,EAAgCC,SAAhC,QAAiD,iBAAjD;AACA,SAASC,gBAAT,EAA0BC,UAA1B,QAA4C,YAA5C;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,cAA/B,EAA+CC,eAA/C,EAAgEC,WAAhE,EAA6EC,mBAA7E,QAAwG,eAAxG;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,eAAnC,EAAoDC,SAApD,EAA+DC,aAA/D,QAAoF,yCAApF;;AAEA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;AACA,OAAO,6CAAP;AACA,SAASC,eAAT,QAAgC,iBAAhC,C,CACA;AACA;;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,QAAyC,mCAAzC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAAEC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,GAAP;AACH,CAFD;;AAIA,MAAMC,IAAN,SAAmBpC,aAAnB,CAAiC;AAC7BqC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2BnBC,SA3BmB,GA2BP,CAACC,QAAD,EAAWC,SAAX,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,UAA7C,EAAyDC,QAAzD,EAAmEC,UAAnE,KAAkF;AAC1F,UAAI,KAAKR,KAAL,CAAWS,QAAX,CAAoBC,OAAxB,EACI,KAAKV,KAAL,CAAWS,QAAX,CAAoBC,OAApB,CAA4BC,KAA5B,GAAoC,EAApC;;AACJ,UAAI,KAAKX,KAAL,CAAWH,KAAX,CAAiBe,QAAjB,CAA0BC,SAA1B,KAAwCT,QAA5C,EAAsD;AAClD,cAAMQ,QAAQ,GAAG,EACb,GAAG,KAAKZ,KAAL,CAAWH,KAAX,CAAiBe,QADP;AACiB,uBAAaR,QAD9B;AAEb,yBAAeE,UAFF;AAEc,uBAAaC,QAAQ,CAACO,YAFpC;AAEkD,yBAAeN,UAAU,CAACM;AAF5E,SAAjB;AAIA,cAAMC,UAAU,GAAG;AACfC,UAAAA,SAAS,EAAE;AAAE,wBAAYJ,QAAd;AACXK,YAAAA,QAAQ,EAAG,KAAKjB,KAAL,CAAWH,KAAX,CAAiBoB,QADjB;AAEXC,YAAAA,WAAW,EAAEhC,eAAe,CAAC,IAAIiC,IAAJ,EAAD,EAAa,IAAb;AAFjB,WADI;AAIfjB,UAAAA,QAJe;AAILC,UAAAA,SAJK;AAIME,UAAAA,WAJN;AAImBe,UAAAA,GAAG,EAAG,UAASb,QAAQ,CAACc,SAAU,EAJrD;AAIwDC,UAAAA,WAAW,EAAE;AAJrE,SAAnB;AAMA,aAAKtB,KAAL,CAAWuB,QAAX;AACA,aAAKvB,KAAL,CAAW3B,WAAX,CAAuB0C,UAAvB;AACH;AACJ,KA5CkB;;AAAA,SA8CnBS,eA9CmB,GA8CD,MAAM;AACpB,UAAI,KAAKxB,KAAL,CAAWH,KAAX,CAAiB4B,eAAjB,IAAoC,KAAKzB,KAAL,CAAWH,KAAX,CAAiB4B,eAAjB,CAAiC,CAAjC,CAAxC,EAA6E;AACzE,cAAMC,SAAS,GAAG,KAAK1B,KAAL,CAAWH,KAAX,CAAiB4B,eAAjB,CAAiC,CAAjC,IAAsC,oBAAxD;AACA,cAAME,KAAK,GAAG,KAAK3B,KAAL,CAAWH,KAAX,CAAiB4B,eAAjB,CAAiC,CAAjC,CAAd;AACA,cAAMb,QAAQ,GAAG,KAAKZ,KAAL,CAAWH,KAAX,CAAiBe,QAAlC;AACA,cAAMG,UAAU,GAAG;AACfa,UAAAA,QAAQ,EAAEhB,QAAQ,CAACiB,QADJ;AAEfC,UAAAA,YAAY,EAAE;AAAE,wBAAY;AAAd,WAFC;AAGfC,UAAAA,QAAQ,EAAEnB,QAAQ,CAACoB,SAHJ;AAIfC,UAAAA,WAAW,EAAE;AAAE,6BAAiBrB,QAAQ,CAACsB;AAA5B;AAJE,SAAnB;AAMA,aAAKlC,KAAL,CAAWzB,cAAX,CAA0BwC,UAA1B,EAAsCW,SAAtC,EAAiDC,KAAjD;AACH,OAXD,MAWO;AACHxC,QAAAA,KAAK,CAACgD,IAAN,CAAW,KAAKC,IAAL,CAAUlE,gBAAV,CAA2B;AAAEmE,UAAAA,EAAE,EAAE;AAAN,SAA3B,CAAX;AACH;AACJ,KA7DkB;;AAAA,SA+DnBC,gBA/DmB,GA+DA,MAAM;AACrB,UAAI,KAAKtC,KAAL,CAAWH,KAAX,CAAiB4B,eAAjB,IAAoC,KAAKzB,KAAL,CAAWH,KAAX,CAAiB4B,eAAjB,CAAiC,CAAjC,CAAxC,EAA6E;AACzE,cAAMC,SAAS,GAAG,KAAK1B,KAAL,CAAWH,KAAX,CAAiB4B,eAAjB,CAAiC,CAAjC,IAAsC,yBAAxD;AACA,cAAME,KAAK,GAAG,KAAK3B,KAAL,CAAWH,KAAX,CAAiB4B,eAAjB,CAAiC,CAAjC,CAAd;AACA,cAAMb,QAAQ,GAAG,KAAKZ,KAAL,CAAWH,KAAX,CAAiBe,QAAlC;AACA,cAAMG,UAAU,GAAG;AACfwB,UAAAA,SAAS,EAAE3B,QAAQ,CAACiB,QADL;AAEfW,UAAAA,SAAS,EAAE,SAFI;AAGfC,UAAAA,UAAU,EAAE7B,QAAQ,CAACsB;AAHN,SAAnB;AAKA,aAAKlC,KAAL,CAAWxB,eAAX,CAA2BuC,UAA3B,EAAuCW,SAAvC,EAAkDC,KAAlD;AACH,OAVD,MAUO;AACHxC,QAAAA,KAAK,CAACgD,IAAN,CAAW,KAAKC,IAAL,CAAUlE,gBAAV,CAA2B;AAAEmE,UAAAA,EAAE,EAAE;AAAN,SAA3B,CAAX;AACH;AACJ,KA7EkB;;AAAA,SA8EnBK,MA9EmB,GA8ETC,CAAD,IAAO;AACZ,WAAKC,QAAL,CAAc;AAAExB,QAAAA,GAAG,EAAEuB;AAAP,OAAd;AACH,KAhFkB;;AAAA,SAkFnBE,UAlFmB,GAkFLF,CAAD,IAAO;AAChB,WAAKC,QAAL,CAAc;AAAEE,QAAAA,OAAO,EAAEH;AAAX,OAAd;AACH,KApFkB;;AAAA,SAiGnBI,aAjGmB,GAiGFC,IAAD,IAAU;AACtB,YAAMpC,QAAQ,GAAG,EACb,GAAG,KAAKZ,KAAL,CAAWH,KAAX,CAAiBe;AADP,OAAjB;AAGAA,MAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwB,CAAC,CAAzB;AACAA,MAAAA,QAAQ,CAAC,aAAD,CAAR,GAA0B,CAAC,CAA3B;AACAA,MAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwB,IAAxB;AACAA,MAAAA,QAAQ,CAAC,aAAD,CAAR,GAA0B,IAA1B;AAEA,UAAIG,UAAU,GAAG,EAAjB;;AAEA,UAAIiC,IAAI,CAACC,SAAL,KAAmB,YAAvB,EAAqC;AACjClC,QAAAA,UAAU,GAAG;AAAEb,UAAAA,QAAQ,EAAE8C,IAAI,CAACC,SAAjB;AAA4B9C,UAAAA,SAAS,EAAE6C,IAAI,CAACE;AAA5C,SAAb;AACH;;AACD,YAAMC,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAEhE,cADK;AAEfiE,QAAAA,IAAI,EAAE;AAAEC,UAAAA,UAAU,EAAE,EAAd;AAAkB1C,UAAAA,QAAlB;AAA4B2C,UAAAA,YAAY,EAAEC,SAA1C;AAAqDC,UAAAA,OAAO,EAAE,KAA9D;AAAqEpD,UAAAA,WAAW,EAAE2C,IAAI,CAAClC,YAAvF;AAAqGmC,UAAAA,SAAS,EAAED,IAAI,CAACC,SAArH;AAAgI,aAAGlC;AAAnI;AAFS,OAAnB;AAIA,WAAKf,KAAL,CAAW0D,aAAX,CAAyBP,UAAzB;AAIH,KAvHkB;;AAAA,SAwHnBQ,YAxHmB,GAwHJ,MAAM;AAEjB,WAAKf,QAAL,CAAc;AACVgB,QAAAA,UAAU,EAAE,CAAC,KAAKhE,KAAL,CAAWgE;AADd,OAAd;AAGH,KA7HkB;;AAAA,SA+UnBC,YA/UmB,GA+UHlD,KAAD,IAAW;AAEtB,WAAKiC,QAAL,CAAc;AACVkB,QAAAA,eAAe,EAAEnD,KADP;AAEVoD,QAAAA,WAAW,EAAE,CAACpD;AAFJ,OAAd,EAFsB,CAOtB;AACH,KAvVkB;;AAAA,SAgWnBqD,WAhWmB,GAgWL,MAAM;AAChB,UAAI;AAAEC,QAAAA;AAAF,UAAe,KAAKrE,KAAxB;AACA,WAAKgD,QAAL,CAAc;AACVqB,QAAAA,QAAQ,EAAE,CAACA;AADD,OAAd;AAGH,KArWkB;;AAEf,SAAKC,OAAL,GAAezG,KAAK,CAAC0G,SAAN,EAAf;AACA,SAAKvE,KAAL,GAAa;AACTwE,MAAAA,IAAI,EAAE,KADG;AAETC,MAAAA,kBAAkB,EAAE,CAAC,CAFZ;AAGTC,MAAAA,cAAc,EAAE,EAHP;AAITR,MAAAA,eAAe,EAAE,KAJR;AAKTG,MAAAA,QAAQ,EAAE,KALD;AAMTF,MAAAA,WAAW,EAAE,KANJ;AAOT3C,MAAAA,GAAG,EAAE,KAAKpB,KAAL,CAAWH,KAAX,CAAiB0E,eAAjB,IACD,KAAKvE,KAAL,CAAWH,KAAX,CAAiB0E,eADhB,GAEA,UAAS,KAAKvE,KAAL,CAAWH,KAAX,CAAiB0E,eAAjB,CAAiCC,eAAgB,EAF1D,GAGD,UAVK;AAWL1B,MAAAA,OAAO,EAAE,KAAK9C,KAAL,CAAWH,KAAX,CAAiB4E,UAAjB,IACT,KAAKzE,KAAL,CAAWH,KAAX,CAAiB4E,UADR,GAER,UAAS,KAAKzE,KAAL,CAAWH,KAAX,CAAiB4E,UAAjB,CAA4B,CAA5B,EAA+BpD,SAAU,EAF1C,GAGT,WAdK;AAeTqD,MAAAA,KAAK,EAAE;AAfE,KAAb;AAiBA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AACDD,EAAAA,UAAU,GAAG;AACT,SAAK/B,QAAL,CAAc;AAAEmB,MAAAA,WAAW,EAAE,CAAC,KAAKnE,KAAL,CAAWmE;AAA3B,KAAd;AACH;;AA8DDc,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAK9E,KAAL,CAAWH,KAAX,CAAiB4E,UAAjB,KAAgCK,SAAS,CAACjF,KAAV,CAAgB4E,UAApD,EAAgE;AAC5D,WAAK7B,QAAL,CAAc;AACVxB,QAAAA,GAAG,EAAE,KAAKpB,KAAL,CAAWH,KAAX,CAAiBkF,UAAjB,IAA+B,KAAK/E,KAAL,CAAWH,KAAX,CAAiBkF,UAAjB,CAA4B,CAA5B,CAA/B,GACA,UAAS,KAAK/E,KAAL,CAAWH,KAAX,CAAiB0E,eAAjB,CAAiCC,eAAgB,EAD1D,GAC8D;AAFzD,OAAd;AAIH;AAEJ;;AAkCDQ,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAElB,MAAAA;AAAF,QAAsB,KAAKlE,KAAjC;AACA,UAAM;AAAEmF,MAAAA,UAAF;AAActB,MAAAA,OAAd;AAAsBgB,MAAAA;AAAtB,QAAqC,KAAKzE,KAAL,CAAWH,KAAtD;AACA,wBACI,uDAEI,0CAEK,CAAC,KAAKG,KAAL,CAAWiF,QAAZ,iBACG,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,6BAApB;AAAkD,MAAA,YAAY,EAAE,MAAM,KAAKrC,QAAL,CAAc;AAAEmB,QAAAA,WAAW,EAAE,CAAC,KAAKnE,KAAL,CAAWmE;AAA3B,OAAd,CAAtE;AAA+H,MAAA,YAAY,EAAE,MAAM,KAAKF,YAAL,CAAkB,IAAlB,CAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAEqB,UAAV;AAAsB,MAAA,GAAG,EAAC,WAA1B;AAAsC,MAAA,KAAK,EAAC,IAA5C;AAAiD,MAAA,MAAM,EAAC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHR,EAOK,CAAC,KAAKlF,KAAL,CAAWiF,QAAX,IAAuB,KAAKrF,KAAL,CAAWmE,WAAnC,kBACG,0CAKK,CAAC,KAAK/D,KAAL,CAAWmF,OAAX,CAAmBA,OAAnB,CAA2BC,QAA3B,CAAoCC,QAApC,KAAiD,OAAjD,IAA4D,KAAKrF,KAAL,CAAWmF,OAAX,CAAmBA,OAAnB,CAA2BC,QAA3B,CAAoCC,QAApC,KAAiD,YAA7G,IAA6H,KAAKrF,KAAL,CAAWmF,OAAX,CAAmBA,OAAnB,CAA2BC,QAA3B,CAAoCC,QAApC,KAAiD,QAA9K,IAA0L,KAAKrF,KAAL,CAAWmF,OAAX,CAAmBA,OAAnB,CAA2BC,QAA3B,CAAoCC,QAApC,KAAiD,aAA5O,kBACG,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAG,oEAAmE,KAAKrF,KAAL,CAAWiF,QAAX,IAAuB,kBAAmB,EAArI;AAAwI,MAAA,YAAY,EAAE,MAAM,KAAKpB,YAAL,CAAkB,KAAlB,CAA5J;AAAsL,MAAA,YAAY,EAAE,MAAM,KAAKA,YAAL,CAAkB,IAAlB,CAA1M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,GAAD,CAAK,SAAL;AACI,MAAA,SAAS,EAAE,KAAKjE,KAAL,CAAWwB,GAD1B;AAEI,MAAA,QAAQ,EAAGuB,CAAD,IAAO,KAAKD,MAAL,CAAYC,CAAZ,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAE,GAAF;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAA2C,MAAA,OAAO,EAAC,OAAnD;AAA2D,MAAA,GAAG,EAAC,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,8CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAEuC,UAAV;AAAsB,MAAA,GAAG,EAAC,WAA1B;AAAsC,MAAA,KAAK,EAAC,IAA5C;AAAiD,MAAA,MAAM,EAAC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAOKH,UAAU,IAAIA,UAAU,CAACO,GAAX,CAAgBtC,IAAD,IAAU;AACpC,aACIA,IAAI,CAACC,SAAL,KAAmB,WAAnB,gBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,GAAG,EAAED,IAAI,CAACwB,eAApB;AAAqC,QAAA,QAAQ,EAAG,UAASxB,IAAI,CAACwB,eAAgB,EAA9E;AAAiF,QAAA,OAAO,EAAGe,CAAD,IAAO,KAAKxC,aAAL,CAAmBC,IAAnB,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEwC,OAAO,CAAE,sBAAqBxC,IAAI,CAACC,SAAL,CAAewC,WAAf,EAA6B,MAApD,CAAnB;AAA+E,QAAA,GAAG,EAAC,SAAnF;AAA6F,QAAA,KAAK,EAAC,IAAnG;AAAwG,QAAA,MAAM,EAAC,IAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOzC,IAAI,CAAClC,YAAZ,CAFJ,CADJ,GAKMkC,IAAI,CAACC,SAAL,KAAmB,MAAnB,gBACE,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,EAAE,EAAE,OAAd;AAAuB,QAAA,GAAG,EAAED,IAAI,CAACwB,eAAjC;AAAkD,QAAA,QAAQ,EAAG,UAASxB,IAAI,CAACwB,eAAgB,EAA3F;AACI,QAAA,OAAO,EAAGe,CAAD,IAAO,KAAKxC,aAAL,CAAmBC,IAAnB,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEzD,MAAvB;AAA+B,QAAA,IAAI,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOyD,IAAI,CAAClC,YAAZ,CAJJ,CADF,GAOEkC,IAAI,CAACC,SAAL,KAAmB,YAAnB,gBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,EAAE,EAAE,aAAd;AAA6B,QAAA,GAAG,EAAED,IAAI,CAACwB,eAAvC;AAAwD,QAAA,QAAQ,EAAG,UAASxB,IAAI,CAACwB,eAAgB,EAAjG;AACI,QAAA,OAAO,EAAGe,CAAD,IAAO,KAAKxC,aAAL,CAAmBC,IAAnB,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAExD,QAAvB;AAAiC,QAAA,IAAI,EAAC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOwD,IAAI,CAAClC,YAAZ,CAJJ,CADJ,gBAOM,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,EAAE,EAAE,QAAd;AAAwB,QAAA,GAAG,EAAEkC,IAAI,CAACwB,eAAlC;AAAmD,QAAA,QAAQ,EAAG,UAASxB,IAAI,CAACwB,eAAgB,EAA5F;AACE,QAAA,OAAO,EAAGe,CAAD,IAAO,KAAKxC,aAAL,CAAmBC,IAAnB,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAE1D,MAAvB;AAA+B,QAAA,IAAI,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO0D,IAAI,CAAClC,YAAZ,CAJF,EAKG,KAAKd,KAAL,CAAWH,KAAX,CAAiB6E,KAAjB,IAA0B,KAAK1E,KAAL,CAAWH,KAAX,CAAiB6E,KAAjB,CAAuBgB,MAAvB,GAAgC,CAA1D,gBACG,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AACV,sBAAY,UADF;AAEV,oBAAU,MAFA;AAGV,uBAAa,QAHH;AAIV,mBAAS,MAJC;AAKV,kBAAQ;AALE,SAAd;AAMG,QAAA,IAAI,MANP;AAMQ,QAAA,OAAO,EAAC,QANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAM0B,KAAK1F,KAAL,CAAWH,KAAX,CAAiB6E,KAAjB,IAA0B,KAAK1E,KAAL,CAAWH,KAAX,CAAiB6E,KAAjB,CAAuBgB,MAN3E,CADH,GAQK,EAbR,CApBlB;AAoCH,KArCc,CAPnB,eA+CI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE1G,WAAZ;AAAyB,MAAA,GAAG,EAAC,cAA7B;AAA4C,MAAA,KAAK,EAAC,IAAlD;AAAuD,MAAA,MAAM,EAAC,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA/CJ,CAJJ,CAFJ,CANR,EAsEK,KAAKgB,KAAL,CAAWmF,OAAX,CAAmBA,OAAnB,CAA2BC,QAA3B,CAAoCC,QAApC,KAAiD,OAAjD,IAA4D,KAAKrF,KAAL,CAAWmF,OAAX,CAAmBA,OAAnB,CAA2BC,QAA3B,CAAoCC,QAApC,KAAiD,YAA7G,IAA6H,KAAKrF,KAAL,CAAWmF,OAAX,CAAmBA,OAAnB,CAA2BC,QAA3B,CAAoCC,QAApC,KAAiD,QAA9K,IAA0L,KAAKrF,KAAL,CAAWmF,OAAX,CAAmBA,OAAnB,CAA2BC,QAA3B,CAAoCC,QAApC,KAAiD,aAA3O,iBACO,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAG,6DAA4D,KAAKzF,KAAL,CAAWkD,OAAX,KAAqB,WAArB,IAAoC,SAAU,KAAI,KAAK9C,KAAL,CAAWiF,QAAX,IAAuB,kBAAmB,EAAhL;AAAmL,MAAA,YAAY,EAAE,MAAM,KAAKpB,YAAL,CAAkB,KAAlB,CAAvM;AAAiO,MAAA,YAAY,EAAE,MAAM,KAAKA,YAAL,CAAkB,IAAlB,CAArP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,GAAD,CAAK,SAAL;AACI,MAAA,SAAS,EAAE,KAAKjE,KAAL,CAAWkD,OAD1B;AAEI,MAAA,QAAQ,EAAGH,CAAD,IAAO,KAAKE,UAAL,CAAgBF,CAAhB,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAE,GAAF;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAA2C,MAAA,OAAO,EAAC,OAAnD;AAA2D,MAAA,GAAG,EAAC,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUQ,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,8CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,GAAG,EAAEuC,UAAV;AAAsB,MAAA,GAAG,EAAC,WAA1B;AAAsC,MAAA,KAAK,EAAC,IAA5C;AAAiD,MAAA,MAAM,EAAC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAVR,EAeKT,UAAU,IAAIA,UAAU,CAACa,GAAX,CAAgBtC,IAAD,IAAU;AACpC,aACIA,IAAI,CAAC3B,SAAL,KAAmB,CAAC,CAApB,gBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,GAAG,EAAE2B,IAAI,CAAC3B,SAApB;AAA+B,QAAA,QAAQ,EAAG,UAAS2B,IAAI,CAAC3B,SAAU,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEmE,OAAO,CAAE,sBAAqBxC,IAAI,CAAC2C,SAAL,CAAeF,WAAf,EAA6B,MAApD,CAAnB;AAA+E,QAAA,GAAG,EAAC,SAAnF;AAA6F,QAAA,KAAK,EAAC,IAAnG;AAAwG,QAAA,MAAM,EAAC,IAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOzC,IAAI,CAAClC,YAAZ,CAFJ,CADJ,gBAIkB,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,EAAE,EAAE,OAAd;AAAuB,QAAA,GAAG,EAAEkC,IAAI,CAAC3B,SAAjC;AAA4C,QAAA,QAAQ,EAAG,UAAS2B,IAAI,CAAC3B,SAAU,EAA/E;AACd,QAAA,OAAO,EAAGkE,CAAD,IAAO,KAAKxC,aAAL,CAAmBgC,UAAU,CAACa,MAAX,CAAkBC,CAAC,IAAEA,CAAC,CAAC5C,SAAF,KAAc,MAAnC,EAA2C,CAA3C,CAAnB,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGV,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAE1D,MAAvB;AAA+B,QAAA,IAAI,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHU,eAKV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKS,KAAL,CAAWoC,IAAX,CAAgB0D,aAAhB,CAA8B;AAACzD,QAAAA,EAAE,EAAE;AAAL,OAA9B,CAAP,CALU,CALtB;AAYH,KAbc,CAfnB,eAqCI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAErD,WAAZ;AAAyB,MAAA,GAAG,EAAC,cAA7B;AAA4C,MAAA,KAAK,EAAC,IAAlD;AAAuD,MAAA,MAAM,EAAC,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CArCJ,CAJJ,eAgDI,oBAAC,GAAD,CAAK,OAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKyF,UAAU,IAAIA,UAAU,CAACa,GAAX,CAAetC,IAAI,IAAI;AAClC,0BACI,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,GAAG,EAAEA,IAAI,CAAC3B,SAApB;AAA+B,QAAA,QAAQ,EAAG,UAAS2B,IAAI,CAAC3B,SAAU,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,8BAArB;AAAoD,QAAA,EAAE,EAAC,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAC,yCAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAE2B,IAAI,CAAClC,YAA3B;AACI,QAAA,cAAc,EAAEkC,IAAI,CAAClC,YADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAFJ,eAQI,oBAAC,gBAAD;AAAkB,QAAA,SAAS,EAAC,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEMkC,IAAI,CAAC3B,SAAL,KAAiB,CAAC,CAAlB,IAAsB2B,IAAI,CAAC+C,SAAN,CAAiBT,GAAjB,CAAqBU,MAAM,IAAI;AAE9C,4BAEI,oBAAC,GAAD,CAAK,IAAL;AAAU,UAAA,GAAG,EAAEA,MAAM,CAACC,WAAtB;AAAmC,UAAA,EAAE,EAAC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,kBAAD;AAAoB,UAAA,QAAQ,EAAED,MAAM,CAACC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAGI,oBAAC,gBAAD;AAAkB,UAAA,EAAE,EAAED,MAAM,CAAClF,YAA7B;AACI,UAAA,cAAc,EAAEkF,MAAM,CAAClF,YAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,CADJ,CADJ,eAUI,oBAAC,SAAD,CAAW,QAAX;AAAoB,UAAA,QAAQ,EAAEkF,MAAM,CAACC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,aAAD;AAAe,UAAA,SAAS,EAAC,4CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEOD,MAAM,CAACE,QAAP,KAAkB,IAAlB,IAA0BF,MAAM,CAACE,QAAR,CAAkBZ,GAAlB,CAAsBa,KAAK,IAAI;AACnD,8BACI,oBAAC,OAAD;AAAS,YAAA,SAAS,EAAG,iBAAgBA,KAAK,CAACtF,SAAN,KAAoB,KAAKb,KAAL,CAAWH,KAAX,CAAiBe,QAAjB,CAA0BC,SAA9C,GAA0D,aAA1D,GAA0E,EAAG,EAAlH;AAAqH,YAAA,GAAG,EAAEsF,KAAK,CAACtF,SAAhI;AACI,YAAA,SAAS,EAAEsF,KAAK,CAACtF,SADrB;AACgC,YAAA,EAAE,EAAE,MAAMsF,KAAK,CAACC,UADhD;AAEI,YAAA,OAAO,EAAE,MAAM,KAAKnG,SAAL,CAAekG,KAAK,CAACC,UAAN,CAAiBX,WAAjB,EAAf,EAA+CU,KAAK,CAACE,IAArD,EACXF,KAAK,CAACtF,SADK,EACMsF,KAAK,CAACrF,YADZ,EAC0BkF,MAAM,CAACC,WADjC,EAC8CE,KAD9C,EACqDH,MADrD,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKI,oBAAC,gBAAD;AAAkB,YAAA,EAAE,EAAEG,KAAK,CAACrF,YAA5B;AACI,YAAA,cAAc,EAAEqF,KAAK,CAACrF,YAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,CADJ;AAUH,SAXuB,CAFhC,CADJ,CAVJ,CAFJ;AAgCH,OAlCkB,CAF3B,CARJ,CADJ,CADJ;AAoDH,KArDc,CADnB,CAhDJ,CAFJ,CAvEZ,CARR,CAFJ,eAqMI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE2C,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArMJ,CADJ;AA0MH,GA/U4B,CAuW7B;AACA;AACA;;;AAzW6B;;AA6WjC,eAAe9F,OAAO,CAACgC,eAAD,EAAkB;AAAEtB,EAAAA,WAAF;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA,cAAxB;AAAwCC,EAAAA,eAAxC;AAAyDC,EAAAA,WAAzD;AAAsEC,EAAAA;AAAtE,CAAlB,CAAP,CAAsHP,UAAU,CAAC2B,IAAD,CAAhI,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Tab, Nav, Image, Badge,Accordion } from 'react-bootstrap';\r\nimport { FormattedMessage,injectIntl } from 'react-intl';\r\nimport Preloader from '../preloader/preloader.component';\r\nimport { callService, navPage, elnLoginAction, sdmsLoginAction, updateStore, getDashBoardForHome } from '../../actions'\r\nimport { SidebarNav, SidebarBrand, SidebarBrandTxt, NavHeader, CollapseInner } from '../../components/sidebar/sidebar.styles';\r\nimport MenuExpand from '../../assets/image/menu-expand.svg';\r\nimport PrimaryLogo from '../../assets/image/sidebar-logo.png';\r\nimport Logo from '../../assets/image/qualis-lims@3x.png';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { formatInputDate } from '../CommonScript';\r\n//import LogiLabLogo from '../../assets/image/logilablogo.png'\r\n//import SDMSLogo from '../../assets/image/sdmslogo.png'\r\nimport { toast } from 'react-toastify';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBell, faHome, faServer } from '@fortawesome/free-solid-svg-icons';\r\nimport ContextAwareToggle from './ContextAwareToggle';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nconst mapStateToProps = (state) => {\r\n    return { Login: state.Login }\r\n}\r\n\r\nclass Menu extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.state = {\r\n            show: false,\r\n            nusermultirolecode: -1,\r\n            selectedRecord: {},\r\n            isSidebarActive: false,\r\n            isPinned: false,\r\n            MenuVisible: false,\r\n            key: this.props.Login.defaultMenuHome &&\r\n                this.props.Login.defaultMenuHome ?\r\n                `MenuId_${this.props.Login.defaultMenuHome.nhomedesigncode}` :\r\n                \"MenuId_1\",\r\n                keyMenu: this.props.Login.menuDesign &&\r\n                this.props.Login.menuDesign ?\r\n                `MenuId_${this.props.Login.menuDesign[0].nmenucode}` :\r\n                \"MenuId_-2\",\r\n            alert: []\r\n        }\r\n        this.toggleMenu = this.toggleMenu.bind(this);\r\n    }\r\n    toggleMenu() {\r\n        this.setState({ MenuVisible: !this.state.MenuVisible })\r\n    }\r\n\r\n\r\n    getDetail = (classUrl, methodUrl, formCode, displayName, moduleCode, formname, modulename) => {\r\n        if (this.props.inputRef.current)\r\n            this.props.inputRef.current.value = \"\"\r\n        if (this.props.Login.userInfo.nformcode !== formCode) {\r\n            const userInfo = {\r\n                ...this.props.Login.userInfo, \"nformcode\": formCode,\r\n                \"nmodulecode\": moduleCode, \"sformname\": formname.sdisplayname, \"smodulename\": modulename.sdisplayname\r\n            }\r\n            const inputParam = {\r\n                inputData: { \"userinfo\": userInfo, \r\n                settings : this.props.Login.settings,\r\n                currentdate: formatInputDate(new Date(), true) },\r\n                classUrl, methodUrl, displayName, key: `MenuId_${formname.nmenucode}`, serviceNeed: true\r\n            };\r\n            this.props.menuHide();\r\n            this.props.callService(inputParam);\r\n        }\r\n    }\r\n\r\n    onELNLoginClick = () => {\r\n        if (this.props.Login.sdmselnsettings && this.props.Login.sdmselnsettings[3]) {\r\n            const serverUrl = this.props.Login.sdmselnsettings[3] + \"Login/Validateuser\";\r\n            const uiUrl = this.props.Login.sdmselnsettings[4];\r\n            const userInfo = this.props.Login.userInfo;\r\n            const inputParam = {\r\n                username: userInfo.sloginid,\r\n                lssitemaster: { \"sitecode\": \"1\" },\r\n                password: userInfo.spassword,\r\n                lsusergroup: { \"usergroupname\": userInfo.suserrolename }\r\n            };\r\n            this.props.elnLoginAction(inputParam, serverUrl, uiUrl);\r\n        } else {\r\n            toast.info(this.intl.FormattedMessage({ id: \"IDS_ELNSERVERURLNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n\r\n    onSDMSLoginClick = () => {\r\n        if (this.props.Login.sdmselnsettings && this.props.Login.sdmselnsettings[1]) {\r\n            const serverUrl = this.props.Login.sdmselnsettings[1] + \"/Login/validatelinkUser\";\r\n            const uiUrl = this.props.Login.sdmselnsettings[2];\r\n            const userInfo = this.props.Login.userInfo;\r\n            const inputParam = {\r\n                sUserName: userInfo.sloginid,\r\n                sSiteCode: \"DEFAULT\",\r\n                sGroupName: userInfo.suserrolename\r\n            };\r\n            this.props.sdmsLoginAction(inputParam, serverUrl, uiUrl);\r\n        } else {\r\n            toast.info(this.intl.FormattedMessage({ id: \"IDS_ELNSERVERURLNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n    setKey = (k) => {\r\n        this.setState({ key: k })\r\n    }\r\n\r\n    setKeyMenu = (k) => {\r\n        this.setState({ keyMenu: k })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.Login.menuDesign !== prevProps.Login.menuDesign) {\r\n            this.setState({\r\n                key: this.props.Login.HomeDesign && this.props.Login.HomeDesign[0] ?\r\n                    `MenuId_${this.props.Login.defaultMenuHome.nhomedesigncode}` : \"MenuId_1\"\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getDetailHome = (menu) => {\r\n        const userInfo = {\r\n            ...this.props.Login.userInfo\r\n        }\r\n        userInfo['nformcode'] = -1\r\n        userInfo['nmodulecode'] = -1\r\n        userInfo['sformname'] = null\r\n        userInfo['smodulename'] = null\r\n\r\n        let inputParam = {}\r\n\r\n        if (menu.shomename === 'apiservice') {\r\n            inputParam = { classUrl: menu.shomename, methodUrl: menu.smethodurl }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData: {}, userInfo, organisation: undefined, loading: false, displayName: menu.sdisplayname, shomename: menu.shomename, ...inputParam }\r\n        }\r\n        this.props.layOutGetHome(updateInfo)\r\n\r\n\r\n\r\n    }\r\n    toggleSearch = () => {\r\n\r\n        this.setState({\r\n            showSearch: !this.state.showSearch\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { isSidebarActive } = this.state;\r\n        const { HomeDesign, loading,menuDesign } = this.props.Login;\r\n        return (\r\n            <>\r\n\r\n                <>\r\n\r\n                    {!this.props.fullView &&\r\n                        <Nav.Link className=\"text-center menu-toggle-btn\" onMouseEnter={() => this.setState({ MenuVisible: !this.state.MenuVisible })} onMouseLeave={() => this.ToggleAction(true)}>\r\n                            <img src={MenuExpand} alt=\"Lims-Logo\" width=\"40\" height=\"40\" />\r\n                        </Nav.Link>\r\n                    }\r\n                    {(this.props.fullView || this.state.MenuVisible) &&\r\n                        <>\r\n                            {/* <Nav.Link className=\"text-center menu-toggle-btn\" onClick={this.props.menuFullview} >\r\n                                <img src={MenuExpand} alt=\"Lims-Logo\" width=\"40\" height=\"40\" /> \r\n                            </Nav.Link> */}\r\n\r\n                            {(this.props.history.history.location.pathname === \"/home\" || this.props.history.history.location.pathname === \"/dashboard\" || this.props.history.history.location.pathname === \"/alert\" || this.props.history.history.location.pathname === \"/apiservice\")&&\r\n                                <SidebarNav className={`d-flex side-nav sidebar sidebar-dark bg-gradient-primary toggled ${this.props.fullView && 'sidebar-fullview'}`} onMouseEnter={() => this.ToggleAction(false)} onMouseLeave={() => this.ToggleAction(true)}\r\n                                >\r\n                                    <Tab.Container\r\n                                        activeKey={this.state.key}\r\n                                        onSelect={(k) => this.setKey(k)}>\r\n                                        {/* Left Menu Icon */}\r\n                                        < Nav className=\"nav flex-column side-nav\" variant=\"pills\" key='MenuIcon' >\r\n\r\n                                            <Nav.Link className=\"text-center menu-toggle-btn menu-toggle-btn1\"  >\r\n                                                <img src={MenuExpand} alt=\"Lims-Logo\" width=\"40\" height=\"40\" />\r\n                                            </Nav.Link>\r\n\r\n\r\n                                            {HomeDesign && HomeDesign.map((menu) => {\r\n                                                return (\r\n                                                    menu.shomename === 'dashboard' ?\r\n                                                        <Nav.Link key={menu.nhomedesigncode} eventKey={`MenuId_${menu.nhomedesigncode}`} onClick={(e) => this.getDetailHome(menu)}  >\r\n                                                            <Image src={require(`../../assets/image/${menu.shomename.toLowerCase()}.svg`)} alt=\"sidebar\" width=\"34\" height=\"34\" />\r\n                                                            <span>{menu.sdisplayname}</span>\r\n                                                        </Nav.Link>\r\n                                                        : menu.shomename === 'home' ?\r\n                                                            <Nav.Link to={'/home'} key={menu.nhomedesigncode} eventKey={`MenuId_${menu.nhomedesigncode}`}\r\n                                                                onClick={(e) => this.getDetailHome(menu)}  >\r\n\r\n                                                                <FontAwesomeIcon icon={faHome} size=\"2x\" />\r\n                                                                <span>{menu.sdisplayname}</span>\r\n                                                            </Nav.Link> :\r\n                                                            menu.shomename === 'apiservice' ?\r\n                                                                <Nav.Link to={'/apiservice'} key={menu.nhomedesigncode} eventKey={`MenuId_${menu.nhomedesigncode}`}\r\n                                                                    onClick={(e) => this.getDetailHome(menu)}  >\r\n\r\n                                                                    <FontAwesomeIcon icon={faServer} size=\"2x\" />\r\n                                                                    <span>{menu.sdisplayname}</span>\r\n                                                                </Nav.Link>\r\n                                                                : <Nav.Link to={'/alert'} key={menu.nhomedesigncode} eventKey={`MenuId_${menu.nhomedesigncode}`}\r\n                                                                    onClick={(e) => this.getDetailHome(menu)}  >\r\n\r\n                                                                    <FontAwesomeIcon icon={faBell} size=\"2x\" />\r\n                                                                    <span>{menu.sdisplayname}</span>\r\n                                                                    {this.props.Login.alert && this.props.Login.alert.length > 0 ?\r\n                                                                        <Badge style={{\r\n                                                                            \"position\": \"relative\",\r\n                                                                            \"bottom\": \"56px\",\r\n                                                                            \"font-size\": \"0.7rem\",\r\n                                                                            \"width\": \"20px\",\r\n                                                                            \"left\": \"30px\"\r\n                                                                        }} pill variant=\"danger\">{this.props.Login.alert && this.props.Login.alert.length}</Badge>\r\n                                                                        : \"\"}\r\n                                                                </Nav.Link>)\r\n\r\n                                            })}\r\n\r\n\r\n                                            <Nav.Link className=\"mt-auto\">\r\n                                                <Image src={PrimaryLogo} alt=\"Primary-Logo\" width=\"45\" height=\"60\" />\r\n                                            </Nav.Link>\r\n\r\n\r\n                                        </Nav>\r\n\r\n                                    </Tab.Container>\r\n                                </SidebarNav>\r\n                            }\r\n\r\n                            {this.props.history.history.location.pathname !== \"/home\" && this.props.history.history.location.pathname !== \"/dashboard\" && this.props.history.history.location.pathname !== \"/alert\" && this.props.history.history.location.pathname !== \"/apiservice\" &&\r\n                                    <SidebarNav className={`d-flex side-nav sidebar sidebar-dark bg-gradient-primary  ${this.state.keyMenu==='MenuId_-2' && 'toggled'}  ${this.props.fullView && 'sidebar-fullview'}`} onMouseEnter={() => this.ToggleAction(false)} onMouseLeave={() => this.ToggleAction(true)}\r\n                                    >\r\n                                        <Tab.Container\r\n                                            activeKey={this.state.keyMenu}\r\n                                            onSelect={(k) => this.setKeyMenu(k)}>\r\n                                            {/* Left Menu Icon */}\r\n                                            < Nav className=\"nav flex-column side-nav\" variant=\"pills\" key='MenuIcon' >\r\n                                                {/* <Nav.Link key={this.state.key} eventKey={this.state.key} onClick={() => this.ToggleAction1(false)}>\r\n                                                    <Image src={PrimaryLogo} alt=\"Primary-Logo\" width=\"45\" height=\"60\" />\r\n                                                </Nav.Link> */}\r\n                                                \r\n                                                \r\n                                                {/* <Nav.Link to={'/home'} onClick={(e) => this.getDetailHome()}  >\r\n                                                    <FontAwesomeIcon icon={faHome} size=\"2x\" />\r\n                                                </Nav.Link> */}\r\n                                              \r\n                                                    <Nav.Link className=\"text-center menu-toggle-btn menu-toggle-btn1\"  >\r\n                                                    <img src={MenuExpand} alt=\"Lims-Logo\" width=\"40\" height=\"40\" /> \r\n                                                    </Nav.Link>\r\n                                                \r\n                       \r\n                                                {menuDesign && menuDesign.map((menu) => {\r\n                                                    return (\r\n                                                        menu.nmenucode !== -2 ?\r\n                                                            <Nav.Link key={menu.nmenucode} eventKey={`MenuId_${menu.nmenucode}`} >\r\n                                                                <Image src={require(`../../assets/image/${menu.smenuname.toLowerCase()}.svg`)} alt=\"sidebar\" width=\"34\" height=\"34\" />\r\n                                                                <span>{menu.sdisplayname}</span>\r\n                                                            </Nav.Link> : <Nav.Link to={'/home'} key={menu.nmenucode} eventKey={`MenuId_${menu.nmenucode}`}  \r\n                                                            onClick={(e) => this.getDetailHome(HomeDesign.filter(x=>x.shomename==='home')[0])}  >\r\n                                                                {/* <Image src={PrimaryLogo} alt=\"Primary-Logo\" width=\"45\" height=\"60\" /> */}\r\n                                                                <FontAwesomeIcon icon={faHome} size=\"2x\" />\r\n                                                               \r\n                                                                <span>{this.props.intl.formatMessage({id: \"IDS_HOME\"})}</span>\r\n                                                            </Nav.Link>)\r\n                                                })}\r\n                                                {/* <Nav.Link key={6} onClick={() => this.onELNLoginClick()}>\r\n                                                    <Image src={LogiLabLogo} alt=\"logilablogo\" width=\"45\" height=\"55\" />\r\n                                                </Nav.Link>\r\n                                                <Nav.Link key={7} onClick={() => this.onSDMSLoginClick()}>\r\n                                                    <Image src={SDMSLogo} alt=\"sdmslogo\" width=\"45\" height=\"55\" />\r\n                                                </Nav.Link> */}\r\n                                                {/* //key={this.state.key} eventKey={this.state.key}  */}\r\n                                                \r\n                                                <Nav.Link className=\"mt-auto\">\r\n                                                    <Image src={PrimaryLogo} alt=\"Primary-Logo\" width=\"45\" height=\"60\" />\r\n                                                </Nav.Link>\r\n                                             \r\n                    \r\n                                            </Nav>\r\n                                            {/* <Button className=\"rounded-circle border-0\" id=\"sidebarToggle\" ></Button> */}\r\n                                            <Tab.Content>\r\n                                                {menuDesign && menuDesign.map(menu => {\r\n                                                    return (\r\n                                                        <Tab.Pane key={menu.nmenucode} eventKey={`MenuId_${menu.nmenucode}`}>\r\n                                                            <Accordion className=\"navbar-nav position-relative\" as=\"ul\" >\r\n                                                                {/* onClick={() => this.pinnedEvent()} */}\r\n                                                                <SidebarBrand className=\"sidebar-brand d-flex align-items-center\">\r\n                                                                    <SidebarBrandTxt>\r\n                                                                        <FormattedMessage id={menu.sdisplayname}\r\n                                                                            defaultMessage={menu.sdisplayname} />\r\n                                                                    </SidebarBrandTxt>\r\n                                                                </SidebarBrand>\r\n                                                                <PerfectScrollbar className=\"sidebar-scroll\">\r\n                                                                    {\r\n                                                                      menu.nmenucode!==-2&&(menu.lstmodule).map(module => {\r\n                    \r\n                                                                            return (\r\n                    \r\n                                                                                <Nav.Item key={module.nmodulecode} as=\"li\">\r\n                                                                                    <ContextAwareToggle eventKey={module.nmodulecode} >\r\n                                                                                        <NavHeader>\r\n                                                                                            {/* {console.log(module.smodulename)}\r\n                                                                                            {console.log(module.sdisplayname)} */}\r\n                                                                                            <FormattedMessage id={module.sdisplayname}\r\n                                                                                                defaultMessage={module.sdisplayname} />\r\n                                                                                        </NavHeader>\r\n                                                                                    </ContextAwareToggle>\r\n                    \r\n                                                                                    <Accordion.Collapse eventKey={module.nmodulecode}>\r\n                                                                                        <CollapseInner className=\"bg-transparent py-2 collapse-inner rounded\">\r\n                                                                                            {\r\n                                                                                               module.lstforms!==null&& (module.lstforms).map(forms => {\r\n                                                                                                    return (\r\n                                                                                                        <NavLink className={`collapse-item ${forms.nformcode === this.props.Login.userInfo.nformcode ? 'active-form' : ''}`} key={forms.nformcode}\r\n                                                                                                            nformcode={forms.nformcode} to={'/' + forms.sclassname}\r\n                                                                                                            onClick={() => this.getDetail(forms.sclassname.toLowerCase(), forms.surl,\r\n                                                                                                                forms.nformcode, forms.sdisplayname, module.nmodulecode, forms, module)}\r\n                                                                                                        >\r\n                                                                                                            <FormattedMessage id={forms.sdisplayname}\r\n                                                                                                                defaultMessage={forms.sdisplayname} />\r\n                                                                                                        </NavLink>\r\n                                                                                                    )\r\n                                                                                                })\r\n                                                                                            }\r\n                                                                                        </CollapseInner>\r\n                                                                                    </Accordion.Collapse>\r\n                                                                                </Nav.Item>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </PerfectScrollbar>\r\n                    \r\n                                                            </Accordion>\r\n                                                        </Tab.Pane>)\r\n                                                })}\r\n                    \r\n                                            </Tab.Content>\r\n                                        </Tab.Container>\r\n                                    </SidebarNav>\r\n                            }\r\n\r\n                        </>\r\n                    }\r\n                    {/* } */}\r\n                </>\r\n\r\n                <Preloader loading={loading} />\r\n\r\n            </>\r\n        );\r\n    }\r\n    ToggleAction = (value) => {\r\n\r\n        this.setState({\r\n            isSidebarActive: value,\r\n            MenuVisible: !value\r\n        })\r\n\r\n        //this.setState({MenuVisible: !this.state.MenuVisible})\r\n    }\r\n    // ToggleAction1 = (value) => {\r\n    // let isSidebarActive = this.state.isSidebarActive;\r\n    // let isPinned  = this.state.isPinned;\r\n    //     this.setState({\r\n    //         isSidebarActive: !isSidebarActive,\r\n    //         isPinned: !isPinned\r\n    //     })\r\n    // }\r\n    pinnedEvent = () => {\r\n        let { isPinned } = this.state;\r\n        this.setState({\r\n            isPinned: !isPinned\r\n        })\r\n    }\r\n    // selectInputOnChange = (ComboVal, fieldName) =>  {\r\n    //     this.setState({ [fieldName] : ComboVal }); \r\n    // }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, { callService, navPage, elnLoginAction, sdmsLoginAction, updateStore, getDashBoardForHome })(injectIntl(Menu));\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}