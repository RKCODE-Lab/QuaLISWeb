{"ast":null,"code":"import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Col,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import FormMultiSelect from'../../components/form-multi-select/form-multi-select.component';var AddSource=/*#__PURE__*/function(_Component){_inherits(AddSource,_Component);var _super=_createSuper(AddSource);function AddSource(){_classCallCheck(this,AddSource);return _super.apply(this,arguments);}_createClass(AddSource,[{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormMultiSelect,{name:\"ncountrycode\",label:this.props.intl.formatMessage({id:\"IDS_SOURCENAME\"}),options:this.props.SourceCombined,optionId:\"ncountrycode\",optionValue:\"scountryname\",value:this.props.selectedSourceData?this.props.selectedSourceData[\"ncountrycode\"]:\"\",isMandatory:true,isClearable:true,disableSearch:false,disabled:false,closeMenuOnSelect:false,alphabeticalSort:true,onChange:function onChange(event){return _this.props.SourceChange(event,\"ncountrycode\");}})));}}]);return AddSource;}(Component);export default injectIntl(AddSource);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/AddSource.jsx"],"names":["React","Component","Col","Row","injectIntl","FormMultiSelect","AddSource","props","intl","formatMessage","id","SourceCombined","selectedSourceData","event","SourceChange"],"mappings":"onBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,gEAA5B,C,GAEMC,CAAAA,S,4OACF,iBAAS,gBACL,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,eAAD,EACI,IAAI,CAAE,cADV,CAEI,KAAK,CAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,gBAAN,CAA9B,CAFX,CAGI,OAAO,CAAE,KAAKH,KAAL,CAAWI,cAHxB,CAII,QAAQ,CAAE,cAJd,CAKI,WAAW,CAAC,cALhB,CAMI,KAAK,CAAE,KAAKJ,KAAL,CAAWK,kBAAX,CAAgC,KAAKL,KAAL,CAAWK,kBAAX,CAA8B,cAA9B,CAAhC,CAAgF,EAN3F,CAOI,WAAW,CAAE,IAPjB,CAQI,WAAW,CAAE,IARjB,CASI,aAAa,CAAE,KATnB,CAUI,QAAQ,CAAE,KAVd,CAWI,iBAAiB,CAAE,KAXvB,CAYI,gBAAgB,CAAE,IAZtB,CAaI,QAAQ,CAAE,kBAACC,KAAD,QAAW,CAAA,KAAI,CAACN,KAAL,CAAWO,YAAX,CAAwBD,KAAxB,CAA+B,cAA/B,CAAX,EAbd,EADJ,CADJ,CADJ,CAsBH,C,uBAxBmBZ,S,EA2BxB,cAAeG,CAAAA,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\n\r\nclass AddSource extends Component {\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col md={12}>\r\n                    <FormMultiSelect\r\n                        name={\"ncountrycode\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_SOURCENAME\" })}\r\n                        options={this.props.SourceCombined}\r\n                        optionId={\"ncountrycode\"}\r\n                        optionValue=\"scountryname\"\r\n                        value={this.props.selectedSourceData ? this.props.selectedSourceData[\"ncountrycode\"] : \"\"}\r\n                        isMandatory={true}\r\n                        isClearable={true}\r\n                        disableSearch={false}\r\n                        disabled={false}\r\n                        closeMenuOnSelect={false}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => this.props.SourceChange(event, \"ncountrycode\")}\r\n                    />\r\n                </Col>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectIntl(AddSource);"]},"metadata":{},"sourceType":"module"}