{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData}from'../components/CommonScript';import{initRequest}from'./LoginAction';import{toast}from'react-toastify';import{intl}from'../components/App';export function sendRequest(obj){return function(dispatch){dispatch(initRequest(true));var newMap=_objectSpread({},obj.inputData);var masterData=obj.masterData;rsapi.post(obj.url,_objectSpread({},newMap)).then(function(response){masterData['consoleData']=response.data;dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},masterData),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getQualisForms(obj){return function(dispatch){dispatch(initRequest(true));var userinfo=obj.userinfo;var selectedRecord=obj.selectedRecord;var masterData=obj.masterData;rsapi.post('/apiservice/getQualisForms',{'userinfo':userinfo,'napiservicecode':selectedRecord.napiservicecode.value}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);masterData['SelectedApi']=selectedRecord['napiservicecode'];masterData['consoleData']=[];selectedRecord['filterNew']=[];dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},masterData),loading:false,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getQualisFormsFields(obj){return function(dispatch){dispatch(initRequest(true));var userinfo=obj.userinfo;var selectedRecord=_objectSpread(_objectSpread({},obj.selectedRecord),{},{'filterNew':[]});var masterData=_objectSpread({},obj.masterData);rsapi.post('/apiservice/getQualisFormFields',{'userinfo':userinfo,'nformcode':selectedRecord.nformcode.value}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{'lstquerybilderColumns':response.data,'SelectedForm':_objectSpread({},selectedRecord['nformcode']),'consoleData':[]});// selectedRecord['filterNew']=[]\ndispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},masterData),loading:false,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/APIServiceAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","initRequest","toast","intl","sendRequest","obj","dispatch","newMap","inputData","masterData","post","url","then","response","data","type","payload","loading","catch","error","getQualisForms","userinfo","selectedRecord","napiservicecode","value","getQualisFormsFields","nformcode"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData } from '../components/CommonScript';\r\nimport { initRequest } from './LoginAction';\r\nimport { toast } from 'react-toastify';\r\nimport { intl } from '../components/App';\r\n\r\n\r\nexport function sendRequest(obj) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const newMap={...obj.inputData}\r\n        const masterData=obj.masterData\r\n        rsapi.post(obj.url, {...newMap} )\r\n            .then(response => {\r\n                masterData['consoleData']=response.data\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData}, loading: false,\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getQualisForms(obj) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n       const userinfo=obj.userinfo\r\n       const selectedRecord=obj.selectedRecord\r\n       let masterData=obj.masterData\r\n        rsapi.post('/apiservice/getQualisForms', {'userinfo':userinfo,'napiservicecode':selectedRecord.napiservicecode.value} )\r\n            .then(response => {\r\n                masterData={...masterData,\r\n                    ...response.data,\r\n                    // lstquerybilderColumns: response.data.lstquerybilderColumns.map((item, index) => {\r\n                    //         return { label: item.scolumndisplayname, value: index, item: { ...item } }})\r\n                }\r\n                masterData['SelectedApi']=selectedRecord['napiservicecode']\r\n                masterData['consoleData']=[]\r\n                selectedRecord['filterNew']=[]\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData},\r\n                        loading: false,\r\n                        selectedRecord\r\n                       \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getQualisFormsFields(obj) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n       const userinfo=obj.userinfo\r\n       let selectedRecord={...obj.selectedRecord,'filterNew':[]}\r\n       let masterData={...obj.masterData}\r\n        rsapi.post('/apiservice/getQualisFormFields', {'userinfo':userinfo,'nformcode':selectedRecord.nformcode.value} )\r\n            .then(response => {\r\n                masterData={...masterData,'lstquerybilderColumns':response.data,\r\n                'SelectedForm':{...selectedRecord['nformcode']},'consoleData':[]}\r\n               // selectedRecord['filterNew']=[]\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData} ,\r\n                        loading: false,\r\n                        selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}