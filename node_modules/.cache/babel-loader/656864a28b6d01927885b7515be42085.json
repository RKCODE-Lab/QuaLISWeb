{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{toast}from'react-toastify';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,FormGroup,FormLabel}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{callService,crudMaster,updateStore,getSyncHistoryDetail,SyncRecords,filterColumnData}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{getControlMap}from'../../components/CommonScript';import ListMaster from'../../components/list-master/list-master.component';import{transactionStatus}from'../../components/Enumeration';import{ReadOnlyText,ContentPanel}from'../../components/App.styles';import DataGrid from'../../components/data-grid/data-grid.component';import{process}from'@progress/kendo-data-query';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var SyncHistory=/*#__PURE__*/function(_React$Component){_inherits(SyncHistory,_React$Component);var _super=_createSuper(SyncHistory);function SyncHistory(props){var _this;_classCallCheck(this,SyncHistory);_this=_super.call(this,props);_this.sidebarExpandCollapse=function(){_this.setState({sidebarview:true});};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.reloadData=function(){_this.searchRef.current.value=\"\";var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"synchistory\",methodUrl:\"SyncHistory\",displayName:_this.props.intl.formatMessage({id:\"IDS_SYNCHISTORY\"}),userInfo:_this.props.Login.userInfo,isClearSearch:_this.props.Login.isClearSearch};_this.props.callService(inputParam);};var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[4]):10};_this.state={masterStatus:\"\",error:\"\",selectedRecord:{},operation:\"\",SelectedSyncBatchHistory:undefined,screenName:undefined,userRoleControlRights:[],controlMap:new Map(),isClearSearch:false,sidebarview:false,data:[],dataResult:[],dataState:dataState};_this.searchRef=React.createRef();_this.userFieldList=[];_this.searchFieldList=[\"stransfertype\",\"sbatchfinalstatus\",\"sbatchtransferstatus\",\"sdestinationsitename\",\"sbatchtransferid\"];_this.extractedColumnList=[{\"idsName\":\"IDS_TRANSFERID\",\"dataField\":\"stransferid\",\"width\":\"200px\"},{\"idsName\":\"IDS_STATUS\",\"dataField\":\"stransferstatus\",\"width\":\"200px\"},{\"idsName\":\"IDS_ITEM\",\"dataField\":\"stablename\",\"width\":\"200px\"},{\"idsName\":\"IDS_TRANSFERTYPE\",\"dataField\":\"stransfertype\",\"width\":\"200px\"},{\"idsName\":\"IDS_DATETIME\",\"dataField\":\"stransactiondatetime\",\"width\":\"200px\"}// { \"idsName\": \"IDS_FAILUREMSG\", \"dataField\": \"serrormsg\", \"width\": \"200px\" }\n];return _this;}_createClass(SyncHistory,[{key:\"render\",value:function render(){var _this2=this;var syncStatusCSS=\"outline-secondary\";var activeIconCSS=\"fa fa-check\";if(this.props.Login.masterData.SelectedSyncBatchHistory&&this.props.Login.masterData.SelectedSyncBatchHistory.nbatchtransferstatus===transactionStatus.SENT){syncStatusCSS=\"outline-success\";}else if(this.props.Login.masterData.SelectedSyncBatchHistory&&this.props.Login.masterData.SelectedSyncBatchHistory.nbatchtransferstatus===transactionStatus.COMPLETED){syncStatusCSS=\"outline-success\";activeIconCSS=\"\";}else if(this.props.Login.masterData.SelectedSyncBatchHistory&&this.props.Login.masterData.SelectedSyncBatchHistory.nbatchtransferstatus===transactionStatus.FAIL_43){activeIconCSS=\"\";}var filterParam={inputListName:\"SyncBatchHistory\",selectedObject:\"SelectedSyncBatchHistory\",primaryKeyField:\"nsyncbatchcode\",fetchUrl:\"synchistory/getSyncHistory\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};var syncId=this.state.controlMap.has(\"StartSync\")&&this.state.controlMap.get(\"StartSync\").ncontrolcode;// console.log(\"data:\", this.props.Login.masterData);\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.state.sidebarview?'4':\"2\")},/*#__PURE__*/React.createElement(\"span\",{onClick:function onClick(){return _this2.setState({sidebarview:!_this2.state.sidebarview});},className:\"sidebar-view-btn\"},!this.state.sidebarview?/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-less-than\"}):/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-greater-than\"})),/*#__PURE__*/React.createElement(ListMaster,{screenName:this.props.intl.formatMessage({id:\"IDS_SYNCHISTORY\"}),masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.SyncBatchHistory,getMasterDetail:function getMasterDetail(syncData){return _this2.props.getSyncHistoryDetail(syncData,_this2.props.Login.userInfo,_this2.props.Login.masterData);},selectedMaster:this.props.Login.masterData.SelectedSyncBatchHistory,primaryKeyField:\"nsyncbatchcode\",mainField:\"sdestinationsitename\"//firstField=\"sbatchtransferid\"\n,firstField:\"sbatchstartdatetime\",secondField:\"sbatchfinalstatus\",filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:syncId,searchRef:this.searchRef,reloadData:this.reloadData,openModal:function openModal(){return _this2.props.SyncRecords(_this2.props.Login.userInfo);},isMultiSelecct:false,hidePaging:false,isClearSearch:this.props.Login.isClearSearch})),/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.state.sidebarview?'8':\"10\")},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.SyncBatchHistory&&this.props.Login.masterData.SyncBatchHistory.length>0&&this.props.Login.masterData.SelectedSyncBatchHistory?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedSyncBatchHistory.sdestinationsitename),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined \".concat(syncStatusCSS,\" btn-sm ml-3\")},activeIconCSS!==\"\"?/*#__PURE__*/React.createElement(\"i\",{class:activeIconCSS}):\"\",this.props.Login.masterData.SelectedSyncBatchHistory.sbatchtransferstatus)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"})))),/*#__PURE__*/React.createElement(Card.Body,{className:\"form-static-wrap\"},this.props.Login.masterData.Synchronization===null?\"\":/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_LASTSYNCDATETIME\",message:\"Last Successful Sync Date & Time\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.Synchronization.slastsyncdatetime))),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SYNCDATETIME\",message:\"Sync Date & Time\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.Synchronization.ssyncdatetime))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_BATCHTRANSFERID\",message:\"Batch Transfer ID\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSyncBatchHistory.sbatchtransferid)))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_BATCHTRANSFERSTATUS\",message:\"Batch Transfer Status\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSyncBatchHistory.sbatchfinalstatus))),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_BATCHFINALSTATUS\",message:\"Batch Final Status\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSyncBatchHistory.sbatchtransferstatus))),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_BATCHSTARTDATETIME\",message:\"Batch Start Date & Time\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSyncBatchHistory.sbatchstartdatetime))),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_BATCHENDDATETIME\",message:\"Batch End Date & Time\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSyncBatchHistory.sbatchenddatetime)))),/*#__PURE__*/React.createElement(Row,null,this.props.Login.masterData.SelectedSyncBatchHistory.serrormsg!==''?/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_FAILUREMSG\",message:\"Failure Message\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSyncBatchHistory.serrormsg))):\"\"),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nsynchistorycode\",data:this.state.data,dataResult:this.state.dataResult//dataResult={this.props.Login.masterData[\"SyncHistory\"]||[]}\n,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo// gridHeight = {'600px'}\n//  methodUrl=\"SyncHistory\"\n//  fetchRecord={props.getUserMultiRoleComboDataService}\n//   editParam={roleEditParam}\n//   deleteRecord={props.deleteRecord} \n//  deleteParam={roleDeleteParam}                                                                                          \n,pageable:true,scrollable:\"auto\",isActionRequired:false,isToolBarRequired:false,selectedId:this.props.Login.selectedId,hideColumnFilter:false,groupable:true}))))):\"\"))))));}},{key:\"componentDidUpdate\",value:// componentDidUpdate(previousProps) {\n//     if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n//         this.setState({ selectedRecord: this.props.Login.selectedRecord });\n//     }\n//     if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n//         const userRoleControlRights = [];\n//         if (this.props.Login.userRoleControlRights) {\n//             this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\n//                 userRoleControlRights.push(item.ncontrolcode))\n//         }\n//         const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\n//         this.setState({ userRoleControlRights, controlMap });\n//     }\n// }     \nfunction componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData[\"SyncHistory\"],dataResult:process(this.props.Login.masterData[\"SyncHistory\"]||[],this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.state.dataState.take};}if(this.state.dataResult.data){if(this.state.dataResult.data.length===1){var skipcount=this.state.dataState.skip>0?this.state.dataState.skip-this.state.dataState.take:this.state.dataState.skip;dataState={skip:skipcount,take:this.state.dataState.take};}}this.setState({data:this.props.Login.masterData[\"SyncHistory\"]||[],selectedRecord:this.props.Login.selectedRecord,dataResult:process(this.props.Login.masterData[\"SyncHistory\"]||[],dataState),dataState:dataState});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;}}]);return SyncHistory;}(React.Component);export default connect(mapStateToProps,{filterColumnData:filterColumnData,callService:callService,crudMaster:crudMaster,updateStore:updateStore,getSyncHistoryDetail:getSyncHistoryDetail,SyncRecords:SyncRecords})(injectIntl(SyncHistory));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/SyncHistory.jsx"],"names":["React","connect","toast","injectIntl","FormattedMessage","Row","Col","Card","FormGroup","FormLabel","FontAwesomeIcon","callService","crudMaster","updateStore","getSyncHistoryDetail","SyncRecords","filterColumnData","DEFAULT_RETURN","getControlMap","ListMaster","transactionStatus","ReadOnlyText","ContentPanel","DataGrid","process","mapStateToProps","state","Login","SyncHistory","props","sidebarExpandCollapse","setState","sidebarview","dataStateChange","event","dataResult","data","dataState","handleDateChange","dateName","dateValue","selectedRecord","reloadData","searchRef","current","value","inputParam","inputData","userInfo","classUrl","methodUrl","displayName","intl","formatMessage","id","isClearSearch","skip","take","settings","parseInt","masterStatus","error","operation","SelectedSyncBatchHistory","undefined","screenName","userRoleControlRights","controlMap","Map","createRef","userFieldList","searchFieldList","extractedColumnList","syncStatusCSS","activeIconCSS","masterData","nbatchtransferstatus","SENT","COMPLETED","FAIL_43","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","userinfo","syncId","has","get","ncontrolcode","searchedData","SyncBatchHistory","syncData","length","sdestinationsitename","sbatchtransferstatus","Synchronization","slastsyncdatetime","ssyncdatetime","sbatchtransferid","sbatchfinalstatus","sbatchstartdatetime","sbatchenddatetime","serrormsg","selectedId","previousProps","nformcode","Object","values","map","item","push","skipcount","updateInfo","typeName","modalName","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, FormGroup, FormLabel} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport {callService, crudMaster, updateStore, getSyncHistoryDetail, SyncRecords, filterColumnData } from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { getControlMap } from '../../components/CommonScript';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport {  ReadOnlyText, ContentPanel } from '../../components/App.styles';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass SyncHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[4]) : 10,\r\n        };\r\n        this.state = {\r\n\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            SelectedSyncBatchHistory: undefined,\r\n            screenName: undefined,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            isClearSearch: false,\r\n            sidebarview: false,\r\n            data: [],\r\n            dataResult: [],\r\n            dataState: dataState            \r\n\r\n        };\r\n      \r\n       \r\n        this.searchRef = React.createRef();      \r\n\r\n        this.userFieldList = [];\r\n        this.searchFieldList = [\"stransfertype\", \"sbatchfinalstatus\",\"sbatchtransferstatus\", \"sdestinationsitename\", \"sbatchtransferid\"];\r\n\r\n        this.extractedColumnList = [\r\n                                { \"idsName\": \"IDS_TRANSFERID\", \"dataField\": \"stransferid\", \"width\": \"200px\" },\r\n                                { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransferstatus\", \"width\": \"200px\" },\r\n                                { \"idsName\": \"IDS_ITEM\", \"dataField\": \"stablename\", \"width\": \"200px\" },\r\n                                { \"idsName\": \"IDS_TRANSFERTYPE\", \"dataField\": \"stransfertype\", \"width\": \"200px\" },\r\n                                { \"idsName\": \"IDS_DATETIME\", \"dataField\": \"stransactiondatetime\", \"width\": \"200px\" },\r\n                               // { \"idsName\": \"IDS_FAILUREMSG\", \"dataField\": \"serrormsg\", \"width\": \"200px\" }\r\n                            ]\r\n    }\r\n\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        let syncStatusCSS = \"outline-secondary\";\r\n        let activeIconCSS = \"fa fa-check\"\r\n        if (this.props.Login.masterData.SelectedSyncBatchHistory && this.props.Login.masterData.SelectedSyncBatchHistory.nbatchtransferstatus === transactionStatus.SENT) {\r\n            syncStatusCSS = \"outline-success\";\r\n        }\r\n        else if (this.props.Login.masterData.SelectedSyncBatchHistory && this.props.Login.masterData.SelectedSyncBatchHistory.nbatchtransferstatus === transactionStatus.COMPLETED) {\r\n            syncStatusCSS = \"outline-success\";\r\n            activeIconCSS = \"\";\r\n        }\r\n        else if (this.props.Login.masterData.SelectedSyncBatchHistory && this.props.Login.masterData.SelectedSyncBatchHistory.nbatchtransferstatus === transactionStatus.FAIL_43) {\r\n            activeIconCSS = \"\";\r\n        }\r\n        const filterParam = {\r\n            inputListName: \"SyncBatchHistory\", selectedObject: \"SelectedSyncBatchHistory\", primaryKeyField: \"nsyncbatchcode\",\r\n            fetchUrl: \"synchistory/getSyncHistory\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n        };\r\n\r\n        const syncId = this.state.controlMap.has(\"StartSync\") && this.state.controlMap.get(\"StartSync\").ncontrolcode;\r\n       \r\n       // console.log(\"data:\", this.props.Login.masterData);\r\n        return (<>\r\n            {/* Start of get display*/}\r\n            <div className=\"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\">\r\n                <Row noGutters>\r\n                        <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n                            <span onClick= {()=>this.setState({sidebarview:!this.state.sidebarview})} className='sidebar-view-btn'>\r\n                                {!this.state.sidebarview ?\r\n                                    <i class=\"fa fa-less-than\"></i> :\r\n                                    <i class=\"fa fa-greater-than\"></i> \r\n                                }\r\n                            </span>\r\n                        {/* <Row noGutters>\r\n                            <Col md={12}> */}\r\n                        {/* <div className=\"list-fixed-wrap\"> */}\r\n                        <ListMaster\r\n                            screenName={this.props.intl.formatMessage({ id: \"IDS_SYNCHISTORY\" })}\r\n                            masterData={this.props.Login.masterData}\r\n                            userInfo={this.props.Login.userInfo}\r\n                            masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.SyncBatchHistory}\r\n                            getMasterDetail={(syncData) => this.props.getSyncHistoryDetail(syncData, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                            selectedMaster={this.props.Login.masterData.SelectedSyncBatchHistory}\r\n                            primaryKeyField=\"nsyncbatchcode\"\r\n                            mainField=\"sdestinationsitename\"\r\n                            //firstField=\"sbatchtransferid\"\r\n                            firstField='sbatchstartdatetime'\r\n                            secondField=\"sbatchfinalstatus\"\r\n                            filterColumnData={this.props.filterColumnData}\r\n                            filterParam={filterParam}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            addId={syncId}\r\n                            searchRef={this.searchRef}\r\n                            reloadData={this.reloadData}\r\n                            openModal={() => this.props.SyncRecords(this.props.Login.userInfo)}\r\n                            isMultiSelecct={false}\r\n                            hidePaging={false}\r\n                            isClearSearch={this.props.Login.isClearSearch}\r\n                        />\r\n                        {/* </div>\r\n                        </Col></Row> */}\r\n                    </Col>\r\n                        <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n                        {/* <Row>\r\n                            <Col md={12}> */}\r\n                        <ContentPanel className=\"panel-main-content\">\r\n                            <Card className=\"border-0\">\r\n                                {this.props.Login.masterData.SyncBatchHistory && this.props.Login.masterData.SyncBatchHistory.length > 0 && this.props.Login.masterData.SelectedSyncBatchHistory ?\r\n                                    <>\r\n                                        <Card.Header>\r\n                                            {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                                {this.props.Login.masterData.SelectedSyncBatchHistory.sdestinationsitename}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                        <span className={`btn btn-outlined ${syncStatusCSS} btn-sm ml-3`}>\r\n                                                            {activeIconCSS !== \"\" ? <i class={activeIconCSS}></i> : \"\"}\r\n                                                            {this.props.Login.masterData.SelectedSyncBatchHistory.sbatchtransferstatus}\r\n                                                            {/* <FormattedMessage id= {this.props.Login.masterData.SelectedSyncBatchHistory.sactivestatus}/> */}\r\n\r\n                                                        </span>\r\n                                                    </h2>\r\n                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                    <div className=\"d-inline\">\r\n                                                       \r\n\r\n                                                   \r\n                                                    </div>\r\n                                                    {/* </Tooltip> */}\r\n                                                </div>\r\n\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">   \r\n                                            {this.props.Login.masterData.Synchronization === null? \"\":\r\n                                                <Row>\r\n                                                     <Col md={3}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_LASTSYNCDATETIME\" message=\"Last Successful Sync Date & Time\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.Synchronization.slastsyncdatetime}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={3}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_SYNCDATETIME\" message=\"Sync Date & Time\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.Synchronization.ssyncdatetime}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={6}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_BATCHTRANSFERID\" message=\"Batch Transfer ID\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedSyncBatchHistory.sbatchtransferid}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                               \r\n                                                </Row>    \r\n                                            } \r\n                                                                            \r\n                                            <Row>\r\n                                                <Col md={3}>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id=\"IDS_BATCHTRANSFERSTATUS\" message=\"Batch Transfer Status\" /></FormLabel>\r\n                                                        <ReadOnlyText>\r\n                                                            {this.props.Login.masterData.SelectedSyncBatchHistory.sbatchfinalstatus}\r\n                                                        </ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={3}>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id=\"IDS_BATCHFINALSTATUS\" message=\"Batch Final Status\" /></FormLabel>\r\n                                                        <ReadOnlyText>\r\n                                                            {this.props.Login.masterData.SelectedSyncBatchHistory.sbatchtransferstatus}\r\n                                                        </ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={3}>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id=\"IDS_BATCHSTARTDATETIME\" message=\"Batch Start Date & Time\" /></FormLabel>\r\n                                                        <ReadOnlyText>\r\n                                                            {this.props.Login.masterData.SelectedSyncBatchHistory.sbatchstartdatetime}\r\n                                                        </ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={3}>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id=\"IDS_BATCHENDDATETIME\" message=\"Batch End Date & Time\" /></FormLabel>\r\n                                                        <ReadOnlyText>\r\n                                                            {this.props.Login.masterData.SelectedSyncBatchHistory.sbatchenddatetime}\r\n                                                        </ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                            {this.props.Login.masterData.SelectedSyncBatchHistory.serrormsg !== '' ?\r\n                                            <Col md={12}>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id=\"IDS_FAILUREMSG\" message=\"Failure Message\" /></FormLabel>\r\n                                                        <ReadOnlyText>\r\n                                                            {this.props.Login.masterData.SelectedSyncBatchHistory.serrormsg}\r\n                                                        </ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            :\"\"}\r\n                                            </Row>\r\n                                          \r\n                                            <Row noGutters={true}>\r\n                                                <Col md={12}>\r\n                                                    <DataGrid\r\n                                                        primaryKeyField={\"nsynchistorycode\"}\r\n                                                        data={this.state.data}\r\n                                                        dataResult={this.state.dataResult}\r\n                                                        //dataResult={this.props.Login.masterData[\"SyncHistory\"]||[]}\r\n                                                        dataState={this.state.dataState}\r\n                                                        dataStateChange={this.dataStateChange}\r\n                                                        extractedColumnList={this.extractedColumnList}\r\n                                                        controlMap={this.state.controlMap}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        inputParam={this.props.Login.inputParam}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                       // gridHeight = {'600px'}\r\n                                                      //  methodUrl=\"SyncHistory\"\r\n                                                      //  fetchRecord={props.getUserMultiRoleComboDataService}\r\n                                                     //   editParam={roleEditParam}\r\n                                                     //   deleteRecord={props.deleteRecord} \r\n                                                      //  deleteParam={roleDeleteParam}                                                                                          \r\n                                                        pageable={true}\r\n                                                        scrollable={\"auto\"}\r\n                                                        isActionRequired={false}\r\n                                                        isToolBarRequired={false}\r\n                                                        selectedId={this.props.Login.selectedId}\r\n                                                        hideColumnFilter={false}\r\n                                                        groupable={true}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </Card.Body>\r\n                                    </>\r\n                                    : \"\"\r\n                                }\r\n                            </Card>\r\n                        </ContentPanel>\r\n                    </Col></Row>\r\n                {/* </Col>\r\n                </Row> */}\r\n            </div>\r\n\r\n            {/* End of get display*/}          \r\n        </>\r\n        );\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n      \r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    // componentDidUpdate(previousProps) {\r\n    //     if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n    //         this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n    //     }\r\n    //     if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n    //         const userRoleControlRights = [];\r\n    //         if (this.props.Login.userRoleControlRights) {\r\n    //             this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n    //                 userRoleControlRights.push(item.ncontrolcode))\r\n    //         }\r\n    //         const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n    //         this.setState({ userRoleControlRights, controlMap });\r\n    //     }\r\n    // }     \r\n\r\n    componentDidUpdate(previousProps) {        \r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData[\"SyncHistory\"],\r\n                    dataResult: process(this.props.Login.masterData[\"SyncHistory\"]||[], this.state.dataState),\r\n                });\r\n            }\r\n            else {        \r\n                let {dataState} = this.state;\r\n                if(this.props.Login.dataState === undefined){\r\n                    dataState = {skip:0, take:this.state.dataState.take}\r\n                }\r\n                 if(this.state.dataResult.data){\r\n                     if(this.state.dataResult.data.length ===1){\r\n                        let skipcount = this.state.dataState.skip > 0 ?(this.state.dataState.skip-this.state.dataState.take):\r\n                        this.state.dataState.skip\r\n                         dataState={skip:skipcount,take:this.state.dataState.take}\r\n                     }\r\n                 }\r\n                this.setState({\r\n                    data: this.props.Login.masterData[\"SyncHistory\"] ||[], selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData[\"SyncHistory\"] || [], dataState),\r\n                    dataState\r\n                });\r\n            }  \r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"synchistory\",\r\n            methodUrl: \"SyncHistory\",\r\n            displayName: this.props.intl.formatMessage({id:\"IDS_SYNCHISTORY\"}),\r\n            userInfo: this.props.Login.userInfo,\r\n            isClearSearch: this.props.Login.isClearSearch\r\n\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {filterColumnData,\r\n    callService, crudMaster, updateStore, getSyncHistoryDetail, SyncRecords\r\n})(injectIntl(SyncHistory));\r\n\r\n"]},"metadata":{},"sourceType":"module"}