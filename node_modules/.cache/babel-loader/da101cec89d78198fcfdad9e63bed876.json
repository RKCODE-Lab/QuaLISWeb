{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\goodsin\\\\AddGoodsIn.js\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst AddGoodsIn = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nmanufcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_MANUFACTURER\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.manufacturerList // optionId=\"nmanufcode\"\n    // optionValue=\"smanufname\"\n    ,\n    value: props.selectedRecord[\"nmanufcode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    onChange: event => props.onComboChange(event, 'nmanufcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nrecipientcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_RECIPIENT\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.recipientList // optionId=\"nusercode\"\n    //optionValue=\"susername\"\n    ,\n    value: props.selectedRecord[\"nrecipientcode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true // alphabeticalSort={true}\n    ,\n    onChange: event => props.onComboChange(event, 'nrecipientcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sdeptname\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DEPARTMENT\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEPARTMENT\"\n    }),\n    value: props.selectedRecord[\"sdeptname\"],\n    isMandatory: true,\n    required: false,\n    maxLength: 50,\n    readOnly: true,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nnoofpackages\",\n    label: props.intl.formatMessage({\n      id: \"IDS_NOOFPACKAGES\"\n    }) // placeholder={ props.intl.formatMessage({ id:\"IDS_NOOFPACKAGES\"})}\n    ,\n    value: props.selectedRecord[\"nnoofpackages\"],\n    type: \"number\",\n    strict: true,\n    maxLength: 9,\n    noStyle: true,\n    onChange: event => props.onNumericInputOnChange(event, \"nnoofpackages\"),\n    precision: 0,\n    min: 0,\n    className: \"form-control\",\n    isMandatory: true,\n    required: true,\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ncouriercode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_COURIERCARRIER\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.courierList // optionId=\"ncouriercode\"\n    // optionValue=\"scouriername\"\n    ,\n    value: props.selectedRecord[\"ncouriercode\"] || \"\",\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true,\n    isClearable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'ncouriercode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sconsignmentno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_CONSIGNMENTNO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_CONSIGNMENTNO\"\n    }),\n    value: props.selectedRecord[\"sconsignmentno\"] || \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 31\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dgoodsindate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_GOODSINDATE\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"dgoodsindate\"],\n    dateFormat: props.userInfo.ssitedatetime,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: true,\n    isClearable: false,\n    isMandatory: true,\n    required: true,\n    maxDate: props.currentTime,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dgoodsindate\", date),\n    value: props.selectedRecord[\"dgoodsindate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzgoodsindate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.timeZoneList // optionId=\"ntimezonecode\"\n    // optionValue=\"stimezoneid\"\n    ,\n    value: props.selectedRecord[\"ntzgoodsindate\"],\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isClearable: false,\n    isDisabled: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    onChange: event => props.onComboChange(event, 'ntzgoodsindate'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    name: \"noutofhours\",\n    type: \"switch\",\n    label: props.intl.formatMessage({\n      id: \"IDS_OUTOFHOURS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_OUTOFHOURS\"\n    }),\n    defaultValue: props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true : false,\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true : false,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"ssecurityrefno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_SECURITYREFNO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SECURITYREFNO\"\n    }),\n    value: props.selectedRecord[\"ssecurityrefno\"] || \"\",\n    isMandatory: props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true : false,\n    required: props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true : false,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"scomments\",\n    label: props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }),\n    value: props.selectedRecord[\"scomments\"] || \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 31\n    }\n  })))));\n};\n\nexport default injectIntl(AddGoodsIn);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/goodsin/AddGoodsIn.js"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","DateTimePicker","FormNumericInput","transactionStatus","AddGoodsIn","props","intl","formatMessage","id","manufacturerList","selectedRecord","event","onComboChange","recipientList","onInputOnChange","onNumericInputOnChange","courierList","userInfo","ssitedatetime","currentTime","date","handleDateChange","timeZoneList","YES"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {injectIntl } from 'react-intl';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport {transactionStatus} from '../../components/Enumeration';\r\n\r\nconst AddGoodsIn = (props) =>{    \r\n    \r\n       return (\r\n           <Row>                                \r\n                <Col md={6}>\r\n                    <Row>\r\n                         <Col md={12}>\r\n                         <FormSelectSearch\r\n                                   name={\"nmanufcode\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_MANUFACTURER\"})}                                \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                              \r\n                                   options={ props.manufacturerList}\r\n                                   // optionId=\"nmanufcode\"\r\n                                   // optionValue=\"smanufname\"\r\n                                   value = { props.selectedRecord[\"nmanufcode\"] || \"\"}\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   //alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'nmanufcode')}  \r\n                              />\r\n                   \r\n                         <FormSelectSearch\r\n                                   name={\"nrecipientcode\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_RECIPIENT\"})}                                \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                \r\n                                   options={ props.recipientList}\r\n                                   // optionId=\"nusercode\"\r\n                                   //optionValue=\"susername\"\r\n                                   value = { props.selectedRecord[\"nrecipientcode\"] || \"\"}\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                  // alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'nrecipientcode')}  \r\n                              />\r\n                    \r\n                         <FormInput\r\n                              name={\"sdeptname\"}\r\n                              type=\"text\"\r\n                              label={ props.intl.formatMessage({ id:\"IDS_DEPARTMENT\"})}                          \r\n                              placeholder={ props.intl.formatMessage({ id:\"IDS_DEPARTMENT\"})}\r\n                              value ={ props.selectedRecord[\"sdeptname\"]}\r\n                              isMandatory={true}\r\n                              required={false}\r\n                              maxLength={50}\r\n                              readOnly={true}\r\n                              onChange={(event)=> props.onInputOnChange(event)}\r\n                         />\r\n                                             \r\n                         <FormNumericInput\r\n                                   name={\"nnoofpackages\"}\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_NOOFPACKAGES\"})}                          \r\n                                   // placeholder={ props.intl.formatMessage({ id:\"IDS_NOOFPACKAGES\"})}\r\n                                   value ={ props.selectedRecord[\"nnoofpackages\"]}\r\n                                   type=\"number\"                               \r\n                                   strict={true}\r\n                                   maxLength={9}\r\n                                   noStyle={true}\r\n                                   onChange={(event) => props.onNumericInputOnChange(event, \"nnoofpackages\")}\r\n                                   precision={0}\r\n                                   min={0}\r\n                                   className=\"form-control\"\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   errors=\"Please provide a valid number.\"\r\n                              />\r\n                 \r\n                              <FormSelectSearch\r\n                                   name={\"ncouriercode\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_COURIERCARRIER\"})}                                \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                            \r\n                                   options={ props.courierList}\r\n                                   // optionId=\"ncouriercode\"\r\n                                   // optionValue=\"scouriername\"\r\n                                   value = { props.selectedRecord[\"ncouriercode\"]||\"\" }\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   isClearable={true}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ncouriercode')}                               \r\n                              />\r\n                       \r\n                              <FormInput\r\n                                   name={\"sconsignmentno\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_CONSIGNMENTNO\"})}                  \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_CONSIGNMENTNO\"})}\r\n                                   value ={ props.selectedRecord[\"sconsignmentno\"] || \"\"}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                                   />\r\n                         </Col>                   \r\n                    </Row>\r\n               </Col>\r\n               <Col md={6}>\r\n                    <Row>\r\n                         <Col md={12}>   \r\n                              <DateTimePicker\r\n                                        name={\"dgoodsindate\"} \r\n                                        label={ props.intl.formatMessage({ id:\"IDS_GOODSINDATE\"})}                     \r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={props.selectedRecord[\"dgoodsindate\"]}\r\n                                        dateFormat={props.userInfo.ssitedatetime}\r\n                                        timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\r\n                                        showTimeInput={true}\r\n                                        isClearable={false}\r\n                                        isMandatory={true}                       \r\n                                        required={true}\r\n                                        maxDate={props.currentTime}\r\n                                        maxTime={props.currentTime}\r\n                                        onChange={date => props.handleDateChange(\"dgoodsindate\", date)}\r\n                                        value={props.selectedRecord[\"dgoodsindate\"]}\r\n                              />\r\n                        \r\n                              <FormSelectSearch\r\n                                   name={\"ntzgoodsindate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                               \r\n                                   options={ props.timeZoneList}\r\n                                   // optionId=\"ntimezonecode\"\r\n                                   // optionValue=\"stimezoneid\"\r\n                                   value = { props.selectedRecord[\"ntzgoodsindate\"] }\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   //alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzgoodsindate')}                               \r\n                              />\r\n                        \r\n                              <CustomSwitch\r\n                                   name={\"noutofhours\"}\r\n                                   type=\"switch\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_OUTOFHOURS\"})}\r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_OUTOFHOURS\"})}                            \r\n                                   defaultValue ={ props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true :false }  \r\n                                   isMandatory={false}                       \r\n                                   required={false}\r\n                                   checked={ props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true :false}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                                   />\r\n                         \r\n                              <FormInput\r\n                                   name={\"ssecurityrefno\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_SECURITYREFNO\"})}                  \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_SECURITYREFNO\"})}\r\n                                   value ={ props.selectedRecord[\"ssecurityrefno\"] || \"\"}\r\n                                   isMandatory={props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true :false}\r\n                                   required={props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true :false}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                                   />\r\n                         \r\n                              <FormTextarea\r\n                                   name={\"scomments\"}\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_COMMENTS\"})}                    \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_COMMENTS\"})}\r\n                                   value ={ props.selectedRecord[\"scomments\"] || \"\"}\r\n                                   rows=\"2\"\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={255}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                                   />\r\n                         </Col>         \r\n                   </Row>\r\n               </Col>              \r\n          </Row>   \r\n       )\r\n   }\r\n   export default injectIntl(AddGoodsIn);\r\n"]},"metadata":{},"sourceType":"module"}