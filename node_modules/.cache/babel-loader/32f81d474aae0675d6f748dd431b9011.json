{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\header\\\\header.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Navbar, Nav, Dropdown, Image, Media, NavLink, NavDropdown, NavItem, Badge } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { submitUserTheme, getChangeUserRole, submitChangeRole, getPassWordPolicy, updateStore, changepassword, changeOwner, logOutAuditAction, getListAlert, getDigitalSign, saveDigitalSign, crudMaster, validateEsignforDigitalSignature, getcolorMaster } from '../../actions';\nimport rsapi from '../../rsapi';\nimport { AtHeader, NavPrimaryHeader, ProfileImage, DashboardIcon } from '../header/header.styles';\nimport { faSearch, faSignature, faBell } from '@fortawesome/free-solid-svg-icons';\nimport '../../assets/styles/login.css';\nimport { ReactComponent as SearchIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/icon-search.svg\";\nimport { ReactComponent as BellIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/icon-bell.svg\";\nimport { ReactComponent as DashboardHeader } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/dashboard-header.svg\";\nimport SlideOutModal from '../slide-out-modal/SlideOutModal';\nimport ChangePassWord from '../../pages/Login/ChangePassWord';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { changePasswordValidation, fnPassMessage } from '../../pages/Login/LoginCommonFunction';\nimport { LOGINTYPE, transactionStatus } from '../Enumeration';\nimport PortalModal from '../../PortalModal';\nimport SliderPage from '../slider-page/slider-page-component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faKey, faPowerOff, faUserCog, faUsersCog, faPalette } from '@fortawesome/free-solid-svg-icons';\nimport { createImageFromInitials } from './headerutils'; // import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport { getSelectedAlert } from '../../actions/AlertViewAction';\nimport '../../pages/dashboardtypes/Alert.css';\nimport AddDigitalSignature from '../../pages/Login/AddDigitalSignature';\nimport { Lims_JSON_stringify, create_UUID, onSaveMandatoryValidation } from '../../components/CommonScript';\nimport Esign from '../../pages/audittrail/Esign';\nimport Button from 'react-bootstrap/Button';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openAlert = () => {\n      this.setState({\n        showDashboard: !this.state.showDashboard,\n        nflag: 2\n      });\n    };\n\n    this.openQuickSetting = () => {\n      this.setState({\n        quickSettingOpen: !this.state.quickSettingOpen\n      });\n    };\n\n    this.openDashBoard = () => {\n      this.setState({\n        showDashboard: !this.state.showDashboard,\n        nflag: 1\n      });\n    };\n\n    this.submitUserTheme = item => {\n      this.props.submitUserTheme(item, this.props.Login.userInfo);\n    };\n\n    this.submitChangeOwner = (item, role) => {\n      this.props.onChangeOwer(item, role); // const parameterInfo = {\n      //   typeName: DEFAULT_RETURN,\n      //   data: { menuDesign: [], navigation: \"\" }\n      // }\n      // this.props.updateStore(parameterInfo);\n      // const inputData = {\n      //   nuserrolecode: item.nuserrolecode,\n      //   suserrolename: item.suserrolename,\n      //   nusercode: item.nusercode,\n      //   sdeputyid: item.sdeputyid,\n      //   userinfo: this.props.Login.userInfo\n      // }\n      // this.props.changeOwner(inputData);\n    };\n\n    this.onChangePassword = () => {\n      const createPwdRecord = this.state.createPwdRecord;\n      const returnMsg = changePasswordValidation(createPwdRecord, this.props.Login.passwordPolicy, this.props.Login.userInfo.sloginid);\n\n      if (returnMsg === 0) {\n        const inputParam = {\n          spassword: createPwdRecord.snewpassword.trim(),\n          sOldPassword: createPwdRecord.soldpassword.trim(),\n          nusersitecode: this.props.Login.userInfo.nusersitecode,\n          isPasswordExpiry: false,\n          userInfo: this.props.Login.userInfo\n        };\n        this.props.changepassword(inputParam);\n      } else {\n        toast.info(returnMsg);\n      }\n    };\n\n    this.onSaveDigitalSign = (saveType, formRef) => {\n      let digiSignData = [];\n      digiSignData[\"userinfo\"] = this.props.Login.userInfo;\n      const digiSignImageFile = this.state.selectedDigiSign.sdigisignname;\n      let isDigiSignFileEdited = transactionStatus.NO;\n      const formData = new FormData();\n      let digiSignImageCount = 0;\n      let digisignfile = {};\n      digiSignData[\"digiSign\"] = {\n        \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n      };\n      digiSignData[\"digiSign\"][\"sdigisignname\"] = this.state.selectedDigiSign[\"sdigisignname\"];\n\n      if (digiSignImageFile && Array.isArray(digiSignImageFile) && digiSignImageFile.length > 0) {\n        const splittedFileName = digiSignImageFile[0].name.split('.');\n        const fileExtension = digiSignImageFile[0].name.split('.')[splittedFileName.length - 1];\n        const uniquefilename = this.state.selectedDigiSign.sdigisignname === \"\" ? this.state.selectedDigiSign.sdigisignname : create_UUID() + '.' + fileExtension;\n        digisignfile[\"sdigisignname\"] = Lims_JSON_stringify(digiSignImageFile[0].name, false);\n        digisignfile[\"sdigisignftp\"] = uniquefilename;\n        digisignfile[\"ssecuritykey\"] = this.state.selectedDigiSign[\"ssecuritykey\"];\n        formData.append(\"uploadedFile\" + digiSignImageCount, digiSignImageFile[0]);\n        formData.append(\"uniquefilename\" + digiSignImageCount, uniquefilename);\n        digiSignImageCount++;\n        isDigiSignFileEdited = transactionStatus.YES;\n        digiSignData[\"digiSign\"][\"sdigisignname\"] = \"\";\n      } else {\n        if (digiSignImageFile === undefined || digiSignImageFile === \"\" || digiSignImageFile.hasOwnProperty(\"length\") && digiSignImageFile.length === 0) {\n          if (digiSignData[\"digiSign\"][\"sdigisignftp\"] !== null && digiSignData[\"digiSign\"][\"sdigisignftp\"] !== \"\") {\n            isDigiSignFileEdited = transactionStatus.YES;\n          }\n\n          digisignfile[\"sdigisignname\"] = null;\n          digisignfile[\"sdigisignftp\"] = null;\n          digiSignData[\"digiSign\"][\"sdigisignname\"] = \"\";\n        } else {\n          digisignfile[\"sdigisignname\"] = Lims_JSON_stringify(this.state.selectedDigiSign.sdigisignname, false);\n          digisignfile[\"sdigisignftp\"] = this.state.selectedDigiSign.sdigisignftp;\n          digisignfile[\"ssecuritykey\"] = this.state.selectedDigiSign.ssecuritykey;\n        }\n      }\n\n      formData.append(\"isDigiSignFileEdited\", isDigiSignFileEdited);\n      formData.append(\"DigiSignImage_filecount\", digiSignImageCount);\n      formData.append(\"filecount\", digiSignImageCount);\n      formData.append(\"controlcodelist\", JSON.stringify(this.props.Login.uploadControlList));\n      formData.append(\"digisignfile\", JSON.stringify(digisignfile));\n      formData.append(\"digiSign\", JSON.stringify(digiSignData[\"digiSign\"])); // }\n\n      const inputParam = {\n        operation: this.props.Login.operation,\n        formData: formData,\n        classUrl: \"digitalsignature\",\n        methodUrl: \"DigitalSignature\",\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n          }\n        },\n        isFileupload: true,\n        saveType,\n        formRef\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: true,\n          screenData: {\n            inputParam\n          },\n          saveType\n        }\n      };\n      this.props.updateStore(updateInfo); // this.props.saveDigitalSign(inputParam);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedDigiSign[\"esigncomments\"],\n            nreasoncode: this.state.selectedDigiSign[\"esignreason\"] && this.state.selectedDigiSign[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedDigiSign[\"esignreason\"] && this.state.selectedDigiSign[\"esignreason\"].label\n          },\n          password: this.state.selectedDigiSign[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignforDigitalSignature(inputParam);\n    };\n\n    this.closeModal = () => {\n      let selectedDigiSign = this.props.Login.selectedDigiSign;\n      let loadEsign = this.props.Login.loadEsign;\n      let openCPModal = this.props.Login.openCPModal;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n        selectedDigiSign['esignpassword'] = \"\";\n        selectedDigiSign['esigncomments'] = \"\";\n        selectedDigiSign['esignreason'] = \"\";\n      } else {\n        openCPModal = false;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openCPModal,\n          loadEsign,\n          selectedDigiSign\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.submitChangeRole = roleItem => {\n      this.props.onChangeRol(roleItem); // const parameterInfo = {\n      //   typeName: DEFAULT_RETURN,\n      //   data: { menuDesign: [], navigation: \"\" }\n      // }\n      // this.props.updateStore(parameterInfo);\n      // const userInfo = this.props.Login.userInfo;\n      // const inputParam = {\n      //   nusermultisitecode: userInfo.nusersitecode,\n      //   slanguagetypecode: userInfo.slanguagetypecode,\n      //   nusermultirolecode: roleItem.nusermultirolecode,\n      //   nuserrolecode: roleItem.nuserrolecode,\n      //   nmastersitecode: userInfo.nmastersitecode,\n      //   nlogintypecode: userInfo.nlogintypecode,\n      //   userinfo: userInfo\n      // }\n      // this.props.submitChangeRole(inputParam);\n    };\n\n    this.childDataChange = (selectedRecord, mandatoryFieldCheck) => {\n      let isInitialRender = false;\n      this.setState({\n        selectedDigiSign: { ...selectedRecord\n        },\n        isInitialRender\n      });\n    };\n\n    this.onDigitalSignatureSaveClick = () => {\n      let mandatoryField = [];\n      this.state.selectedDigiSign && this.state.selectedDigiSign[\"sdigisignname\"] && (this.state.selectedDigiSign[\"sdigisignname\"].hasOwnProperty(\"length\") ? this.state.selectedDigiSign[\"sdigisignname\"].length > 0 : this.state.selectedDigiSign[\"sdigisignname\"] !== \"\") ? mandatoryField = [{\n        \"idsName\": \"IDS_SECURITYKEY\",\n        \"dataField\": \"ssecuritykey\",\n        \"mandatory\": false\n      }] : mandatoryField = [];\n      onSaveMandatoryValidation(this.state.selectedDigiSign, mandatoryField, this.onSaveDigitalSign);\n    };\n\n    this.state = {\n      show: false,\n      createPwdRecord: {},\n      createSecurityKey: {},\n      alert: [],\n      sliderOpen: false,\n      nflag: 2,\n      quickSettingOpen: false.valueOf,\n      showDashboard: false\n    };\n  }\n\n  onChangeRole() {\n    rsapi.post(\"/login/getchangerole\", {\n      \"userInfo\": this.props.Login.userInfo\n    }).then(response => {\n      const responseData = response.data;\n      this.setState({\n        show: true,\n        UserMultiRole: responseData.UserMultiRole,\n        nusermultirolecode: {\n          label: responseData.UserMultiRole[0].suserrolename,\n          value: responseData.UserMultiRole[0].nusermultirolecode,\n          item: responseData.UserMultiRole[0]\n        }\n      });\n    }).catch(error => {\n      if (error.status === 205) {\n        toast.warn(error.message);\n      } else {\n        toast.error(error.message);\n      }\n    });\n  }\n\n  onLogout() {\n    const inputData = {\n      userinfo: this.props.Login.userInfo,\n      scomments: this.props.intl.formatMessage({\n        id: \"IDS_LOGOUT\"\n      }),\n      sauditaction: \"IDS_LOGOUT\"\n    };\n    this.props.logOutAuditAction(inputData, this.props.Login.languageList);\n  }\n\n  render() {\n    const {\n      susername,\n      suserrolename,\n      nuserrole,\n      nlogintypecode,\n      ssitename,\n      nusercode\n    } = this.props.Login.userInfo;\n    const {\n      deputyUser,\n      userMultiRole,\n      isDeputyLogin,\n      userImagePath,\n      settings,\n      profileColor,\n      colortheme,\n      selectedUserLimsTheme\n    } = this.props.Login;\n    const currentTheme = this.props.Login.selectedUserLimsTheme && this.props.Login.selectedUserLimsTheme.sthemecolorname;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AtHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      className: \"p-0\",\n      bg: \"light\",\n      fixed: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavPrimaryHeader, {\n      className: \"at-nav-brand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, this.props.Login && this.props.Login.displayName ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.Login.displayName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }) : \"\")), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n      \"aria-controls\": \"basic-navbar-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      className: \"d-flex align-items-center justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, this.props.showSearch ? /*#__PURE__*/React.createElement(DashboardIcon, {\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, this.props.searchBar)) : \"\", /*#__PURE__*/React.createElement(Nav.Item, {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DashboardIcon, {\n      className: \"position-relative topbar-search  ml-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, this.props.showSearch ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-icon search-icon-header position-absolute search-close-icon\",\n      onClick: this.props.layOutGetHomeCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-times\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 148\n      }\n    })) : /*#__PURE__*/React.createElement(SearchIcon, {\n      className: \"search-icon search-icon-header position-absolute zoom\",\n      onClick: this.props.toggleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }))), this.props.showAlertDashBoard ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DashboardIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DASHBOARD\"\n      }),\n      onClick: this.openDashBoard,\n      className: \"zoom dashboard-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DashboardHeader, {\n      width: \"26px\",\n      height: \"26px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(DashboardIcon, {\n      className: \"position-relative  mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fa_stack fa-2x the-wrapper\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ALERTS\"\n      }),\n      onClick: this.openAlert,\n      class: \"zoom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(BellIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon icon_Badge position-absolute\",\n      style: {\n        \"width\": this.state.alert && this.state.alert.length > 9 ? \"52%\" : \"46%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, this.state.alert && this.state.alert.length > 0 ? /*#__PURE__*/React.createElement(Badge, {\n      pill: true,\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 23\n      }\n    }, this.state.alert && this.state.alert.length) : \"\"))) : \"\"), /*#__PURE__*/React.createElement(NavDropdown, {\n      className: \"no-arrow\",\n      alignRight: true,\n      title: /*#__PURE__*/React.createElement(Media, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 69\n        }\n      }, console.log(currentTheme), /*#__PURE__*/React.createElement(ProfileImage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 19\n        }\n      }, settings && settings[5] && userImagePath && userImagePath !== \"\" ? /*#__PURE__*/React.createElement(Image, {\n        src: settings[5] + userImagePath,\n        alt: \"avatar\",\n        className: \"rounded-circle mr-2\",\n        width: \"36\",\n        height: \"36\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(Image, {\n        className: \"rounded-circle mr-2\",\n        src: createImageFromInitials(32, susername ? susername.charAt(0).toUpperCase() : \"\", currentTheme === \"null\" ? profileColor : currentTheme),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 98\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"profile-img-block pt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ProfileImage, {\n      className: \"mx-3 mb-3 pt-2 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }\n    }, settings && settings[5] && userImagePath && userImagePath !== \"\" ? /*#__PURE__*/React.createElement(Image, {\n      src: settings[5] + userImagePath,\n      alt: \"avatar\",\n      className: \"profile-img rounded-circle mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(Image, {\n      className: \"profile-img rounded-circle mr-2\",\n      src: createImageFromInitials(32, susername ? susername.charAt(0).toUpperCase() : \"\", currentTheme === \"null\" ? profileColor : currentTheme),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 89\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-block text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"user-name d-block mb-1\",\n      \"data-tip\": susername,\n      \"data-place\": \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 23\n      }\n    }, susername), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"role d-block mb-1\",\n      \"data-tip\": suserrolename,\n      \"data-place\": \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 23\n      }\n    }, suserrolename), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"role d-block mb-3\",\n      \"data-tip\": ssitename,\n      \"data-place\": \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 23\n      }\n    }, ssitename)), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"dropdown-divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }\n    })), colortheme && colortheme.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"theme-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPalette,\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_THEME\",\n      defaultMessage: \"Theme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    })), colortheme.map((item, index) => {\n      console.log(item.scolorhexcode);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: `themeindex_${index}`,\n        onClick: () => this.submitUserTheme(item),\n        style: {\n          background: item.sthemecolorhexcode\n        },\n        className: `theme-change-menu-item ${item.sthemecolorname == currentTheme ? \"active theme-nav\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"role-change d-block\",\n        \"data-tip\": item.sthemecolorname,\n        \"data-place\": \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 31\n        }\n      }, item.sthemecolorname));\n    })), /*#__PURE__*/React.createElement(Dropdown, {\n      as: NavItem,\n      drop: \"left\",\n      className: \"ml-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"dropdown-divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 19\n      }\n    }), userMultiRole && userMultiRole.length > 0 && /*#__PURE__*/React.createElement(Dropdown, {\n      as: NavItem,\n      drop: \"left\",\n      className: \"ml-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      as: NavLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUserCog,\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CHANGEROLE\",\n      defaultMessage: \"Change Role\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 23\n      }\n    }, userMultiRole.map((item, index) => {\n      return /*#__PURE__*/React.createElement(Dropdown.Item, {\n        key: `roleindex_${index}`,\n        onClick: () => this.submitChangeRole(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"role-change d-block\",\n        \"data-tip\": item.suserrolename,\n        \"data-place\": \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 115\n        }\n      }, item.suserrolename));\n    }))), !isDeputyLogin && deputyUser && deputyUser.length > 0 && /*#__PURE__*/React.createElement(Dropdown, {\n      as: NavItem,\n      drop: \"left\",\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      as: NavLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUsersCog,\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CHANGEOWNER\",\n      defaultMessage: \"Change Owner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 23\n      }\n    }, this.props.Login.deputyUser.map((item, index) => {\n      return item.lstUserMultiDeputy && item.lstUserMultiDeputy.length > 1 ? /*#__PURE__*/React.createElement(Dropdown, {\n        as: NavItem,\n        drop: \"left\",\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        as: NavLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 33\n        }\n      }, `${item.sdeputyname}[${item.sdeputyid}]-${item.suserrolename}`), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 33\n        }\n      }, item.lstUserMultiDeputy.map((role, index) => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          key: `roleIndex_${index}`,\n          className: \"text-truncate d-block\",\n          onClick: () => this.submitChangeOwner(item, role),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 44\n          }\n        }, role.suserrolename);\n      }))) : /*#__PURE__*/React.createElement(Dropdown.Item, {\n        key: `deptuserindex_${index}`,\n        className: \"text-truncate d-block\",\n        onClick: () => this.submitChangeOwner(item, item.lstUserMultiDeputy[0]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 33\n        }\n      }, item.sdeputyname + \"[\" + item.sdeputyid + \"]\" + \"-\" + item.suserrolename);\n    }))), nusercode !== -1 && settings && settings[33] && parseInt(settings[33]) === transactionStatus.YES && /*#__PURE__*/React.createElement(NavDropdown.Item, {\n      onClick: () => this.props.getDigitalSign(nusercode, this.props.Login.userInfo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSignature,\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DIGITALSIGNATURE\",\n      defaultMessage: \"Digital Signature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 23\n      }\n    })), nlogintypecode && nlogintypecode === LOGINTYPE.INTERNAL && !isDeputyLogin && /*#__PURE__*/React.createElement(NavDropdown.Item, {\n      onClick: () => this.props.getPassWordPolicy(nuserrole),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faKey,\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CHANGEPASSWORD\",\n      defaultMessage: \"Change Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(NavDropdown.Item, {\n      onClick: () => this.onLogout(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPowerOff,\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_LOGOUT\",\n      defaultMessage: \"Logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }\n    }))))))), /*#__PURE__*/React.createElement(PortalModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SliderPage, {\n      show: this.state.showDashboard,\n      nflag: this.state.nflag,\n      closeModal: this.openDashBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }\n    })), this.props.Login.openCPModal && (this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" || this.props.Login.screenName === \"IDS_DIGITALSIGNATURE\") && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openCPModal,\n      closeModal: this.closeModal,\n      loginoperation: true,\n      inputParam: {},\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" ? this.onChangePassword : this.onDigitalSignatureSaveClick,\n      selectedRecord: this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" ? this.state.createPwdRecord || {} : this.state.selectedDigiSign || {},\n      mandatoryFields: this.mandatoryFieldFunction(),\n      validateEsign: this.validateEsign,\n      esign: this.props.Login.loadEsign,\n      addComponent: this.props.Login.loadEsign === true ? /*#__PURE__*/React.createElement(Esign, {\n        operation: \"update\" // onInputOnChange={this.onInputChange.bind(this)}\n        ,\n        onInputOnChange: event => {\n          this.onInputChange(event);\n        },\n        inputParam: this.props.Login.screenData.inputParam,\n        selectedRecord: this.state.selectedDigiSign || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 15\n        }\n      }) : this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" ? /*#__PURE__*/React.createElement(ChangePassWord, {\n        sloginid: this.props.Login.userInfo.sloginid,\n        createPwdRecord: this.state.createPwdRecord,\n        msg: fnPassMessage(this.props.Login.passwordPolicy),\n        onInputChange: event => this.onInputChange(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(AddDigitalSignature, {\n        maxSize: 20,\n        maxFiles: 1,\n        multiple: false,\n        onDropAccepted: this.onDropAccepted,\n        selectedDigiSign: this.state.selectedDigiSign || {},\n        deleteAttachment: this.deleteAttachment,\n        onDrop: this.onDropFile,\n        actionType: this.state.actionType,\n        userInfo: this.props.Login.userInfo,\n        createSecurityKey: this.state.createSecurityKey,\n        onInputChange: event => this.onInputChange(event),\n        label: this.props.intl.formatMessage({\n          id: \"IDS_DIGITALSIGNATURE\"\n        }),\n        name: \"digitalsignature\",\n        onDropImage: this.onDropImage,\n        operation: this.props.Login.operation,\n        childDataChange: this.childDataChange,\n        login: this.props.Login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  onInputChange(event) {\n    if (this.props.Login.screenName === \"IDS_CHANGEPASSWORD\") {\n      const createPwdRecord = this.state.createPwdRecord || {};\n      createPwdRecord[event.target.name] = event.target.value;\n      this.setState({\n        createPwdRecord\n      });\n    } else {\n      const selectedDigiSign = this.state.selectedDigiSign || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedDigiSign[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedDigiSign[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedDigiSign\n      });\n    }\n  }\n\n  mandatoryFieldFunction() {\n    let mandatoryField = [];\n    this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" ? mandatoryField = [{\n      \"idsName\": \"IDS_OLDPASSWORD\",\n      \"dataField\": \"soldpassword\",\n      \"mandatory\": false\n    }, {\n      \"idsName\": \"IDS_NEWPASSWORD\",\n      \"dataField\": \"snewpassword\",\n      \"mandatory\": false\n    }, {\n      \"idsName\": \"IDS_CONFIRMPASSWORD\",\n      \"dataField\": \"sconfirmpassword\",\n      \"mandatory\": true\n    }] : mandatoryField = [];\n    ;\n    return mandatoryField;\n  }\n\n  componentDidUpdate(prevProps) {\n    //   if (this.props.Login.isDeputyLogin === true) {\n    //   if (this.props.Login.navigation === \"home\") {\n    //      this.props.history.push('/');\n    //  }\n    // }\n    if (this.props.Login.createPwdRecord !== prevProps.Login.createPwdRecord) {\n      this.setState({\n        createPwdRecord: this.props.Login.createPwdRecord\n      });\n    }\n\n    if (this.props.Login.alert !== prevProps.Login.alert) {\n      this.setState({\n        alert: this.props.Login.alert\n      });\n    }\n\n    if (this.props.Login.selectedDigiSign !== prevProps.Login.selectedDigiSign) {\n      this.setState({\n        selectedDigiSign: this.props.Login.selectedDigiSign\n      });\n    }\n\n    if (this.props.Login.isInitialRender !== prevProps.Login.isInitialRender) {\n      this.setState({\n        isInitialRender: this.props.Login.isInitialRender\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.Login.openCPModal && nextState.isInitialRender === false && nextState.selectedDigiSign !== this.state.selectedDigiSign) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  submitUserTheme,\n  getChangeUserRole,\n  submitChangeRole,\n  getPassWordPolicy,\n  updateStore,\n  changepassword,\n  changeOwner,\n  logOutAuditAction,\n  getSelectedAlert,\n  getListAlert,\n  getDigitalSign,\n  saveDigitalSign,\n  crudMaster,\n  validateEsignforDigitalSignature,\n  getcolorMaster\n})(injectIntl(Header));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/header/header.component.jsx"],"names":["React","connect","FormattedMessage","injectIntl","Navbar","Nav","Dropdown","Image","Media","NavLink","NavDropdown","NavItem","Badge","toast","submitUserTheme","getChangeUserRole","submitChangeRole","getPassWordPolicy","updateStore","changepassword","changeOwner","logOutAuditAction","getListAlert","getDigitalSign","saveDigitalSign","crudMaster","validateEsignforDigitalSignature","getcolorMaster","rsapi","AtHeader","NavPrimaryHeader","ProfileImage","DashboardIcon","faSearch","faSignature","faBell","SlideOutModal","ChangePassWord","DEFAULT_RETURN","changePasswordValidation","fnPassMessage","LOGINTYPE","transactionStatus","PortalModal","SliderPage","FontAwesomeIcon","faKey","faPowerOff","faUserCog","faUsersCog","faPalette","createImageFromInitials","getSelectedAlert","AddDigitalSignature","Lims_JSON_stringify","create_UUID","onSaveMandatoryValidation","Esign","Button","mapStateToProps","state","Login","Header","Component","constructor","props","openAlert","setState","showDashboard","nflag","openQuickSetting","quickSettingOpen","openDashBoard","item","userInfo","submitChangeOwner","role","onChangeOwer","onChangePassword","createPwdRecord","returnMsg","passwordPolicy","sloginid","inputParam","spassword","snewpassword","trim","sOldPassword","soldpassword","nusersitecode","isPasswordExpiry","info","onSaveDigitalSign","saveType","formRef","digiSignData","digiSignImageFile","selectedDigiSign","sdigisignname","isDigiSignFileEdited","NO","formData","FormData","digiSignImageCount","digisignfile","nmastersitecode","Array","isArray","length","splittedFileName","name","split","fileExtension","uniquefilename","append","YES","undefined","hasOwnProperty","sdigisignftp","ssecuritykey","JSON","stringify","uploadControlList","operation","classUrl","methodUrl","inputData","slanguagename","isFileupload","updateInfo","typeName","data","loadEsign","screenData","validateEsign","sreason","nreasoncode","value","spredefinedreason","label","password","closeModal","openCPModal","roleItem","onChangeRol","childDataChange","selectedRecord","mandatoryFieldCheck","isInitialRender","onDigitalSignatureSaveClick","mandatoryField","show","createSecurityKey","alert","sliderOpen","valueOf","onChangeRole","post","then","response","responseData","UserMultiRole","nusermultirolecode","suserrolename","catch","error","status","warn","message","onLogout","userinfo","scomments","intl","formatMessage","id","sauditaction","languageList","render","susername","nuserrole","nlogintypecode","ssitename","nusercode","deputyUser","userMultiRole","isDeputyLogin","userImagePath","settings","profileColor","colortheme","selectedUserLimsTheme","currentTheme","sthemecolorname","displayName","showSearch","searchBar","layOutGetHomeCancel","toggleSearch","showAlertDashBoard","console","log","charAt","toUpperCase","map","index","scolorhexcode","background","sthemecolorhexcode","lstUserMultiDeputy","sdeputyname","sdeputyid","parseInt","INTERNAL","screenName","mandatoryFieldFunction","event","onInputChange","onDropAccepted","deleteAttachment","onDropFile","actionType","onDropImage","target","type","checked","componentDidUpdate","prevProps","shouldComponentUpdate","nextProps","nextState"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Navbar, Nav, Dropdown, Image, Media, NavLink, NavDropdown, NavItem, Badge } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { submitUserTheme,getChangeUserRole, submitChangeRole, getPassWordPolicy, updateStore, changepassword, changeOwner, logOutAuditAction, getListAlert, getDigitalSign, saveDigitalSign, crudMaster, validateEsignforDigitalSignature,getcolorMaster } from '../../actions'\r\nimport rsapi from '../../rsapi';\r\nimport { AtHeader, NavPrimaryHeader, ProfileImage, DashboardIcon } from '../header/header.styles';\r\nimport { faSearch, faSignature,faBell } from '@fortawesome/free-solid-svg-icons';\r\nimport '../../assets/styles/login.css';\r\nimport { ReactComponent as SearchIcon } from '../../assets/image/icon-search.svg';\r\nimport { ReactComponent as BellIcon } from '../../assets/image/icon-bell.svg';\r\n import { ReactComponent as DashboardHeader } from '../../assets/image/dashboard-header.svg';\r\nimport SlideOutModal from '../slide-out-modal/SlideOutModal';\r\nimport ChangePassWord from '../../pages/Login/ChangePassWord';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { changePasswordValidation, fnPassMessage } from '../../pages/Login/LoginCommonFunction';\r\nimport { LOGINTYPE, transactionStatus } from '../Enumeration';\r\nimport PortalModal from '../../PortalModal';\r\nimport SliderPage from '../slider-page/slider-page-component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faKey, faPowerOff, faUserCog, faUsersCog,faPalette } from '@fortawesome/free-solid-svg-icons';\r\nimport { createImageFromInitials } from './headerutils';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport { getSelectedAlert } from '../../actions/AlertViewAction';\r\nimport '../../pages/dashboardtypes/Alert.css';\r\nimport AddDigitalSignature from '../../pages/Login/AddDigitalSignature';\r\nimport { Lims_JSON_stringify, create_UUID, onSaveMandatoryValidation } from '../../components/CommonScript';\r\nimport Esign from '../../pages/audittrail/Esign';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    Login: state.Login\r\n  }\r\n}\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      createPwdRecord: {},\r\n      createSecurityKey: {},\r\n      alert: [],\r\n      sliderOpen: false,\r\n      nflag: 2,\r\n      quickSettingOpen: false.valueOf,\r\n      showDashboard: false\r\n    }\r\n  }\r\n\r\n\r\n  onChangeRole() {\r\n    rsapi.post(\"/login/getchangerole\", { \"userInfo\": this.props.Login.userInfo })\r\n      .then(response => {\r\n        const responseData = response.data;\r\n        this.setState({\r\n          show: true,\r\n          UserMultiRole: responseData.UserMultiRole,\r\n          nusermultirolecode: {\r\n            label: responseData.UserMultiRole[0].suserrolename, value: responseData.UserMultiRole[0].nusermultirolecode,\r\n            item: responseData.UserMultiRole[0]\r\n          }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.status === 205) {\r\n          toast.warn(error.message)\r\n        } else {\r\n          toast.error(error.message)\r\n        }\r\n      });\r\n  }\r\n\r\n  onLogout() {\r\n    const inputData = {\r\n      userinfo: this.props.Login.userInfo,\r\n      scomments: this.props.intl.formatMessage({ id: \"IDS_LOGOUT\" }),\r\n      sauditaction: \"IDS_LOGOUT\"\r\n    };\r\n    this.props.logOutAuditAction(inputData, this.props.Login.languageList);\r\n  }\r\n\r\n  openAlert = () => {\r\n    this.setState({ showDashboard: !this.state.showDashboard, nflag: 2 });\r\n  }\r\n\r\n  openQuickSetting = () => {\r\n    this.setState({ quickSettingOpen: !this.state.quickSettingOpen })\r\n  }\r\n\r\n  openDashBoard = () => {\r\n    this.setState({ showDashboard: !this.state.showDashboard, nflag: 1 })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { susername, suserrolename, nuserrole, nlogintypecode, ssitename, nusercode } = this.props.Login.userInfo;\r\n    const { deputyUser, userMultiRole, isDeputyLogin, userImagePath, settings, profileColor,colortheme,selectedUserLimsTheme } = this.props.Login;\r\n    const currentTheme = this.props.Login.selectedUserLimsTheme && this.props.Login.selectedUserLimsTheme.sthemecolorname;\r\n    \r\n    return (\r\n      <>\r\n        {/* <ReactTooltip place=\"bottom\" id=\"tooltip-grid-wrap\" globalEventOff='click' /> */}\r\n        <AtHeader>\r\n          <Navbar className=\"p-0\" bg=\"light\" fixed=\"top\">\r\n            <Navbar.Brand>\r\n              <NavPrimaryHeader className=\"at-nav-brand\">\r\n                {this.props.Login && this.props.Login.displayName ?\r\n                  <FormattedMessage id={this.props.Login.displayName} /> : \"\"}\r\n              </NavPrimaryHeader>\r\n            </Navbar.Brand>\r\n            {/* <div style={{ \"margin-left\": this.props.Login.displayName!==\"\"?\"-20%\":\"-40px\"}}>\r\n            {this.props.searchBar}\r\n          </div> */}\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"d-flex align-items-center justify-content-end\">\r\n              {/* <ReactTooltip/> onClick={this.setFullview} */}\r\n\r\n              <Nav>\r\n\r\n\r\n                {this.props.showSearch ?\r\n                  <DashboardIcon className='mr-2'>\r\n                    <span>\r\n                      {this.props.searchBar}\r\n                    </span>\r\n                  </DashboardIcon> : \"\"\r\n\r\n\r\n                }\r\n\r\n                <Nav.Item className='d-flex'>\r\n                  <DashboardIcon className='position-relative topbar-search  ml-0'>\r\n                    {this.props.showSearch ?\r\n                      <div className=\"search-icon search-icon-header position-absolute search-close-icon\" onClick={this.props.layOutGetHomeCancel}><i class=\"fa fa-times\" aria-hidden=\"true\"></i></div> :\r\n                      <SearchIcon className=\"search-icon search-icon-header position-absolute zoom\" onClick={this.props.toggleSearch}\r\n                      >\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                      </SearchIcon>\r\n\r\n                    }\r\n                     \r\n                  </DashboardIcon>\r\n                  {this.props.showAlertDashBoard ?\r\n                      <>\r\n                  <DashboardIcon >\r\n                  <Nav.Link data-tip={this.props.intl.formatMessage({ id: \"IDS_DASHBOARD\" })}\r\n                    onClick={this.openDashBoard} \r\n                    className=\"zoom dashboard-icon\">                \r\n                    <DashboardHeader width='26px' height='26px' />\r\n                  </Nav.Link>\r\n                </DashboardIcon>\r\n      \r\n                <DashboardIcon className='position-relative  mr-1'>\r\n                  <div className=\"fa_stack fa-2x the-wrapper\" data-tip={this.props.intl.formatMessage({ id: \"IDS_ALERTS\" })}\r\n                    onClick={this.openAlert} class=\"zoom\">\r\n                      <BellIcon></BellIcon>\r\n                    {/* <FontAwesomeIcon icon={faBell} style={{ 'font-size': '23px' }} /> */}\r\n                  </div>\r\n                  <div className=\"icon icon_Badge position-absolute\" style={{ \"width\": this.state.alert && this.state.alert.length > 9 ? \"52%\" : \"46%\" }}>\r\n                    {this.state.alert && this.state.alert.length > 0 ?\r\n                      <Badge pill variant=\"danger\">{this.state.alert && this.state.alert.length}</Badge>\r\n                      : \"\"}\r\n\r\n                  </div>\r\n                </DashboardIcon> \r\n  \r\n                   </>\r\n              :\"\"}\r\n                  </Nav.Item>\r\n\r\n                \r\n                {/* <ListView\r\n              data={alert}\r\n              openslide={this.openDashBoard}\r\n              getSelectedAlert={getSelectedAlert}\r\n              userInfo={this.props.Login.userInfo}\r\n              > */}\r\n                {/* </ListView> */}\r\n                {/* <Button className=\"btn btn-circle outline-grey ml-2\" style={{ \"border-color\": \" rgba(187, 194, 203, 0.41)!important\" }} variant=\"link\" role=\"button\"\r\n                                        title={this.props.intl.formatMessage({ id: \"IDS_ALERT\" })}\r\n                                        onClick={this.openAlert}>\r\n                                        <FontAwesomeIcon icon={faBell}  style={{ \"width\": \"0.6!important\" }}/>\r\n                                        <div style={{\"margin-bottom\":\"11px\"}}>\r\n                  <Badge pill variant=\"secondary\">{alert&&alert.length}</Badge>\r\n                  </div>\r\n                   </Button> */}\r\n                {/* <DashboardIcon className='position-relative'>\r\n                  <div className=\"fa_stack fa-2x the-wrapper\" data-tip={this.props.intl.formatMessage({ id: \"IDS_ALERTS\" })}\r\n                    onClick={this.openAlert} class=\"zoom\">\r\n                    <FontAwesomeIcon icon={faBell} style={{ 'font-size': '26px' }} />\r\n                  </div>\r\n                  <div className=\"icon icon_Badge position-absolute\" style={{ \"width\": this.state.alert && this.state.alert.length > 9 ? \"52%\" : \"46%\" }}>\r\n                    {this.state.alert && this.state.alert.length > 0 ?\r\n                      <Badge pill variant=\"danger\">{this.state.alert && this.state.alert.length}</Badge>\r\n                      : \"\"}\r\n\r\n                  </div>\r\n                </DashboardIcon> */}\r\n                {/* <DashboardIcon className='mr-0'>\r\n                  <Nav.Link data-tip={this.props.intl.formatMessage({ id: \"IDS_DASHBOARD\" })}\r\n                    onClick={this.openDashBoard} className=\"zoom dashboard-icon\">                \r\n                    <DashboardHeader width='26px' height='26px' />\r\n                  </Nav.Link>\r\n                </DashboardIcon> */}\r\n\r\n\r\n                {/* {this.props.history.location.pathname !='/home' &&                                                             \r\n                      <DashboardIcon className='mr-0'>   \r\n                          <Nav.Link className='zoom'>       \r\n                          {this.props.fullView &&      \r\n                                <FullviewExpand width='26px' height='26px' onClick={this.props.menuFullview} /> \r\n                            }\r\n                          {!this.props.fullView &&     \r\n                                <FullviewCollapse width='26px' height='26px' onClick={this.props.menuFullview} />\r\n                          }\r\n                          </Nav.Link>  \r\n                        </DashboardIcon> \r\n                    } */}\r\n                {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n\r\n                <NavDropdown className=\"no-arrow\" alignRight title={<Media >\r\n                  {console.log(currentTheme)}\r\n                  <ProfileImage>\r\n                    {settings && settings[5] && userImagePath && userImagePath !== \"\" ?\r\n                      <Image src={settings[5] + userImagePath}\r\n                        alt=\"avatar\" className=\"rounded-circle mr-2\" width=\"36\" height=\"36\" /> : <Image className=\"rounded-circle mr-2\"\r\n                          src={createImageFromInitials(32, susername ? susername.charAt(0).toUpperCase() : \"\", currentTheme === \"null\" ? profileColor : currentTheme)}\r\n                      />}\r\n                  </ProfileImage>\r\n                  {/* {<Media.Body bsPrefix=\"media-profileinfo\">\r\n                      <span className=\"user-name user-role\" data-tip={susername} data-place=\"bottom\">{susername}</span>\r\n                      <span className=\"role user-role\" data-tip={suserrolename} data-place=\"bottom\">{suserrolename}</span>\r\n                    </Media.Body> } */}\r\n                  {/* :\r\n                    <Image src={userImagePath === \"\" ? userImg : fileViewURL + \"/SharedFolder/UserProfile/\" + userImagePath}\r\n                      alt=\"avatar\" className=\"img-profile rounded-circle mr-2\" />\r\n                  } */}\r\n\r\n                  {/* <FontAwesomeIcon className=\"align-self-center down-icon ml-2\" icon={faChevronDown} /> */}\r\n                </Media>}>\r\n                  {/* <ProfileLayer>\r\n                    <ProfileImageLayer>\r\n                      {userImagePath === \"\" ?\r\n                        <Image className=\"rounded-circle mr-2\"\r\n                          src={createImageFromInitials(80, susername ? susername.charAt(0).toUpperCase() : \"\", profileColor)}\r\n                        /> : <Image src={fileViewURL + \"/SharedFolder/UserProfile/\" + userImagePath}\r\n                          alt=\"avatar\" className=\"rounded-circle mr-2\" width=\"80\" height=\"80\" />}\r\n                    </ProfileImageLayer>\r\n                    <Profile>\r\n                      <ProfileName>{susername}</ProfileName>\r\n                      <ProfileRole>{suserrolename}</ProfileRole>\r\n                    </Profile>\r\n                  </ProfileLayer> */}\r\n                  {/* <Media className=\"dropdown-menu-animated\">\r\n                  <ProfileImage>\r\n                            {settings && settings[5] && userImagePath && userImagePath !== \"\" ?\r\n                              <Image src={settings[5] + userImagePath}\r\n                                alt=\"avatar\" className=\"ml-2\" width=\"36\" height=\"36\" /> : <Image className=\"rounded-circle ml-2 mr-3\"\r\n                                  style = {{width:\"3rem\",height:\"3rem\"}} src={createImageFromInitials(32, susername ? susername.charAt(0).toUpperCase() : \"\", profileColor)}\r\n                              />}\r\n                        </ProfileImage>\r\n                    <Media.Body bsPrefix=\"media-profileinfo\">\r\n                      <span className=\"user-name user-role\" data-tip={susername} data-place=\"bottom\">{susername}</span>\r\n                      <span className=\"role user-role\" data-tip={suserrolename} data-place=\"bottom\">{suserrolename}</span>\r\n                    </Media.Body>\r\n                    </Media> */}\r\n                  <div class=\"profile-img-block pt-2\">\r\n                    <ProfileImage className=\"mx-3 mb-3 pt-2 text-center\">\r\n                      {settings && settings[5] && userImagePath && userImagePath !== \"\" ?\r\n                        <Image src={settings[5] + userImagePath}\r\n                          alt=\"avatar\" className=\"profile-img rounded-circle mr-2\" /> : <Image className=\"profile-img rounded-circle mr-2\"\r\n                            src={createImageFromInitials(32, susername ? susername.charAt(0).toUpperCase() : \"\", currentTheme === \"null\" ? profileColor : currentTheme)}\r\n                        />}\r\n                    </ProfileImage>\r\n\r\n                    <div class=\"d-block text-center\">\r\n                      <span className=\"user-name d-block mb-1\" data-tip={susername} data-place=\"bottom\">{susername}</span>\r\n                      <span className=\"role d-block mb-1\" data-tip={suserrolename} data-place=\"bottom\">{suserrolename}</span>\r\n                      <span className=\"role d-block mb-3\" data-tip={ssitename} data-place=\"bottom\">{ssitename}</span>\r\n                    </div>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                  </div>\r\n                  {colortheme && colortheme.length > 0 &&\r\n                 <>\r\n                 <div className='theme-text'>\r\n                  <div>\r\n                    <FontAwesomeIcon icon={faPalette} className=\"mr-2\" />\r\n                    <FormattedMessage id=\"IDS_THEME\" defaultMessage=\"Theme\" />\r\n                  </div>\r\n                    {colortheme.map((item, index) => { \r\n                           console.log(item.scolorhexcode)\r\n                          return (                           \r\n                            <div key={`themeindex_${index}`} onClick={() => this.submitUserTheme(item)} \r\n                            style={{\r\n                              background: item.sthemecolorhexcode,\r\n                            }}\r\n                            className={`theme-change-menu-item ${item.sthemecolorname == currentTheme ? \"active theme-nav\" : \"\"\r\n                          }`}><span className=\"role-change d-block\" data-tip={item.sthemecolorname} data-place=\"bottom\">{item.sthemecolorname}</span></div>\r\n                          )\r\n                        })}                      \r\n                 </div>\r\n                    <Dropdown as={NavItem} drop={\"left\"} className=\"ml-2 \">\r\n                      {/* <Dropdown.Toggle as={NavLink}>\r\n                        <FontAwesomeIcon icon={faUserCog} className=\"mr-2\" />\r\n                        <FormattedMessage id=\"IDS_THEME\" defaultMessage=\"Theme\" /><br/>\r\n                        {colortheme.map((item, index) => { \r\n                           console.log(item.scolorhexcode)\r\n                          return (                           \r\n                            <div key={`themeindex_${index}`} onClick={() => this.submitUserTheme(item)} \r\n                            style={{\r\n                              background: item.scolorhexcode,\r\n                            }}\r\n                            className={`theme-change-menu-item ${item.scolorname == currentTheme ? \"active theme-nav\" : \"\"\r\n                          }`}><span className=\"role-change d-block\" data-tip={item.scolorname} data-place=\"bottom\">{item.scolorname}</span></div>\r\n                          )\r\n                        })}\r\n                      </Dropdown.Toggle> */}\r\n                      {/* <Dropdown.Menu>\r\n                        {colortheme.map((item, index) => { \r\n                           console.log(item.scolorhexcode)\r\n                          return (                           \r\n                            <div key={`themeindex_${index}`} onClick={() => this.submitUserTheme(item)} \r\n                            style={{\r\n                              background: item.scolorhexcode,\r\n                            }}\r\n                            className={`theme-change-menu-item ${item.scolorname == currentTheme ? \"active theme-nav\" : \"\"\r\n                          }`}><span className=\"role-change d-block\" data-tip={item.scolorname} data-place=\"bottom\">{item.scolorname}</span></div>\r\n                          )\r\n                        })}\r\n                      </Dropdown.Menu> */}\r\n                    </Dropdown>\r\n                    </>\r\n                    }                    \r\n                  <div class=\"dropdown-divider\"></div>\r\n                  {userMultiRole && userMultiRole.length > 0 &&\r\n                    <Dropdown as={NavItem} drop={\"left\"} className=\"ml-2 \">\r\n                      <Dropdown.Toggle as={NavLink}>\r\n                        <FontAwesomeIcon icon={faUserCog} className=\"mr-2\" />\r\n                        <FormattedMessage id=\"IDS_CHANGEROLE\" defaultMessage=\"Change Role\" />\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu>\r\n                        {userMultiRole.map((item, index) => {\r\n                          return (\r\n                            <Dropdown.Item key={`roleindex_${index}`} onClick={() => this.submitChangeRole(item)}><span className=\"role-change d-block\" data-tip={item.suserrolename} data-place=\"bottom\">{item.suserrolename}</span></Dropdown.Item>\r\n                          )\r\n                        })}\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>}\r\n                  {!isDeputyLogin && deputyUser && deputyUser.length > 0 &&\r\n                    <Dropdown as={NavItem} drop={\"left\"} className=\"ml-2\">\r\n                      <Dropdown.Toggle as={NavLink}>\r\n                        <FontAwesomeIcon icon={faUsersCog} className=\"mr-2\" />\r\n                        <FormattedMessage id=\"IDS_CHANGEOWNER\" defaultMessage=\"Change Owner\" />\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu>\r\n                        {this.props.Login.deputyUser.map((item, index) => {\r\n                          return (\r\n                            item.lstUserMultiDeputy && item.lstUserMultiDeputy.length > 1 ?\r\n                              <Dropdown as={NavItem} drop={\"left\"} className=\"ml-2\">\r\n                                <Dropdown.Toggle as={NavLink}>{`${item.sdeputyname}[${item.sdeputyid}]-${item.suserrolename}`}</Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                  {item.lstUserMultiDeputy.map((role, index) => {\r\n                                    return <Dropdown.Item key={`roleIndex_${index}`} className=\"text-truncate d-block\" onClick={() => this.submitChangeOwner(item, role)}>{role.suserrolename}</Dropdown.Item>\r\n                                  })}\r\n                                </Dropdown.Menu>\r\n                              </Dropdown>\r\n                              : <Dropdown.Item key={`deptuserindex_${index}`} className=\"text-truncate d-block\" onClick={() => this.submitChangeOwner(item, item.lstUserMultiDeputy[0])}>{item.sdeputyname + \"[\" + item.sdeputyid + \"]\" + \"-\" + item.suserrolename}</Dropdown.Item>\r\n                          )\r\n                        })}\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  }\r\n                 \r\n                  { \r\n                  (nusercode !== -1) && settings && settings[33] && parseInt(settings[33]) === transactionStatus.YES && \r\n                    <NavDropdown.Item onClick={() => this.props.getDigitalSign(nusercode, this.props.Login.userInfo)}>\r\n                      <FontAwesomeIcon icon={faSignature} className=\"mr-2\" />\r\n                      <FormattedMessage id=\"IDS_DIGITALSIGNATURE\" defaultMessage=\"Digital Signature\" />\r\n                    </NavDropdown.Item>\r\n                  }\r\n                  {nlogintypecode && nlogintypecode === LOGINTYPE.INTERNAL && !isDeputyLogin &&\r\n                    <NavDropdown.Item onClick={() => this.props.getPassWordPolicy(nuserrole)}>\r\n                      <FontAwesomeIcon icon={faKey} className=\"mr-2\" />\r\n                      <FormattedMessage id=\"IDS_CHANGEPASSWORD\" defaultMessage=\"Change Password\" />\r\n                    </NavDropdown.Item>}\r\n\r\n                  <NavDropdown.Item onClick={() => this.onLogout()}>\r\n                    <FontAwesomeIcon icon={faPowerOff} className=\"mr-2\" />\r\n                    <FormattedMessage id=\"IDS_LOGOUT\" defaultMessage=\"Logout\" />\r\n                  </NavDropdown.Item>\r\n\r\n                </NavDropdown>\r\n                {/* </Tooltip> */}\r\n                {/* <PortalModal>\r\n                  <SliderPage sliderOpen={this.state.sliderOpen} openDashBoard={this.openDashBoard}\r\n                    component={<h1>Dash Board</h1>}>\r\n                  </SliderPage>\r\n                </PortalModal>\r\n\r\n                <PortalModal>\r\n                  <SliderPage sliderOpen={this.state.quickSettingOpen} openQuickSetting={this.openQuickSetting}\r\n                    component={<h1>Alert</h1>}>\r\n                  </SliderPage>\r\n                </PortalModal> */}\r\n\r\n                {/* <Dropdown alignRight className=\"no-arrow\">\r\n\r\n                  <Dropdown.Toggle id=\"dropdown-basic\" as={NavLink}>\r\n                    <Media>\r\n                      <Image  src={userImg} alt=\"avatar\" className=\"img-profile rounded-circle mr-2\" />\r\n                        <Media.Body>\r\n                          <span className=\"user-name\">{susername}</span>\r\n                          <span className=\"role\">{suserrolename}</span>\r\n                        </Media.Body>\r\n                        <FontAwesomeIcon className=\"align-self-center down-icon ml-2\" icon={faChevronDown} />\r\n                    </Media>\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    {this.props.Login.nchangerolecount > 0 && \r\n                    <>\r\n                      <Dropdown.Item onClick={()=>this.props.getChangeUserRole(this.props.Login.userInfo)}>\r\n                          <FormattedMessage id=\"IDS_CHANGEROLE\" defaultMessage=\"Change Role\" />\r\n                      </Dropdown.Item>\r\n                      <Dropdown as={NavItem} drop={\"left\"}>\r\n                        <Dropdown.Toggle as={NavLink}>\r\n                          <FormattedMessage id=\"IDS_CHANGEROLE\" defaultMessage=\"Change Role\" />\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                          <Dropdown.Item>Hello there!</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                      </>}\r\n                    {this.props.Login.ndeputyCount > 0 && \r\n                      <Dropdown.Item onClick={ () => this.onChangeOwner() }>\r\n                          <FormattedMessage id=\"IDS_CHANGEOWNER\" defaultMessage=\"Change Owner\" />\r\n                      </Dropdown.Item>}\r\n                      <Dropdown.Item>\r\n                          <FormattedMessage id=\"IDS_CHANGEPASSWORD\" defaultMessage=\"Change Password\" />\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item>\r\n                          <FormattedMessage id=\"IDS_LOCK\" defaultMessage=\"Lock\" />\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item onClick={ () => this.onLogout()}>\r\n                          <FormattedMessage id=\"IDS_LOGOUT\" defaultMessage=\"Log Out\" />\r\n                      </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown> */}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n\r\n          </Navbar>\r\n\r\n        </AtHeader>\r\n\r\n        <PortalModal>\r\n          <SliderPage show={this.state.showDashboard} nflag={this.state.nflag} closeModal={this.openDashBoard} />\r\n        </PortalModal>\r\n        {this.props.Login.openCPModal && (this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" || this.props.Login.screenName === \"IDS_DIGITALSIGNATURE\") &&\r\n          <SlideOutModal\r\n            show={this.props.Login.openCPModal}\r\n            closeModal={this.closeModal}\r\n            loginoperation={true}\r\n            inputParam={{}}\r\n            screenName={this.props.Login.screenName}\r\n            onSaveClick={this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" ? this.onChangePassword : this.onDigitalSignatureSaveClick}\r\n            selectedRecord={this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" ? this.state.createPwdRecord || {} : this.state.selectedDigiSign || {}}\r\n            mandatoryFields={this.mandatoryFieldFunction()}\r\n            validateEsign={this.validateEsign}\r\n            esign={this.props.Login.loadEsign}\r\n            addComponent={this.props.Login.loadEsign === true ?\r\n              <Esign operation={\"update\"}\r\n                // onInputOnChange={this.onInputChange.bind(this)}\r\n                onInputOnChange={(event) => {this.onInputChange(event)}}\r\n                inputParam={this.props.Login.screenData.inputParam}\r\n                selectedRecord={this.state.selectedDigiSign || {}}\r\n              />\r\n              :\r\n              this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" ?\r\n                <ChangePassWord\r\n                  sloginid={this.props.Login.userInfo.sloginid}\r\n                  createPwdRecord={this.state.createPwdRecord}\r\n                  msg={fnPassMessage(this.props.Login.passwordPolicy)}\r\n                  onInputChange={(event) => this.onInputChange(event)}\r\n                />\r\n                :\r\n                <AddDigitalSignature\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                  multiple={false}\r\n                  onDropAccepted={this.onDropAccepted}\r\n                  selectedDigiSign={this.state.selectedDigiSign || {}}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  onDrop={this.onDropFile}\r\n                  actionType={this.state.actionType}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  createSecurityKey={this.state.createSecurityKey}\r\n                  onInputChange={(event) => this.onInputChange(event)}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_DIGITALSIGNATURE\" })}\r\n                  name=\"digitalsignature\"\r\n                  onDropImage={this.onDropImage}\r\n                  operation={this.props.Login.operation}\r\n                  childDataChange={this.childDataChange}\r\n                  login={this.props.Login}\r\n                />\r\n            }\r\n          />}\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n  submitUserTheme = item => {\r\n    this.props.submitUserTheme(item,this.props.Login.userInfo);\r\n  }\r\n\r\n  submitChangeOwner = (item, role) => {\r\n    this.props.onChangeOwer(item,role);\r\n    // const parameterInfo = {\r\n    //   typeName: DEFAULT_RETURN,\r\n    //   data: { menuDesign: [], navigation: \"\" }\r\n    // }\r\n    // this.props.updateStore(parameterInfo);\r\n    // const inputData = {\r\n    //   nuserrolecode: item.nuserrolecode,\r\n    //   suserrolename: item.suserrolename,\r\n    //   nusercode: item.nusercode,\r\n    //   sdeputyid: item.sdeputyid,\r\n    //   userinfo: this.props.Login.userInfo\r\n    // }\r\n    // this.props.changeOwner(inputData);\r\n  }\r\n\r\n  onChangePassword = () => {\r\n    const createPwdRecord = this.state.createPwdRecord;\r\n    const returnMsg = changePasswordValidation(createPwdRecord, this.props.Login.passwordPolicy, this.props.Login.userInfo.sloginid);\r\n    if (returnMsg === 0) {\r\n      const inputParam = {\r\n        spassword: createPwdRecord.snewpassword.trim(),\r\n        sOldPassword: createPwdRecord.soldpassword.trim(),\r\n        nusersitecode: this.props.Login.userInfo.nusersitecode,\r\n        isPasswordExpiry: false,\r\n        userInfo: this.props.Login.userInfo\r\n      };\r\n      this.props.changepassword(inputParam);\r\n    } else {\r\n      toast.info(returnMsg);\r\n    }\r\n  }\r\n\r\n  onSaveDigitalSign = (saveType, formRef) => {\r\n    let digiSignData = [];\r\n    digiSignData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n    const digiSignImageFile = this.state.selectedDigiSign.sdigisignname;\r\n\r\n    let isDigiSignFileEdited = transactionStatus.NO;\r\n    const formData = new FormData();\r\n    let digiSignImageCount = 0;\r\n    let digisignfile = {};\r\n    digiSignData[\"digiSign\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n    digiSignData[\"digiSign\"][\"sdigisignname\"] = this.state.selectedDigiSign[\"sdigisignname\"];\r\n\r\n    if (digiSignImageFile && Array.isArray(digiSignImageFile) && digiSignImageFile.length > 0) {\r\n      const splittedFileName = digiSignImageFile[0].name.split('.');\r\n      const fileExtension = digiSignImageFile[0].name.split('.')[splittedFileName.length - 1];\r\n      const uniquefilename = this.state.selectedDigiSign.sdigisignname === \"\" ?\r\n        this.state.selectedDigiSign.sdigisignname : create_UUID() + '.' + fileExtension;\r\n\r\n      digisignfile[\"sdigisignname\"] = Lims_JSON_stringify(digiSignImageFile[0].name, false);\r\n      digisignfile[\"sdigisignftp\"] = uniquefilename;\r\n      digisignfile[\"ssecuritykey\"] = this.state.selectedDigiSign[\"ssecuritykey\"];\r\n      formData.append(\"uploadedFile\" + digiSignImageCount, digiSignImageFile[0]);\r\n      formData.append(\"uniquefilename\" + digiSignImageCount, uniquefilename);\r\n      digiSignImageCount++;\r\n      isDigiSignFileEdited = transactionStatus.YES;\r\n      digiSignData[\"digiSign\"][\"sdigisignname\"] = \"\";\r\n    } else {\r\n      if (digiSignImageFile === undefined || digiSignImageFile === \"\" || (digiSignImageFile.hasOwnProperty(\"length\") && digiSignImageFile.length === 0)) {\r\n        if (digiSignData[\"digiSign\"][\"sdigisignftp\"] !== null && digiSignData[\"digiSign\"][\"sdigisignftp\"] !== \"\") {\r\n          isDigiSignFileEdited = transactionStatus.YES;\r\n        }\r\n        digisignfile[\"sdigisignname\"] = null;\r\n        digisignfile[\"sdigisignftp\"] = null;\r\n        digiSignData[\"digiSign\"][\"sdigisignname\"] = \"\";\r\n      }\r\n      else {\r\n        digisignfile[\"sdigisignname\"] = Lims_JSON_stringify(this.state.selectedDigiSign.sdigisignname, false);\r\n        digisignfile[\"sdigisignftp\"] = this.state.selectedDigiSign.sdigisignftp;\r\n        digisignfile[\"ssecuritykey\"] = this.state.selectedDigiSign.ssecuritykey\r\n      }\r\n    }\r\n\r\n    formData.append(\"isDigiSignFileEdited\", isDigiSignFileEdited);\r\n    formData.append(\"DigiSignImage_filecount\", digiSignImageCount);\r\n    formData.append(\"filecount\", digiSignImageCount);\r\n    formData.append(\"controlcodelist\", JSON.stringify(this.props.Login.uploadControlList));\r\n    formData.append(\"digisignfile\", JSON.stringify(digisignfile));\r\n    formData.append(\"digiSign\", JSON.stringify(digiSignData[\"digiSign\"]));\r\n    // }\r\n    const inputParam = {\r\n      operation: this.props.Login.operation,\r\n      formData: formData,\r\n      classUrl: \"digitalsignature\",\r\n      methodUrl: \"DigitalSignature\",\r\n      inputData: {\r\n        \"userinfo\": {\r\n          ...this.props.Login.userInfo,\r\n          slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\r\n        }\r\n      },\r\n      isFileupload: true,\r\n      saveType, formRef\r\n    }\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: {\r\n        loadEsign: true, screenData: { inputParam }, saveType\r\n      }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n    // this.props.saveDigitalSign(inputParam);\r\n  }\r\n\r\n  validateEsign = () => {\r\n    const inputParam = {\r\n      inputData: {\r\n        \"userinfo\": {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedDigiSign[\"esigncomments\"],\r\n          nreasoncode: this.state.selectedDigiSign[\"esignreason\"] && this.state.selectedDigiSign[\"esignreason\"].value,\r\n          spredefinedreason: this.state.selectedDigiSign[\"esignreason\"] && this.state.selectedDigiSign[\"esignreason\"].label,\r\n\r\n        },\r\n        password: this.state.selectedDigiSign[\"esignpassword\"]\r\n      },\r\n      screenData: this.props.Login.screenData\r\n    }\r\n    this.props.validateEsignforDigitalSignature(inputParam);\r\n  }\r\n\r\n  onInputChange(event) {\r\n    if (this.props.Login.screenName === \"IDS_CHANGEPASSWORD\") {\r\n      const createPwdRecord = this.state.createPwdRecord || {};\r\n      createPwdRecord[event.target.name] = event.target.value;\r\n      this.setState({ createPwdRecord });\r\n    } else {\r\n      const selectedDigiSign = this.state.selectedDigiSign || {};\r\n      if (event.target.type === 'checkbox') {\r\n        selectedDigiSign[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n      } else {\r\n        selectedDigiSign[event.target.name] = event.target.value;\r\n      }\r\n      this.setState({ selectedDigiSign });\r\n    }\r\n  }\r\n\r\n  closeModal = () => {\r\n    let selectedDigiSign = this.props.Login.selectedDigiSign;\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openCPModal = this.props.Login.openCPModal;\r\n    if (this.props.Login.loadEsign) {\r\n      loadEsign = false;\r\n      selectedDigiSign['esignpassword'] = \"\"\r\n      selectedDigiSign['esigncomments'] = \"\"\r\n      selectedDigiSign['esignreason'] = \"\"\r\n    } else {\r\n      openCPModal = false;\r\n    }\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openCPModal, loadEsign, selectedDigiSign }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n  }\r\n\r\n  mandatoryFieldFunction() {\r\n    let mandatoryField = [];\r\n    this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" ?\r\n      mandatoryField = [\r\n        { \"idsName\": \"IDS_OLDPASSWORD\", \"dataField\": \"soldpassword\", \"mandatory\": false },\r\n        { \"idsName\": \"IDS_NEWPASSWORD\", \"dataField\": \"snewpassword\", \"mandatory\": false },\r\n        { \"idsName\": \"IDS_CONFIRMPASSWORD\", \"dataField\": \"sconfirmpassword\", \"mandatory\": true }\r\n      ]\r\n      :\r\n      mandatoryField = [];\r\n    ;\r\n    return mandatoryField;\r\n  }\r\n\r\n  submitChangeRole = (roleItem) => {\r\n    this.props.onChangeRol(roleItem);\r\n    // const parameterInfo = {\r\n    //   typeName: DEFAULT_RETURN,\r\n    //   data: { menuDesign: [], navigation: \"\" }\r\n    // }\r\n    // this.props.updateStore(parameterInfo);\r\n    // const userInfo = this.props.Login.userInfo;\r\n    // const inputParam = {\r\n    //   nusermultisitecode: userInfo.nusersitecode,\r\n    //   slanguagetypecode: userInfo.slanguagetypecode,\r\n    //   nusermultirolecode: roleItem.nusermultirolecode,\r\n    //   nuserrolecode: roleItem.nuserrolecode,\r\n    //   nmastersitecode: userInfo.nmastersitecode,\r\n    //   nlogintypecode: userInfo.nlogintypecode,\r\n    //   userinfo: userInfo\r\n    // }\r\n    // this.props.submitChangeRole(inputParam);\r\n  }\r\n\r\n  childDataChange = (selectedRecord, mandatoryFieldCheck) => {\r\n    let isInitialRender = false;\r\n    this.setState({\r\n      selectedDigiSign: {\r\n        ...selectedRecord\r\n      },\r\n      isInitialRender\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    //   if (this.props.Login.isDeputyLogin === true) {\r\n\r\n    //   if (this.props.Login.navigation === \"home\") {\r\n    //      this.props.history.push('/');\r\n    //  }\r\n    // }\r\n    if (this.props.Login.createPwdRecord !== prevProps.Login.createPwdRecord) {\r\n      this.setState({ createPwdRecord: this.props.Login.createPwdRecord })\r\n    }\r\n    if (this.props.Login.alert !== prevProps.Login.alert) {\r\n      this.setState({ alert: this.props.Login.alert })\r\n    }\r\n    if (this.props.Login.selectedDigiSign !== prevProps.Login.selectedDigiSign) {\r\n      this.setState({ selectedDigiSign: this.props.Login.selectedDigiSign })\r\n    }\r\n    if (this.props.Login.isInitialRender !== prevProps.Login.isInitialRender) {\r\n      this.setState({ isInitialRender: this.props.Login.isInitialRender })\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props.Login.openCPModal && nextState.isInitialRender === false &&\r\n      (nextState.selectedDigiSign !== this.state.selectedDigiSign)) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  onDigitalSignatureSaveClick = () => {\r\n    let mandatoryField = [];\r\n    (this.state.selectedDigiSign && this.state.selectedDigiSign[\"sdigisignname\"] && (this.state.selectedDigiSign[\"sdigisignname\"].hasOwnProperty(\"length\") ?\r\n      this.state.selectedDigiSign[\"sdigisignname\"].length > 0 : this.state.selectedDigiSign[\"sdigisignname\"] !== \"\") ?\r\n      mandatoryField = [\r\n        { \"idsName\": \"IDS_SECURITYKEY\", \"dataField\": \"ssecuritykey\", \"mandatory\": false },\r\n      ]\r\n      :\r\n      mandatoryField = []\r\n    );\r\n    onSaveMandatoryValidation(this.state.selectedDigiSign, mandatoryField, this.onSaveDigitalSign)\r\n  }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitUserTheme,getChangeUserRole, submitChangeRole, getPassWordPolicy,\r\n  updateStore, changepassword, changeOwner, logOutAuditAction, getSelectedAlert, getListAlert, \r\n  getDigitalSign, saveDigitalSign, crudMaster, validateEsignforDigitalSignature,getcolorMaster\r\n})(injectIntl(Header));"]},"metadata":{},"sourceType":"module"}