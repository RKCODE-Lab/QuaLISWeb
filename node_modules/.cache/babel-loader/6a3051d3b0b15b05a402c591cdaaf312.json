{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\header\\\\header.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Navbar, Nav, Dropdown, Image, Media, NavLink, NavDropdown, NavItem, Badge } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { getChangeUserRole, submitChangeRole, getPassWordPolicy, updateStore, changepassword, changeOwner, logOutAuditAction, getListAlert } from '../../actions';\nimport rsapi from '../../rsapi';\nimport { AtHeader, NavPrimaryHeader, ProfileImage, DashboardIcon } from '../header/header.styles';\nimport { faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport '../../assets/styles/login.css'; //import { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, MediaSubHeaderText, SearchIcon, ContentPanel } from '../../components/App.styles';\n\nimport { ReactComponent as SearchIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/icon-search.svg\";\nimport SlideOutModal from '../slide-out-modal/SlideOutModal';\nimport ChangePassWord from '../../pages/Login/ChangePassWord';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { changePasswordValidation, fnPassMessage } from '../../pages/Login/LoginCommonFunction';\nimport { LOGINTYPE } from '../Enumeration';\nimport PortalModal from '../../PortalModal';\nimport SliderPage from '../slider-page/slider-page-component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChartPie, faKey, faPowerOff, faUserCog, faUsersCog } from '@fortawesome/free-solid-svg-icons';\nimport { createImageFromInitials } from './headerutils'; // import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport { getSelectedAlert } from '../../actions/AlertViewAction';\nimport { faBell } from '@fortawesome/free-regular-svg-icons';\nimport '../../pages/dashboardtypes/Alert.css'; // import ReactTooltip from 'react-tooltip';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openAlert = () => {\n      this.setState({\n        showDashboard: !this.state.showDashboard,\n        nflag: 2\n      });\n    };\n\n    this.openQuickSetting = () => {\n      this.setState({\n        quickSettingOpen: !this.state.quickSettingOpen\n      });\n    };\n\n    this.openDashBoard = () => {\n      this.setState({\n        showDashboard: !this.state.showDashboard,\n        nflag: 1\n      });\n    };\n\n    this.submitChangeOwner = (item, role) => {\n      const parameterInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          menuDesign: [],\n          navigation: \"\"\n        }\n      };\n      this.props.updateStore(parameterInfo);\n      const inputData = {\n        nuserrolecode: item.nuserrolecode,\n        suserrolename: item.suserrolename,\n        nusercode: item.nusercode,\n        sdeputyid: item.sdeputyid,\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.changeOwner(inputData);\n    };\n\n    this.onChangePassword = () => {\n      const createPwdRecord = this.state.createPwdRecord;\n      const returnMsg = changePasswordValidation(createPwdRecord, this.props.Login.passwordPolicy, this.props.Login.userInfo.sloginid);\n\n      if (returnMsg === 0) {\n        const inputParam = {\n          spassword: createPwdRecord.snewpassword.trim(),\n          sOldPassword: createPwdRecord.soldpassword.trim(),\n          nusersitecode: this.props.Login.userInfo.nusersitecode,\n          isPasswordExpiry: false,\n          userInfo: this.props.Login.userInfo\n        };\n        this.props.changepassword(inputParam);\n      } else {\n        toast.info(returnMsg);\n      }\n    };\n\n    this.closeModal = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openCPModal: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.submitChangeRole = roleItem => {\n      const parameterInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          menuDesign: [],\n          navigation: \"\"\n        }\n      };\n      this.props.updateStore(parameterInfo);\n      const userInfo = this.props.Login.userInfo;\n      const inputParam = {\n        nusermultisitecode: userInfo.nusersitecode,\n        slanguagetypecode: userInfo.slanguagetypecode,\n        nusermultirolecode: roleItem.nusermultirolecode,\n        nuserrolecode: roleItem.nuserrolecode,\n        nmastersitecode: userInfo.nmastersitecode,\n        nlogintypecode: userInfo.nlogintypecode,\n        userinfo: userInfo\n      };\n      this.props.submitChangeRole(inputParam);\n    };\n\n    this.state = {\n      show: false,\n      createPwdRecord: {},\n      alert: [],\n      sliderOpen: false,\n      nflag: 2,\n      quickSettingOpen: false.valueOf,\n      showDashboard: false\n    };\n  }\n\n  onChangeRole() {\n    rsapi.post(\"/login/getchangerole\", {\n      \"userInfo\": this.props.Login.userInfo\n    }).then(response => {\n      const responseData = response.data;\n      this.setState({\n        show: true,\n        UserMultiRole: responseData.UserMultiRole,\n        nusermultirolecode: {\n          label: responseData.UserMultiRole[0].suserrolename,\n          value: responseData.UserMultiRole[0].nusermultirolecode,\n          item: responseData.UserMultiRole[0]\n        }\n      });\n    }).catch(error => {\n      if (error.status === 205) {\n        toast.warn(error.message);\n      } else {\n        toast.error(error.message);\n      }\n    });\n  }\n\n  onLogout() {\n    const inputData = {\n      userinfo: this.props.Login.userInfo,\n      scomments: this.props.intl.formatMessage({\n        id: \"IDS_LOGOUT\"\n      }),\n      sauditaction: \"IDS_LOGOUT\"\n    };\n    this.props.logOutAuditAction(inputData, this.props.Login.languageList);\n  }\n\n  render() {\n    const {\n      susername,\n      suserrolename,\n      nuserrole,\n      nlogintypecode,\n      ssitename\n    } = this.props.Login.userInfo;\n    const {\n      deputyUser,\n      userMultiRole,\n      isDeputyLogin,\n      userImagePath,\n      settings,\n      profileColor\n    } = this.props.Login;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AtHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      className: \"p-0\",\n      bg: \"light\",\n      fixed: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavPrimaryHeader, {\n      className: \"at-nav-brand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, this.props.Login && this.props.Login.displayName ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.Login.displayName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }) : \"\")), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n      \"aria-controls\": \"basic-navbar-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      className: \"d-flex align-items-center justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, this.props.showSearch ? /*#__PURE__*/React.createElement(DashboardIcon, {\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, this.props.searchBar)) : \"\", /*#__PURE__*/React.createElement(DashboardIcon, {\n      className: \"position-relative topbar-search  mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, this.props.showSearch ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-icon search-icon-header position-absolute search-close-icon\",\n      onClick: this.props.layOutGetHomeCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-times\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 138\n      }\n    })) : /*#__PURE__*/React.createElement(SearchIcon, {\n      className: \"search-icon search-icon-header position-absolute zoom\",\n      onClick: this.props.toggleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(DashboardIcon, {\n      className: \"position-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fa_stack fa-2x the-wrapper\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ALERTS\"\n      }) // data-for=\"tooltip-grid-wrap\"\n      ,\n      onClick: this.openAlert,\n      class: \"zoom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faBell,\n      style: {\n        'font-size': '26px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon icon_Badge position-absolute\",\n      style: {\n        \"width\": this.state.alert && this.state.alert.length > 9 ? \"52%\" : \"46%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, this.state.alert && this.state.alert.length > 0 ? /*#__PURE__*/React.createElement(Badge, {\n      pill: true,\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 23\n      }\n    }, this.state.alert && this.state.alert.length) : \"\")), /*#__PURE__*/React.createElement(DashboardIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DASHBOARD\"\n      }) // data-for=\"tooltip-grid-wrap\" \n      ,\n      onClick: this.openDashBoard,\n      className: \"zoom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChartPie,\n      \"data-tip\": \"Dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(NavDropdown, {\n      className: \"no-arrow\",\n      alignRight: true,\n      title: /*#__PURE__*/React.createElement(Media, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(ProfileImage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }\n      }, settings && settings[5] && userImagePath && userImagePath !== \"\" ? /*#__PURE__*/React.createElement(Image, {\n        src: settings[5] + userImagePath,\n        alt: \"avatar\",\n        className: \"rounded-circle mr-2\",\n        width: \"36\",\n        height: \"36\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(Image, {\n        className: \"rounded-circle mr-2\",\n        src: createImageFromInitials(32, susername ? susername.charAt(0).toUpperCase() : \"\", profileColor),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 98\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"profile-img-block pt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ProfileImage, {\n      className: \"mx-3 mb-3 pt-2 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, settings && settings[5] && userImagePath && userImagePath !== \"\" ? /*#__PURE__*/React.createElement(Image, {\n      src: settings[5] + userImagePath,\n      alt: \"avatar\",\n      className: \"profile-img rounded-circle mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(Image, {\n      className: \"profile-img rounded-circle mr-2\",\n      src: createImageFromInitials(32, susername ? susername.charAt(0).toUpperCase() : \"\", profileColor),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 89\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-block text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"user-name d-block mb-1\",\n      \"data-tip\": susername,\n      \"data-place\": \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 23\n      }\n    }, susername), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"role d-block mb-1\",\n      \"data-tip\": suserrolename,\n      \"data-place\": \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 23\n      }\n    }, suserrolename), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"role d-block mb-3\",\n      \"data-tip\": ssitename,\n      \"data-place\": \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 23\n      }\n    }, ssitename)), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"dropdown-divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    })), userMultiRole && userMultiRole.length > 0 && /*#__PURE__*/React.createElement(Dropdown, {\n      as: NavItem,\n      drop: \"left\",\n      className: \"ml-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      as: NavLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUserCog,\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CHANGEROLE\",\n      defaultMessage: \"Change Role\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 23\n      }\n    }, userMultiRole.map((item, index) => {\n      return /*#__PURE__*/React.createElement(Dropdown.Item, {\n        key: `roleindex_${index}`,\n        onClick: () => this.submitChangeRole(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"role-change d-block\",\n        \"data-tip\": item.suserrolename,\n        \"data-place\": \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 115\n        }\n      }, item.suserrolename));\n    }))), !isDeputyLogin && deputyUser && deputyUser.length > 0 && /*#__PURE__*/React.createElement(Dropdown, {\n      as: NavItem,\n      drop: \"left\",\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      as: NavLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUsersCog,\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CHANGEOWNER\",\n      defaultMessage: \"Change Owner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 23\n      }\n    }, this.props.Login.deputyUser.map((item, index) => {\n      return item.lstUserMultiDeputy && item.lstUserMultiDeputy.length > 1 ? /*#__PURE__*/React.createElement(Dropdown, {\n        as: NavItem,\n        drop: \"left\",\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        as: NavLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 33\n        }\n      }, `${item.sdeputyname}[${item.sdeputyid}]-${item.suserrolename}`), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 33\n        }\n      }, item.lstUserMultiDeputy.map((role, index) => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          key: `roleIndex_${index}`,\n          onClick: () => this.submitChangeOwner(item, role),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 44\n          }\n        }, role.suserrolename);\n      }))) : /*#__PURE__*/React.createElement(Dropdown.Item, {\n        key: `deptuserindex_${index}`,\n        onClick: () => this.submitChangeOwner(item, item.lstUserMultiDeputy[0]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 33\n        }\n      }, item.sdeputyname + \"[\" + item.sdeputyid + \"]\" + \"-\" + item.suserrolename);\n    }))), nlogintypecode && nlogintypecode === LOGINTYPE.INTERNAL && !isDeputyLogin && /*#__PURE__*/React.createElement(NavDropdown.Item, {\n      onClick: () => this.props.getPassWordPolicy(nuserrole),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faKey,\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CHANGEPASSWORD\",\n      defaultMessage: \"Change Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(NavDropdown.Item, {\n      onClick: () => this.onLogout(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPowerOff,\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_LOGOUT\",\n      defaultMessage: \"Logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 23\n      }\n    }))))))), /*#__PURE__*/React.createElement(PortalModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SliderPage, {\n      show: this.state.showDashboard,\n      nflag: this.state.nflag,\n      closeModal: this.openDashBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }\n    })), this.props.Login.openCPModal && this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openCPModal,\n      closeModal: this.closeModal,\n      loginoperation: true,\n      inputParam: {},\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onChangePassword,\n      selectedRecord: this.state.createPwdRecord || {},\n      mandatoryFields: this.mandatoryFieldFunction(),\n      addComponent: /*#__PURE__*/React.createElement(ChangePassWord, {\n        sloginid: this.props.Login.userInfo.sloginid,\n        createPwdRecord: this.state.createPwdRecord,\n        msg: fnPassMessage(this.props.Login.passwordPolicy),\n        onInputChange: event => this.onInputChange(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  onInputChange(event) {\n    const createPwdRecord = this.state.createPwdRecord || {};\n    createPwdRecord[event.target.name] = event.target.value;\n    this.setState({\n      createPwdRecord\n    });\n  }\n\n  mandatoryFieldFunction() {\n    let mandatoryField = [{\n      \"idsName\": \"IDS_OLDPASSWORD\",\n      \"dataField\": \"soldpassword\",\n      \"mandatory\": false\n    }, {\n      \"idsName\": \"IDS_NEWPASSWORD\",\n      \"dataField\": \"snewpassword\",\n      \"mandatory\": false\n    }, {\n      \"idsName\": \"IDS_CONFIRMPASSWORD\",\n      \"dataField\": \"sconfirmpassword\",\n      \"mandatory\": true\n    }];\n    return mandatoryField;\n  }\n\n  componentDidUpdate(prevProps) {\n    //   if (this.props.Login.isDeputyLogin === true) {\n    //   if (this.props.Login.navigation === \"home\") {\n    //      this.props.history.push('/');\n    //  }\n    // }\n    if (this.props.Login.createPwdRecord !== prevProps.Login.createPwdRecord) {\n      this.setState({\n        createPwdRecord: this.props.Login.createPwdRecord\n      });\n    }\n\n    if (this.props.Login.alert !== prevProps.Login.alert) {\n      this.setState({\n        alert: this.props.Login.alert\n      });\n    }\n  } // componentWillUnmount() {\n  //   clearInterval(this.interval);\n  // }\n\n\n}\n\nexport default connect(mapStateToProps, {\n  getChangeUserRole,\n  submitChangeRole,\n  getPassWordPolicy,\n  updateStore,\n  changepassword,\n  changeOwner,\n  logOutAuditAction,\n  getSelectedAlert,\n  getListAlert\n})(injectIntl(Header));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/header/header.component.jsx"],"names":["React","connect","FormattedMessage","injectIntl","Navbar","Nav","Dropdown","Image","Media","NavLink","NavDropdown","NavItem","Badge","toast","getChangeUserRole","submitChangeRole","getPassWordPolicy","updateStore","changepassword","changeOwner","logOutAuditAction","getListAlert","rsapi","AtHeader","NavPrimaryHeader","ProfileImage","DashboardIcon","faSearch","faTimes","SlideOutModal","ChangePassWord","DEFAULT_RETURN","changePasswordValidation","fnPassMessage","LOGINTYPE","PortalModal","SliderPage","FontAwesomeIcon","faChartPie","faKey","faPowerOff","faUserCog","faUsersCog","createImageFromInitials","getSelectedAlert","faBell","mapStateToProps","state","Login","Header","Component","constructor","props","openAlert","setState","showDashboard","nflag","openQuickSetting","quickSettingOpen","openDashBoard","submitChangeOwner","item","role","parameterInfo","typeName","data","menuDesign","navigation","inputData","nuserrolecode","suserrolename","nusercode","sdeputyid","userinfo","userInfo","onChangePassword","createPwdRecord","returnMsg","passwordPolicy","sloginid","inputParam","spassword","snewpassword","trim","sOldPassword","soldpassword","nusersitecode","isPasswordExpiry","info","closeModal","updateInfo","openCPModal","roleItem","nusermultisitecode","slanguagetypecode","nusermultirolecode","nmastersitecode","nlogintypecode","show","alert","sliderOpen","valueOf","onChangeRole","post","then","response","responseData","UserMultiRole","label","value","catch","error","status","warn","message","onLogout","scomments","intl","formatMessage","id","sauditaction","languageList","render","susername","nuserrole","ssitename","deputyUser","userMultiRole","isDeputyLogin","userImagePath","settings","profileColor","displayName","showSearch","searchBar","layOutGetHomeCancel","toggleSearch","length","charAt","toUpperCase","map","index","lstUserMultiDeputy","sdeputyname","INTERNAL","screenName","mandatoryFieldFunction","event","onInputChange","target","name","mandatoryField","componentDidUpdate","prevProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Navbar, Nav, Dropdown, Image, Media, NavLink, NavDropdown, NavItem, Badge } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { getChangeUserRole, submitChangeRole, getPassWordPolicy, updateStore, changepassword, changeOwner, logOutAuditAction, getListAlert } from '../../actions'\r\nimport rsapi from '../../rsapi';\r\nimport { AtHeader, NavPrimaryHeader, ProfileImage, DashboardIcon } from '../header/header.styles';\r\nimport { faSearch,faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport '../../assets/styles/login.css';\r\n//import { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, MediaSubHeaderText, SearchIcon, ContentPanel } from '../../components/App.styles';\r\nimport { ReactComponent as SearchIcon } from '../../assets/image/icon-search.svg';\r\nimport SlideOutModal from '../slide-out-modal/SlideOutModal';\r\nimport ChangePassWord from '../../pages/Login/ChangePassWord';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { changePasswordValidation, fnPassMessage } from '../../pages/Login/LoginCommonFunction';\r\nimport { LOGINTYPE } from '../Enumeration';\r\nimport PortalModal from '../../PortalModal';\r\nimport SliderPage from '../slider-page/slider-page-component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChartPie, faKey, faPowerOff, faUserCog, faUsersCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { createImageFromInitials } from './headerutils';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport { getSelectedAlert } from '../../actions/AlertViewAction';\r\nimport { faBell } from '@fortawesome/free-regular-svg-icons';\r\nimport '../../pages/dashboardtypes/Alert.css'\r\n// import ReactTooltip from 'react-tooltip';\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    Login: state.Login\r\n  }\r\n}\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      createPwdRecord: {},\r\n      alert: [],\r\n      sliderOpen: false,\r\n      nflag: 2,\r\n      quickSettingOpen: false.valueOf,\r\n      showDashboard: false\r\n    }\r\n  }\r\n\r\n\r\n  onChangeRole() {\r\n    rsapi.post(\"/login/getchangerole\", { \"userInfo\": this.props.Login.userInfo })\r\n      .then(response => {\r\n        const responseData = response.data;\r\n        this.setState({\r\n          show: true,\r\n          UserMultiRole: responseData.UserMultiRole,\r\n          nusermultirolecode: {\r\n            label: responseData.UserMultiRole[0].suserrolename, value: responseData.UserMultiRole[0].nusermultirolecode,\r\n            item: responseData.UserMultiRole[0]\r\n          }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.status === 205) {\r\n          toast.warn(error.message)\r\n        } else {\r\n          toast.error(error.message)\r\n        }\r\n      });\r\n  }\r\n\r\n  onLogout() {\r\n    const inputData = {\r\n      userinfo: this.props.Login.userInfo,\r\n      scomments: this.props.intl.formatMessage({ id: \"IDS_LOGOUT\" }),\r\n      sauditaction: \"IDS_LOGOUT\"\r\n    };\r\n    this.props.logOutAuditAction(inputData, this.props.Login.languageList);\r\n  }\r\n\r\n  openAlert = () => {\r\n    this.setState({ showDashboard: !this.state.showDashboard, nflag: 2 });\r\n  }\r\n\r\n  openQuickSetting = () => {\r\n    this.setState({ quickSettingOpen: !this.state.quickSettingOpen })\r\n  }\r\n\r\n  openDashBoard = () => {\r\n    this.setState({ showDashboard: !this.state.showDashboard, nflag: 1 })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { susername, suserrolename, nuserrole, nlogintypecode, ssitename } = this.props.Login.userInfo;\r\n    const { deputyUser, userMultiRole, isDeputyLogin, userImagePath, settings, profileColor } = this.props.Login;\r\n\r\n    return (\r\n      <>\r\n        {/* <ReactTooltip place=\"bottom\" id=\"tooltip-grid-wrap\" globalEventOff='click' /> */}\r\n        <AtHeader>\r\n          <Navbar className=\"p-0\" bg=\"light\" fixed=\"top\">\r\n            <Navbar.Brand>\r\n              <NavPrimaryHeader className=\"at-nav-brand\">\r\n                {this.props.Login && this.props.Login.displayName ?\r\n                  <FormattedMessage id={this.props.Login.displayName} /> : \"\"}\r\n              </NavPrimaryHeader>\r\n            </Navbar.Brand>\r\n            {/* <div style={{ \"margin-left\": this.props.Login.displayName!==\"\"?\"-20%\":\"-40px\"}}>\r\n            {this.props.searchBar}\r\n          </div> */}\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"d-flex align-items-center justify-content-end\">\r\n              {/* <ReactTooltip/> */}\r\n\r\n              {/* <Nav>\r\n                <Nav.Item onClick={this.openDashBoard}>\r\n                  <Image src={DashBoard} alt=\"DashBoard\" width=\"34\" height=\"34\" />\r\n                </Nav.Item>\r\n              </Nav> */}\r\n              <Nav>\r\n              {this.props.showSearch ?\r\n            <DashboardIcon className='mr-2'> \r\n                  <span>\r\n                  {this.props.searchBar}\r\n            </span>\r\n           </DashboardIcon> : \"\" \r\n            \r\n          \r\n            }\r\n            <DashboardIcon className='position-relative topbar-search  mr-1'>\r\n            {this.props.showSearch ?\r\n            <div className=\"search-icon search-icon-header position-absolute search-close-icon\" onClick={this.props.layOutGetHomeCancel}><i class=\"fa fa-times\" aria-hidden=\"true\"></i></div>:\r\n            <SearchIcon className=\"search-icon search-icon-header position-absolute zoom\" onClick={this.props.toggleSearch} \r\n           >\r\n            <FontAwesomeIcon icon={faSearch} />\r\n           </SearchIcon>\r\n            }  \r\n            \r\n           \r\n           </DashboardIcon>\r\n\t\t   \r\n                {/* <ListView\r\n              data={alert}\r\n              openslide={this.openDashBoard}\r\n              getSelectedAlert={getSelectedAlert}\r\n              userInfo={this.props.Login.userInfo}\r\n              > */}\r\n                {/* </ListView> */}\r\n                {/* <Button className=\"btn btn-circle outline-grey ml-2\" style={{ \"border-color\": \" rgba(187, 194, 203, 0.41)!important\" }} variant=\"link\" role=\"button\"\r\n                                        title={this.props.intl.formatMessage({ id: \"IDS_ALERT\" })}\r\n                                        onClick={this.openAlert}>\r\n                                        <FontAwesomeIcon icon={faBell}  style={{ \"width\": \"0.6!important\" }}/>\r\n                                        <div style={{\"margin-bottom\":\"11px\"}}>\r\n                  <Badge pill variant=\"secondary\">{alert&&alert.length}</Badge>\r\n                  </div>\r\n                   </Button> */}\r\n                <DashboardIcon className='position-relative'>\r\n                  {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                  {/* <div onClick={this.openAlert}> */}\r\n\r\n                  <div className=\"fa_stack fa-2x the-wrapper\" data-tip={this.props.intl.formatMessage({ id: \"IDS_ALERTS\" })}\r\n                    // data-for=\"tooltip-grid-wrap\"\r\n                    onClick={this.openAlert} class=\"zoom\">\r\n                    <FontAwesomeIcon icon={faBell} style={{ 'font-size': '26px' }} />\r\n                  </div>\r\n                  <div className=\"icon icon_Badge position-absolute\" style={{ \"width\": this.state.alert && this.state.alert.length > 9 ? \"52%\" : \"46%\" }}>\r\n                    {/* <div style={{ \"margin-bottom\": \"137px\", \"font-size\": \"40%\" }}> */}\r\n                    {this.state.alert && this.state.alert.length > 0 ?\r\n                      <Badge pill variant=\"danger\">{this.state.alert && this.state.alert.length}</Badge>\r\n                      : \"\"}\r\n\r\n                    {/* </div> */}\r\n                    {/* </div> */}\r\n\r\n                  </div>\r\n                  {/* </Tooltip> */}\r\n                </DashboardIcon>\r\n                <DashboardIcon>\r\n                  {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                  <Nav.Link data-tip={this.props.intl.formatMessage({ id: \"IDS_DASHBOARD\" })}\r\n                    // data-for=\"tooltip-grid-wrap\" \r\n                    onClick={this.openDashBoard} className=\"zoom\">\r\n                    <FontAwesomeIcon icon={faChartPie} data-tip=\"Dashboard\" ></FontAwesomeIcon>\r\n                  </Nav.Link>\r\n                  {/* </Tooltip> */}\r\n                </DashboardIcon>\r\n                {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n\r\n                <NavDropdown className=\"no-arrow\" alignRight title={<Media >\r\n                  {/* {userImagePath === \"\" ? */}\r\n                  <ProfileImage>\r\n                    {settings && settings[5] && userImagePath && userImagePath !== \"\" ?\r\n                      <Image src={settings[5] + userImagePath}\r\n                        alt=\"avatar\" className=\"rounded-circle mr-2\" width=\"36\" height=\"36\" /> : <Image className=\"rounded-circle mr-2\"\r\n                          src={createImageFromInitials(32, susername ? susername.charAt(0).toUpperCase() : \"\", profileColor)}\r\n                      />}\r\n                  </ProfileImage>\r\n                  {/* {<Media.Body bsPrefix=\"media-profileinfo\">\r\n                      <span className=\"user-name user-role\" data-tip={susername} data-place=\"bottom\">{susername}</span>\r\n                      <span className=\"role user-role\" data-tip={suserrolename} data-place=\"bottom\">{suserrolename}</span>\r\n                    </Media.Body> } */}\r\n                  {/* :\r\n                    <Image src={userImagePath === \"\" ? userImg : fileViewURL + \"/SharedFolder/UserProfile/\" + userImagePath}\r\n                      alt=\"avatar\" className=\"img-profile rounded-circle mr-2\" />\r\n                  } */}\r\n\r\n                  {/* <FontAwesomeIcon className=\"align-self-center down-icon ml-2\" icon={faChevronDown} /> */}\r\n                </Media>}>\r\n                  {/* <ProfileLayer>\r\n                    <ProfileImageLayer>\r\n                      {userImagePath === \"\" ?\r\n                        <Image className=\"rounded-circle mr-2\"\r\n                          src={createImageFromInitials(80, susername ? susername.charAt(0).toUpperCase() : \"\", profileColor)}\r\n                        /> : <Image src={fileViewURL + \"/SharedFolder/UserProfile/\" + userImagePath}\r\n                          alt=\"avatar\" className=\"rounded-circle mr-2\" width=\"80\" height=\"80\" />}\r\n                    </ProfileImageLayer>\r\n                    <Profile>\r\n                      <ProfileName>{susername}</ProfileName>\r\n                      <ProfileRole>{suserrolename}</ProfileRole>\r\n                    </Profile>\r\n                  </ProfileLayer> */}\r\n                  {/* <Media className=\"dropdown-menu-animated\">\r\n                  <ProfileImage>\r\n                            {settings && settings[5] && userImagePath && userImagePath !== \"\" ?\r\n                              <Image src={settings[5] + userImagePath}\r\n                                alt=\"avatar\" className=\"ml-2\" width=\"36\" height=\"36\" /> : <Image className=\"rounded-circle ml-2 mr-3\"\r\n                                  style = {{width:\"3rem\",height:\"3rem\"}} src={createImageFromInitials(32, susername ? susername.charAt(0).toUpperCase() : \"\", profileColor)}\r\n                              />}\r\n                        </ProfileImage>\r\n                    <Media.Body bsPrefix=\"media-profileinfo\">\r\n                      <span className=\"user-name user-role\" data-tip={susername} data-place=\"bottom\">{susername}</span>\r\n                      <span className=\"role user-role\" data-tip={suserrolename} data-place=\"bottom\">{suserrolename}</span>\r\n                    </Media.Body>\r\n                    </Media> */}\r\n                  <div class=\"profile-img-block pt-2\">\r\n                    <ProfileImage className=\"mx-3 mb-3 pt-2 text-center\">\r\n                      {settings && settings[5] && userImagePath && userImagePath !== \"\" ?\r\n                        <Image src={settings[5] + userImagePath}\r\n                          alt=\"avatar\" className=\"profile-img rounded-circle mr-2\" /> : <Image className=\"profile-img rounded-circle mr-2\"\r\n                            src={createImageFromInitials(32, susername ? susername.charAt(0).toUpperCase() : \"\", profileColor)}\r\n                        />}\r\n                    </ProfileImage>\r\n\r\n                    <div class=\"d-block text-center\">\r\n                      <span className=\"user-name d-block mb-1\" data-tip={susername} data-place=\"bottom\">{susername}</span>\r\n                      <span className=\"role d-block mb-1\" data-tip={suserrolename} data-place=\"bottom\">{suserrolename}</span>\r\n                      <span className=\"role d-block mb-3\" data-tip={ssitename} data-place=\"bottom\">{ssitename}</span>\r\n                    </div>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                  </div>\r\n                  {userMultiRole && userMultiRole.length > 0 &&\r\n                    <Dropdown as={NavItem} drop={\"left\"} className=\"ml-2 \">\r\n                      <Dropdown.Toggle as={NavLink}>\r\n                        <FontAwesomeIcon icon={faUserCog} className=\"mr-2\" />\r\n                        <FormattedMessage id=\"IDS_CHANGEROLE\" defaultMessage=\"Change Role\" />\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu>\r\n                        {userMultiRole.map((item, index) => {\r\n                          return (\r\n                            <Dropdown.Item key={`roleindex_${index}`} onClick={() => this.submitChangeRole(item)}><span className=\"role-change d-block\" data-tip={item.suserrolename} data-place=\"bottom\">{item.suserrolename}</span></Dropdown.Item>\r\n                          )\r\n                        })}\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>}\r\n                  {!isDeputyLogin && deputyUser && deputyUser.length > 0 &&\r\n                    <Dropdown as={NavItem} drop={\"left\"} className=\"ml-2\">\r\n                      <Dropdown.Toggle as={NavLink}>\r\n                        <FontAwesomeIcon icon={faUsersCog} className=\"mr-2\" />\r\n                        <FormattedMessage id=\"IDS_CHANGEOWNER\" defaultMessage=\"Change Owner\" />\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu>\r\n                        {this.props.Login.deputyUser.map((item, index) => {\r\n                          return (\r\n                            item.lstUserMultiDeputy && item.lstUserMultiDeputy.length > 1 ?\r\n                              <Dropdown as={NavItem} drop={\"left\"} className=\"ml-2\">\r\n                                <Dropdown.Toggle as={NavLink}>{`${item.sdeputyname}[${item.sdeputyid}]-${item.suserrolename}`}</Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                  {item.lstUserMultiDeputy.map((role, index) => {\r\n                                    return <Dropdown.Item key={`roleIndex_${index}`} onClick={() => this.submitChangeOwner(item, role)}>{role.suserrolename}</Dropdown.Item>\r\n                                  })}\r\n                                </Dropdown.Menu>\r\n                              </Dropdown>\r\n                              : <Dropdown.Item key={`deptuserindex_${index}`} onClick={() => this.submitChangeOwner(item, item.lstUserMultiDeputy[0])}>{item.sdeputyname + \"[\" + item.sdeputyid + \"]\" + \"-\" + item.suserrolename}</Dropdown.Item>\r\n                          )\r\n                        })}\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  }\r\n                  {nlogintypecode && nlogintypecode === LOGINTYPE.INTERNAL && !isDeputyLogin &&\r\n                    <NavDropdown.Item onClick={() => this.props.getPassWordPolicy(nuserrole)}>\r\n                      <FontAwesomeIcon icon={faKey} className=\"mr-2\" />\r\n                      <FormattedMessage id=\"IDS_CHANGEPASSWORD\" defaultMessage=\"Change Password\" />\r\n                    </NavDropdown.Item>}\r\n                  {/* <NavDropdown.Item>\r\n                      <FormattedMessage id=\"IDS_LOCK\" defaultMessage=\"Lock\" />\r\n                    </NavDropdown.Item> */}\r\n                    <NavDropdown.Item onClick={() => this.onLogout()}>\r\n                    <FontAwesomeIcon icon={faPowerOff} className=\"mr-2\"/>\r\n                      <FormattedMessage id=\"IDS_LOGOUT\" defaultMessage=\"Logout\" />\r\n                    </NavDropdown.Item>\r\n\r\n                </NavDropdown>\r\n                {/* </Tooltip> */}\r\n                {/* <PortalModal>\r\n                  <SliderPage sliderOpen={this.state.sliderOpen} openDashBoard={this.openDashBoard}\r\n                    component={<h1>Dash Board</h1>}>\r\n                  </SliderPage>\r\n                </PortalModal>\r\n\r\n                <PortalModal>\r\n                  <SliderPage sliderOpen={this.state.quickSettingOpen} openQuickSetting={this.openQuickSetting}\r\n                    component={<h1>Alert</h1>}>\r\n                  </SliderPage>\r\n                </PortalModal> */}\r\n\r\n                {/* <Dropdown alignRight className=\"no-arrow\">\r\n\r\n                  <Dropdown.Toggle id=\"dropdown-basic\" as={NavLink}>\r\n                    <Media>\r\n                      <Image  src={userImg} alt=\"avatar\" className=\"img-profile rounded-circle mr-2\" />\r\n                        <Media.Body>\r\n                          <span className=\"user-name\">{susername}</span>\r\n                          <span className=\"role\">{suserrolename}</span>\r\n                        </Media.Body>\r\n                        <FontAwesomeIcon className=\"align-self-center down-icon ml-2\" icon={faChevronDown} />\r\n                    </Media>\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    {this.props.Login.nchangerolecount > 0 && \r\n                    <>\r\n                      <Dropdown.Item onClick={()=>this.props.getChangeUserRole(this.props.Login.userInfo)}>\r\n                          <FormattedMessage id=\"IDS_CHANGEROLE\" defaultMessage=\"Change Role\" />\r\n                      </Dropdown.Item>\r\n                      <Dropdown as={NavItem} drop={\"left\"}>\r\n                        <Dropdown.Toggle as={NavLink}>\r\n                          <FormattedMessage id=\"IDS_CHANGEROLE\" defaultMessage=\"Change Role\" />\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                          <Dropdown.Item>Hello there!</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                      </>}\r\n                    {this.props.Login.ndeputyCount > 0 && \r\n                      <Dropdown.Item onClick={ () => this.onChangeOwner() }>\r\n                          <FormattedMessage id=\"IDS_CHANGEOWNER\" defaultMessage=\"Change Owner\" />\r\n                      </Dropdown.Item>}\r\n                      <Dropdown.Item>\r\n                          <FormattedMessage id=\"IDS_CHANGEPASSWORD\" defaultMessage=\"Change Password\" />\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item>\r\n                          <FormattedMessage id=\"IDS_LOCK\" defaultMessage=\"Lock\" />\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item onClick={ () => this.onLogout()}>\r\n                          <FormattedMessage id=\"IDS_LOGOUT\" defaultMessage=\"Log Out\" />\r\n                      </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown> */}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          \r\n          </Navbar>\r\n       \r\n        </AtHeader>\r\n\r\n        <PortalModal>\r\n          <SliderPage show={this.state.showDashboard} nflag={this.state.nflag} closeModal={this.openDashBoard} />\r\n        </PortalModal>\r\n        {this.props.Login.openCPModal && this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" &&\r\n          <SlideOutModal\r\n            show={this.props.Login.openCPModal}\r\n            closeModal={this.closeModal}\r\n            loginoperation={true}\r\n            inputParam={{}}\r\n            screenName={this.props.Login.screenName}\r\n            onSaveClick={this.onChangePassword}\r\n            selectedRecord={this.state.createPwdRecord || {}}\r\n            mandatoryFields={this.mandatoryFieldFunction()}\r\n            addComponent={\r\n              <ChangePassWord\r\n                sloginid={this.props.Login.userInfo.sloginid}\r\n                createPwdRecord={this.state.createPwdRecord}\r\n                msg={fnPassMessage(this.props.Login.passwordPolicy)}\r\n                onInputChange={(event) => this.onInputChange(event)}\r\n              />\r\n            }\r\n          />}\r\n      </>\r\n    );\r\n  }\r\n\r\n  submitChangeOwner = (item, role) => {\r\n    const parameterInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { menuDesign: [], navigation: \"\" }\r\n    }\r\n    this.props.updateStore(parameterInfo);\r\n    const inputData = {\r\n      nuserrolecode: item.nuserrolecode,\r\n      suserrolename: item.suserrolename,\r\n      nusercode: item.nusercode,\r\n      sdeputyid: item.sdeputyid,\r\n      userinfo: this.props.Login.userInfo\r\n    }\r\n    this.props.changeOwner(inputData);\r\n  }\r\n\r\n  onChangePassword = () => {\r\n    const createPwdRecord = this.state.createPwdRecord;\r\n    const returnMsg = changePasswordValidation(createPwdRecord, this.props.Login.passwordPolicy, this.props.Login.userInfo.sloginid);\r\n    if (returnMsg === 0) {\r\n      const inputParam = {\r\n        spassword: createPwdRecord.snewpassword.trim(),\r\n        sOldPassword: createPwdRecord.soldpassword.trim(),\r\n        nusersitecode: this.props.Login.userInfo.nusersitecode,\r\n        isPasswordExpiry: false,\r\n        userInfo: this.props.Login.userInfo\r\n      };\r\n      this.props.changepassword(inputParam);\r\n    } else {\r\n      toast.info(returnMsg);\r\n    }\r\n  }\r\n\r\n  onInputChange(event) {\r\n    const createPwdRecord = this.state.createPwdRecord || {};\r\n    createPwdRecord[event.target.name] = event.target.value;\r\n    this.setState({ createPwdRecord });\r\n  }\r\n\r\n  closeModal = () => {\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openCPModal: false }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n  }\r\n\r\n  mandatoryFieldFunction() {\r\n    let mandatoryField = [\r\n      { \"idsName\": \"IDS_OLDPASSWORD\", \"dataField\": \"soldpassword\", \"mandatory\": false },\r\n      { \"idsName\": \"IDS_NEWPASSWORD\", \"dataField\": \"snewpassword\", \"mandatory\": false },\r\n      { \"idsName\": \"IDS_CONFIRMPASSWORD\", \"dataField\": \"sconfirmpassword\", \"mandatory\": true }\r\n    ]\r\n    return mandatoryField;\r\n  }\r\n\r\n  submitChangeRole = (roleItem) => {\r\n    const parameterInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { menuDesign: [], navigation: \"\" }\r\n    }\r\n    this.props.updateStore(parameterInfo);\r\n    const userInfo = this.props.Login.userInfo;\r\n    const inputParam = {\r\n      nusermultisitecode: userInfo.nusersitecode,\r\n      slanguagetypecode: userInfo.slanguagetypecode,\r\n      nusermultirolecode: roleItem.nusermultirolecode,\r\n      nuserrolecode: roleItem.nuserrolecode,\r\n      nmastersitecode: userInfo.nmastersitecode,\r\n      nlogintypecode: userInfo.nlogintypecode,\r\n      userinfo: userInfo\r\n    }\r\n    this.props.submitChangeRole(inputParam);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    //   if (this.props.Login.isDeputyLogin === true) {\r\n\r\n    //   if (this.props.Login.navigation === \"home\") {\r\n    //      this.props.history.push('/');\r\n    //  }\r\n    // }\r\n    if (this.props.Login.createPwdRecord !== prevProps.Login.createPwdRecord) {\r\n      this.setState({ createPwdRecord: this.props.Login.createPwdRecord })\r\n    }\r\n    if (this.props.Login.alert !== prevProps.Login.alert) {\r\n      this.setState({ alert: this.props.Login.alert })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // componentWillUnmount() {\r\n  //   clearInterval(this.interval);\r\n  // }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getChangeUserRole, submitChangeRole, getPassWordPolicy,\r\n  updateStore, changepassword, changeOwner, logOutAuditAction, getSelectedAlert, getListAlert\r\n})(injectIntl(Header));"]},"metadata":{},"sourceType":"module"}