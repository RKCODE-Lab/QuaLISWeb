{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\SampleInfoView.jsx\";\nimport React from 'react';\nimport { Card, Row, Col, FormGroup, FormLabel } from 'react-bootstrap';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { ReadOnlyText } from '../../components/App.styles';\nimport { designProperties } from '../../components/Enumeration';\n\nclass SampleInfoView extends React.Component {\n  render() {\n    const jsondata = this.props.data;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }\n    }, this.props.SingleItem && this.props.SingleItem.map((field, index) => /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: field[designProperties.LABEL][this.props.userInfo.slanguagetypecode],\n      message: field[designProperties.LABEL][this.props.userInfo.slanguagetypecode],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 41\n      }\n    }, jsondata[field[designProperties.VALUE]] || jsondata.jsondata[field[designProperties.VALUE]].label || jsondata.jsondata[field[designProperties.VALUE]] || \"-\"))))))));\n  }\n\n}\n\nexport default injectIntl(SampleInfoView);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/approval/SampleInfoView.jsx"],"names":["React","Card","Row","Col","FormGroup","FormLabel","injectIntl","FormattedMessage","ReadOnlyText","designProperties","SampleInfoView","Component","render","jsondata","props","data","SingleItem","map","field","index","LABEL","userInfo","slanguagetypecode","VALUE","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,SAAzB,EAAoCC,SAApC,QAAqD,iBAArD;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;AACA,MAAMC,cAAN,SAA6BV,KAAK,CAACW,SAAnC,CAA6C;AACzCC,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAC,KAAKC,KAAL,CAAWC,IAA1B;AACA,wBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWE,UAAX,IAAyB,KAAKF,KAAL,CAAWE,UAAX,CAAsBC,GAAtB,CAA0B,CAACC,KAAD,EAAOC,KAAP,kBAChD,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,GAAG,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAED,KAAK,CAACT,gBAAgB,CAACW,KAAlB,CAAL,CAA8B,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,iBAAlD,CAAtB;AAA4F,MAAA,OAAO,EAAEJ,KAAK,CAACT,gBAAgB,CAACW,KAAlB,CAAL,CAA8B,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,iBAAlD,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeT,QAAQ,CAACK,KAAK,CAACT,gBAAgB,CAACc,KAAlB,CAAN,CAAR,IACdV,QAAQ,CAACA,QAAT,CAAkBK,KAAK,CAACT,gBAAgB,CAACc,KAAlB,CAAvB,EAAiDC,KADnC,IAEfX,QAAQ,CAACA,QAAT,CAAkBK,KAAK,CAACT,gBAAgB,CAACc,KAAlB,CAAvB,CAFe,IAEmC,GAFlD,CAJJ,CADJ,CADsB,CAD9B,CADJ,CADJ,CADJ,CADJ;AAuBH;;AA1BwC;;AA6B7C,eAAejB,UAAU,CAACI,cAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport { Card, Row, Col, FormGroup, FormLabel } from 'react-bootstrap'\r\nimport { injectIntl, FormattedMessage } from 'react-intl'\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport { designProperties } from '../../components/Enumeration';\r\nclass SampleInfoView extends React.Component {\r\n    render() {\r\n        const jsondata=this.props.data\r\n        return (\r\n            <Card className=\"border-0\">\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        <Row>\r\n                            {this.props.SingleItem && this.props.SingleItem.map((field,index) =>\r\n                                <Col md={4} key={index}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>\r\n                                            <FormattedMessage id={field[designProperties.LABEL][this.props.userInfo.slanguagetypecode]} message={field[designProperties.LABEL][this.props.userInfo.slanguagetypecode]} />\r\n                                            </FormLabel>\r\n                                        <ReadOnlyText>{jsondata[field[designProperties.VALUE]]||\r\n                                         jsondata.jsondata[field[designProperties.VALUE]].label||\r\n                                        jsondata.jsondata[field[designProperties.VALUE]]||\"-\"}</ReadOnlyText>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default injectIntl(SampleInfoView);"]},"metadata":{},"sourceType":"module"}