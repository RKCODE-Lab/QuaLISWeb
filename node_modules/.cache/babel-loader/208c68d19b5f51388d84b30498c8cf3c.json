{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\testgroup\\\\TestGroupMaterialAccordion.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { ReadOnlyText } from '../../components/App.styles';\n\nconst TestGroupMaterialAccordion = props => {\n  const materialFieldName = [{\n    \"smaterialtypename\": \"IDS_MATERIALTYPE\"\n  }, {\n    \"smaterialcatname\": \"IDS_MATERIALCATEGORY\"\n  }, {\n    \"smaterialname\": \"IDS_MATERIAL\"\n  }, {\n    \"sremarks\": \"IDS_REMARKS\"\n  }];\n  const editMaterialId = props.controlMap && props.controlMap.has(\"EditTestMaterial\") && props.controlMap.get(\"EditTestMaterial\").ncontrolcode;\n  const deleteMaterialId = props.controlMap && props.controlMap.has(\"DeleteTestMaterial\") && props.controlMap.get(\"DeleteTestMaterial\").ncontrolcode;\n  const {\n    selectedMaterial,\n    userInfo,\n    userRoleControlRights\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2\",\n    hidden: userRoleControlRights.indexOf(editMaterialId) === -1,\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_EDIT\"\n    }),\n    onClick: () => props.getDataForEditTestMaterial(\"IDS_TESTGROUPMATERIAL\", \"update\", props.userInfo, editMaterialId, props.selectedRecord, props.masterData, \"ntestgrouptestmaterialcode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPencilAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_DELETE\"\n    }),\n    hidden: props.userRoleControlRights.indexOf(deleteMaterialId) === -1,\n    onClick: () => props.ConfirmDelete({\n      operation: 'delete',\n      screenName: 'IDS_TESTGROUPMATERIAL'\n    }, deleteMaterialId, props.selectedRecord),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, materialFieldName.map(item => {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }, props.intl.formatMessage({\n      id: Object.values(item)[0]\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, selectedMaterial[Object.keys(item)[0]] === \"\" ? '-' : selectedMaterial[Object.keys(item)[0]])));\n  })));\n};\n\nexport default injectIntl(TestGroupMaterialAccordion);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/testgroup/TestGroupMaterialAccordion.jsx"],"names":["React","injectIntl","faPencilAlt","faTrashAlt","FontAwesomeIcon","Row","Col","Nav","FormGroup","FormLabel","ReadOnlyText","TestGroupMaterialAccordion","props","materialFieldName","editMaterialId","controlMap","has","get","ncontrolcode","deleteMaterialId","selectedMaterial","userInfo","userRoleControlRights","indexOf","intl","formatMessage","id","getDataForEditTestMaterial","selectedRecord","masterData","ConfirmDelete","operation","screenName","map","item","Object","values","keys"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,mCAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,SAAxB,EAAmCC,SAAnC,QAAoD,iBAApD;AACA,SAASC,YAAT,QAA6B,6BAA7B;;AAEA,MAAMC,0BAA0B,GAAIC,KAAD,IAAW;AAE1C,QAAMC,iBAAiB,GAAG,CAAC;AAAE,yBAAqB;AAAvB,GAAD,EAC1B;AAAE,wBAAoB;AAAtB,GAD0B,EAE1B;AAAE,qBAAiB;AAAnB,GAF0B,EAG1B;AAAE,gBAAY;AAAd,GAH0B,CAA1B;AAOA,QAAMC,cAAc,GAAGF,KAAK,CAACG,UAAN,IAAoBH,KAAK,CAACG,UAAN,CAAiBC,GAAjB,CAAqB,kBAArB,CAApB,IAAgEJ,KAAK,CAACG,UAAN,CAAiBE,GAAjB,CAAqB,kBAArB,EAAyCC,YAAhI;AACA,QAAMC,gBAAgB,GAAGP,KAAK,CAACG,UAAN,IAAoBH,KAAK,CAACG,UAAN,CAAiBC,GAAjB,CAAqB,oBAArB,CAApB,IAAkEJ,KAAK,CAACG,UAAN,CAAiBE,GAAjB,CAAqB,oBAArB,EAA2CC,YAAtI;AAEA,QAAM;AAAEE,IAAAA,gBAAF;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA;AAA9B,MAAwDV,KAA9D;AACA,sBACI,uDACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,SAAS,EAAC,4BAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,SAAS,EAAC,kCAApB;AACI,IAAA,MAAM,EAAEU,qBAAqB,CAACC,OAAtB,CAA8BT,cAA9B,MAAkD,CAAC,CAD/D;AAEI,gBAAUF,KAAK,CAACY,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFd;AAGI,IAAA,OAAO,EAAE,MAAMd,KAAK,CAACe,0BAAN,CAAiC,uBAAjC,EAA0D,QAA1D,EAAoEf,KAAK,CAACS,QAA1E,EAAoFP,cAApF,EAAoGF,KAAK,CAACgB,cAA1G,EAA0HhB,KAAK,CAACiB,UAAhI,EAA4I,4BAA5I,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE3B,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,eAOI,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,SAAS,EAAC,oDAApB;AACI,gBAAUU,KAAK,CAACY,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADd;AAEI,IAAA,MAAM,EAAEd,KAAK,CAACU,qBAAN,CAA4BC,OAA5B,CAAoCJ,gBAApC,MAA0D,CAAC,CAFvE;AAGI,IAAA,OAAO,EAAE,MAAMP,KAAK,CAACkB,aAAN,CAAoB;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,UAAU,EAAE;AAAnC,KAApB,EAAkFb,gBAAlF,EAAoGP,KAAK,CAACgB,cAA1G,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEzB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAPJ,CADJ,CADJ,eAqBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKU,iBAAiB,CAACoB,GAAlB,CAAsBC,IAAI,IAAI;AAC3B,wBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYtB,KAAK,CAACY,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAES,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB;AAAN,KAAzB,CAAZ,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAed,gBAAgB,CAACe,MAAM,CAACE,IAAP,CAAYH,IAAZ,EAAkB,CAAlB,CAAD,CAAhB,KAAyC,EAAzC,GAA4C,GAA5C,GAAgDd,gBAAgB,CAACe,MAAM,CAACE,IAAP,CAAYH,IAAZ,EAAkB,CAAlB,CAAD,CAA/E,CAFJ,CADJ,CADJ;AAUH,GAXA,CAFL,CArBJ,CADJ;AA2CH,CAxDD;;AA0DA,eAAejC,UAAU,CAACU,0BAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\n\r\nconst TestGroupMaterialAccordion = (props) => {\r\n\r\n    const materialFieldName = [{ \"smaterialtypename\": \"IDS_MATERIALTYPE\" },\r\n    { \"smaterialcatname\": \"IDS_MATERIALCATEGORY\" },\r\n    { \"smaterialname\": \"IDS_MATERIAL\" },\r\n    { \"sremarks\": \"IDS_REMARKS\" }\r\n    ];\r\n\r\n\r\n    const editMaterialId = props.controlMap && props.controlMap.has(\"EditTestMaterial\") && props.controlMap.get(\"EditTestMaterial\").ncontrolcode;\r\n    const deleteMaterialId = props.controlMap && props.controlMap.has(\"DeleteTestMaterial\") && props.controlMap.get(\"DeleteTestMaterial\").ncontrolcode;\r\n\r\n    const { selectedMaterial, userInfo, userRoleControlRights } = props;\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12} className=\"d-flex justify-content-end\">\r\n                    <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                        hidden={userRoleControlRights.indexOf(editMaterialId) === -1}\r\n                        data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                        onClick={() => props.getDataForEditTestMaterial(\"IDS_TESTGROUPMATERIAL\", \"update\", props.userInfo, editMaterialId, props.selectedRecord, props.masterData, \"ntestgrouptestmaterialcode\")}>\r\n                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                    </Nav.Link>\r\n                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                        data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                        hidden={props.userRoleControlRights.indexOf(deleteMaterialId) === -1}\r\n                        onClick={() => props.ConfirmDelete({ operation: 'delete', screenName: 'IDS_TESTGROUPMATERIAL' }, deleteMaterialId, props.selectedRecord)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                    </Nav.Link>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n\r\n                {materialFieldName.map(item => {\r\n                    return (\r\n                        <Col md=\"12\">\r\n                            <FormGroup>\r\n                                <FormLabel>{props.intl.formatMessage({ id: Object.values(item)[0] })}</FormLabel>\r\n                                <ReadOnlyText>{selectedMaterial[Object.keys(item)[0]]===\"\"?'-':selectedMaterial[Object.keys(item)[0]]}</ReadOnlyText>\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n\r\n                    )\r\n                }\r\n                )}\r\n            </Row>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestGroupMaterialAccordion);\r\n"]},"metadata":{},"sourceType":"module"}