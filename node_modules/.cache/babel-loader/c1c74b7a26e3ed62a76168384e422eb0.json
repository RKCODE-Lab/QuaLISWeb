{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{getComboLabelValue}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{intl}from'../components/App';import{transactionStatus}from'./../components/Enumeration';export function openCourierModal(screenName,operation,primaryKeyName,masterData,userInfo,ncontrolcode){return function(dispatch){if(operation===\"create\"||operation===\"update\"){var Country=rsapi.post(\"/country/getCountry\",{\"userinfo\":userInfo});var urlArray=[];if(operation===\"create\"){urlArray=[Country];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedRecord={};selectedRecord[\"nstatus\"]=transactionStatus.ACTIVE;selectedRecord[\"ncouriercode\"]=0;dispatch({type:DEFAULT_RETURN,payload:{Country:response[0].data||[],operation:operation,screenName:screenName,selectedRecord:selectedRecord,openModal:true,ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch(initRequest(false));if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}};}export function fetchCourierById(editParam){return function(dispatch){var _rsapi$post;var URL1=rsapi.post('country/getCountry',{\"userinfo\":editParam.userInfo});var URL2=rsapi.post(\"courier/getActiveCourierById\",(_rsapi$post={},_defineProperty(_rsapi$post,editParam.primaryKeyField,editParam.primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",editParam.userInfo),_rsapi$post));dispatch(initRequest(true));Axios.all([URL1,URL2]).then(function(response){var selectedRecord={};var selectedId=editParam.primaryKeyValue;selectedRecord=response[1].data;var Country=response[0].data;getComboLabelValue(selectedRecord,Country,\"ncountrycode\",\"scountryname\");dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,Country:response[0].data||[],operation:editParam.operation,openModal:true,screenName:editParam.screenName,ncontrolcode:editParam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/CourierAction.js"],"names":["rsapi","Axios","toast","getComboLabelValue","DEFAULT_RETURN","initRequest","intl","transactionStatus","openCourierModal","screenName","operation","primaryKeyName","masterData","userInfo","ncontrolcode","dispatch","Country","post","urlArray","all","then","response","selectedRecord","ACTIVE","type","payload","data","openModal","loading","catch","error","status","message","warn","formatMessage","id","fetchCourierById","editParam","URL1","URL2","primaryKeyField","primaryKeyValue","selectedId","ncontrolCode"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    getComboLabelValue\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { transactionStatus } from './../components/Enumeration';\r\n\r\n\r\n    export function openCourierModal(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolcode) {\r\n        return function (dispatch) {\r\n            if (operation === \"create\" || operation === \"update\" ) {\r\n                const Country = rsapi.post(\"/country/getCountry\", {\r\n                    \"userinfo\": userInfo\r\n                });\r\n                let urlArray = [];\r\n                if (operation === \"create\") {\r\n                   \r\n                    urlArray = [Country];\r\n                } \r\n                dispatch(initRequest(true));\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                          let selectedRecord = {};\r\n                            selectedRecord[\"nstatus\"] = transactionStatus.ACTIVE;\r\n                            selectedRecord[\"ncouriercode\"] = 0;\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                Country: response[0].data || [],\r\n                                operation,\r\n                                screenName,\r\n                                selectedRecord,\r\n                                openModal: true,\r\n                                ncontrolcode, loading: false\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch(initRequest(false));\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        } else {\r\n                            toast.warn(intl.formatMessage({\r\n                                id: error.response.data\r\n                            }));\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n    }\r\n    \r\n    export function fetchCourierById (editParam){  \r\n        return function(dispatch){\r\n            const URL1= rsapi.post('country/getCountry',{\"userinfo\":editParam.userInfo})\r\n            const URL2=rsapi.post(\"courier/getActiveCourierById\", { [editParam.primaryKeyField] :editParam.primaryKeyValue , \"userinfo\": editParam.userInfo} )\r\n            dispatch(initRequest(true));\r\n            Axios.all([URL1,URL2])\r\n            .then(response=> { \r\n                let selectedRecord={}\r\n                let selectedId = editParam.primaryKeyValue;\r\n                selectedRecord=response[1].data\r\n                let Country = response[0].data;\r\n               getComboLabelValue(selectedRecord, Country, \"ncountrycode\", \"scountryname\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload:{\r\n                    selectedRecord ,\r\n                    Country: response[0].data || [],\r\n                    operation:editParam.operation,\r\n                    openModal: true,\r\n                    screenName:editParam.screenName,\r\n                    ncontrolcode:editParam.ncontrolCode,\r\n                    loading:false,selectedId\r\n                }\r\n                }); \r\n                \r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }         \r\n            })\r\n        }\r\n     }\r\n"]},"metadata":{},"sourceType":"module"}