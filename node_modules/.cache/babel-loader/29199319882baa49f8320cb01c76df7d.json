{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import'./doc-viewer-component.css';//import { LabelNormal, DivWrap, SpanWrap } from './doc-viewer-component.style';\n//import { Row, Col, Button } from 'react-bootstrap';\nimport{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faDownload,faWindowClose}from'@fortawesome/free-solid-svg-icons';import React from'react';//import { Document, Page } from 'react-pdf';\n//import FileViewer from 'react-file-viewer';\nvar DocViewer=/*#__PURE__*/function(_React$Component){_inherits(DocViewer,_React$Component);var _super=_createSuper(DocViewer);// constructor(Props) {\n//   super(Props);\n//   let iconName;\n//   let fileName;\n//   switch(Props.type){\n//     case 'pdf': \n//       fileName = 'export.pdf';\n//       iconName = faFilePdf ;\n//       break;\n//     case 'xlsx':\n//       fileName = 'export.xlsx'; \n//       iconName = faFileExcel ;\n//       break;\n//     case 'png': \n//       fileName = 'export.png';\n//       iconName = faImages;\n//       break;\n//     case 'jpeg':\n//       fileName = 'export.jpeg'; \n//       iconName = faFileImage;\n//       break;\n//     case 'docx':\n//       fileName = 'export.doc'; \n//       iconName = faFileAlt;\n//       break;\n//     default:\n//       fileName =  'export.pdf';\n//       iconName = faFilePdf ;\n//       break;\n//   }\n//   console.log(iconName)\n//   this.state = { ...Props ,page:1 , open:false , iconName:iconName , fileName:fileName}\n// }\nfunction DocViewer(props){var _this;_classCallCheck(this,DocViewer);_this=_super.call(this,props);_this.leftClick=function(data){_this.setState({page:data});};_this.rightClick=function(data){_this.setState({page:data});};_this.toggleClick=function(){_this.setState({open:!_this.state.open});};_this.state=_objectSpread(_objectSpread({},props),{},{page:1,open:_this.props.showReport});return _this;}_createClass(DocViewer,[{key:\"render\",value:function render(){var _this2=this;//const docs = [{ uri: this.state.file }]; \n// console.log(\"doc viewer:\", this.state.file, this.state.fileName);\nvar MyPdfViewer=function MyPdfViewer(){return/*#__PURE__*/React.createElement(\"div\",{className:\"popup_modal_wrap\"},/*#__PURE__*/React.createElement(\"div\",{className:\"popup_modal \".concat(_this2.state.open?'open':'')},/*#__PURE__*/React.createElement(\"span\",{className:\"close_top\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faWindowClose,onClick:_this2.props.closeModal}),_this2.state.isDownloadable?/*#__PURE__*/React.createElement(\"a\",{href:_this2.state.file,download:_this2.state.fileName},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faDownload,onClick:_this2.toggleClick})):'')));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MyPdfViewer,null));}},{key:\"componentDidMount\",value:function componentDidMount(prevProps){}}]);return DocViewer;}(React.Component);export default DocViewer;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/components/doc-viewer/doc-viewer.component.jsx"],"names":["FontAwesomeIcon","faDownload","faWindowClose","React","DocViewer","props","leftClick","data","setState","page","rightClick","toggleClick","open","state","showReport","MyPdfViewer","closeModal","isDownloadable","file","fileName","prevProps","Component"],"mappings":"i5BAAA,MAAO,4BAAP,CACA;AACA;AACA,OAASA,eAAT,KAAgC,gCAAhC,CACA,OAASC,UAAT,CAAsBC,aAAtB,KAA2C,mCAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA;GAEMC,CAAAA,S,kHACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,mBAAYC,KAAZ,CAAmB,2CACjB,uBAAMA,KAAN,EADiB,MAUnBC,SAVmB,CAUP,SAACC,IAAD,CAAS,CACnB,MAAKC,QAAL,CAAc,CACZC,IAAI,CAACF,IADO,CAAd,EAGD,CAdkB,OAenBG,UAfmB,CAeN,SAACH,IAAD,CAAS,CACpB,MAAKC,QAAL,CAAc,CACZC,IAAI,CAACF,IADO,CAAd,EAGD,CAnBkB,OAoBnBI,WApBmB,CAoBL,UAAK,CACjB,MAAKH,QAAL,CAAc,CACZI,IAAI,CAAE,CAAC,MAAKC,KAAL,CAAWD,IADN,CAAd,EAGD,CAxBkB,CAEjB,MAAKC,KAAL,gCACKR,KADL,MAEEI,IAAI,CAAC,CAFP,CAGEG,IAAI,CAAC,MAAKP,KAAL,CAAWS,UAHlB,GAFiB,aAOlB,C,4CAmBD,iBAAS,iBACP;AACD;AACC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAK,CACvB,mBACE,2BAAK,SAAS,CAAC,kBAAf,eAEE,2BAAK,SAAS,uBAAiB,MAAI,CAACF,KAAL,CAAWD,IAAX,CAAkB,MAAlB,CAAyB,EAA1C,CAAd,eACE,4BAAM,SAAS,CAAC,WAAhB,eACE,oBAAC,eAAD,EAAiB,IAAI,CAAEV,aAAvB,CAAsC,OAAO,CAAE,MAAI,CAACG,KAAL,CAAWW,UAA1D,EADF,CAEG,MAAI,CAACH,KAAL,CAAWI,cAAX,cAA4B,yBAAG,IAAI,CAAE,MAAI,CAACJ,KAAL,CAAWK,IAApB,CAA0B,QAAQ,CAAE,MAAI,CAACL,KAAL,CAAWM,QAA/C,eAC3B,oBAAC,eAAD,EAAiB,IAAI,CAAElB,UAAvB,CAAmC,OAAO,CAAE,MAAI,CAACU,WAAjD,EAD2B,CAA5B,CAEM,EAJT,CADF,CAFF,CADF,CAmBD,CApBD,CAqBA,mBACE,qDACE,oBAAC,WAAD,MADF,CADF,CAKD,C,iCACD,2BAAkBS,SAAlB,CAA6B,CAC5B,C,uBA7FqBjB,KAAK,CAACkB,S,EA+F9B,cAAejB,CAAAA,SAAf","sourcesContent":["import './doc-viewer-component.css';\n//import { LabelNormal, DivWrap, SpanWrap } from './doc-viewer-component.style';\n//import { Row, Col, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload , faWindowClose } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\n//import { Document, Page } from 'react-pdf';\n//import FileViewer from 'react-file-viewer';\n\nclass DocViewer extends React.Component {\n  // constructor(Props) {\n  //   super(Props);\n  //   let iconName;\n  //   let fileName;\n  //   switch(Props.type){\n  //     case 'pdf': \n  //       fileName = 'export.pdf';\n  //       iconName = faFilePdf ;\n  //       break;\n  //     case 'xlsx':\n  //       fileName = 'export.xlsx'; \n  //       iconName = faFileExcel ;\n  //       break;\n  //     case 'png': \n  //       fileName = 'export.png';\n  //       iconName = faImages;\n  //       break;\n  //     case 'jpeg':\n  //       fileName = 'export.jpeg'; \n  //       iconName = faFileImage;\n  //       break;\n  //     case 'docx':\n  //       fileName = 'export.doc'; \n  //       iconName = faFileAlt;\n  //       break;\n  //     default:\n  //       fileName =  'export.pdf';\n  //       iconName = faFilePdf ;\n  //       break;\n  //   }\n  //   console.log(iconName)\n  //   this.state = { ...Props ,page:1 , open:false , iconName:iconName , fileName:fileName}\n\n  // }\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      ...props ,\n      page:1 , \n      open:this.props.showReport\n    }\n  }\n\n\n  leftClick = (data) =>{\n    this.setState({\n      page:data\n    })\n  }\n  rightClick = (data) =>{\n    this.setState({\n      page:data\n    })\n  }\n  toggleClick = () =>{\n    this.setState({\n      open: !this.state.open\n    })\n  }\n\n  render() {\n    //const docs = [{ uri: this.state.file }]; \n   // console.log(\"doc viewer:\", this.state.file, this.state.fileName);\n    const MyPdfViewer = () =>{\n      return (\n        <div className=\"popup_modal_wrap\">\n          {/* <FontAwesomeIcon icon={this.state.iconName} onClick={this.toggleClick} /> */}\n          <div className={`popup_modal ${this.state.open ? 'open':''}`}>\n            <span className=\"close_top\">\n              <FontAwesomeIcon icon={faWindowClose} onClick={this.props.closeModal} />\n              {this.state.isDownloadable ? <a href={this.state.file} download={this.state.fileName}>\n                <FontAwesomeIcon icon={faDownload} onClick={this.toggleClick} />\n              </a> : ''}\n              \n            </span> \n            {/* <FileViewer\n              fileType={this.state.type}\n              filePath={this.state.file}\n             /> */}\n          </div> \n        </div>\n\n      );\n    }\n    return (\n      <>\n        <MyPdfViewer/>\n      </>\n    )\n  }\n  componentDidMount(prevProps) {\n  }\n}\nexport default DocViewer;\n\n"]},"metadata":{},"sourceType":"module"}