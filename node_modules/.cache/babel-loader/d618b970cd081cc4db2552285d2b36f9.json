{"ast":null,"code":"// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default (function () {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  var timePart = (new Date().getTime().toString(16) + \"FF\").substr(0, 11);\n  var s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, function (c) {\n    var r = c === \"s\" ? Math.floor(Math.random() * 16) : query_builder_seed++ & 0xf;\n    var v = c === \"x\" ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n  return s + timePart;\n});","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/node_modules/@react-awesome-query-builder/core/esm/utils/uuid.js"],"names":["query_builder_seed","timePart","Date","getTime","toString","substr","s","replace","c","r","Math","floor","random","v"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,kBAAkB,GAAG,CAAzB;AACA,gBAAgB,YAAY;AAC1B;AACA,MAAIC,QAAQ,GAAG,CAAC,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,CAA8B,EAA9B,IAAoC,IAArC,EAA2CC,MAA3C,CAAkD,CAAlD,EAAqD,EAArD,CAAf;AACA,MAAIC,CAAC,GAAG,4BAA4BC,OAA5B,CAAoC,QAApC,EAA8C,UAAUC,CAAV,EAAa;AACjE,QAAIC,CAAC,GAAGD,CAAC,KAAK,GAAN,GAAYE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAZ,GAA6CZ,kBAAkB,KAAK,GAA5E;AACA,QAAIa,CAAC,GAAGL,CAAC,KAAK,GAAN,GAAYC,CAAZ,GAAgBA,CAAC,GAAG,GAAJ,GAAU,GAAlC;AACA,WAAOI,CAAC,CAACT,QAAF,CAAW,EAAX,CAAP;AACD,GAJO,CAAR;AAKA,SAAOE,CAAC,GAAGL,QAAX;AACD,CATD","sourcesContent":["// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default (function () {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  var timePart = (new Date().getTime().toString(16) + \"FF\").substr(0, 11);\n  var s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, function (c) {\n    var r = c === \"s\" ? Math.floor(Math.random() * 16) : query_builder_seed++ & 0xf;\n    var v = c === \"x\" ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n  return s + timePart;\n});"]},"metadata":{},"sourceType":"module"}