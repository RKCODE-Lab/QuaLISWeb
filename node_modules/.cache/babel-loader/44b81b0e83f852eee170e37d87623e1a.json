{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{process}from'@progress/kendo-data-query';import React from'react';import{Col,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import DataGrid from'../../components/data-grid/data-grid.component';var MyJobsSampleInfoGrid=/*#__PURE__*/function(_React$Component){_inherits(MyJobsSampleInfoGrid,_React$Component);var _super=_createSuper(MyJobsSampleInfoGrid);function MyJobsSampleInfoGrid(){_classCallCheck(this,MyJobsSampleInfoGrid);return _super.apply(this,arguments);}_createClass(MyJobsSampleInfoGrid,[{key:\"render\",value:function render(){// const detailedFieldList=this.props.detailedFieldList.map(field=>{\n//     return (\n//         {\"idsName\":field[1],\"dataField\":field[2],\"width\":\"100px\"}\n//     )\n// })\n// const extractedColumnList=this.props.extractedColumnList.map(field=>{\n//     return (\n//         {\"idsName\":field[1],\"dataField\":field[2],\"width\":\"200px\"}\n//     )\n// })\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{noGutters:\"true\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"npreregno\",data:this.props.selectedSample,dataResult:process(this.props.selectedSample||[],this.props.dataState),dataState:this.props.dataState,dataStateChange:this.props.dataStateChange,expandField:\"expanded\",detailedFieldList:this.props.detailedFieldList,extractedColumnList:this.props.extractedColumnList,userInfo:this.props.userInfo,controlMap:new Map(),userRoleControlRights:{},inputParam:this.props.inputParam,pageable:true,isActionRequired:false,isToolBarRequired:false,scrollable:\"scrollable\",gridHeight:\"500px\",jsonField:this.props.jsonField}))));}}]);return MyJobsSampleInfoGrid;}(React.Component);export default injectIntl(MyJobsSampleInfoGrid);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/myjobs/MyJobsSampleInfoGrid.jsx"],"names":["process","React","Col","Row","injectIntl","DataGrid","MyJobsSampleInfoGrid","props","selectedSample","dataState","dataStateChange","detailedFieldList","extractedColumnList","userInfo","Map","inputParam","jsonField","Component"],"mappings":"wnBAAA,OAASA,OAAT,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gDAArB,C,GACMC,CAAAA,oB,+SACF,iBAAQ,CACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBACI,qDACA,oBAAC,GAAD,EAAK,SAAS,CAAE,MAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,QAAD,EACI,eAAe,CAAE,WADrB,CAEI,IAAI,CAAE,KAAKC,KAAL,CAAWC,cAFrB,CAGI,UAAU,CAAER,OAAO,CAAC,KAAKO,KAAL,CAAWC,cAAX,EAA2B,EAA5B,CAA+B,KAAKD,KAAL,CAAWE,SAA1C,CAHvB,CAII,SAAS,CAAE,KAAKF,KAAL,CAAWE,SAJ1B,CAKI,eAAe,CAAE,KAAKF,KAAL,CAAWG,eALhC,CAMI,WAAW,CAAC,UANhB,CAOI,iBAAiB,CAAE,KAAKH,KAAL,CAAWI,iBAPlC,CAQI,mBAAmB,CAAE,KAAKJ,KAAL,CAAWK,mBARpC,CASI,QAAQ,CAAE,KAAKL,KAAL,CAAWM,QATzB,CAUI,UAAU,CAAE,GAAIC,CAAAA,GAAJ,EAVhB,CAWI,qBAAqB,CAAE,EAX3B,CAYI,UAAU,CAAE,KAAKP,KAAL,CAAWQ,UAZ3B,CAaI,QAAQ,CAAE,IAbd,CAcI,gBAAgB,CAAE,KAdtB,CAeI,iBAAiB,CAAE,KAfvB,CAgBI,UAAU,CAAE,YAhBhB,CAiBI,UAAU,CAAE,OAjBhB,CAkBI,SAAS,CAAE,KAAKR,KAAL,CAAWS,SAlB1B,EADJ,CADJ,CADA,CADJ,CA4BH,C,kCAxC8Bf,KAAK,CAACgB,S,EA0CzC,cAAeb,CAAAA,UAAU,CAACE,oBAAD,CAAzB","sourcesContent":["import { process } from '@progress/kendo-data-query';\r\nimport React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nclass MyJobsSampleInfoGrid extends React.Component{\r\n    render(){\r\n        // const detailedFieldList=this.props.detailedFieldList.map(field=>{\r\n        //     return (\r\n        //         {\"idsName\":field[1],\"dataField\":field[2],\"width\":\"100px\"}\r\n        //     )\r\n        // })\r\n        // const extractedColumnList=this.props.extractedColumnList.map(field=>{\r\n        //     return (\r\n        //         {\"idsName\":field[1],\"dataField\":field[2],\"width\":\"200px\"}\r\n        //     )\r\n        // })\r\n        return(\r\n            <>\r\n            <Row noGutters={\"true\"}>\r\n                <Col md={12}>\r\n                    <DataGrid\r\n                        primaryKeyField={\"npreregno\"}\r\n                        data={this.props.selectedSample}\r\n                        dataResult={process(this.props.selectedSample||[],this.props.dataState)}\r\n                        dataState={this.props.dataState}\r\n                        dataStateChange={this.props.dataStateChange}\r\n                        expandField=\"expanded\"\r\n                        detailedFieldList={this.props.detailedFieldList}\r\n                        extractedColumnList={this.props.extractedColumnList}\r\n                        userInfo={this.props.userInfo}\r\n                        controlMap={new Map()}\r\n                        userRoleControlRights={{}}\r\n                        inputParam={this.props.inputParam}\r\n                        pageable={true}\r\n                        isActionRequired={false}\r\n                        isToolBarRequired={false}\r\n                        scrollable={\"scrollable\"}\r\n                        gridHeight={\"500px\"}\r\n                        jsonField={this.props.jsonField}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(MyJobsSampleInfoGrid);"]},"metadata":{},"sourceType":"module"}