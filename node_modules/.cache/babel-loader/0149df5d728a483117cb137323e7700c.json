{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{toast}from'react-toastify';import Axios from'axios';import rsapi from'../rsapi';import{initRequest}from'./LoginAction';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData,getComboLabelValue,constructOptionList,rearrangeDateFormat}from'../components/CommonScript';import{intl}from'../components/App';import{transactionStatus}from'../components/Enumeration';export function getUserDetail(user,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"users/getUsers\",{nusercode:user.nusercode,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getUserComboService(inputParam){return function(dispatch){if(inputParam.operation===\"create\"||inputParam.operation===\"update\"&&inputParam.masterData.SelectedUser.ntransactionstatus!==transactionStatus.RETIRED){//ntransactionstatus = 7 -- User Retired           \nvar userLogged=false;var designationService=rsapi.post(\"designation/getAllActiveDesignation\",{userinfo:inputParam.userInfo});var departmentService=rsapi.post(\"department/getDepartment\",{userinfo:inputParam.userInfo});var countryService=rsapi.post(\"country/getCountry\",{userinfo:inputParam.userInfo});var roleService=rsapi.post(\"userrole/getInternalUserRoleComboData\",{nsitecode:inputParam.userInfo.nmastersitecode,userinfo:inputParam.userInfo});var siteService=rsapi.post(\"site/getSite\",{userinfo:inputParam.userInfo});var controlService=rsapi.post(\"controlmaster/getUploadControlsByFormCode\",{userinfo:inputParam.userInfo});var urlArray=[];if(inputParam.operation===\"create\"){urlArray=[designationService,departmentService,countryService,roleService,siteService,controlService];}else{var _rsapi$post;var userById=rsapi.post(\"users/getActiveUsersById\",(_rsapi$post={},_defineProperty(_rsapi$post,inputParam.primaryKeyName,inputParam.masterData.SelectedUser[inputParam.primaryKeyName]),_defineProperty(_rsapi$post,\"userinfo\",inputParam.userInfo),_rsapi$post));urlArray=[designationService,departmentService,countryService,roleService,siteService,controlService,userById];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var designation=[];var country=[];var department=[];var designationMap=constructOptionList(response[0].data||[],\"ndesignationcode\",\"sdesignationname\",undefined,undefined,false);var departmentMap=constructOptionList(response[1].data||[],\"ndeptcode\",\"sdeptname\",undefined,undefined,true);var countryMap=constructOptionList(response[2].data||[],'ncountrycode','scountryname',undefined,undefined,true);var roleMap=constructOptionList(response[3].data||[],\"nuserrolecode\",\"suserrolename\",undefined,undefined,true);var siteMap=constructOptionList(response[4].data||[],\"nsitecode\",\"ssitename\",undefined,undefined,true);var designationList=designationMap.get(\"OptionList\");var departmentList=departmentMap.get(\"OptionList\");var countryList=countryMap.get(\"OptionList\");var roleList=roleMap.get(\"OptionList\");var siteList=siteMap.get(\"OptionList\");var selectedRecord={};if(inputParam.operation===\"update\"){selectedRecord=response[6].data;if(response[6].data[\"ndesignationcode\"]!==-1){designation.push({\"value\":response[6].data[\"ndesignationcode\"],\"label\":response[6].data[\"sdesignationname\"]});selectedRecord[\"ndesignationcode\"]=designation[0];}department.push({\"value\":response[6].data[\"ndeptcode\"],\"label\":response[6].data[\"sdeptname\"]});country.push({\"value\":response[6].data[\"ncountrycode\"],\"label\":response[6].data[\"scountryname\"]});selectedRecord[\"ndeptcode\"]=department[0];selectedRecord[\"ncountrycode\"]=country[0];if(selectedRecord[\"ddateofjoin\"]!==null){selectedRecord[\"ddateofjoin\"]=rearrangeDateFormat(inputParam.userInfo,selectedRecord[\"sdateofjoin\"]);//new Date(selectedRecord[\"ddateofjoin\"]);\n}if(inputParam.masterData.UserMultiRole.length>0){var foundIndex=inputParam.masterData.UserMultiRole.findIndex(function(x){return x[\"ndefaultrole\"]===transactionStatus.YES;});var defaultRole=inputParam.masterData.UserMultiRole[foundIndex];if(defaultRole&&defaultRole.spassword&&defaultRole.dpasswordvalidatedate){userLogged=true;}else{userLogged=false;}}}else{selectedRecord[\"ntransactionstatus\"]=transactionStatus.ACTIVE;selectedRecord[\"nlockmode\"]=transactionStatus.UNLOCK;selectedRecord[\"ndesignationcode\"]=designationMap.get(\"DefaultValue\");selectedRecord[\"ndeptcode\"]=departmentMap.get(\"DefaultValue\");selectedRecord[\"ncountrycode\"]=countryMap.get(\"DefaultValue\");var _foundIndex=response[4].data.findIndex(function(x){return x[\"ndefaultstatus\"]===transactionStatus.YES;});var defaultSite=response[4].data[_foundIndex];selectedRecord[\"usersite\"]={value:defaultSite[\"nsitecode\"],label:defaultSite[\"ssitename\"]};if(response[3].data.length>0){selectedRecord[\"nuserrolecode\"]={value:response[3].data[0][\"nuserrolecode\"],label:response[3].data[0][\"suserrolename\"]};}userLogged=false;}dispatch({type:DEFAULT_RETURN,payload:{designationList:designationList,//:response[0].data || [], \ndepartmentList:departmentList,//:response[1].data  || [], \ncountryList:countryList,//:response[2].data  || [],   \nroleList:roleList,//:response[3].data  || [],  \nsiteList:siteList,//:response[4].data || [],   \nuploadControlList:response[5].data||[],operation:inputParam.operation,screenName:inputParam.screenName,selectedRecord:selectedRecord,userLogged:userLogged,openModal:true,ncontrolCode:inputParam.ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_CANNOTUPDATERETIREDUSER\"}));}};}export function getUserMultiRoleComboDataService(inputParam){return function(dispatch){if(inputParam.masterData.SelectedUser.ntransactionstatus!==transactionStatus.RETIRED){var roleData={\"nusermultirolecode\":inputParam.primaryKeyValue,\"users\":inputParam.masterData.SelectedUser,\"nusersitecode\":inputParam.masterData.UsersSite.nusersitecode,\"nsitecode\":inputParam.userInfo.nmastersitecode,\"userinfo\":inputParam.userInfo};var roleService=rsapi.post(\"userrole/getUserRoleComboData\",roleData);var urlArray=[];var selectedId=null;if(inputParam.operation===\"create\"){urlArray=[roleService];}else{var _rsapi$post2;var userMultiRoleById=rsapi.post(\"users/getActiveUserMultiRoleById\",(_rsapi$post2={},_defineProperty(_rsapi$post2,inputParam.primaryKeyField,inputParam.primaryKeyValue),_defineProperty(_rsapi$post2,\"userinfo\",inputParam.userInfo),_rsapi$post2));urlArray=[roleService,userMultiRoleById];selectedId=inputParam.primaryKeyValue;}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var userMultiRoleMap=constructOptionList(response[0].data||[],\"nuserrolecode\",\"suserrolename\",undefined,undefined,true);var userMultiRoleList=userMultiRoleMap.get(\"OptionList\");var selectedRecord={\"ntransactionstatus\":transactionStatus.ACTIVE};if(inputParam.operation===\"update\"){selectedRecord=response[1].data;selectedRecord[\"nuserrolecode\"]=getComboLabelValue(selectedRecord,response[0].data,\"nuserrolecode\",\"suserrolename\");}dispatch({type:DEFAULT_RETURN,payload:{roleListUserMultiRole:userMultiRoleList,openChildModal:true,operation:inputParam.operation,screenName:inputParam.screenName,selectedRecord:selectedRecord,ncontrolCode:inputParam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var message=\"IDS_CANNOT\".concat(inputParam.operation.toUpperCase()).concat(\"ROLERETIREDUSER\");toast.warn(intl.formatMessage({id:message}));}};}export function getUserMultiDeputyComboDataService(inputParam){return function(dispatch){if(inputParam.masterData.SelectedUser.ntransactionstatus!==transactionStatus.RETIRED){var comboDataService=rsapi.post(\"users/getComboDataforUserMultiDeputy\",{nmastersitecode:inputParam.userInfo.nmastersitecode,nusersitecode:inputParam.masterData.UsersSite.nusersitecode,nusercode:inputParam.masterData.SelectedUser.nusercode,userinfo:inputParam.userInfo});var urlArray=[];var selectedId=null;if(inputParam.operation===\"create\"){urlArray=[comboDataService];}else{var _rsapi$post3;var userMultiDeputyById=rsapi.post(\"users/getActiveUserMultiDeputyById\",(_rsapi$post3={},_defineProperty(_rsapi$post3,inputParam.primaryKeyField,inputParam.primaryKeyValue),_defineProperty(_rsapi$post3,\"userinfo\",inputParam.userInfo),_rsapi$post3));urlArray=[comboDataService,userMultiDeputyById];selectedId=inputParam.primaryKeyValue;}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var deputyUserMap=constructOptionList(response[0].data[\"DeputyUsersList\"]||[],\"nusersitecode\",\"sloginid\",undefined,undefined,true);var userList=deputyUserMap.get(\"OptionList\");var userMultiRoleMap=constructOptionList(response[0].data[\"UserRoleToAssignForDeputyUser\"]||[],\"nuserrolecode\",\"suserrolename\",undefined,undefined,true);var userRoleListToAssignForDeputyUser=userMultiRoleMap.get(\"OptionList\");var userListService=response[0].data[\"DeputyUsersList\"];var userRoleListService=response[0].data[\"UserRoleToAssignForDeputyUser\"];var selectedRecord={\"ntransactionstatus\":transactionStatus.DEACTIVE};if(inputParam.operation===\"update\"){selectedRecord=response[1].data;var role=[];var deputyUser=[];var deputyName=\"\";userListService.map(function(option){if(response[1].data&&response[1].data[\"ndeputyusersitecode\"]===option[\"nusersitecode\"]){deputyUser.push({\"value\":option[\"nusersitecode\"],label:option[\"sloginid\"]});deputyName=option[\"sfirstname\"]+\" \"+option[\"slastname\"];}return null;});selectedRecord[\"ndeputyusersitecode\"]=deputyUser[0];selectedRecord[\"sdeputyname\"]=deputyName;userRoleListService.map(function(option){if(response[1].data&&response[1].data[\"nuserrolecode\"]===option[\"nuserrolecode\"]){role.push({\"value\":option[\"nuserrolecode\"],label:option[\"suserrolename\"]});}return null;});selectedRecord[\"nuserrolecode\"]=role[0];}dispatch({type:DEFAULT_RETURN,payload:{deputyUserList:userList,userRoleList:userRoleListToAssignForDeputyUser,openChildModal:true,ncontrolCode:inputParam.ncontrolCode,operation:inputParam.operation,screenName:inputParam.screenName,selectedRecord:selectedRecord,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var message=\"IDS_CANNOT\".concat(inputParam.operation.toUpperCase()).concat(\"DEPUTYRETIREDUSER\");toast.warn(intl.formatMessage({id:message}));}};}export function getUserSiteDetail(inputParam){return function(dispatch){dispatch(initRequest(true));var userSiteCode=inputParam.userSite.nusersitecode;var masterData=inputParam.masterData;return rsapi.post(\"users/getRoleDeputyByUserSite\",{nusersitecode:userSiteCode,userinfo:inputParam.userInfo}).then(function(response){var retrievedData=response.data;if(masterData===undefined){masterData=retrievedData;}else{masterData=_objectSpread(_objectSpread({},masterData),retrievedData);}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,dataState:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getUserSiteComboService(screenName,operation,primaryKeyName,primaryKeyValue,masterData,userInfo,ncontrolCode){return function(dispatch){if(masterData.SelectedUser.ntransactionstatus!==transactionStatus.RETIRED){var siteData={\"nusersitecode\":primaryKeyValue,\"users\":masterData.SelectedUser,\"userinfo\":userInfo};var siteService=rsapi.post(\"users/getUnAssignedSiteListByUser\",siteData);var urlArray=[];if(operation===\"create\"){urlArray=[siteService];}else{var _rsapi$post4;var userSiteById=rsapi.post(\"users/getActiveUsersSiteById\",(_rsapi$post4={},_defineProperty(_rsapi$post4,primaryKeyName,primaryKeyValue),_defineProperty(_rsapi$post4,\"userinfo\",userInfo),_rsapi$post4));urlArray=[siteService,userSiteById];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var siteMap=constructOptionList(response[0].data||[],\"nsitecode\",\"ssitename\",undefined,undefined,true);var siteList=siteMap.get(\"OptionList\");var selectedRecord={\"ndefaultsite\":transactionStatus.NO};if(operation===\"update\"){selectedRecord=response[1].data;selectedRecord[\"nsitecode\"]=getComboLabelValue(selectedRecord,response[0].data,\"nsitecode\",\"ssitename\");}//const siteList =  response[0].data;                         \ndispatch({type:DEFAULT_RETURN,payload:{siteList:siteList,openChildModal:true,operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,selectedRecord:selectedRecord,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var message=\"IDS_CANNOT\".concat(operation.toUpperCase()).concat(\"SITERETIREDUSER\");toast.warn(intl.formatMessage({id:message}));}};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/UserAction.js"],"names":["toast","Axios","rsapi","initRequest","DEFAULT_RETURN","sortData","getComboLabelValue","constructOptionList","rearrangeDateFormat","intl","transactionStatus","getUserDetail","user","userInfo","masterData","dispatch","post","nusercode","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getUserComboService","inputParam","SelectedUser","ntransactionstatus","RETIRED","userLogged","designationService","departmentService","countryService","roleService","nsitecode","nmastersitecode","siteService","controlService","urlArray","userById","primaryKeyName","all","designation","country","department","designationMap","departmentMap","countryMap","roleMap","siteMap","designationList","get","departmentList","countryList","roleList","siteList","selectedRecord","push","UserMultiRole","length","foundIndex","findIndex","x","YES","defaultRole","spassword","dpasswordvalidatedate","ACTIVE","UNLOCK","defaultSite","value","label","uploadControlList","screenName","openModal","ncontrolCode","ncontrolcode","formatMessage","id","getUserMultiRoleComboDataService","roleData","primaryKeyValue","UsersSite","nusersitecode","selectedId","userMultiRoleById","primaryKeyField","userMultiRoleMap","userMultiRoleList","roleListUserMultiRole","openChildModal","concat","toUpperCase","getUserMultiDeputyComboDataService","comboDataService","userMultiDeputyById","deputyUserMap","userList","userRoleListToAssignForDeputyUser","userListService","userRoleListService","DEACTIVE","role","deputyUser","deputyName","map","option","deputyUserList","userRoleList","getUserSiteDetail","userSiteCode","userSite","retrievedData","dataState","getUserSiteComboService","siteData","userSiteById","NO"],"mappings":"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","sourcesContent":["import { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport rsapi from '../rsapi';\r\nimport { initRequest } from './LoginAction';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport {sortData, getComboLabelValue, constructOptionList, rearrangeDateFormat} from '../components/CommonScript';\r\nimport { intl } from '../components/App';\r\nimport {transactionStatus} from '../components/Enumeration';\r\n\r\nexport function getUserDetail (user, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"users/getUsers\", {nusercode:user.nusercode, userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getUserComboService(inputParam){ \r\n    return function (dispatch) {    \r\n    if (inputParam.operation === \"create\" || (inputParam.operation === \"update\" && inputParam.masterData.SelectedUser.ntransactionstatus !== transactionStatus.RETIRED))\r\n    {       //ntransactionstatus = 7 -- User Retired           \r\n\r\n            let userLogged = false;\r\n            const designationService = rsapi.post(\"designation/getAllActiveDesignation\", {userinfo:inputParam.userInfo});\r\n            const departmentService = rsapi.post(\"department/getDepartment\", {userinfo:inputParam.userInfo});\r\n            const countryService = rsapi.post(\"country/getCountry\", { userinfo:inputParam.userInfo});\r\n            const roleService = rsapi.post(\"userrole/getInternalUserRoleComboData\", { nsitecode:inputParam.userInfo.nmastersitecode, userinfo:inputParam.userInfo});\r\n            const siteService = rsapi.post(\"site/getSite\",{userinfo:inputParam.userInfo});\r\n            const controlService = rsapi.post(\"controlmaster/getUploadControlsByFormCode\", {userinfo:inputParam.userInfo});\r\n\r\n            let urlArray = [];\r\n            if (inputParam.operation === \"create\"){\r\n                urlArray = [designationService, departmentService, countryService, roleService, siteService, controlService];\r\n            }\r\n            else{                    \r\n                const userById =  rsapi.post(\"users/getActiveUsersById\", \r\n                                { [inputParam.primaryKeyName] :inputParam.masterData.SelectedUser[inputParam.primaryKeyName] , \r\n                                    \"userinfo\": inputParam.userInfo} );\r\n                urlArray = [designationService, departmentService, countryService, roleService, siteService, controlService, userById];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response=>{                   \r\n                    let designation =[];\r\n                    let country = [];\r\n                    let department = [];\r\n\r\n                    const designationMap = constructOptionList(response[0].data || [], \"ndesignationcode\",\r\n                                          \"sdesignationname\", undefined, undefined, false);\r\n                    const departmentMap  = constructOptionList(response[1].data  || [], \"ndeptcode\",\r\n                                        \"sdeptname\" , undefined, undefined, true);\r\n                    const countryMap = constructOptionList(response[2].data  || [], 'ncountrycode',\r\n                                        'scountryname', undefined, undefined, true) ;\r\n                    const roleMap = constructOptionList(response[3].data  || [],  \"nuserrolecode\",\r\n                                        \"suserrolename\", undefined, undefined, true) ;\r\n                    const siteMap = constructOptionList(response[4].data || [],\"nsitecode\", \"ssitename\",\r\n                                            undefined, undefined, true) ;\r\n\r\n                    const designationList = designationMap.get(\"OptionList\");\r\n                    const departmentList = departmentMap.get(\"OptionList\");\r\n                    const countryList = countryMap.get(\"OptionList\");\r\n                    const roleList = roleMap.get(\"OptionList\");\r\n                    const siteList = siteMap.get(\"OptionList\");\r\n                    \r\n                    let selectedRecord =  {};\r\n                   \r\n                    if (inputParam.operation === \"update\"){\r\n                        selectedRecord = response[6].data;\r\n                        if (response[6].data[\"ndesignationcode\"] !== -1){\r\n                            designation.push({\"value\": response[6].data[\"ndesignationcode\"],\"label\": response[6].data[\"sdesignationname\"]});\r\n                            selectedRecord[\"ndesignationcode\"]= designation[0];\r\n                        }\r\n                        department.push({\"value\" : response[6].data[\"ndeptcode\"], \"label\" : response[6].data[\"sdeptname\"]});\r\n                        country.push({\"value\": response[6].data[\"ncountrycode\"], \"label\": response[6].data[\"scountryname\"]});\r\n                                             \r\n                        selectedRecord[\"ndeptcode\"] = department[0];\r\n                        selectedRecord[\"ncountrycode\"] = country[0];\r\n\r\n                        if (selectedRecord[\"ddateofjoin\"] !== null){\r\n                            selectedRecord[\"ddateofjoin\"] = rearrangeDateFormat(inputParam.userInfo, selectedRecord[\"sdateofjoin\"]);\r\n                             //new Date(selectedRecord[\"ddateofjoin\"]);\r\n                        }\r\n\r\n                        if (inputParam.masterData.UserMultiRole.length > 0)\r\n                        {\r\n                            const foundIndex = inputParam.masterData.UserMultiRole.findIndex(\r\n                                x => x[\"ndefaultrole\"] === transactionStatus.YES);\r\n                            const defaultRole =  inputParam.masterData.UserMultiRole[foundIndex] ;\r\n                            \r\n                            if (defaultRole && defaultRole.spassword && defaultRole.dpasswordvalidatedate ){\r\n                                userLogged = true;\r\n                            } \r\n                            else{\r\n                                userLogged = false;\r\n                            }   \r\n                        }                                \r\n                    }\r\n                    else{                            \r\n                        selectedRecord[\"ntransactionstatus\"]  = transactionStatus.ACTIVE;\r\n                        selectedRecord[\"nlockmode\"] = transactionStatus.UNLOCK;\r\n                       \r\n                        selectedRecord[\"ndesignationcode\"] =designationMap.get(\"DefaultValue\");\r\n                        selectedRecord[\"ndeptcode\"] =departmentMap.get(\"DefaultValue\");\r\n                        selectedRecord[\"ncountrycode\"] =countryMap.get(\"DefaultValue\");\r\n                       \r\n\r\n                        const foundIndex = response[4].data.findIndex(\r\n                            x => x[\"ndefaultstatus\"] === transactionStatus.YES);\r\n                        const defaultSite =  response[4].data[foundIndex];\r\n                        selectedRecord[\"usersite\"] = {value:defaultSite[\"nsitecode\"], label:defaultSite[\"ssitename\"] };\r\n                      \r\n                        if (response[3].data.length >0){\r\n                            selectedRecord[\"nuserrolecode\"] = {value:response[3].data[0][\"nuserrolecode\"], label:response[3].data[0][\"suserrolename\"]}\r\n                        }                        \r\n                        userLogged = false;\r\n                    }\r\n                  \r\n                    dispatch({type: DEFAULT_RETURN, payload:{designationList,//:response[0].data || [], \r\n                                                            departmentList,//:response[1].data  || [], \r\n                                                            countryList,//:response[2].data  || [],   \r\n                                                            roleList,//:response[3].data  || [],  \r\n                                                            siteList,//:response[4].data || [],   \r\n                                                            uploadControlList:response[5].data || [],                              \r\n                                                            operation:inputParam.operation, \r\n                                                            screenName:inputParam.screenName,   \r\n                                                            selectedRecord, userLogged,\r\n                                                            openModal : true,\r\n                                                            ncontrolCode:inputParam.ncontrolcode,\r\n                                                            loading:false\r\n                                                            }});\r\n                })\r\n                .catch(error=>{\r\n                    dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                    if (error.response.status === 500){\r\n                        toast.error(error.message);\r\n                    } \r\n                    else{               \r\n                        toast.warn(error.response.data);\r\n                    }  \r\n                }) \r\n    }\r\n    else{       \r\n        toast.warn(intl.formatMessage({id: \"IDS_CANNOTUPDATERETIREDUSER\"}));\r\n    }\r\n}}\r\n\r\nexport function getUserMultiRoleComboDataService(inputParam) {            \r\n    return function (dispatch) {    \r\n       \r\n        if (inputParam.masterData.SelectedUser.ntransactionstatus !== transactionStatus.RETIRED){\r\n      \r\n        const roleData = {\"nusermultirolecode\":inputParam.primaryKeyValue, \"users\" : inputParam.masterData.SelectedUser, \r\n                            \"nusersitecode\":inputParam.masterData.UsersSite.nusersitecode,\r\n                            \"nsitecode\": inputParam.userInfo.nmastersitecode,\r\n                            \"userinfo\":inputParam.userInfo};\r\n        const roleService = rsapi.post(\"userrole/getUserRoleComboData\", roleData);\r\n        \r\n        let urlArray = [];\r\n        let selectedId = null;\r\n        if (inputParam.operation === \"create\"){\r\n            urlArray = [roleService];\r\n        }\r\n        else{\r\n            const userMultiRoleById =  rsapi.post(\"users/getActiveUserMultiRoleById\", { [inputParam.primaryKeyField] :inputParam.primaryKeyValue , \"userinfo\": inputParam.userInfo} );\r\n            urlArray = [roleService, userMultiRoleById];\r\n            selectedId = inputParam.primaryKeyValue;\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response=>{\r\n\r\n                const userMultiRoleMap = constructOptionList(response[0].data || [], \"nuserrolecode\", \"suserrolename\",\r\n                                            undefined, undefined, true) ;\r\n\r\n                const userMultiRoleList = userMultiRoleMap.get(\"OptionList\");\r\n             \r\n                let selectedRecord =  {\"ntransactionstatus\": transactionStatus.ACTIVE};\r\n                if (inputParam.operation === \"update\"){\r\n                    selectedRecord = response[1].data;\r\n                    \r\n                    selectedRecord[\"nuserrolecode\"] = getComboLabelValue (selectedRecord, response[0].data, \r\n                        \"nuserrolecode\", \"suserrolename\");\r\n                }        \r\n              \r\n                dispatch({type: DEFAULT_RETURN, payload:{roleListUserMultiRole:userMultiRoleList,  \r\n                                openChildModal:true,\r\n                                operation:inputParam.operation, screenName:inputParam.screenName,\r\n                                selectedRecord, ncontrolCode:inputParam.ncontrolCode,   \r\n                                loading:false, selectedId}});\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }      \r\n            }) \r\n    }\r\n    else{\r\n        const message = \"IDS_CANNOT\".concat(inputParam.operation.toUpperCase()).concat(\"ROLERETIREDUSER\");\r\n        toast.warn(intl.formatMessage({id:message}));\r\n    }\r\n}}\r\n\r\nexport function getUserMultiDeputyComboDataService(inputParam){\r\n    return function (dispatch) {   \r\n    if (inputParam.masterData.SelectedUser.ntransactionstatus !== transactionStatus.RETIRED){       \r\n        const comboDataService = rsapi.post(\"users/getComboDataforUserMultiDeputy\", { nmastersitecode:inputParam.userInfo.nmastersitecode,\r\n            nusersitecode: inputParam.masterData.UsersSite.nusersitecode, nusercode: inputParam.masterData.SelectedUser.nusercode,\r\n            userinfo:inputParam.userInfo});\r\n        let urlArray = [];\r\n        let selectedId = null;\r\n        if (inputParam.operation === \"create\"){\r\n            urlArray = [comboDataService];\r\n        }\r\n        else{\r\n            const userMultiDeputyById =  rsapi.post(\"users/getActiveUserMultiDeputyById\", { [inputParam.primaryKeyField] :inputParam.primaryKeyValue , \"userinfo\": inputParam.userInfo} );\r\n            urlArray = [comboDataService, userMultiDeputyById];\r\n            selectedId = inputParam.primaryKeyValue;\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)                               \r\n        .then(response=>{          \r\n\r\n            const deputyUserMap = constructOptionList(response[0].data[\"DeputyUsersList\"] || [], \"nusersitecode\", \"sloginid\",\r\n                                     undefined, undefined, true) ;\r\n\r\n            const userList = deputyUserMap.get(\"OptionList\");\r\n\r\n            const userMultiRoleMap = constructOptionList(response[0].data[\"UserRoleToAssignForDeputyUser\"] || [], \"nuserrolecode\", \"suserrolename\",\r\n                                    undefined, undefined, true) ;\r\n\r\n            const userRoleListToAssignForDeputyUser = userMultiRoleMap.get(\"OptionList\");\r\n\r\n            const userListService = response[0].data[\"DeputyUsersList\"];\r\n            const userRoleListService = response[0].data[\"UserRoleToAssignForDeputyUser\"];\r\n                    \r\n            let selectedRecord =  {\"ntransactionstatus\": transactionStatus.DEACTIVE};\r\n            if (inputParam.operation === \"update\"){\r\n                selectedRecord = response[1].data;\r\n               \r\n                let role = [];\r\n                let deputyUser = [];\r\n                let deputyName = \"\";\r\n                userListService.map((option) => {                  \r\n                    if (response[1].data && response[1].data[\"ndeputyusersitecode\"] === option[\"nusersitecode\"]){\r\n                        deputyUser.push({\"value\":option[\"nusersitecode\"], label:option[\"sloginid\"]})\r\n                        deputyName = option[\"sfirstname\"] + \" \"+ option[\"slastname\"];\r\n                    }  \r\n                    return null;                   \r\n                })\r\n                selectedRecord[\"ndeputyusersitecode\"]= deputyUser[0];\r\n                selectedRecord[\"sdeputyname\"] = deputyName;\r\n\r\n                userRoleListService.map((option) => {                  \r\n                    if (response[1].data && response[1].data[\"nuserrolecode\"] === option[\"nuserrolecode\"]){\r\n                        role.push({\"value\":option[\"nuserrolecode\"], label:option[\"suserrolename\"]})\r\n                    }    \r\n                    return null;                       \r\n                })\r\n                selectedRecord[\"nuserrolecode\"]= role[0];\r\n            }           \r\n          \r\n            dispatch({type: DEFAULT_RETURN, payload:{deputyUserList:userList,\r\n                userRoleList:userRoleListToAssignForDeputyUser, \r\n                openChildModal:true,ncontrolCode:inputParam.ncontrolCode,\r\n                operation:inputParam.operation, screenName:inputParam.screenName, selectedRecord,\r\n                loading:false, selectedId}});\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }  \r\n        }) \r\n    }\r\n    else{\r\n        const message = \"IDS_CANNOT\".concat(inputParam.operation.toUpperCase()).concat(\"DEPUTYRETIREDUSER\");\r\n        toast.warn(intl.formatMessage({id: message}));\r\n    }\r\n} }\r\n\r\nexport function getUserSiteDetail(inputParam) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    const userSiteCode = inputParam.userSite.nusersitecode;\r\n    let masterData = inputParam.masterData;\r\n    \r\n    return rsapi.post(\"users/getRoleDeputyByUserSite\", {nusersitecode: userSiteCode, userinfo:inputParam.userInfo})\r\n   .then(response=>{            \r\n        const retrievedData =  response.data; \r\n        if (masterData === undefined){\r\n            masterData = retrievedData\r\n        }                       \r\n        else{\r\n            masterData = {...masterData, ...retrievedData};\r\n        }          \r\n        \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData,  dataState:undefined, loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getUserSiteComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo,   ncontrolCode){\r\n    return function (dispatch) {    \r\n        if (masterData.SelectedUser.ntransactionstatus !== transactionStatus.RETIRED){\r\n      \r\n        const siteData = {\"nusersitecode\":primaryKeyValue, \"users\" : masterData.SelectedUser, \"userinfo\": userInfo};\r\n        const siteService = rsapi.post(\"users/getUnAssignedSiteListByUser\", siteData);\r\n\r\n        let urlArray = [];\r\n        if (operation === \"create\"){\r\n            urlArray = [siteService];\r\n        }\r\n        else{                    \r\n            const userSiteById =  rsapi.post(\"users/getActiveUsersSiteById\", { [primaryKeyName] :primaryKeyValue , \"userinfo\": userInfo} );\r\n            urlArray = [siteService, userSiteById];\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n        .then(response=>{\r\n\r\n                const siteMap = constructOptionList(response[0].data || [], \"nsitecode\", \"ssitename\",\r\n                             undefined, undefined, true) ;\r\n\r\n                const siteList = siteMap.get(\"OptionList\");\r\n\r\n                let selectedRecord =  {\"ndefaultsite\": transactionStatus.NO};\r\n                if (operation === \"update\"){\r\n                    selectedRecord = response[1].data;\r\n                    \r\n                    selectedRecord[\"nsitecode\"] = getComboLabelValue (selectedRecord, response[0].data, \r\n                        \"nsitecode\", \"ssitename\");\r\n                }    \r\n              //const siteList =  response[0].data;                         \r\n              dispatch({type: DEFAULT_RETURN, payload:{siteList, openChildModal:true,\r\n                                                        operation, screenName, ncontrolCode,\r\n                                                        selectedRecord,  loading:false}});\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }      \r\n            }) \r\n    }\r\n    else{\r\n        const message = \"IDS_CANNOT\".concat(operation.toUpperCase()).concat(\"SITERETIREDUSER\");\r\n        toast.warn(intl.formatMessage({id: message}));\r\n    }\r\n}}"]},"metadata":{},"sourceType":"module"}