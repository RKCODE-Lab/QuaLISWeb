{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import Select from'react-select';import{Form}from'react-bootstrap';import{injectIntl}from'react-intl';var FormSelectSearchComponent=/*#__PURE__*/function(_React$Component){_inherits(FormSelectSearchComponent,_React$Component);var _super=_createSuper(FormSelectSearchComponent);function FormSelectSearchComponent(props){_classCallCheck(this,FormSelectSearchComponent);return _super.call(this,props);}_createClass(FormSelectSearchComponent,[{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Form.Group,{onKeyUp:this.props.onKeyUp,className:\"form-select w-100 floating-label react-select-wrap \".concat(this.props.formGroupClassName?this.props.formGroupClassName:\"\"),controlId:this.props.name},/*#__PURE__*/React.createElement(Select//   menuIsOpen\n,{ref:this.props.select,inputId:this.props.name,id:this.props.name,name:this.props.name,placeholder:this.props.placeholder,options:this.props.options,value:this.props.value,isInvalid:this.props.isInvalid,required:this.props.required,defaultValue:this.props.defaultValue,isMulti:this.props.isMulti,isSearchable:this.props.isSearchable,isDisabled:this.props.isDisabled,isClearable:this.props.isClearable,onChange:this.props.onChange,onBlur:this.props.onBlur,closeMenuOnSelect:this.props.closeMenuOnSelect,className:this.props.className,classNamePrefix:\"react-select\",minMenuHeight:this.props.minMenuHeight,maxMenuHeight:this.props.axMenuHeight,openMenuOnFocus:true,menuPlacement:\"auto\",autoComplete:\"off\",menuPosition:this.props.menuPosition//  openMenuOnFocus={true}\n,noOptionsMessage:function noOptionsMessage(){return _this.props.intl.formatMessage({id:\"IDS_NOOPTIONS\"});}// menuPortalTarget={document.querySelector('body')}\n// menuPosition=\"absolute\"\n// styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n}),/*#__PURE__*/React.createElement(Form.Label,{htmlFor:this.props.name},this.props.formLabel,this.props.isMandatory&&/*#__PURE__*/React.createElement(\"sup\",null,\"*\")),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},this.props.errors)));}}]);return FormSelectSearchComponent;}(React.Component);;export default injectIntl(FormSelectSearchComponent);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/components/form-select-search/Form-select-search-componnet.jsx"],"names":["React","Select","Form","injectIntl","FormSelectSearchComponent","props","onKeyUp","formGroupClassName","name","select","placeholder","options","value","isInvalid","required","defaultValue","isMulti","isSearchable","isDisabled","isClearable","onChange","onBlur","closeMenuOnSelect","className","minMenuHeight","axMenuHeight","menuPosition","intl","formatMessage","id","formLabel","isMandatory","errors","Component"],"mappings":"wtBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,OAASC,UAAT,KAA2B,YAA3B,C,GAKMC,CAAAA,yB,kJACF,mCAAYC,KAAZ,CAAmB,yEACTA,KADS,EAElB,C,4DAEL,iBAAQ,gBACJ,mBAEI,oBAAE,KAAF,CAAQ,QAAR,mBACI,oBAAC,IAAD,CAAM,KAAN,EAAY,OAAO,CAAE,KAAKA,KAAL,CAAWC,OAAhC,CAAyC,SAAS,8DAAwD,KAAKD,KAAL,CAAWE,kBAAX,CAAgC,KAAKF,KAAL,CAAWE,kBAA3C,CAAgE,EAAxH,CAAlD,CAAgL,SAAS,CAAE,KAAKF,KAAL,CAAWG,IAAtM,eACI,oBAAC,MACD;AADA,EAEI,GAAG,CAAG,KAAKH,KAAL,CAAWI,MAFrB,CAGI,OAAO,CAAE,KAAKJ,KAAL,CAAWG,IAHxB,CAII,EAAE,CAAE,KAAKH,KAAL,CAAWG,IAJnB,CAKI,IAAI,CAAE,KAAKH,KAAL,CAAWG,IALrB,CAMI,WAAW,CAAE,KAAKH,KAAL,CAAWK,WAN5B,CAOI,OAAO,CAAE,KAAKL,KAAL,CAAWM,OAPxB,CAQI,KAAK,CAAE,KAAKN,KAAL,CAAWO,KARtB,CASI,SAAS,CAAE,KAAKP,KAAL,CAAWQ,SAT1B,CAUI,QAAQ,CAAE,KAAKR,KAAL,CAAWS,QAVzB,CAWI,YAAY,CAAE,KAAKT,KAAL,CAAWU,YAX7B,CAYI,OAAO,CAAE,KAAKV,KAAL,CAAWW,OAZxB,CAaI,YAAY,CAAE,KAAKX,KAAL,CAAWY,YAb7B,CAcI,UAAU,CAAE,KAAKZ,KAAL,CAAWa,UAd3B,CAeI,WAAW,CAAE,KAAKb,KAAL,CAAWc,WAf5B,CAgBI,QAAQ,CAAE,KAAKd,KAAL,CAAWe,QAhBzB,CAiBI,MAAM,CAAE,KAAKf,KAAL,CAAWgB,MAjBvB,CAkBI,iBAAiB,CAAE,KAAKhB,KAAL,CAAWiB,iBAlBlC,CAmBI,SAAS,CAAE,KAAKjB,KAAL,CAAWkB,SAnB1B,CAoBI,eAAe,CAAC,cApBpB,CAqBI,aAAa,CAAE,KAAKlB,KAAL,CAAWmB,aArB9B,CAsBI,aAAa,CAAE,KAAKnB,KAAL,CAAWoB,YAtB9B,CAuBI,eAAe,CAAE,IAvBrB,CAwBI,aAAa,CAAE,MAxBnB,CAyBI,YAAY,CAAC,KAzBjB,CA0BI,YAAY,CAAE,KAAKpB,KAAL,CAAWqB,YACzB;AA3BJ,CA4BI,gBAAgB,CAAE,kCAAM,CAAA,KAAI,CAACrB,KAAL,CAAWsB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,eAAN,CAA9B,CAAN,EACtB;AACA;AACA;AA/BA,EADJ,cAmCI,oBAAC,IAAD,CAAM,KAAN,EAAY,OAAO,CAAE,KAAKxB,KAAL,CAAWG,IAAhC,EAAuC,KAAKH,KAAL,CAAWyB,SAAlD,CAA6D,KAAKzB,KAAL,CAAW0B,WAAX,eAA0B,mCAAvF,CAnCJ,cAoCI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd,EAAuB,IAAI,CAAC,SAA5B,EACK,KAAK1B,KAAL,CAAW2B,MADhB,CApCJ,CADJ,CAFJ,CA6CH,C,uCAnDuChC,KAAK,CAACiC,S,EAuD7C,CACD,cAAe9B,CAAAA,UAAU,CAACC,yBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\nimport { Form } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\n\r\n\r\nclass FormSelectSearchComponent extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\nrender(){\r\n    return (\r\n\r\n        < React.Fragment  >\r\n            <Form.Group onKeyUp={this.props.onKeyUp} className={`form-select w-100 floating-label react-select-wrap ${this.props.formGroupClassName ? this.props.formGroupClassName : \"\"}`} controlId={this.props.name}>\r\n                <Select\r\n                //   menuIsOpen\r\n                    ref={ this.props.select  }\r\n                    inputId={this.props.name}\r\n                    id={this.props.name}\r\n                    name={this.props.name}\r\n                    placeholder={this.props.placeholder}\r\n                    options={this.props.options}\r\n                    value={this.props.value}\r\n                    isInvalid={this.props.isInvalid}\r\n                    required={this.props.required}\r\n                    defaultValue={this.props.defaultValue}\r\n                    isMulti={this.props.isMulti}\r\n                    isSearchable={this.props.isSearchable}\r\n                    isDisabled={this.props.isDisabled}\r\n                    isClearable={this.props.isClearable}\r\n                    onChange={this.props.onChange}\r\n                    onBlur={this.props.onBlur}\r\n                    closeMenuOnSelect={this.props.closeMenuOnSelect}\r\n                    className={this.props.className}\r\n                    classNamePrefix=\"react-select\"\r\n                    minMenuHeight={this.props.minMenuHeight}\r\n                    maxMenuHeight={this.props.axMenuHeight}\r\n                    openMenuOnFocus={true}\r\n                    menuPlacement={\"auto\"}\r\n                    autoComplete=\"off\"\r\n                    menuPosition={this.props.menuPosition}\r\n                    //  openMenuOnFocus={true}\r\n                    noOptionsMessage={() => this.props.intl.formatMessage({ id: \"IDS_NOOPTIONS\" })}\r\n                // menuPortalTarget={document.querySelector('body')}\r\n                // menuPosition=\"absolute\"\r\n                // styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\r\n\r\n                />\r\n                <Form.Label htmlFor={this.props.name}>{this.props.formLabel}{this.props.isMandatory && <sup>*</sup>}</Form.Label>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    {this.props.errors}\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        </React.Fragment >\r\n    )\r\n}\r\n    \r\n\r\n\r\n};\r\nexport default injectIntl(FormSelectSearchComponent);"]},"metadata":{},"sourceType":"module"}