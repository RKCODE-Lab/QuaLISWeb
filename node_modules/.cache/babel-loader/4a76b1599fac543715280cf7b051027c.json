{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\Material\\\\Material.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Row, Col, Nav, Card, FormGroup, FormLabel } from 'react-bootstrap';\nimport { process } from '@progress/kendo-data-query';\nimport { toast } from 'react-toastify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { constructjsonOptionList, convertDateTimetoString, convertDateTimetoStringDBformat, rearrangeDateFormatDateOnly, formatInputDate, convertDateTimetoStringDBFormat, sortData } from '../../components/CommonScript';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\nimport { showEsign, getControlMap, constructOptionList, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, rearrangeDateFormat } from '../../components/CommonScript';\nimport { callService, updateStore, crudMaster, filterColumnData, validateEsignCredential, viewAttachment, initialcombochangeget, addSafetyInstructions, getAddMaterialPopup, getMaterialDetails, addMaterialProperty, getMaterialReload, getMaterialEdit, getMaterialByTypeCode, getAddMaterialSectionPopup, getMaterialSectionEdit, addMaterialFile } from '../../actions';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\nimport { ContentPanel, ReadOnlyText, MediaLabel } from '../../components/App.styles';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component'; // import ReactTooltip from 'react-tooltip';\n\nimport MaterialFilter from './MaterialFilter';\nimport MaterialSectionTab from './MaterialSectionTab';\nimport AddMaterialSection from './AddMaterialSection';\nimport { Affix } from 'rsuite';\nimport MaterialMsdsAttachmentTab from './MaterialMsdsAttachmentTab';\nimport AddMaterialFile from './AddMaterialFile';\nimport { ReactComponent as Safety } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/safety.svg\";\nimport { ReactComponent as Property } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/managed-hosting.svg\";\nimport { ProductList } from '../product/product.styled';\nimport PortalModal from '../../PortalModal';\nimport ModalShow from '../../components/ModalShow';\nimport SampleInfoView from '../approval/SampleInfoView';\nimport DynamicSlideoutMaterial from './DynamicSlideoutMaterial';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Material extends Component {\n  constructor(props) {\n    super(props);\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.openModal = (operation, loginProps, selectedCombo, addId, masterData, selectedRecord) => {\n      if (this.state.selectedcombo[\"nmaterialtypecode\"] && this.state.selectedMaterialCat[\"nmaterialcatcode\"]) {\n        this.props.getAddMaterialPopup(operation, loginProps, selectedCombo, addId, masterData, selectedRecord);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.dynamicmandatoryFeilds = () => {\n      let mandatoryFeildsMaterial = [];\n      this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate[0].jsondata.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            if (component.mandatory) {\n              if (component.inputtype === 'combo') {\n                mandatoryFeildsMaterial.push({\n                  \"idsName\": component.label,\n                  \"dataField\": component.label,\n                  \"mandatoryLabel\": \"IDS_SELECT\",\n                  \"controlType\": \"selectbox\"\n                });\n              } else {\n                mandatoryFeildsMaterial.push({\n                  \"idsName\": component.label,\n                  \"dataField\": component.label,\n                  \"mandatoryLabel\": \"IDS_ENTER\",\n                  \"controlType\": \"selectbox\"\n                });\n              }\n            }\n\n            component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n              if (componentrow.mandatory) {\n                if (componentrow.inputtype === 'combo') {\n                  mandatoryFeildsMaterial.push({\n                    \"idsName\": componentrow.label,\n                    \"dataField\": componentrow.label,\n                    \"mandatoryLabel\": \"IDS_SELECT\",\n                    \"controlType\": \"selectbox\"\n                  });\n                } else {\n                  mandatoryFeildsMaterial.push({\n                    \"idsName\": componentrow.label,\n                    \"dataField\": componentrow.label,\n                    \"mandatoryLabel\": \"IDS_ENTER\",\n                    \"controlType\": \"selectbox\"\n                  });\n                }\n              }\n            });\n          });\n        });\n      });\n\n      if (this.props.Login.selectedRecord['Expiry Validations']) {\n        if (this.props.Login.selectedRecord['Expiry Validations'] === 'Expiry policy') {\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"Expiry Policy Days\",\n            \"dataField\": \"Expiry Policy Days\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"textbox\"\n          });\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"Expiry Policy Period\",\n            \"dataField\": \"Expiry Policy Period\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          });\n        }\n      }\n\n      if (this.props.Login.selectedRecord['Open Expiry Need']) {\n        if (this.props.Login.selectedRecord['Open Expiry Need'] === 3) {\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"Open Expiry\",\n            \"dataField\": \"Open Expiry\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"textbox\"\n          });\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"Open Expiry Period\",\n            \"dataField\": \"Open Expiry Period\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          });\n        }\n      }\n\n      if (this.props.Login.selectedRecord['Next Validation Need']) {\n        if (this.props.Login.selectedRecord['Next Validation Need'] === 3) {\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"Next Validation\",\n            \"dataField\": \"Next Validation\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"textbox\"\n          });\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"Next Validation Period\",\n            \"dataField\": \"Next Validation Period\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          });\n        }\n      } // if (this.props.Login.masterData.ismaterialSectionneed === transactionStatus.YES) {\n\n\n      if (this.props.Login.selectedRecord['Material Category'] !== undefined) {\n        if ((this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item ? this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise : this.props.Login.selectedRecord['Material Category'].needsectionwise) === transactionStatus.YES) {\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"Section\",\n            \"dataField\": \"Section\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          }, {\n            \"idsName\": \"Reorder Level\",\n            \"dataField\": \"Reorder Level\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"selectbox\"\n          });\n        } else {\n          mandatoryFeildsMaterial.map((temp, i) => {\n            if (temp.idsName === 'Section' || temp.idsName === 'Reorder Level') {\n              delete mandatoryFeildsMaterial[i];\n            }\n          });\n        }\n      }\n\n      return mandatoryFeildsMaterial;\n    };\n\n    this.accordianDesign = () => {\n      let selectedmasterlistmain = [];\n      this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.jsondata !== undefined && selectedmasterlistmain.push(this.props.Login.masterData.SelectedMaterial.jsondata);\n      let designaccordian = [];\n      this.props.Login.masterData.selectedTemplate[0].jsondata.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            if (component.inputtype === 'combo') {\n              if (component.label !== undefined) {\n                designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                  md: \"4\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 50\n                  }\n                }, /*#__PURE__*/React.createElement(FormGroup, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(FormLabel, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 37\n                  }\n                }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                  id: [component.label],\n                  message: [component.label],\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 48\n                  }\n                })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 37\n                  }\n                }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][component.label] ? selectedmasterlistmain[0][component.label]['label'] : \"-\"))));\n              }\n            } else if (component.inputtype === 'toggle') {\n              if (component.label !== undefined) {\n                designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                  md: \"4\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 50\n                  }\n                }, /*#__PURE__*/React.createElement(FormGroup, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 616,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(FormLabel, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 37\n                  }\n                }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                  id: [component.label],\n                  message: [component.label],\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 48\n                  }\n                })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 37\n                  }\n                }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][component.label] && selectedmasterlistmain[0][component.label] === transactionStatus.YES ? 'Yes' : 'No'))));\n              }\n            } else {\n              if (component.label !== undefined) {\n                designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                  md: \"4\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 50\n                  }\n                }, /*#__PURE__*/React.createElement(FormGroup, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(FormLabel, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 37\n                  }\n                }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                  id: [component.label],\n                  message: [component.label],\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 48\n                  }\n                })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 37\n                  }\n                }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][component.label] ? selectedmasterlistmain[0][component.label] : \"-\"))));\n              }\n            }\n\n            component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n              if (componentrow.inputtype === 'combo') {\n                if (componentrow.label !== undefined) {\n                  designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                    md: \"4\",\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 54\n                    }\n                  }, /*#__PURE__*/React.createElement(FormGroup, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 37\n                    }\n                  }, /*#__PURE__*/React.createElement(FormLabel, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 648,\n                      columnNumber: 41\n                    }\n                  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                    id: [componentrow.label],\n                    message: [componentrow.label],\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 648,\n                      columnNumber: 52\n                    }\n                  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 649,\n                      columnNumber: 41\n                    }\n                  }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][componentrow.label] ? selectedmasterlistmain[0][componentrow.label]['label'] : \"-\"))));\n                }\n              } else if (componentrow.inputtype === 'toggle') {\n                if (componentrow.label !== undefined) {\n                  designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                    md: \"4\",\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 661,\n                      columnNumber: 54\n                    }\n                  }, /*#__PURE__*/React.createElement(FormGroup, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 662,\n                      columnNumber: 37\n                    }\n                  }, /*#__PURE__*/React.createElement(FormLabel, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 663,\n                      columnNumber: 41\n                    }\n                  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                    id: [componentrow.label],\n                    message: [componentrow.label],\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 663,\n                      columnNumber: 52\n                    }\n                  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 664,\n                      columnNumber: 41\n                    }\n                  }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][componentrow.label] && selectedmasterlistmain[0][componentrow.label]['label'] === transactionStatus.YES ? 'Yes' : 'No'))));\n                }\n              } else {\n                if (componentrow.label !== undefined) {\n                  designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                    md: \"4\",\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 677,\n                      columnNumber: 54\n                    }\n                  }, /*#__PURE__*/React.createElement(FormGroup, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 678,\n                      columnNumber: 37\n                    }\n                  }, /*#__PURE__*/React.createElement(FormLabel, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 679,\n                      columnNumber: 41\n                    }\n                  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                    id: [componentrow.label],\n                    message: [componentrow.label],\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 679,\n                      columnNumber: 52\n                    }\n                  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 680,\n                      columnNumber: 41\n                    }\n                  }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][componentrow.label] ? selectedmasterlistmain[0][componentrow.label] : \"-\"))));\n                }\n              }\n            });\n          });\n        });\n      });\n      return designaccordian;\n    };\n\n    this.handleDateChange = (dateValue, dateName) => {\n      const {\n        selectedRecord\n      } = this.state;\n      let isSelectedRecordChange = this.state.isSelectedRecordChange;\n      isSelectedRecordChange = true;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord,\n        isSelectedRecordChange\n      });\n    };\n\n    this.onTabChange = tabProps => {\n      const tabScreen = tabProps.screenName;\n      let masterData = this.props.Login.masterData;\n      masterData['tabScreen'] = tabScreen;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropMaterialFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\"\n      });\n    };\n\n    this.onSaveMaterialFile = () => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let testFileArray = [];\n      let nmaterialconfigcode;\n      let testFile = {\n        nmaterialconfigcode: this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\n        nmaterialcode: this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n        nmaterialfilecode: selectedRecord.nmaterialfilecode ? selectedRecord.nmaterialfilecode : 0,\n        nstatus: transactionStatus.ACTIVE,\n        nattachmenttypecode,\n        ndefaultstatus: selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] ? selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] : 4\n      };\n      testFile['sdefaultstatus'] = {};\n      testFile['sdefaultstatus'] = testFile['ndefaultstatus'] === 3 ? 'Yes' : 'No';\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, testFile);\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\n            const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ntestfilecode && selectedRecord.ntestfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\n            tempData[\"sfilename\"] = file.name;\n            tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            tempData[\"dcreateddate\"] = this.props.Login.dcreateddate && convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo);\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            testFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          testFile[\"sfilename\"] = selectedRecord.sfilename;\n          testFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n          testFile[\"nlinkcode\"] = transactionStatus.NA;\n          testFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          testFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          testFile[\"dcreateddate\"] = this.props.Login.dcreateddate && convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo);\n          testFileArray.push(testFile);\n        }\n      } else {\n        testFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n        testFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\n        testFile[\"slinkname\"] = selectedRecord['nlinkcode'].label && selectedRecord['nlinkcode'].label;\n        testFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n        testFile[\"ssystemfilename\"] = \"\";\n        testFile[\"dcreateddate\"] = this.props.Login.dcreateddate && convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo);\n        testFile[\"nfilesize\"] = 0;\n        testFileArray.push(testFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"materialmsdsattachment\", JSON.stringify(testFileArray[0]));\n      let inputParam;\n\n      if (this.props.Login.operation === 'create') {\n        inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: \"create\",\n          classUrl: \"material\",\n          methodUrl: \"MaterialMsdsAttachment\"\n        };\n      } else {\n        inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: \"update\",\n          classUrl: \"material\",\n          methodUrl: \"MaterialMsdsAttachment\"\n        };\n      }\n\n      return inputParam;\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      {\n        // let dataresultarr1 = []\n        // console.log('dcv :', this.props.Login.masterData.MaterialMsdsAttachment && this.props.Login.masterData.MaterialMsdsAttachment)\n        // this.props.Login.masterData.MaterialMsdsAttachment.map((temp) => {\n        //     temp['jsondata'].dcreateddate =\n        //      rearrangeDateFormatDateOnly(this.props.Login.userInfo, temp['jsondata'].dcreateddate)\n        // })\n        // console.log('dataresultarr1 :', this.props.Login.masterData.MaterialMsdsAttachment)\n        // let dataresultarr = []\n        // this.props.Login.masterData[\"MaterialSection\"] &&\n        //     this.props.Login.masterData[\"MaterialSection\"].map((temp) => {\n        //         return dataresultarr.push(temp.jsondata)\n        //     })\n        // console.log('xxx->>>', sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending', 'nmaterialsectioncode'))\n        this.props.Login.masterData.ismaterialSectionneed === 3 && tabMap.set(\"IDS_MATERIALSECTION\", /*#__PURE__*/React.createElement(MaterialSectionTab, {\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          dataResult: process(sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending', 'nmaterialsectioncode'), this.props.screenName === undefined || this.props.screenName === \"IDS_MATERIALSECTION\" ? this.state.sectionDataState : {\n            skip: 0,\n            take: 10\n          }),\n          dataState: this.props.screenName === undefined || this.props.screenname === \"IDS_MATERIALSECTION\" ? this.state.sectionDataState : {\n            skip: 0,\n            take: 10\n          },\n          dataStateChange: event => this.setState({\n            sectionDataState: event.dataState\n          }) //data={process(sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending',\n          //'nmaterialsectioncode'))}\n          ,\n          data: this.props.Login.masterData[\"MaterialSection\"],\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          getTestDetails: this.props.getTestDetails,\n          getAddMaterialSectionPopup: this.props.getAddMaterialSectionPopup,\n          addParameter: this.addMaterialSection,\n          deleteRecord: this.deleteRecordmain,\n          fetchRecord: this.props.getMaterialSectionEdit,\n          selectedRecord: this.props.Login.selectedRecord,\n          selectedId: this.props.Login.selectedId,\n          screenName: \"IDS_MATERIALSECTION\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 21\n          }\n        }));\n        tabMap.set(\"IDS_MATERIALMSDSATTACHMENT\", /*#__PURE__*/React.createElement(MaterialMsdsAttachmentTab, {\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          userInfo: this.props.Login.userInfo,\n          deleteRecord: this.deleteRecordmain,\n          MaterialMsdsAttachment: sortData(this.props.Login.masterData.MaterialMsdsAttachment, \"descending\", \"nmaterialfilecode\") || [],\n          addMaterialFile: param => this.props.addMaterialFile(param, this.props.Login.masterData.SelectedMaterial),\n          viewMaterialFile: this.viewMaterialFile,\n          screenName: \"IDS_MATERIALMSDSATTACHMENT\",\n          settings: this.props.settings,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 17\n          }\n        }));\n      }\n      return tabMap;\n    };\n\n    this.deleteRecordmain = deleteParam => {\n      const methodUrl = deleteParam.methodUrl;\n      const selected = deleteParam.methodUrl === 'MaterialSection' ? JSON.stringify(deleteParam.selectedRecord) : JSON.stringify(deleteParam.selectedRecord);\n      let dataState = undefined;\n\n      if (this.props.screenName === \"IDS_SECTION\") {\n        dataState = this.state.sectionDataState;\n      } else if (this.props.screenName === \"IDS_METHOD\") {\n        dataState = this.state.methodDataState;\n      } else if (this.props.screenName === \"IDS_INSTRUMENTCATEGORY\") {\n        dataState = this.state.instrumentCatDataState;\n      }\n\n      const inputParam = {\n        inputData: {\n          nmaterialconfigcode: this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\n          ncontrolCode: deleteParam.ncontrolCode,\n          [methodUrl.toLowerCase()]: selected,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"material\",\n        operation: deleteParam.operation,\n        ncontrolCode: deleteParam.ncontrolCode,\n        methodUrl: methodUrl,\n        screenName: \"IDS_MATERIAL\",\n        dataState\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_MATERIAL\",\n            operation: deleteParam.operation,\n            selectedRecord: {}\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\n      }\n    };\n\n    this.addMaterialSection = param => {\n      let showMaterialSection = this.props.Login.showMaterialSection;\n      let ncontrolCode = this.props.Login.ncontrolCode;\n      let openModal = this.props.Login.openModal;\n      let isneedcombomulti = this.props.Login.isneedcombomulti;\n      isneedcombomulti = false;\n      showMaterialSection = true;\n      openModal = true;\n      ncontrolCode = param;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showMaterialSection,\n          isneedcombomulti,\n          openModal\n        }\n      };\n      this.props.getAddMaterialSectionPopup(this.props.Login.masterData, this.props.Login.userInfo, updateInfo, ncontrolCode);\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\"));\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      let inputData = [];\n      inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\n      inputData[\"materialCatList\"] = this.state.materialCatList;\n\n      if (this.state.selectedcombo[\"nmaterialtypecode\"] && this.state.selectedMaterialCat[\"nmaterialcatcode\"]) {\n        this.props.getMaterialByTypeCode(this.state.selectedcombo, this.state.selectedMaterialCat, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.viewMaterialFile = filedata => {\n      const inputParam = {\n        inputData: {\n          nmaterialcode: this.props.Login.masterData.SelectedMaterial.nmaterialcode && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\n          materialmsdsattachment: JSON.stringify(filedata),\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"material\",\n        operation: \"view\",\n        methodUrl: \"AttachedMaterialMsdsAttachment\",\n        screenname: \"IDS_MATERIALMSDSATTACHMENT\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let showSectionWhileEdit = this.props.Login.showSectionWhileEdit;\n      let showMaterialSection = this.props.Login.showMaterialSection;\n      let isneedcombomulti = this.props.Login.isneedcombomulti;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"retire\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        showMaterialSection = false;\n        isneedcombomulti = false;\n        showSectionWhileEdit = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          showMaterialSection,\n          showMaterialSection,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData != null) {\n        if (fieldName === \"nmaterialtypecode\") {\n          const selectedcombo = this.state.selectedcombo || {};\n          selectedcombo[fieldName] = comboData;\n          this.searchRef.current.value = \"\";\n          this.props.initialcombochangeget(comboData.item.nmaterialtypecode, this.props.Login.masterData, this.props.Login.userInfo);\n        } else if (fieldName === \"nmaterialcatcode\") {\n          const selectedMaterialCat = this.state.selectedMaterialCat || {};\n          selectedMaterialCat[fieldName] = comboData;\n          this.setState({\n            selectedMaterialCat\n          });\n        } else if (fieldName === \"nmaterialsectioncode\") {\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[\"nmaterialsectioncode\"] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"nlinkcode\") {\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[\"nlinkcode\"] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName.displaymember === \"smaterialcatname\" || fieldName.displaymember === \"sunitname\" || fieldName.displaymember === \"speriodname\") {\n          const selectedMaterialCat = this.state.selectedMaterialCat || {};\n          selectedMaterialCat[fieldName] = comboData;\n          this.setState({\n            selectedMaterialCat\n          });\n          let comboName = fieldName.label;\n          const selectedRecord = this.state.selectedRecord || {};\n\n          if (comboData) {\n            selectedRecord[comboName] = comboData;\n          } else {\n            selectedRecord[comboName] = [];\n          }\n\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              selectedRecord\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName.label === \"IDS_STORAGECONDITION\") {\n          let comboName = fieldName.label;\n          const selectedRecord = this.state.selectedRecord || {};\n\n          if (comboData) {\n            selectedRecord[comboName] = comboData;\n          } else {\n            selectedRecord[comboName] = [];\n          }\n\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              selectedRecord\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName === \"value\") {\n          const comboitem = this.state.comboitem || {};\n          comboitem[fieldName] = comboData;\n          this.setState({\n            comboitem\n          });\n        }\n      }\n    };\n\n    this.onComboChangedynamic = (comboData, control) => {\n      let isSelectedRecordChange = this.state.isSelectedRecordChange;\n\n      if (comboData === null && comboData === undefined && control.valuemember && control.nquerybuildertablecode) {\n        comboData[\"item\"] = { ...comboData[\"item\"],\n          pkey: control.valuemember,\n          nquerybuildertablecode: control.nquerybuildertablecode,\n          \"source\": control.source\n        };\n      }\n\n      if (control.inputtype === 'date') {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[`tz${control.label}`] = comboData;\n        isSelectedRecordChange = true;\n        this.setState({\n          selectedRecord,\n          isSelectedRecordChange\n        });\n      } else {\n        if (control.label === 'Material Category') {\n          let ismaterialSectionneed = this.props.Login.masterData.ismaterialSectionneed;\n          let showSectionWhileEdit = this.state.showSectionWhileEdit;\n          ismaterialSectionneed = comboData.item.jsondata.needsectionwise; // const updateInfo = {\n          //     typeName: DEFAULT_RETURN,\n          //     data: {\n          //         ismaterialSectionneed\n          //     }\n          // }\n\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[control.label] = comboData;\n          isSelectedRecordChange = true;\n          showSectionWhileEdit = true;\n          this.setState({\n            selectedRecord,\n            isSelectedRecordChange,\n            ismaterialSectionneed,\n            showSectionWhileEdit\n          }); //   this.props.onMaterialCatChange(comboData.item.jsondata.needsectionwise );\n        } else {\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[control.label] = comboData && (comboData === null || comboData === undefined) ? undefined : comboData;\n          isSelectedRecordChange = true;\n          this.setState({\n            selectedRecord,\n            isSelectedRecordChange\n          });\n        }\n      }\n    };\n\n    this.onInputOnChangeDynamic = (event, radiotext) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      let isSelectedRecordChange = this.state.isSelectedRecordChange;\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === 'timeonly') {\n          selectedRecord['dateonly'] = false;\n        }\n\n        if (event.target.name === 'dateonly') {\n          selectedRecord['timeonly'] = false;\n        }\n\n        const value = selectedRecord[event.target.name];\n\n        if (value !== '' && value !== undefined) {\n          if (value.includes(radiotext)) {\n            const index = value.indexOf(radiotext);\n\n            if (index !== -1) {\n              if (index == 0) {\n                const indexcomma = value.indexOf(\",\");\n\n                if (indexcomma !== -1) {\n                  selectedRecord[event.target.name] = value.slice(indexcomma + 1);\n                } else {\n                  selectedRecord[event.target.name] = \"\";\n                }\n              } else {\n                //  const  indexcomma= value.indexOf(\",\")\n                if (value.slice(index).indexOf(\",\") !== -1) {\n                  selectedRecord[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1);\n                } else {\n                  selectedRecord[event.target.name] = value.slice(0, index - 1);\n                }\n              }\n            }\n          } else {\n            selectedRecord[event.target.name] = value + ',' + radiotext;\n          }\n        } else {\n          selectedRecord[event.target.name] = radiotext;\n        }\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = radiotext;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      isSelectedRecordChange = true;\n      this.setState({\n        selectedRecord,\n        isSelectedRecordChange\n      });\n    };\n\n    this.onInputOnChange = (event, optional2) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      let isSelectedRecordChange = this.state.isSelectedRecordChange;\n\n      if (this.props.Login.screenname !== \"IDS_MATERIALMSDSATTACHMENT\") {\n        if (event.target.type === 'checkbox') {\n          if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n\n          if (event.target.name === 'Expiry') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Expiry Policy Days']) {\n                delete selectedRecord['Expiry Policy Days'];\n              }\n\n              if (selectedRecord['tzExpiry Policy Days']) {\n                delete selectedRecord['tzExpiry Policy Days'];\n              }\n\n              if (selectedRecord['Need Expiry']) {\n                selectedRecord['Need Expiry'] = 4;\n              }\n            }\n          }\n\n          if (event.target.name === 'Need Expiry' || event.target.name === 'Expiry Validations') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Expiry Policy Days']) {\n                delete selectedRecord['Expiry Policy Days'];\n              }\n\n              if (selectedRecord['tzExpiry Policy Days']) {\n                delete selectedRecord['tzExpiry Policy Days'];\n              }\n            }\n          }\n\n          if (event.target.name === 'Open Expiry Need') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Open Expiry']) {\n                delete selectedRecord['Open Expiry'];\n              }\n\n              if (selectedRecord['tzOpen Expiry']) {\n                delete selectedRecord['tzOpen Expiry'];\n              }\n            }\n          }\n\n          if (event.target.name === 'Next Validation Need') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Next Validation']) {\n                delete selectedRecord['Next Validation'];\n              }\n\n              if (selectedRecord['tzNext Validation']) {\n                delete selectedRecord['tzNext Validation'];\n              }\n            }\n          }\n\n          if (event.target.name === 'Quarantine') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Next Validation Need']) {\n                selectedRecord['Next Validation Need'] = 4;\n              }\n\n              if (selectedRecord['Next Validation']) {\n                delete selectedRecord['Next Validation'];\n              } // if (selectedRecord['Next Validation Period']) {\n              //     delete selectedRecord['Next Validation Period']\n              // }\n\n            }\n          }\n        } else if (event.target.type === 'radio') {\n          if (optional2 !== 'Expiry policy') {\n            if (selectedRecord['Expiry Policy Days']) {\n              delete selectedRecord['Expiry Policy Days'];\n            }\n\n            if (selectedRecord['tzExpiry Policy Days']) {\n              delete selectedRecord['tzExpiry Policy Days'];\n            }\n          }\n\n          selectedRecord[event.target.name] = optional2;\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n\n        isSelectedRecordChange = true;\n        this.setState({\n          selectedRecord,\n          isSelectedRecordChange\n        });\n      } else {\n        if (event.target.type === 'checkbox') {\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n        } else if (event.target.type === 'radio') {\n          selectedRecord[event.target.name] = optional2;\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      // console.log(\"selected:\", this.state.selectedRecord);\n      let inputData = [];\n      let inputParam = {};\n      let varmain = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let postParam = undefined;\n      inputData[\"DateList\"] = [];\n      let nmaterialconfigcode;\n      nmaterialconfigcode = this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode;\n\n      if (this.props.Login.screenname === \"IDS_MATERIAL\") {\n        // if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\n        //     varmain = \"Standard Name\"\n        // }\n        // else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\n        //     varmain = \"Volumetric Name\"\n        // }\n        // else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\n        //     varmain = \"Material Name\"\n        // }\n        inputData[\"Material\"] = {};\n        inputData[\"jsonuidata\"] = {};\n        const Layout = this.props.Login.masterData.selectedTemplate[0].jsondata;\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.inputtype === 'combo') {\n                let isValid = false;\n\n                if (component.label === 'Expiry Policy Period') {\n                  if (this.state.selectedRecord['Expiry Policy Days'] && this.state.selectedRecord['Expiry Policy Days'] > 0) {\n                    isValid = true;\n                  }\n                } else if (component.label === 'Open Expiry Period') {\n                  if (this.state.selectedRecord['Open Expiry'] && this.state.selectedRecord['Open Expiry'] > 0) {\n                    isValid = true;\n                  }\n                } else if (component.label === 'Next Validation Period') {\n                  if (this.state.selectedRecord['Next Validation'] && this.state.selectedRecord['Next Validation'] > 0) {\n                    isValid = true;\n                  }\n                } else {\n                  isValid = true;\n                }\n\n                if (isValid) {\n                  inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label] ? {\n                    label: this.state.selectedRecord[component.label][\"label\"],\n                    value: this.state.selectedRecord[component.label][\"value\"],\n                    pkey: this.state.selectedRecord[component.label].item.pkey,\n                    nquerybuildertablecode: this.state.selectedRecord[component.label].item.nquerybuildertablecode,\n                    item: this.state.selectedRecord[component.label].item\n                  } : \"\";\n                  inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] ? this.state.selectedRecord[component.label][\"label\"] : \"\";\n                }\n              } else if (component.inputtype === 'date') {\n                if (this.state.selectedRecord[component.label]) {\n                  inputData[\"Material\"][`tz${component.label}`] = component.hasOwnProperty('timezone') ? {\n                    label: this.state.selectedRecord[`tz${component.label}`][\"label\"],\n                    value: this.state.selectedRecord[`tz${component.label}`][\"value\"]\n                  } : {\n                    label: this.props.Login.userInfo['stimezoneid'],\n                    value: this.props.Login.userInfo['ntimezonecode']\n                  };\n                  inputData[\"Material\"][component.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo);\n                  inputData[\"DateList\"].push(component.label);\n                }\n\n                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] ? convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo) : \"\";\n              } else if (component.inputtype === 'toggle') {\n                // if (component.label === 'Quarantine') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]===undefined?4:\n                //     this.state.selectedRecord[component.label]\n                // }\n                // else if (component.label === 'Expiry') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\n                // }\n                // else if (component.label === 'Need Expiry') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\n                // }\n                // else if (component.label === 'Open Expiry Need') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\n                // }\n                // else if (component.label === 'Reusable') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\n                // }\n                if (this.state.selectedRecord[component.label] === \"\") {\n                  inputData[\"Material\"][component.label] = 4;\n                } else if (this.state.selectedRecord[component.label] === undefined) {\n                  inputData[\"Material\"][component.label] = 4;\n                } else {\n                  inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label];\n                }\n\n                if (this.state.selectedRecord[component.label] !== \"\") {\n                  inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] === transactionStatus.YES ? 'Yes' : 'No';\n                }\n              } else {\n                if (component.label !== undefined) {\n                  inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label] !== undefined ? this.state.selectedRecord[component.label] ? this.state.selectedRecord[component.label] : \"\" : \"\"; // }\n                  //    if (this.state.selectedRecord[component.label] !== undefined) {\n\n                  inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] !== undefined ? this.state.selectedRecord[component.label] ? this.state.selectedRecord[component.label] : \"\" : \"\";\n                }\n              }\n\n              component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n                if (componentrow.inputtype === 'combo') {\n                  let isValid = false;\n\n                  if (componentrow.label === 'Expiry Policy Period') {\n                    if (this.state.selectedRecord['Expiry Policy Days'] && this.state.selectedRecord['Expiry Policy Days'] > 0) {\n                      isValid = true;\n                    }\n                  } else if (componentrow.label === 'Open Expiry Period') {\n                    if (this.state.selectedRecord['Open Expiry'] && this.state.selectedRecord['Open Expiry'] > 0) {\n                      isValid = true;\n                    }\n                  } else if (componentrow.label === 'Next Validation Period') {\n                    if (this.state.selectedRecord['Next Validation'] && this.state.selectedRecord['Next Validation'] > 0) {\n                      isValid = true;\n                    }\n                  } else {\n                    isValid = true;\n                  }\n\n                  if (isValid) {\n                    inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ? {\n                      label: this.state.selectedRecord[componentrow.label][\"label\"],\n                      value: this.state.selectedRecord[componentrow.label][\"value\"],\n                      pkey: this.state.selectedRecord[componentrow.label].item.pkey,\n                      nquerybuildertablecode: this.state.selectedRecord[componentrow.label].item.nquerybuildertablecode,\n                      item: this.state.selectedRecord[componentrow.label].item\n                    } : \"\";\n                    inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ? this.state.selectedRecord[componentrow.label][\"label\"] : \"\";\n                  }\n                } else if (componentrow.inputtype === 'date') {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    inputData[\"Material\"][`tz${componentrow.label}`] = componentrow.hasOwnProperty('timezone') ? {\n                      label: this.state.selectedRecord[`tz${componentrow.label}`][\"label\"],\n                      value: this.state.selectedRecord[`tz${componentrow.label}`][\"value\"]\n                    } : {\n                      label: this.props.Login.userInfo['stimezoneid'],\n                      value: this.props.Login.userInfo['ntimezonecode']\n                    };\n                    inputData[\"Material\"][componentrow.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label], this.props.Login.userInfo);\n                    inputData[\"DateList\"].push(componentrow.label);\n                  }\n\n                  inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ? convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label], this.props.Login.userInfo) : \"\";\n                } else if (componentrow.inputtype === 'toggle') {\n                  if (this.state.selectedRecord[componentrow.label] === \"\") {\n                    inputData[\"Material\"][componentrow.label] = 4;\n                  } else if (this.state.selectedRecord[componentrow.label] === undefined) {\n                    inputData[\"Material\"][componentrow.label] = 4;\n                  } else {\n                    inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label];\n                  }\n\n                  if (this.state.selectedRecord[componentrow.label] !== \"\") {\n                    inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] === transactionStatus.YES ? 'Yes' : 'No';\n                  }\n                } else {\n                  //  if (this.state.selectedRecord[componentrow.label] !== undefined) {\n                  inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label] !== undefined ? this.state.selectedRecord[componentrow.label] ? this.state.selectedRecord[componentrow.label] : \"\" : \"\"; // }\n                  // if (this.state.selectedRecord[componentrow.label] !== undefined) {\n\n                  inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] !== undefined ? this.state.selectedRecord[componentrow.label] ? this.state.selectedRecord[componentrow.label] : \"\" : \"\"; // }\n                }\n              });\n            });\n          });\n        }); // inputData[\"Material\"][varmain] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\n        //     this.state.selectedRecord['Standard Name'] :\n        //     this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\n        //         this.state.selectedRecord['Volumetric Name'] :\n        //         this.state.selectedRecord['Material Name']\n\n        inputData[\"Material\"][\"Material Name\"] = this.state.selectedRecord['Material Name'] && this.state.selectedRecord['Material Name'];\n        inputData[\"jsonuidata\"] = { ...inputData[\"jsonuidata\"],\n          \"nmaterialcatcode\": this.state.selectedRecord['Material Category'].value,\n          \"nmaterialconfigcode\": nmaterialconfigcode\n        };\n        inputData[\"Material\"] = { ...inputData[\"Material\"],\n          \"nmaterialcatcode\": this.state.selectedRecord['Material Category'].value,\n          \"nmaterialtypecode\": this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\n        };\n        inputData[\"materialJson\"] = JSON.stringify(inputData[\"Material\"]);\n        inputData[\"jsonuidata\"] = JSON.stringify(inputData[\"jsonuidata\"]);\n        inputData[\"ntransactionstatus\"] = inputData[\"Material\"]['Quarantine'];\n        inputData[\"nmaterialtypecode\"] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode;\n        inputData[\"nmaterialcatcode\"] = this.state.selectedRecord['Material Category'].value;\n        inputData[\"needsectionwise\"] = this.props.Login.selectedRecord['Material Category'].item ? this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise : this.props.Login.selectedRecord['Material Category'].needsectionwise;\n\n        if (this.props.Login.selectedRecord['Material Category'].item ? this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise : this.props.Login.selectedRecord['Material Category'].needsectionwise === transactionStatus.YES) {\n          // inputData[\"materialSectionJson\"] = [{\n          //     \"ssectionname\": this.state.selectedRecord[\"Section\"].label,\n          //     \"nsectioncode\": this.state.selectedRecord[\"Section\"].value,\n          //     \"nreorderlevel\": this.state.selectedRecord[\"Reorder Level\"] && this.state.selectedRecord[\"Reorder Level\"]\n          //     //,\n          //     //\"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\n          // }];\n          inputData[\"materialSectionJson\"] = {\n            \"nreorderlevel\": this.state.selectedRecord[\"Reorder Level\"] && this.state.selectedRecord[\"Reorder Level\"],\n            \"nsectioncode\": this.state.selectedRecord[\"Section\"] && this.state.selectedRecord[\"Section\"].value,\n            'nmaterialconfigcode': nmaterialconfigcode\n          };\n          inputData[\"materialSectionJson\"] = JSON.stringify(inputData[\"materialSectionJson\"]);\n        }\n\n        const masterData = this.props.Login.masterData; // console.log(\"data:\", inputData);\n\n        if (this.props.Login.operation === 'create') {\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"Material\",\n            inputData: inputData,\n            operation: this.props.Login.operation,\n            saveType,\n            formRef,\n            postParam,\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef,\n            dataState: this.state.dataState\n          };\n        } else {\n          inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"Material\",\n            inputData: inputData,\n            operation: this.props.Login.operation,\n            saveType,\n            formRef,\n            postParam: {\n              selectedObject: \"SelectedMaterial\",\n              primaryKeyField: \"nmaterialcode\",\n              inputListName: \"Material\",\n              selectedComboName: \"selectedMaterialCat\",\n              selectedCombo: this.state.selectedRecord['Material Category'],\n              selectedComboId: \"nmaterialcatcode\"\n            },\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef,\n            dataState: this.state.dataState,\n            filtercombochange: this.props.Login.masterData.searchedData !== undefined ? this.state.selectedRecord['Material Category'].value === this.props.Login.masterData.SelectedMaterialCategoryFilter.nmaterialcatcode ? false : true : false\n          }; // if(this.state.selectedRecord['Material Category'].value!==this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode){\n          //     masterData={...masterData,searchedData}\n          // }\n        }\n\n        if (this.props.Login.screenName === \"IDS_MATERIAL\") {// if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          //     const updateInfo = {\n          //         typeName: DEFAULT_RETURN,\n          //         data: {\n          //             loadEsign: true, screenData: { inputParam, masterData }, saveType\n          //         }\n          //     }\n          //     this.props.updateStore(updateInfo);\n          // }\n          // else {\n          //     this.props.crudMaster(inputParam, masterData, \"openModal\");\n          // }\n        } else {\n          if (this.props.Login.masterData.copyScreenRights ? this.props.Login.masterData.copyScreenRights.length > 0 : false) {\n            this.ConfirmComponent();\n          } else {\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n              const updateInfo = {\n                typeName: DEFAULT_RETURN,\n                data: {\n                  loadEsign: true,\n                  screenData: {\n                    inputParam,\n                    masterData\n                  },\n                  saveType\n                }\n              };\n              this.props.updateStore(updateInfo);\n            } else {\n              this.props.crudMaster(inputParam, masterData, \"openModal\");\n            }\n          }\n        }\n      } else if (this.props.Login.screenname === \"IDS_MATERIALSAFETYINSTRUCTIONS\") {\n        const Layout = this.props.Login.masterData.selectedTemplateSafetyInstructions[0].jsondata;\n        const dynamicobj = {};\n        let jsonuidata = {};\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              //if (component.inputtype === 'combo') {\n              // if (this.state.selectedRecord[component.label]) {\n              //     dynamicobj[component.label] = {\n              //         label: this.state.selectedRecord[component.label][\"label\"],\n              //         value: this.state.selectedRecord[component.label][\"value\"]\n              //     }\n              // }\n              //     jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\n              //     component.label ? 'Yes' : 'No' :  'No' \n              // }\n              // else {\n              if (component.inputtype === 'checkbox') {\n                //  if (this.state.selectedRecord[component.label]) {\n                dynamicobj[component.label] = this.state.selectedRecord[component.label];\n                jsonuidata[component.label] = this.state.selectedRecord[component.label] ? component.label ? 'Yes' : 'No' : 'No'; //   }\n                // jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\n                // component.label ? 'Yes' : 'No' :  'No' \n              } else {\n                if (this.state.selectedRecord[component.label]) {\n                  dynamicobj[component.label] = this.state.selectedRecord[component.label];\n                  jsonuidata[component.label] = this.state.selectedRecord[component.label];\n                }\n              }\n\n              component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n                // if (componentrow.inputtype === 'combo') {\n                //     // if (this.state.selectedRecord[componentrow.label]) {\n                //     //     dynamicobj[componentrow.label] =\n                //     //     {\n                //     //         label: this.state.selectedRecord[componentrow.label][\"label\"],\n                //     //         value: this.state.selectedRecord[componentrow.label][\"value\"]\n                //     //     }\n                //     // }\n                //     jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\n                //         componentrow.label ? 'Yes' : 'No' :  'No' \n                // }\n                // else {\n                //     if (this.state.selectedRecord[componentrow.label]) {\n                //         dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label]\n                //         jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\n                //          componentrow.label ? 'Yes' : 'No' :  'No' \n                //     }\n                //     //jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\n                //     //componentrow.label ? 'Yes' : 'No' :  'No' \n                // }\n                if (componentrow.inputtype === 'checkbox') {\n                  //  if (this.state.selectedRecord[componentrow.label]) {\n                  dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label];\n                  jsonuidata[componentrow.label] = this.state.selectedRecord[componentrow.label] ? componentrow.label ? 'Yes' : 'No' : 'No'; //  }\n                  // jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\n                  // component.label ? 'Yes' : 'No' :  'No' \n                } else {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label];\n                    jsonuidata[componentrow.label] = this.state.selectedRecord[componentrow.label];\n                  }\n                }\n              });\n            });\n          });\n        });\n        inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n\n        if (this.props.Login.masterData.MaterialSafetyInstructions.length > 0) {\n          inputData[\"nmaterialsafetyinstructionscode\"] = this.props.Login.masterData.MaterialSafetyInstructions[0].nmaterialsafetyinstructionscode;\n        } else {\n          inputData[\"nmaterialsafetyinstructionscode\"] = 0;\n        }\n\n        inputData[\"jsonuidata\"] = JSON.stringify(jsonuidata);\n        inputData[\"materialSafetyInstructions\"] = JSON.stringify(dynamicobj);\n        inputData[\"nflag\"] = 1;\n        inputData['nmaterialconfigcode'] = nmaterialconfigcode;\n        inputParam = {\n          classUrl: \"material\",\n          methodUrl: \"MaterialSafetyInstructions\",\n          inputData: inputData,\n          operation: 'create',\n          saveType,\n          formRef,\n          postParam,\n          selectedRecord: this.state.selectedRecord,\n          searchRef: this.searchRef,\n          dataState: this.state.dataState\n        };\n        let masterData = this.props.Login.masterData;\n\n        if (this.state.isSelectedRecordChange) {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n          }\n        } else {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openModal: false\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      } else if (this.props.Login.screenname === \"IDS_MATERIALMSDSATTACHMENT\") {\n        inputParam = this.onSaveMaterialFile();\n        let masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenname === \"IDS_MATERIALPROPERTY\") {\n        let masterData = this.props.Login.masterData;\n        const Layout = this.props.Login.masterData.selectedTemplateProperties[0].jsondata;\n        const dynamicobj = {};\n        inputData[\"DateList\"] = [];\n        inputData[\"jsonuidata\"] = {};\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.inputtype === 'combo') {\n                if (this.state.selectedRecord[component.label]) {\n                  dynamicobj[component.label] = {\n                    label: this.state.selectedRecord[component.label][\"label\"],\n                    value: this.state.selectedRecord[component.label][\"value\"]\n                  };\n                  inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label][\"label\"];\n                }\n              } else if (component.inputtype === 'date') {\n                if (this.state.selectedRecord[component.label]) {\n                  dynamicobj[`tz${component.label}`] = component.hasOwnProperty('timezone') ? {\n                    label: this.state.selectedRecord[`tz${component.label}`][\"label\"],\n                    value: this.state.selectedRecord[`tz${component.label}`][\"value\"]\n                  } : {\n                    label: this.props.Login.userInfo['stimezoneid'],\n                    value: this.props.Login.userInfo['ntimezonecode']\n                  };\n                  dynamicobj[component.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo);\n                  inputData[\"DateList\"].push(component.label);\n                  inputData[\"jsonuidata\"][`tz${component.label}`] = dynamicobj[`tz${component.label}`].label;\n                  inputData[\"jsonuidata\"][component.label] = dynamicobj[component.label];\n                }\n              } else {\n                if (this.state.selectedRecord.hasOwnProperty(component.label)) {\n                  dynamicobj[component.label] = this.state.selectedRecord[component.label];\n                  inputData[\"jsonuidata\"][component.label] = dynamicobj[component.label];\n                }\n              }\n\n              component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n                if (componentrow.inputtype === 'combo') {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[componentrow.label] = {\n                      label: this.state.selectedRecord[componentrow.label][\"label\"],\n                      value: this.state.selectedRecord[componentrow.label][\"value\"]\n                    };\n                    inputData[\"jsonuidata\"][component.label] = dynamicobj[component.label].label;\n                  }\n                } else if (componentrow.inputtype === 'date') {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[`tz${componentrow.label}`] = componentrow.hasOwnProperty('timezone') ? {\n                      label: this.state.selectedRecord[`tz${componentrow.label}`][\"label\"],\n                      value: this.state.selectedRecord[`tz${componentrow.label}`][\"value\"]\n                    } : {\n                      label: this.props.Login.userInfo['stimezoneid'],\n                      value: this.props.Login.userInfo['ntimezonecode']\n                    };\n                    dynamicobj[componentrow.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label], this.props.Login.userInfo);\n                    inputData[\"DateList\"].push(componentrow.label);\n                    inputData[\"jsonuidata\"][`tz${componentrow.label}`] = dynamicobj[`tz${componentrow.label}`].label;\n                    inputData[\"jsonuidata\"][componentrow.label] = dynamicobj[componentrow.label];\n                  }\n                } else {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label];\n                    inputData[\"jsonuidata\"][componentrow.label] = dynamicobj[componentrow.label];\n                  }\n                }\n              });\n            });\n          });\n        });\n        inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n\n        if (this.props.Login.masterData.MaterialProperties.length > 0) {\n          inputData[\"nmaterialpropertycode\"] = this.props.Login.masterData.MaterialProperties[0].nmaterialpropertycode;\n        } else {\n          inputData[\"nmaterialpropertycode\"] = 0;\n        } //inputData[\"DateList\"] = JSON.stringify(DateList) \n\n\n        inputData[\"jsonuidata\"] = { ...inputData[\"jsonuidata\"],\n          'nmaterialconfigcode': nmaterialconfigcode\n        };\n        inputData[\"jsonuidata\"] = JSON.stringify(inputData[\"jsonuidata\"]);\n        inputData[\"materialProperty\"] = JSON.stringify(dynamicobj);\n        inputData[\"nflag\"] = 2;\n        inputParam = {\n          classUrl: \"material\",\n          methodUrl: \"MaterialSafetyInstructions\",\n          inputData: inputData,\n          operation: 'create',\n          saveType,\n          formRef,\n          postParam,\n          selectedRecord: this.state.selectedRecord,\n          searchRef: this.searchRef,\n          dataState: this.state.dataState\n        };\n\n        if (this.state.isSelectedRecordChange) {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n          }\n        } else {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openModal: false\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      } else {\n        if (this.props.Login.operation !== \"update\") {\n          let showMaterialSection = this.props.Login.showMaterialSection;\n          let newarr = [];\n          let newarr1 = [];\n          inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n\n          if (this.state.selectedRecord[\"nmaterialsectioncode\"].length > 1) {\n            newarr = this.state.selectedRecord.nmaterialsectioncode.map(temp => {\n              return {\n                \"ssectionname\": temp.label,\n                \"nsectioncode\": temp.value,\n                \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\n                \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n                'nmaterialconfigcode': nmaterialconfigcode\n              };\n            });\n            newarr1[\"nsectioncode\"] = \"\"; // let nsectioncode;\n\n            this.state.selectedRecord.nmaterialsectioncode.map(temp => {\n              newarr1[\"nsectioncode\"] += temp.value + ',';\n            });\n            newarr1 = {\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n              \"nsectioncode\": newarr1[\"nsectioncode\"].substring(0, newarr1[\"nsectioncode\"].length - 1),\n              'nmaterialconfigcode': nmaterialconfigcode\n            };\n          } else {\n            newarr.push({\n              \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n              'nmaterialconfigcode': nmaterialconfigcode\n            });\n            newarr1 = {\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\n              'nmaterialconfigcode': nmaterialconfigcode\n            };\n          }\n\n          inputData[\"materialSectionJson\"] = JSON.stringify(newarr);\n          inputData[\"materialSectionJson\"] = JSON.stringify(newarr1);\n          inputData[\"nmaterialconfigcode\"] = nmaterialconfigcode;\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"MaterialSection\",\n            inputData: inputData,\n            operation: \"create\",\n            showMaterialSection: showMaterialSection,\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef\n          };\n        } else {\n          let newarrobj = [];\n          inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n\n          if (Array.isArray(this.state.selectedRecord[\"nmaterialsectioncode\"])) {\n            newarrobj.push({\n              \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n              'nmaterialconfigcode': nmaterialconfigcode\n            });\n          } else {\n            newarrobj.push({\n              \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"].label,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"].value,\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n              'nmaterialconfigcode': nmaterialconfigcode\n            });\n          }\n\n          inputData[\"materialSectionJson\"] = JSON.stringify(newarrobj);\n          inputData[\"MaterialSection\"] = {\n            \"Reorder Level\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0\n          };\n          inputData[\"nmaterialsectioncode\"] = this.state.selectedRecord.nmaterialsectioncodeprimaryKeyValue;\n          inputData[\"nmaterialconfigcode\"] = nmaterialconfigcode;\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"MaterialSection\",\n            inputData: inputData,\n            showMaterialSection: false,\n            operation: \"update\",\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef\n          };\n        }\n\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.onNumericInputChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord; // let value = event.target.value;\n      // if (isNaN(value)) {\n      // if (parseInt(value) < 10) {\n      //  let x=value.toString().replace(/\\D/g,'')\n      // if (value === 0) {\n      //     delete selectedRecord[name]\n      //     selectedRecord[name]=''\n      // }\n      // else {\n\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      }); //   }\n      // }\n      // }\n    };\n\n    this.ConfirmComponent = () => {\n      this.confirmMessage.confirm(\"confirmation\", \"Confiramtion!\", this.props.intl.formatMessage({\n        id: \"IDS_OVERWRITRTHEEXISTINGSCREENRIGHTS\"\n      }), \"ok\", \"cancel\", () => this.copyAlertSave());\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      let inputData = [];\n      inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\n      inputData[\"materialCatList\"] = this.state.materialCatList;\n      this.setState({\n        sectionDataState: {\n          skip: 0,\n          take: 10\n        }\n      });\n\n      if (this.state.selectedcombo[\"nmaterialtypecode\"]) {\n        this.props.getMaterialReload(this.props.Login.masterData.SelectedMaterialTypeFilter, this.props.Login.masterData.SelectedMaterialCategoryFilter, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTUSERROLE\"\n        }));\n      }\n    };\n\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      masterStatus: \"\",\n      sectionDataState: {\n        skip: 0,\n        take: 10\n      },\n      error: \"\",\n      selectedRecord: {},\n      filterCatList: [],\n      operation: \"\",\n      comboitem: undefined,\n      screenName: undefined,\n      selectedcombo: undefined,\n      isSelectedRecordChange: false,\n      showSectionWhileEdit: false,\n      selectedMaterialCat: undefined,\n      materialCatList: [],\n      userRoleControlRights: [],\n      ControlRights: undefined,\n      controlMap: new Map(),\n      dataResult: [],\n      skip: 0,\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      dataState: _dataState,\n      data: [],\n      splitChangeWidthPercentage: 30\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    //  console.log('selected r :', this.props.Login.masterData)\n    const addId = this.state.controlMap.has(\"AddMaterial\") && this.state.controlMap.get(\"AddMaterial\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditMaterial\") && this.state.controlMap.get(\"EditMaterial\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteMaterial\") && this.state.controlMap.get(\"DeleteMaterial\").ncontrolcode;\n    const addParameterId = this.state.controlMap.has(\"AddMaterialSafetyInstructions\") && this.state.controlMap.get(\"AddMaterialSafetyInstructions\").ncontrolcode;\n    const addMaterialProperty = this.state.controlMap.has(\"AddMaterialProperties\") && this.state.controlMap.get(\"AddMaterialProperties\").ncontrolcode;\n    let masterlistmain = [];\n    this.props.Login.masterData.Material = this.props.Login.masterData.Material && sortData(this.props.Login.masterData.Material, \"descending\", \"nmaterialcode\");\n    this.props.Login.masterData.MaterialType = this.props.Login.masterData.MaterialType && sortData(this.props.Login.masterData.MaterialType, \"ascending\", \"nmaterialtypecode\");\n    this.props.Login.masterData.MaterialCategoryMain = this.props.Login.masterData.MaterialCategoryMain && sortData(this.props.Login.masterData.MaterialCategoryMain, \"ascending\", \"nmaterialcatcode\");\n    this.props.Login.masterData.searchedData = this.props.Login.masterData.searchedData && sortData(this.props.Login.masterData.searchedData, \"descending\", \"nmaterialcode\");\n\n    if (this.props.Login.masterData.SelectedMaterialCategory && this.props.Login.masterData.SelectedMaterialCategory.needSectionwise === transactionStatus.YES) {\n      if (this.props.Login.masterData.SelectedMaterial) {\n        delete this.props.Login.masterData.SelectedMaterial['Section'];\n        delete this.props.Login.masterData.SelectedMaterial['Reorder Level'];\n      }\n    } // this.props.Login.masterData.Material &&\n    //     this.props.Login.masterData.Material.map((temp, i) => {\n    //         return masterlistmain.push(this.props.Login.masterData.Material[i].jsondata)\n    //     })\n\n\n    let searchedDatalistmain = []; // if (this.props.Login.masterData.searchedData === undefined) {\n    //     searchedDatalistmain = undefined\n    // } else {\n    //     this.props.Login.masterData.searchedData &&\n    //         this.props.Login.masterData.searchedData.map((temp, i) => {\n    //             return searchedDatalistmain.push(this.props.Login.masterData.searchedData[i].jsondata)\n    //         })\n    // }\n\n    let searchFieldList = [];\n    let mandatoryFieldsMaterialFile = []; // if (this.props.Login.masterData.SelectedMaterialType) {\n    //     if (this.props.Login.masterData.SelectedMaterialType.length > 0) {\n    //         if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\n    //             searchFieldList = [\n    //                 \"Standard Name\"\n    //             ]\n    //         }\n    //         else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\n    //             searchFieldList = [\n    //                 \"Volumetric Name\"\n    //             ]\n    //         }\n    //         else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\n    //             searchFieldList = [\n    //                 \"Material Name\"\n    //             ]\n    //         }\n    //     }\n    // }\n\n    const filterParam = {\n      inputListName: \"Material\",\n      selectedObject: \"SelectedMaterial\",\n      primaryKeyField: \"nmaterialcode\",\n      fetchUrl: \"material/getMaterialByID\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      // isjsondata: true,\n      searchFieldList: this.props.Login.masterData.DesignMappedFeilds && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['searchFieldList'][0]['searchFieldList'] && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['searchFieldList'][0]['searchFieldList']\n    };\n    this.props.Login.screenname === 'IDS_MATERIALMSDSATTACHMENT' && this.props.Login.selectedRecord && this.props.Login.selectedRecord.nattachmenttypecode === attachmentType.LINK ? mandatoryFieldsMaterialFile = [{\n      \"idsName\": \"IDS_FILENAME\",\n      \"dataField\": \"slinkfilename\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }, {\n      \"idsName\": \"IDS_LINKNAME\",\n      \"dataField\": \"nlinkcode\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }] : mandatoryFieldsMaterialFile = [{\n      \"idsName\": \"IDS_FILE\",\n      \"dataField\": \"sfilename\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }];\n    const mandatoryFieldsMaterialSection = [{\n      \"mandatory\": false,\n      \"idsName\": \"IDS_MATERIALSECTION\",\n      \"dataField\": \"nmaterialsectioncode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb  fixed_breadcrumd \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 64,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Material\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo //  masterList={searchedDatalistmain || masterlistmain}\n      ,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Material,\n      getMasterDetail: master => this.props.getMaterialDetails(master, this.props.Login.masterData, this.props.Login.userInfo),\n      selectedMaster: this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial,\n      primaryKeyField: \"nmaterialcode\" // mainField={this.props.Login.masterData.SelectedMaterialType ?\n      //     this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\n      //         \"Standard Name\" :\n      //         this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\n      //             \"Volumetric Name\" :\n      //             \"Material Name\" : \"\"}\n      // firstField={\"Reorder Level\"}\n      ,\n      mainField: this.props.Login.masterData.DesignMappedFeilds && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['mainField'],\n      firstField: this.props.Login.masterData.DesignMappedFeilds && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField'] && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField'] //||JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField']\n      ,\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      showFilterIcon: true,\n      onFilterSubmit: this.onFilterSubmit,\n      filterComponent: [{\n        \"IDS_FILTER\": /*#__PURE__*/React.createElement(MaterialFilter, {\n          filterCatList: this.state.filterCatList || [],\n          materialCatList: this.state.materialCatList || [],\n          selectedRecord: this.state.selectedcombo || {} //\n          ,\n          selectedMaterialCat: this.state.selectedMaterialCat || {},\n          onComboChange: this.onComboChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 45\n          }\n        })\n      }],\n      openModal: () => this.openModal(\"create\", this.props.Login, this.state.selectedcombo, addId, this.props.Login.masterData, this.state.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 37\n      }\n    }, this.props.Login.masterData.Material && this.props.Login.masterData.Material.length > 0 && this.props.Login.masterData.SelectedMaterial ? /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.SelectedMaterialType ? this.props.Login.masterData.SelectedMaterial['Material Name'] : \"\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(ProductList, {\n      className: \"d-flex product-category icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(MediaLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 65\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_QUARANTINE\"\n    }), \" :\"), /*#__PURE__*/React.createElement(MediaLabel, {\n      className: `btn btn-outlined ${this.props.Login.masterData.SelectedMaterial['Quarantine'] === \"Yes\" ? \"outline-success\" : \"outline-danger\"} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedMaterial['Quarantine'] === \"Yes\" ? 'Yes' : 'No')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: e => this.props.getAddMaterialPopup(\"update\", this.props.Login, this.state.selectedcombo, editId, this.props.Login.masterData, this.state.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADDMATERIALSAFETYINSTRUCTIONS\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: e => this.props.addSafetyInstructions(this.props.Login.masterData, this.props.Login.userInfo, addParameterId, \"create\", {}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Safety, {\n      className: \"custom_icons\",\n      width: \"15\",\n      height: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADDMATERIALPROPERTY\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: e => this.props.addMaterialProperty(this.props.Login.masterData, this.props.Login.userInfo, addMaterialProperty, \"create\", {}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Property, {\n      className: \"custom_icons\",\n      width: \"15\",\n      height: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 69\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(SampleInfoView, {\n      data: this.props.Login.masterData.SelectedMaterial,\n      SingleItem: JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['MaterialViewFields'],\n      screenName: \"IDS_SAMPLEINFO\",\n      userInfo: this.props.Login.userInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 57\n      }\n    })), this.props.Login.masterData && /*#__PURE__*/React.createElement(CustomTab, {\n      activeKey: this.props.Login.masterData.tabScreen || 'IDS_MATERIALMSDSATTACHMENT',\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 85\n      }\n    }))) : \"\")))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.screenname === 'IDS_MATERIALSAFETYINSTRUCTIONS' ? '' : this.props.Login.screenname === 'IDS_MATERIALPROPERTY' ? '' : this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenname,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.screenname === 'IDS_MATERIALMSDSATTACHMENT' ? mandatoryFieldsMaterialFile : this.props.Login.screenname === 'IDS_MATERIAL' ? this.dynamicmandatoryFeilds() : this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ? this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ? mandatoryFieldsMaterialSection : '' : '',\n      updateStore: this.props.updateStore,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenname !== \"IDS_MATERIALMSDSATTACHMENT\" ? this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ? this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ? this.props.Login.showMaterialSection ? /*#__PURE__*/React.createElement(AddMaterialSection, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        MaterialSectionCombodata: this.props.Login.masterData.MaterialSection && this.props.Login.masterData.MaterialSection,\n        onNumericInputChange: this.onNumericInputChange,\n        onComboChange: this.onComboChange,\n        isDisabled: this.props.Login.isneedcombomulti && this.props.Login.isneedcombomulti,\n        ismaterialsectionEdit: this.props.Login.ismaterialsectionEdit,\n        comboData: this.props.Login.masterData.productCategoryList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideoutMaterial, {\n        operation: this.props.Login.operation,\n        showSectionWhileEdit: this.state.showSectionWhileEdit,\n        selectedRecord: this.state.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        isBreadCrumbCategory: this.props.Login.operation === 'update' ? this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode === this.props.Login.selectedRecord['Material Category'].value ? true : false : false,\n        enableDisableNeedExpiry: this.props.Login.selectedRecord['Expiry'],\n        enableDisableOpenExpiry: this.props.Login.selectedRecord['Open Expiry Need'],\n        enableDisableNextValidation: this.props.Login.selectedRecord['Next Validation Need'],\n        enableDisableNextValidationNeed: this.props.Login.selectedRecord['Quarantine'],\n        enableDisableExpiryPolicy: this.props.Login.selectedRecord['Expiry Validations'],\n        templateData: this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate[0].jsondata,\n        onNumericInputChange: this.onNumericInputChange,\n        handleChange: this.handleChange,\n        onInputOnChange: this.onInputOnChange,\n        timeZoneList: this.props.Login.timeZoneList,\n        handleDateChange: this.handleDateChange,\n        comboData: this.props.Login.templateData && this.props.Login.templateData.comboData,\n        onComboChange: this.onComboChangedynamic // ismaterialSectionneed={this.state.ismaterialSectionneed}\n        ,\n        screenname: this.props.Login.screenname,\n        ismaterialSectionneed: this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item && this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise || this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].needsectionwise || this.props.Login.masterData.ismaterialSectionneed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideoutMaterial, {\n        selectedRecord: this.state.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        templateData: this.props.Login.masterData.selectedTemplateSafetyInstructions && this.props.Login.masterData.selectedTemplateSafetyInstructions[0].jsondata,\n        handleChange: this.handleChange,\n        onInputOnChange: this.onInputOnChangeDynamic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 45\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideoutMaterial, {\n        selectedRecord: this.props.Login.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        templateData: this.props.Login.masterData.selectedTemplateProperties && this.props.Login.masterData.selectedTemplateProperties[0].jsondata // userInfo={this.props.Login.userInfo}\n        ,\n        handleChange: this.handleChange,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        timeZoneList: this.props.Login.timeZoneList && this.props.Login.timeZoneList,\n        onComboChange: this.onComboChangedynamic,\n        defaultTimeZone: this.props.Login.defaultTimeZone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 41\n        }\n      }) : /*#__PURE__*/React.createElement(AddMaterialFile, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropMaterialFile,\n        deleteAttachment: this.deleteAttachment,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.Login.linkMaster,\n        maxSize: 20,\n        maxFiles: 1,\n        multiple: false,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_MATERIALMSDSATTACHMENT\"\n        }),\n        name: \"testfilename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height\n      });\n    }\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = []; // if (Array.isArray(this.props.Login.masterData)) {\n\n    breadCrumbData.push({\n      \"label\": \"IDS_MATERIALTYPE\",\n      \"value\": this.props.Login.masterData.SelectedMaterialType ? this.props.Login.masterData.SelectedMaterialType[0]['jsondata'].smaterialtypename && this.props.Login.masterData.SelectedMaterialType[0]['jsondata'].smaterialtypename[this.props.Login.userInfo.slanguagetypecode] : \"NA\"\n    }, {\n      \"label\": \"IDS_MATERIALCAT\",\n      \"value\": this.props.Login.masterData.SelectedMaterialCategoryFilter ? this.props.Login.masterData.SelectedMaterialCategoryFilter.smaterialcatname !== undefined ? this.props.Login.masterData.SelectedMaterialCategoryFilter.smaterialcatname : \"NA\" : \"NA\"\n    }); //  }\n\n    return breadCrumbData;\n  }\n\n  componentDidUpdate(previousProps) {\n    let bool = false;\n    let {\n      selectedRecord,\n      selectedcombo,\n      comboitem,\n      filterData,\n      filterCatList,\n      selectedMaterialCat,\n      materialCatList,\n      ismaterialSectionneed,\n      showSectionWhileEdit\n    } = this.state;\n    const masterData = this.props.Login.masterData; // if (this.props.Login.isSelectedRecordChange !== previousProps.Login.isSelectedRecordChange) {\n    //     bool = true;\n    //   isSelectedRecordChange = this.props.Login.isSelectedRecordChange\n    // }\n    // if (this.props.Login.selectedRecord.IDS_MATERIALCAT &&\n    //     this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\n    //     != previousProps.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise) {\n    //     bool = true;\n    //     ismaterialSectionneed = this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\n    // }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      bool = true;\n      selectedRecord = this.props.Login.selectedRecord;\n    }\n\n    if (this.props.Login.selectedcombo !== previousProps.Login.selectedcombo) {\n      bool = true;\n      selectedcombo = this.props.Login.selectedcombo;\n    }\n\n    if (this.props.Login.showSectionWhileEdit !== previousProps.Login.showSectionWhileEdit) {\n      bool = true;\n      showSectionWhileEdit = this.props.Login.showSectionWhileEdit;\n    }\n\n    if (this.props.Login.comboitem !== previousProps.Login.comboitem) {\n      bool = true;\n      comboitem = this.props.Login.comboitem;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        data: this.props.Login.masterData.ControlRights\n      });\n    }\n\n    if (this.props.Login.masterData.MaterialType !== undefined) {\n      if (this.props.Login.masterData.MaterialType !== previousProps.Login.masterData.MaterialType) {\n        bool = true; // const materialTypeList = constructOptionList(this.props.Login.masterData.MaterialType || [], \"nmaterialtypecode\",\n        //     \"smaterialtypename\", undefined, undefined, undefined);\n        //     constructOptionList(options, optionId,\n        //         optionValue, sortField, sortOrder, alphabeticalSort,\n        //          defaultStatusFieldName) \n\n        const materialTypeList = constructjsonOptionList(this.props.Login.masterData.MaterialType, \"nmaterialtypecode\", \"smaterialtypename\", undefined, undefined, undefined, undefined, undefined, true, this.props.Login.userInfo.slanguagetypecode);\n        filterCatList = materialTypeList.get(\"OptionList\"); //  console.log('masterData.MaterialType :', masterData.MaterialType)\n\n        selectedcombo = {\n          nmaterialtypecode: masterData.MaterialType && masterData.MaterialType.length > 0 ? {\n            \"value\": masterData.MaterialType[0].nmaterialtypecode,\n            \"label\": masterData.MaterialType[0]['jsondata'].smaterialtypename[this.props.Login.userInfo.slanguagetypecode]\n          } : \"\"\n        };\n      }\n    }\n\n    if (this.props.Login.masterData.MaterialCategoryMain !== previousProps.Login.masterData.MaterialCategoryMain) {\n      const MaterialCategoryMain = constructOptionList(this.props.Login.masterData.MaterialCategoryMain || [], \"nmaterialcatcode\", \"smaterialcatname\", undefined, undefined, undefined);\n      materialCatList = MaterialCategoryMain.get(\"OptionList\");\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      bool = true;\n      filterData = this.generateBreadCrumData();\n\n      if (masterData.SelectedMaterialCategory !== previousProps.Login.masterData.SelectedMaterialCategory) {\n        const MaterialCategoryMain = constructOptionList(this.props.Login.masterData.MaterialCategoryMain || [], \"nmaterialcatcode\", \"smaterialcatname\", undefined, undefined, undefined);\n        materialCatList = MaterialCategoryMain.get(\"OptionList\");\n        selectedMaterialCat = {\n          nmaterialcatcode: masterData.MaterialCategoryMain && masterData.MaterialCategoryMain.length > 0 ? {\n            \"value\": masterData.SelectedMaterialCategory.nmaterialcatcode,\n            \"label\": masterData.SelectedMaterialCategory.smaterialcatname\n          } : \"\"\n        };\n      }\n    }\n\n    if (this.props.Login.masterData.searchedData !== previousProps.Login.masterData.searchedData) {\n      if (this.props.Login.masterData.searchedData) {\n        if (this.props.Login.masterData.searchedData.length <= this.state.skip) {\n          this.setState({\n            skip: 0\n          });\n        }\n      }\n    }\n\n    if (bool) {\n      this.setState({\n        selectedRecord,\n        comboitem,\n        filterData,\n        selectedcombo,\n        filterCatList,\n        selectedMaterialCat,\n        materialCatList,\n        isSelectedRecordChange: false,\n        showSectionWhileEdit //, \n        // ismaterialSectionneed \n        // : bool?this.props.Login.selectedRecord.IDS_MATERIALCAT&&\n        // this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise:ismaterialSectionneed\n\n      });\n    }\n\n    if (this.props.Login.comboSet) {\n      this.setState({\n        selectedMaterialCat: this.props.Login.selectedMaterialCat\n      });\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          comboSet: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    } // else\n    // {\n    //     this.setState({\n    //     ismaterialSectionneed \n    //     : this.props.Login.selectedRecord.IDS_MATERIALCAT&&\n    //     this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\n    // });\n    // }\n\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n  handleClickDelete(masterData, ncontrolcode, modalName) {\n    const fieldArray = [];\n    let postParam = {\n      inputListName: \"Material\",\n      selectedObject: \"SelectedMaterial\",\n      primaryKeyField: \"nmaterialcode\",\n      primaryKeyValue: this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n      fetchUrl: \"material/getMaterial\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      }\n    };\n    modalName = 'openModal';\n    const inputParam = {\n      methodUrl: \"Material\",\n      classUrl: \"material\",\n      inputData: {\n        \"nmaterialconfigcode\": this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\n        \"material\": this.props.Login.masterData.SelectedMaterial,\n        \"nmaterialcatcode\": this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode,\n        \"userinfo\": this.props.Login.userInfo,\n        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n        \"nmaterialtypecode\": this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\n      },\n      operation: \"delete\",\n      postParam,\n      displayName: \"Material\"\n    };\n\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: true,\n          screenData: {\n            inputParam,\n            masterData\n          },\n          [modalName]: true,\n          operation: 'delete',\n          screenName: \"Material\",\n          id: \"material\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n    } else {\n      this.props.crudMaster(inputParam, masterData, modalName);\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  updateStore,\n  initialcombochangeget,\n  getAddMaterialPopup,\n  viewAttachment,\n  getMaterialReload,\n  crudMaster,\n  getMaterialDetails,\n  getMaterialEdit,\n  getMaterialByTypeCode,\n  addMaterialFile,\n  getAddMaterialSectionPopup,\n  getMaterialSectionEdit,\n  filterColumnData,\n  validateEsignCredential,\n  addSafetyInstructions,\n  addMaterialProperty\n})(injectIntl(Material));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/Material/Material.jsx"],"names":["React","Component","connect","FormattedMessage","injectIntl","Row","Col","Nav","Card","FormGroup","FormLabel","process","toast","FontAwesomeIcon","faTrashAlt","faPencilAlt","SlideOutModal","Esign","constructjsonOptionList","convertDateTimetoString","convertDateTimetoStringDBformat","rearrangeDateFormatDateOnly","formatInputDate","convertDateTimetoStringDBFormat","sortData","ListMaster","CustomTab","showEsign","getControlMap","constructOptionList","onDropAttachFileList","deleteAttachmentDropZone","create_UUID","rearrangeDateFormat","callService","updateStore","crudMaster","filterColumnData","validateEsignCredential","viewAttachment","initialcombochangeget","addSafetyInstructions","getAddMaterialPopup","getMaterialDetails","addMaterialProperty","getMaterialReload","getMaterialEdit","getMaterialByTypeCode","getAddMaterialSectionPopup","getMaterialSectionEdit","addMaterialFile","DEFAULT_RETURN","transactionStatus","attachmentType","ContentPanel","ReadOnlyText","MediaLabel","ConfirmMessage","BreadcrumbComponent","MaterialFilter","MaterialSectionTab","AddMaterialSection","Affix","MaterialMsdsAttachmentTab","AddMaterialFile","ProductList","PortalModal","ModalShow","SampleInfoView","DynamicSlideoutMaterial","mapStateToProps","state","Login","Material","constructor","props","paneSizeChange","d","setState","splitChangeWidthPercentage","openModal","operation","loginProps","selectedCombo","addId","masterData","selectedRecord","selectedcombo","selectedMaterialCat","warn","intl","formatMessage","id","dynamicmandatoryFeilds","mandatoryFeildsMaterial","selectedTemplate","jsondata","map","row","children","column","component","mandatory","inputtype","push","label","hasOwnProperty","componentrow","undefined","item","needsectionwise","YES","temp","i","idsName","accordianDesign","selectedmasterlistmain","SelectedMaterial","designaccordian","length","handleDateChange","dateValue","dateName","isSelectedRecordChange","onTabChange","tabProps","tabScreen","screenName","updateInfo","typeName","data","onDropMaterialFile","attachedFiles","fieldName","maxSize","actionType","deleteAttachment","event","file","onSaveMaterialFile","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","NO","testFileArray","nmaterialconfigcode","testFile","nmaterialcode","nmaterialfilecode","nstatus","ACTIVE","ndefaultstatus","LINK","formData","FormData","FTP","Array","isArray","forEach","index","tempData","Object","assign","splittedFileName","name","split","fileExtension","ssystemfilename","filesystemfileext","uniquefilename","ntestfilecode","sdescription","trim","NA","size","dcreateddate","userInfo","append","nfilesize","slinkfilename","slinkdescription","nlinkcode","value","JSON","stringify","inputParam","inputData","userinfo","isFileupload","classUrl","methodUrl","tabDetail","tabMap","Map","ismaterialSectionneed","set","controlMap","userRoleControlRights","sectionDataState","skip","take","screenname","dataState","getTestDetails","addMaterialSection","deleteRecordmain","selectedId","MaterialMsdsAttachment","param","viewMaterialFile","settings","deleteParam","selected","methodDataState","instrumentCatDataState","ncontrolCode","toLowerCase","nformcode","loadEsign","screenData","showMaterialSection","isneedcombomulti","ConfirmDelete","deleteId","confirmMessage","confirm","handleClickDelete","openFilter","showFilter","closeFilter","onFilterSubmit","searchRef","current","materialCatList","handlePageChange","e","validateEsign","sreason","nreasoncode","spredefinedreason","password","filedata","ndesigntemplatemappingcode","materialmsdsattachment","closeModal","showSectionWhileEdit","onComboChange","comboData","nmaterialtypecode","displaymember","comboName","comboitem","onComboChangedynamic","control","valuemember","nquerybuildertablecode","pkey","source","onInputOnChangeDynamic","radiotext","target","type","includes","indexOf","indexcomma","slice","onInputOnChange","optional2","checked","DEACTIVE","onSaveClick","saveType","formRef","varmain","postParam","Layout","isValid","SelectedMaterialType","selectedObject","primaryKeyField","inputListName","selectedComboName","selectedComboId","filtercombochange","searchedData","SelectedMaterialCategoryFilter","nmaterialcatcode","copyScreenRights","ConfirmComponent","selectedTemplateSafetyInstructions","dynamicobj","jsonuidata","MaterialSafetyInstructions","nmaterialsafetyinstructionscode","selectedTemplateProperties","MaterialProperties","nmaterialpropertycode","newarr","newarr1","nmaterialsectioncode","substring","newarrobj","nmaterialsectioncodeprimaryKeyValue","onNumericInputChange","copyAlertSave","reloadData","SelectedMaterialTypeFilter","parseInt","masterStatus","error","filterCatList","ControlRights","dataResult","createRef","getDerivedStateFromProps","render","has","get","ncontrolcode","editId","addParameterId","masterlistmain","MaterialType","MaterialCategoryMain","SelectedMaterialCategory","needSectionwise","searchedDatalistmain","searchFieldList","mandatoryFieldsMaterialFile","filterParam","fetchUrl","fecthInputObject","DesignMappedFeilds","parse","mandatoryFieldsMaterialSection","breadCrumbData","filterData","master","MaterialSection","ismaterialsectionEdit","productCategoryList","handleChange","timeZoneList","templateData","defaultTimeZone","linkMaster","componentDidMount","parentHeight","height","clientHeight","firstPane","generateBreadCrumData","smaterialtypename","slanguagetypecode","smaterialcatname","componentDidUpdate","previousProps","bool","values","materialTypeList","comboSet","componentWillUnmount","modalName","fieldArray","primaryKeyValue","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col, Nav, Card, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { constructjsonOptionList, convertDateTimetoString, convertDateTimetoStringDBformat, rearrangeDateFormatDateOnly, formatInputDate, convertDateTimetoStringDBFormat, sortData } from '../../components/CommonScript';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component'\r\nimport { showEsign, getControlMap, constructOptionList, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport {\r\n    callService, updateStore, crudMaster, filterColumnData, validateEsignCredential, viewAttachment,\r\n    initialcombochangeget, addSafetyInstructions, getAddMaterialPopup, getMaterialDetails, addMaterialProperty, getMaterialReload,\r\n    getMaterialEdit, getMaterialByTypeCode, getAddMaterialSectionPopup, getMaterialSectionEdit, addMaterialFile\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\r\nimport { ContentPanel, ReadOnlyText, MediaLabel } from '../../components/App.styles';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport MaterialFilter from './MaterialFilter';\r\nimport MaterialSectionTab from './MaterialSectionTab';\r\nimport AddMaterialSection from './AddMaterialSection';\r\nimport { Affix } from 'rsuite';\r\nimport MaterialMsdsAttachmentTab from './MaterialMsdsAttachmentTab';\r\nimport AddMaterialFile from './AddMaterialFile';\r\nimport { ReactComponent as Safety } from '../../assets/image/safety.svg';\r\nimport { ReactComponent as Property } from '../../assets/image/managed-hosting.svg';\r\nimport { ProductList } from '../product/product.styled';\r\nimport PortalModal from '../../PortalModal';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport DynamicSlideoutMaterial from './DynamicSlideoutMaterial';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Material extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n        this.state = {\r\n            masterStatus: \"\",\r\n            sectionDataState: { skip: 0, take: 10 },\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            filterCatList: [],\r\n            operation: \"\",\r\n            comboitem: undefined,\r\n            screenName: undefined,\r\n            selectedcombo: undefined,\r\n            isSelectedRecordChange: false,\r\n            showSectionWhileEdit: false,\r\n            selectedMaterialCat: undefined,\r\n            materialCatList: [],\r\n            userRoleControlRights: [],\r\n            ControlRights: undefined,\r\n            controlMap: new Map(),\r\n            dataResult: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            dataState: dataState,\r\n            data: [],\r\n            splitChangeWidthPercentage: 30,\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    render() {\r\n      //  console.log('selected r :', this.props.Login.masterData)\r\n        const addId = this.state.controlMap.has(\"AddMaterial\") && this.state.controlMap.get(\"AddMaterial\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditMaterial\") && this.state.controlMap.get(\"EditMaterial\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteMaterial\") && this.state.controlMap.get(\"DeleteMaterial\").ncontrolcode;\r\n        const addParameterId = this.state.controlMap.has(\"AddMaterialSafetyInstructions\")\r\n            && this.state.controlMap.get(\"AddMaterialSafetyInstructions\").ncontrolcode;\r\n        const addMaterialProperty = this.state.controlMap.has(\"AddMaterialProperties\")\r\n            && this.state.controlMap.get(\"AddMaterialProperties\").ncontrolcode;\r\n        let masterlistmain = []\r\n         this.props.Login.masterData.Material = this.props.Login.masterData.Material &&\r\n           sortData(this.props.Login.masterData.Material, \"descending\", \"nmaterialcode\")\r\n        this.props.Login.masterData.MaterialType = this.props.Login.masterData.MaterialType &&\r\n            sortData(this.props.Login.masterData.MaterialType, \"ascending\", \"nmaterialtypecode\")\r\n        this.props.Login.masterData.MaterialCategoryMain = this.props.Login.masterData.MaterialCategoryMain &&\r\n            sortData(this.props.Login.masterData.MaterialCategoryMain, \"ascending\", \"nmaterialcatcode\")\r\n        this.props.Login.masterData.searchedData = this.props.Login.masterData.searchedData &&\r\n        sortData(this.props.Login.masterData.searchedData, \"descending\", \"nmaterialcode\")\r\n            \r\n        if (this.props.Login.masterData.SelectedMaterialCategory &&\r\n            this.props.Login.masterData.SelectedMaterialCategory.needSectionwise === transactionStatus.YES) {\r\n            if (this.props.Login.masterData.SelectedMaterial) {\r\n                delete this.props.Login.masterData.SelectedMaterial['Section'];\r\n                delete this.props.Login.masterData.SelectedMaterial['Reorder Level'];\r\n            }\r\n        }\r\n\r\n        // this.props.Login.masterData.Material &&\r\n        //     this.props.Login.masterData.Material.map((temp, i) => {\r\n        //         return masterlistmain.push(this.props.Login.masterData.Material[i].jsondata)\r\n        //     })\r\n        let searchedDatalistmain = []\r\n\r\n        // if (this.props.Login.masterData.searchedData === undefined) {\r\n        //     searchedDatalistmain = undefined\r\n        // } else {\r\n        //     this.props.Login.masterData.searchedData &&\r\n        //         this.props.Login.masterData.searchedData.map((temp, i) => {\r\n        //             return searchedDatalistmain.push(this.props.Login.masterData.searchedData[i].jsondata)\r\n        //         })\r\n        // }\r\n        let searchFieldList = []\r\n        let mandatoryFieldsMaterialFile = []\r\n        // if (this.props.Login.masterData.SelectedMaterialType) {\r\n        //     if (this.props.Login.masterData.SelectedMaterialType.length > 0) {\r\n        //         if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\r\n        //             searchFieldList = [\r\n        //                 \"Standard Name\"\r\n        //             ]\r\n        //         }\r\n        //         else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\r\n        //             searchFieldList = [\r\n        //                 \"Volumetric Name\"\r\n        //             ]\r\n        //         }\r\n        //         else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\r\n        //             searchFieldList = [\r\n        //                 \"Material Name\"\r\n        //             ]\r\n        //         }\r\n        //     }\r\n        // }\r\n        const filterParam = {\r\n            inputListName: \"Material\", selectedObject: \"SelectedMaterial\", primaryKeyField: \"nmaterialcode\",\r\n            fetchUrl: \"material/getMaterialByID\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            // isjsondata: true,\r\n            searchFieldList: this.props.Login.masterData.DesignMappedFeilds &&\r\n                JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['searchFieldList'][0]['searchFieldList'] &&\r\n                JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['searchFieldList'][0]['searchFieldList']\r\n        };\r\n        this.props.Login.screenname === 'IDS_MATERIALMSDSATTACHMENT' && (this.props.Login.selectedRecord &&\r\n            this.props.Login.selectedRecord.nattachmenttypecode === attachmentType.LINK) ?\r\n            mandatoryFieldsMaterialFile = [\r\n                { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ]\r\n            :\r\n            mandatoryFieldsMaterialFile = [\r\n                { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n            ]\r\n\r\n        const mandatoryFieldsMaterialSection = [\r\n            {\r\n                \"mandatory\": false, \"idsName\": \"IDS_MATERIALSECTION\", \"dataField\": \"nmaterialsectioncode\",\r\n                \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            }\r\n        ];\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb  fixed_breadcrumd \">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={64}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix>\r\n                        : \"\"\r\n                    }\r\n                    <Row noGutters>\r\n                        <Col md={4} >\r\n\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Material\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                //  masterList={searchedDatalistmain || masterlistmain}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Material}\r\n                                getMasterDetail={(master) => this.props.getMaterialDetails(master, this.props.Login.masterData, this.props.Login.userInfo)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial}\r\n                                primaryKeyField=\"nmaterialcode\"\r\n                                // mainField={this.props.Login.masterData.SelectedMaterialType ?\r\n                                //     this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\r\n                                //         \"Standard Name\" :\r\n                                //         this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\r\n                                //             \"Volumetric Name\" :\r\n                                //             \"Material Name\" : \"\"}\r\n                                // firstField={\"Reorder Level\"}\r\n                                mainField={this.props.Login.masterData.DesignMappedFeilds &&\r\n                                    JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['mainField']}\r\n                                firstField={\r\n                                    this.props.Login.masterData.DesignMappedFeilds &&\r\n                                    JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField'] &&\r\n                                    JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField']\r\n                                    //||JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField']\r\n                                }\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                showFilterIcon={true}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_FILTER\":\r\n                                            <MaterialFilter\r\n                                                filterCatList={this.state.filterCatList || []}\r\n                                                materialCatList={this.state.materialCatList || []}\r\n                                                selectedRecord={this.state.selectedcombo || {}}//\r\n                                                selectedMaterialCat={this.state.selectedMaterialCat || {}}\r\n                                                onComboChange={this.onComboChange}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                                openModal={() => this.openModal(\r\n                                    \"create\", this.props.Login, this.state.selectedcombo,\r\n                                    addId, this.props.Login.masterData,\r\n                                    this.state.selectedRecord)}\r\n                            />\r\n                        </Col>\r\n                        <Col md='8'>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        {this.props.Login.masterData.Material && this.props.Login.masterData.Material.length > 0 && this.props.Login.masterData.SelectedMaterial ?\r\n                                            <Card className=\"border-0\">\r\n                                                <Card.Header>\r\n                                                    <Card.Title className=\"product-title-main\">\r\n                                                        {this.props.Login.masterData.SelectedMaterialType ?\r\n                                                            this.props.Login.masterData.SelectedMaterial['Material Name'] : \"\"}\r\n                                                    </Card.Title>\r\n                                                    <Card.Subtitle>\r\n                                                        <ProductList className=\"d-flex product-category icon-group-wrap\">\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                <MediaLabel >\r\n                                                                {this.props.intl.formatMessage({ id: \"IDS_QUARANTINE\" })} :\r\n                                                                </MediaLabel>\r\n                                                                <MediaLabel\r\n                                                                    className={`btn btn-outlined ${this.props.Login.masterData.\r\n                                                                        SelectedMaterial['Quarantine'] === \"Yes\" ?\r\n                                                                        \"outline-success\" : \"outline-danger\"} btn-sm ml-3`}>\r\n                                                                    {this.props.Login.masterData.SelectedMaterial\r\n                                                                    ['Quarantine'] === \"Yes\" ?\r\n                                                                        'Yes' : 'No'}\r\n                                                                </MediaLabel>\r\n                                                            </h2>\r\n\r\n                                                            <div className=\"d-inline \">\r\n                                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                 //   data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={(e) =>\r\n                                                                        this.props.getAddMaterialPopup(\r\n                                                                            \"update\", this.props.Login, this.state.selectedcombo,\r\n                                                                            editId, this.props.Login.masterData,\r\n                                                                            this.state.selectedRecord)\r\n                                                                    }\r\n                                                                >\r\n\r\n                                                                    <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                                </Nav.Link>\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                 //   data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={() => this.ConfirmDelete(deleteId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                                                </Nav.Link>\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDMATERIALSAFETYINSTRUCTIONS\" })}\r\n                                                                 //   data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={(e) => this.props.addSafetyInstructions(this.props.Login.masterData,\r\n                                                                        this.props.Login.userInfo, addParameterId, \"create\", {})}\r\n                                                                >\r\n                                                                    <Safety className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDMATERIALPROPERTY\" })}\r\n                                                                  //  data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={(e) => this.props.addMaterialProperty(this.props.Login.masterData,\r\n                                                                        this.props.Login.userInfo, addMaterialProperty, \"create\", {})}\r\n                                                                >\r\n                                                                    <Property className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                </Nav.Link>\r\n                                                            </div>\r\n                                                        </ProductList>\r\n                                                    </Card.Subtitle>\r\n                                                </Card.Header>\r\n                                                <Card.Body>\r\n                                                    <Row>\r\n                                                        {/* {this.accordianDesign()} */}\r\n                                                        <SampleInfoView\r\n                                                            data={this.props.Login.masterData.SelectedMaterial}\r\n                                                            SingleItem={JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)\r\n                                                            ['MaterialViewFields'\r\n                                                            ]}\r\n                                                            screenName=\"IDS_SAMPLEINFO\"\r\n                                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                                        />\r\n                                                    </Row>\r\n                                                    {this.props.Login.masterData && <CustomTab activeKey={this.props.Login.masterData.tabScreen || 'IDS_MATERIALMSDSATTACHMENT'} tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />}\r\n                                                </Card.Body>\r\n                                            </Card> : \"\"}\r\n                                    </ContentPanel>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {/* {this.props.Login.openPortal &&\r\n\r\n                        <DynamicSlideoutMaterial\r\n                            selectedRecord={this.state.selectedRecord}\r\n                            enableDisableTextInput={this.props.Login.selectedRecord['IDS_EXPIRY']}\r\n                            templateData={this.props.Login.masterData.selectedTemplate &&\r\n                                this.props.Login.masterData.selectedTemplate[0].jsondata}\r\n                            onNumericInputChange={this.onNumericInputChange}\r\n                            handleChange={this.handleChange}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            comboData={this.props.Login.templateData && this.props.Login.templateData.comboData}\r\n                            onComboChange={this.onComboChangedynamic}\r\n\r\n                        />\r\n                } */}\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.screenname === 'IDS_MATERIALSAFETYINSTRUCTIONS' ? '' :\r\n                            this.props.Login.screenname === 'IDS_MATERIALPROPERTY' ? '' :\r\n                                this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenname}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenname === 'IDS_MATERIALMSDSATTACHMENT' ? mandatoryFieldsMaterialFile : this.props.Login.screenname === 'IDS_MATERIAL' ? this.dynamicmandatoryFeilds() :\r\n                            this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ?\r\n                                this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ? mandatoryFieldsMaterialSection : ''\r\n                                : ''}\r\n                        updateStore={this.props.updateStore}\r\n                        addComponent={\r\n                            this.props.Login.loadEsign ?\r\n                                <Esign operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                                :\r\n                                this.props.Login.screenname !== \"IDS_MATERIALMSDSATTACHMENT\" ?\r\n                                    this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ?\r\n                                        this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ?\r\n                                            this.props.Login.showMaterialSection ?\r\n                                                <AddMaterialSection\r\n                                                    selectedRecord={this.props.Login.selectedRecord || {}}\r\n                                                    onInputOnChange={this.onInputOnChange}\r\n                                                    MaterialSectionCombodata={this.props.Login.masterData.MaterialSection && this.props.Login.masterData.MaterialSection}\r\n                                                    onNumericInputChange={this.onNumericInputChange}\r\n                                                    onComboChange={this.onComboChange}\r\n                                                    isDisabled={this.props.Login.isneedcombomulti && this.props.Login.isneedcombomulti}\r\n                                                    ismaterialsectionEdit={this.props.Login.ismaterialsectionEdit}\r\n\r\n                                                    comboData={this.props.Login.masterData.productCategoryList}\r\n                                                />\r\n                                                :\r\n                                                <DynamicSlideoutMaterial\r\n                                                    operation={this.props.Login.operation}\r\n                                                    showSectionWhileEdit={this.state.showSectionWhileEdit}\r\n                                                    selectedRecord={this.state.selectedRecord}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    isBreadCrumbCategory=\r\n                                                    {this.props.Login.operation==='update'?\r\n                                                    this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode===\r\n                                                        this.props.Login.selectedRecord['Material Category'].value?true:false\r\n                                                    :false}\r\n                                                    enableDisableNeedExpiry={this.props.Login.selectedRecord['Expiry']}\r\n                                                    enableDisableOpenExpiry={this.props.Login.selectedRecord['Open Expiry Need']}\r\n                                                    enableDisableNextValidation={this.props.Login.selectedRecord['Next Validation Need']}\r\n                                                    enableDisableNextValidationNeed={this.props.Login.selectedRecord['Quarantine']}\r\n                                                    enableDisableExpiryPolicy={this.props.Login.selectedRecord['Expiry Validations']}\r\n                                                    \r\n                                                    templateData={this.props.Login.masterData.selectedTemplate &&\r\n                                                        this.props.Login.masterData.selectedTemplate[0].jsondata}\r\n                                                    onNumericInputChange={this.onNumericInputChange}\r\n                                                    handleChange={this.handleChange}\r\n                                                    onInputOnChange={this.onInputOnChange}\r\n                                                    timeZoneList={this.props.Login.timeZoneList}\r\n                                                    handleDateChange={this.handleDateChange}\r\n                                                    comboData={this.props.Login.templateData && this.props.Login.templateData.comboData}\r\n                                                    onComboChange={this.onComboChangedynamic}\r\n                                                    // ismaterialSectionneed={this.state.ismaterialSectionneed}\r\n                                                    screenname={this.props.Login.screenname}\r\n                                                    ismaterialSectionneed={this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item &&\r\n                                                        this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise\r\n                                                        || this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].needsectionwise || this.props.Login.masterData.ismaterialSectionneed}\r\n                                                />\r\n                                            :\r\n                                            <DynamicSlideoutMaterial\r\n                                                selectedRecord={this.state.selectedRecord}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                templateData={this.props.Login.masterData.selectedTemplateSafetyInstructions &&\r\n                                                    this.props.Login.masterData.selectedTemplateSafetyInstructions[0].jsondata}\r\n                                                handleChange={this.handleChange}\r\n                                                onInputOnChange={this.onInputOnChangeDynamic}\r\n                                            />\r\n                                        :\r\n                                        <DynamicSlideoutMaterial\r\n                                            selectedRecord={this.props.Login.selectedRecord}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            templateData={this.props.Login.masterData.selectedTemplateProperties &&\r\n                                                this.props.Login.masterData.selectedTemplateProperties[0].jsondata}\r\n                                            // userInfo={this.props.Login.userInfo}\r\n                                            handleChange={this.handleChange}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            timeZoneList={this.props.Login.timeZoneList && this.props.Login.timeZoneList}\r\n                                            onComboChange={this.onComboChangedynamic}\r\n                                            defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                        /> :\r\n                                    <AddMaterialFile\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onDrop={this.onDropMaterialFile}\r\n                                        deleteAttachment={this.deleteAttachment}\r\n                                        onComboChange={this.onComboChange}\r\n                                        linkMaster={this.props.Login.linkMaster}\r\n                                        maxSize={20}\r\n                                        maxFiles={1}\r\n                                        multiple={false}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_MATERIALMSDSATTACHMENT\" })}\r\n                                        name=\"testfilename\"\r\n                                    />\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    openModal = (operation, loginProps, selectedCombo,               \r\n        addId, masterData,selectedRecord)=>{\r\n        if (this.state.selectedcombo[\"nmaterialtypecode\"] && this.state.selectedMaterialCat[\"nmaterialcatcode\"]) {\r\n            this.props.getAddMaterialPopup(operation, loginProps, selectedCombo,               \r\n                addId, masterData,selectedRecord)\r\n        }\r\n        else{\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    dynamicmandatoryFeilds = () => {\r\n        let mandatoryFeildsMaterial = [];\r\n        this.props.Login.masterData.selectedTemplate &&\r\n            this.props.Login.masterData.selectedTemplate[0].jsondata.map((row) => {\r\n                row.children.map((column) => {\r\n                    column.children.map((component) => {\r\n                        if (component.mandatory) {\r\n                            if (component.inputtype === 'combo') {\r\n                                mandatoryFeildsMaterial.push({\r\n                                    \"idsName\": component.label, \"dataField\": component.label,\r\n                                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                                })\r\n                            }\r\n                            else {\r\n                                mandatoryFeildsMaterial.push({\r\n                                    \"idsName\": component.label, \"dataField\": component.label,\r\n                                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                                })\r\n                            }\r\n                        }\r\n                        component.hasOwnProperty(\"children\") && component.children.map((componentrow) => {\r\n                            if (componentrow.mandatory) {\r\n                                if (componentrow.inputtype === 'combo') {\r\n                                    mandatoryFeildsMaterial.push({\r\n                                        \"idsName\": componentrow.label, \"dataField\": componentrow.label,\r\n                                        \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                                    })\r\n                                }\r\n                                else {\r\n                                    mandatoryFeildsMaterial.push({\r\n                                        \"idsName\": componentrow.label, \"dataField\": componentrow.label,\r\n                                        \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                                    })\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        if (this.props.Login.selectedRecord['Expiry Validations']) {\r\n            if (this.props.Login.selectedRecord['Expiry Validations'] === 'Expiry policy') {\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"Expiry Policy Days\", \"dataField\": \"Expiry Policy Days\",\r\n                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\"\r\n                });\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"Expiry Policy Period\", \"dataField\": \"Expiry Policy Period\",\r\n                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.selectedRecord['Open Expiry Need']) {\r\n            if (this.props.Login.selectedRecord['Open Expiry Need'] === 3) {\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"Open Expiry\", \"dataField\": \"Open Expiry\",\r\n                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\"\r\n                });\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"Open Expiry Period\", \"dataField\": \"Open Expiry Period\",\r\n                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.selectedRecord['Next Validation Need']) {\r\n            if (this.props.Login.selectedRecord['Next Validation Need'] === 3) {\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"Next Validation\", \"dataField\": \"Next Validation\",\r\n                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\"\r\n                });\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"Next Validation Period\", \"dataField\": \"Next Validation Period\",\r\n                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                });\r\n            }\r\n        }\r\n        // if (this.props.Login.masterData.ismaterialSectionneed === transactionStatus.YES) {\r\n        if (this.props.Login.selectedRecord['Material Category'] !== undefined) {\r\n            if ((this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item ?\r\n                this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise :\r\n                this.props.Login.selectedRecord['Material Category'].needsectionwise) === transactionStatus.YES) {\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"Section\", \"dataField\": \"Section\",\r\n                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                }, {\r\n                    \"idsName\": \"Reorder Level\", \"dataField\": \"Reorder Level\",\r\n                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                })\r\n            } else {\r\n                mandatoryFeildsMaterial.map((temp, i) => {\r\n                    if (temp.idsName === 'Section' || temp.idsName === 'Reorder Level') {\r\n                        delete mandatoryFeildsMaterial[i];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return mandatoryFeildsMaterial;\r\n    }\r\n\r\n    accordianDesign = () => {\r\n        let selectedmasterlistmain = [];\r\n        this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.jsondata !== undefined &&\r\n            selectedmasterlistmain.push(this.props.Login.masterData.SelectedMaterial.jsondata)\r\n\r\n        let designaccordian = [];\r\n        this.props.Login.masterData.selectedTemplate[0].jsondata.map((row) => {\r\n            row.children.map((column) => {\r\n                column.children.map((component) => {\r\n                    if (component.inputtype === 'combo') {\r\n                        if (component.label !== undefined) {\r\n                            designaccordian.push(<Col md='4'>\r\n                                <FormGroup>\r\n                                    <FormLabel><FormattedMessage id={[component.label]} message={[component.label]} /></FormLabel>\r\n                                    <ReadOnlyText>\r\n                                        {selectedmasterlistmain.length > 0 &&\r\n                                            selectedmasterlistmain[0][component.label] ?\r\n                                            selectedmasterlistmain[0][component.label]['label'] : \"-\"}\r\n                                    </ReadOnlyText>\r\n\r\n                                </FormGroup>\r\n                            </Col>)\r\n                        }\r\n                    }\r\n                    else if (component.inputtype === 'toggle') {\r\n                        if (component.label !== undefined) {\r\n                            designaccordian.push(<Col md='4'>\r\n                                <FormGroup>\r\n                                    <FormLabel><FormattedMessage id={[component.label]} message={[component.label]} /></FormLabel>\r\n                                    <ReadOnlyText>\r\n                                        {selectedmasterlistmain.length > 0 &&\r\n                                            selectedmasterlistmain[0][component.label] &&\r\n                                            selectedmasterlistmain[0][component.label] === transactionStatus.YES ?\r\n                                            'Yes' : 'No'}\r\n                                    </ReadOnlyText>\r\n\r\n                                </FormGroup>\r\n                            </Col>)\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (component.label !== undefined) {\r\n                            designaccordian.push(<Col md='4'>\r\n                                <FormGroup>\r\n                                    <FormLabel><FormattedMessage id={[component.label]} message={[component.label]} /></FormLabel>\r\n                                    <ReadOnlyText>\r\n                                        {selectedmasterlistmain.length > 0 &&\r\n                                            selectedmasterlistmain[0][component.label] ? selectedmasterlistmain[0][component.label] : \"-\"}\r\n                                    </ReadOnlyText>\r\n\r\n                                </FormGroup>\r\n                            </Col>)\r\n                        }\r\n                    }\r\n                    component.hasOwnProperty(\"children\") && component.children.map((componentrow) => {\r\n                        if (componentrow.inputtype === 'combo') {\r\n                            if (componentrow.label !== undefined) {\r\n                                designaccordian.push(<Col md='4'>\r\n                                    <FormGroup>\r\n                                        <FormLabel><FormattedMessage id={[componentrow.label]} message={[componentrow.label]} /></FormLabel>\r\n                                        <ReadOnlyText>\r\n                                            {selectedmasterlistmain.length > 0 &&\r\n                                                selectedmasterlistmain[0][componentrow.label] ?\r\n                                                selectedmasterlistmain[0][componentrow.label]['label'] : \"-\"}\r\n                                        </ReadOnlyText>\r\n\r\n                                    </FormGroup>\r\n                                </Col>)\r\n                            }\r\n                        }\r\n                        else if (componentrow.inputtype === 'toggle') {\r\n                            if (componentrow.label !== undefined) {\r\n                                designaccordian.push(<Col md='4'>\r\n                                    <FormGroup>\r\n                                        <FormLabel><FormattedMessage id={[componentrow.label]} message={[componentrow.label]} /></FormLabel>\r\n                                        <ReadOnlyText>\r\n                                            {selectedmasterlistmain.length > 0 &&\r\n                                                selectedmasterlistmain[0][componentrow.label] &&\r\n                                                selectedmasterlistmain[0][componentrow.label]['label'] === transactionStatus.YES ?\r\n                                                'Yes' : 'No'}\r\n                                        </ReadOnlyText>\r\n\r\n                                    </FormGroup>\r\n                                </Col>)\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (componentrow.label !== undefined) {\r\n                                designaccordian.push(<Col md='4'>\r\n                                    <FormGroup>\r\n                                        <FormLabel><FormattedMessage id={[componentrow.label]} message={[componentrow.label]} /></FormLabel>\r\n                                        <ReadOnlyText>\r\n                                            {selectedmasterlistmain.length > 0 &&\r\n                                                selectedmasterlistmain[0][componentrow.label] ?\r\n                                                selectedmasterlistmain[0][componentrow.label] : \"-\"}\r\n                                        </ReadOnlyText>\r\n\r\n                                    </FormGroup>\r\n                                </Col>)\r\n                            }\r\n                        }\r\n                    }\r\n                    )\r\n                })\r\n            })\r\n        })\r\n        return designaccordian;\r\n    }\r\n\r\n    handleDateChange = (dateValue, dateName) => {\r\n\r\n        const { selectedRecord } = this.state;\r\n        let isSelectedRecordChange = this.state.isSelectedRecordChange\r\n        isSelectedRecordChange = true;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord, isSelectedRecordChange });\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const tabScreen = tabProps.screenName;\r\n        let masterData = this.props.Login.masterData\r\n        masterData['tabScreen'] = tabScreen\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onDropMaterialFile = (attachedFiles, fieldName, maxSize) => {\r\n\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\"\r\n        });\r\n    }\r\n\r\n    onSaveMaterialFile = () => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let testFileArray = [];\r\n        let nmaterialconfigcode;\r\n        let testFile = {\r\n            nmaterialconfigcode:this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\r\n            nmaterialcode: this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n            nmaterialfilecode: selectedRecord.nmaterialfilecode ? selectedRecord.nmaterialfilecode : 0,\r\n            nstatus: transactionStatus.ACTIVE,\r\n            nattachmenttypecode,\r\n\r\n            ndefaultstatus: selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] ? \r\n            selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] : 4\r\n        };\r\n        testFile['sdefaultstatus']={}\r\n         testFile['sdefaultstatus']=testFile['ndefaultstatus']===3?'Yes':'No'\r\n        const formData = new FormData();\r\n        if (nattachmenttypecode === attachmentType.FTP) {\r\n            if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const tempData = Object.assign({}, testFile);\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\r\n                    const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\r\n                    const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ntestfilecode && selectedRecord.ntestfilecode > 0\r\n                        && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\r\n                    tempData[\"sfilename\"] = file.name;\r\n                    tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\"; \r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    tempData[\"nfilesize\"] = file.size;\r\n                    tempData[\"dcreateddate\"] = this.props.Login.dcreateddate &&\r\n                        convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo)\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    testFileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                testFile[\"sfilename\"] = selectedRecord.sfilename;\r\n                testFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\"; \r\n                testFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                testFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                testFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                testFile[\"dcreateddate\"] = this.props.Login.dcreateddate &&\r\n                    convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo)\r\n                testFileArray.push(testFile);\r\n            }\r\n        } else {\r\n            testFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n            testFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\r\n            testFile[\"slinkname\"] = selectedRecord['nlinkcode'].label&&selectedRecord['nlinkcode'].label;\r\n            testFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            testFile[\"ssystemfilename\"] = \"\";\r\n            testFile[\"dcreateddate\"] = this.props.Login.dcreateddate &&\r\n                convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo)\r\n            testFile[\"nfilesize\"] = 0;\r\n            testFileArray.push(testFile);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"materialmsdsattachment\", JSON.stringify(testFileArray[0]));\r\n\r\n        let inputParam;\r\n        if (this.props.Login.operation === 'create') {\r\n            inputParam = {\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: \"create\",\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialMsdsAttachment\"\r\n            }\r\n        }\r\n        else {\r\n            inputParam = {\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: \"update\",\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialMsdsAttachment\"\r\n            }\r\n        }\r\n\r\n        return inputParam;\r\n    }\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        {\r\n            // let dataresultarr1 = []\r\n            // console.log('dcv :', this.props.Login.masterData.MaterialMsdsAttachment && this.props.Login.masterData.MaterialMsdsAttachment)\r\n            // this.props.Login.masterData.MaterialMsdsAttachment.map((temp) => {\r\n            //     temp['jsondata'].dcreateddate =\r\n            //      rearrangeDateFormatDateOnly(this.props.Login.userInfo, temp['jsondata'].dcreateddate)\r\n            // })\r\n            // console.log('dataresultarr1 :', this.props.Login.masterData.MaterialMsdsAttachment)\r\n\r\n            // let dataresultarr = []\r\n            // this.props.Login.masterData[\"MaterialSection\"] &&\r\n            //     this.props.Login.masterData[\"MaterialSection\"].map((temp) => {\r\n            //         return dataresultarr.push(temp.jsondata)\r\n            //     })\r\n           // console.log('xxx->>>', sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending', 'nmaterialsectioncode'))\r\n            this.props.Login.masterData.ismaterialSectionneed === 3 &&\r\n                tabMap.set(\"IDS_MATERIALSECTION\",\r\n                    <MaterialSectionTab\r\n                        controlMap={this.state.controlMap}\r\n                        userRoleControlRights={this.state.userRoleControlRights}\r\n                        dataResult={process(sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending', 'nmaterialsectioncode'),\r\n                            (this.props.screenName === undefined || this.props.screenName === \"IDS_MATERIALSECTION\")\r\n                                ? this.state.sectionDataState : { skip: 0, take: 10 })}\r\n                        dataState={(this.props.screenName === undefined || this.props.screenname === \"IDS_MATERIALSECTION\")\r\n                            ? this.state.sectionDataState : { skip: 0, take: 10 }}\r\n                        dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\r\n                        //data={process(sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending',\r\n                         //'nmaterialsectioncode'))}\r\n                         data={this.props.Login.masterData[\"MaterialSection\"]}\r\n                        masterData={this.props.Login.masterData}\r\n                        userInfo={this.props.Login.userInfo}\r\n                        getTestDetails={this.props.getTestDetails}\r\n                        getAddMaterialSectionPopup={this.props.getAddMaterialSectionPopup}\r\n                        addParameter={this.addMaterialSection}\r\n                        deleteRecord={this.deleteRecordmain}\r\n                        fetchRecord={this.props.getMaterialSectionEdit}\r\n                        selectedRecord={this.props.Login.selectedRecord}\r\n                        selectedId={this.props.Login.selectedId}\r\n                        screenName=\"IDS_MATERIALSECTION\"\r\n                    />\r\n                );\r\n            tabMap.set(\"IDS_MATERIALMSDSATTACHMENT\",\r\n                <MaterialMsdsAttachmentTab\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    deleteRecord={this.deleteRecordmain}\r\n                    MaterialMsdsAttachment={sortData(this.props.Login.masterData.MaterialMsdsAttachment, \"descending\", \"nmaterialfilecode\") || []}\r\n                    addMaterialFile={(param) => this.props.addMaterialFile(param, this.props.Login.masterData.SelectedMaterial)}\r\n                    viewMaterialFile={this.viewMaterialFile}\r\n                    screenName=\"IDS_MATERIALMSDSATTACHMENT\"\r\n                    settings={this.props.settings}\r\n                />);\r\n\r\n\r\n        }\r\n\r\n        return tabMap;\r\n    }\r\n\r\n    deleteRecordmain = (deleteParam) => {\r\n        const methodUrl = deleteParam.methodUrl;\r\n        const selected = deleteParam.methodUrl === 'MaterialSection' ? JSON.stringify(deleteParam.selectedRecord) :\r\n            JSON.stringify(deleteParam.selectedRecord);\r\n        let dataState = undefined;\r\n        if (this.props.screenName === \"IDS_SECTION\") {\r\n            dataState = this.state.sectionDataState;\r\n        } else if (this.props.screenName === \"IDS_METHOD\") {\r\n            dataState = this.state.methodDataState;\r\n        } else if (this.props.screenName === \"IDS_INSTRUMENTCATEGORY\") {\r\n            dataState = this.state.instrumentCatDataState;\r\n        }\r\n        const inputParam = {\r\n            inputData: { \r\n                nmaterialconfigcode:this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\r\n                ncontrolCode: deleteParam.ncontrolCode,\r\n                [methodUrl.toLowerCase()]: selected,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"material\",\r\n            operation: deleteParam.operation,\r\n            ncontrolCode: deleteParam.ncontrolCode,\r\n            methodUrl: methodUrl,\r\n            screenName: \"IDS_MATERIAL\", dataState\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"IDS_MATERIAL\", operation: deleteParam.operation, selectedRecord: {}\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n        }\r\n    }\r\n\r\n    addMaterialSection = (param) => {\r\n        let showMaterialSection = this.props.Login.showMaterialSection\r\n        let ncontrolCode = this.props.Login.ncontrolCode\r\n\r\n        let openModal = this.props.Login.openModal\r\n        let isneedcombomulti = this.props.Login.isneedcombomulti;\r\n        isneedcombomulti = false;\r\n        showMaterialSection = true\r\n        openModal = true\r\n        ncontrolCode = param;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showMaterialSection, isneedcombomulti, openModal }\r\n        }\r\n        this.props.getAddMaterialSectionPopup(this.props.Login.masterData, this.props.Login.userInfo, updateInfo, ncontrolCode)\r\n\r\n\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\"));\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let inputData = [];\r\n        inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\r\n        inputData[\"materialCatList\"] = this.state.materialCatList;\r\n        if (this.state.selectedcombo[\"nmaterialtypecode\"]&&this.state.selectedMaterialCat[\"nmaterialcatcode\"]) {\r\n            this.props.getMaterialByTypeCode(this.state.selectedcombo,\r\n                this.state.selectedMaterialCat, this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height\r\n            });\r\n        }\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        // if (Array.isArray(this.props.Login.masterData)) {\r\n        breadCrumbData.push(\r\n            {\r\n                \"label\": \"IDS_MATERIALTYPE\",\r\n                \"value\": this.props.Login.masterData.SelectedMaterialType ?\r\n                    this.props.Login.masterData.SelectedMaterialType[0]['jsondata'].smaterialtypename && this.props.Login.masterData.SelectedMaterialType[0]['jsondata'].smaterialtypename[this.props.Login.userInfo.slanguagetypecode] : \"NA\",\r\n\r\n            }, {\r\n\r\n            \"label\": \"IDS_MATERIALCAT\",\r\n            \"value\": this.props.Login.masterData.SelectedMaterialCategoryFilter ?\r\n                this.props.Login.masterData.SelectedMaterialCategoryFilter.smaterialcatname !== undefined ?\r\n                    this.props.Login.masterData.SelectedMaterialCategoryFilter.smaterialcatname : \"NA\" : \"NA\",\r\n        }\r\n        );\r\n        //  }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let bool = false;\r\n        let { selectedRecord, selectedcombo, comboitem, filterData, filterCatList, selectedMaterialCat,\r\n            materialCatList, ismaterialSectionneed ,showSectionWhileEdit} = this.state\r\n        const masterData = this.props.Login.masterData;\r\n        // if (this.props.Login.isSelectedRecordChange !== previousProps.Login.isSelectedRecordChange) {\r\n        //     bool = true;\r\n        //   isSelectedRecordChange = this.props.Login.isSelectedRecordChange\r\n        // }\r\n        // if (this.props.Login.selectedRecord.IDS_MATERIALCAT &&\r\n        //     this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\r\n        //     != previousProps.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise) {\r\n        //     bool = true;\r\n        //     ismaterialSectionneed = this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\r\n        // }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            bool = true;\r\n            selectedRecord = this.props.Login.selectedRecord\r\n        }\r\n        if (this.props.Login.selectedcombo !== previousProps.Login.selectedcombo) {\r\n            bool = true;\r\n            selectedcombo = this.props.Login.selectedcombo\r\n        }\r\n        \r\n        if (this.props.Login.showSectionWhileEdit !== previousProps.Login.showSectionWhileEdit) {\r\n            bool = true;\r\n            showSectionWhileEdit = this.props.Login.showSectionWhileEdit\r\n        }\r\n        if (this.props.Login.comboitem !== previousProps.Login.comboitem) {\r\n            bool = true;\r\n            comboitem = this.props.Login.comboitem\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({\r\n                userRoleControlRights, controlMap, data: this.props.Login.masterData.ControlRights\r\n            });\r\n        }\r\n        if (this.props.Login.masterData.MaterialType !== undefined) {\r\n            if (this.props.Login.masterData.MaterialType !== previousProps.Login.masterData.MaterialType) {\r\n                bool = true;\r\n                // const materialTypeList = constructOptionList(this.props.Login.masterData.MaterialType || [], \"nmaterialtypecode\",\r\n                //     \"smaterialtypename\", undefined, undefined, undefined);\r\n                //     constructOptionList(options, optionId,\r\n                //         optionValue, sortField, sortOrder, alphabeticalSort,\r\n                //          defaultStatusFieldName) \r\n                const materialTypeList = constructjsonOptionList(this.props.Login.masterData.MaterialType,\r\n                    \"nmaterialtypecode\", \"smaterialtypename\", undefined, undefined,\r\n                    undefined, undefined,\r\n                    undefined, true, this.props.Login.userInfo.slanguagetypecode)\r\n                filterCatList = materialTypeList.get(\"OptionList\");\r\n              //  console.log('masterData.MaterialType :', masterData.MaterialType)\r\n                selectedcombo = {\r\n                    nmaterialtypecode: masterData.MaterialType && masterData.MaterialType.length > 0 ? {\r\n                        \"value\": masterData.MaterialType[0].nmaterialtypecode,\r\n                        \"label\": masterData.MaterialType[0]['jsondata'].smaterialtypename[this.props.Login.userInfo.slanguagetypecode]\r\n                    } : \"\"\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (this.props.Login.masterData.MaterialCategoryMain !== previousProps.Login.masterData.MaterialCategoryMain) {\r\n            const MaterialCategoryMain = constructOptionList(this.props.Login.masterData.MaterialCategoryMain || [], \"nmaterialcatcode\",\r\n                \"smaterialcatname\", undefined, undefined, undefined);\r\n            materialCatList = MaterialCategoryMain.get(\"OptionList\");\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            filterData = this.generateBreadCrumData();\r\n            if (masterData.SelectedMaterialCategory !==previousProps.Login.masterData.SelectedMaterialCategory) {\r\n       \r\n                const MaterialCategoryMain = constructOptionList(this.props.Login.masterData.MaterialCategoryMain || [], \"nmaterialcatcode\",\r\n                    \"smaterialcatname\", undefined, undefined, undefined);\r\n                materialCatList = MaterialCategoryMain.get(\"OptionList\");\r\n    \r\n                selectedMaterialCat = {\r\n                    nmaterialcatcode: masterData.MaterialCategoryMain && masterData.MaterialCategoryMain.length > 0 ? {\r\n                        \"value\": masterData.SelectedMaterialCategory.nmaterialcatcode,\r\n                        \"label\": masterData.SelectedMaterialCategory.smaterialcatname\r\n                    } : \"\"\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if (this.props.Login.masterData.searchedData !== previousProps.Login.masterData.searchedData) {\r\n            if (this.props.Login.masterData.searchedData) {\r\n                if (this.props.Login.masterData.searchedData.length <= this.state.skip) {\r\n                    this.setState({ skip: 0 });\r\n                }\r\n            }\r\n        }\r\n\r\n \r\n\r\n\r\n\r\n        if (bool) {\r\n            this.setState({\r\n                selectedRecord, comboitem, filterData, selectedcombo, filterCatList, selectedMaterialCat,\r\n                materialCatList, isSelectedRecordChange: false,showSectionWhileEdit\r\n                //, \r\n                // ismaterialSectionneed \r\n                // : bool?this.props.Login.selectedRecord.IDS_MATERIALCAT&&\r\n                // this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise:ismaterialSectionneed\r\n            });\r\n        }\r\n\r\n        if(this.props.Login.comboSet){\r\n            this.setState({ selectedMaterialCat: this.props.Login.selectedMaterialCat});\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { comboSet: false }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        // else\r\n        // {\r\n        //     this.setState({\r\n        //     ismaterialSectionneed \r\n        //     : this.props.Login.selectedRecord.IDS_MATERIALCAT&&\r\n        //     this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\r\n        // });\r\n        // }\r\n    }\r\n\r\n    handlePageChange = e => {\r\n\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n\r\n    };\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    viewMaterialFile = (filedata) => {\r\n        const inputParam = {\r\n            inputData: {\r\n                nmaterialcode: this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                    && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                    ndesigntemplatemappingcode:this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\r\n                materialmsdsattachment: JSON.stringify(filedata),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"material\",\r\n            operation: \"view\",\r\n            methodUrl: \"AttachedMaterialMsdsAttachment\",\r\n            screenname: \"IDS_MATERIALMSDSATTACHMENT\"\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let showSectionWhileEdit=this.props.Login.showSectionWhileEdit\r\n        let showMaterialSection = this.props.Login.showMaterialSection\r\n        let isneedcombomulti = this.props.Login.isneedcombomulti;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"retire\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            showMaterialSection = false;\r\n            isneedcombomulti = false;\r\n            showSectionWhileEdit= false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, showMaterialSection,showMaterialSection, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            if (fieldName === \"nmaterialtypecode\") {\r\n                const selectedcombo = this.state.selectedcombo || {};\r\n                selectedcombo[fieldName] = comboData;\r\n                this.searchRef.current.value = \"\";\r\n                this.props.initialcombochangeget(comboData.item.nmaterialtypecode, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n            }\r\n            else if (fieldName === \"nmaterialcatcode\") {\r\n                const selectedMaterialCat = this.state.selectedMaterialCat || {};\r\n                selectedMaterialCat[fieldName] = comboData;\r\n                this.setState({ selectedMaterialCat });\r\n            }\r\n\r\n            else if (fieldName === \"nmaterialsectioncode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[\"nmaterialsectioncode\"] = comboData;\r\n                this.setState({ selectedRecord });\r\n            }\r\n            else if (fieldName === \"nlinkcode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[\"nlinkcode\"] = comboData;\r\n                this.setState({ selectedRecord });\r\n            }\r\n\r\n            else if (fieldName.displaymember === \"smaterialcatname\" || fieldName.displaymember === \"sunitname\" || fieldName.displaymember === \"speriodname\") {\r\n                const selectedMaterialCat = this.state.selectedMaterialCat || {};\r\n                selectedMaterialCat[fieldName] = comboData;\r\n                this.setState({ selectedMaterialCat });\r\n\r\n                let comboName = fieldName.label\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                if (comboData) {\r\n                    selectedRecord[comboName] = comboData;\r\n                } else {\r\n                    selectedRecord[comboName] = []\r\n                }\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n\r\n            else if (fieldName.label === \"IDS_STORAGECONDITION\") {\r\n                let comboName = fieldName.label\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                if (comboData) {\r\n                    selectedRecord[comboName] = comboData;\r\n                } else {\r\n                    selectedRecord[comboName] = []\r\n                }\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else if (fieldName === \"value\") {\r\n                const comboitem = this.state.comboitem || {};\r\n                comboitem[fieldName] = comboData;\r\n                this.setState({ comboitem });\r\n            }\r\n        }\r\n    }\r\n\r\n    onComboChangedynamic = (comboData, control) => {\r\n        \r\n        let isSelectedRecordChange = this.state.isSelectedRecordChange\r\n        if(comboData === null && comboData === undefined && control.valuemember && control.nquerybuildertablecode)\r\n        {\r\n            comboData[\"item\"] = {...comboData[\"item\"], pkey:control.valuemember,\r\n            nquerybuildertablecode:control.nquerybuildertablecode ,\"source\": control.source}\r\n        } \r\n        if (control.inputtype === 'date') {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[`tz${control.label}`] = comboData;\r\n            isSelectedRecordChange = true\r\n            this.setState({ selectedRecord, isSelectedRecordChange });\r\n        }\r\n        else {\r\n            if (control.label === 'Material Category') {\r\n                let ismaterialSectionneed = this.props.Login.masterData.ismaterialSectionneed\r\n                let showSectionWhileEdit = this.state.showSectionWhileEdit\r\n                ismaterialSectionneed = comboData.item.jsondata.needsectionwise\r\n                // const updateInfo = {\r\n                //     typeName: DEFAULT_RETURN,\r\n                //     data: {\r\n                //         ismaterialSectionneed\r\n                //     }\r\n                // }\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[control.label] = comboData;\r\n                isSelectedRecordChange = true\r\n                showSectionWhileEdit = true\r\n                this.setState({ selectedRecord, isSelectedRecordChange, ismaterialSectionneed, showSectionWhileEdit });\r\n                //   this.props.onMaterialCatChange(comboData.item.jsondata.needsectionwise );\r\n            }\r\n            else {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[control.label] = comboData && (comboData === null || comboData === undefined) ? undefined : comboData;\r\n                isSelectedRecordChange = true\r\n                this.setState({ selectedRecord, isSelectedRecordChange });\r\n            }\r\n        }\r\n    \r\n\r\n    }\r\n    onInputOnChangeDynamic = (event, radiotext) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let isSelectedRecordChange = this.state.isSelectedRecordChange\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === 'timeonly') {\r\n                selectedRecord['dateonly'] = false;\r\n            }\r\n            if (event.target.name === 'dateonly') {\r\n                selectedRecord['timeonly'] = false;\r\n            }\r\n            const value = selectedRecord[event.target.name];\r\n            if (value !== '' && value !== undefined) {\r\n                if (value.includes(radiotext)) {\r\n                    const index = value.indexOf(radiotext);\r\n                    if (index !== -1) {\r\n                        if (index == 0) {\r\n                            const indexcomma = value.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(indexcomma + 1)\r\n\r\n                            } else {\r\n                                selectedRecord[event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            //  const  indexcomma= value.indexOf(\",\")\r\n                            if (value.slice(index).indexOf(\",\") !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = value.slice(0, index - 1)\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectedRecord[event.target.name] = value + ',' + radiotext;\r\n                }\r\n\r\n            } else {\r\n                selectedRecord[event.target.name] = radiotext;\r\n            }\r\n        }\r\n        else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = radiotext;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        isSelectedRecordChange = true;\r\n        this.setState({ selectedRecord, isSelectedRecordChange });\r\n    }\r\n    onInputOnChange = (event, optional2) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let isSelectedRecordChange = this.state.isSelectedRecordChange\r\n        if (this.props.Login.screenname !== \"IDS_MATERIALMSDSATTACHMENT\") {\r\n            if (event.target.type === 'checkbox') {\r\n                if (event.target.name === \"ntransactionstatus\")\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n                else\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n                if (event.target.name === 'Expiry') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Expiry Policy Days']) {\r\n                            delete selectedRecord['Expiry Policy Days']\r\n                        }\r\n\r\n                        if (selectedRecord['tzExpiry Policy Days']) {\r\n                            delete selectedRecord['tzExpiry Policy Days']\r\n                        }\r\n                        if (selectedRecord['Need Expiry']) {\r\n                            selectedRecord['Need Expiry'] = 4\r\n                        }\r\n                    }\r\n                }\r\n                if (event.target.name === 'Need Expiry' || event.target.name === 'Expiry Validations') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Expiry Policy Days']) {\r\n                            delete selectedRecord['Expiry Policy Days']\r\n                        }\r\n                        if (selectedRecord['tzExpiry Policy Days']) {\r\n                            delete selectedRecord['tzExpiry Policy Days']\r\n                        }\r\n                    } \r\n                }\r\n\r\n                if (event.target.name === 'Open Expiry Need') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Open Expiry']) {\r\n                            delete selectedRecord['Open Expiry']\r\n                        }\r\n                        if (selectedRecord['tzOpen Expiry']) {\r\n                            delete selectedRecord['tzOpen Expiry']\r\n                        }\r\n                    }\r\n                }\r\n                if (event.target.name === 'Next Validation Need') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Next Validation']) {\r\n                            delete selectedRecord['Next Validation']\r\n                        }\r\n                        if (selectedRecord['tzNext Validation']) {\r\n                            delete selectedRecord['tzNext Validation']\r\n                        }\r\n                    }\r\n                }\r\n                if (event.target.name === 'Quarantine') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Next Validation Need']) {\r\n                              selectedRecord['Next Validation Need']=4\r\n                        }\r\n                        if (selectedRecord['Next Validation']) {\r\n                            delete selectedRecord['Next Validation']\r\n                        }\r\n                        \r\n                        // if (selectedRecord['Next Validation Period']) {\r\n                        //     delete selectedRecord['Next Validation Period']\r\n                        // }\r\n                    }\r\n                }\r\n            } else if (event.target.type === 'radio') {\r\n                 if (optional2 !== 'Expiry policy') {\r\n                    if (selectedRecord['Expiry Policy Days']) {\r\n                        delete selectedRecord['Expiry Policy Days']\r\n                    }\r\n                    if (selectedRecord['tzExpiry Policy Days']) {\r\n                        delete selectedRecord['tzExpiry Policy Days']\r\n                    }\r\n                }\r\n                selectedRecord[event.target.name] = optional2\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n            isSelectedRecordChange = true\r\n            this.setState({ selectedRecord, isSelectedRecordChange });\r\n        }\r\n        else {\r\n            if (event.target.type === 'checkbox') {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            } else if (event.target.type === 'radio') {\r\n                selectedRecord[event.target.name] = optional2;\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n       // console.log(\"selected:\", this.state.selectedRecord);\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        let varmain = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        inputData[\"DateList\"] = []\r\n        let nmaterialconfigcode;\r\n        nmaterialconfigcode=this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode\r\n        if (this.props.Login.screenname === \"IDS_MATERIAL\") {\r\n\r\n            // if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\r\n            //     varmain = \"Standard Name\"\r\n            // }\r\n            // else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\r\n            //     varmain = \"Volumetric Name\"\r\n            // }\r\n            // else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\r\n            //     varmain = \"Material Name\"\r\n            // }\r\n            inputData[\"Material\"] = {}\r\n            inputData[\"jsonuidata\"] = {}\r\n         \r\n            const Layout = this.props.Login.masterData.selectedTemplate[0].jsondata\r\n            Layout.map((row) => {\r\n                row.children.map((column) => {\r\n                    column.children.map((component) => {\r\n\r\n\r\n                        if (component.inputtype === 'combo') {\r\n                            let isValid = false;\r\n                            if(component.label === 'Expiry Policy Period'){\r\n                                if(this.state.selectedRecord['Expiry Policy Days'] &&  this.state.selectedRecord['Expiry Policy Days'] > 0){\r\n                                    isValid = true;\r\n                                }\r\n                            }\r\n                            else if(component.label === 'Open Expiry Period'){\r\n                                if(this.state.selectedRecord['Open Expiry'] &&  this.state.selectedRecord['Open Expiry'] > 0){\r\n                                    isValid = true;\r\n                                }\r\n                            }\r\n                            else if(component.label === 'Next Validation Period'){\r\n                                if(this.state.selectedRecord['Next Validation'] &&  this.state.selectedRecord['Next Validation'] > 0){\r\n                                    isValid = true;\r\n                                }\r\n                            }\r\n                            else{\r\n                                isValid = true;\r\n                            }\r\n                            if(isValid){\r\n                                inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label] ? {\r\n                                    label: this.state.selectedRecord[component.label][\"label\"],\r\n                                    value: this.state.selectedRecord[component.label][\"value\"],\r\n                                    pkey: this.state.selectedRecord[component.label].item.pkey,\r\n                                    nquerybuildertablecode: this.state.selectedRecord[component.label].item.nquerybuildertablecode,\r\n                                    item:this.state.selectedRecord[component.label].item\r\n                                } : \"\"\r\n                                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] ?\r\n                                    this.state.selectedRecord[component.label][\"label\"]\r\n                                    : \"\"\r\n                            }\r\n                        }\r\n                        else if (component.inputtype === 'date') {\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                inputData[\"Material\"][`tz${component.label}`] = component.hasOwnProperty('timezone') ? {\r\n                                    label: this.state.selectedRecord[`tz${component.label}`][\"label\"],\r\n                                    value: this.state.selectedRecord[`tz${component.label}`][\"value\"]\r\n                                } : {\r\n                                    label: this.props.Login.userInfo['stimezoneid'],\r\n                                    value: this.props.Login.userInfo['ntimezonecode']\r\n                                }\r\n                                inputData[\"Material\"][component.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo)\r\n                                inputData[\"DateList\"].push(component.label)\r\n                            }\r\n                            inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] ?\r\n                                convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo)\r\n                                : \"\"\r\n\r\n                        }\r\n                        else if (component.inputtype === 'toggle') {\r\n                            // if (component.label === 'Quarantine') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]===undefined?4:\r\n                            //     this.state.selectedRecord[component.label]\r\n                            // }\r\n                            // else if (component.label === 'Expiry') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            // }\r\n                            // else if (component.label === 'Need Expiry') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            // }\r\n                            // else if (component.label === 'Open Expiry Need') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            // }\r\n                            // else if (component.label === 'Reusable') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            // }\r\n                            if (this.state.selectedRecord[component.label] === \"\") {\r\n                                inputData[\"Material\"][component.label] = 4\r\n                            } else if (this.state.selectedRecord[component.label] === undefined) {\r\n                                inputData[\"Material\"][component.label] = 4\r\n                            }\r\n                            else {\r\n                                inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            }\r\n                            if (this.state.selectedRecord[component.label] !== \"\") {\r\n                                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] === transactionStatus.YES ?\r\n                                    'Yes' : 'No'\r\n                            }\r\n                        }\r\n                        else {\r\n                          if (component.label !== undefined) {\r\n                                inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label] !== undefined?\r\n                                this.state.selectedRecord[component.label]?this.state.selectedRecord[component.label]:\"\":\"\"\r\n                           // }\r\n                        //    if (this.state.selectedRecord[component.label] !== undefined) {\r\n                                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] !== undefined?\r\n                                this.state.selectedRecord[component.label]?this.state.selectedRecord[component.label]:\"\":\"\"\r\n                          }\r\n                        }\r\n                        component.hasOwnProperty(\"children\") && component.children.map(\r\n                            (componentrow) => {\r\n\r\n                                if (componentrow.inputtype === 'combo') {\r\n                                    let isValid = false;\r\n                                    if(componentrow.label === 'Expiry Policy Period'){\r\n                                        if(this.state.selectedRecord['Expiry Policy Days'] &&  this.state.selectedRecord['Expiry Policy Days'] > 0){\r\n                                            isValid = true;\r\n                                        }\r\n                                    }\r\n                                    else if(componentrow.label === 'Open Expiry Period'){\r\n                                        if(this.state.selectedRecord['Open Expiry'] &&  this.state.selectedRecord['Open Expiry'] > 0){\r\n                                            isValid = true;\r\n                                        }\r\n                                    }\r\n                                    else if(componentrow.label === 'Next Validation Period'){\r\n                                        if(this.state.selectedRecord['Next Validation'] &&  this.state.selectedRecord['Next Validation'] > 0){\r\n                                            isValid = true;\r\n                                        }\r\n                                    }\r\n                                    else{\r\n                                        isValid = true;\r\n                                    }\r\n                                    if(isValid)\r\n                                    {\r\n                                        inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ?\r\n                                            {\r\n                                                label: this.state.selectedRecord[componentrow.label][\"label\"],\r\n                                                value: this.state.selectedRecord[componentrow.label][\"value\"],\r\n                                                pkey: this.state.selectedRecord[componentrow.label].item.pkey,\r\n                                                nquerybuildertablecode: this.state.selectedRecord[componentrow.label].item.nquerybuildertablecode,\r\n                                                item:this.state.selectedRecord[componentrow.label].item\r\n                                                \r\n                                            } : \"\"\r\n                                        inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ?\r\n                                            this.state.selectedRecord[componentrow.label][\"label\"]\r\n                                            : \"\"\r\n                                    }\r\n                                } else if (componentrow.inputtype === 'date') {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        inputData[\"Material\"][`tz${componentrow.label}`] = componentrow.hasOwnProperty('timezone') ? {\r\n                                            label: this.state.selectedRecord[`tz${componentrow.label}`][\"label\"],\r\n                                            value: this.state.selectedRecord[`tz${componentrow.label}`][\"value\"]\r\n                                        } : {\r\n                                            label: this.props.Login.userInfo['stimezoneid'],\r\n                                            value: this.props.Login.userInfo['ntimezonecode']\r\n                                        }\r\n                                        inputData[\"Material\"][componentrow.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label],\r\n                                            this.props.Login.userInfo)\r\n                                        inputData[\"DateList\"].push(componentrow.label)\r\n                                    }\r\n                                    inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ?\r\n                                        convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label], this.props.Login.userInfo)\r\n                                        : \"\"\r\n\r\n                                } else if (componentrow.inputtype === 'toggle') {\r\n                                    if (this.state.selectedRecord[componentrow.label] === \"\") {\r\n                                        inputData[\"Material\"][componentrow.label] = 4\r\n                                    } else if (this.state.selectedRecord[componentrow.label] === undefined) {\r\n                                        inputData[\"Material\"][componentrow.label] = 4\r\n                                    }\r\n                                    else {\r\n                                        inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                    }\r\n                                    if (this.state.selectedRecord[componentrow.label] !== \"\") {\r\n                                        inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] === transactionStatus.YES ?\r\n                                            'Yes' : 'No'\r\n                                    }\r\n                                }\r\n                                else {\r\n                                 //  if (this.state.selectedRecord[componentrow.label] !== undefined) {\r\n                                        inputData[\"Material\"][componentrow.label] =this.state.selectedRecord[componentrow.label] !== undefined?\r\n                                        this.state.selectedRecord[componentrow.label]?this.state.selectedRecord[componentrow.label]:\"\":\"\"\r\n                                  // }\r\n                                  // if (this.state.selectedRecord[componentrow.label] !== undefined) {\r\n                                        inputData[\"jsonuidata\"][componentrow.label] =  this.state.selectedRecord[componentrow.label] !== undefined?\r\n                                        this.state.selectedRecord[componentrow.label]?this.state.selectedRecord[componentrow.label]:\"\":\"\"\r\n                              // }\r\n                            }\r\n                            }\r\n                        )\r\n                    })\r\n                })\r\n            })\r\n            // inputData[\"Material\"][varmain] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\r\n            //     this.state.selectedRecord['Standard Name'] :\r\n            //     this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\r\n            //         this.state.selectedRecord['Volumetric Name'] :\r\n            //         this.state.selectedRecord['Material Name']\r\n\r\n            inputData[\"Material\"][\"Material Name\"] = this.state.selectedRecord['Material Name'] && this.state.selectedRecord['Material Name']\r\n            inputData[\"jsonuidata\"]= {\r\n                ...inputData[\"jsonuidata\"],\r\n                \"nmaterialcatcode\": this.state.selectedRecord['Material Category'].value,\r\n                \"nmaterialconfigcode\":nmaterialconfigcode\r\n            }\r\n            inputData[\"Material\"] = {\r\n                ...inputData[\"Material\"],\r\n                \"nmaterialcatcode\": this.state.selectedRecord['Material Category'].value,\r\n                \"nmaterialtypecode\": this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\r\n            }\r\n\r\n            inputData[\"materialJson\"] = JSON.stringify(inputData[\"Material\"])\r\n            inputData[\"jsonuidata\"] = JSON.stringify(inputData[\"jsonuidata\"])\r\n            inputData[\"ntransactionstatus\"] = inputData[\"Material\"]['Quarantine']\r\n            inputData[\"nmaterialtypecode\"] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\r\n            inputData[\"nmaterialcatcode\"] = this.state.selectedRecord['Material Category'].value\r\n            \r\n            inputData[\"needsectionwise\"] = this.props.Login.selectedRecord['Material Category'].item?\r\n            this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise:\r\n            this.props.Login.selectedRecord['Material Category'].needsectionwise\r\n            if (this.props.Login.selectedRecord['Material Category'].item?\r\n            this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise:\r\n            this.props.Login.selectedRecord['Material Category'].needsectionwise === transactionStatus.YES) {\r\n                // inputData[\"materialSectionJson\"] = [{\r\n                //     \"ssectionname\": this.state.selectedRecord[\"Section\"].label,\r\n                //     \"nsectioncode\": this.state.selectedRecord[\"Section\"].value,\r\n                //     \"nreorderlevel\": this.state.selectedRecord[\"Reorder Level\"] && this.state.selectedRecord[\"Reorder Level\"]\r\n                //     //,\r\n                //     //\"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                // }];\r\n                inputData[\"materialSectionJson\"]={\r\n                    \"nreorderlevel\": this.state.selectedRecord[\"Reorder Level\"] && this.state.selectedRecord[\"Reorder Level\"],\r\n                     \"nsectioncode\" : this.state.selectedRecord[\"Section\"]&&this.state.selectedRecord[\"Section\"].value,\r\n                     'nmaterialconfigcode':nmaterialconfigcode\r\n                }\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(inputData[\"materialSectionJson\"])\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n           // console.log(\"data:\", inputData);\r\n            if (this.props.Login.operation === 'create') {\r\n              \r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"Material\",\r\n                    inputData: inputData,\r\n                    operation: this.props.Login.operation,\r\n                    saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef,\r\n                    dataState: this.state.dataState\r\n                }\r\n            }\r\n            else {\r\n                inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"Material\",\r\n                    inputData: inputData,\r\n                    operation: this.props.Login.operation,\r\n                    saveType, formRef, postParam:{selectedObject:\"SelectedMaterial\",\r\n                    primaryKeyField:\"nmaterialcode\",inputListName:\"Material\",\r\n                    selectedComboName:\"selectedMaterialCat\",selectedCombo:this.state.selectedRecord['Material Category'],\r\n                    selectedComboId:\"nmaterialcatcode\"\r\n                    }, selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef,\r\n                    dataState: this.state.dataState,\r\n                    filtercombochange:this.props.Login.masterData.searchedData!==undefined?\r\n                     this.state.selectedRecord['Material Category'].value===\r\n                    this.props.Login.masterData.SelectedMaterialCategoryFilter.nmaterialcatcode?false:true:false\r\n                }\r\n\r\n                // if(this.state.selectedRecord['Material Category'].value!==this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode){\r\n                //     masterData={...masterData,searchedData}\r\n                // }\r\n             \r\n            }\r\n        \r\n            if (this.props.Login.screenName === \"IDS_MATERIAL\") {\r\n                // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                //     const updateInfo = {\r\n                //         typeName: DEFAULT_RETURN,\r\n                //         data: {\r\n                //             loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                //         }\r\n                //     }\r\n                //     this.props.updateStore(updateInfo);\r\n                // }\r\n                // else {\r\n                //     this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                // }\r\n            } else {\r\n                if (this.props.Login.masterData.copyScreenRights ? this.props.Login.masterData.copyScreenRights.length > 0 : false) {\r\n                    this.ConfirmComponent()\r\n                }\r\n                else {\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                    else {\r\n                        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (this.props.Login.screenname === \"IDS_MATERIALSAFETYINSTRUCTIONS\") {\r\n            const Layout = this.props.Login.masterData.selectedTemplateSafetyInstructions[0].jsondata\r\n            const dynamicobj = {};\r\n            let jsonuidata  = {}\r\n            Layout.map((row) => {\r\n                row.children.map((column) => {\r\n                    column.children.map((component) => {\r\n                        //if (component.inputtype === 'combo') {\r\n                            // if (this.state.selectedRecord[component.label]) {\r\n                            //     dynamicobj[component.label] = {\r\n                            //         label: this.state.selectedRecord[component.label][\"label\"],\r\n                            //         value: this.state.selectedRecord[component.label][\"value\"]\r\n                            //     }\r\n                               \r\n                            // }\r\n                        //     jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\r\n                        //     component.label ? 'Yes' : 'No' :  'No' \r\n                        // }\r\n                        // else {\r\n                            if (component.inputtype === 'checkbox') {\r\n                          //  if (this.state.selectedRecord[component.label]) {\r\n                                dynamicobj[component.label] = this.state.selectedRecord[component.label]\r\n                                jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\r\n                              component.label ? 'Yes' : 'No' :  'No' \r\n                         //   }\r\n                           // jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\r\n                           // component.label ? 'Yes' : 'No' :  'No' \r\n                        }\r\n                        else\r\n                        {\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                dynamicobj[component.label] = this.state.selectedRecord[component.label]\r\n                                jsonuidata[component.label] =  this.state.selectedRecord[component.label] \r\n                            }\r\n                        }\r\n                        component.hasOwnProperty(\"children\") && component.children.map(\r\n                            (componentrow) => {\r\n                                // if (componentrow.inputtype === 'combo') {\r\n                                //     // if (this.state.selectedRecord[componentrow.label]) {\r\n                                //     //     dynamicobj[componentrow.label] =\r\n                                //     //     {\r\n                                //     //         label: this.state.selectedRecord[componentrow.label][\"label\"],\r\n                                //     //         value: this.state.selectedRecord[componentrow.label][\"value\"]\r\n                                //     //     }\r\n                                        \r\n                                //     // }\r\n                                //     jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\r\n                                //         componentrow.label ? 'Yes' : 'No' :  'No' \r\n                                // }\r\n                                // else {\r\n                                //     if (this.state.selectedRecord[componentrow.label]) {\r\n                                //         dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                //         jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\r\n                                //          componentrow.label ? 'Yes' : 'No' :  'No' \r\n                                //     }\r\n                                //     //jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\r\n                                //     //componentrow.label ? 'Yes' : 'No' :  'No' \r\n                                // }\r\n                                if (componentrow.inputtype === 'checkbox') {\r\n                                  //  if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                        jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\r\n                                        componentrow.label ? 'Yes' : 'No' :  'No' \r\n                                  //  }\r\n                                   // jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\r\n                                   // component.label ? 'Yes' : 'No' :  'No' \r\n                                }\r\n                                else\r\n                                {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                        jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] \r\n                                    }\r\n                                }\r\n                            }\r\n                        )\r\n                    })\r\n                })\r\n            })\r\n            inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n            if (this.props.Login.masterData.MaterialSafetyInstructions.length > 0) {\r\n                inputData[\"nmaterialsafetyinstructionscode\"] =\r\n                    this.props.Login.masterData.MaterialSafetyInstructions[0].nmaterialsafetyinstructionscode\r\n            }\r\n            else {\r\n                inputData[\"nmaterialsafetyinstructionscode\"] = 0\r\n            } \r\n            inputData[\"jsonuidata\"] = JSON.stringify(jsonuidata)\r\n            inputData[\"materialSafetyInstructions\"] = JSON.stringify(dynamicobj)\r\n            inputData[\"nflag\"] = 1;\r\n            inputData['nmaterialconfigcode'] =nmaterialconfigcode\r\n            inputParam = {\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialSafetyInstructions\",\r\n                inputData: inputData,\r\n                operation: 'create',\r\n                saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                searchRef: this.searchRef,\r\n                dataState: this.state.dataState\r\n            }\r\n            let masterData = this.props.Login.masterData\r\n            if (this.state.isSelectedRecordChange) {\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n                }\r\n            }\r\n            else {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        openModal: false\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n        else if (this.props.Login.screenname === \"IDS_MATERIALMSDSATTACHMENT\") {\r\n            inputParam = this.onSaveMaterialFile(); \r\n            let masterData = this.props.Login.masterData\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n\r\n        }\r\n        else if (this.props.Login.screenname === \"IDS_MATERIALPROPERTY\") {\r\n\r\n            let masterData = this.props.Login.masterData\r\n            const Layout = this.props.Login.masterData.selectedTemplateProperties[0].jsondata\r\n            const dynamicobj = {};\r\n            inputData[\"DateList\"] = [];\r\n            inputData[\"jsonuidata\"] = {};\r\n            Layout.map((row) => {\r\n                row.children.map((column) => {\r\n                    column.children.map((component) => {\r\n                        if (component.inputtype === 'combo') {\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                dynamicobj[component.label] = {\r\n                                    label: this.state.selectedRecord[component.label][\"label\"],\r\n                                    value: this.state.selectedRecord[component.label][\"value\"]\r\n                                }\r\n                                inputData[\"jsonuidata\"][component.label]=this.state.selectedRecord[component.label][\"label\"]\r\n                            }\r\n                        }\r\n                        else if (component.inputtype === 'date') {\r\n\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                dynamicobj[`tz${component.label}`] = component.hasOwnProperty('timezone') ? {\r\n                                    label: this.state.selectedRecord[`tz${component.label}`][\"label\"],\r\n                                    value: this.state.selectedRecord[`tz${component.label}`][\"value\"]\r\n                                } : {\r\n                                    label: this.props.Login.userInfo['stimezoneid'],\r\n                                    value: this.props.Login.userInfo['ntimezonecode']\r\n                                }\r\n                                dynamicobj[component.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo)\r\n                                inputData[\"DateList\"].push(component.label)\r\n                                inputData[\"jsonuidata\"][`tz${component.label}`]=dynamicobj[`tz${component.label}`].label\r\n                                inputData[\"jsonuidata\"][component.label]=dynamicobj[component.label]\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            if (this.state.selectedRecord.hasOwnProperty(component.label)) {\r\n                                dynamicobj[component.label] = this.state.selectedRecord[component.label]\r\n                                inputData[\"jsonuidata\"][component.label]=dynamicobj[component.label]\r\n                            }\r\n                        }\r\n                        component.hasOwnProperty(\"children\") && component.children.map(\r\n                            (componentrow) => {\r\n                                if (componentrow.inputtype === 'combo') {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[componentrow.label] =\r\n                                        {\r\n                                            label: this.state.selectedRecord[componentrow.label][\"label\"],\r\n                                            value: this.state.selectedRecord[componentrow.label][\"value\"]\r\n                                        }\r\n                                        inputData[\"jsonuidata\"][component.label]=dynamicobj[component.label].label\r\n                                    }\r\n                                }\r\n                                else if (componentrow.inputtype === 'date') {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[`tz${componentrow.label}`] = componentrow.hasOwnProperty('timezone') ? {\r\n                                            label: this.state.selectedRecord[`tz${componentrow.label}`][\"label\"],\r\n                                            value: this.state.selectedRecord[`tz${componentrow.label}`][\"value\"]\r\n                                        } : {\r\n                                            label: this.props.Login.userInfo['stimezoneid'],\r\n                                            value: this.props.Login.userInfo['ntimezonecode']\r\n                                        }\r\n                                        dynamicobj[componentrow.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label],\r\n                                            this.props.Login.userInfo)\r\n                                        inputData[\"DateList\"].push(componentrow.label)\r\n                                        inputData[\"jsonuidata\"][`tz${componentrow.label}`]=dynamicobj[`tz${componentrow.label}`].label\r\n                                        inputData[\"jsonuidata\"][componentrow.label]=dynamicobj[componentrow.label]\r\n                                    }\r\n\r\n                                }\r\n                                else {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                        inputData[\"jsonuidata\"][componentrow.label]=dynamicobj[componentrow.label]\r\n                                    }\r\n                                }\r\n                            }\r\n                        )\r\n                    })\r\n                })\r\n            })\r\n            inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n            if (this.props.Login.masterData.MaterialProperties.length > 0) {\r\n                inputData[\"nmaterialpropertycode\"] =\r\n                    this.props.Login.masterData.MaterialProperties[0].nmaterialpropertycode\r\n            } else {\r\n                inputData[\"nmaterialpropertycode\"] = 0\r\n            }\r\n            //inputData[\"DateList\"] = JSON.stringify(DateList) \r\n            inputData[\"jsonuidata\"]={...inputData[\"jsonuidata\"] ,'nmaterialconfigcode':nmaterialconfigcode}\r\n            inputData[\"jsonuidata\"] = JSON.stringify(inputData[\"jsonuidata\"]) \r\n            \r\n            inputData[\"materialProperty\"] = JSON.stringify(dynamicobj)\r\n            inputData[\"nflag\"] = 2;\r\n            inputParam = {\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialSafetyInstructions\",\r\n                inputData: inputData,\r\n                operation: 'create',\r\n                saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                searchRef: this.searchRef,\r\n                dataState: this.state.dataState\r\n            }\r\n            if (this.state.isSelectedRecordChange) {\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n                }\r\n            }\r\n            else {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        openModal: false\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.Login.operation !== \"update\") {\r\n                let showMaterialSection = this.props.Login.showMaterialSection\r\n                let newarr = []\r\n                let newarr1 = []\r\n                inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                if (this.state.selectedRecord[\"nmaterialsectioncode\"].length > 1) {\r\n                    newarr = this.state.selectedRecord.nmaterialsectioncode.map(temp => {\r\n                        return {\r\n                            \"ssectionname\": temp.label,\r\n                            \"nsectioncode\": temp.value,\r\n                            \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"]:0,\r\n                            \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                            'nmaterialconfigcode':nmaterialconfigcode\r\n                        }\r\n                    })\r\n                    newarr1[\"nsectioncode\"]=\"\"\r\n                   // let nsectioncode;\r\n                     this.state.selectedRecord.nmaterialsectioncode.map(temp => {\r\n                        newarr1[\"nsectioncode\"]+= temp.value+','\r\n                    }) \r\n                    newarr1={\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"]:0,\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                        \"nsectioncode\":newarr1[\"nsectioncode\"].substring(0, newarr1[\"nsectioncode\"].length - 1),\r\n                        'nmaterialconfigcode':nmaterialconfigcode\r\n                    }\r\n                }\r\n                else {\r\n                    newarr.push({\r\n                        \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"]:0,\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                        'nmaterialconfigcode':nmaterialconfigcode\r\n                    });\r\n                newarr1={\r\n                    \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"]:0,\r\n                    \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                     \"nsectioncode\" : this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\r\n                     'nmaterialconfigcode':nmaterialconfigcode\r\n                }\r\n                }\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(newarr)\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(newarr1) \r\n                inputData[\"nmaterialconfigcode\"] = nmaterialconfigcode \r\n\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"MaterialSection\",\r\n                    inputData: inputData,\r\n                    operation: \"create\",\r\n                    showMaterialSection: showMaterialSection,\r\n                    selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef\r\n                }\r\n            }\r\n            else {\r\n                let newarrobj = []\r\n                inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                if (Array.isArray(this.state.selectedRecord[\"nmaterialsectioncode\"])) {\r\n                    newarrobj.push({\r\n                        \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"]:0,\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                        'nmaterialconfigcode':nmaterialconfigcode\r\n                    });\r\n                }\r\n                else {\r\n                    newarrobj.push({\r\n                        \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"].label,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"].value,\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"]:0,\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                        'nmaterialconfigcode':nmaterialconfigcode\r\n                    });\r\n                }\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(newarrobj)\r\n                inputData[\"MaterialSection\"] = {\r\n                    \"Reorder Level\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"]:0\r\n\r\n                }\r\n                inputData[\"nmaterialsectioncode\"] = this.state.selectedRecord.nmaterialsectioncodeprimaryKeyValue\r\n                inputData[\"nmaterialconfigcode\"] = nmaterialconfigcode \r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"MaterialSection\",\r\n                    inputData: inputData,\r\n                    showMaterialSection: false,\r\n                    operation: \"update\",\r\n                    selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef\r\n                }\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n    // onNumericInputChange = (value, name) => {\r\n    //     // const re = /^[0-9\\b]+$/;\r\n    //     // let selectedRecord = this.state.selectedRecord\r\n    //     // if (re.test(value)) {\r\n    //     //     selectedRecord[name] = value;\r\n    //     //     this.setState({selectedRecord})\r\n    //     //  }\r\n    //     let selectedRecord = this.state.selectedRecord\r\n    //     selectedRecord[name] = value;\r\n    //     this.setState({ selectedRecord });\r\n    // }\r\n    // handleDateChange = (dateValue, dateName) => {\r\n    //     const { selectedRecord } = this.state;\r\n    //     selectedRecord[dateName] = dateValue;\r\n    //     this.setState({ selectedRecord });\r\n    // }\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        // let value = event.target.value;\r\n\r\n        // if (isNaN(value)) {\r\n        // if (parseInt(value) < 10) {\r\n        //  let x=value.toString().replace(/\\D/g,'')\r\n        // if (value === 0) {\r\n        //     delete selectedRecord[name]\r\n        //     selectedRecord[name]=''\r\n        // }\r\n        // else {\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n\r\n        //   }\r\n\r\n        // }\r\n        // }\r\n\r\n    }\r\n    // onNumericInputChange = (value, name) => {\r\n    //     console.log(\"value:\", value, name);\r\n    //     const selectedRecord = this.state.selectedRecord || {};\r\n    //     if (name === \"nroundingdigits\") {\r\n\r\n    //         if (/^-?\\d*?$/.test(value.target.value) || value.target.value === \"\") {\r\n    //             console.log(\"val:\", value.target.value);\r\n    //             selectedRecord[name] = value.target.value;\r\n    //         }\r\n    //     }\r\n    //     else {\r\n    //         selectedRecord[name] = value;\r\n    //     }\r\n\r\n    //     this.setState({ selectedRecord });\r\n    // }\r\n    ConfirmComponent = () => {\r\n        this.confirmMessage.confirm(\"confirmation\", \"Confiramtion!\", this.props.intl.formatMessage({ id: \"IDS_OVERWRITRTHEEXISTINGSCREENRIGHTS\" }),\r\n            \"ok\", \"cancel\", () => this.copyAlertSave());\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    handleClickDelete(masterData, ncontrolcode, modalName) {\r\n        const fieldArray = [];\r\n        let postParam = {\r\n            inputListName: \"Material\", selectedObject: \"SelectedMaterial\",\r\n            primaryKeyField: \"nmaterialcode\",\r\n            primaryKeyValue: this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n            fetchUrl: \"material/getMaterial\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        modalName = 'openModal'\r\n        const inputParam = {\r\n            methodUrl: \"Material\",\r\n            classUrl: \"material\",\r\n            inputData: {\r\n                \"nmaterialconfigcode\":this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\r\n                \"material\": this.props.Login.masterData.SelectedMaterial,\r\n                \"nmaterialcatcode\": this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode,\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                \"nmaterialtypecode\": this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\r\n            },\r\n            operation: \"delete\", postParam,\r\n            displayName: \"Material\",\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, [modalName]: true,\r\n                    operation: 'delete', screenName: \"Material\", id: \"material\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, modalName);\r\n        }\r\n    }\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let inputData = [];\r\n        inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\r\n        inputData[\"materialCatList\"] = this.state.materialCatList;\r\n        this.setState({ sectionDataState: { skip: 0, take: 10 } })\r\n        if (this.state.selectedcombo[\"nmaterialtypecode\"]) {\r\n            this.props.getMaterialReload(this.props.Login.masterData.SelectedMaterialTypeFilter, this.props.Login.masterData.SelectedMaterialCategoryFilter,\r\n                this.props.Login.masterData,this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, updateStore, initialcombochangeget, getAddMaterialPopup, viewAttachment, getMaterialReload,\r\n    crudMaster, getMaterialDetails, getMaterialEdit, getMaterialByTypeCode, addMaterialFile\r\n    , getAddMaterialSectionPopup, getMaterialSectionEdit, filterColumnData, validateEsignCredential, addSafetyInstructions, addMaterialProperty\r\n})(injectIntl(Material));\r\n\r\n"]},"metadata":{},"sourceType":"module"}