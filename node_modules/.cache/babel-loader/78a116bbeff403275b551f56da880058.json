{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import Axios from\"axios\";import{toast}from\"react-toastify\";import{intl}from\"../components/App\";import{constructOptionList,replaceUpdatedObject,sortData}from\"../components/CommonScript\";import{reportCOAType,REPORTTYPE}from\"../components/Enumeration\";import TrainingUpdateChildTab from\"../pages/competencemanagement/trainingupdate/TrainingUpdateChildTab\";import rsapi from\"../rsapi\";import{initRequest}from\"./LoginAction\";import{DEFAULT_RETURN}from\"./LoginTypes\";// export function getReleasedSelectedSampleSubSampleTest(userInfo, Data1, inputData) {\n//     return function (dispatch) {\n//       if (inputData !== undefined &&inputData.npreregno!==\"\") {\n//         dispatch(initRequest(true));\n//         return rsapi.post(\"release/updateRelease\",\n//             inputData\n//         )\n//             .then(response => {\n//                 if (response.data.statusCodeValue !== 200) {\n//                     toast.warn(intl.formatMessage({\n//                         id: response.data.body\n//                     }));\n//                     dispatch({\n//                         type: DEFAULT_RETURN,\n//                         payload: {\n//                             loading: false\n//                         }\n//                     });\n//                 }\n//                 else {\n//                     if (response.data.body[\"PortalStatus\"] && response.data.body[\"PortalStatus\"].length > 0) {\n//                         dispatch(UpdateExternalOrderStatus(response.data.body[\"PortalStatus\"],inputData));\n//                     }\n//                     let masterData = {\n//                         ...Data1, ...response.data.body,\n//                     };\n//                     console.log(\"ReleasedTest,\", masterData);\n//                      sortData(masterData.ReleaseHistory,\"\",'sreportno');\n//                   //  dispatch(generateReport(inputData,masterData))\n//                     dispatch({\n//                         type: DEFAULT_RETURN, payload: {\n//                             masterData,\n//                             change: inputData.change,\n//                             loading: false,\n//                             openModal:false\n//                         }\n//                     });\n//                 }\n//             })\n//             .catch(error => {\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                     console.log(\"ErrorRelease,\", error);\n//                 }\n//                 else {\n//                     toast.warn(error.response.data);\n//                 }\n//             })\n//         }\n//         else {\n//             toast.warn(intl.formatMessage({\n//                 id: \"IDS_SELECTANYONESAMPLE\"\n//             }));\n//         }\n//     }\n// }\nexport function getReleasedRegistrationType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getRegistrationType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{SampleTypeValue:inputData.SampleTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReleasedRegistrationSubType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getRegistrationSubType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegTypeValue:inputData.RegTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReleasedFilterBasedTest(inputData){return function(dispatch){if(inputData.napprovalversioncode){dispatch(initRequest(true));rsapi.post(\"release/getFilterBasedTest\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegSubTypeValue:inputData.RegSubTypeValue,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,DesignTemplateMappingValue:inputData.DesignTemplateMappingValue}),loading:false}});if(response.data.rtn){toast.warn(response.data.rtn);}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_PLSSELECTALLVALUESINFILTER\"}));}};}export function getReleasedApprovalVersion(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getApprovalVersion\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),responseData),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReleasedSample(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getReleaseSample\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);// responseData = sortData(responseData)\nvar masterData={};// if (response.data.ReleasedSampleDetails && response.data.ReleasedSampleDetails.length !== 0 ||\n//     response.data.ReleaseSample && response.data.ReleaseSample.length === 0) {\nmasterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);// }\n//     else {\n//         responseData.ReleaseHistory = []\n//         responseData.selectedReleaseHistory= []\n//         masterData = {\n//             ...inputParam.masterData,\n//             ...responseData,\n//         }\n//     }\nsortData(masterData,\"\",\"ncoaparentcode\");dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovedSample(inputParam,ncontrolCode){return function(dispatch){var urlArray=[];inputParam.inputData['isAddPopup']=true;var releaseSample=rsapi.post(\"release/getReleaseSample\",inputParam.inputData);//  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\nvar projectType=rsapi.post(\"release/getApprovedProjectType\",inputParam.inputData);if(inputParam.inputData.ncoareporttypecode===7){urlArray=[projectType];}else{urlArray=[releaseSample//,reportType\n];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){// const reportTypeMap = constructOptionList(response[1].data.ReportType || [], \"ncoareporttypecode\",\n//     \"scoareporttypename\", undefined, undefined, false);\n// const ReportTypeList = reportTypeMap.get(\"OptionList\");\nvar ProjectTypeList=[];// let selectedRecord = {\"ncoareporttypecode\": {\n//     \"value\": response[1].data.ReportType[0].ncoareporttypecode,\n//      \"label\": response[1].data.ReportType[0].scoareporttypename\n// }\n// };\nvar masterData={};var openModal=true;var selectedRecord=inputParam.inputData.selectedRecord;if(inputParam.inputData.ncoareporttypecode===7){var projectTypeMap=constructOptionList(response[0].data||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,false);ProjectTypeList=projectTypeMap.get(\"OptionList\");masterData=_objectSpread(_objectSpread({},inputParam.masterData),{},{ReleaseSubSample:[],ReleaseTest:[],ReleaseSample:[]});if(inputParam.inputData.selectedRecord.nprojecttypecode){delete inputParam.inputData.selectedRecord.nprojecttypecode;}if(inputParam.inputData.selectedRecord.nprojectmastercode){delete inputParam.inputData.selectedRecord.nprojectmastercode;}}else{if(response[0].data&&response[0].data.ReleaseSample.length!==0){var responseData=_objectSpread({},response[0].data);masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);}else{var _responseData=_objectSpread({},response[0].data);masterData=_objectSpread(_objectSpread({},inputParam.masterData),_responseData);openModal=false;toast.warn(intl.formatMessage({id:\"IDS_NOSAMPLESAREAVAILABLE\"}));}}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,// selectedRecord,\n// ReportTypeList,\nncontrolCode:ncontrolCode,isDeletePopup:false,isEditPopup:false,ProjectTypeList:ProjectTypeList,loading:false,showFilter:false,openModal:openModal,isAddPopup:true,operation:\"save\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function generateReleasedReport(inputData,Data){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/updateRelease\",inputData).then(function(response){if(response.data[\"PortalStatus\"]&&response.data[\"PortalStatus\"].length>0){dispatch(UpdateExternalOrderStatus(response.data[\"PortalStatus\"],inputData));}var masterData=_objectSpread(_objectSpread({},Data),response.data);if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');dispatch({type:DEFAULT_RETURN,payload:{loading:false,change:inputData.change,masterData:masterData,modalShow:false,selectedRecord:{},loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReleasedFilterStatus(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getReleaseConfigVersionRegTemplateDesign\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegSubTypeValue:inputData.RegSubTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReleasedDataDetails(inputParam,coahistory){return function(dispatch){var inputParamData={dfrom:inputParam.inputData.dfrom,dto:inputParam.inputData.dto,nsampletypecode:inputParam.inputData.nsampletypecode,nregtypecode:inputParam.inputData.nregtypecode,nregsubtypecode:inputParam.inputData.nregsubtypecode,ntransactionstatus:inputParam.inputData.ntransactionstatus,nsectioncode:inputParam.inputData.nsectioncode,ntestcode:inputParam.inputData.ntestcode,napprovalversioncode:inputParam.inputData.napprovalversioncode,napprovalconfigcode:inputParam.inputData.napprovalconfigcode,userinfo:inputParam.inputData.userinfo,nneedsubsample:inputParam.inputData.nneedsubsample,ncoaparentcode:inputParam.ncoaparentcode,npreregno:inputParam.npreregno,ncoareporttypecode:inputParam.inputData.ncoareporttypecode,ndesigntemplatemappingcode:inputParam.masterData.ndesigntemplatemappingcode,isAddPopup:false};dispatch(initRequest(true));rsapi.post(\"release/getReleaseSample\",inputParamData).then(function(response){var responseData=_objectSpread({},response.data);// responseData = sortData(responseData)\nvar masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovedProjectByProjectType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getApprovedProjectByProjectType\",inputData).then(function(response){var projectMasterMap=constructOptionList(response.data||[],\"nprojectmastercode\",\"sprojectcode\",undefined,undefined,false);var projectMasterList=projectMasterMap.get(\"OptionList\");var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{projectMasterList:projectMasterList,masterData:_objectSpread(_objectSpread({},inputData.masterData),responseData),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovedProjectType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getApprovedProjectType\",inputData).then(function(response){var projectTypeMap=constructOptionList(response.data||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,false);var ProjectTypeList=projectTypeMap.get(\"OptionList\");//     const projectMasterMap = constructOptionList(response.data || [], \"nprojecttypecode\",\n//     \"sprojecttypename\", undefined, undefined, false);\n// const projectMasterList = projectMasterMap.get(\"OptionList\");\nvar responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{ProjectTypeList:ProjectTypeList,masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{ProjectTypeValue:inputData.ProjectTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReportForPortal(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/SendToPortalReport\",inputData).then(function(response){if(response.data[\"rtn\"]){toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function UpdateExternalOrderStatus(portallist,inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(String(inputParam[\"url\"])+\"/portal/UpdateMultiSampleStatus\",JSON.stringify(portallist),{headers:{'Content-Type':'application/json'}}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovedRecordsAsDraft(userInfo,Data1,inputData){return function(dispatch){if(inputData!==undefined&&inputData.npreregno!==\"\"){dispatch(initRequest(true));return rsapi.post(\"release/saveRelease\",inputData).then(function(response){//  if (response.data.statusCodeValue !== 200) {\n// toast.warn(intl.formatMessage({\n//     id: response.data.body\n// }));\n// dispatch({\n//     type: DEFAULT_RETURN,\n//     payload: {\n//         loading: false\n//     }\n// });\n//   }\n// else {\n//     if (response.data.body[\"PortalStatus\"] && response.data.body[\"PortalStatus\"].length > 0) {\n//         dispatch(UpdateExternalOrderStatus(response.data.body[\"PortalStatus\"],inputData));\n//     }\nvar masterData=_objectSpread(_objectSpread({},Data1),response.data);sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,change:inputData.change,loading:false,openModal:false}});// }\n}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);//  console.log(\"ErrorRelease,\", error);\n}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTANYONESAMPLE\"}));}};}export function previewAndFinalReport(inputParam,Data){return function(dispatch){dispatch(initRequest(true));// const inputData = {\n//     npreregno: inputParam.npreregno,\n//  //   nsectioncode: inputParam.nsectioncode || -1,\n//     userinfo: inputParam.userinfo,\n//     nprimarykey: inputParam.npreregno,\n//     nreporttypecode: REPORTTYPE.COAREPORT,\n//     sprimarykeyname: \"npreregno\",\n//     ncontrolcode: inputParam.ncontrolCode,\n//     nregtypecode: inputParam.nregtypecode,\n//     nregsubtypecode: inputParam.nregsubtypecode,\n//     ntransactiontestcode:inputParam.ntransactiontestcode,\n//     napproveconfversioncode: inputParam.napprovalversioncode,\n//     ncoaparentcode: inputParam.ncoaparentcode,\n//     ntransactionstatus:inputParam.ntransactionstatus\n// }\nrsapi.post(\"release/generateReleasedReport\",inputParam).then(function(response){var masterData=_objectSpread(_objectSpread({},Data),response.data);if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,change:inputParam.change,masterData:masterData,modalShow:false,selectedRecord:{},loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRemoveApprovedSample(inputParam,ncontrolCode){return function(dispatch){var urlArray=[];inputParam.inputData['isPopup']=true;var releaseSample=rsapi.post(\"release/getReleaseSample\",inputParam.inputData);//  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\n// const projectType = rsapi.post(\"release/getApprovedProjectType\", inputParam.inputData);\nvar statusService=rsapi.post(\"release/getStatusAlert\",inputParam.inputData);urlArray=[releaseSample,statusService//,reportType\n];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){if(response[1].data.Status===\"Success\"){var masterData={};var selectedRecord=inputParam.inputData.selectedRecord;var responseData=_objectSpread({},response[0].data);masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);// responseData = sortData(responseData)\nsortData(masterData);dispatch({type:DEFAULT_RETURN,payload:_defineProperty({masterData:masterData,// selectedRecord,\nisDeletePopup:true,isEditPopup:false,ncontrolCode:ncontrolCode,loading:false,showFilter:false,openModal:true,isAddPopup:false,operation:\"delete\"},\"ncontrolCode\",inputParam.inputData.ncontrolCode)});}else{toast.warn(intl.formatMessage({id:response[1].data.ValidationStatus}));dispatch({type:DEFAULT_RETURN,payload:{ncontrolCode:ncontrolCode,loading:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getDeleteApprovedSample(userInfo,Data1,inputData){return function(dispatch){if(inputData!==undefined&&inputData.npreregno!==\"\"){dispatch(initRequest(true));return rsapi.post(\"release/deleteRelease\",inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},Data1),response.data);sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,change:inputData.change,loading:false,openModal:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);//  console.log(\"ErrorRelease,\", error);\n}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTANYONESAMPLE\"}));}};}export function getEditApprovedSample(inputParam,ncontrolCode){return function(dispatch){var urlArray=[];inputParam.inputData['isPopup']=true;var releaseSample=rsapi.post(\"release/getReleaseSample\",inputParam.inputData);//  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\nvar projectType=rsapi.post(\"release/getApprovedProjectType\",inputParam.inputData);var statusService=rsapi.post(\"release/getStatusAlert\",inputParam.inputData);if(inputParam.inputData.ncoareporttypecode===7){urlArray=[projectType,statusService];}else{urlArray=[releaseSample,statusService//,reportType\n,projectType];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){// const reportTypeMap = constructOptionList(response[1].data.ReportType || [], \"ncoareporttypecode\",\n//     \"scoareporttypename\", undefined, undefined, false);\n// const ReportTypeList = reportTypeMap.get(\"OptionList\");\nif(response[1].data.Status===\"Success\"){var ProjectTypeList=[];// let selectedRecord = {\"ncoareporttypecode\": {\n//     \"value\": response[1].data.ReportType[0].ncoareporttypecode,\n//      \"label\": response[1].data.ReportType[0].scoareporttypename\n// }\n// };\nvar masterData={};var selectedRecord=inputParam.inputData.selectedRecord;if(inputParam.inputData.ncoareporttypecode===7){var projectTypeMap=constructOptionList(response[0].data||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,false);ProjectTypeList=projectTypeMap.get(\"OptionList\");masterData=_objectSpread(_objectSpread({},inputParam.masterData),{},{ReleaseSubSample:[],ReleaseTest:[],ReleaseSample:[]});if(inputParam.inputData.selectedRecord.nprojecttypecode){delete inputParam.inputData.selectedRecord.nprojecttypecode;}if(inputParam.inputData.selectedRecord.nprojectmastercode){delete inputParam.inputData.selectedRecord.nprojectmastercode;}}else{var responseData=_objectSpread({},response[0].data);masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);}// responseData = sortData(responseData)\nsortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,// selectedRecord,\n// ReportTypeList,\nncontrolCode:inputParam.inputData.ncontrolCode,isDeletePopup:false,isEditPopup:true,ProjectTypeList:ProjectTypeList,loading:false,showFilter:false,openModal:true,isAddPopup:false,operation:\"append\"}});}else{toast.warn(intl.formatMessage({id:response[1].data.ValidationStatus}));dispatch({type:DEFAULT_RETURN,payload:{ncontrolCode:ncontrolCode,loading:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function UpdateApprovedSample(userInfo,Data1,inputData){return function(dispatch){if(inputData!==undefined&&inputData.npreregno!==\"\"){dispatch(initRequest(true));return rsapi.post(\"release/appendRelease\",inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},Data1),response.data);sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,change:inputData.change,loading:false,openModal:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);// console.log(\"ErrorRelease,\", error);\n}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTANYONESAMPLE\"}));}};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/ReleaseAction.js"],"names":["Axios","toast","intl","constructOptionList","replaceUpdatedObject","sortData","reportCOAType","REPORTTYPE","TrainingUpdateChildTab","rsapi","initRequest","DEFAULT_RETURN","getReleasedRegistrationType","inputData","dispatch","post","then","response","responseData","data","type","payload","masterData","SampleTypeValue","loading","catch","error","status","message","warn","getReleasedRegistrationSubType","RegTypeValue","getReleasedFilterBasedTest","napprovalversioncode","RegSubTypeValue","ndesigntemplatemappingcode","DesignTemplateMappingValue","rtn","formatMessage","id","getReleasedApprovalVersion","inputParam","getReleasedSample","showFilter","getApprovedSample","ncontrolCode","urlArray","releaseSample","projectType","ncoareporttypecode","all","ProjectTypeList","openModal","selectedRecord","projectTypeMap","undefined","get","ReleaseSubSample","ReleaseTest","ReleaseSample","nprojecttypecode","nprojectmastercode","length","isDeletePopup","isEditPopup","isAddPopup","operation","generateReleasedReport","Data","UpdateExternalOrderStatus","document","getElementById","setAttribute","filepath","click","ReleaseHistory","change","modalShow","loadEsign","getReleasedFilterStatus","getReleasedDataDetails","coahistory","inputParamData","dfrom","dto","nsampletypecode","nregtypecode","nregsubtypecode","ntransactionstatus","nsectioncode","ntestcode","napprovalconfigcode","userinfo","nneedsubsample","ncoaparentcode","npreregno","getApprovedProjectByProjectType","projectMasterMap","projectMasterList","getApprovedProjectType","ProjectTypeValue","getReportForPortal","portallist","String","JSON","stringify","headers","getApprovedRecordsAsDraft","userInfo","Data1","previewAndFinalReport","getRemoveApprovedSample","statusService","Status","ValidationStatus","getDeleteApprovedSample","getEditApprovedSample","UpdateApprovedSample"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,OAASC,mBAAT,CAA8BC,oBAA9B,CAAoDC,QAApD,KAAoE,4BAApE,CACA,OAASC,aAAT,CAAwBC,UAAxB,KAA0C,2BAA1C,CACA,MAAOC,CAAAA,sBAAP,KAAmC,qEAAnC,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,cAAT,KAA+B,cAA/B,CAEA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,SAASC,CAAAA,2BAAT,CAAqCC,SAArC,CAAgD,CACnD,MAAO,UAAUC,QAAV,CAAoB,CACvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACM,IAAN,CAAW,6BAAX,CAA0CF,SAA1C,EACKG,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIC,CAAAA,YAAY,kBAAQD,QAAQ,CAACE,IAAjB,CAAhB,CACAD,YAAY,CAAGb,QAAQ,CAACa,YAAD,CAAvB,CACAJ,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BC,UAAU,8CACHT,SAAS,CAACS,UADP,EAEHJ,YAFG,MAGNK,eAAe,CAAEV,SAAS,CAACU,eAHrB,EADiB,CAM3BC,OAAO,CAAE,KANkB,CAD1B,CAAD,CAAR,CAUH,CAdL,EAeKC,KAfL,CAeW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CAvBL,EAwBH,CA1BD,CA2BH,CACD,MAAO,SAASW,CAAAA,8BAAT,CAAwCjB,SAAxC,CAAmD,CACtD,MAAO,UAAUC,QAAV,CAAoB,CACvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACM,IAAN,CAAW,gCAAX,CAA6CF,SAA7C,EACKG,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIC,CAAAA,YAAY,kBAAQD,QAAQ,CAACE,IAAjB,CAAhB,CACAD,YAAY,CAAGb,QAAQ,CAACa,YAAD,CAAvB,CACAJ,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BC,UAAU,8CACHT,SAAS,CAACS,UADP,EAEHJ,YAFG,MAGNa,YAAY,CAAElB,SAAS,CAACkB,YAHlB,EADiB,CAM3BP,OAAO,CAAE,KANkB,CAD1B,CAAD,CAAR,CAUH,CAdL,EAeKC,KAfL,CAeW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CAvBL,EAwBH,CA1BD,CA2BH,CAED,MAAO,SAASa,CAAAA,0BAAT,CAAoCnB,SAApC,CAA+C,CAClD,MAAO,UAAUC,QAAV,CAAoB,CACvB,GAAID,SAAS,CAACoB,oBAAd,CAAoC,CAChCnB,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACM,IAAN,CAAW,4BAAX,CAAyCF,SAAzC,EACKG,IADL,CACU,SAAAC,QAAQ,CAAI,CAGd,GAAIC,CAAAA,YAAY,kBAAQD,QAAQ,CAACE,IAAjB,CAAhB,CACAD,YAAY,CAAGb,QAAQ,CAACa,YAAD,CAAvB,CACAJ,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BC,UAAU,8CACHT,SAAS,CAACS,UADP,EAEHJ,YAFG,MAGNgB,eAAe,CAAErB,SAAS,CAACqB,eAHrB,CAINC,0BAA0B,CAAEtB,SAAS,CAACsB,0BAJhC,CAKNC,0BAA0B,CAAEvB,SAAS,CAACuB,0BALhC,EADiB,CAQ3BZ,OAAO,CAAE,KARkB,CAD1B,CAAD,CAAR,CAYA,GAAIP,QAAQ,CAACE,IAAT,CAAckB,GAAlB,CAAuB,CACnBpC,KAAK,CAAC4B,IAAN,CAAWZ,QAAQ,CAACE,IAAT,CAAckB,GAAzB,EACH,CAEJ,CAtBL,EAuBKZ,KAvBL,CAuBW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CA/BL,EAgCH,CAlCD,IAmCK,CACDlB,KAAK,CAAC4B,IAAN,CAAW3B,IAAI,CAACoC,aAAL,CAAmB,CAC1BC,EAAE,CAAE,gCADsB,CAAnB,CAAX,EAGH,CACJ,CAzCD,CA2CH,CAED,MAAO,SAASC,CAAAA,0BAAT,CAAoCC,UAApC,CAAgD,CACnD,MAAO,UAAU3B,QAAV,CAAoB,CACvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACM,IAAN,CAAW,4BAAX,CAAyC0B,UAAU,CAAC5B,SAApD,EACKG,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIC,CAAAA,YAAY,kBAAQD,QAAQ,CAACE,IAAjB,CAAhB,CACAD,YAAY,CAAGb,QAAQ,CAACa,YAAD,CAAvB,CACAJ,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BC,UAAU,gCACHmB,UAAU,CAACnB,UADR,EAEHJ,YAFG,CADiB,CAO3BM,OAAO,CAAE,KAPkB,CAD1B,CAAD,CAAR,CAWH,CAfL,EAgBKC,KAhBL,CAgBW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CAxBL,EAyBH,CA3BD,CA4BH,CACD,MAAO,SAASuB,CAAAA,iBAAT,CAA2BD,UAA3B,CAAuC,CAC1C,MAAO,UAAU3B,QAAV,CAAoB,CACvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACM,IAAN,CAAW,0BAAX,CAAuC0B,UAAU,CAAC5B,SAAlD,EACKG,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIC,CAAAA,YAAY,kBAAQD,QAAQ,CAACE,IAAjB,CAAhB,CACA;AACA,GAAIG,CAAAA,UAAU,CAAG,EAAjB,CACD;AACA;AACKA,UAAU,gCACHmB,UAAU,CAACnB,UADR,EAEHJ,YAFG,CAAV,CAIR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEIb,QAAQ,CAACiB,UAAD,CAAY,EAAZ,CAAe,gBAAf,CAAR,CACAR,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BC,UAAU,CAAVA,UAD2B,CAE3BE,OAAO,CAAE,KAFkB,CAG3BmB,UAAU,CAAE,KAHe,CAD1B,CAAD,CAAR,CAOH,CA7BL,EA8BKlB,KA9BL,CA8BW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CAtCL,EAuCH,CAzCD,CA0CH,CACG,MAAO,SAASyB,CAAAA,iBAAT,CAA2BH,UAA3B,CAAsCI,YAAtC,CAAoD,CAC3D,MAAO,UAAU/B,QAAV,CAAoB,CACvB,GAAIgC,CAAAA,QAAQ,CAAG,EAAf,CACAL,UAAU,CAAC5B,SAAX,CAAqB,YAArB,EAAmC,IAAnC,CACA,GAAMkC,CAAAA,aAAa,CAAGtC,KAAK,CAACM,IAAN,CAAW,0BAAX,CAAuC0B,UAAU,CAAC5B,SAAlD,CAAtB,CACF;AACE,GAAMmC,CAAAA,WAAW,CAAGvC,KAAK,CAACM,IAAN,CAAW,gCAAX,CAA6C0B,UAAU,CAAC5B,SAAxD,CAApB,CACA,GAAI4B,UAAU,CAAC5B,SAAX,CAAqBoC,kBAArB,GAA4C,CAAhD,CAAmD,CAE/CH,QAAQ,CAAG,CAAEE,WAAF,CAAX,CACH,CAHD,IAIK,CACDF,QAAQ,CAAG,CAACC,aACR;AADO,CAAX,CAGH,CACDjC,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAACkD,GAAN,CAAUJ,QAAV,EAEK9B,IAFL,CAEU,SAAAC,QAAQ,CAAI,CACd;AACA;AAEA;AACA,GAAIkC,CAAAA,eAAe,CAAG,EAAtB,CAEA;AACA;AACA;AACA;AACA;AACA,GAAI7B,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAI8B,CAAAA,SAAS,CAAG,IAAhB,CACI,GAAIC,CAAAA,cAAc,CAAGZ,UAAU,CAAC5B,SAAX,CAAqBwC,cAA1C,CACA,GAAIZ,UAAU,CAAC5B,SAAX,CAAqBoC,kBAArB,GAA4C,CAAhD,CAAmD,CAC/C,GAAMK,CAAAA,cAAc,CAAGnD,mBAAmB,CAACc,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,EAAoB,EAArB,CAAyB,kBAAzB,CACtC,kBADsC,CAClBoC,SADkB,CACPA,SADO,CACI,KADJ,CAA1C,CAGAJ,eAAe,CAAGG,cAAc,CAACE,GAAf,CAAmB,YAAnB,CAAlB,CACAlC,UAAU,gCAAQmB,UAAU,CAACnB,UAAnB,MAA+BmC,gBAAgB,CAAE,EAAjD,CAAqDC,WAAW,CAAE,EAAlE,CAAsEC,aAAa,CAAE,EAArF,EAAV,CACA,GAAIlB,UAAU,CAAC5B,SAAX,CAAqBwC,cAArB,CAAoCO,gBAAxC,CAA0D,CACtD,MAAOnB,CAAAA,UAAU,CAAC5B,SAAX,CAAqBwC,cAArB,CAAoCO,gBAA3C,CACH,CACD,GAAInB,UAAU,CAAC5B,SAAX,CAAqBwC,cAArB,CAAoCQ,kBAAxC,CAA4D,CACxD,MAAOpB,CAAAA,UAAU,CAAC5B,SAAX,CAAqBwC,cAArB,CAAoCQ,kBAA3C,CACH,CACJ,CAZD,IAYO,CACH,GAAI5C,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,EAAoBF,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,CAAiBwC,aAAjB,CAA+BG,MAA/B,GAA0C,CAAlE,CAAqE,CAEjE,GAAI5C,CAAAA,YAAY,kBAAQD,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAApB,CAAhB,CACAG,UAAU,gCACHmB,UAAU,CAACnB,UADR,EACuBJ,YADvB,CAAV,CAGH,CAND,IAOK,CACD,GAAIA,CAAAA,aAAY,kBAAQD,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAApB,CAAhB,CACAG,UAAU,gCACHmB,UAAU,CAACnB,UADR,EACuBJ,aADvB,CAAV,CAGAkC,SAAS,CAAG,KAAZ,CACAnD,KAAK,CAAC4B,IAAN,CAAW3B,IAAI,CAACoC,aAAL,CAAmB,CAAEC,EAAE,CAAE,2BAAN,CAAnB,CAAX,EACC,CAER,CAGLlC,QAAQ,CAACiB,UAAD,CAAR,CACAR,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BC,UAAU,CAAVA,UAD2B,CAE5B;AACA;AACCuB,YAAY,CAAZA,YAJ2B,CAK3BkB,aAAa,CAAE,KALY,CAM3BC,WAAW,CAAC,KANe,CAO3Bb,eAAe,CAAfA,eAP2B,CAQ3B3B,OAAO,CAAE,KARkB,CAS3BmB,UAAU,CAAE,KATe,CAU3BS,SAAS,CAAEA,SAVgB,CAW3Ba,UAAU,CAAE,IAXe,CAY3BC,SAAS,CAAC,MAZiB,CAD1B,CAAD,CAAR,CAgBH,CAlEL,EAmEKzC,KAnEL,CAmEW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CA3EL,EA4EH,CA5FD,CA6FH,CACD,MAAO,SAASgD,CAAAA,sBAAT,CAAgCtD,SAAhC,CAA0CuD,IAA1C,CAAgD,CACnD,MAAO,UAAUtD,QAAV,CAAoB,CAEvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CAEAD,KAAK,CAACM,IAAN,CAAW,uBAAX,CAAoCF,SAApC,EACKG,IADL,CACU,SAAAC,QAAQ,CAAI,CAEV,GAAIA,QAAQ,CAACE,IAAT,CAAc,cAAd,GAAiCF,QAAQ,CAACE,IAAT,CAAc,cAAd,EAA8B2C,MAA9B,CAAuC,CAA5E,CAA+E,CAC3EhD,QAAQ,CAACuD,yBAAyB,CAACpD,QAAQ,CAACE,IAAT,CAAc,cAAd,CAAD,CAA+BN,SAA/B,CAA1B,CAAR,CACH,CAEL,GAAIS,CAAAA,UAAU,gCACP8C,IADO,EAEPnD,QAAQ,CAACE,IAFF,CAAd,CAKA,GAAIF,QAAQ,CAACE,IAAT,CAAckB,GAAd,GAAsB,SAA1B,CAAqC,CACjCiC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,YAAzC,CAAsD,MAAtD,CAA8DvD,QAAQ,CAACE,IAAT,CAAcsD,QAA5E,EACAH,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCG,KAAzC,GACH,CAHD,IAIK,CACDzE,KAAK,CAAC4B,IAAN,CAAWZ,QAAQ,CAACE,IAAT,CAAckB,GAAzB,EACH,CACDhC,QAAQ,CAACiB,UAAU,CAACqD,cAAZ,CAA2B,EAA3B,CAA8B,gBAA9B,CAAR,CACA7D,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAiBoD,MAAM,CAAE/D,SAAS,CAAC+D,MAAnC,CAA0CtD,UAAU,CAAVA,UAA1C,CACtCuD,SAAS,CAAE,KAD2B,CACpBxB,cAAc,CAAE,EADI,CACAyB,SAAS,CAAE,KADX,CAAjC,CAAD,CAAR,CAIH,CAxBL,EAyBKrD,KAzBL,CAyBW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CAjCL,EAkCH,CAtCD,CAuCH,CACD,MAAO,SAAS4D,CAAAA,uBAAT,CAAiClE,SAAjC,CAA4C,CAC/C,MAAO,UAAUC,QAAV,CAAoB,CACvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACM,IAAN,CAAW,kDAAX,CAA+DF,SAA/D,EACKG,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIC,CAAAA,YAAY,kBAAQD,QAAQ,CAACE,IAAjB,CAAhB,CACAD,YAAY,CAAGb,QAAQ,CAACa,YAAD,CAAvB,CACAJ,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BC,UAAU,8CACHT,SAAS,CAACS,UADP,EAEHJ,YAFG,MAGNgB,eAAe,CAAErB,SAAS,CAACqB,eAHrB,EADiB,CAM3BV,OAAO,CAAE,KANkB,CAD1B,CAAD,CAAR,CAUH,CAdL,EAeKC,KAfL,CAeW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CAvBL,EAwBH,CA1BD,CA2BH,CACD,MAAO,SAAS6D,CAAAA,sBAAT,CAAgCvC,UAAhC,CAA2CwC,UAA3C,CAAuD,CAC1D,MAAO,UAAUnE,QAAV,CAAoB,CACvB,GAAIoE,CAAAA,cAAc,CAAG,CACjBC,KAAK,CAAE1C,UAAU,CAAC5B,SAAX,CAAqBsE,KADX,CAEjBC,GAAG,CAAE3C,UAAU,CAAC5B,SAAX,CAAqBuE,GAFT,CAIjBC,eAAe,CAAE5C,UAAU,CAAC5B,SAAX,CAAqBwE,eAJrB,CAKjBC,YAAY,CAAE7C,UAAU,CAAC5B,SAAX,CAAqByE,YALlB,CAMjBC,eAAe,CAAE9C,UAAU,CAAC5B,SAAX,CAAqB0E,eANrB,CAOjBC,kBAAkB,CAAE/C,UAAU,CAAC5B,SAAX,CAAqB2E,kBAPxB,CAQjBC,YAAY,CAAEhD,UAAU,CAAC5B,SAAX,CAAqB4E,YARlB,CASjBC,SAAS,CAAEjD,UAAU,CAAC5B,SAAX,CAAqB6E,SATf,CAUjBzD,oBAAoB,CAAEQ,UAAU,CAAC5B,SAAX,CAAqBoB,oBAV1B,CAWjB0D,mBAAmB,CAAElD,UAAU,CAAC5B,SAAX,CAAqB8E,mBAXzB,CAYjBC,QAAQ,CAAEnD,UAAU,CAAC5B,SAAX,CAAqB+E,QAZd,CAajBC,cAAc,CAAEpD,UAAU,CAAC5B,SAAX,CAAqBgF,cAbpB,CAcjBC,cAAc,CAACrD,UAAU,CAACqD,cAdT,CAejBC,SAAS,CAAEtD,UAAU,CAACsD,SAfL,CAgBjB9C,kBAAkB,CAACR,UAAU,CAAC5B,SAAX,CAAqBoC,kBAhBvB,CAiBjBd,0BAA0B,CAACM,UAAU,CAACnB,UAAX,CAAsBa,0BAjBhC,CAkBjB8B,UAAU,CAAC,KAlBM,CAArB,CAqBAnD,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACM,IAAN,CAAW,0BAAX,CAAuCmE,cAAvC,EACKlE,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIC,CAAAA,YAAY,kBAAQD,QAAQ,CAACE,IAAjB,CAAhB,CACA;AACA,GAAIG,CAAAA,UAAU,gCACPmB,UAAU,CAACnB,UADJ,EAEPJ,YAFO,CAAd,CAKAb,QAAQ,CAACiB,UAAD,CAAR,CACAR,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BC,UAAU,CAAVA,UAD2B,CAE3BE,OAAO,CAAE,KAFkB,CAG3BmB,UAAU,CAAE,KAHe,CAD1B,CAAD,CAAR,CAOH,CAjBL,EAkBKlB,KAlBL,CAkBW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CA1BL,EA2BH,CAlDD,CAmDH,CACD,MAAO,SAAS6E,CAAAA,+BAAT,CAAyCnF,SAAzC,CAAoD,CACvD,MAAO,UAAUC,QAAV,CAAoB,CACvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACM,IAAN,CAAW,yCAAX,CAAsDF,SAAtD,EACKG,IADL,CACU,SAAAC,QAAQ,CAAI,CACT,GAAMgF,CAAAA,gBAAgB,CAAG9F,mBAAmB,CAACc,QAAQ,CAACE,IAAT,EAAiB,EAAlB,CAAsB,oBAAtB,CACjD,cADiD,CACjCoC,SADiC,CACtBA,SADsB,CACX,KADW,CAA5C,CAGT,GAAM2C,CAAAA,iBAAiB,CAAGD,gBAAgB,CAACzC,GAAjB,CAAqB,YAArB,CAA1B,CACI,GAAItC,CAAAA,YAAY,kBAAQD,QAAQ,CAACE,IAAjB,CAAhB,CACAD,YAAY,CAAGb,QAAQ,CAACa,YAAD,CAAvB,CACAJ,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3B6E,iBAAiB,CAAjBA,iBAD2B,CAE3B5E,UAAU,gCACHT,SAAS,CAACS,UADP,EAEHJ,YAFG,CAFiB,CAM3BM,OAAO,CAAE,KANkB,CAD1B,CAAD,CAAR,CAUH,CAlBL,EAmBKC,KAnBL,CAmBW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CA3BL,EA4BH,CA9BD,CA+BH,CACD,MAAO,SAASgF,CAAAA,sBAAT,CAAgCtF,SAAhC,CAA2C,CAC9C,MAAO,UAAUC,QAAV,CAAoB,CACvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACM,IAAN,CAAW,gCAAX,CAA6CF,SAA7C,EACKG,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAMqC,CAAAA,cAAc,CAAGnD,mBAAmB,CAACc,QAAQ,CAACE,IAAT,EAAiB,EAAlB,CAAsB,kBAAtB,CAC1C,kBAD0C,CACtBoC,SADsB,CACXA,SADW,CACA,KADA,CAA1C,CAGJ,GAAMJ,CAAAA,eAAe,CAAGG,cAAc,CAACE,GAAf,CAAmB,YAAnB,CAAxB,CAEA;AACA;AAEA;AACI,GAAItC,CAAAA,YAAY,kBAAQD,QAAQ,CAACE,IAAjB,CAAhB,CACAD,YAAY,CAAGb,QAAQ,CAACa,YAAD,CAAvB,CACAJ,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3B8B,eAAe,CAAfA,eAD2B,CAE3B7B,UAAU,8CACHT,SAAS,CAACS,UADP,EAEHJ,YAFG,MAGNkF,gBAAgB,CAAEvF,SAAS,CAACuF,gBAHtB,EAFiB,CAO3B5E,OAAO,CAAE,KAPkB,CAD1B,CAAD,CAAR,CAWH,CAxBL,EAyBKC,KAzBL,CAyBW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CAjCL,EAkCH,CApCD,CAqCH,CACD,MAAO,SAASkF,CAAAA,kBAAT,CAA4BxF,SAA5B,CAAuC,CAC1C,MAAO,UAAUC,QAAV,CAAoB,CACvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACM,IAAN,CAAW,4BAAX,CAAyCF,SAAzC,EACKG,IADL,CACU,SAAAC,QAAQ,CAAI,CAEd,GAAIA,QAAQ,CAACE,IAAT,CAAc,KAAd,CAAJ,CAA0B,CACtBlB,KAAK,CAAC4B,IAAN,CAAWZ,QAAQ,CAACE,IAAT,CAAckB,GAAzB,EACH,CACGvB,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACP,CAPL,EAQKC,KARL,CAQW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CAhBL,EAiBH,CAnBD,CAoBH,CACD,MAAO,SAASkD,CAAAA,yBAAT,CAAmCiC,UAAnC,CAA8C7D,UAA9C,CAA0D,CAC7D,MAAO,UAAU3B,QAAV,CAAoB,CACvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACM,IAAN,CAAYwF,MAAD,CAAS9D,UAAU,CAAC,KAAD,CAAnB,EAA4B,iCAAvC,CAAyE+D,IAAI,CAACC,SAAL,CAAeH,UAAf,CAAzE,CAAoG,CAChGI,OAAO,CAAE,CACL,eAAgB,kBADX,CADuF,CAApG,EAKK1F,IALL,CAKU,SAAAC,QAAQ,CAAI,CAEdH,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BG,OAAO,CAAE,KADkB,CAD1B,CAAD,CAAR,CAKH,CAZL,EAaKC,KAbL,CAaW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CArBL,EAsBH,CAxBD,CAyBH,CACD,MAAO,SAASwF,CAAAA,yBAAT,CAAmCC,QAAnC,CAA6CC,KAA7C,CAAoDhG,SAApD,CAA+D,CAGlE,MAAO,UAAUC,QAAV,CAAoB,CACzB,GAAID,SAAS,GAAK0C,SAAd,EAA0B1C,SAAS,CAACkF,SAAV,GAAsB,EAApD,CAAwD,CAEtDjF,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,MAAOD,CAAAA,KAAK,CAACM,IAAN,CAAW,qBAAX,CAEHF,SAFG,EAIFG,IAJE,CAIG,SAAAC,QAAQ,CAAI,CAChB;AACM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGP;AACG;AAEA;AACA;AACA;AACI,GAAIK,CAAAA,UAAU,gCAEPuF,KAFO,EAEG5F,QAAQ,CAACE,IAFZ,CAAd,CAOCd,QAAQ,CAACiB,UAAU,CAACqD,cAAZ,CAA2B,EAA3B,CAA8B,gBAA9B,CAAR,CAED7D,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BC,UAAU,CAAVA,UAD2B,CAE3BsD,MAAM,CAAE/D,SAAS,CAAC+D,MAFS,CAG3BpD,OAAO,CAAE,KAHkB,CAI3B4B,SAAS,CAAC,KAJiB,CAD1B,CAAD,CAAR,CAQJ;AACH,CAzCE,EA2CF3B,KA3CE,CA2CI,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACF;AAED,CAJD,IAKK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CArDE,CAAP,CAwDC,CA3DH,IA4DO,CACDlB,KAAK,CAAC4B,IAAN,CAAW3B,IAAI,CAACoC,aAAL,CAAmB,CAC1BC,EAAE,CAAE,wBADsB,CAAnB,CAAX,EAGH,CACJ,CAlED,CAmEH,CACD,MAAO,SAASuE,CAAAA,qBAAT,CAA+BrE,UAA/B,CAA0C2B,IAA1C,CAAgD,CACnD,MAAO,UAAUtD,QAAV,CAAoB,CAEvBA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAD,KAAK,CAACM,IAAN,CAAW,gCAAX,CAA6C0B,UAA7C,EACKzB,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIK,CAAAA,UAAU,gCACP8C,IADO,EAEPnD,QAAQ,CAACE,IAFF,CAAd,CAIA,GAAIF,QAAQ,CAACE,IAAT,CAAckB,GAAd,GAAsB,SAA1B,CAAqC,CACjCiC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,YAAzC,CAAsD,MAAtD,CAA8DvD,QAAQ,CAACE,IAAT,CAAcsD,QAA5E,EACAH,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCG,KAAzC,GACH,CAHD,IAGO,CACHzE,KAAK,CAAC4B,IAAN,CAAWZ,QAAQ,CAACE,IAAT,CAAckB,GAAzB,EACH,CAEDvB,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAiBoD,MAAM,CAAEnC,UAAU,CAACmC,MAApC,CAA2CtD,UAAU,CAAVA,UAA3C,CACtCuD,SAAS,CAAE,KAD2B,CACpBxB,cAAc,CAAE,EADI,CACAyB,SAAS,CAAE,KADX,CAAjC,CAAD,CAAR,CAEH,CAfL,EAgBKrD,KAhBL,CAgBW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CAxBL,EAyBH,CA3CD,CA4CH,CACD,MAAO,SAAS4F,CAAAA,uBAAT,CAAiCtE,UAAjC,CAA4CI,YAA5C,CAA0D,CAC7D,MAAO,UAAU/B,QAAV,CAAoB,CACvB,GAAIgC,CAAAA,QAAQ,CAAG,EAAf,CACAL,UAAU,CAAC5B,SAAX,CAAqB,SAArB,EAAgC,IAAhC,CACA,GAAMkC,CAAAA,aAAa,CAAGtC,KAAK,CAACM,IAAN,CAAW,0BAAX,CAAuC0B,UAAU,CAAC5B,SAAlD,CAAtB,CACF;AACC;AACC,GAAMmG,CAAAA,aAAa,CAAGvG,KAAK,CAACM,IAAN,CAAW,wBAAX,CAAqC0B,UAAU,CAAC5B,SAAhD,CAAtB,CAEIiC,QAAQ,CAAG,CAACC,aAAD,CAAeiE,aACtB;AADO,CAAX,CAIJlG,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAACkD,GAAN,CAAUJ,QAAV,EAEK9B,IAFL,CAEU,SAAAC,QAAQ,CAAI,CACd,GAAIA,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,CAAiB8F,MAAjB,GAA4B,SAAhC,CAA2C,CAEvC,GAAI3F,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAI+B,CAAAA,cAAc,CAAGZ,UAAU,CAAC5B,SAAX,CAAqBwC,cAA1C,CAEI,GAAInC,CAAAA,YAAY,kBAAQD,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAApB,CAAhB,CACAG,UAAU,gCACHmB,UAAU,CAACnB,UADR,EACuBJ,YADvB,CAAV,CAKJ;AAGAb,QAAQ,CAACiB,UAAD,CAAR,CACAR,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,kBACzBC,UAAU,CAAVA,UADyB,CAEzB;AACAyC,aAAa,CAAE,IAHU,CAIzBC,WAAW,CAAE,KAJY,CAKzBnB,YAAY,CAAZA,YALyB,CAMzBrB,OAAO,CAAE,KANgB,CAOzBmB,UAAU,CAAE,KAPa,CAQzBS,SAAS,CAAE,IARc,CASzBa,UAAU,CAAE,KATa,CAUzBC,SAAS,CAAE,QAVc,iBAWZzB,UAAU,CAAC5B,SAAX,CAAqBgC,YAXT,CADxB,CAAD,CAAR,CAeH,CA9BD,IA+BK,CACD5C,KAAK,CAAC4B,IAAN,CAAW3B,IAAI,CAACoC,aAAL,CAAmB,CAC1BC,EAAE,CAAEtB,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,CAAiB+F,gBADK,CAAnB,CAAX,EAGApG,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CAELU,OAAO,CAAE,CACLwB,YAAY,CAAEA,YADT,CAELrB,OAAO,CAAE,KAFJ,CAFJ,CAAD,CAAR,CAQH,CACJ,CA/CL,EAgDKC,KAhDL,CAgDW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CAxDL,EAyDH,CAtED,CAuEH,CACD,MAAO,SAASgG,CAAAA,uBAAT,CAAiCP,QAAjC,CAA2CC,KAA3C,CAAkDhG,SAAlD,CAA6D,CAGhE,MAAO,UAAUC,QAAV,CAAoB,CACzB,GAAID,SAAS,GAAK0C,SAAd,EAA0B1C,SAAS,CAACkF,SAAV,GAAsB,EAApD,CAAwD,CAEtDjF,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,MAAOD,CAAAA,KAAK,CAACM,IAAN,CAAW,uBAAX,CAEHF,SAFG,EAIFG,IAJE,CAIG,SAAAC,QAAQ,CAAI,CACV,GAAIK,CAAAA,UAAU,gCACPuF,KADO,EACG5F,QAAQ,CAACE,IADZ,CAAd,CAGAd,QAAQ,CAACiB,UAAU,CAACqD,cAAZ,CAA2B,EAA3B,CAA8B,gBAA9B,CAAR,CACA7D,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BC,UAAU,CAAVA,UAD2B,CAE3BsD,MAAM,CAAE/D,SAAS,CAAC+D,MAFS,CAG3BpD,OAAO,CAAE,KAHkB,CAI3B4B,SAAS,CAAE,KAJgB,CAD1B,CAAD,CAAR,CASP,CAlBE,EAmBF3B,KAnBE,CAmBI,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACF;AAED,CAJD,IAKK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CA7BE,CAAP,CA8BC,CAjCH,IAkCO,CACDlB,KAAK,CAAC4B,IAAN,CAAW3B,IAAI,CAACoC,aAAL,CAAmB,CAC1BC,EAAE,CAAE,wBADsB,CAAnB,CAAX,EAGH,CACJ,CAxCD,CAyCH,CACD,MAAO,SAAS6E,CAAAA,qBAAT,CAA+B3E,UAA/B,CAA0CI,YAA1C,CAAwD,CAC3D,MAAO,UAAU/B,QAAV,CAAoB,CACvB,GAAIgC,CAAAA,QAAQ,CAAG,EAAf,CACAL,UAAU,CAAC5B,SAAX,CAAqB,SAArB,EAAgC,IAAhC,CACA,GAAMkC,CAAAA,aAAa,CAAGtC,KAAK,CAACM,IAAN,CAAW,0BAAX,CAAuC0B,UAAU,CAAC5B,SAAlD,CAAtB,CACF;AACE,GAAMmC,CAAAA,WAAW,CAAGvC,KAAK,CAACM,IAAN,CAAW,gCAAX,CAA6C0B,UAAU,CAAC5B,SAAxD,CAApB,CACA,GAAMmG,CAAAA,aAAa,CAAGvG,KAAK,CAACM,IAAN,CAAW,wBAAX,CAAqC0B,UAAU,CAAC5B,SAAhD,CAAtB,CAEA,GAAI4B,UAAU,CAAC5B,SAAX,CAAqBoC,kBAArB,GAA4C,CAAhD,CAAmD,CAE/CH,QAAQ,CAAG,CAAEE,WAAF,CAAcgE,aAAd,CAAX,CACH,CAHD,IAIK,CACDlE,QAAQ,CAAG,CAACC,aAAD,CAAeiE,aACtB;AADO,CAELhE,WAFK,CAAX,CAIH,CACDlC,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAACkD,GAAN,CAAUJ,QAAV,EAEK9B,IAFL,CAEU,SAAAC,QAAQ,CAAI,CACd;AACA;AAEA;AACA,GAAIA,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,CAAiB8F,MAAjB,GAA4B,SAAhC,CAA2C,CAE3C,GAAI9D,CAAAA,eAAe,CAAG,EAAtB,CAEA;AACA;AACA;AACA;AACA;AACA,GAAI7B,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAI+B,CAAAA,cAAc,CAAGZ,UAAU,CAAC5B,SAAX,CAAqBwC,cAA1C,CACA,GAAIZ,UAAU,CAAC5B,SAAX,CAAqBoC,kBAArB,GAA4C,CAAhD,CAAmD,CAC/C,GAAMK,CAAAA,cAAc,CAAGnD,mBAAmB,CAACc,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,EAAoB,EAArB,CAAyB,kBAAzB,CAC1C,kBAD0C,CACtBoC,SADsB,CACXA,SADW,CACA,KADA,CAA1C,CAGHJ,eAAe,CAAGG,cAAc,CAACE,GAAf,CAAmB,YAAnB,CAAlB,CACGlC,UAAU,gCAAQmB,UAAU,CAACnB,UAAnB,MAA+BmC,gBAAgB,CAAE,EAAjD,CAAqDC,WAAW,CAAE,EAAlE,CAAsEC,aAAa,CAAE,EAArF,EAAV,CACA,GAAGlB,UAAU,CAAC5B,SAAX,CAAqBwC,cAArB,CAAoCO,gBAAvC,CAAwD,CACpD,MAAOnB,CAAAA,UAAU,CAAC5B,SAAX,CAAqBwC,cAArB,CAAoCO,gBAA3C,CACP,CACE,GAAGnB,UAAU,CAAC5B,SAAX,CAAqBwC,cAArB,CAAoCQ,kBAAvC,CAA0D,CACrD,MAAOpB,CAAAA,UAAU,CAAC5B,SAAX,CAAqBwC,cAArB,CAAoCQ,kBAA3C,CACJ,CACH,CAZD,IAYO,CACH,GAAI3C,CAAAA,YAAY,kBAAQD,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAApB,CAAhB,CACAG,UAAU,gCACJmB,UAAU,CAACnB,UADP,EACqBJ,YADrB,CAAV,CAGH,CAED;AAGAb,QAAQ,CAACiB,UAAD,CAAR,CACAR,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BC,UAAU,CAAVA,UAD2B,CAE5B;AACA;AACCuB,YAAY,CAACJ,UAAU,CAAC5B,SAAX,CAAqBgC,YAJP,CAK3BkB,aAAa,CAAE,KALY,CAM3BC,WAAW,CAAC,IANe,CAO3Bb,eAAe,CAAfA,eAP2B,CAQ3B3B,OAAO,CAAE,KARkB,CAS3BmB,UAAU,CAAE,KATe,CAU3BS,SAAS,CAAE,IAVgB,CAW3Ba,UAAU,CAAE,KAXe,CAY3BC,SAAS,CAAC,QAZiB,CAD1B,CAAD,CAAR,CAgBH,CAlDG,IAmDC,CACDjE,KAAK,CAAC4B,IAAN,CAAW3B,IAAI,CAACoC,aAAL,CAAmB,CAC1BC,EAAE,CAAEtB,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,CAAiB+F,gBADK,CAAnB,CAAX,EAGApG,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CAELU,OAAO,CAAE,CACLwB,YAAY,CAAEA,YADT,CAELrB,OAAO,CAAE,KAFJ,CAFJ,CAAD,CAAR,CAQH,CACA,CAvEL,EAwEKC,KAxEL,CAwEW,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CAhFL,EAiFH,CApGD,CAqGH,CACD,MAAO,SAASkG,CAAAA,oBAAT,CAA+BT,QAA/B,CAAyCC,KAAzC,CAAgDhG,SAAhD,CAA2D,CAG9D,MAAO,UAAUC,QAAV,CAAoB,CACzB,GAAID,SAAS,GAAK0C,SAAd,EAA0B1C,SAAS,CAACkF,SAAV,GAAsB,EAApD,CAAwD,CAEtDjF,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,MAAOD,CAAAA,KAAK,CAACM,IAAN,CAAW,uBAAX,CAEHF,SAFG,EAIFG,IAJE,CAIG,SAAAC,QAAQ,CAAI,CACV,GAAIK,CAAAA,UAAU,gCACPuF,KADO,EACG5F,QAAQ,CAACE,IADZ,CAAd,CAGAd,QAAQ,CAACiB,UAAU,CAACqD,cAAZ,CAA2B,EAA3B,CAA8B,gBAA9B,CAAR,CACA7D,QAAQ,CAAC,CACLM,IAAI,CAAET,cADD,CACiBU,OAAO,CAAE,CAC3BC,UAAU,CAAVA,UAD2B,CAE3BsD,MAAM,CAAE/D,SAAS,CAAC+D,MAFS,CAG3BpD,OAAO,CAAE,KAHkB,CAI3B4B,SAAS,CAAC,KAJiB,CAD1B,CAAD,CAAR,CAQP,CAjBE,EAkBF3B,KAlBE,CAkBI,SAAAC,KAAK,CAAI,CACZZ,QAAQ,CAAC,CAAEM,IAAI,CAAET,cAAR,CAAwBU,OAAO,CAAE,CAAEG,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1B,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACD;AAEF,CAJD,IAKK,CACD3B,KAAK,CAAC4B,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeE,IAA1B,EACH,CACJ,CA5BE,CAAP,CA6BC,CAhCH,IAiCO,CACDlB,KAAK,CAAC4B,IAAN,CAAW3B,IAAI,CAACoC,aAAL,CAAmB,CAC1BC,EAAE,CAAE,wBADsB,CAAnB,CAAX,EAGH,CACJ,CAvCD,CAwCH","sourcesContent":["import Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { intl } from \"../components/App\";\r\nimport { constructOptionList, replaceUpdatedObject, sortData } from \"../components/CommonScript\";\r\nimport { reportCOAType, REPORTTYPE } from \"../components/Enumeration\";\r\nimport TrainingUpdateChildTab from \"../pages/competencemanagement/trainingupdate/TrainingUpdateChildTab\";\r\nimport rsapi from \"../rsapi\";\r\nimport { initRequest } from \"./LoginAction\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\n\r\n// export function getReleasedSelectedSampleSubSampleTest(userInfo, Data1, inputData) {\r\n\r\n\r\n//     return function (dispatch) {\r\n//       if (inputData !== undefined &&inputData.npreregno!==\"\") {\r\n\r\n//         dispatch(initRequest(true));\r\n//         return rsapi.post(\"release/updateRelease\",\r\n\r\n//             inputData\r\n//         )\r\n//             .then(response => {\r\n//                 if (response.data.statusCodeValue !== 200) {\r\n//                     toast.warn(intl.formatMessage({\r\n//                         id: response.data.body\r\n//                     }));\r\n//                     dispatch({\r\n//                         type: DEFAULT_RETURN,\r\n//                         payload: {\r\n//                             loading: false\r\n//                         }\r\n//                     });\r\n\r\n\r\n//                 }\r\n//                 else {\r\n         \r\n//                     if (response.data.body[\"PortalStatus\"] && response.data.body[\"PortalStatus\"].length > 0) {\r\n//                         dispatch(UpdateExternalOrderStatus(response.data.body[\"PortalStatus\"],inputData));\r\n//                     }\r\n//                     let masterData = {\r\n\r\n//                         ...Data1, ...response.data.body,\r\n    \r\n\r\n//                     };\r\n\r\n//                     console.log(\"ReleasedTest,\", masterData);\r\n//                      sortData(masterData.ReleaseHistory,\"\",'sreportno');\r\n//                   //  dispatch(generateReport(inputData,masterData))\r\n\r\n//                     dispatch({\r\n//                         type: DEFAULT_RETURN, payload: {\r\n//                             masterData,\r\n//                             change: inputData.change,\r\n//                             loading: false,\r\n//                             openModal:false\r\n//                         }\r\n//                     });\r\n//                 }\r\n//             })\r\n\r\n//             .catch(error => {\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//                 if (error.response.status === 500) {\r\n//                     toast.error(error.message);\r\n//                     console.log(\"ErrorRelease,\", error);\r\n\r\n//                 }\r\n//                 else {\r\n//                     toast.warn(error.response.data);\r\n//                 }\r\n//             })\r\n\r\n\r\n//         }\r\n//         else {\r\n//             toast.warn(intl.formatMessage({\r\n//                 id: \"IDS_SELECTANYONESAMPLE\"\r\n//             }));\r\n//         }\r\n//     }\r\n// }\r\nexport function getReleasedRegistrationType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getRegistrationType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            SampleTypeValue: inputData.SampleTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReleasedRegistrationSubType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getRegistrationSubType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegTypeValue: inputData.RegTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getReleasedFilterBasedTest(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.napprovalversioncode) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"release/getFilterBasedTest\", inputData)\r\n                .then(response => {\r\n\r\n\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...inputData.masterData,\r\n                                ...responseData,\r\n                                RegSubTypeValue: inputData.RegSubTypeValue,\r\n                                ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n                                DesignTemplateMappingValue: inputData.DesignTemplateMappingValue\r\n                            },\r\n                            loading: false\r\n                        }\r\n                    })\r\n                    if (response.data.rtn) {\r\n                        toast.warn(response.data.rtn);\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_PLSSELECTALLVALUESINFILTER\"\r\n            }));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getReleasedApprovalVersion(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getApprovalVersion\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...responseData,\r\n                            // fromDate: inputParam.inputData.dfrom,\r\n                            // toDate: inputParam.inputData.dto,\r\n                        },\r\n                        loading: false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReleasedSample(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getReleaseSample\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                // responseData = sortData(responseData)\r\n                let masterData = {} \r\n               // if (response.data.ReleasedSampleDetails && response.data.ReleasedSampleDetails.length !== 0 ||\r\n               //     response.data.ReleaseSample && response.data.ReleaseSample.length === 0) {\r\n                    masterData = {\r\n                        ...inputParam.masterData,\r\n                        ...responseData,\r\n                    }\r\n            // }\r\n            //     else {\r\n            //         responseData.ReleaseHistory = []\r\n            //         responseData.selectedReleaseHistory= []\r\n            //         masterData = {\r\n            //             ...inputParam.masterData,\r\n            //             ...responseData,\r\n            //         }\r\n            //     }\r\n               \r\n                sortData(masterData,\"\",\"ncoaparentcode\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n    export function getApprovedSample(inputParam,ncontrolCode) {\r\n    return function (dispatch) {\r\n        let urlArray = []; \r\n        inputParam.inputData['isAddPopup']=true\r\n        const releaseSample = rsapi.post(\"release/getReleaseSample\", inputParam.inputData);\r\n      //  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\r\n        const projectType = rsapi.post(\"release/getApprovedProjectType\", inputParam.inputData);\r\n        if (inputParam.inputData.ncoareporttypecode === 7) {\r\n\r\n            urlArray = [ projectType];\r\n        }\r\n        else {\r\n            urlArray = [releaseSample\r\n                //,reportType\r\n            ];\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n\r\n            .then(response => {\r\n                // const reportTypeMap = constructOptionList(response[1].data.ReportType || [], \"ncoareporttypecode\",\r\n                //     \"scoareporttypename\", undefined, undefined, false);\r\n\r\n                // const ReportTypeList = reportTypeMap.get(\"OptionList\");\r\n                let ProjectTypeList = [];\r\n                \r\n                // let selectedRecord = {\"ncoareporttypecode\": {\r\n                //     \"value\": response[1].data.ReportType[0].ncoareporttypecode,\r\n                //      \"label\": response[1].data.ReportType[0].scoareporttypename\r\n                // }\r\n                // };\r\n                let masterData = {};\r\n                let openModal = true;\r\n                    let selectedRecord = inputParam.inputData.selectedRecord;\r\n                    if (inputParam.inputData.ncoareporttypecode === 7) {\r\n                        const projectTypeMap = constructOptionList(response[0].data || [], \"nprojecttypecode\",\r\n                            \"sprojecttypename\", undefined, undefined, false);\r\n                \r\n                        ProjectTypeList = projectTypeMap.get(\"OptionList\");\r\n                        masterData = { ...inputParam.masterData, ReleaseSubSample: [], ReleaseTest: [], ReleaseSample: [] };\r\n                        if (inputParam.inputData.selectedRecord.nprojecttypecode) {\r\n                            delete inputParam.inputData.selectedRecord.nprojecttypecode\r\n                        }\r\n                        if (inputParam.inputData.selectedRecord.nprojectmastercode) {\r\n                            delete inputParam.inputData.selectedRecord.nprojectmastercode\r\n                        }\r\n                    } else {\r\n                        if (response[0].data && response[0].data.ReleaseSample.length !== 0) {\r\n\r\n                            let responseData = { ...response[0].data }\r\n                            masterData = {\r\n                                ...inputParam.masterData, ...responseData\r\n                            }\r\n                        }\r\n                        else {\r\n                            let responseData = { ...response[0].data }\r\n                            masterData = {\r\n                                ...inputParam.masterData, ...responseData\r\n                            }\r\n                            openModal = false;\r\n                            toast.warn(intl.formatMessage({ id: \"IDS_NOSAMPLESAREAVAILABLE\" }));\r\n                            }\r\n\r\n                    }\r\n\r\n                \r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                       // selectedRecord,\r\n                       // ReportTypeList,\r\n                        ncontrolCode,\r\n                        isDeletePopup: false,\r\n                        isEditPopup:false,\r\n                        ProjectTypeList,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        openModal: openModal,\r\n                        isAddPopup: true,\r\n                        operation:\"save\"\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function generateReleasedReport(inputData,Data) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n\r\n        rsapi.post(\"release/updateRelease\", inputData)\r\n            .then(response => {\r\n         \r\n                    if (response.data[\"PortalStatus\"] && response.data[\"PortalStatus\"].length > 0) {\r\n                        dispatch(UpdateExternalOrderStatus(response.data[\"PortalStatus\"],inputData));\r\n                    }\r\n\r\n                let masterData = {\r\n                    ...Data,\r\n                    ...response.data,\r\n                }\r\n                \r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                }\r\n                else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false,change: inputData.change,masterData,\r\n                    modalShow: false, selectedRecord: {}, loadEsign: false\r\n                }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReleasedFilterStatus(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getReleaseConfigVersionRegTemplateDesign\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegSubTypeValue: inputData.RegSubTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReleasedDataDetails(inputParam,coahistory) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            dfrom: inputParam.inputData.dfrom,\r\n            dto: inputParam.inputData.dto,\r\n\r\n            nsampletypecode: inputParam.inputData.nsampletypecode,\r\n            nregtypecode: inputParam.inputData.nregtypecode,\r\n            nregsubtypecode: inputParam.inputData.nregsubtypecode,\r\n            ntransactionstatus: inputParam.inputData.ntransactionstatus,\r\n            nsectioncode: inputParam.inputData.nsectioncode,\r\n            ntestcode: inputParam.inputData.ntestcode,\r\n            napprovalversioncode: inputParam.inputData.napprovalversioncode,\r\n            napprovalconfigcode: inputParam.inputData.napprovalconfigcode,          \r\n            userinfo: inputParam.inputData.userinfo,\r\n            nneedsubsample: inputParam.inputData.nneedsubsample,\r\n            ncoaparentcode:inputParam.ncoaparentcode,\r\n            npreregno: inputParam.npreregno,\r\n            ncoareporttypecode:inputParam.inputData.ncoareporttypecode,\r\n            ndesigntemplatemappingcode:inputParam.masterData.ndesigntemplatemappingcode,\r\n            isAddPopup:false\r\n            \r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getReleaseSample\", inputParamData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                // responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                \r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovedProjectByProjectType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getApprovedProjectByProjectType\", inputData)\r\n            .then(response => {\r\n                     const projectMasterMap = constructOptionList(response.data || [], \"nprojectmastercode\",\r\n                \"sprojectcode\", undefined, undefined, false);\r\n                \r\n            const projectMasterList = projectMasterMap.get(\"OptionList\");\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        projectMasterList,\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovedProjectType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getApprovedProjectType\", inputData)\r\n            .then(response => {\r\n                const projectTypeMap = constructOptionList(response.data || [], \"nprojecttypecode\",\r\n                \"sprojecttypename\", undefined, undefined, false);\r\n                \r\n            const ProjectTypeList = projectTypeMap.get(\"OptionList\");\r\n\r\n            //     const projectMasterMap = constructOptionList(response.data || [], \"nprojecttypecode\",\r\n            //     \"sprojecttypename\", undefined, undefined, false);\r\n                \r\n            // const projectMasterList = projectMasterMap.get(\"OptionList\");\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        ProjectTypeList,\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            ProjectTypeValue: inputData.ProjectTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReportForPortal(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/SendToPortalReport\", inputData)\r\n            .then(response => {\r\n                \r\n                if (response.data[\"rtn\"]) {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function UpdateExternalOrderStatus(portallist,inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post((String)(inputParam[\"url\"])+\"/portal/UpdateMultiSampleStatus\",JSON.stringify(portallist),{\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => {\r\n                \r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovedRecordsAsDraft(userInfo, Data1, inputData) {\r\n\r\n\r\n    return function (dispatch) {\r\n      if (inputData !== undefined &&inputData.npreregno!==\"\") {\r\n\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"release/saveRelease\",\r\n\r\n            inputData\r\n        )\r\n            .then(response => {\r\n              //  if (response.data.statusCodeValue !== 200) {\r\n                    // toast.warn(intl.formatMessage({\r\n                    //     id: response.data.body\r\n                    // }));\r\n                    // dispatch({\r\n                    //     type: DEFAULT_RETURN,\r\n                    //     payload: {\r\n                    //         loading: false\r\n                    //     }\r\n                    // });\r\n\r\n\r\n             //   }\r\n                // else {\r\n         \r\n                //     if (response.data.body[\"PortalStatus\"] && response.data.body[\"PortalStatus\"].length > 0) {\r\n                //         dispatch(UpdateExternalOrderStatus(response.data.body[\"PortalStatus\"],inputData));\r\n                //     }\r\n                    let masterData = {\r\n\r\n                        ...Data1, ...response.data,\r\n    \r\n\r\n                    };\r\n\r\n                     sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            change: inputData.change,\r\n                            loading: false,\r\n                            openModal:false\r\n                        }\r\n                    });\r\n                // }\r\n            })\r\n\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                  //  console.log(\"ErrorRelease,\", error);\r\n\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n\r\n\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTANYONESAMPLE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\nexport function previewAndFinalReport(inputParam,Data) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        // const inputData = {\r\n        //     npreregno: inputParam.npreregno,\r\n        //  //   nsectioncode: inputParam.nsectioncode || -1,\r\n        //     userinfo: inputParam.userinfo,\r\n        //     nprimarykey: inputParam.npreregno,\r\n        //     nreporttypecode: REPORTTYPE.COAREPORT,\r\n        //     sprimarykeyname: \"npreregno\",\r\n        //     ncontrolcode: inputParam.ncontrolCode,\r\n        //     nregtypecode: inputParam.nregtypecode,\r\n        //     nregsubtypecode: inputParam.nregsubtypecode,\r\n        //     ntransactiontestcode:inputParam.ntransactiontestcode,\r\n        //     napproveconfversioncode: inputParam.napprovalversioncode,\r\n        //     ncoaparentcode: inputParam.ncoaparentcode,\r\n        //     ntransactionstatus:inputParam.ntransactionstatus\r\n        // }\r\n        rsapi.post(\"release/generateReleasedReport\", inputParam)\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...Data,\r\n                    ...response.data,\r\n                }\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n               \r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false,change: inputParam.change,masterData,\r\n                    modalShow: false, selectedRecord: {}, loadEsign: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRemoveApprovedSample(inputParam,ncontrolCode) {\r\n    return function (dispatch) {\r\n        let urlArray = []; \r\n        inputParam.inputData['isPopup']=true\r\n        const releaseSample = rsapi.post(\"release/getReleaseSample\", inputParam.inputData);\r\n      //  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\r\n       // const projectType = rsapi.post(\"release/getApprovedProjectType\", inputParam.inputData);\r\n        const statusService = rsapi.post(\"release/getStatusAlert\", inputParam.inputData);\r\n        \r\n            urlArray = [releaseSample,statusService\r\n                //,reportType\r\n            ];\r\n        \r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n\r\n            .then(response => {\r\n                if (response[1].data.Status === \"Success\") {\r\n\r\n                    let masterData = {};\r\n                    let selectedRecord = inputParam.inputData.selectedRecord;\r\n                    \r\n                        let responseData = { ...response[0].data }\r\n                        masterData = {\r\n                            ...inputParam.masterData, ...responseData\r\n                        }\r\n                    \r\n            \r\n                    // responseData = sortData(responseData)\r\n\r\n                \r\n                    sortData(masterData);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            // selectedRecord,\r\n                            isDeletePopup: true,\r\n                            isEditPopup: false,\r\n                            ncontrolCode,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            openModal: true,\r\n                            isAddPopup: false,\r\n                            operation: \"delete\",\r\n                            ncontrolCode:inputParam.inputData.ncontrolCode\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: response[1].data.ValidationStatus\r\n                    }));\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ncontrolCode: ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getDeleteApprovedSample(userInfo, Data1, inputData) {\r\n\r\n\r\n    return function (dispatch) {\r\n      if (inputData !== undefined &&inputData.npreregno!==\"\") {\r\n\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"release/deleteRelease\",\r\n\r\n            inputData\r\n        )\r\n            .then(response => {\r\n                    let masterData = {\r\n                        ...Data1, ...response.data,\r\n                    };\r\n                    sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            change: inputData.change,\r\n                            loading: false,\r\n                            openModal: false\r\n\r\n                        }\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                  //  console.log(\"ErrorRelease,\", error);\r\n\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTANYONESAMPLE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\nexport function getEditApprovedSample(inputParam,ncontrolCode) {\r\n    return function (dispatch) {\r\n        let urlArray = []; \r\n        inputParam.inputData['isPopup']=true\r\n        const releaseSample = rsapi.post(\"release/getReleaseSample\", inputParam.inputData);\r\n      //  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\r\n        const projectType = rsapi.post(\"release/getApprovedProjectType\", inputParam.inputData);\r\n        const statusService = rsapi.post(\"release/getStatusAlert\", inputParam.inputData);\r\n\r\n        if (inputParam.inputData.ncoareporttypecode === 7) {\r\n\r\n            urlArray = [ projectType,statusService];\r\n        }\r\n        else {\r\n            urlArray = [releaseSample,statusService\r\n                //,reportType\r\n                , projectType\r\n            ];\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n\r\n            .then(response => {\r\n                // const reportTypeMap = constructOptionList(response[1].data.ReportType || [], \"ncoareporttypecode\",\r\n                //     \"scoareporttypename\", undefined, undefined, false);\r\n\r\n                // const ReportTypeList = reportTypeMap.get(\"OptionList\");\r\n                if (response[1].data.Status === \"Success\") {\r\n\r\n                let ProjectTypeList = [];\r\n                \r\n                // let selectedRecord = {\"ncoareporttypecode\": {\r\n                //     \"value\": response[1].data.ReportType[0].ncoareporttypecode,\r\n                //      \"label\": response[1].data.ReportType[0].scoareporttypename\r\n                // }\r\n                // };\r\n                let masterData = {};\r\n                let selectedRecord = inputParam.inputData.selectedRecord;\r\n                if (inputParam.inputData.ncoareporttypecode === 7) {\r\n                    const projectTypeMap = constructOptionList(response[0].data || [], \"nprojecttypecode\",\r\n                    \"sprojecttypename\", undefined, undefined, false);\r\n                \r\n                 ProjectTypeList = projectTypeMap.get(\"OptionList\");\r\n                    masterData = { ...inputParam.masterData, ReleaseSubSample: [], ReleaseTest: [], ReleaseSample: [] };\r\n                    if(inputParam.inputData.selectedRecord.nprojecttypecode){\r\n                        delete inputParam.inputData.selectedRecord.nprojecttypecode\r\n                }\r\n                   if(inputParam.inputData.selectedRecord.nprojectmastercode){\r\n                        delete inputParam.inputData.selectedRecord.nprojectmastercode\r\n                   }\r\n                } else {\r\n                    let responseData = { ...response[0].data }\r\n                    masterData = {\r\n                       ...inputParam.masterData,...responseData\r\n                   }\r\n                }\r\n            \r\n                // responseData = sortData(responseData)\r\n\r\n                \r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                       // selectedRecord,\r\n                       // ReportTypeList,\r\n                        ncontrolCode:inputParam.inputData.ncontrolCode,\r\n                        isDeletePopup: false,\r\n                        isEditPopup:true,\r\n                        ProjectTypeList,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        openModal: true,\r\n                        isAddPopup: false,\r\n                        operation:\"append\"\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: response[1].data.ValidationStatus\r\n                }));\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ncontrolCode: ncontrolCode,\r\n                        loading: false\r\n                    }\r\n                });\r\n\r\n            }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function UpdateApprovedSample (userInfo, Data1, inputData) {\r\n\r\n\r\n    return function (dispatch) {\r\n      if (inputData !== undefined &&inputData.npreregno!==\"\") {\r\n\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"release/appendRelease\",\r\n\r\n            inputData\r\n        )\r\n            .then(response => {\r\n                    let masterData = {\r\n                        ...Data1, ...response.data,\r\n                    };\r\n                    sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            change: inputData.change,\r\n                            loading: false,\r\n                            openModal:false\r\n                        }\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                   // console.log(\"ErrorRelease,\", error);\r\n\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTANYONESAMPLE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}