{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{faPencilAlt,faPlus,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React from'react';import{Card,Col,FormGroup,FormLabel,Nav,Row}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';import{connect}from'react-redux';import{toast}from'react-toastify';import{Affix}from'rsuite';import{updateStore,crudMaster,filterColumnData,selectRegistrationSubType,getVersionById,getRegistrationSubTypeMaster,getRegSubTypeDetails,getSeqNoFormats,getEditRegSubType,getRegistrationTypeBySampleType,getRegistrationSubTypeOnReload}from'../../../actions';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import{ContentPanel,ReadOnlyText}from'../../../components/App.styles';import BreadcrumbComponent from'../../../components/Breadcrumb.Component';import{constructOptionList,getControlMap,showEsign}from'../../../components/CommonScript';import ConfirmMessage from'../../../components/confirm-alert/confirm-message.component';import CustomAccordion from'../../../components/custom-accordion/custom-accordion.component';import{transactionStatus}from'../../../components/Enumeration';import FormInput from'../../../components/form-input/form-input.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import FormTextarea from'../../../components/form-textarea/form-textarea.component';import ListMaster from'../../../components/list-master/list-master.component';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import Esign from'../../audittrail/Esign';import AddSeqNoFormatPopup from'./AddSeqNoFormatPopup';import RegistrationSubTypeAccordion from'./RegistrationSubTypeAccordion';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var RegistrationSubType=/*#__PURE__*/function(_React$Component){_inherits(RegistrationSubType,_React$Component);var _super=_createSuper(RegistrationSubType);function RegistrationSubType(props){var _this;_classCallCheck(this,RegistrationSubType);_this=_super.call(this,props);_this.registrationSubTypeAccordion=function(verisonList){var actionParam={// nregsubtypecode: this.props.Login.masterData.selectedRegistrationSubType.nregsubtypecode,\n// nregtypecode: this.props.Login.masterData.selectedRegistrationSubType.nregtypecode,\nnregsubtypeversioncode:_this.props.Login.masterData.selectedVersion?_this.props.Login.masterData.selectedVersion.nregsubtypeversioncode:-1,napprovalconfigcode:_this.props.Login.masterData.selectedVersion?_this.props.Login.masterData.selectedVersion.napprovalconfigcode:-1};var accordionMap=new Map();verisonList.map(function(version){return accordionMap.set(version.nregsubtypeversioncode,/*#__PURE__*/React.createElement(RegistrationSubTypeAccordion,{version:version,editVersionId:_this.state.editVersionId,deleteVersionId:_this.state.deleteVersionId,approveVersionId:_this.state.approveVersionId,userRoleControlRights:_this.state.userRoleControlRights,actionParam:actionParam,getVersionById:_this.getVersionById,approvrVersion:_this.doAction,ConfirmDelete:_this.ConfirmDelete// approvalConfig={this.props.Login.masterData.ApprovalConfig}\n}));});return accordionMap;};_this.filterComboChange=function(comboData,name){if(name==='nsampletypecode')_this.props.getRegistrationTypeBySampleType(comboData,_this.props.Login.masterData,_this.props.Login.userInfo,_this.state.breadCrumbRegType);else{var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false,selectedRegType:comboData,reloadData:false}};_this.props.updateStore(updateInfo);}// this.setState({ selectedRegType: comboData })\n};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){if(_this.state.selectedSampleType){_this.reloadData(_this.state.selectedSampleType,_this.state.selectedRegType);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SAMPLETYPENOTAVALIABLE\"}));}};_this.reloadData=function(selectedSampleType,selectedRegType){_this.searchRef.current.value=\"\";if(selectedSampleType!==undefined){_this.props.getRegistrationSubTypeMaster(selectedSampleType,selectedRegType,_this.props.Login.masterData,_this.props.Login.userInfo);}else{_this.props.getRegistrationSubTypeOnReload(_this.props.Login.userInfo);}};_this.ConfirmDelete=function(deleteId,methodURL,selectedRecord){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.doAction('delete',deleteId,methodURL,selectedRecord);});};_this.openModal=function(screenName){var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:true,operation:\"create\",screenName:screenName}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null,selectedFieldRecord:{},showConfirmAlert:false}};_this.props.updateStore(updateInfo);};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.screenName==='RegistrationSubType'){_this.saveRegSubType(saveType,formRef);}else{_this.saveVersion(saveType,formRef);}};_this.saveRegSubType=function(saveType,formRef){//add \nvar registrationSubType={nregtypecode:_this.state.breadCrumbData[1].item.value,sregsubtypename:_this.state.selectedRecord.sregsubtypename,sdescription:_this.state.selectedRecord.sdescription};var postParam={inputListName:\"RegistrationSubType\",selectedObject:\"selectedRegistrationSubType\",primaryKeyField:\"nregsubtypecode\",fetchUrl:\"registrationsubtype/getRegistrationSubTypeMaster\",fecthInputObject:{userinfo:_this.props.Login.userInfo,nregtypecode:_this.state.breadCrumbData[1]?_this.state.breadCrumbData[1].item.value:-1},masterData:_this.props.Login.masterData};var selectedId=null;if(_this.props.Login.operation===\"update\"){// edit\nselectedId=_this.state.selectedRecord.nregsubtypecode;registrationSubType=_objectSpread(_objectSpread({},registrationSubType),{},{nregsubtypecode:selectedId});}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:'RegistrationSubType',postParam:postParam,searchRef:_this.searchRef,displayName:_this.props.Login.inputParam.displayName,inputData:{userinfo:_this.props.Login.userInfo,registrationsubtype:registrationSubType},operation:_this.props.Login.operation,saveType:saveType,formRef:formRef};var masterData=_this.props.Login.masterData;var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType,operation:_this.props.Login.operation,openModal:true,screenName:_this.props.Login.inputParam.displayName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.saveVersion=function(saveType,formRef){var version={napprovalconfigcode:_this.props.Login.masterData.selectedRegistrationSubType.napprovalconfigcode,jsondata:_objectSpread(_objectSpread({},_this.state.selectedRecord),{},{nresetduration:1,// nneedscheduler:false,\nsversiondesc:'-',nversionno:-1}),nperiodcode:_this.state.selectedRecord.nperiodcode?_this.state.selectedRecord.nperiodcode.value:4,ntransactionstatus:transactionStatus.DRAFT,nsitecode:_this.props.Login.userInfo.nmastersitecode,nstatus:transactionStatus.ACTIVE};var selectedId=null;var operation='create';if(_this.props.Login.operation===\"update\"){// edit\noperation='update';selectedId=_this.state.selectedRecord.nregsubtypeversioncode;version=_objectSpread(_objectSpread({},version),{},{nregsubtypeversioncode:selectedId});}var postParam={inputListName:\"RegistrationSubType\",selectedObject:\"selectedRegistrationSubType\",primaryKeyField:\"nregsubtypecode\",fetchUrl:\"registrationsubtype/getRegistrationSubTypeMaster\",fecthInputObject:{userinfo:_this.props.Login.userInfo,nregtypecode:_this.state.breadCrumbData[1]?_this.state.breadCrumbData[1].item.value:-1},masterData:_this.props.Login.masterData};var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:'Version',postParam:postParam,searchRef:_this.searchRef,displayName:_this.props.Login.inputParam.displayName,inputData:{userinfo:_this.props.Login.userInfo,version:version},operation:operation,saveType:saveType,formRef:formRef};var masterData=_this.props.Login.masterData;var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType,operation:operation,openModal:true,screenName:_this.props.Login.inputParam.displayName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.getVersionById=function(ncontrolcode){_this.props.getVersionById(_this.props.Login.masterData.selectedVersion.nregsubtypeversioncode,_this.props.Login.userInfo,ncontrolcode);};_this.doAction=function(operation,controlCode,methodURL,selectedRecord){var _inputData;var postParam={inputListName:\"RegistrationSubType\",selectedObject:\"selectedRegistrationSubType\",primaryKeyField:\"nregsubtypecode\",fetchUrl:\"registrationsubtype/getRegistrationSubTypeMaster\",fecthInputObject:{userinfo:_this.props.Login.userInfo,nregtypecode:_this.state.breadCrumbData[1]?_this.state.breadCrumbData[1].item.value:-1},masterData:_this.props.Login.masterData};var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:methodURL,postParam:postParam,searchRef:_this.searchRef,inputData:(_inputData={},_defineProperty(_inputData,methodURL.toLowerCase(),selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_inputData),operation:operation,displayName:_this.props.Login.inputParam.displayName};var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,controlCode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onNumericInputChange=function(value,name){var selectedRecord=_this.state.selectedRecord;if(value===0||value===0.0){selectedRecord[name]=\"\";_this.setState({selectedRecord:selectedRecord});}else{if(name==='seqnolength'){var str='{9999}';str=str.substring(1,str.length-2);str=str.padStart(value,9);selectedRecord.sseqno='{'+str+'}';}selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});}};_this.onComboChange=function(comboData,name){_this.setState({selectedRecord:_objectSpread(_objectSpread({},_this.state.selectedRecord),{},_defineProperty({},name,comboData))});};_this.onClickBackspace=function(){var selectedRecord=_this.state.selectedRecord;var formatArray=selectedRecord.formatArray||[];formatArray.pop();var formatString='';formatArray.map(function(comp){return formatString+=comp;});selectedRecord.formatArray=formatArray;selectedRecord.ssampleformat=formatString;selectedRecord.exampleformat=_this.replaceFormat(formatString);_this.setState({selectedRecord:selectedRecord});};_this.onClickClear=function(){var selectedRecord=_this.state.selectedRecord;selectedRecord.formatArray=[];selectedRecord.ssampleformat=\"\";selectedRecord.exampleformat=\"\";_this.setState({selectedRecord:selectedRecord});};_this.replaceFormat=function(formatString){var month=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];var date=new Date();var replacedString=formatString;var seqno=\"1\";while(replacedString.includes('}')){var comp=replacedString.substring(replacedString.indexOf('{'),replacedString.indexOf('}')+1);switch(comp){case'{yyyy}':replacedString=replacedString.replace('{yyyy}',date.getFullYear());break;case'{yy}':replacedString=replacedString.replace('{yy}',date.getFullYear().toString().substring(2,4));break;case'{MM}':replacedString=replacedString.replace('{MM}',(date.getMonth()+1).toString().padStart(2,\"0\"));break;case'{MMM}':replacedString=replacedString.replace('{MMM}',month[date.getMonth()]);break;case'{DD}':replacedString=replacedString.replace('{DD}',date.getDate().toString().padStart(2,\"0\"));break;case _this.state.selectedRecord.sseqno||'{9999}':seqno=seqno.padStart(_this.state.selectedRecord.seqnolength||4,\"0\");replacedString=replacedString.replace(_this.state.selectedRecord.sseqno||'{9999}',seqno);break;default:if(comp.includes('9')){seqno=seqno.padStart(comp.length-2,\"0\");replacedString=replacedString.replace(comp,seqno);}break;}}return replacedString;};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();_this.state={userRoleControlRights:[],controlMap:new Map(),addVersionId:-1,editVersionId:-1,deleteVersionId:-1,approveVersionId:-1,addRegistrationSubTypeId:-1,editRegistrationSubTypeId:-1,deleteRegistrationSubTypeId:-1,selectedRecord:{},sampleTypeOptions:[],selectedSampleType:{},breadCrumbSampleType:{},selectedRegType:{},breadCrumbRegType:{},breadCrumbData:[],design:[],comboComponents:[],withoutCombocomponent:[]};_this.regSubTypeMandatoryFields=[{\"idsName\":\"IDS_REGISTRATIONSUBTYPE\",\"dataField\":\"sregsubtypename\",\"mandatoryLabel\":\"IDS_ENTER\"}];return _this;}_createClass(RegistrationSubType,[{key:\"render\",value:function render(){var _this2=this;var filterParam={inputListName:\"RegistrationSubType\",selectedObject:\"selectedRegistrationSubType\",primaryKeyField:\"nregtypecode\",fetchUrl:\"registrationsubtype/getRegistrationSubTypeMaster\",fecthInputObject:{userinfo:this.props.Login.userInfo,nregtypecode:this.state.breadCrumbData[1]?this.state.breadCrumbData[1].item.value:-1},masterData:this.props.Login.masterData,unchangeList:[\"realSampleType\",\"SampleTypes\",\"realRegtype\",\"RegistrationTypes\"],searchFieldList:[\"sregsubtypename\",\"sdescription\"]};this.versionMandatoryFields=[{\"idsName\":\"IDS_FORMAT\",\"dataField\":\"ssampleformat\",\"mandatoryLabel\":\"IDS_SELECT\"}];var deleteParam=this.props.Login.masterData.selectedRegistrationSubType?{nregsubtypecode:this.props.Login.masterData.selectedRegistrationSubType.nregsubtypecode,nregtypecode:this.props.Login.masterData.selectedRegistrationSubType.nregtypecode}:{};if(this.state.selectedRecord.nisnewformat){// this.versionMandatoryFields.push({ \"idsName\": \"IDS_RESETDURATION\", \"dataField\": \"nresetduration\", \"mandatoryLabel\": \"IDS_ENTER\" })\nthis.versionMandatoryFields.push({\"idsName\":\"IDS_RESETDURATION\",\"dataField\":\"nperiodcode\",\"mandatoryLabel\":\"IDS_SELECT\"});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},this.state.breadCrumbData.length>0?/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.state.breadCrumbData})):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMaster,{filterColumnData:this.props.filterColumnData,screenName:\"RegistrationSubType\",masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.RegistrationSubType||[],masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,getMasterDetail:function getMasterDetail(regType){return _this2.props.selectRegistrationSubType(regType,_this2.props.Login.masterData,_this2.props.Login.userInfo);},selectedMaster:this.props.Login.masterData.selectedRegistrationSubType,primaryKeyField:\"nregsubtypecode\",mainField:\"sregsubtypename\"// firstField=\"stransdisplaystatus\"\n// secondField=\"stransdisplaystatus\"\n,userRoleControlRights:this.state.userRoleControlRights,addId:this.state.addRegistrationSubTypeId,filterParam:filterParam,hidePaging:false,searchRef:this.searchRef,reloadData:this.reloadData,openModal:function openModal(){return _this2.openModal(\"RegistrationSubType\");},openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,showFilterIcon:true,showFilter:this.props.Login.showFilter,filterComponent:[{\"IDS_SAMPLETYPEFILTER\":/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsampletypecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_SAMPLETYPE\"}),isSearchable:false,placeholder:\"Please Select...\",options:this.state.sampleTypeOptions,value:this.state.selectedSampleType?this.state.selectedSampleType:\"\",onChange:function onChange(value){return _this2.filterComboChange(value,'nsampletypecode');}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nregtypecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_REGTYPE\"}),isSearchable:false,placeholder:\"Please Select...\",options:this.state.regTypeOptions,value:this.state.selectedRegType||\"\",onChange:function onChange(value){return _this2.filterComboChange(value,'nregtypecode');}})))}]})),/*#__PURE__*/React.createElement(Col,{md:\"8\"},this.props.Login.masterData.selectedRegistrationSubType?/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.selectedRegistrationSubType.sregsubtypename),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"editInstrument\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),\"data-for\":\"tooltip_list_wrap\",hidden:this.state.userRoleControlRights.indexOf(this.state.editRegistrationSubTypeId)===-1,className:\"btn btn-circle outline-grey mr-2\",onClick:function onClick(e){return _this2.props.getEditRegSubType(_this2.props.Login.masterData.selectedRegistrationSubType.nregsubtypecode,_this2.props.Login.userInfo,_this2.state.editRegistrationSubTypeId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteInstrument\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),\"data-for\":\"tooltip_list_wrap\",hidden:this.state.userRoleControlRights.indexOf(this.state.deleteRegistrationSubTypeId)===-1,onClick:function onClick(){return _this2.ConfirmDelete(_this2.state.deleteRegistrationSubTypeId,'RegistrationSubType',deleteParam);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_DESCRIPTION\",message:\"Description\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.selectedRegistrationSubType.sdescription||'-')))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"add-txt-btn\",hidden:this.state.userRoleControlRights.indexOf(this.state.addVersionId)===-1,onClick:function onClick(){return _this2.props.getSeqNoFormats({userInfo:_this2.props.Login.userInfo,ncontrolcode:_this2.state.addVersionId});}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_VERSION\",defaultMessage:\"Version\"}))))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},this.props.Login.masterData.versions&&this.props.Login.masterData.versions.length>0?/*#__PURE__*/React.createElement(CustomAccordion,{key:\"FormatVersion\",titlePrefix:this.props.intl.formatMessage({id:\"IDS_VERSION\"})+\" : \",isJSONdata:true,jsonFieldName:'jsondata',accordionTitle:'sversiondesc',accordionComponent:this.registrationSubTypeAccordion(this.props.Login.masterData.versions),inputParam:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},accordionClick:this.props.getRegSubTypeDetails,accordionPrimaryKey:\"nregsubtypeversioncode\",accordionObjectName:\"version\",selectedKey:this.props.Login.masterData.selectedVersion.nregsubtypeversioncode}):\"\"))))):\"\"))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{size:\"lg\",onSaveClick:this.onSaveClick,operation:this.props.Login.operation,screenName:this.props.Login.screenName,closeModal:this.closeModal,show:this.props.Login.openModal,inputParam:this.props.Login.inputParam,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,mandatoryFields:this.props.Login.screenName==='RegistrationSubType'?this.regSubTypeMandatoryFields:this.versionMandatoryFields,selectedRecord:this.state.selectedRecord||{},addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:function onInputOnChange(event){return _this2.onInputOnChange(event);},inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.screenName==='RegistrationSubType'?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormInput,{name:\"sregsubtypename\",label:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONSUBTYPE\"}),type:\"text\",value:this.state.selectedRecord.sregsubtypename||\"\",isMandatory:true,required:true,maxLength:100,onChange:function onChange(event){return _this2.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"sdescription\",label:this.props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),type:\"text\",value:this.state.selectedRecord.sdescription||\"\",isMandatory:false,required:true,maxLength:255,onChange:function onChange(event){return _this2.onInputOnChange(event);}})):/*#__PURE__*/React.createElement(AddSeqNoFormatPopup,{selectedRecord:this.state.selectedRecord,existingFormats:this.props.Login.existingFormats,periodList:this.props.Login.periodList,onInputOnChange:this.onInputOnChange,onNumericInputChange:this.onNumericInputChange,onComboChange:this.onComboChange,onDrop:this.onDrop.bind(this),onClickBackspace:this.onClickBackspace,onClickClear:this.onClickClear})}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var updateState=false;var _this$state=this.state,userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,addVersionId=_this$state.addVersionId,editVersionId=_this$state.editVersionId,deleteVersionId=_this$state.deleteVersionId,approveVersionId=_this$state.approveVersionId,addRegistrationSubTypeId=_this$state.addRegistrationSubTypeId,editRegistrationSubTypeId=_this$state.editRegistrationSubTypeId,deleteRegistrationSubTypeId=_this$state.deleteRegistrationSubTypeId,breadCrumbSampleType=_this$state.breadCrumbSampleType,breadCrumbRegType=_this$state.breadCrumbRegType,sampleTypeOptions=_this$state.sampleTypeOptions,regTypeOptions=_this$state.regTypeOptions,breadCrumbData=_this$state.breadCrumbData,selectedSampleType=_this$state.selectedSampleType,selectedRegType=_this$state.selectedRegType,selectedRecord=_this$state.selectedRecord,comboComponents=_this$state.comboComponents,withoutCombocomponent=_this$state.withoutCombocomponent;if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);updateState=true;addVersionId=controlMap.has(\"AddSeqNoFormatVersion\")&&controlMap.get(\"AddSeqNoFormatVersion\").ncontrolcode;editVersionId=controlMap.has(\"EditSeqNoFormatVersion\")&&controlMap.get(\"EditSeqNoFormatVersion\").ncontrolcode;deleteVersionId=controlMap.has(\"DeleteSeqNoFormatVersion\")&&controlMap.get(\"DeleteSeqNoFormatVersion\").ncontrolcode;approveVersionId=controlMap.has(\"ApproveSeqNoFormatVersion\")&&controlMap.get(\"ApproveSeqNoFormatVersion\").ncontrolcode;addRegistrationSubTypeId=controlMap.has(\"AddRegistrationSubType\")&&controlMap.get(\"AddRegistrationSubType\").ncontrolcode;editRegistrationSubTypeId=controlMap.has(\"EditRegistrationSubType\")&&controlMap.get(\"EditRegistrationSubType\").ncontrolcode;deleteRegistrationSubTypeId=controlMap.has(\"DeleteRegistrationSubType\")&&controlMap.get(\"DeleteRegistrationSubType\").ncontrolcode;sampleTypeOptions=constructOptionList(this.props.Login.masterData.SampleTypes||[],'nsampletypecode','ssampletypename','nsampletypecode',\"ascending\").get(\"OptionList\");selectedSampleType=sampleTypeOptions.length>0?sampleTypeOptions[0]:{};regTypeOptions=constructOptionList(this.props.Login.masterData.RegistrationTypes||[],'nregtypecode','sregtypename','nregtypecode',\"ascending\").get(\"OptionList\");selectedRegType=regTypeOptions.length>0?regTypeOptions[0]:{};breadCrumbData=[];breadCrumbSampleType=sampleTypeOptions[0]||{};breadCrumbRegType=regTypeOptions[0]||{};sampleTypeOptions.length>0&&breadCrumbData.push({\"label\":\"IDS_SAMPLETYPE\",\"value\":breadCrumbSampleType.label,\"item\":sampleTypeOptions});regTypeOptions.length>0&&breadCrumbData.push({\"label\":\"IDS_REGTYPE\",\"value\":breadCrumbRegType.label,\"item\":breadCrumbRegType});updateState=true;}if(this.props.Login.realSampleType!==previousProps.Login.realSampleType){breadCrumbData=[{\"label\":\"IDS_SAMPLETYPE\",\"value\":selectedSampleType.label,\"item\":selectedSampleType},{\"label\":\"IDS_REGTYPE\",\"value\":selectedRegType.label,\"item\":selectedRegType}];breadCrumbSampleType=this.props.Login.realSampleType;breadCrumbRegType=this.props.Login.realRegtype;updateState=true;}if(this.props.Login.realRegtype!==previousProps.Login.realRegtype){breadCrumbSampleType=this.props.Login.realSampleType||breadCrumbSampleType;breadCrumbRegType=this.props.Login.realRegtype;breadCrumbData=[{\"label\":\"IDS_SAMPLETYPE\",\"value\":breadCrumbSampleType.label,\"item\":breadCrumbSampleType},{\"label\":\"IDS_REGTYPE\",\"value\":breadCrumbRegType.label,\"item\":breadCrumbRegType}];updateState=true;}if(this.props.Login.selectedSampleType!==previousProps.Login.selectedSampleType){selectedSampleType=this.props.Login.selectedSampleType;regTypeOptions=constructOptionList(this.props.Login.masterData.RegistrationTypes||[],'nregtypecode','sregtypename','nregtypecode',\"ascending\").get(\"OptionList\");selectedRegType=regTypeOptions[0];updateState=true;}if(this.props.Login.reloadData&&this.props.Login.reloadData!==previousProps.Login.reloadData){sampleTypeOptions=constructOptionList(this.props.Login.masterData.SampleTypes||[],'nsampletypecode','ssampletypename','nsampletypecode',\"ascending\").get(\"OptionList\");selectedSampleType=sampleTypeOptions.length>0?sampleTypeOptions[0]:{};regTypeOptions=constructOptionList(this.props.Login.masterData.RegistrationTypes||[],'nregtypecode','sregtypename','nregtypecode',\"ascending\").get(\"OptionList\");selectedRegType=regTypeOptions.length>0?regTypeOptions[0]:{};breadCrumbData=[];breadCrumbSampleType=sampleTypeOptions[0]||{};breadCrumbRegType=regTypeOptions[0]||{};sampleTypeOptions.length>0&&breadCrumbData.push({\"label\":\"IDS_SAMPLETYPE\",\"value\":breadCrumbSampleType.label,\"item\":sampleTypeOptions});regTypeOptions.length>0&&breadCrumbData.push({\"label\":\"IDS_REGTYPE\",\"value\":breadCrumbRegType.label,\"item\":breadCrumbRegType});updateState=true;}if(this.props.Login.selectedRegType!==previousProps.Login.selectedRegType){selectedRegType=this.props.Login.selectedRegType;updateState=true;}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){updateState=true;selectedRecord=this.props.Login.selectedRecord;}if(updateState){this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,addVersionId:addVersionId,editVersionId:editVersionId,deleteVersionId:deleteVersionId,approveVersionId:approveVersionId,addRegistrationSubTypeId:addRegistrationSubTypeId,editRegistrationSubTypeId:editRegistrationSubTypeId,deleteRegistrationSubTypeId:deleteRegistrationSubTypeId,sampleTypeOptions:sampleTypeOptions,regTypeOptions:regTypeOptions,breadCrumbData:breadCrumbData,selectedSampleType:selectedSampleType,selectedRegType:selectedRegType,selectedRecord:selectedRecord,comboComponents:comboComponents,withoutCombocomponent:withoutCombocomponent,breadCrumbSampleType:breadCrumbSampleType,breadCrumbRegType:breadCrumbRegType});}}},{key:\"onDrop\",value:function onDrop(data){// if (data.formatcomponents === \"\") {\n// } else {\nvar selectedRecord=JSON.parse(JSON.stringify(this.state.selectedRecord));var formatArray=selectedRecord.formatArray||[];formatArray.push(data.formatcomponents);var formatString='';formatArray.map(function(comp){return formatString+=comp;});selectedRecord.formatArray=formatArray;selectedRecord.ssampleformat=formatString;selectedRecord.exampleformat=this.replaceFormat(formatString);if(selectedRecord.ssampleformat.length<30){this.setState({selectedRecord:selectedRecord});}else{toast.info(this.props.intl.formatMessage({id:\"IDS_EXCEEDSMAXCHARS\"}));}// }\n;}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.intl.formatMessage({id:props.Login.masterStatus}));props.Login.masterStatus=\"\";}if(props.Login.error!==\"\"&&props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return RegistrationSubType;}(React.Component);export default connect(mapStateToProps,{updateStore:updateStore,crudMaster:crudMaster,getRegistrationSubTypeMaster:getRegistrationSubTypeMaster,filterColumnData:filterColumnData,getRegSubTypeDetails:getRegSubTypeDetails,getSeqNoFormats:getSeqNoFormats,selectRegistrationSubType:selectRegistrationSubType,getEditRegSubType:getEditRegSubType,getVersionById:getVersionById,getRegistrationTypeBySampleType:getRegistrationTypeBySampleType,getRegistrationSubTypeOnReload:getRegistrationSubTypeOnReload})(injectIntl(RegistrationSubType));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/dynamicpreregdesign/registrationsubtype/RegistrationSubType.jsx"],"names":["faPencilAlt","faPlus","faTrashAlt","FontAwesomeIcon","React","Card","Col","FormGroup","FormLabel","Nav","Row","FormattedMessage","injectIntl","connect","toast","Affix","updateStore","crudMaster","filterColumnData","selectRegistrationSubType","getVersionById","getRegistrationSubTypeMaster","getRegSubTypeDetails","getSeqNoFormats","getEditRegSubType","getRegistrationTypeBySampleType","getRegistrationSubTypeOnReload","DEFAULT_RETURN","ContentPanel","ReadOnlyText","BreadcrumbComponent","constructOptionList","getControlMap","showEsign","ConfirmMessage","CustomAccordion","transactionStatus","FormInput","FormSelectSearch","FormTextarea","ListMaster","SlideOutModal","Esign","AddSeqNoFormatPopup","RegistrationSubTypeAccordion","mapStateToProps","state","Login","RegistrationSubType","props","registrationSubTypeAccordion","verisonList","actionParam","nregsubtypeversioncode","masterData","selectedVersion","napprovalconfigcode","accordionMap","Map","map","version","set","editVersionId","deleteVersionId","approveVersionId","userRoleControlRights","doAction","ConfirmDelete","filterComboChange","comboData","name","userInfo","breadCrumbRegType","updateInfo","typeName","data","showFilter","selectedRegType","reloadData","closeFilter","onFilterSubmit","selectedSampleType","warn","intl","formatMessage","id","searchRef","current","value","undefined","deleteId","methodURL","selectedRecord","confirmMessage","confirm","openModal","screenName","operation","closeModal","loadEsign","selectedId","selectedFieldRecord","showConfirmAlert","onSaveClick","saveType","formRef","saveRegSubType","saveVersion","registrationSubType","nregtypecode","breadCrumbData","item","sregsubtypename","sdescription","postParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","userinfo","nregsubtypecode","inputParam","classUrl","methodUrl","displayName","inputData","registrationsubtype","esignNeeded","nformcode","ncontrolcode","screenData","selectedRegistrationSubType","jsondata","nresetduration","sversiondesc","nversionno","nperiodcode","ntransactionstatus","DRAFT","nsitecode","nmastersitecode","nstatus","ACTIVE","controlCode","toLowerCase","onInputOnChange","event","target","type","checked","setState","onNumericInputChange","str","substring","length","padStart","sseqno","onComboChange","onClickBackspace","formatArray","pop","formatString","comp","ssampleformat","exampleformat","replaceFormat","onClickClear","month","date","Date","replacedString","seqno","includes","indexOf","replace","getFullYear","toString","getMonth","getDate","seqnolength","createRef","controlMap","addVersionId","addRegistrationSubTypeId","editRegistrationSubTypeId","deleteRegistrationSubTypeId","sampleTypeOptions","breadCrumbSampleType","design","comboComponents","withoutCombocomponent","regSubTypeMandatoryFields","filterParam","unchangeList","searchFieldList","versionMandatoryFields","deleteParam","nisnewformat","push","searchedData","regType","openFilter","regTypeOptions","e","versions","validateEsign","existingFormats","periodList","onDrop","bind","previousProps","updateState","Object","values","has","get","SampleTypes","RegistrationTypes","label","realSampleType","realRegtype","JSON","parse","stringify","formatcomponents","info","masterStatus","error","Component"],"mappings":"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","sourcesContent":["import { faPencilAlt, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Card, Col, FormGroup, FormLabel, Nav, Row } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { Affix } from 'rsuite';\r\nimport {\r\n    updateStore, crudMaster, filterColumnData, selectRegistrationSubType, getVersionById,\r\n    getRegistrationSubTypeMaster, getRegSubTypeDetails, getSeqNoFormats, getEditRegSubType,\r\n    getRegistrationTypeBySampleType, getRegistrationSubTypeOnReload\r\n} from '../../../actions';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport { ContentPanel, ReadOnlyText } from '../../../components/App.styles';\r\nimport BreadcrumbComponent from '../../../components/Breadcrumb.Component';\r\nimport { constructOptionList, getControlMap, showEsign } from '../../../components/CommonScript';\r\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\r\nimport CustomAccordion from '../../../components/custom-accordion/custom-accordion.component';\r\nimport { transactionStatus } from '../../../components/Enumeration';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport ListMaster from '../../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../../audittrail/Esign';\r\nimport AddSeqNoFormatPopup from './AddSeqNoFormatPopup';\r\nimport RegistrationSubTypeAccordion from './RegistrationSubTypeAccordion';\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass RegistrationSubType extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.state = {\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            addVersionId: -1,\r\n            editVersionId: -1,\r\n            deleteVersionId: -1,\r\n            approveVersionId: -1,\r\n            addRegistrationSubTypeId: -1,\r\n            editRegistrationSubTypeId: -1,\r\n            deleteRegistrationSubTypeId: -1,\r\n            selectedRecord: {},\r\n            sampleTypeOptions: [],\r\n            selectedSampleType: {},\r\n            breadCrumbSampleType: {},\r\n            selectedRegType: {},\r\n            breadCrumbRegType: {},\r\n            breadCrumbData: [],\r\n            design: [],\r\n            comboComponents: [],\r\n            withoutCombocomponent: []\r\n        };\r\n        this.regSubTypeMandatoryFields = [\r\n            { \"idsName\": \"IDS_REGISTRATIONSUBTYPE\", \"dataField\": \"sregsubtypename\", \"mandatoryLabel\": \"IDS_ENTER\" }\r\n        ]\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.masterStatus }));\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const filterParam = {\r\n            inputListName: \"RegistrationSubType\",\r\n            selectedObject: \"selectedRegistrationSubType\",\r\n            primaryKeyField: \"nregtypecode\",\r\n            fetchUrl: \"registrationsubtype/getRegistrationSubTypeMaster\",\r\n            fecthInputObject: {\r\n                userinfo: this.props.Login.userInfo,\r\n                nregtypecode: this.state.breadCrumbData[1] ? this.state.breadCrumbData[1].item.value : -1\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            unchangeList: [\"realSampleType\", \"SampleTypes\", \"realRegtype\", \"RegistrationTypes\"],\r\n            searchFieldList: [\"sregsubtypename\", \"sdescription\"]\r\n        };\r\n        this.versionMandatoryFields = [\r\n            { \"idsName\": \"IDS_FORMAT\", \"dataField\": \"ssampleformat\", \"mandatoryLabel\": \"IDS_SELECT\" },\r\n        ]\r\n        const deleteParam = this.props.Login.masterData.selectedRegistrationSubType ? {\r\n            nregsubtypecode: this.props.Login.masterData.selectedRegistrationSubType.nregsubtypecode,\r\n            nregtypecode: this.props.Login.masterData.selectedRegistrationSubType.nregtypecode\r\n        } : {}\r\n        if (this.state.selectedRecord.nisnewformat) {\r\n\r\n            // this.versionMandatoryFields.push({ \"idsName\": \"IDS_RESETDURATION\", \"dataField\": \"nresetduration\", \"mandatoryLabel\": \"IDS_ENTER\" })\r\n            this.versionMandatoryFields.push({ \"idsName\": \"IDS_RESETDURATION\", \"dataField\": \"nperiodcode\", \"mandatoryLabel\": \"IDS_SELECT\" })\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {this.state.breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={this.state.breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                screenName={\"RegistrationSubType\"}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.RegistrationSubType || []}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                getMasterDetail={(regType) => this.props.selectRegistrationSubType(regType, this.props.Login.masterData, this.props.Login.userInfo)}\r\n                                selectedMaster={this.props.Login.masterData.selectedRegistrationSubType}\r\n                                primaryKeyField=\"nregsubtypecode\"\r\n                                mainField=\"sregsubtypename\"\r\n                                // firstField=\"stransdisplaystatus\"\r\n                                // secondField=\"stransdisplaystatus\"\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={this.state.addRegistrationSubTypeId}\r\n                                filterParam={filterParam}\r\n                                hidePaging={false}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.openModal(\"RegistrationSubType\")}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_SAMPLETYPEFILTER\":\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormSelectSearch\r\n                                                        name={\"nsampletypecode\"}\r\n                                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                                                        isSearchable={false}\r\n                                                        placeholder=\"Please Select...\"\r\n                                                        options={this.state.sampleTypeOptions}\r\n                                                        value={this.state.selectedSampleType ? this.state.selectedSampleType : \"\"}\r\n                                                        onChange={value => this.filterComboChange(value, 'nsampletypecode')}\r\n                                                    />\r\n                                                    <FormSelectSearch\r\n                                                        name={\"nregtypecode\"}\r\n                                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_REGTYPE\" })}\r\n                                                        isSearchable={false}\r\n                                                        placeholder=\"Please Select...\"\r\n                                                        options={this.state.regTypeOptions}\r\n                                                        value={this.state.selectedRegType || \"\"}\r\n                                                        onChange={value => this.filterComboChange(value, 'nregtypecode')}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md='8'>\r\n                            {this.props.Login.masterData.selectedRegistrationSubType ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                                {this.props.Login.masterData.selectedRegistrationSubType.sregsubtypename}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                    </h2>\r\n                                                    <div className=\"d-inline\">\r\n                                                        <Nav.Link name=\"editInstrument\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.editRegistrationSubTypeId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.props.getEditRegSubType(this.props.Login.masterData.selectedRegistrationSubType.nregsubtypecode,\r\n                                                                this.props.Login.userInfo, this.state.editRegistrationSubTypeId\r\n                                                            )}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"deleteInstrument\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.deleteRegistrationSubTypeId) === -1}\r\n                                                            onClick={() => this.ConfirmDelete(this.state.deleteRegistrationSubTypeId, 'RegistrationSubType', deleteParam)}>\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id={\"IDS_DESCRIPTION\"} message={\"Description\"} /></FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.selectedRegistrationSubType.sdescription ||'-'}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row noGutters={true} >\r\n                                                <Col md={12}>\r\n                                                    <div className=\"d-flex justify-content-end\">\r\n                                                        <Nav.Link className=\"add-txt-btn\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.addVersionId) === -1}\r\n                                                            onClick={() => this.props.getSeqNoFormats({ userInfo: this.props.Login.userInfo, ncontrolcode: this.state.addVersionId })}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                            <FormattedMessage id='IDS_VERSION' defaultMessage='Version' />\r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row noGutters={true}>\r\n                                                <Col md={12}>\r\n                                                    {this.props.Login.masterData.versions && this.props.Login.masterData.versions.length > 0 ?\r\n                                                        <CustomAccordion\r\n                                                            key=\"FormatVersion\"\r\n                                                            titlePrefix={this.props.intl.formatMessage({ id: \"IDS_VERSION\" }) + \" : \"}\r\n                                                            isJSONdata={true}\r\n                                                            jsonFieldName={'jsondata'}\r\n                                                            accordionTitle={'sversiondesc'}\r\n                                                            accordionComponent={this.registrationSubTypeAccordion(this.props.Login.masterData.versions)}\r\n                                                            inputParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                                                            accordionClick={this.props.getRegSubTypeDetails}\r\n                                                            accordionPrimaryKey={\"nregsubtypeversioncode\"}\r\n                                                            accordionObjectName={\"version\"}\r\n                                                            selectedKey={this.props.Login.masterData.selectedVersion.nregsubtypeversioncode}\r\n                                                        />\r\n                                                        : \"\"}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        size={\"lg\"}\r\n                        onSaveClick={this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={this.props.Login.screenName}\r\n                        closeModal={this.closeModal}\r\n                        show={this.props.Login.openModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        mandatoryFields={this.props.Login.screenName === 'RegistrationSubType' ? this.regSubTypeMandatoryFields : this.versionMandatoryFields}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={(event) => this.onInputOnChange(event)}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.props.Login.screenName === 'RegistrationSubType' ?\r\n                                <>\r\n                                    <FormInput\r\n                                        name={\"sregsubtypename\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                                        type=\"text\"\r\n                                        value={this.state.selectedRecord.sregsubtypename || \"\"}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                    />\r\n                                    <FormTextarea\r\n                                        name={\"sdescription\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                        type=\"text\"\r\n                                        value={this.state.selectedRecord.sdescription || \"\"}\r\n                                        isMandatory={false}\r\n                                        required={true}\r\n                                        maxLength={255}\r\n                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                    />\r\n                                </>\r\n                                :\r\n                                <AddSeqNoFormatPopup\r\n                                    selectedRecord={this.state.selectedRecord}\r\n                                    existingFormats={this.props.Login.existingFormats}\r\n                                    periodList={this.props.Login.periodList}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onNumericInputChange={this.onNumericInputChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    onDrop={this.onDrop.bind(this)}\r\n                                    onClickBackspace={this.onClickBackspace}\r\n                                    onClickClear={this.onClickClear}\r\n                                />\r\n                        } />\r\n                    : \"\"}\r\n            </>\r\n        )\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let updateState = false;\r\n        let { userRoleControlRights, controlMap, addVersionId, editVersionId, deleteVersionId, approveVersionId,\r\n            addRegistrationSubTypeId, editRegistrationSubTypeId, deleteRegistrationSubTypeId, breadCrumbSampleType, breadCrumbRegType,\r\n            sampleTypeOptions, regTypeOptions, breadCrumbData, selectedSampleType, selectedRegType,\r\n            selectedRecord, comboComponents, withoutCombocomponent\r\n        } = this.state;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            updateState = true;\r\n            addVersionId = controlMap.has(\"AddSeqNoFormatVersion\") && controlMap.get(\"AddSeqNoFormatVersion\").ncontrolcode;\r\n            editVersionId = controlMap.has(\"EditSeqNoFormatVersion\") && controlMap.get(\"EditSeqNoFormatVersion\").ncontrolcode;\r\n            deleteVersionId = controlMap.has(\"DeleteSeqNoFormatVersion\") && controlMap.get(\"DeleteSeqNoFormatVersion\").ncontrolcode;\r\n            approveVersionId = controlMap.has(\"ApproveSeqNoFormatVersion\") && controlMap.get(\"ApproveSeqNoFormatVersion\").ncontrolcode\r\n            addRegistrationSubTypeId = controlMap.has(\"AddRegistrationSubType\") && controlMap.get(\"AddRegistrationSubType\").ncontrolcode;\r\n            editRegistrationSubTypeId = controlMap.has(\"EditRegistrationSubType\") && controlMap.get(\"EditRegistrationSubType\").ncontrolcode;\r\n            deleteRegistrationSubTypeId = controlMap.has(\"DeleteRegistrationSubType\") && controlMap.get(\"DeleteRegistrationSubType\").ncontrolcode;\r\n            sampleTypeOptions = constructOptionList(this.props.Login.masterData.SampleTypes || [], 'nsampletypecode', 'ssampletypename', 'nsampletypecode', \"ascending\").get(\"OptionList\")\r\n            selectedSampleType = sampleTypeOptions.length > 0 ? sampleTypeOptions[0] : {};\r\n            regTypeOptions = constructOptionList(this.props.Login.masterData.RegistrationTypes || [], 'nregtypecode', 'sregtypename', 'nregtypecode', \"ascending\").get(\"OptionList\")\r\n            selectedRegType = regTypeOptions.length > 0 ? regTypeOptions[0] : {};\r\n            breadCrumbData = [];\r\n            breadCrumbSampleType = sampleTypeOptions[0] || {};\r\n            breadCrumbRegType = regTypeOptions[0] || {};\r\n            sampleTypeOptions.length > 0 && breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    \"value\": breadCrumbSampleType.label,\r\n                    \"item\": sampleTypeOptions\r\n                }\r\n            );\r\n            regTypeOptions.length > 0 && breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_REGTYPE\",\r\n                    \"value\": breadCrumbRegType.label,\r\n                    \"item\": breadCrumbRegType\r\n                }\r\n            );\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.realSampleType !== previousProps.Login.realSampleType) {\r\n            breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    \"value\": selectedSampleType.label,\r\n                    \"item\": selectedSampleType\r\n                },\r\n                {\r\n                    \"label\": \"IDS_REGTYPE\",\r\n                    \"value\": selectedRegType.label,\r\n                    \"item\": selectedRegType\r\n                }\r\n            ];\r\n            breadCrumbSampleType = this.props.Login.realSampleType;\r\n            breadCrumbRegType = this.props.Login.realRegtype;\r\n            updateState = true;\r\n        } if (this.props.Login.realRegtype !== previousProps.Login.realRegtype) {\r\n            breadCrumbSampleType = this.props.Login.realSampleType || breadCrumbSampleType;\r\n            breadCrumbRegType = this.props.Login.realRegtype;\r\n            breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    \"value\": breadCrumbSampleType.label,\r\n                    \"item\": breadCrumbSampleType\r\n                },\r\n                {\r\n                    \"label\": \"IDS_REGTYPE\",\r\n                    \"value\": breadCrumbRegType.label,\r\n                    \"item\": breadCrumbRegType\r\n                }\r\n            ];\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.selectedSampleType !== previousProps.Login.selectedSampleType) {\r\n            selectedSampleType = this.props.Login.selectedSampleType;\r\n            regTypeOptions = constructOptionList(this.props.Login.masterData.RegistrationTypes || [], 'nregtypecode', 'sregtypename', 'nregtypecode', \"ascending\").get(\"OptionList\")\r\n            selectedRegType = regTypeOptions[0];\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.reloadData && this.props.Login.reloadData !== previousProps.Login.reloadData) {\r\n            sampleTypeOptions = constructOptionList(this.props.Login.masterData.SampleTypes || [], 'nsampletypecode', 'ssampletypename', 'nsampletypecode', \"ascending\").get(\"OptionList\")\r\n            selectedSampleType = sampleTypeOptions.length > 0 ? sampleTypeOptions[0] : {};\r\n            regTypeOptions = constructOptionList(this.props.Login.masterData.RegistrationTypes || [], 'nregtypecode', 'sregtypename', 'nregtypecode', \"ascending\").get(\"OptionList\")\r\n            selectedRegType = regTypeOptions.length > 0 ? regTypeOptions[0] : {};\r\n            breadCrumbData = [];\r\n            breadCrumbSampleType = sampleTypeOptions[0] || {};\r\n            breadCrumbRegType = regTypeOptions[0] || {};\r\n            sampleTypeOptions.length > 0 && breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    \"value\": breadCrumbSampleType.label,\r\n                    \"item\": sampleTypeOptions\r\n                }\r\n            );\r\n            regTypeOptions.length > 0 && breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_REGTYPE\",\r\n                    \"value\": breadCrumbRegType.label,\r\n                    \"item\": breadCrumbRegType\r\n                }\r\n            );\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.selectedRegType !== previousProps.Login.selectedRegType) {\r\n            selectedRegType = this.props.Login.selectedRegType;\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            updateState = true;\r\n            selectedRecord = this.props.Login.selectedRecord\r\n        }\r\n        if (updateState) {\r\n            this.setState({\r\n                userRoleControlRights, controlMap, addVersionId, editVersionId, deleteVersionId, approveVersionId,\r\n                addRegistrationSubTypeId, editRegistrationSubTypeId, deleteRegistrationSubTypeId,\r\n                sampleTypeOptions, regTypeOptions, breadCrumbData, selectedSampleType, selectedRegType,\r\n                selectedRecord, comboComponents, withoutCombocomponent, breadCrumbSampleType, breadCrumbRegType\r\n            });\r\n        }\r\n    }\r\n    registrationSubTypeAccordion = (verisonList) => {\r\n        const actionParam = {\r\n            // nregsubtypecode: this.props.Login.masterData.selectedRegistrationSubType.nregsubtypecode,\r\n            // nregtypecode: this.props.Login.masterData.selectedRegistrationSubType.nregtypecode,\r\n            nregsubtypeversioncode: this.props.Login.masterData.selectedVersion ? this.props.Login.masterData.selectedVersion.nregsubtypeversioncode : -1,\r\n            napprovalconfigcode: this.props.Login.masterData.selectedVersion ? this.props.Login.masterData.selectedVersion.napprovalconfigcode : -1\r\n        }\r\n        const accordionMap = new Map();\r\n        verisonList.map(version =>\r\n            accordionMap.set(version.nregsubtypeversioncode, <RegistrationSubTypeAccordion\r\n                version={version}\r\n                editVersionId={this.state.editVersionId}\r\n                deleteVersionId={this.state.deleteVersionId}\r\n                approveVersionId={this.state.approveVersionId}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                actionParam={actionParam}\r\n                getVersionById={this.getVersionById}\r\n                approvrVersion={this.doAction}\r\n                ConfirmDelete={this.ConfirmDelete}\r\n\r\n            // approvalConfig={this.props.Login.masterData.ApprovalConfig}\r\n            />)\r\n        )\r\n        return accordionMap;\r\n    }\r\n    filterComboChange = (comboData, name) => {\r\n        if (name === 'nsampletypecode')\r\n            this.props.getRegistrationTypeBySampleType(comboData, this.props.Login.masterData, this.props.Login.userInfo, this.state.breadCrumbRegType)\r\n        else {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    showFilter: false,\r\n                    selectedRegType: comboData,\r\n                    reloadData: false\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        // this.setState({ selectedRegType: comboData })\r\n    }\r\n    closeFilter = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onFilterSubmit = () => {\r\n        if (this.state.selectedSampleType) {\r\n            this.reloadData(this.state.selectedSampleType, this.state.selectedRegType);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENOTAVALIABLE\" }));\r\n        }\r\n    }\r\n    reloadData = (selectedSampleType, selectedRegType) => {\r\n        this.searchRef.current.value = \"\";\r\n        if (selectedSampleType !== undefined) {\r\n            this.props.getRegistrationSubTypeMaster(selectedSampleType, selectedRegType, this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            this.props.getRegistrationSubTypeOnReload(this.props.Login.userInfo);\r\n        }\r\n\r\n    }\r\n    ConfirmDelete = (deleteId, methodURL, selectedRecord) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.doAction('delete', deleteId, methodURL, selectedRecord));\r\n    }\r\n    openModal = (screenName) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal: true, operation: \"create\", screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null, selectedFieldRecord: {}, showConfirmAlert: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.Login.screenName === 'RegistrationSubType') {\r\n            this.saveRegSubType(saveType, formRef)\r\n        } else {\r\n            this.saveVersion(saveType, formRef)\r\n        }\r\n    }\r\n    saveRegSubType = (saveType, formRef) => {\r\n        //add \r\n        let registrationSubType = {\r\n            nregtypecode: this.state.breadCrumbData[1].item.value,\r\n            sregsubtypename: this.state.selectedRecord.sregsubtypename,\r\n            sdescription: this.state.selectedRecord.sdescription\r\n        }\r\n        const postParam = {\r\n            inputListName: \"RegistrationSubType\",\r\n            selectedObject: \"selectedRegistrationSubType\",\r\n            primaryKeyField: \"nregsubtypecode\",\r\n            fetchUrl: \"registrationsubtype/getRegistrationSubTypeMaster\",\r\n            fecthInputObject: {\r\n                userinfo: this.props.Login.userInfo,\r\n                nregtypecode: this.state.breadCrumbData[1] ? this.state.breadCrumbData[1].item.value : -1\r\n            },\r\n            masterData: this.props.Login.masterData\r\n        }\r\n        let selectedId = null;\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            selectedId = this.state.selectedRecord.nregsubtypecode\r\n            registrationSubType = {\r\n                ...registrationSubType,\r\n                nregsubtypecode: selectedId\r\n            }\r\n        }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: 'RegistrationSubType',\r\n            postParam,\r\n            searchRef: this.searchRef,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                userinfo: this.props.Login.userInfo,\r\n                registrationsubtype: registrationSubType\r\n            },\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType,\r\n                    operation: this.props.Login.operation, openModal: true,\r\n                    screenName: this.props.Login.inputParam.displayName\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    saveVersion = (saveType, formRef) => {\r\n        let version = {\r\n            napprovalconfigcode: this.props.Login.masterData.selectedRegistrationSubType.napprovalconfigcode,\r\n            jsondata: {\r\n                ...this.state.selectedRecord,\r\n                nresetduration:1,\r\n                // nneedscheduler:false,\r\n                sversiondesc: '-',\r\n                nversionno: -1\r\n            },\r\n            nperiodcode: this.state.selectedRecord.nperiodcode ? this.state.selectedRecord.nperiodcode.value : 4,\r\n            ntransactionstatus: transactionStatus.DRAFT,\r\n            nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n            nstatus: transactionStatus.ACTIVE\r\n        }\r\n        let selectedId = null;\r\n        let operation = 'create';\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            operation = 'update'\r\n            selectedId = this.state.selectedRecord.nregsubtypeversioncode\r\n            version = {\r\n                ...version,\r\n                nregsubtypeversioncode: selectedId\r\n            }\r\n        }\r\n        const postParam = {\r\n            inputListName: \"RegistrationSubType\",\r\n            selectedObject: \"selectedRegistrationSubType\",\r\n            primaryKeyField: \"nregsubtypecode\",\r\n            fetchUrl: \"registrationsubtype/getRegistrationSubTypeMaster\",\r\n            fecthInputObject: {\r\n                userinfo: this.props.Login.userInfo,\r\n                nregtypecode: this.state.breadCrumbData[1] ? this.state.breadCrumbData[1].item.value : -1\r\n            },\r\n            masterData: this.props.Login.masterData\r\n        }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: 'Version',\r\n            postParam,\r\n            searchRef: this.searchRef,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                userinfo: this.props.Login.userInfo,\r\n                version: version\r\n            },\r\n            operation,\r\n            saveType, formRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    saveType,\r\n                    operation,\r\n                    openModal: true,\r\n                    screenName: this.props.Login.inputParam.displayName\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    getVersionById = (ncontrolcode) => {\r\n        this.props.getVersionById(this.props.Login.masterData.selectedVersion.nregsubtypeversioncode, this.props.Login.userInfo, ncontrolcode)\r\n    }\r\n    doAction = (operation, controlCode, methodURL, selectedRecord) => {\r\n        const postParam = {\r\n            inputListName: \"RegistrationSubType\",\r\n            selectedObject: \"selectedRegistrationSubType\",\r\n            primaryKeyField: \"nregsubtypecode\",\r\n            fetchUrl: \"registrationsubtype/getRegistrationSubTypeMaster\",\r\n            fecthInputObject: {\r\n                userinfo: this.props.Login.userInfo,\r\n                nregtypecode: this.state.breadCrumbData[1] ? this.state.breadCrumbData[1].item.value : -1\r\n            },\r\n            masterData: this.props.Login.masterData\r\n        }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: methodURL,\r\n            postParam,\r\n            searchRef: this.searchRef,\r\n            inputData: {\r\n                [methodURL.toLowerCase()]: selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation,\r\n            displayName: this.props.Login.inputParam.displayName\r\n        }\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        if (value === 0 || value === 0.0) {\r\n            selectedRecord[name] = \"\";\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n            if (name === 'seqnolength') {\r\n                let str = '{9999}'\r\n                str = str.substring(1, str.length - 2)\r\n                str = str.padStart(value, 9)\r\n                selectedRecord.sseqno = '{' + str + '}'\r\n            }\r\n            selectedRecord[name] = value;\r\n            this.setState({ selectedRecord });\r\n\r\n        }\r\n    }\r\n    onComboChange = (comboData, name) => {\r\n        this.setState({ selectedRecord: { ...this.state.selectedRecord, [name]: comboData } })\r\n    }\r\n    onDrop(data) {\r\n        // if (data.formatcomponents === \"\") {\r\n            \r\n        // } else {\r\n            const selectedRecord = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n            let formatArray = selectedRecord.formatArray || []\r\n            formatArray.push(data.formatcomponents)\r\n            let formatString = '';\r\n            formatArray.map(comp => formatString += comp)\r\n            selectedRecord.formatArray = formatArray\r\n            selectedRecord.ssampleformat = formatString;\r\n            selectedRecord.exampleformat = this.replaceFormat(formatString)\r\n            if (selectedRecord.ssampleformat.length < 30) {\r\n                this.setState({ selectedRecord });\r\n            } else {            \r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_EXCEEDSMAXCHARS\" }));\r\n            }\r\n        // }\r\n        \r\n;    }\r\n    onClickBackspace = () => {\r\n        let { selectedRecord } = this.state;\r\n        let formatArray = selectedRecord.formatArray || []\r\n        formatArray.pop()\r\n        let formatString = '';\r\n        formatArray.map(comp => formatString += comp)\r\n        selectedRecord.formatArray = formatArray\r\n        selectedRecord.ssampleformat = formatString;\r\n        selectedRecord.exampleformat = this.replaceFormat(formatString)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onClickClear = () => {\r\n        let { selectedRecord } = this.state;\r\n        selectedRecord.formatArray = [];\r\n        selectedRecord.ssampleformat = \"\";\r\n        selectedRecord.exampleformat = \"\"\r\n        this.setState({ selectedRecord });\r\n    }\r\n    replaceFormat = (formatString) => {\r\n        const month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const date = new Date();\r\n        let replacedString = formatString;\r\n        let seqno = \"1\"\r\n\r\n        while (replacedString.includes('}')) {\r\n            let comp = replacedString.substring(replacedString.indexOf('{'), replacedString.indexOf('}') + 1)\r\n            switch (comp) {\r\n                case '{yyyy}':\r\n                    replacedString = replacedString.replace('{yyyy}', date.getFullYear())\r\n                    break;\r\n                case '{yy}':\r\n                    replacedString = replacedString.replace('{yy}', date.getFullYear().toString().substring(2, 4))\r\n                    break;\r\n                case '{MM}':\r\n                    replacedString = replacedString.replace('{MM}', (date.getMonth() + 1).toString().padStart(2,\"0\"))\r\n                    break;\r\n                case '{MMM}':\r\n                    replacedString = replacedString.replace('{MMM}', month[date.getMonth()])\r\n                    break;\r\n                case '{DD}':\r\n                    replacedString = replacedString.replace('{DD}', date.getDate().toString().padStart(2,\"0\"))\r\n                    break;\r\n                case this.state.selectedRecord.sseqno || '{9999}':\r\n                    seqno = seqno.padStart(this.state.selectedRecord.seqnolength || 4, \"0\")\r\n                    replacedString = replacedString.replace(this.state.selectedRecord.sseqno || '{9999}', seqno)\r\n                    break;\r\n                default:\r\n                    if (comp.includes('9')) {\r\n                        seqno = seqno.padStart(comp.length - 2, \"0\")\r\n                        replacedString = replacedString.replace(comp, seqno)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        return replacedString;\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    updateStore, crudMaster, getRegistrationSubTypeMaster,\r\n    filterColumnData, getRegSubTypeDetails, getSeqNoFormats, selectRegistrationSubType, getEditRegSubType,\r\n    getVersionById, getRegistrationTypeBySampleType, getRegistrationSubTypeOnReload\r\n})(injectIntl(RegistrationSubType))"]},"metadata":{},"sourceType":"module"}