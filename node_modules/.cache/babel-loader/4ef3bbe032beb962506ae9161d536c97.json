{"ast":null,"code":"import rsapi from '../rsapi';\nimport Axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { initRequest } from './LoginAction';\nimport { sortData, constructOptionList, rearrangeDateFormat } from '../components/CommonScript';\nimport { transactionStatus, attachmentType } from '../components/Enumeration';\nimport { intl } from \"../components/App\";\nexport const changeProjectTypeFilter = (inputParam, filterProjectType) => {\n  return dispatch => {\n    dispatch(initRequest(true));\n    rsapi.post(\"/projectmaster/get\" + inputParam.methodUrl, inputParam.inputData).then(response => {\n      const masterData = response.data;\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          dataState: undefined,\n          masterData: { ...masterData,\n            filterProjectType,\n            nfilterProjectType: inputParam.inputData.nfilterProjectType\n          }\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(error.message);\n    });\n  };\n};\nexport function getuserComboServices(methodParam, selectedRecord) {\n  return function (dispatch) {\n    let URL = [];\n    URL = rsapi.post(\"/projectmaster/getUsers\", {\n      \"userinfo\": methodParam.inputData.userinfo,\n      \"nuserrolecode\": methodParam.inputData.primarykey\n    });\n    dispatch(initRequest(true));\n    Axios.all([URL]).then(response => {\n      let userList;\n      const districtMap = constructOptionList(response[0].data || [], \"nusercode\", \"susername\", undefined, undefined, false);\n      userList = districtMap.get(\"OptionList\");\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          userList,\n          selectedRecord,\n          loading: false,\n          data: undefined,\n          dataState: undefined\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n} //Add Project Master\n\nexport const addProjectMaster = (operation, nfilterProjectMaster, userInfo, ncontrolCode, selectedRecordvalue, SelectedProjectType) => {\n  return function (dispatch) {\n    // if (nfilterProjectMaster && Object.values(nfilterProjectMaster).length > 0) {\n    if (selectedRecordvalue.nprojecttypecodevalue !== undefined) {\n      if (Object.values(selectedRecordvalue.nprojecttypecodevalue).length > 0 && selectedRecordvalue.nprojecttypecodevalue !== undefined && operation === 'create' || nfilterProjectMaster && nfilterProjectMaster.nprojecttypecode > 0 && operation === 'update' && nfilterProjectMaster.ntransactionstatus === transactionStatus.DRAFT) {\n        dispatch(initRequest(true));\n        const urlArray = [];\n        let selectedRecord = {}; // selectedRecord = selectedRecordvalue ;\n\n        if (operation === \"create\" || operation === \"update\") {\n          urlArray.push(rsapi.post(\"projecttype/getProjectType\", {\n            \"userinfo\": userInfo\n          }));\n          /*       urlArray.push(rsapi.post(\"projectmaster/getStudyDirector\", {\r\n                     \"userinfo\": userInfo\r\n                 })); */\n\n          urlArray.push(rsapi.post(\"projectmaster/getUserrole\", {\n            \"userinfo\": userInfo\n          }));\n          urlArray.push(rsapi.post(\"projectmaster/getUsers\", {\n            \"userinfo\": userInfo //,\n            // \"nuserrolecode\" : nfilterProjectMaster.nuserrolecode\n\n          }));\n          urlArray.push(rsapi.post(\"projectmaster/getTeammembers\", {\n            \"userinfo\": userInfo\n          }));\n          urlArray.push(rsapi.post(\"projectmaster/getPeriodByControl\", {\n            \"userinfo\": userInfo,\n            \"ncontrolcode\": ncontrolCode\n          }));\n        }\n\n        if (operation === \"update\") {\n          urlArray.push(rsapi.post(\"projectmaster/getActiveProjectMasterById\", {\n            \"userinfo\": userInfo,\n            \"nprojectmastercode\": nfilterProjectMaster.nprojectmastercode\n          }));\n        }\n\n        Axios.all(urlArray).then(response => {\n          let testData = {};\n          let {\n            ProjectType,\n            Userrole,\n            Users,\n            TeamMembers,\n            PeriodByControl\n          } = [];\n\n          if (operation === \"create\") {\n            ProjectType = constructOptionList(response[0].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\n            Userrole = constructOptionList(response[1].data || [], \"nuserrolecode\", \"suserrolename\", false, false, true).get(\"OptionList\");\n            Users = constructOptionList(response[2].data || [], \"nusercode\", \"susername\", false, false, true).get(\"OptionList\");\n            TeamMembers = constructOptionList(response[3].data || [], \"nusercode\", \"steammembername\", false, false, true).get(\"OptionList\");\n            PeriodByControl = constructOptionList(response[4].data || [], \"nperiodcode\", \"speriodname\", false, false, true).get(\"OptionList\");\n            selectedRecord = {\n              \"nprojecttypecode\": {\n                \"value\": SelectedProjectType.nprojecttypecode,\n                \"label\": SelectedProjectType.sprojecttypename\n              }\n            };\n          } else if (operation === \"update\") {\n            const editData = response[5].data.SelectedProjectMaster;\n            selectedRecord[\"sprojectcode\"] = editData.sprojectcode;\n            selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\n            selectedRecord[\"sprojectdescription\"] = editData.sprojectdescription;\n            selectedRecord[\"nprojectduration\"] = editData.nprojectduration;\n            selectedRecord = { ...selectedRecord\n            };\n            ProjectType = constructOptionList(response[0].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\n            Userrole = constructOptionList(response[1].data || [], \"nuserrolecode\", \"suserrolename\", false, false, true).get(\"OptionList\");\n            Users = constructOptionList(response[2].data || [], \"nusercode\", \"susername\", false, false, true).get(\"OptionList\");\n            TeamMembers = constructOptionList(response[3].data || [], \"nusercode\", \"steammembername\", false, false, true).get(\"OptionList\");\n            PeriodByControl = constructOptionList(response[4].data || [], \"nperiodcode\", \"speriodname\", false, false, true).get(\"OptionList\");\n            selectedRecord[\"nprojecttypecode\"] = {\n              \"value\": editData[\"nprojecttypecode\"],\n              \"label\": editData[\"sprojecttypename\"]\n            };\n            selectedRecord[\"nuserrolecode\"] = {\n              \"value\": editData[\"nuserrolecode\"],\n              \"label\": editData[\"suserrolename\"]\n            };\n            selectedRecord[\"nusercode\"] = {\n              \"value\": editData[\"nusercode\"],\n              \"label\": editData[\"susername\"]\n            };\n            selectedRecord[\"nteammembercode\"] = {\n              \"value\": editData[\"nteammembercode\"],\n              \"label\": editData[\"steammembername\"]\n            };\n            selectedRecord[\"nperiodcode\"] = {\n              \"value\": editData[\"nperiodcode\"],\n              \"label\": editData[\"speriodname\"]\n            }; // selectedRecord[\"nstudydirectorcode\"] = response[1].data;\n            // selectedRecord[\"nteammembercode\"] = response[2].data;\n            //  selectedRecord[\"nperiodcode\"] = response[3].data;\n            // selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\n            // selectedRecord[\"sprojectcode\"] = editData.sprojectcode;\n\n            selectedRecord[\"drfwdate\"] = rearrangeDateFormat(userInfo, editData.srfwdate);\n            selectedRecord[\"dprojectstartdate\"] = rearrangeDateFormat(userInfo, editData.sprojectstartdate);\n          }\n\n          dispatch({\n            type: DEFAULT_RETURN,\n            payload: {\n              openModal: true,\n              ProjectType,\n              Userrole,\n              Users,\n              TeamMembers,\n              PeriodByControl,\n              operation: operation,\n              screenName: \"IDS_PROJECTMASTER\",\n              selectedRecord,\n              ncontrolCode,\n              testData,\n              loading: false\n            }\n          });\n        }).catch(error => {\n          dispatch({\n            type: DEFAULT_RETURN,\n            payload: {\n              loading: false\n            }\n          });\n\n          if (error.response.status === 500) {\n            toast.error(error.message);\n          } else {\n            toast.warn(error.response.data);\n          }\n        });\n      }\n    } else {\n      //  if(nfilterProjectMaster.ntransactionstatus !== transactionStatus.DRAFT){ nfilterProjectMaster\n      if (nfilterProjectMaster !== null && operation === \"update\") {\n        toast.warn(intl.formatMessage({\n          id: \"IDS_SELECTDRAFTVERSION\"\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: \"IDS_PROJECTTYPENOTAVAILABLE\"\n        }));\n      }\n    }\n  };\n};\nexport const addProjectMasterFile = inputParam => {\n  return dispatch => {\n    if (inputParam.ntransactionstatus === transactionStatus.DRAFT) {\n      dispatch(initRequest(true));\n      let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\n        userinfo: inputParam.userInfo\n      })];\n\n      if (inputParam.operation === \"update\") {\n        urlArray.push(rsapi.post(\"/projectmaster/editProjectMasterFile\", {\n          userinfo: inputParam.userInfo,\n          projectmasterfile: inputParam.selectedRecord\n        }));\n      }\n\n      Axios.all(urlArray).then(response => {\n        const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\n        const linkmaster = linkMap.get(\"OptionList\");\n        let selectedRecord = {};\n        const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\n        let disabled = false;\n        let editObject = {};\n\n        if (inputParam.operation === \"update\") {\n          editObject = response[1].data;\n          let nlinkcode = {};\n          let link = {};\n\n          if (editObject.nattachmenttypecode === attachmentType.LINK) {\n            nlinkcode = {\n              \"label\": editObject.slinkname,\n              \"value\": editObject.nlinkcode\n            };\n            link = {\n              slinkfilename: editObject.sfilename,\n              slinkdescription: editObject.sdescription,\n              nlinkdefaultstatus: editObject.ndefaultstatus,\n              sfilesize: '',\n              nfilesize: 0,\n              ndefaultstatus: 4,\n              sfilename: ''\n            };\n          } else {\n            nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\"; //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\n\n            link = {\n              slinkfilename: '',\n              slinkdescription: '',\n              nlinkdefaultstatus: 4,\n              sfilesize: editObject.sfilesize,\n              nfilesize: editObject.nfilesize,\n              ndefaultstatus: editObject.ndefaultstatus,\n              sfilename: editObject.sfilename\n            };\n          }\n\n          selectedRecord = { ...link,\n            nprojectmasterfilecode: editObject.nprojectmasterfilecode,\n            nattachmenttypecode: editObject.nattachmenttypecode,\n            ...editObject,\n            nlinkcode // disabled: true\n\n          };\n        } else {\n          selectedRecord = {\n            nattachmenttypecode: response[0].data.AttachmentType.length > 0 ? response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\n            nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\",\n            //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\n            disabled\n          };\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            [inputParam.modalName]: true,\n            operation: inputParam.operation,\n            screenName: inputParam.screenName,\n            ncontrolCode: inputParam.ncontrolCode,\n            selectedRecord,\n            loading: false,\n            linkMaster: linkmaster,\n            showSaveContinue: false,\n            editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    } else {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_SELECTDRAFTVERSION\"\n      }));\n    }\n  };\n}; //ProjectMaster Click\n\nexport const getProjectMaster = (projectmasterItem, userInfo, masterData) => {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/projectmaster/getActiveProjectMasterById\", {\n      nprojectmastercode: projectmasterItem.nprojectmastercode,\n      userinfo: userInfo\n    }).then(response => {\n      let masterData1 = { ...masterData,\n        ...response.data\n      }; // ...masterData,\n      // ...response.data\n\n      masterData = masterData1;\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          // masterData,\n          loading: false,\n          dataState: undefined,\n          masterData\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(error.message);\n    });\n  };\n};\nexport function getProjectmasterAddMemberService(screenName, operation, masterData, userInfo, ncontrolCode) {\n  return function (dispatch) {\n    if (masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.DRAFT) {\n      dispatch(initRequest(true));\n      rsapi.post(\"projectmaster/getProjectUnmappedTeammember\", {\n        \"nprojectmastercode\": masterData.SelectedProjectMaster[\"nprojectmastercode\"],\n        userinfo: userInfo\n      }).then(response => {\n        let masterData1 = { ...masterData,\n          ...response.data\n        };\n        masterData = masterData1;\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            MembersList: response.data,\n            masterData,\n            openChildModal: true,\n            operation,\n            screenName,\n            ncontrolCode,\n            //selectedRecord, \n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    } else {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_SELECTDRAFTVERSION\"\n      }));\n    }\n  };\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/ProjectMasterAction.js"],"names":["rsapi","Axios","toast","DEFAULT_RETURN","initRequest","sortData","constructOptionList","rearrangeDateFormat","transactionStatus","attachmentType","intl","changeProjectTypeFilter","inputParam","filterProjectType","dispatch","post","methodUrl","inputData","then","response","masterData","data","type","payload","loading","dataState","undefined","nfilterProjectType","catch","error","message","getuserComboServices","methodParam","selectedRecord","URL","userinfo","primarykey","all","userList","districtMap","get","status","warn","addProjectMaster","operation","nfilterProjectMaster","userInfo","ncontrolCode","selectedRecordvalue","SelectedProjectType","nprojecttypecodevalue","Object","values","length","nprojecttypecode","ntransactionstatus","DRAFT","urlArray","push","nprojectmastercode","testData","ProjectType","Userrole","Users","TeamMembers","PeriodByControl","sprojecttypename","editData","SelectedProjectMaster","sprojectcode","sprojecttitle","sprojectdescription","nprojectduration","srfwdate","sprojectstartdate","openModal","screenName","formatMessage","id","addProjectMasterFile","projectmasterfile","linkMap","LinkMaster","linkmaster","defaultLink","filter","items","item","ndefaultlink","YES","disabled","editObject","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","sdescription","nlinkdefaultstatus","ndefaultstatus","sfilesize","nfilesize","nprojectmasterfilecode","AttachmentType","FTP","modalName","linkMaster","showSaveContinue","editFiles","getProjectMaster","projectmasterItem","masterData1","getProjectmasterAddMemberService","MembersList","openChildModal"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\nimport { DEFAULT_RETURN} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData ,constructOptionList,rearrangeDateFormat } from '../components/CommonScript';\r\nimport { transactionStatus,attachmentType } from '../components/Enumeration';\r\nimport { intl } from \"../components/App\"; \r\n\r\nexport const changeProjectTypeFilter = (inputParam, filterProjectType) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/projectmaster/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                sortData(masterData);\r\n                    \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        dataState: undefined,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            filterProjectType,\r\n                            nfilterProjectType: inputParam.inputData.nfilterProjectType\r\n                            \r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getuserComboServices(methodParam,selectedRecord) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let URL = [];\r\n\r\n            URL=rsapi.post(\"/projectmaster/getUsers\", { \"userinfo\": methodParam.inputData.userinfo, \"nuserrolecode\":  methodParam.inputData.primarykey  })\r\n\r\n         dispatch(initRequest(true));\r\n\r\n        Axios.all([URL])\r\n\r\n            .then(response => {\r\n\r\n                let userList;\r\n\r\n                const districtMap = constructOptionList(response[0].data || [], \"nusercode\",\r\n\r\n                \"susername\", undefined, undefined, false);              \r\n\r\n                userList = districtMap.get(\"OptionList\");\r\n\r\n                 \r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n\r\n                     { userList,selectedRecord, loading: false, data: undefined, dataState: undefined } })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\n//Add Project Master\r\nexport const addProjectMaster = (operation, nfilterProjectMaster, userInfo, ncontrolCode,selectedRecordvalue,SelectedProjectType ) => {\r\n    return function (dispatch) {\r\n        // if (nfilterProjectMaster && Object.values(nfilterProjectMaster).length > 0) {\r\n        if (selectedRecordvalue.nprojecttypecodevalue !== undefined) {\r\n         if ((Object.values(selectedRecordvalue.nprojecttypecodevalue).length > 0 && selectedRecordvalue.nprojecttypecodevalue !== undefined && operation === 'create') || (nfilterProjectMaster && nfilterProjectMaster.nprojecttypecode>0 && operation === 'update' && nfilterProjectMaster.ntransactionstatus === transactionStatus.DRAFT )) {\r\n            dispatch(initRequest(true));\r\n            const urlArray = [\r\n            ];\r\n            let selectedRecord = {};\r\n            // selectedRecord = selectedRecordvalue ;\r\n             if (operation === \"create\" || operation === \"update\") {\r\n\r\n                urlArray.push(rsapi.post(\"projecttype/getProjectType\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n\r\n         /*       urlArray.push(rsapi.post(\"projectmaster/getStudyDirector\", {\r\n                    \"userinfo\": userInfo\r\n                })); */\r\n\r\n                urlArray.push(rsapi.post(\"projectmaster/getUserrole\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n\r\n                urlArray.push(rsapi.post(\"projectmaster/getUsers\", {\r\n                    \"userinfo\": userInfo //,\r\n                    // \"nuserrolecode\" : nfilterProjectMaster.nuserrolecode\r\n                })); \r\n\r\n                urlArray.push(rsapi.post(\"projectmaster/getTeammembers\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n\r\n                urlArray.push(rsapi.post(\"projectmaster/getPeriodByControl\", {\r\n                    \"userinfo\": userInfo,\r\n                    \"ncontrolcode\":ncontrolCode\r\n                }));\r\n               \r\n            } \r\n             if (operation === \"update\"){\r\n\r\n                urlArray.push(rsapi.post(\"projectmaster/getActiveProjectMasterById\", {\r\n                    \"userinfo\": userInfo,\r\n                    \"nprojectmastercode\": nfilterProjectMaster.nprojectmastercode\r\n                }));\r\n\r\n            }\r\n\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n               \r\n                let testData = {};\r\n\r\n                let {ProjectType,Userrole,Users,TeamMembers,PeriodByControl}=[]\r\n                \r\n\r\n              if (operation === \"create\") {\r\n                   \r\n                     ProjectType = constructOptionList(response[0].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\r\n                   \r\n\r\n                     Userrole = constructOptionList(response[1].data || [], \"nuserrolecode\", \"suserrolename\", false, false, true).get(\"OptionList\");\r\n                   \r\n\r\n                     Users = constructOptionList(response[2].data || [], \"nusercode\", \"susername\", false, false, true).get(\"OptionList\");\r\n\r\n\r\n                     TeamMembers = constructOptionList(response[3].data || [], \"nusercode\", \"steammembername\", false, false, true).get(\"OptionList\");\r\n                  \r\n\r\n                     PeriodByControl = constructOptionList(response[4].data || [], \"nperiodcode\", \"speriodname\", false, false, true).get(\"OptionList\");\r\n\r\n                      selectedRecord = {\"nprojecttypecode\": {\r\n                        \"value\": SelectedProjectType.nprojecttypecode,\r\n                         \"label\": SelectedProjectType.sprojecttypename\r\n                     }};\r\n\r\n                }else if (operation === \"update\") {\r\n                    \r\n                    const editData = response[5].data.SelectedProjectMaster;\r\n                  \r\n                    selectedRecord[\"sprojectcode\"] = editData.sprojectcode;\r\n                    selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\r\n                    selectedRecord[\"sprojectdescription\"] = editData.sprojectdescription;\r\n                    selectedRecord[\"nprojectduration\"] = editData.nprojectduration;\r\n                   \r\n\r\n                    selectedRecord = {...selectedRecord}\r\n\r\n                    ProjectType = constructOptionList(response[0].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\r\n                    Userrole = constructOptionList(response[1].data || [], \"nuserrolecode\", \"suserrolename\", false, false, true).get(\"OptionList\");\r\n                    Users = constructOptionList(response[2].data || [], \"nusercode\", \"susername\", false, false, true).get(\"OptionList\");\r\n                    TeamMembers = constructOptionList(response[3].data || [], \"nusercode\", \"steammembername\", false, false, true).get(\"OptionList\");\r\n                    PeriodByControl = constructOptionList(response[4].data || [], \"nperiodcode\", \"speriodname\", false, false, true).get(\"OptionList\");\r\n\r\n\r\n                    selectedRecord[\"nprojecttypecode\"] = {\r\n                        \"value\": editData[\"nprojecttypecode\"],\r\n                        \"label\":  editData[\"sprojecttypename\"]\r\n                    };\r\n\r\n                    selectedRecord[\"nuserrolecode\"] = {\r\n                        \"value\": editData[\"nuserrolecode\"],\r\n                        \"label\": editData[\"suserrolename\"]\r\n                    };\r\n\r\n                    selectedRecord[\"nusercode\"] = {\r\n                        \"value\": editData[\"nusercode\"],\r\n                        \"label\": editData[\"susername\"]\r\n                    };\r\n                    \r\n                  \r\n                    selectedRecord[\"nteammembercode\"] = {\r\n                        \"value\": editData[\"nteammembercode\"],\r\n                        \"label\": editData[\"steammembername\"]\r\n                    };\r\n                    \r\n                    selectedRecord[\"nperiodcode\"] = {\r\n                        \"value\": editData[\"nperiodcode\"],\r\n                        \"label\": editData[\"speriodname\"]\r\n                    };\r\n\r\n               // selectedRecord[\"nstudydirectorcode\"] = response[1].data;\r\n               // selectedRecord[\"nteammembercode\"] = response[2].data;\r\n              //  selectedRecord[\"nperiodcode\"] = response[3].data;\r\n               // selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\r\n               // selectedRecord[\"sprojectcode\"] = editData.sprojectcode;\r\n\r\n                selectedRecord[\"drfwdate\"] = rearrangeDateFormat(userInfo,editData.srfwdate);\r\n                selectedRecord[\"dprojectstartdate\"] = rearrangeDateFormat(userInfo,editData.sprojectstartdate);\r\n               \r\n                }\r\n                   \r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n  \r\n                            openModal: true,\r\n                            ProjectType,Userrole,Users,TeamMembers,PeriodByControl,\r\n                            operation: operation,\r\n                            screenName: \"IDS_PROJECTMASTER\",\r\n                            selectedRecord,\r\n                            ncontrolCode,\r\n                            testData,\r\n                           \r\n                           \r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n            }\r\n         } else {\r\n            //  if(nfilterProjectMaster.ntransactionstatus !== transactionStatus.DRAFT){ nfilterProjectMaster\r\n                if(nfilterProjectMaster !== null && operation === \"update\" ){ \r\n                    \r\n                toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n\r\n             }else{\r\n                toast.warn(intl.formatMessage({ id: \"IDS_PROJECTTYPENOTAVAILABLE\"}))\r\n             }\r\n              \r\n         }\r\n    }\r\n}\r\n\r\nexport const addProjectMasterFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        if (inputParam.ntransactionstatus === transactionStatus.DRAFT){ \r\n        dispatch(initRequest(true));\r\n        let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n            userinfo: inputParam.userInfo\r\n        })];\r\n        if (inputParam.operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"/projectmaster/editProjectMasterFile\", {\r\n                userinfo: inputParam.userInfo,\r\n                projectmasterfile: inputParam.selectedRecord\r\n            }))\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                const linkmaster = linkMap.get(\"OptionList\");\r\n                let selectedRecord = {};\r\n                const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                let disabled = false;\r\n                let editObject = {};\r\n                if (inputParam.operation === \"update\") {\r\n                    editObject = response[1].data;\r\n                    let nlinkcode = {};\r\n                    let link = {};\r\n                    if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                        nlinkcode = {\r\n                            \"label\": editObject.slinkname,\r\n                            \"value\": editObject.nlinkcode\r\n                        }\r\n\r\n                        link = {\r\n                            slinkfilename: editObject.sfilename,\r\n                            slinkdescription: editObject.sdescription,\r\n                            nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                            sfilesize: '',\r\n                            nfilesize: 0,\r\n                            ndefaultstatus: 4,\r\n                            sfilename: '',\r\n                        }\r\n\r\n                    } else {\r\n                        nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\" //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\r\n                        link = {\r\n                            slinkfilename: '',\r\n                            slinkdescription: '',\r\n                            nlinkdefaultstatus: 4,\r\n                            sfilesize: editObject.sfilesize,\r\n                            nfilesize: editObject.nfilesize,\r\n                            ndefaultstatus: editObject.ndefaultstatus,\r\n                            sfilename: editObject.sfilename,\r\n                        }\r\n                    }\r\n                    selectedRecord = {\r\n                        ...link,\r\n                        nprojectmasterfilecode: editObject.nprojectmasterfilecode,\r\n                        nattachmenttypecode: editObject.nattachmenttypecode,\r\n                        ...editObject,\r\n                        nlinkcode,\r\n\r\n                        // disabled: true\r\n                    };\r\n                } else {\r\n                    selectedRecord = {\r\n                        nattachmenttypecode: response[0].data.AttachmentType.length > 0 ?\r\n                            response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\r\n                        nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\r\n                        disabled\r\n                    };\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        [inputParam.modalName]: true,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        linkMaster: linkmaster,\r\n                        showSaveContinue: false,\r\n                        \r\n                        editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n           \r\n    }else{\r\n        toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n    }}\r\n}\r\n\r\n//ProjectMaster Click\r\nexport const getProjectMaster = (projectmasterItem, userInfo, masterData) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/projectmaster/getActiveProjectMasterById\", {\r\n            nprojectmastercode: projectmasterItem.nprojectmastercode,\r\n                userinfo: userInfo\r\n            })\r\n            .then(response => {\r\n                \r\n\r\n                    let masterData1  = {...masterData,\r\n\r\n                        ...response.data }\r\n\r\n                    // ...masterData,\r\n                    // ...response.data\r\n                    masterData=masterData1\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                       // masterData,\r\n                        loading: false,\r\n                        dataState: undefined,\r\n                        masterData\r\n                        \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getProjectmasterAddMemberService(screenName, operation, masterData, userInfo, ncontrolCode){\r\n    return function (dispatch) {    \r\n        if (masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.DRAFT){     \r\n        \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"projectmaster/getProjectUnmappedTeammember\",{\r\n            \"nprojectmastercode\":masterData.SelectedProjectMaster[\"nprojectmastercode\"], \r\n            userinfo:userInfo})\r\n\r\n        .then(response=>{\r\n\r\n            let masterData1  = {...masterData,\r\n\r\n                ...response.data }\r\n                masterData=masterData1                       \r\n                dispatch({type: DEFAULT_RETURN, payload:{ \r\n                                                        MembersList:response.data,\r\n                                                        masterData,\r\n                                                        openChildModal:true,\r\n                                                        operation, screenName, ncontrolCode,\r\n                                                        //selectedRecord, \r\n                                                        loading:false}});\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }      \r\n            }) \r\n    }\r\n    else{\r\n        toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n    }\r\n}}"]},"metadata":{},"sourceType":"module"}