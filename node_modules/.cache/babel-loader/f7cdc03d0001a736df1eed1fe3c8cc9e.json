{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\AddParameter.jsx\";\nimport React from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { Col, Row } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport AddCodedResult from './AddCodedResult'; //import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\n\nimport ReactSelectAddEdit from '../../components/react-select-add-edit/react-select-add-edit-component';\nimport { injectIntl } from 'react-intl';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component'; //import { CONTAINERTYPE } from '../../components/Enumeration';\n\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst AddParameter = props => {\n  const {\n    needRoundingDigit,\n    needUnit,\n    parameterType,\n    unit,\n    testParameter,\n    deltaperiod\n  } = props.parameterData; //console.log(\"reound:\", props.selectedRecord[\"nroundingdigits\"]);\n  //console.log(\"reound:\", props.selectedRecord[\"ndeltacheck\"]);\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactSelectAddEdit, {\n    name: \"sparametername\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PARAMETERNAME\"\n    }),\n    className: \"color-select\",\n    classNamePrefix: \"react-select\",\n    optionId: \"sparametername\",\n    optionValue: \"sparametername\",\n    options: testParameter,\n    isMandatory: true,\n    getValue: value => props.onComboChange(value, \"sparametername\", 1),\n    value: props.selectedRecord[\"sparametername\"] ? props.selectedRecord[\"sparametername\"] : \"\" // defaultValue={props.selectedRecord? props.selectedRecord[\"sparametername\"]:\"\"}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sparametersynonym\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PARAMETERSYNONYM\"\n    }),\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PARAMETERSYNONYM\"\n    }),\n    value: props.selectedRecord && props.selectedRecord[\"sparametersynonym\"] ? props.selectedRecord[\"sparametersynonym\"] : \"\",\n    isMandatory: \"*\",\n    required: true,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PARAMETERTYPE\"\n    }),\n    isSearchable: false,\n    name: \"nparametertypecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    showOption: true,\n    options: parameterType || [],\n    optionId: \"nparametertypecode\",\n    optionValue: \"sdisplaystatus\",\n    value: props.selectedRecord ? props.selectedRecord[\"nparametertypecode\"] : \"\",\n    onChange: value => props.onComboChange(value, \"nparametertypecode\", 2),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"nroundingdigits\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ROUNDINGDIGITS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ROUNDINGDIGITS\"\n    }),\n    isDisabled: needRoundingDigit,\n    isMandatory: !needRoundingDigit,\n    required: !needRoundingDigit,\n    className: \"form-control\",\n    value: props.selectedRecord[\"nroundingdigits\"] ? props.selectedRecord[\"nroundingdigits\"] && typeof props.selectedRecord[\"nroundingdigits\"] === \"number\" ? props.selectedRecord[\"nroundingdigits\"].toString() : props.selectedRecord[\"nroundingdigits\"] : \"\",\n    onChange: value => props.onNumericInputChange(value, \"nroundingdigits\"),\n    maxLength: 1,\n    onFocus: props.onFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_UNIT\"\n    }),\n    isSearchable: true,\n    name: \"nunitcode\",\n    isDisabled: needUnit,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_UNIT\"\n    }),\n    isMandatory: !needUnit,\n    options: unit || [],\n    optionId: \"nunitcode\",\n    optionValue: \"sunitname\",\n    value: props.selectedRecord ? props.selectedRecord[\"nunitcode\"] : \"\",\n    onChange: value => props.onComboChange(value, \"nunitcode\", 1),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(AddCodedResult, {\n    onInputOnChange: props.onInputOnChange,\n    parameterData: props.parameterData,\n    selectedRecord: props.selectedRecord,\n    onComboChange: props.onComboChange,\n    userInfo: props.userInfo //selectedsubcodedresult={this.state.selectedsubcodedresult||[]}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    name: \"ndeltacheck\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DELTACHECK\"\n    }),\n    type: \"switch\",\n    onChange: event => props.onInputOnChange(event, 1, [transactionStatus.YES, transactionStatus.NO]),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DELTACHECK\"\n    }),\n    defaultValue: props.selectedRecord[\"ndeltacheck\"] === 3 ? true : false,\n    checked: props.selectedRecord[\"ndeltacheck\"] === 3 ? true : false,\n    disabled: needRoundingDigit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"ndeltacheckframe\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DELTACHECKTIMEFRAME\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"ndeltacheckframe\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DELTACHECKTIMEFRAME\"\n    }),\n    strict: true,\n    min: 0,\n    maxLength: 3,\n    onChange: value => props.onNumericInputChange(value, \"ndeltacheckframe\"),\n    noStyle: true,\n    isDisabled: props.selectedRecord[\"ndeltacheck\"] !== transactionStatus.YES,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_DELTACHECKTIMEUNIT\"\n    }),\n    isSearchable: true,\n    isClearable: true,\n    name: \"ndeltaunitcode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DELTACHECKTIMEUNIT\"\n    }),\n    options: deltaperiod || [],\n    value: props.selectedRecord ? props.selectedRecord[\"ndeltaunitcode\"] : \"\",\n    onChange: value => props.onComboChange(value, \"ndeltaunitcode\", 1),\n    alphabeticalSort: true,\n    isDisabled: props.selectedRecord[\"ndeltacheck\"] !== transactionStatus.YES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"ndeltachecklimitcode\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DELTACHECKLIMIT\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"ndeltachecklimitcode\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DELTACHECKLIMIT\"\n    }),\n    strict: true,\n    min: 0 //max={9999999.99}\n    ,\n    maxLength: 6,\n    onChange: value => props.onNumericInputChange(value, \"ndeltachecklimitcode\"),\n    noStyle: true,\n    isDisabled: needRoundingDigit,\n    precision: 2,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default injectIntl(AddParameter);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/AddParameter.jsx"],"names":["React","FormSelectSearch","Col","Row","FormInput","AddCodedResult","ReactSelectAddEdit","injectIntl","FormNumericInput","CustomSwitch","transactionStatus","AddParameter","props","needRoundingDigit","needUnit","parameterType","unit","testParameter","deltaperiod","parameterData","intl","formatMessage","id","value","onComboChange","selectedRecord","event","onInputOnChange","toString","onNumericInputChange","onFocus","userInfo","YES","NO"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col,  Row } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport AddCodedResult from './AddCodedResult';\r\n//import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport ReactSelectAddEdit from '../../components/react-select-add-edit/react-select-add-edit-component'\r\nimport { injectIntl } from 'react-intl';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\n//import { CONTAINERTYPE } from '../../components/Enumeration';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst AddParameter = (props) => {\r\n    const { needRoundingDigit, needUnit, parameterType, unit, testParameter,deltaperiod } = props.parameterData;\r\n    //console.log(\"reound:\", props.selectedRecord[\"nroundingdigits\"]);\r\n    //console.log(\"reound:\", props.selectedRecord[\"ndeltacheck\"]);\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <ReactSelectAddEdit\r\n                    name=\"sparametername\"\r\n                    label={props.intl.formatMessage({ id: \"IDS_PARAMETERNAME\" })}\r\n                    className=\"color-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    optionId=\"sparametername\"\r\n                    optionValue=\"sparametername\"\r\n                    options={testParameter}\r\n                    isMandatory={true}\r\n                    getValue={value => props.onComboChange(value, \"sparametername\", 1)}\r\n                    value={props.selectedRecord[\"sparametername\"] ? props.selectedRecord[\"sparametername\"] : \"\"}\r\n                // defaultValue={props.selectedRecord? props.selectedRecord[\"sparametername\"]:\"\"}\r\n                />\r\n                <FormInput\r\n                    name={\"sparametersynonym\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_PARAMETERSYNONYM\" })}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event, 1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_PARAMETERSYNONYM\" })}\r\n                    value={props.selectedRecord && props.selectedRecord[\"sparametersynonym\"] ? props.selectedRecord[\"sparametersynonym\"] : \"\"}\r\n                    isMandatory=\"*\"\r\n                    required={true}\r\n                    maxLength={100}\r\n                />\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_PARAMETERTYPE\" })}\r\n                    isSearchable={false}\r\n                    name={\"nparametertypecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    showOption={true}\r\n                    options={parameterType || []}\r\n                    optionId='nparametertypecode'\r\n                    optionValue='sdisplaystatus'\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nparametertypecode\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"nparametertypecode\", 2)}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n                <Row>\r\n                     <Col md={12}>\r\n                        <FormInput\r\n                            name={\"nroundingdigits\"}\r\n                            type=\"text\"\r\n                            label={props.intl.formatMessage({ id: \"IDS_ROUNDINGDIGITS\" })}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_ROUNDINGDIGITS\" })}\r\n                            isDisabled={needRoundingDigit}\r\n                            isMandatory={!needRoundingDigit}\r\n                            required={!needRoundingDigit}\r\n                            className=\"form-control\"\r\n                            value={props.selectedRecord[\"nroundingdigits\"]?props.selectedRecord[\"nroundingdigits\"] && typeof props.selectedRecord[\"nroundingdigits\"] === \"number\" ?\r\n                                props.selectedRecord[\"nroundingdigits\"].toString() : props.selectedRecord[\"nroundingdigits\"]:\"\"}\r\n                            onChange={value => props.onNumericInputChange(value, \"nroundingdigits\")}\r\n                            maxLength={1}\r\n                            onFocus={props.onFocus}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n                            isSearchable={true}\r\n                            name={\"nunitcode\"}\r\n                            isDisabled={needUnit}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n                            isMandatory={!needUnit}\r\n                            options={unit || []}\r\n                            optionId='nunitcode'\r\n                            optionValue='sunitname'\r\n                            value={props.selectedRecord ? props.selectedRecord[\"nunitcode\"] : \"\"}\r\n                            onChange={value => props.onComboChange(value, \"nunitcode\", 1)}\r\n                            alphabeticalSort={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n                </Row>              \r\n            </Col>\r\n            <AddCodedResult\r\n                onInputOnChange={props.onInputOnChange}\r\n                parameterData={props.parameterData}\r\n                selectedRecord={props.selectedRecord}\r\n                onComboChange={props.onComboChange}\r\n                userInfo={props.userInfo}\r\n                //selectedsubcodedresult={this.state.selectedsubcodedresult||[]}\r\n            ></AddCodedResult>\r\n \r\n        <Col md={12}>\r\n            <CustomSwitch\r\n                    name={\"ndeltacheck\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DELTACHECK\"})}\r\n                    type=\"switch\"\r\n                    onChange={(event)=>props.onInputOnChange(event, 1, [transactionStatus.YES, transactionStatus.NO])}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DELTACHECK\"})}\r\n                    defaultValue ={props.selectedRecord[\"ndeltacheck\"] === 3 ? true :false}\r\n                    checked={props.selectedRecord[\"ndeltacheck\"] === 3 ? true :false}\r\n                    disabled={needRoundingDigit}\r\n                >\r\n            </CustomSwitch> \r\n\r\n            <FormNumericInput\r\n                    name={\"ndeltacheckframe\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DELTACHECKTIMEFRAME\" })}\r\n                    type=\"number\"\r\n                    value={props.selectedRecord[\"ndeltacheckframe\"]}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DELTACHECKTIMEFRAME\" })}\r\n                    strict={true}\r\n                    min={0}\r\n                    maxLength={3}\r\n                    onChange={(value) => props.onNumericInputChange(value, \"ndeltacheckframe\")}\r\n                    noStyle={true}\r\n                    isDisabled={props.selectedRecord[\"ndeltacheck\"] !== transactionStatus.YES}\r\n                    className=\"form-control\"\r\n                    errors=\"Please provide a valid number.\"\r\n                    \r\n                />\r\n            <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_DELTACHECKTIMEUNIT\" })}\r\n                    isSearchable={true}\r\n                    isClearable={true}\r\n                    name={\"ndeltaunitcode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DELTACHECKTIMEUNIT\" })}\r\n                    options={deltaperiod || []}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"ndeltaunitcode\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"ndeltaunitcode\", 1)}\r\n                    alphabeticalSort={true}\r\n                    isDisabled={props.selectedRecord[\"ndeltacheck\"] !== transactionStatus.YES}\r\n                >\r\n            </FormSelectSearch>\r\n\r\n            <FormNumericInput\r\n                    name={\"ndeltachecklimitcode\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DELTACHECKLIMIT\" })}\r\n                    type=\"number\"\r\n                    value={props.selectedRecord[\"ndeltachecklimitcode\"]}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DELTACHECKLIMIT\" })}\r\n                    strict={true}\r\n                    min={0}\r\n                    //max={9999999.99}\r\n                    maxLength={6}\r\n                    onChange={(value) => props.onNumericInputChange(value, \"ndeltachecklimitcode\")}\r\n                    noStyle={true}\r\n                    isDisabled={needRoundingDigit}\r\n                    precision={2}\r\n                    className=\"form-control\"\r\n                    errors=\"Please provide a valid number.\"\r\n                /> \r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddParameter);"]},"metadata":{},"sourceType":"module"}