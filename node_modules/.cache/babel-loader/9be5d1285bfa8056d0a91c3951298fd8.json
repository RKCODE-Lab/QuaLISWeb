{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{process}from'@progress/kendo-data-query';import React from'react';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{projectytpe,getSampleType,getActiveSampleProcessTypeById}from'../../actions';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{showEsign,getControlMap,Lims_JSON_stringify}from'../../components/CommonScript';import{ListWrapper}from'../../components/client-group.styles';import DataGrid from'../../components/data-grid/data-grid.component';import Esign from'../audittrail/Esign';import AddSampleProcessType from'./AddSampleProcessType';import{callService,updateStore,crudMaster,validateEsignCredential}from'../../actions';import{toast}from'react-toastify';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var SampleProcessType=/*#__PURE__*/function(_React$Component){_inherits(SampleProcessType,_React$Component);var _super=_createSuper(SampleProcessType);function SampleProcessType(props){var _this;_classCallCheck(this,SampleProcessType);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,userInfo:_this.props.Login.userInfo,displayName:_this.props.Login.displayName};_this.props.callService(inputParam);};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};if(fieldName===\"sprojecttypename\"){selectedRecord[fieldName]=comboData;delete selectedRecord[\"sproductname\"];delete selectedRecord[\"stubename\"];delete selectedRecord[\"sprocesstypename\"];_this.props.getSampleType(_this.state.selectedRecord.sprojecttypename.value,_this.state.selectedRecord.sprojecttypename.label,_this.props.Login.userInfo);}else{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}};_this.onInputOnChange=function(event,fieldName){var selectedRecord=_this.state.selectedRecord||{};var values=event.target.value;var parsedvalues;parsedvalues=parseInt(values,10);if(fieldName===\"processtime\"||fieldName===\"gracetime\"){if(/^\\d*?$/.test(values)&&values!==\"\"){selectedRecord[fieldName]=parsedvalues;}else{selectedRecord[fieldName]=[];}}else if(fieldName===\"executionorder\"){if(/^\\d*?$/.test(values)&&values!==\"\"){selectedRecord[fieldName]=parsedvalues;}else{selectedRecord[fieldName]=[];}}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var controlButton=_this.props.Login.controlButton;var selectedId=_this.props.Login.selectedId;// let processtypeList;\n// let projecttypeList;\n// let sampletypeList;\n// let collectiontubeList;\nif(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esignreason']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};controlButton=[];// processtypeList = [];\n// projecttypeList = [];\n// sampletypeList = [];\n// collectiontubeList = [];\n}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:selectedId,controlButton:controlButton}};_this.props.updateStore(updateInfo);//ate234 janakumar ALPD-5065 Aliquot Plan-->While doing Edit ,the dropdown records are not Showing.\n//this.setState({ selectedRecord: selectedRecord, processtypeList: processtypeList, projecttypeList: projecttypeList, sampletypeList: sampletypeList, collectiontubeList: collectiontubeList });\n};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.operation===\"create\"){_this.onSaveSampleProcessType(saveType,formRef);}else if(_this.props.Login.operation===\"update\"){_this.updateSampleProcessType(saveType,formRef);}};_this.onSaveSampleProcessType=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;if(selectedRecord!==undefined){var inputParam={nformcode:_this.props.Login.userInfo.nformcode,classUrl:\"sampleprocesstype\",methodUrl:\"SampleProcessType\",inputData:{userinfo:_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sformname:Lims_JSON_stringify(_this.props.Login.userInfo.sformname),smodulename:Lims_JSON_stringify(_this.props.Login.userInfo.smodulename)}),ncontrolCode:_this.props.Login.userInfo.nformcode,tubename:_this.state.selectedRecord.stubename.label,tubevalue:_this.state.selectedRecord.stubename.value,projecttypename:_this.state.selectedRecord.sprojecttypename.label,projecttypevalue:_this.state.selectedRecord.sprojecttypename.value,productname:_this.state.selectedRecord.sproductname.label,productvalue:_this.state.selectedRecord.sproductname.value,processtypename:_this.state.selectedRecord.sprocesstypename.label,processtypevalue:_this.state.selectedRecord.sprocesstypename.value,processtime:_this.state.selectedRecord.processtime,processperiodtime:_this.state.selectedRecord.processperiodtime.value,graceperiodtime:_this.state.selectedRecord.graceperiodtime.value,gracetime:_this.state.selectedRecord.gracetime,executionorder:_this.state.selectedRecord.executionorder,sdescription:_this.state.selectedRecord.sdescription,commonPeriod:_this.state.selectedRecord.graceperiodtime.label,operation:\"create\"},operation:\"create\",saveType:saveType,formRef:formRef};var masterData=_this.props.Login.masterData;_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.updateSampleProcessType=function(saveType,formRef){var inputParam={nformcode:_this.props.Login.userInfo.nformcode,classUrl:\"sampleprocesstype\",methodUrl:\"SampleProcessType\",selectedRecord:_objectSpread({},_this.state.selectedRecord),selectedId:_this.state.selectedRecord.nsampleprocesstypecode,inputData:{userinfo:_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sformname:Lims_JSON_stringify(_this.props.Login.userInfo.sformname),smodulename:Lims_JSON_stringify(_this.props.Login.userInfo.smodulename)}),ncontrolCode:_this.props.Login.userInfo.nformcode,nsampleprocesstypecode:_this.state.selectedRecord.nsampleprocesstypecode,tubename:_this.state.selectedRecord.stubename.label,tubevalue:_this.state.selectedRecord.stubename.value,projecttypename:_this.state.selectedRecord.sprojecttypename.label,projecttypevalue:_this.state.selectedRecord.sprojecttypename.value,productname:_this.state.selectedRecord.sproductname.label,productvalue:_this.state.selectedRecord.sproductname.value,processtypename:_this.state.selectedRecord.sprocesstypename.label,processtypevalue:_this.state.selectedRecord.sprocesstypename.value,processtime:_this.state.selectedRecord.processtime,gracetime:_this.state.selectedRecord.gracetime,executionorder:_this.state.selectedRecord.executionorder,sdescription:_this.state.selectedRecord.sdescription,commonPeriod:_this.state.selectedRecord.graceperiodtime.label,operation:\"update\"},operation:\"update\",saveType:saveType,formRef:formRef};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.deleteRecord=function(deleteParam){var _inputData;var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:(_inputData={},_defineProperty(_inputData,_this.props.Login.inputParam.methodUrl.toLowerCase(),deleteParam.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_inputData),operation:deleteParam.operation,dataState:_this.state.dataState,selectedRecord:deleteParam.selectedRecord};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.displayName}),operation:deleteParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.formRef=React.createRef();_this.extractedColumnList=[];var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,userRoleControlRights:[],controlMap:new Map()};return _this;}_createClass(SampleProcessType,[{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";if(this.props.Login.inputParam!==undefined){this.extractedColumnList=[{\"mandatory\":true,\"idsName\":\"IDS_PROJECTTYPE\",\"dataField\":\"sprojecttypename\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_SAMPLETYPE\",\"dataField\":\"sproductname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_COLLECTIONTUBETYPEPROCESSTYPE\",\"dataField\":\"stubename\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\",\"width\":180},{\"mandatory\":true,\"idsName\":\"IDS_PROCESSTYPENAME\",\"dataField\":\"sprocesstypename\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_PROCESSTIME\",\"dataField\":\"nprocesstimeresult\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_GRACETIME\",\"dataField\":\"ngracetimeresult\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_EXECTIONORDER\",\"dataField\":\"nexecutionorder\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"}];primaryKeyField=\"nsampleprocesstypecode\";}var mandatoryFields=[];mandatoryFields.push({\"mandatory\":true,\"idsName\":\"IDS_PROJECTTYPE\",\"dataField\":\"sprojecttypename\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_SAMPLETYPE\",\"dataField\":\"sproductname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_COLLECTIONTUBETYPEPROCESSTYPE\",\"dataField\":\"stubename\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_PROCESSTYPENAME\",\"dataField\":\"sprocesstypename\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_PROCESSTIME\",\"dataField\":\"processtime\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_GRACETIME\",\"dataField\":\"gracetime\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_EXECTIONORDER\",\"dataField\":\"executionorder\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_PROCESSPERIODTIME\",\"dataField\":\"processperiodtime\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_GRACEPERIODTIME\",\"dataField\":\"graceperiodtime\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"});var addsampleprocesstypeId=this.state.controlMap.has(\"AddSampleProcessType\")&&this.state.controlMap.get(\"AddSampleProcessType\").ncontrolcode;var editsampleprocesstypeId=this.state.controlMap.has(\"EditSampleProcessType\")&&this.state.controlMap.get(\"EditSampleProcessType\").ncontrolcode;var deletesampleprocesstypeId=this.state.controlMap.has(\"DeleteSampleProcessType\")&&this.state.controlMap.get(\"DeleteSampleProcessType\").ncontrolcode;var editParam={screenName:this.props.Login.inputParam&&this.props.Login.inputParam.displayName&&this.props.intl.formatMessage({id:this.props.Login.inputParam.displayName}),primaryKeyField:\"nsampleprocesstypecode\",operation:\"update\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editsampleprocesstypeId};var deleteParam={operation:\"delete\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,selectedId:this.props.Login.selectedId,data:this.state.data,dataResult:this.state.dataResult||[],dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,fetchRecord:this.props.getActiveSampleProcessTypeById,addRecord:function addRecord(){return _this2.props.projectytpe(addsampleprocesstypeId,_this2.props.Login.userInfo)||[];},deleteRecord:this.deleteRecord,reloadData:this.reloadData,editParam:editParam,deleteParam:deleteParam,scrollable:\"scrollable\",gridHeight:\"600px\",isActionRequired:true,isToolBarRequired:true,pageable:true,groupable:false//ATE234 Janakumar ALPD-5577 Sample Storage-->while download the pdf, screen getting freezed\n,isDownloadPDFRequired:false,isDownloadExcelRequired:true})),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,selectedRecord:this.state.selectedRecord||{},updateStore:this.props.updateStore,mandatoryFields:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddSampleProcessType,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,projecttypeList:this.state.projecttypeList||[],sampletypeList:this.state.sampletypeList||[],collectiontubeList:this.state.collectiontubeList||[],processtypeList:this.state.processtypeList||[],periodList:this.state.periodList||[],inputParam:this.props.Login.inputParam,actionType:this.state.actionType,operation:this.props.Login.operation})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{//ALPD-4699Sample Process mapping-->While try to delete the already used records in other Modules alert validation captured Wrongly \" This Record is Used in Storage Sample Processing\"\"\nvar dataState=this.state.dataState;if(dataState===undefined){dataState={skip:0,take:this.state.dataState.take};}if(this.state.dataResult.data){//if(this.state.dataResult.data.length >0 && this.props.Login.operation !=='update' && this.props.Login.operation ==='create'){\nif(this.state.dataResult.data.length===1){//let skipcount=this.state.dataState.skip>0?(this.props.Login.masterData.length-this.state.dataState.take):\nvar skipcount=this.state.dataState.skip>0?this.state.dataState.skip-this.state.dataState.take:this.state.dataState.skip;dataState={skip:skipcount,take:this.state.dataState.take};}}this.setState({data:this.props.Login.masterData,isOpen:false,selectedRecord:this.props.Login.selectedRecord,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState});//     let { dataState } = this.state;\n// if (this.props.Login.dataState === undefined) {\n//     dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\n// }\n// this.setState({\n//     data: this.props.Login.masterData,\n//     isOpen: false,\n//     selectedRecord: this.props.Login.selectedRecord,\n//     dataResult: process(this.props.Login.masterData, dataState),\n//     dataState\n// });\n}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.projecttypeList!==previousProps.Login.projecttypeList){this.setState({projecttypeList:this.props.Login.projecttypeList});}if(this.props.Login.sampletypeList!==previousProps.Login.sampletypeList){this.setState({sampletypeList:this.props.Login.sampletypeList});}if(this.props.Login.collectiontubeList!==previousProps.Login.collectiontubeList){this.setState({collectiontubeList:this.props.Login.collectiontubeList});}if(this.props.Login.processtypeList!==previousProps.Login.processtypeList){this.setState({processtypeList:this.props.Login.processtypeList});}if(this.props.Login.periodList!==previousProps.Login.periodList){this.setState({periodList:this.props.Login.periodList});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return SampleProcessType;}(React.Component);export default connect(mapStateToProps,{updateStore:updateStore,callService:callService,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,projectytpe:projectytpe,getSampleType:getSampleType,getActiveSampleProcessTypeById:getActiveSampleProcessTypeById})(injectIntl(SampleProcessType));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/storagemanagement/SampleProcessType.jsx"],"names":["process","React","SlideOutModal","projectytpe","getSampleType","getActiveSampleProcessTypeById","connect","injectIntl","DEFAULT_RETURN","showEsign","getControlMap","Lims_JSON_stringify","ListWrapper","DataGrid","Esign","AddSampleProcessType","callService","updateStore","crudMaster","validateEsignCredential","toast","mapStateToProps","state","Login","SampleProcessType","props","dataStateChange","event","setState","dataResult","data","dataState","reloadData","inputParam","inputData","userInfo","classUrl","methodUrl","displayName","onComboChange","comboData","fieldName","selectedRecord","sprojecttypename","value","label","onInputOnChange","values","target","parsedvalues","parseInt","test","name","closeModal","loadEsign","openModal","controlButton","selectedId","operation","updateInfo","typeName","validateEsign","sreason","nreasoncode","spredefinedreason","password","screenData","onSaveClick","saveType","formRef","onSaveSampleProcessType","updateSampleProcessType","undefined","nformcode","userinfo","sformname","smodulename","ncontrolCode","tubename","stubename","tubevalue","projecttypename","projecttypevalue","productname","sproductname","productvalue","processtypename","sprocesstypename","processtypevalue","processtime","processperiodtime","graceperiodtime","gracetime","executionorder","sdescription","commonPeriod","masterData","nsampleprocesstypecode","userRoleControlRights","deleteRecord","deleteParam","toLowerCase","screenName","intl","formatMessage","id","createRef","extractedColumnList","skip","take","settings","masterStatus","error","controlMap","Map","primaryKeyField","mandatoryFields","push","addsampleprocesstypeId","has","get","ncontrolcode","editsampleprocesstypeId","deletesampleprocesstypeId","editParam","projecttypeList","sampletypeList","collectiontubeList","processtypeList","periodList","actionType","previousProps","Object","map","item","length","skipcount","isOpen","warn","Component"],"mappings":"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","sourcesContent":["import { process } from '@progress/kendo-data-query';\r\nimport React from 'react'\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { projectytpe, getSampleType, getActiveSampleProcessTypeById } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { showEsign, getControlMap, Lims_JSON_stringify } from\r\n    '../../components/CommonScript';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport Esign from '../audittrail/Esign';\r\nimport AddSampleProcessType from './AddSampleProcessType';\r\nimport { callService, updateStore, crudMaster, validateEsignCredential } from '../../actions';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass SampleProcessType extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        };\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            userInfo: this.props.Login.userInfo,\r\n            displayName: this.props.Login.displayName\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let primaryKeyField = \"\";\r\n\r\n        if (this.props.Login.inputParam !== undefined) {\r\n\r\n            this.extractedColumnList = [\r\n                { \"mandatory\": true, \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"sprojecttypename\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_SAMPLETYPE\", \"dataField\": \"sproductname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_COLLECTIONTUBETYPEPROCESSTYPE\", \"dataField\": \"stubename\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\", \"width\": 180 },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_PROCESSTYPENAME\", \"dataField\": \"sprocesstypename\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_PROCESSTIME\", \"dataField\": \"nprocesstimeresult\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_GRACETIME\", \"dataField\": \"ngracetimeresult\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_EXECTIONORDER\", \"dataField\": \"nexecutionorder\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n\r\n            ]\r\n\r\n            primaryKeyField = \"nsampleprocesstypecode\";\r\n        }\r\n        let mandatoryFields = [];\r\n        mandatoryFields.push(\r\n            { \"mandatory\": true, \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"sprojecttypename\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"mandatory\": true, \"idsName\": \"IDS_SAMPLETYPE\", \"dataField\": \"sproductname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"mandatory\": true, \"idsName\": \"IDS_COLLECTIONTUBETYPEPROCESSTYPE\", \"dataField\": \"stubename\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"mandatory\": true, \"idsName\": \"IDS_PROCESSTYPENAME\", \"dataField\": \"sprocesstypename\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"mandatory\": true, \"idsName\": \"IDS_PROCESSTIME\", \"dataField\": \"processtime\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n            { \"mandatory\": true, \"idsName\": \"IDS_GRACETIME\", \"dataField\": \"gracetime\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n            { \"mandatory\": true, \"idsName\": \"IDS_EXECTIONORDER\", \"dataField\": \"executionorder\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n            { \"mandatory\": true, \"idsName\": \"IDS_PROCESSPERIODTIME\", \"dataField\": \"processperiodtime\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n            { \"mandatory\": true, \"idsName\": \"IDS_GRACEPERIODTIME\", \"dataField\": \"graceperiodtime\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n\r\n\r\n        )\r\n\r\n\r\n        const addsampleprocesstypeId = this.state.controlMap.has(\"AddSampleProcessType\") && this.state.controlMap.get(\"AddSampleProcessType\").ncontrolcode;\r\n        const editsampleprocesstypeId = this.state.controlMap.has(\"EditSampleProcessType\") && this.state.controlMap.get(\"EditSampleProcessType\").ncontrolcode;\r\n        const deletesampleprocesstypeId = this.state.controlMap.has(\"DeleteSampleProcessType\") && this.state.controlMap.get(\"DeleteSampleProcessType\").ncontrolcode;\r\n\r\n\r\n        const editParam = {\r\n            screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), primaryKeyField: \"nsampleprocesstypecode\", operation: \"update\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: editsampleprocesstypeId\r\n        };\r\n\r\n        const deleteParam = { operation: \"delete\" };\r\n\r\n        return (<>\r\n\r\n            <ListWrapper className=\"client-list-content\">\r\n\r\n\r\n                <DataGrid\r\n                    primaryKeyField={primaryKeyField}\r\n                    selectedId={this.props.Login.selectedId}\r\n                    data={this.state.data}\r\n                    dataResult={this.state.dataResult || []}\r\n                    dataState={this.state.dataState}\r\n                    dataStateChange={this.dataStateChange}\r\n                    extractedColumnList={this.extractedColumnList}\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    fetchRecord={this.props.getActiveSampleProcessTypeById}\r\n                    addRecord={() => this.props.projectytpe(addsampleprocesstypeId, this.props.Login.userInfo) || []}\r\n                    deleteRecord={this.deleteRecord}\r\n                    reloadData={this.reloadData}\r\n                    editParam={editParam}\r\n                    deleteParam={deleteParam}\r\n                    scrollable={\"scrollable\"}\r\n                    gridHeight={\"600px\"}\r\n                    isActionRequired={true}\r\n                    isToolBarRequired={true}\r\n                    pageable={true}\r\n                    groupable={false}\r\n                    //ATE234 Janakumar ALPD-5577 Sample Storage-->while download the pdf, screen getting freezed\r\n                    isDownloadPDFRequired={false}\r\n                    isDownloadExcelRequired={true}\r\n                />\r\n\r\n            </ListWrapper>\r\n\r\n            {this.props.Login.openModal &&\r\n                <SlideOutModal\r\n                    show={this.props.Login.openModal}\r\n                    closeModal={this.closeModal}\r\n                    operation={this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    screenName={this.props.Login.screenName}\r\n                    onSaveClick={this.onSaveClick}\r\n                    esign={this.props.Login.loadEsign}\r\n                    validateEsign={this.validateEsign}\r\n                    masterStatus={this.props.Login.masterStatus}\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    updateStore={this.props.updateStore}\r\n                    mandatoryFields={mandatoryFields}\r\n                    addComponent={this.props.Login.loadEsign ?\r\n                        <Esign\r\n                            operation={this.props.Login.operation}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                        />\r\n                        : <AddSampleProcessType\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            onComboChange={this.onComboChange}\r\n                            projecttypeList={this.state.projecttypeList || []}\r\n                            sampletypeList={this.state.sampletypeList || []}\r\n                            collectiontubeList={this.state.collectiontubeList || []}\r\n                            processtypeList={this.state.processtypeList || []}\r\n                            periodList={this.state.periodList || []}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            actionType={this.state.actionType}\r\n                            operation={this.props.Login.operation}\r\n                        />}\r\n                />\r\n            }\r\n        </>);\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                //ALPD-4699Sample Process mapping-->While try to delete the already used records in other Modules alert validation captured Wrongly \" This Record is Used in Storage Sample Processing\"\"\r\n\r\n                let { dataState } = this.state;\r\n                if (dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.state.dataState.take }\r\n                }\r\n                if (this.state.dataResult.data) {\r\n                    //if(this.state.dataResult.data.length >0 && this.props.Login.operation !=='update' && this.props.Login.operation ==='create'){\r\n                    if (this.state.dataResult.data.length === 1) {\r\n                        //let skipcount=this.state.dataState.skip>0?(this.props.Login.masterData.length-this.state.dataState.take):\r\n                        let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\r\n                            this.state.dataState.skip\r\n                        dataState = { skip: skipcount, take: this.state.dataState.take }\r\n                    }\r\n                }\r\n\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    isOpen: false,\r\n                    selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState\r\n                });\r\n\r\n\r\n                //     let { dataState } = this.state;\r\n                // if (this.props.Login.dataState === undefined) {\r\n                //     dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                // }\r\n\r\n                // this.setState({\r\n                //     data: this.props.Login.masterData,\r\n                //     isOpen: false,\r\n                //     selectedRecord: this.props.Login.selectedRecord,\r\n                //     dataResult: process(this.props.Login.masterData, dataState),\r\n                //     dataState\r\n                // });\r\n            }\r\n        } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n        if (this.props.Login.projecttypeList !== previousProps.Login.projecttypeList) {\r\n            this.setState({ projecttypeList: this.props.Login.projecttypeList });\r\n        }\r\n\r\n        if (this.props.Login.sampletypeList !== previousProps.Login.sampletypeList) {\r\n            this.setState({ sampletypeList: this.props.Login.sampletypeList });\r\n        }\r\n\r\n        if (this.props.Login.collectiontubeList !== previousProps.Login.collectiontubeList) {\r\n            this.setState({ collectiontubeList: this.props.Login.collectiontubeList });\r\n        }\r\n\r\n        if (this.props.Login.processtypeList !== previousProps.Login.processtypeList) {\r\n            this.setState({ processtypeList: this.props.Login.processtypeList });\r\n        }\r\n\r\n        if (this.props.Login.periodList !== previousProps.Login.periodList) {\r\n            this.setState({ periodList: this.props.Login.periodList });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n\r\n        if (fieldName === \"sprojecttypename\") {\r\n            selectedRecord[fieldName] = comboData;\r\n\r\n            delete selectedRecord[\"sproductname\"];\r\n            delete selectedRecord[\"stubename\"];\r\n            delete selectedRecord[\"sprocesstypename\"];\r\n\r\n            this.props.getSampleType(\r\n                this.state.selectedRecord.sprojecttypename.value,\r\n                this.state.selectedRecord.sprojecttypename.label,\r\n                this.props.Login.userInfo,\r\n            )\r\n        }\r\n        else {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onInputOnChange = (event, fieldName) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        const values = event.target.value;\r\n\r\n        let parsedvalues;\r\n\r\n        parsedvalues = parseInt(values, 10);\r\n\r\n        if (fieldName === \"processtime\" || fieldName === \"gracetime\") {\r\n\r\n            if (/^\\d*?$/.test(values) && values !== \"\") {\r\n\r\n                selectedRecord[fieldName] = parsedvalues;\r\n            } else {\r\n                selectedRecord[fieldName] = [];\r\n            }\r\n\r\n        } else if (fieldName === \"executionorder\") {\r\n\r\n            if (/^\\d*?$/.test(values) && values !== \"\") {\r\n\r\n                selectedRecord[fieldName] = parsedvalues;\r\n            } else {\r\n                selectedRecord[fieldName] = [];\r\n            }\r\n\r\n\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let controlButton = this.props.Login.controlButton;\r\n        let selectedId = this.props.Login.selectedId;\r\n        // let processtypeList;\r\n        // let projecttypeList;\r\n        // let sampletypeList;\r\n        // let collectiontubeList;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            controlButton = [];\r\n            // processtypeList = [];\r\n            // projecttypeList = [];\r\n            // sampletypeList = [];\r\n            // collectiontubeList = [];\r\n\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, loadEsign, selectedRecord, selectedId, controlButton\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n        //ate234 janakumar ALPD-5065 Aliquot Plan-->While doing Edit ,the dropdown records are not Showing.\r\n        //this.setState({ selectedRecord: selectedRecord, processtypeList: processtypeList, projecttypeList: projecttypeList, sampletypeList: sampletypeList, collectiontubeList: collectiontubeList });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.Login.operation === \"create\") {\r\n            this.onSaveSampleProcessType(saveType, formRef);\r\n        } else if (this.props.Login.operation === \"update\") {\r\n            this.updateSampleProcessType(saveType, formRef);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    onSaveSampleProcessType = (saveType, formRef) => {\r\n\r\n\r\n        let selectedRecord = this.state.selectedRecord;\r\n\r\n        if (selectedRecord !== undefined) {\r\n\r\n            const inputParam = {\r\n                nformcode: this.props.Login.userInfo.nformcode,\r\n                classUrl: \"sampleprocesstype\",\r\n                methodUrl: \"SampleProcessType\",\r\n                inputData: {\r\n                    userinfo: {\r\n                        ...this.props.Login.userInfo,\r\n                        sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                        smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n                    },\r\n\r\n                    ncontrolCode: this.props.Login.userInfo.nformcode,\r\n                    tubename: this.state.selectedRecord.stubename.label,\r\n                    tubevalue: this.state.selectedRecord.stubename.value,\r\n                    projecttypename: this.state.selectedRecord.sprojecttypename.label,\r\n                    projecttypevalue: this.state.selectedRecord.sprojecttypename.value,\r\n                    productname: this.state.selectedRecord.sproductname.label,\r\n                    productvalue: this.state.selectedRecord.sproductname.value,\r\n                    processtypename: this.state.selectedRecord.sprocesstypename.label,\r\n                    processtypevalue: this.state.selectedRecord.sprocesstypename.value,\r\n                    processtime: this.state.selectedRecord.processtime,\r\n                    processperiodtime: this.state.selectedRecord.processperiodtime.value,\r\n                    graceperiodtime: this.state.selectedRecord.graceperiodtime.value,\r\n                    gracetime: this.state.selectedRecord.gracetime,\r\n                    executionorder: this.state.selectedRecord.executionorder,\r\n                    sdescription: this.state.selectedRecord.sdescription,\r\n                    commonPeriod: this.state.selectedRecord.graceperiodtime.label,\r\n\r\n                    operation: \"create\",\r\n\r\n\r\n                },\r\n                operation: \"create\",\r\n                saveType, formRef,\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n\r\n        }\r\n\r\n    }\r\n\r\n    updateSampleProcessType = (saveType, formRef) => {\r\n\r\n\r\n        const inputParam = {\r\n            nformcode: this.props.Login.userInfo.nformcode,\r\n            classUrl: \"sampleprocesstype\",\r\n            methodUrl: \"SampleProcessType\",\r\n            selectedRecord: { ...this.state.selectedRecord },\r\n            selectedId: this.state.selectedRecord.nsampleprocesstypecode,\r\n            inputData: {\r\n                userinfo: {\r\n                    ...this.props.Login.userInfo,\r\n                    sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n                },\r\n\r\n                ncontrolCode: this.props.Login.userInfo.nformcode,\r\n                nsampleprocesstypecode: this.state.selectedRecord.nsampleprocesstypecode,\r\n                tubename: this.state.selectedRecord.stubename.label,\r\n                tubevalue: this.state.selectedRecord.stubename.value,\r\n                projecttypename: this.state.selectedRecord.sprojecttypename.label,\r\n                projecttypevalue: this.state.selectedRecord.sprojecttypename.value,\r\n                productname: this.state.selectedRecord.sproductname.label,\r\n                productvalue: this.state.selectedRecord.sproductname.value,\r\n                processtypename: this.state.selectedRecord.sprocesstypename.label,\r\n                processtypevalue: this.state.selectedRecord.sprocesstypename.value,\r\n                processtime: this.state.selectedRecord.processtime,\r\n                gracetime: this.state.selectedRecord.gracetime,\r\n                executionorder: this.state.selectedRecord.executionorder,\r\n                sdescription: this.state.selectedRecord.sdescription,\r\n                commonPeriod: this.state.selectedRecord.graceperiodtime.label,\r\n                operation: \"update\",\r\n\r\n\r\n            },\r\n            operation: \"update\",\r\n            saveType, formRef,\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    deleteRecord = (deleteParam) => {\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                [this.props.Login.inputParam.methodUrl.toLowerCase()]: deleteParam.selectedRecord,//.dataItem,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: deleteParam.operation,\r\n            dataState: this.state.dataState,\r\n            selectedRecord: deleteParam.selectedRecord\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.displayName }),\r\n                    operation: deleteParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    updateStore, callService, crudMaster, validateEsignCredential,\r\n    projectytpe, getSampleType, getActiveSampleProcessTypeById\r\n})(injectIntl(SampleProcessType));\r\n"]},"metadata":{},"sourceType":"module"}