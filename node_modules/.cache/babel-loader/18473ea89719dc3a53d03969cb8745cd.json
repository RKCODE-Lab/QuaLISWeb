{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN,REQUEST_FAILURE}from'./LoginTypes';import{initRequest}from'./LoginAction';import{sortData,constructOptionList}from'../components/CommonScript';import{toast}from'react-toastify';import Axios from'axios';export function getSelectedSampleStorageLocation(inputParam,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/samplestoragelocation/getSelectedSampleStorageLocation\",{'userinfo':userInfo,\"nsamplestoragelocationcode\":parseInt(inputParam.nsamplestoragelocationcode)}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedSampleStorageLocation:response.data[\"selectedSampleStorageLocation\"],sampleStorageVersion:response.data[\"sampleStorageVersion\"],selectedSampleStorageVersion:response.data[\"selectedSampleStorageVersion\"]});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSelectedSampleStorageVersion(inputParam,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/samplestoragelocation/getActiveSampleStorageVersion\",{'userinfo':userInfo,\"nsamplestorageversioncode\":parseInt(inputParam.nsamplestorageversioncode)}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedSampleStorageVersion:response.data[\"selectedSampleStorageVersion\"]});// sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function editSampleStorageLocation(inputParam,userInfo,isOnlyDraft,editId){return function(dispatch){dispatch(initRequest(true));var selectedRecord={};var urlArray=[];var getSampleStorageService=rsapi.post(\"/samplestoragelocation/getSampleStorageVersionByID\",{'userinfo':userInfo,\"nsamplestorageversioncode\":inputParam.nsamplestorageversioncode});var geStorageCategory=rsapi.post(\"/storagecategory/getStorageCategory\",{'userinfo':userInfo});urlArray=[getSampleStorageService,geStorageCategory];Axios.all(urlArray).then(function(response){// masterData = {\n//     ...masterData\n// };\nselectedRecord[\"ssamplestoragelocationname\"]=response[0].data[\"selectedSampleStorageVersion\"][\"ssamplestoragelocationname\"];var storageCategoryMap=constructOptionList(response[1].data||[],\"nstoragecategorycode\",\"sstoragecategoryname\",undefined,undefined,true);var storageCategoryList=storageCategoryMap.get(\"OptionList\");storageCategoryList.map(function(item){return item.value===response[0].data[\"selectedSampleStorageVersion\"][\"nstoragecategorycode\"]?selectedRecord[\"nstoragecategorycode\"]={\"label\":item.label,\"value\":item.value,\"item\":item.item}:\"\";});dispatch({type:DEFAULT_RETURN,payload:{// masterData,\nloading:false,treeData:JSON.parse(response[0].data[\"selectedSampleStorageVersion\"][\"jsondata\"].value).data,selectedRecord:selectedRecord,openModal:true,operation:\"update\",loadTreeProperties:false,storageCategoryList:storageCategoryList,isOnlyDraft:isOnlyDraft,ncontrolcode:editId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function approveSampleStorageLocation(userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/samplestoragelocation/ApproveSampleStorageLocation\",{'userinfo':userInfo,\"approvalStatus\":masterData.selectedSampleStorageVersion[\"napprovalstatus\"],\"sampleStorageVersionCode\":masterData.selectedSampleStorageVersion[\"nsamplestorageversioncode\"],\"sampleStorageLocationCode\":masterData.selectedSampleStorageVersion[\"nsamplestoragelocationcode\"]}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{sampleStorageVersion:response.data[\"sampleStorageVersion\"],selectedSampleStorageVersion:response.data[\"selectedSampleStorageVersion\"]});// sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export var openPropertyModal=function openPropertyModal(clickedItem,editId){return function(dispatch){var selectedRecord={};selectedRecord[\"locationlastnode\"]=clickedItem.item.locationlastnode===undefined?false:clickedItem.item.locationlastnode;selectedRecord[\"containerfirstnode\"]=clickedItem.item.containerfirstnode===undefined?false:clickedItem.item.containerfirstnode;selectedRecord[\"containerlastnode\"]=clickedItem.item.containerlastnode===undefined?false:clickedItem.item.containerlastnode;dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,loadTreeProperties:true,openModal:true,clickedItem:clickedItem,operation:\"update\",ncontrolcode:editId}});};};export function fetchStorageCategory(param){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/storagecategory/getStorageCategory\",{'userinfo':param.userInfo}).then(function(response){var storageCategoryMap=constructOptionList(response.data||[],\"nstoragecategorycode\",\"sstoragecategoryname\",undefined,undefined,true);var storageCategoryList=storageCategoryMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{storageCategoryList:storageCategoryList,openModal:true,selectedRecord:{nstoragecategorycode:param.nfilterStorageCategory},loadTreeProperties:false,treeData:[{text:\"root\",expanded:true,editable:true,root:true,id:param.id}],operation:\"create\",loading:false,isOnlyDraft:false,ncontrolcode:param.addId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export var changeStorageCategoryFilter=function changeStorageCategoryFilter(inputParam,filterStorageCategory){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/samplestoragelocation/getSampleStorageLocationByCategory\",inputParam.inputData).then(function(response){var masterData=response.data;// sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:_objectSpread(_objectSpread({},masterData),{},{filterStorageCategory:filterStorageCategory,nfilterStorageCategory:inputParam.inputData.nfilterStorageCategory})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export function copySampleStorageVersion(inputParam,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/samplestoragelocation/copySampleStorageVersion\",{'userinfo':userInfo,\"sampleStorageVersionCode\":parseInt(inputParam.nsamplestorageversioncode),\"sampleStorageLocationCode\":parseInt(inputParam.nsamplestoragelocationcode)}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedSampleStorageLocation:response.data[\"selectedSampleStorageLocation\"],sampleStorageVersion:response.data[\"sampleStorageVersion\"],selectedSampleStorageVersion:response.data[\"selectedSampleStorageVersion\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export var crudSampleStorageLocation=function crudSampleStorageLocation(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/samplestoragelocation/\"+inputParam.operation+\"SampleStorageLocation\",_objectSpread({},inputParam.inputData)).then(function(response){// sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:_objectSpread(_objectSpread({},masterData),{},{sampleStorageLocation:response.data[\"sampleStorageLocation\"],selectedSampleStorageLocation:response.data[\"selectedSampleStorageLocation\"],sampleStorageVersion:response.data[\"sampleStorageVersion\"],selectedSampleStorageVersion:response.data[\"selectedSampleStorageVersion\"],filterStorageCategory:response.data[\"filterStorageCategory\"],selectedStorageCategoryName:response.data[\"selectedStorageCategoryName\"]}),openModal:false}});}).catch(function(error){if(error.response.status===500){dispatch({type:REQUEST_FAILURE,payload:{error:error.message,loading:false}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterStatus:error.response.data,errorCode:error.response.status,loadEsign:false,loading:false}});}// toast.error(error.message);\n});};};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/SampleStorageLocationAction.js"],"names":["rsapi","DEFAULT_RETURN","REQUEST_FAILURE","initRequest","sortData","constructOptionList","toast","Axios","getSelectedSampleStorageLocation","inputParam","userInfo","masterData","dispatch","post","parseInt","nsamplestoragelocationcode","then","response","selectedSampleStorageLocation","data","sampleStorageVersion","selectedSampleStorageVersion","type","payload","loading","catch","error","status","message","warn","getSelectedSampleStorageVersion","nsamplestorageversioncode","editSampleStorageLocation","isOnlyDraft","editId","selectedRecord","urlArray","getSampleStorageService","geStorageCategory","all","storageCategoryMap","undefined","storageCategoryList","get","map","item","value","label","treeData","JSON","parse","openModal","operation","loadTreeProperties","ncontrolcode","approveSampleStorageLocation","openPropertyModal","clickedItem","locationlastnode","containerfirstnode","containerlastnode","fetchStorageCategory","param","nstoragecategorycode","nfilterStorageCategory","text","expanded","editable","root","id","addId","changeStorageCategoryFilter","filterStorageCategory","inputData","copySampleStorageVersion","crudSampleStorageLocation","sampleStorageLocation","selectedStorageCategoryName","masterStatus","errorCode","loadEsign"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN, REQUEST_FAILURE } from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData, constructOptionList } from '../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\n\r\nexport function getSelectedSampleStorageLocation(inputParam, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/samplestoragelocation/getSelectedSampleStorageLocation\",\r\n            { 'userinfo': userInfo, \"nsamplestoragelocationcode\": parseInt(inputParam.nsamplestoragelocationcode) })\r\n            .then(response => {\r\n\r\n                masterData = {\r\n                    ...masterData, selectedSampleStorageLocation: response.data[\"selectedSampleStorageLocation\"],\r\n                    sampleStorageVersion: response.data[\"sampleStorageVersion\"],\r\n                    selectedSampleStorageVersion: response.data[\"selectedSampleStorageVersion\"]\r\n                };\r\n                sortData(masterData);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport function getSelectedSampleStorageVersion(inputParam, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/samplestoragelocation/getActiveSampleStorageVersion\",\r\n            { 'userinfo': userInfo, \"nsamplestorageversioncode\": parseInt(inputParam.nsamplestorageversioncode) })\r\n            .then(response => {\r\n\r\n                masterData = {\r\n                    ...masterData, selectedSampleStorageVersion: response.data[\"selectedSampleStorageVersion\"]\r\n                };\r\n                // sortData(masterData);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport function editSampleStorageLocation(inputParam, userInfo, isOnlyDraft,editId) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let selectedRecord = {};\r\n        let urlArray = [];\r\n        const getSampleStorageService = rsapi.post(\"/samplestoragelocation/getSampleStorageVersionByID\",\r\n            { 'userinfo': userInfo, \"nsamplestorageversioncode\": inputParam.nsamplestorageversioncode });\r\n\r\n        const geStorageCategory = rsapi.post(\"/storagecategory/getStorageCategory\",\r\n            { 'userinfo': userInfo });\r\n\r\n\r\n        urlArray = [getSampleStorageService, geStorageCategory];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n\r\n                // masterData = {\r\n                //     ...masterData\r\n                // };\r\n\r\n                selectedRecord[\"ssamplestoragelocationname\"] = response[0].data[\"selectedSampleStorageVersion\"][\"ssamplestoragelocationname\"]\r\n                const storageCategoryMap = constructOptionList(response[1].data || [], \"nstoragecategorycode\",\r\n                    \"sstoragecategoryname\", undefined, undefined, true);\r\n\r\n                const storageCategoryList = storageCategoryMap.get(\"OptionList\");\r\n\r\n                storageCategoryList.map(item => item.value === response[0].data[\"selectedSampleStorageVersion\"][\"nstoragecategorycode\"] ?\r\n                    selectedRecord[\"nstoragecategorycode\"] = {\r\n                        \"label\": item.label,\r\n                        \"value\": item.value,\r\n                        \"item\": item.item\r\n                    }\r\n                    : \"\");\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        // masterData,\r\n                        loading: false,\r\n                        treeData: JSON.parse(response[0].data[\"selectedSampleStorageVersion\"][\"jsondata\"].value).data,\r\n                        selectedRecord, openModal: true, operation: \"update\", loadTreeProperties: false, storageCategoryList,\r\n                        isOnlyDraft,ncontrolcode: editId\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function approveSampleStorageLocation(userInfo, masterData) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/samplestoragelocation/ApproveSampleStorageLocation\",\r\n            {\r\n                'userinfo': userInfo, \"approvalStatus\": masterData.selectedSampleStorageVersion[\"napprovalstatus\"], \"sampleStorageVersionCode\": masterData.selectedSampleStorageVersion[\"nsamplestorageversioncode\"],\r\n                \"sampleStorageLocationCode\": masterData.selectedSampleStorageVersion[\"nsamplestoragelocationcode\"]\r\n            })\r\n            .then(response => {\r\n\r\n                masterData = {\r\n                    ...masterData, sampleStorageVersion: response.data[\"sampleStorageVersion\"], selectedSampleStorageVersion: response.data[\"selectedSampleStorageVersion\"]\r\n                };\r\n                // sortData(masterData);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const openPropertyModal = (clickedItem,editId) => (dispatch) => {\r\n    let selectedRecord = {};\r\n    selectedRecord[\"locationlastnode\"] = clickedItem.item.locationlastnode === undefined ? false : clickedItem.item.locationlastnode;\r\n    selectedRecord[\"containerfirstnode\"] = clickedItem.item.containerfirstnode === undefined ? false : clickedItem.item.containerfirstnode;\r\n    selectedRecord[\"containerlastnode\"] = clickedItem.item.containerlastnode === undefined ? false : clickedItem.item.containerlastnode;\r\n    dispatch({\r\n        type: DEFAULT_RETURN,\r\n        payload: { selectedRecord, loadTreeProperties: true, openModal: true, clickedItem, operation: \"update\",  ncontrolcode: editId }\r\n    });\r\n};\r\n\r\nexport function fetchStorageCategory(param) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/storagecategory/getStorageCategory\",\r\n            { 'userinfo': param.userInfo })\r\n            .then(response => {\r\n\r\n                const storageCategoryMap = constructOptionList(response.data || [], \"nstoragecategorycode\",\r\n                    \"sstoragecategoryname\", undefined, undefined, true);\r\n\r\n                const storageCategoryList = storageCategoryMap.get(\"OptionList\");\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        storageCategoryList, openModal: true, selectedRecord: {nstoragecategorycode: param.nfilterStorageCategory}, loadTreeProperties: false,\r\n                        treeData: [\r\n                            {\r\n                                text: \"root\",\r\n                                expanded: true,\r\n                                editable: true,\r\n                                root: true,\r\n                                id: param.id,\r\n                            },\r\n                        ], operation: \"create\",\r\n                        loading: false,\r\n                        isOnlyDraft: false,\r\n                        ncontrolcode: param.addId\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const changeStorageCategoryFilter = (inputParam, filterStorageCategory) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/samplestoragelocation/getSampleStorageLocationByCategory\", inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                // sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            filterStorageCategory,\r\n                            nfilterStorageCategory: inputParam.inputData.nfilterStorageCategory,\r\n                            \r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function copySampleStorageVersion(inputParam, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/samplestoragelocation/copySampleStorageVersion\",\r\n            { 'userinfo': userInfo, \"sampleStorageVersionCode\": parseInt(inputParam.nsamplestorageversioncode), \r\n            \"sampleStorageLocationCode\": parseInt(inputParam.nsamplestoragelocationcode) })\r\n            .then(response => {\r\n\r\n                masterData = {\r\n                    ...masterData, selectedSampleStorageLocation: response.data[\"selectedSampleStorageLocation\"],\r\n                    sampleStorageVersion: response.data[\"sampleStorageVersion\"],\r\n                    selectedSampleStorageVersion: response.data[\"selectedSampleStorageVersion\"]\r\n                };\r\n                \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const crudSampleStorageLocation = (inputParam,masterData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/samplestoragelocation/\" + inputParam.operation + \"SampleStorageLocation\", {...inputParam.inputData})\r\n            .then(response => {               \r\n                // sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData,sampleStorageLocation: response.data[\"sampleStorageLocation\"], selectedSampleStorageLocation: response.data[\"selectedSampleStorageLocation\"],\r\n                            sampleStorageVersion: response.data[\"sampleStorageVersion\"], selectedSampleStorageVersion: response.data[\"selectedSampleStorageVersion\"],\r\n                            filterStorageCategory: response.data[\"filterStorageCategory\"], selectedStorageCategoryName: response.data[\"selectedStorageCategoryName\"]                          \r\n                            \r\n                        },\r\n                        openModal: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    dispatch({\r\n                      type: REQUEST_FAILURE,\r\n                      payload: {\r\n                        error: error.message,\r\n                        loading: false\r\n                      }\r\n                    });\r\n                  } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterStatus: error.response.data,\r\n                            errorCode: error.response.status,\r\n                            loadEsign: false,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                  }\r\n               \r\n                // toast.error(error.message);\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}