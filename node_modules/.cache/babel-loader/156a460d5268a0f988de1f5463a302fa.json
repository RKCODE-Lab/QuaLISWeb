{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\AddPricingTest.js\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Col, Row } from 'react-bootstrap';\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\n\nconst AddPricingTest = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormMultiSelect, {\n    name: \"ntestcode\",\n    label: props.intl.formatMessage({\n      id: \"IDS_TEST\"\n    }),\n    options: props.pricingTestList || [],\n    optionId: \"ntestcode\",\n    optionValue: \"stestname\",\n    value: props.selectedRecord[\"ntestcode\"] ? props.selectedRecord[\"ntestcode\"] || [] : [],\n    isMandatory: true,\n    isClearable: true,\n    alphabeticalSort: true,\n    onChange: value => props.onComboChange(value, \"ntestcode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddPricingTest);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/testmanagement/AddPricingTest.js"],"names":["React","injectIntl","Col","Row","FormMultiSelect","AddPricingTest","props","intl","formatMessage","id","pricingTestList","selectedRecord","value","onComboChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,eAAP,MAA4B,gEAA5B;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AACQ,IAAA,IAAI,EAAE,WADd;AAEQ,IAAA,KAAK,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFf;AAGQ,IAAA,OAAO,EAAEH,KAAK,CAACI,eAAN,IAAyB,EAH1C;AAIQ,IAAA,QAAQ,EAAC,WAJjB;AAKQ,IAAA,WAAW,EAAC,WALpB;AAMQ,IAAA,KAAK,EAAEJ,KAAK,CAACK,cAAN,CAAqB,WAArB,IAAoCL,KAAK,CAACK,cAAN,CAAqB,WAArB,KAAoC,EAAxE,GAA4E,EAN3F;AAOQ,IAAA,WAAW,EAAE,IAPrB;AAQQ,IAAA,WAAW,EAAE,IARrB;AASQ,IAAA,gBAAgB,EAAE,IAT1B;AAUQ,IAAA,QAAQ,EAAGC,KAAD,IAAWN,KAAK,CAACO,aAAN,CAAoBD,KAApB,EAA2B,WAA3B,CAV7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAoBH,CArBD;;AAuBA,eAAeX,UAAU,CAACI,cAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\n\r\nconst AddPricingTest = (props) => {\r\n    return(\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormMultiSelect\r\n                        name={\"ntestcode\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                        options={props.pricingTestList || []}\r\n                        optionId=\"ntestcode\"\r\n                        optionValue=\"stestname\"\r\n                        value={props.selectedRecord[\"ntestcode\"] ? props.selectedRecord[\"ntestcode\"] ||[]: []}\r\n                        isMandatory={true}\r\n                        isClearable={true}\r\n                        alphabeticalSort={true}\r\n                        onChange={(value) => props.onComboChange(value, \"ntestcode\")}\r\n                    />\r\n            </Col>\r\n\r\n        </Row>\r\n    );\r\n  \r\n}\r\n\r\nexport default injectIntl(AddPricingTest);"]},"metadata":{},"sourceType":"module"}