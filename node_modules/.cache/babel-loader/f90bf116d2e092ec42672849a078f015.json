{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{faBolt,faEye,faPencilAlt,faSync}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{Button,Card,Col,Nav,Row}from'react-bootstrap';import{ContentPanel}from'../../components/App.styles';import{ListWrapper}from'../../components/client-group.styles';import{ProductList}from'../testmanagement/testmaster-styled';//import SplitPane from \"react-splitter-layout\";\nimport SplitterLayout from\"react-splitter-layout\";import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{getsubSampleDetail,getTestDetail,getTestChildTabDetail,performAction,updateStore,updateDecision,getRegistrationType,getRegistrationSubType,getFilterStatus,getApprovalSample,getStatusCombo,validateEsignCredential,crudMaster,validateEsignforApproval,getApprovalVersion,getParameterEdit,filterTransactionList,checkListRecord,generateCOAReport,getSampleChildTabDetail,getAttachmentCombo,viewAttachment,deleteAttachment,getCommentsCombo,previewSampleReport,getFilterBasedTest,getEnforceCommentsHistory}from'../../actions';import CustomTabs from'../../components/custom-tabs/custom-tabs.component';import ApprovalResultsTab from'./ApprovalResultsTab';import{getControlMap,listDataFromDynamicArray,showEsign,sortData,constructOptionList,getSameRecordFromTwoArrays,convertDateValuetoString,rearrangeDateFormat}from'../../components/CommonScript';import{toast}from'react-toastify';import TransactionListMaster from'../../components/TransactionListMaster';import TransactionListMasterJson from'../../components/TransactionListMasterJson';import ApprovalFilter from'./ApprovalFilter';import{designProperties,transactionStatus,RegistrationType,RegistrationSubType}from'../../components/Enumeration';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import SampleInfoGrid from'./SampleInfoGrid';import SampleInfoView from'./SampleInfoView';import ApprovalInstrumentTab from'./ApprovalInstrumentTab';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import Esign from'../audittrail/Esign';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import EditApprovalParameter from'./EditApprovalParameter';//import ApprovalHistoryTab from './ApprovalHistoryTab';\nimport SampleApprovalHistory from'./SampleApprovalHistory';import ResultChangeHistoryTab from'./ResultChangeHistoryTab';import ApprovalTask from'./ApprovalTask';import{templateChangeHandler}from'../checklist/checklist/checklistMethods';import TemplateForm from'../checklist/checklist/TemplateForm';import Attachments from'../attachmentscomments/attachments/Attachments';import{onSaveSampleAttachment,onSaveTestAttachment}from'../attachmentscomments/attachments/AttachmentFunctions';import Comments from'../attachmentscomments/comments/Comments';import{onSaveTestComments}from'../attachmentscomments/comments/CommentFunctions';//import { Tooltip } from '@progress/kendo-react-tooltip';\nimport CustomPopOver from'../../components/customPopover';import ScrollBar from'react-perfect-scrollbar';import ApprovalPrintHistoryTab from'./ApprovalPrintHistoryTab';import ApprovalHistoryTab from'./ApprovalHistoryTab';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import DataGrid from'../../components/data-grid/data-grid.component';import ReportHistoryTab from'./ReportHistoryTab';// import ReactTooltip from 'react-tooltip';\nvar mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var Approval=/*#__PURE__*/function(_React$Component){_inherits(Approval,_React$Component);var _super=_createSuper(Approval);function Approval(props){var _this;_classCallCheck(this,Approval);_this=_super.call(this,props);_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.handleSubSamplePageChange=function(e){_this.setState({subSampleSkip:e.skip,subSampleTake:e.take});setTimeout(function(){_this._scrollBarRef.updateScroll();});};_this.showAPSampleinfo=function(){_this.setState({showSample:true,showTest:false});};_this.sampleInfoDataStateChange=function(event){_this.setState({sampleGridDataState:event.dataState});};_this.verticalPaneSizeChange=function(val){console.log(\"val\",val);_this.setState({initialVerticalWidth:val-150});};_this.downloadReport=function(input){var inputParam={inputData:{selectedRecord:_objectSpread({},input.inputData),userinfo:_this.props.Login.userInfo},classUrl:\"approval\",operation:\"view\",methodUrl:\"Report\"};_this.props.viewAttachment(inputParam);};_this.testTabDetail=function(){var testTabMap=new Map();var _this$state=_this.state,testskip=_this$state.testskip,testtake=_this$state.testtake;var testList=_this.props.Login.masterData.searchedTests?_toConsumableArray(_this.props.Login.masterData.searchedTests):_this.props.Login.masterData.AP_TEST||[];var editTestCommentsId=_this.state.controlMap.has(\"EditTestComment\")&&_this.state.controlMap.get(\"EditTestComment\").ncontrolcode;testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.APSelectedTest,\"ntransactiontestcode\");// let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\nvar ntransactiontestcode=_this.props.Login.masterData.APSelectedTest?_this.props.Login.masterData.APSelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\";if(_this.state.showTest){testTabMap.set(\"IDS_RESULTS\",/*#__PURE__*/React.createElement(ApprovalResultsTab,{userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,dataState:_this.state.resultDataState,dataStateChange:_this.testDataStateChange,screenName:\"IDS_RESULTS\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,getStatusCombo:_this.props.getStatusCombo,selectedId:_this.props.Login.masterData.selectedParamId,viewFile:_this.props.viewAttachment,checkListRecord:_this.props.checkListRecord,getEnforceCommentsHistory:_this.props.getEnforceCommentsHistory}));testTabMap.set(\"IDS_INSTRUMENT\",/*#__PURE__*/React.createElement(ApprovalInstrumentTab,{userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,dataState:_this.state.instrumentDataState,dataStateChange:_this.testDataStateChange,screenName:\"IDS_INSTRUMENT\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,selectedId:null}));// testTabMap.set(\"IDS_MATERIAL\", <ApprovalResultsTab\n//     userInfo={this.props.Login.userInfo}\n//     masterData={this.props.Login.masterData}\n//     inputParam={this.props.Login.inputParam}\n//     dataState={this.state.dataState}\n//     dataStateChange={this.testDataStateChange}\n//     screenName=\"IDS_MATERIAL\"\n//     controlMap={this.state.controlMap}\n//     userRoleControlRights={this.state.userRoleControlRights}\n//     selectedId={null}\n// />)\ntestTabMap.set(\"IDS_TASK\",/*#__PURE__*/React.createElement(ApprovalTask,{userInfo:_this.props.Login.userInfo,ResultUsedTasks:_this.props.Login.masterData.ResultUsedTasks,inputParam:_this.props.Login.inputParam,dataState:_this.state.taskDataState,dataStateChange:_this.testDataStateChange,screenName:\"IDS_TASK\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,selectedId:null}));testTabMap.set(\"IDS_TESTATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{screenName:\"IDS_TESTATTACHMENTS\",selectedMaster:selectedTestList,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,attachments:_this.props.Login.masterData.RegistrationTestAttachment||[],deleteRecord:_this.props.deleteAttachment,fetchRecord:_this.props.getAttachmentCombo,onSaveClick:_this.onAttachmentSaveClick,masterList:selectedTestList,masterAlertStatus:\"IDS_SELECTTESTTOADDATTACHEMENT\",addName:\"AddTestAttachment\",editName:\"EditTestAttachment\",deleteName:\"DeleteTestAttachment\",viewName:\"ViewTestAttachment\",methodUrl:\"TestAttachment\",nsubsampleneed:_this.props.Login.masterData.nneedsubsample,subFields:[_defineProperty({},designProperties.VALUE,\"stestsynonym\"),_defineProperty({},designProperties.VALUE,\"dcreateddate\")],deleteParam:{methodUrl:\"TestAttachment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTATTACHMENTS\"},editParam:{methodUrl:\"TestAttachment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTATTACHMENTS\",masterList:selectedTestList},selectedListName:\"IDS_TESTS\",displayName:\"stestsynonym\"}));testTabMap.set(\"IDS_TESTCOMMENTS\",/*#__PURE__*/React.createElement(Comments,{screenName:\"IDS_TESTCOMMENTS\",selectedMaster:selectedTestList,onSaveClick:_this.onCommentsSaveClick,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,Comments:_this.props.Login.masterData.RegistrationTestComment||[],fetchRecord:_this.props.getCommentsCombo,masterList:selectedTestList,masterAlertStatus:\"IDS_SELECTTESTTOADDCOMMENTS\",addName:\"AddTestComment\",editName:\"EditTestComment\",deleteName:\"DeleteTestComment\",methodUrl:\"TestComment\",isTestComment:false,primaryKeyField:\"ntestcommentcode\",dataState:_this.state.testCommentDataState,dataStateChange:_this.testDataStateChange,deleteParam:{methodUrl:\"TestComment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTCOMMENTS\"},editParam:{methodUrl:\"TestComment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTCOMMENTS\",operation:\"update\",masterList:selectedTestList,ncontrolCode:editTestCommentsId},selectedListName:\"IDS_TESTS\",displayName:\"stestsynonym\"}));testTabMap.set(\"IDS_RESULTCHANGEHISTORY\",/*#__PURE__*/React.createElement(ResultChangeHistoryTab,{userInfo:_this.props.Login.userInfo,ApprovalResultChangeHistory:_this.props.Login.masterData.ApprovalResultChangeHistory,inputParam:_this.props.Login.inputParam,dataState:_this.state.resultChangeDataState,dataStateChange:_this.testDataStateChange,screenName:\"IDS_RESULTCHANGEHISTORY\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,selectedId:null}));testTabMap.set(\"IDS_TESTAPPROVALHISTORY\",/*#__PURE__*/React.createElement(ApprovalHistoryTab,{userInfo:_this.props.Login.userInfo,ApprovalHistory:_this.props.Login.masterData.ApprovalHistory,inputParam:_this.props.Login.inputParam,dataState:_this.state.historyDataState,dataStateChange:_this.testDataStateChange,screenName:\"IDS_TESTAPPROVALHISTORY\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,selectedId:null}));}return testTabMap;};_this.onNumericInputOnChange=function(value,name){var selectedRecord=_this.state.selectedRecord;if(value===0||value===0.0){selectedRecord[name]=\"\";_this.setState({selectedRecord:selectedRecord});}else{selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});}};_this.onTestTabChange=function(tabProps){var activeTestTab=tabProps.screenName;if(activeTestTab!==_this.props.Login.activeTestTab){if(_this.props.Login.masterData.APSelectedTest&&_this.props.Login.masterData.APSelectedTest.length>0){var inputData={masterData:_this.props.Login.masterData,APSelectedTest:_this.props.Login.masterData.APSelectedTest,ntransactiontestcode:_this.props.Login.masterData.APSelectedTest?String(_this.props.Login.masterData.APSelectedTest.map(function(item){return item.ntransactiontestcode;}).join(\",\")):\"-1\",npreregno:_this.props.Login.masterData.selectedSample?_this.props.Login.masterData.selectedSample.map(function(item){return item.npreregno;}).join(\",\"):\"-1\",userinfo:_this.props.Login.userInfo,activeTestTab:activeTestTab,screenName:activeTestTab,resultDataState:_this.state.resultDataState,instrumentDataState:_this.state.instrumentDataState,materialDataState:_this.state.materialDataState,taskDataState:_this.state.taskDataState,documentDataState:_this.state.documentDataState,historyDataState:_this.state.historyDataState,resultChangeDataState:_this.state.resultChangeDataState,testCommentDataState:_this.state.testCommentDataState};_this.props.getTestChildTabDetail(inputData,true);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTEST\"}));}}};_this.onSampleTabChange=function(tabProps){var activeSampleTab=tabProps.screenName;if(activeSampleTab!==_this.props.Login.activeSampleTab){var inputData={masterData:_this.props.Login.masterData,selectedSample:_this.props.Login.masterData.selectedSample,npreregno:_this.props.Login.masterData.selectedSample?_this.props.Login.masterData.selectedSample.map(function(item){return item.npreregno;}).join(\",\"):\"-1\",userinfo:_this.props.Login.userInfo,screenName:activeSampleTab,activeSampleTab:activeSampleTab};_this.props.getSampleChildTabDetail(inputData);}};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});setTimeout(function(){_this._scrollBarRef.updateScroll();});};_this.handleTestPageChange=function(e){_this.setState({testskip:e.skip,testtake:e.take});};_this.checkRetestAction=function(action,ncontrolCode){var _this$state2=_this.state,testskip=_this$state2.testskip,testtake=_this$state2.testtake;var testList=_this.props.Login.masterData.searchedTests?_toConsumableArray(_this.props.Login.masterData.searchedTests):_toConsumableArray(_this.props.Login.masterData.AP_TEST);testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.APSelectedTest,\"ntransactiontestcode\");if(selectedTestList.length>0){if(action.ntransactionstatus===transactionStatus.RETEST){if(_this.props.Login.masterData.retestcount&&_this.props.Login.masterData.retestcount>1){if(selectedTestList.length>1){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTONETESTONLY\"}));}else{var updateInfo={typeName:DEFAULT_RETURN,data:{action:action,masterData:_this.props.Login.masterData,openChildModal:true,screenName:\"IDS_RETESTCOUNT\",operation:\"dynamic\"}};_this.props.updateStore(updateInfo);}}else{_this.performTestActions(action,ncontrolCode);}}else{_this.performTestActions(action,ncontrolCode);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTEST\"}));}};_this.performTestActions=function(action,ncontrolCode){if(action.ntransactionstatus===transactionStatus.RETEST&&_this.state.selectedRecord&&_this.state.selectedRecord.retestcount>_this.props.Login.masterData.retestcount){toast.info(_this.props.intl.formatMessage({id:\"IDS_MAX\"})+\": \"+_this.props.Login.masterData.retestcount);}else{var obj=convertDateValuetoString(_this.props.Login.masterData.realFromDate,_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var ntransCode=_this.props.Login.masterData.FilterStatusValue.ntransactionstatus;if(ntransCode===transactionStatus.ALL){ntransCode=_this.props.Login.masterData.FilterStatus.map(function(status){return status.ntransactionstatus;}).join(\",\");}else{ntransCode=ntransCode+\",\"+action.ntransactionstatus;}var _this$state3=_this.state,testskip=_this$state3.testskip,testtake=_this$state3.testtake;var testList=_this.props.Login.masterData.searchedTests?_toConsumableArray(_this.props.Login.masterData.searchedTests):_toConsumableArray(_this.props.Login.masterData.AP_TEST);testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.APSelectedTest,\"ntransactiontestcode\");var inputParam={inputData:{'performaction':{npreregno:selectedTestList.map(function(sample){return sample.npreregno;}).join(\",\"),ntransactionsamplecode:_this.props.Login.masterData.APSelectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\"),ntransactiontestcode:selectedTestList.map(function(test){return test.ntransactiontestcode;}).join(\",\"),nsectioncode:_this.props.Login.masterData.UserSectionValue?_this.props.Login.masterData.UserSectionValue.nsectioncode===-1?_this.props.Login.masterData.UserSection.map(function(section){return section.nsectioncode;}).join(','):String(_this.props.Login.masterData.UserSectionValue.nsectioncode):null,ntestcode:_this.props.Login.masterData.realTestValue&&_this.props.Login.masterData.realTestValue.ntestcode,nTransStatus:action.ntransactionstatus,ntransactionstatus:String(-1),nsampletypecode:_this.props.Login.masterData.realSampleTypeValue&&_this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,napprovalversioncode:_this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,nneedsubsample:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nneedsubsample||false,dfrom:obj.fromDate,dto:obj.toDate,nflag:2,ntype:1,userinfo:_this.props.Login.userInfo,APSelectedSample:_this.props.Login.masterData.APSelectedSample,APSelectedSubSample:_this.props.Login.masterData.APSelectedSubSample,APSelectedTest:_this.props.Login.masterData.APSelectedTest,retestcount:action.ntransactionstatus===transactionStatus.RETEST?_this.state.selectedRecord?_this.state.selectedRecord.retestcount||1:1:undefined,ncontrolCode:ncontrolCode,checkBoxOperation:3},userinfo:_this.props.Login.userInfo},masterData:_this.props.Login.masterData,methodUrl:\"performaction\",postParamList:_this.postParamList};if(action.nesignneed===transactionStatus.YES){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openChildModal:true,screenName:\"performaction\",operation:\"dynamic\"}};_this.props.updateStore(updateInfo);}else{_this.props.performAction(inputParam);}}};_this.updateDecision=function(action){var ntransCode=_this.props.Login.masterData.realFilterStatusValue.ntransactionstatus;if(ntransCode===transactionStatus.ALL){ntransCode=_this.props.Login.masterData.FilterStatus.map(function(status){return status.ntransactionstatus;}).join(\",\");}var obj=convertDateValuetoString(_this.props.Login.masterData.realFromDate,_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var _this$state4=_this.state,skip=_this$state4.skip,take=_this$state4.take;var sampleList=_toConsumableArray(_this.props.Login.masterData.AP_SAMPLE);sampleList=sampleList.splice(skip,skip+take);var selectedsampleList=getSameRecordFromTwoArrays(sampleList,_this.props.Login.masterData.selectedSample,\"npreregno\");if(selectedsampleList.length>0){var inputData={'updatedecision':{npreregno:selectedsampleList.map(function(sample){return sample.npreregno;}).join(\",\"),nTransStatus:action.ntransactionstatus,ntransactionstatus:String(ntransCode),dfrom:obj.fromDate,dto:obj.toDate,nsampletypecode:_this.props.Login.masterData.realSampleTypeValue&&_this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,nsectioncode:_this.props.Login.masterData.UserSectionValue?_this.props.Login.masterData.UserSectionValue.nsectioncode===-1?_this.props.Login.masterData.UserSection.map(function(section){return section.nsectioncode;}).join(','):String(_this.props.Login.masterData.UserSectionValue.nsectioncode):null,ntestcode:_this.props.Login.masterData.TestValue?_this.props.Login.masterData.TestValue.ntestcode:0,nflag:1,userinfo:_this.props.Login.userInfo,napprovalversioncode:String(selectedsampleList[0].napprovalversioncode),napprovalconfigcode:selectedsampleList[0].napprovalconfigcode,selectedSample:_this.props.Login.masterData.selectedSample},userinfo:_this.props.Login.userInfo};var inputParam={postParamList:_this.postParamList,inputData:inputData,masterData:_this.props.Login.masterData};if(action.nesignneed===transactionStatus.YES){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openChildModal:true,screenName:\"updatedecision\",operation:\"decision\"}};_this.props.updateStore(updateInfo);}else{_this.props.updateDecision(inputParam);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}};_this.onFilterComboChange=function(comboData,fieldName){if(comboData){var obj=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);var inputParamData={};if(fieldName==='nsampletypecode'){if(comboData.value!==_this.props.Login.masterData.SampleTypeValue.nsampletypecode){inputParamData={nflag:2,dfrom:obj.fromDate,dto:obj.toDate,nsampletypecode:comboData.value,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,SampleTypeValue:comboData.item};_this.props.getRegistrationType(inputParamData);}}else if(fieldName==='nregtypecode'){if(comboData.value!==_this.props.Login.masterData.RegTypeValue.nregtypecode){inputParamData={nflag:3,dfrom:obj.fromDate,dto:obj.toDate,nsampletypecode:_this.props.Login.masterData.SampleTypeValue.nsampletypecode,nregtypecode:comboData.value,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,RegTypeValue:comboData.item};_this.props.getRegistrationSubType(inputParamData);}}else if(fieldName==='nregsubtypecode'){if(comboData.value!==_this.props.Login.masterData.RegSubTypeValue.nregsubtypecode){var inputData={nflag:4,dfrom:obj.fromDate,dto:obj.toDate,nsampletypecode:_this.props.Login.masterData.SampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.RegTypeValue.nregtypecode,nregsubtypecode:comboData.value,userinfo:_this.props.Login.userInfo,nsectioncode:_this.props.Login.masterData.UserSectionValue.nsectioncode===-1?_this.props.Login.masterData.UserSection.map(function(item){return item.nsectioncode;}).join(\",\"):_this.props.Login.masterData.UserSectionValue.nsectioncode};inputParamData={inputData:inputData,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{RegSubTypeValue:comboData.item})};_this.props.getApprovalVersion(inputParamData);}}else if(fieldName==='napproveconfversioncode'){if(comboData.value!==_this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode){// let masterData = { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item }\n// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { masterData }\n// }\n// this.props.updateStore(updateInfo);\ninputParamData={nflag:4,dfrom:obj.fromDate,dto:obj.toDate,nsampletypecode:_this.props.Login.masterData.SampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.RegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,napprovalversioncode:comboData.value,userinfo:_this.props.Login.userInfo,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{ApprovalVersionValue:comboData.item}),RegSubTypeValue:_this.props.Login.masterData.RegSubTypeValue,nsectioncode:_this.props.Login.masterData.UserSectionValue.nsectioncode===-1?_this.props.Login.masterData.UserSection.map(function(item){return item.nsectioncode;}).join(\",\"):_this.props.Login.masterData.UserSectionValue.nsectioncode};_this.props.getFilterStatus(inputParamData);}}else if(fieldName==='nsectioncode'){if(comboData.value!==_this.props.Login.masterData.UserSectionValue.nsectioncode){// let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\ninputParamData={dfrom:obj.fromDate,dto:obj.toDate,nsampletypecode:_this.props.Login.masterData.SampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.RegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,napprovalversioncode:_this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,userinfo:_this.props.Login.userInfo,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{UserSectionValue:comboData.item}),RegSubTypeValue:_this.props.Login.masterData.RegSubTypeValue,ntransactionstatus:_this.props.Login.masterData.FilterStatusValue.ntransactionstatus,nsectioncode:comboData.value===-1?_this.props.Login.masterData.UserSection.map(function(item){return item.nsectioncode;}).join(\",\"):comboData.value,stransactionstatus:_this.props.Login.masterData.FilterStatusValue.ntransactionstatus===0?_this.props.Login.masterData.FilterStatus.map(function(item){return item.ntransactionstatus;}).join(\",\"):_this.props.Login.masterData.FilterStatusValue.ntransactionstatus};_this.props.getFilterBasedTest(inputParamData);}}else if(fieldName==='njobstatuscode'){if(comboData.value!==_this.props.Login.masterData.JobStatusValue.njobstatuscode){var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{JobStatusValue:comboData.item});var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:masterData}};_this.props.updateStore(updateInfo);}}else if(fieldName==='ntestcode'){if(comboData.value!==_this.props.Login.masterData.TestValue.ntestcode){var _masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{TestValue:comboData.item});var _updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_masterData}};_this.props.updateStore(_updateInfo);}}else{if(comboData.value!==_this.props.Login.masterData.FilterStatusValue.ntransactionstatus){//  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n//  const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//    data: { masterData }\n// }\ninputParamData={dfrom:obj.fromDate,dto:obj.toDate,nsampletypecode:_this.props.Login.masterData.SampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.RegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,napprovalversioncode:_this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,userinfo:_this.props.Login.userInfo,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{FilterStatusValue:comboData.item}),RegSubTypeValue:_this.props.Login.masterData.RegSubTypeValue,ntransactionstatus:comboData.value,stransactionstatus:comboData.value===0?_this.props.Login.masterData.FilterStatus.map(function(item){return item.ntransactionstatus;}).join(\",\"):comboData.value,nsectioncode:_this.props.Login.masterData.UserSectionValue.nsectioncode===-1?_this.props.Login.masterData.UserSection.map(function(item){return item.nsectioncode;}).join(\",\"):_this.props.Login.masterData.UserSectionValue.nsectioncode};_this.props.getFilterBasedTest(inputParamData);}}}};_this.onComboChange=function(comboData){if(comboData){var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{GradeValue:comboData});var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:masterData}};_this.props.updateStore(updateInfo);}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.handleDateChange=function(dateName,dateValue){if(dateValue===null){dateValue=new Date();}var dfrom=_this.props.Login.masterData.fromDate?rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterData.fromDate):new Date();var dto=_this.props.Login.masterData.toDate?rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterData.toDate):new Date();var obj={};if(dateName==='fromDate'){obj=convertDateValuetoString(dateValue,dto,_this.props.Login.userInfo);dfrom=obj.fromDate;dto=obj.toDate;}else{obj=convertDateValuetoString(dfrom,dateValue,_this.props.Login.userInfo);dfrom=obj.fromDate;dto=obj.toDate;}var inputParam={inputData:{nflag:2,nregtypecode:_this.props.Login.masterData.RegTypeValue&&_this.props.Login.masterData.RegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.RegSubTypeValue&&_this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,dfrom:String(dfrom),dto:String(dto),userinfo:_this.props.Login.userInfo},masterData:_this.props.Login.masterData};_this.props.getApprovalVersion(inputParam);};_this.changeMandatory=function(event,dataItem){var selectedRecord=_this.state.selectedRecord||{};var value=event.currentTarget.checked?transactionStatus.YES:transactionStatus.NO;selectedRecord[\"approvalParameterEdit\"]=_objectSpread(_objectSpread({},selectedRecord[\"approvalParameterEdit\"]),{},_defineProperty({},dataItem.ntransactionresultcode,value));_this.setState({selectedRecord:selectedRecord});};_this.onReload=function(){var _this$props$Login$mas=_this.props.Login.masterData,realFromDate=_this$props$Login$mas.realFromDate,realToDate=_this$props$Login$mas.realToDate,realSampleTypeValue=_this$props$Login$mas.realSampleTypeValue,realRegTypeValue=_this$props$Login$mas.realRegTypeValue,realRegSubTypeValue=_this$props$Login$mas.realRegSubTypeValue,realFilterStatusValue=_this$props$Login$mas.realFilterStatusValue,realApprovalVersionValue=_this$props$Login$mas.realApprovalVersionValue,realUserSectionValue=_this$props$Login$mas.realUserSectionValue,realTestValue=_this$props$Login$mas.realTestValue;var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{realFromDate:realFromDate,realToDate:realToDate,realSampleTypeValue:realSampleTypeValue,realRegTypeValue:realRegTypeValue,realRegSubTypeValue:realRegSubTypeValue,realFilterStatusValue:realFilterStatusValue,realApprovalVersionValue:realApprovalVersionValue,realUserSectionValue:realUserSectionValue,realTestValue:realTestValue});var inputData={npreregno:\"0\",nneedsubsample:realRegSubTypeValue&&realRegSubTypeValue.nneedsubsample||false,nsampletypecode:realSampleTypeValue&&realSampleTypeValue.nsampletypecode||-1,nregtypecode:realRegTypeValue&&realRegTypeValue.nregtypecode||-1,nregsubtypecode:realRegSubTypeValue&&realRegSubTypeValue.nregsubtypecode||-1,ntransactionstatus:realFilterStatusValue&&realFilterStatusValue.ntransactionstatus!==undefined||realFilterStatusValue.ntransactionstatus!=='0'?String(realFilterStatusValue.ntransactionstatus):\"-1\",napprovalconfigcode:realApprovalVersionValue?realApprovalVersionValue.napprovalconfigcode||-1:null,napprovalversioncode:realApprovalVersionValue&&realApprovalVersionValue.napprovalconfigversioncode?String(realApprovalVersionValue.napprovalconfigversioncode):null,nsectioncode:realUserSectionValue?realUserSectionValue.nsectioncode===-1?_this.props.Login.masterData.UserSection.map(function(section){return section.nsectioncode;}).join(','):String(realUserSectionValue.nsectioncode):null,ntestcode:realTestValue&&realTestValue.ntestcode?realTestValue.ntestcode:-1,userinfo:_this.props.Login.userInfo,activeTestTab:_this.props.Login.activeTestTab||\"\",activeSampleTab:_this.props.Login.activeSampleTab||\"\",checkBoxOperation:3,ntype:2};if(inputData.nsampletypecode!==-1&&inputData.nregtypecode!==-1&&inputData.nregsubtypecode!==-1&&inputData.ntransactionstatus!==\"-1\"&&inputData.napprovalconfigcode!==-1&&inputData.napprovalversioncode!==\"-1\"&&realFilterStatusValue.sfilterstatus!==null){var obj=convertDateValuetoString(realFromDate,realToDate,_this.props.Login.userInfo);inputData['dfrom']=obj.fromDate;inputData['dto']=obj.toDate;var inputParam={masterData:masterData,inputData:inputData,searchSampleRef:_this.searchSampleRef,searchSubSampleRef:_this.searchSubSampleRef,searchTestRef:_this.searchTestRef,skip:_this.state.skip,take:_this.state.take,testskip:_this.state.testskip,testtake:_this.state.testtake,resultDataState:_this.state.resultDataState,instrumentDataState:_this.state.instrumentDataState,materialDataState:_this.state.materialDataState,taskDataState:_this.state.taskDataState,documentDataState:_this.state.documentDataState,resultChangeDataState:_this.state.resultChangeDataState,testCommentDataState:_this.state.testCommentDataState,historyDataState:_this.state.historyDataState,samplePrintHistoryDataState:_this.state.samplePrintHistoryDataState,sampleHistoryDataState:_this.state.sampleHistoryDataState};_this.props.getApprovalSample(inputParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.onFilterSubmit=function(){var obj=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);var realFromDate=obj.fromDate;var realToDate=obj.toDate;// let realFromDate = new Date(this.props.Login.masterData.fromDate)\n// let realToDate = new Date(this.props.Login.masterData.toDate)\nvar realSampleTypeValue=_this.props.Login.masterData.SampleTypeValue&&_this.props.Login.masterData.SampleTypeValue;var realRegTypeValue=_this.props.Login.masterData.RegTypeValue&&_this.props.Login.masterData.RegTypeValue;var realRegSubTypeValue=_this.props.Login.masterData.RegSubTypeValue&&_this.props.Login.masterData.RegSubTypeValue;var realFilterStatusValue=_this.props.Login.masterData.FilterStatusValue&&_this.props.Login.masterData.FilterStatusValue;var realApprovalVersionValue=_this.props.Login.masterData.ApprovalVersionValue&&_this.props.Login.masterData.ApprovalVersionValue;var realUserSectionValue=_this.props.Login.masterData.UserSectionValue&&_this.props.Login.masterData.UserSectionValue;var realTestValue=_this.props.Login.masterData.TestValue&&_this.props.Login.masterData.TestValue;var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{realFromDate:realFromDate,realToDate:realToDate,realSampleTypeValue:realSampleTypeValue,realRegTypeValue:realRegTypeValue,realRegSubTypeValue:realRegSubTypeValue,realFilterStatusValue:realFilterStatusValue,realApprovalVersionValue:realApprovalVersionValue,realUserSectionValue:realUserSectionValue,realTestValue:realTestValue});var inputData={npreregno:\"0\",nsampletypecode:_this.props.Login.masterData.SampleTypeValue&&_this.props.Login.masterData.SampleTypeValue.nsampletypecode||-1,nregtypecode:parseInt(_this.props.Login.masterData.RegTypeValue&&_this.props.Login.masterData.RegTypeValue.nregtypecode)||-1,nregsubtypecode:parseInt(_this.props.Login.masterData.RegSubTypeValue&&_this.props.Login.masterData.RegSubTypeValue.nregsubtypecode)||-1,ntransactionstatus:_this.props.Login.masterData.FilterStatusValue&&_this.props.Login.masterData.FilterStatusValue.ntransactionstatus!==undefined||_this.props.Login.masterData.FilterStatusValue.ntransactionstatus!=='0'?String(_this.props.Login.masterData.FilterStatusValue.ntransactionstatus):\"-1\",napprovalconfigcode:_this.props.Login.masterData.ApprovalVersionValue?_this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode||-1:null,napprovalversioncode:_this.props.Login.masterData.ApprovalVersionValue&&_this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode?String(_this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode):null,nsectioncode:_this.props.Login.masterData.UserSectionValue?_this.props.Login.masterData.UserSectionValue.nsectioncode===-1?_this.props.Login.masterData.UserSection.map(function(section){return section.nsectioncode;}).join(','):String(_this.props.Login.masterData.UserSectionValue.nsectioncode):null,ntestcode:_this.props.Login.masterData.TestValue?_this.props.Login.masterData.TestValue.ntestcode:-1,nneedsubsample:_this.props.Login.masterData.RegSubTypeValue&&_this.props.Login.masterData.RegSubTypeValue.nneedsubsample||-1,userinfo:_this.props.Login.userInfo,activeTestTab:_this.props.Login.activeTestTab,activeSampleTab:_this.props.Login.activeSampleTab,checkBoxOperation:3,ntype:2};if(inputData.nsampletypecode!==-1&&inputData.nregtypecode!==-1&&inputData.nregsubtypecode!==-1&&inputData.ntransactionstatus!==\"-1\"&&inputData.napprovalconfigcode!==-1&&inputData.napprovalversioncode!==\"-1\"&&realFilterStatusValue.sfilterstatus!==null&&inputData.ntestcode!==undefined){// let obj = this.covertDatetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate)\ninputData['dfrom']=obj.fromDate;inputData['dto']=obj.toDate;var inputParam={masterData:masterData,inputData:inputData,searchSampleRef:_this.searchSampleRef,searchSubSampleRef:_this.searchSubSampleRef,searchTestRef:_this.searchTestRef,skip:_this.state.skip,take:_this.state.take,testskip:_this.state.testskip,testtake:_this.state.testtake,resultDataState:_this.state.resultDataState,instrumentDataState:_this.state.instrumentDataState,materialDataState:_this.state.materialDataState,taskDataState:_this.state.taskDataState,documentDataState:_this.state.documentDataState,resultChangeDataState:_this.state.resultChangeDataState,testCommentDataState:_this.state.testCommentDataState,historyDataState:_this.state.historyDataState,samplePrintHistoryDataState:_this.state.samplePrintHistoryDataState,sampleHistoryDataState:_this.state.sampleHistoryDataState};_this.props.getApprovalSample(inputParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.testDataStateChange=function(event){switch(_this.props.Login.activeTestTab){case\"IDS_RESULTS\":_this.setState({resultDataState:event.dataState});break;case\"IDS_INSTRUMENT\":_this.setState({instrumentDataState:event.dataState});break;case\"IDS_MATERIAL\":_this.setState({materialDataState:event.dataState});break;case\"IDS_TASK\":_this.setState({taskDataState:event.dataState});break;case\"IDS_TESTATTACHMENTS\":_this.setState({instrumentDataState:event.dataState});break;case\"IDS_TESTCOMMENTS\":_this.setState({testCommentDataState:event.dataState});break;case\"IDS_DOCUMENTS\":_this.setState({documentDataState:event.dataState});break;case\"IDS_RESULTCHANGEHISTORY\":_this.setState({resultChangeDataState:event.dataState});break;case\"IDS_TESTAPPROVALHISTORY\":_this.setState({historyDataState:event.dataState});break;default:_this.setState({resultDataState:event.dataState});break;}};_this.sampleGridDataStateChange=function(event){_this.setState({sampleGridDataState:event.dataState});};_this.sampleDataStateChange=function(event){switch(_this.props.Login.activeSampleTab){case\"IDS_SAMPLEINFO\":_this.setState({sampleGridDataState:event.dataState});break;case\"IDS_SAMPLEAPPROVALHISTORY\":_this.setState({sampleHistoryDataState:event.dataState});break;case\"IDS_PRINTHISTORY\":_this.setState({samplePrintHistoryDataState:event.dataState});break;case\"IDS_REPORTHISTORY\":_this.setState({reportHistoryDataState:event.dataState});break;default:_this.setState({sampleGridDataState:event.dataState});break;}};_this.onSaveClick=function(saveType,formRef){var masterData=_this.props.Login.masterData;var inputData={};var inputParam={};var ok=true;inputData[\"userinfo\"]=_this.props.Login.userInfo;if(_this.props.Login.operation==='enforce'){inputData[\"enforcestatus\"]={ngradecode:_this.props.Login.masterData.GradeValue.value||-1,ntransactiontestcode:_this.state.selectedRecord.ntransactiontestcode,ntransactionresultcode:_this.state.selectedRecord.ntransactionresultcode,senforcestatuscomment:_this.state.selectedRecord.senforcestatuscomment||\"\",selectedTestCode:_this.props.Login.masterData.APSelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\")};inputParam={methodUrl:\"EnforceStatus\",classUrl:'approval',inputData:inputData,postParam:{selectedObject:\"APSelectedTest\",primaryKeyField:\"ntransactiontestcode\"},operation:\"update\"};}else if(_this.props.Login.screenName===\"IDS_SAMPLEATTACHMENTS\"){var saveParam={userInfo:_this.props.Login.userInfo,selectedRecord:_this.state.selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation};inputParam=onSaveSampleAttachment(saveParam);}else{var approvalparameter=[];if(_this.state.selectedRecord.approvalParameterEdit){Object.keys(_this.state.selectedRecord.approvalParameterEdit).map(function(key){return approvalparameter.push({ntransactionresultcode:key,nreportmandatory:_this.state.selectedRecord.approvalParameterEdit[key]});});inputData[\"approvalparameter\"]=approvalparameter;inputParam={methodUrl:\"ApprovalParameter\",classUrl:'approval',inputData:inputData,postParam:{selectedObject:\"APSelectedTest\",primaryKeyField:\"ntransactiontestcode\"},operation:\"update\"};}else{ok=false;_this.handleClose();}}if(ok){if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openChildModal:true,operation:_this.props.Login.operation,screenName:\"IDS_ENFORCESTATUS\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openChildModal\");}}};_this.handleClose=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var openChildModal=_this.props.Login.openChildModal;var selectedRecord=_this.props.Login.selectedRecord;var templateData=_this.props.Login.templateData;var operation=_this.props.Login.operation;var openTemplateModal=_this.props.Login.openTemplateModal;if(_this.props.Login.loadEsign){if(operation===\"delete\"||operation===\"dynamic\"||operation==='reportgeneration'||_this.props.Login.operation==='decision'){loadEsign=false;openModal=false;openChildModal=false;selectedRecord={};templateData={};operation=undefined;}else{loadEsign=false;}}else{openTemplateModal=false;openModal=false;openChildModal=false;selectedRecord={};templateData={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,openChildModal:openChildModal,loadEsign:loadEsign,selectedRecord:selectedRecord,templateData:templateData,selectedParamId:null,operation:operation,openTemplateModal:openTemplateModal}};_this.props.updateStore(updateInfo);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData,operation:_this.props.Login.operation};if(_this.props.Login.operation==='dynamic'||_this.props.Login.operation==='reportgeneration'||_this.props.Login.operation==='decision'){_this.props.validateEsignforApproval(inputParam,\"openChildModal\");}else{_this.props.validateEsignCredential(inputParam,\"openChildModal\");}};_this.onTemplateInputChange=function(event,control){var selectedRecord=templateChangeHandler(1,_this.state.selectedRecord,event,control);_this.setState({selectedRecord:selectedRecord});};_this.onTemplateComboChange=function(comboData,control){var selectedRecord=templateChangeHandler(2,_this.state.selectedRecord,comboData,control);_this.setState({selectedRecord:selectedRecord});};_this.onTemplateDateChange=function(dateData,control){var selectedRecord=templateChangeHandler(3,_this.state.selectedRecord,dateData,control);_this.setState({selectedRecord:selectedRecord});};_this.onCommentsSaveClick=function(saveType,formRef,selectedRecord){var masterData=_this.props.Login.masterData;var inputData={};var inputParam={};inputData[\"userinfo\"]=_this.props.Login.userInfo;var _this$state5=_this.state,testskip=_this$state5.testskip,testtake=_this$state5.testtake;var testList=_this.props.Login.masterData.searchedTests?_toConsumableArray(_this.props.Login.masterData.searchedTests):_toConsumableArray(_this.props.Login.masterData.AP_TEST);testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.APSelectedTest,\"ntransactiontestcode\");if(selectedTestList.length>0){if(_this.props.Login.screenName===\"IDS_TESTCOMMENTS\"){var saveParam={userInfo:_this.props.Login.userInfo,isTestComment:_this.props.isTestComment,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,ntransactiontestcode:_this.props.Login.masterData.APSelectedTest?_this.props.Login.masterData.APSelectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\"};inputParam=onSaveTestComments(saveParam,selectedTestList);}if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:_this.props.Login.operation,screenName:_this.props.Login.screenName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openCommentModal\");}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTEST\"}));}};_this.onAttachmentSaveClick=function(saveType,formRef,selectedRecord){var masterData=_this.props.Login.masterData;var inputData={};var inputParam={};var _this$state6=_this.state,testskip=_this$state6.testskip,testtake=_this$state6.testtake,skip=_this$state6.skip,take=_this$state6.take;var testList=_this.props.Login.masterData.searchedTests?_toConsumableArray(_this.props.Login.masterData.searchedTests):_toConsumableArray(_this.props.Login.masterData.AP_TEST);testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.APSelectedTest,\"ntransactiontestcode\");var sampleList=_this.props.Login.masterData.searchedSample?_toConsumableArray(_this.props.Login.masterData.searchedSample):_toConsumableArray(_this.props.Login.masterData.AP_SAMPLE);sampleList=sampleList.slice(skip,skip+take);var selectedSampleList=getSameRecordFromTwoArrays(sampleList,_this.props.Login.masterData.APSelectedSample,\"npreregno\");inputData[\"userinfo\"]=_this.props.Login.userInfo;var ok=true;if(_this.props.Login.screenName===\"IDS_SAMPLEATTACHMENTS\"){var saveParam={userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,selectedMaster:_this.props.selectedMaster,npreregno:_this.props.Login.masterData.APSelectedSample?_this.props.Login.masterData.APSelectedSample.map(function(x){return x.npreregno;}).join(\",\"):\"-1\"};if(selectedSampleList.length>0){inputParam=onSaveSampleAttachment(saveParam,selectedSampleList);}else{ok=false;toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}}else if(_this.props.Login.screenName===\"IDS_TESTATTACHMENTS\"){var _saveParam={userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,selectedMaster:_this.props.selectedMaster,ntransactiontestcode:_this.props.Login.masterData.APSelectedTest?_this.props.Login.masterData.APSelectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\"};if(selectedTestList.length>0){inputParam=onSaveTestAttachment(_saveParam,selectedTestList);}else{ok=false;toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}}if(ok){if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:_this.props.Login.operation,screenName:_this.props.Login.screenName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openAttachmentModal\");}}};_this.generateCOAReport=function(inputData,ncontrolCode){var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var inputParam={reporparam:inputData};var updateInfo={typeName:DEFAULT_RETURN,data:{openChildModal:true,loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:\"reportgeneration\",screenName:_this.props.Login.screenName}};_this.props.updateStore(updateInfo);}else{_this.props.generateCOAReport(inputData);}};_this.searchSampleRef=React.createRef();_this.searchSubSampleRef=React.createRef();_this.searchTestRef=React.createRef();_this.formRef=React.createRef();_this.state={sampleGridDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},resultDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},instrumentDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},materialDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},taskDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},testCommentDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'stestsynonym'}]},documentDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},resultChangeDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},sampleHistoryDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},reportHistoryDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},historyDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},dataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},samplePrintHistoryDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},userRoleControlRights:[],controlMap:new Map(),masterStatus:\"\",error:\"\",oldComboData:{},selectedRecord:{},operation:\"\",screenName:undefined,showSample:false,showTest:true,sampleListColumns:[],subSampleListColumns:[],testListColumns:[],TableExpandableItem:[],SingleItem:[],SampleGridItem:[],SampleGridExpandableItem:[],sampleListMainField:[],subSampleListMainField:[],testListMainField:[],testMoreField:[],firstPane:0,paneHeight:0,secondPaneHeight:0,tabPane:0,SampletypeList:[],RegistrationTypeList:[],RegistrationSubTypeList:[],FilterStatusList:[],ConfigVersionList:[],UserSectionList:[],TestList:[],skip:0,take:_this.props.Login.settings&&_this.props.Login.settings[3],testskip:0,testtake:_this.props.Login.settings&&_this.props.Login.settings[12],splitChangeWidthPercentage:22,subSampleSkip:0,subSampleTake:5};//this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\nreturn _this;}_createClass(Approval,[{key:\"componentDidMount\",value:// onSecondaryPaneSizeChange = (e, val) => {\n//     this.setState({\n//         firstPane: e - val,\n//         tabPane: e - 80,\n//         childPane: this.state.parentHeight - e - 80\n//     })\n// }\nfunction componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({firstPane:height-80,parentHeight:height-50});}}},{key:\"constructDesign\",value:function constructDesign(list){var newList=[];if(list.length>0){list.map(function(i){var _newList$push;newList.push((_newList$push={},_defineProperty(_newList$push,designProperties.LABEL,i),_defineProperty(_newList$push,designProperties.VALUE,i),_newList$push));});}return newList;}},{key:\"showAPTestList\",value:function showAPTestList(){this.setState({showTest:true,showSample:false});}},{key:\"gridfillingColumn\",value:function gridfillingColumn(data){var _this2=this;//  const tempArray = [];\nvar temparray=data&&data.map(function(option){return{\"idsName\":option[designProperties.LABEL][_this2.props.Login.userInfo.slanguagetypecode],\"dataField\":option[designProperties.VALUE],\"width\":\"200px\",\"columnSize\":\"3\"};});return temparray;}},{key:\"render\",value:function render(){var _this3=this;var obj=convertDateValuetoString(this.props.Login.masterData.realFromDate,this.props.Login.masterData.realToDate,this.props.Login.userInfo);// let obj = this.covertDatetoString(this.props.Login.masterData.realFromDate || this.props.Login.masterData.fromDate || new Date(), this.props.Login.masterData.realToDate || this.props.Login.masterData.toDate || new Date())\nvar sampleSearchField=[\"sarno\",\"dregdate\",\"sdecisionstatus\",\"ssampletypestatus\",\"smanuflotno\",\"smanufname\",\"smanufsitename\",\"sproductcatname\",\"sproductname\",\"sspecname\"];if(this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode===RegistrationSubType.ROUTINE){sampleSearchField=[\"sarno\",\"sproductname\",\"sproductcatname\",\"sregsubtypename\",\"sregtypename\",\"sspecname\",\"smanufname\",\"sstorageconditionname\",\"sclientname\",\"scontainertype\",\"sdeadline\",\"sdecisionstatus\",\"sdeviationcomments\",\"sdispositionname\",\"slotno\",\"sbatchno\",\"sourfile\",\"speriodname\",\"spriorityname\",\"sreceiveddate\",\"sremarks\",\"sreportremarks\",\"ssamplecondition\",\"ssuppliername\",\"stotalqty\",\"stransdisplaystatus\"];}var filterSampleParam={inputListName:\"AP_SAMPLE\",selectedObject:\"APSelectedSample\",primaryKeyField:\"npreregno\",fetchUrl:\"approval/getApprovalSubSample\",childRefs:[{ref:this.searchSubSampleRef,childFilteredListName:\"searchedSubSample\"},{ref:this.searchTestRef,childFilteredListName:\"searchedTests\"}],fecthInputObject:{ntype:2,nflag:2,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode||-1,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode||-1,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode||-1,nneedsubsample:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nneedsubsample||false,ntransactionstatus:this.props.Login.masterData.realFilterStatusValue&&this.props.Login.masterData.realFilterStatusValue.ntransactionstatus!==undefined?String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus):\"-1\",napprovalconfigcode:this.props.Login.masterData.realApprovalVersionValue?this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode||-1:null,napprovalversioncode:this.props.Login.masterData.realApprovalVersionValue&&this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode?String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode):null,nsectioncode:this.props.Login.masterData.realUserSectionValue?this.props.Login.masterData.realUserSectionValue.nsectioncode===-1?this.props.Login.masterData.UserSection.map(function(section){return section.nsectioncode;}).join(','):String(this.props.Login.masterData.realUserSectionValue.nsectioncode):null,ntestcode:this.props.Login.masterData.TestValue&&this.props.Login.masterData.TestValue.ntestcode,dfrom:obj.fromDate,dto:obj.toDate,userinfo:this.props.Login.userInfo,checkBoxOperation:3},masterData:this.props.Login.masterData,// searchFieldList: [\"sarno\", \"dregdate\", \"sdecisionstatus\", \"ssampletypestatus\", \"smanuflotno\", \"smanufname\", \"smanufsitename\", \"sproductcatname\", \"sproductname\", \"sspecname\"],\nsearchFieldList:sampleSearchField,changeList:[\"AP_SUBSAMPLE\",\"AP_TEST\",\"ApprovalParameter\",\"ApprovalResultChangeHistory\",\"ApprovalHistory\",\"SampleApprovalHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationAttachment\",\"APSelectedSample\",\"APSelectedSubSample\",\"APSelectedTest\",\"PrintHistory\",\"COAHistory\"]};var filterSubSampleParam={inputListName:\"AP_SUBSAMPLE\",selectedObject:\"APSelectedSubSample\",primaryKeyField:\"ntransactionsamplecode\",fetchUrl:\"approval/getApprovalTest\",childRefs:[{ref:this.searchTestRef,childFilteredListName:\"searchedTests\"}],fecthInputObject:{ntype:2,nflag:2,npreregno:this.props.Login.masterData.APSelectedSample?this.props.Login.masterData.APSelectedSample.map(function(sample){return sample.npreregno;}).join(\",\"):\"-1\",nsampletypecode:this.props.Login.masterData.SampleTypeValue&&this.props.Login.masterData.SampleTypeValue.nsampletypecode||-1,nregtypecode:this.props.Login.masterData.RegTypeValue&&this.props.Login.masterData.RegTypeValue.nregtypecode||-1,nregsubtypecode:this.props.Login.masterData.RegSubTypeValue&&this.props.Login.masterData.RegSubTypeValue.nregsubtypecode||-1,nneedsubsample:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nneedsubsample||false,ntransactionstatus:this.props.Login.masterData.FilterStatusValue&&this.props.Login.masterData.FilterStatusValue.ntransactionstatus!==undefined?String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus):\"-1\",napprovalconfigcode:this.props.Login.masterData.ApprovalVersionValue?this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode||-1:null,napprovalversioncode:this.props.Login.masterData.ApprovalVersionValue&&this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode?this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode:null,nsectioncode:this.props.Login.masterData.UserSectionValue?this.props.Login.masterData.UserSectionValue.nsectioncode===-1?this.props.Login.masterData.UserSection.map(function(section){return section.nsectioncode;}).join(','):String(this.props.Login.masterData.UserSectionValue.nsectioncode):null,dfrom:obj.fromDate,dto:obj.toDate,userinfo:this.props.Login.userInfo,checkBoxOperation:3},masterData:this.props.Login.masterData,searchFieldList:[\"sarno\",\"ssamplearno\"],changeList:[\"AP_TEST\",\"ApprovalParameter\",\"ApprovalResultChangeHistory\",\"ApprovalHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationAttachment\",\"APSelectedSubSample\",\"APSelectedTest\"]};var filterTestParam={inputListName:\"AP_TEST\",selectedObject:\"APSelectedTest\",primaryKeyField:\"ntransactiontestcode\",fetchUrl:this.getActiveTestURL(),fecthInputObject:{ntransactiontestcode:this.props.Login.masterData.APSelectedTest?this.props.Login.masterData.APSelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\",userinfo:this.props.Login.userInfo,checkBoxOperation:3},isSingleSelect:false,masterData:this.props.Login.masterData,searchFieldList:[\"sarno\",\"ssamplearno\",\"stestsynonym\",\"dtransactiondate\",\"smethodname\",\"ssectionname\",\"ssourcename\",\"stransdisplaystatus\",\"sinstrumentcatname\",\"stestname\"],changeList:[\"ApprovalParameter\",\"ApprovalResultChangeHistory\",\"ApprovalHistory\",\"SampleApprovalHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationAttachment\",\"APSelectedTest\"]};var AP_SampleList=this.props.Login.masterData.AP_SAMPLE?sortData(this.props.Login.masterData.AP_SAMPLE,'descending','npreregno'):[];//let AP_SubSampleList = this.props.Login.masterData.AP_SUBSAMPLE ? sortData(this.props.Login.masterData.AP_SUBSAMPLE, 'descending', 'ntransactionsamplecode') : [];\nvar AP_SubSampleList=this.props.Login.masterData.AP_SUBSAMPLE?this.props.Login.masterData.AP_SUBSAMPLE:[];var AP_TestList=this.props.Login.masterData.AP_TEST?this.props.Login.masterData.AP_TEST:[];var decisionStatus=this.props.Login.masterData.decisionStatus?sortData(this.props.Login.masterData.decisionStatus,'ascending','ntransactionstatus'):[];var actionStatus=this.props.Login.masterData.actionStatus?sortData(this.props.Login.masterData.actionStatus,'descending','ntransactionstatus'):[];var subSampleGetParam={masterData:this.props.Login.masterData,ntransactionstatus:String(this.props.Login.masterData.realFilterStatusValue?this.props.Login.masterData.realFilterStatusValue.ntransactionstatus:this.props.Login.masterData.FilterStatusValue?this.props.Login.masterData.FilterStatusValue.ntransactionstatus:-1),userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,nsectioncode:this.props.Login.masterData.UserSectionValue?this.props.Login.masterData.UserSectionValue.nsectioncode===-1?this.props.Login.masterData.UserSection.map(function(section){return section.nsectioncode;}).join(','):String(this.props.Login.masterData.UserSectionValue.nsectioncode):null,ntestcode:this.props.Login.masterData.realTestValue?this.props.Login.masterData.realTestValue.ntestcode:-1,napprovalversioncode:this.props.Login.masterData.realApprovalVersionValue?this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode:-1,nneedsubsample:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,activeTestTab:this.props.Login.activeTestTab||\"IDS_RESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",screenName:this.props.Login.screenName,searchSubSampleRef:this.searchSubSampleRef,searchTestRef:this.searchTestRef,testskip:this.state.testskip,testtake:this.state.testtake,subSampleSkip:this.state.subSampleSkip,subSampleTake:this.state.subSampleTake,resultDataState:this.state.resultDataState,instrumentDataState:this.state.instrumentDataState,materialDataState:this.state.materialDataState,taskDataState:this.state.taskDataState,documentDataState:this.state.documentDataState,resultChangeDataState:this.state.resultChangeDataState,testCommentDataState:this.state.testCommentDataState,historyDataState:this.state.historyDataState,samplePrintHistoryDataState:this.state.samplePrintHistoryDataState,sampleHistoryDataState:this.state.sampleHistoryDataState};var testGetParam={masterData:this.props.Login.masterData,ntransactionstatus:String(this.props.Login.masterData.realFilterStatusValue?this.props.Login.masterData.realFilterStatusValue.ntransactionstatus:this.props.Login.masterData.FilterStatusValue?this.props.Login.masterData.FilterStatusValue.ntransactionstatus:-1),userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,npreregno:this.props.Login.masterData.APSelectedSample&&this.props.Login.masterData.APSelectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),napprovalversioncode:this.props.Login.masterData.realApprovalVersionValue?this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode:-1,nsectioncode:this.props.Login.masterData.UserSectionValue?this.props.Login.masterData.UserSectionValue.nsectioncode===-1?this.props.Login.masterData.UserSection.map(function(section){return section.nsectioncode;}).join(','):String(this.props.Login.masterData.UserSectionValue.nsectioncode):null,ntestcode:this.props.Login.masterData.realTestValue?this.props.Login.masterData.realTestValue.ntestcode:-1,activeTestTab:this.props.Login.activeTestTab||\"IDS_RESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEINFO\",screenName:this.props.Login.screenName,searchTestRef:this.searchTestRef};var testChildGetParam={masterData:this.props.Login.masterData,ntransactionstatus:String(this.props.Login.masterData.FilterStatusValue&&this.props.Login.masterData.FilterStatusValue.ntransactionstatus),userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,npreregno:this.props.Login.masterData.APSelectedSample&&this.props.Login.masterData.APSelectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),ntransactionsamplecode:this.props.Login.masterData.APSelectedSubSample&&this.props.Login.masterData.APSelectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\"),activeTestTab:this.props.Login.activeTestTab||\"IDS_RESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEINFO\",screenName:this.props.Login.screenName,postParamList:this.postParamList,testskip:this.state.testskip,testtake:this.state.testtake,resultDataState:this.state.resultDataState,instrumentDataState:this.state.instrumentDataState,materialDataState:this.state.materialDataState,taskDataState:this.state.taskDataState,documentDataState:this.state.documentDataState,historyDataState:this.state.historyDataState,resultChangeDataState:this.state.resultChangeDataState,testCommentDataState:this.state.testCommentDataState};var breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":obj.breadCrumbFrom},{\"label\":\"IDS_TO\",\"value\":obj.breadCrumbto},{\"label\":\"IDS_SAMPLETYPE\",\"value\":this.props.Login.masterData.realSampleTypeValue?this.props.Login.masterData.realSampleTypeValue.ssampletypename||\"NA\":this.props.Login.masterData.SampleTypeValue?this.props.Login.masterData.SampleTypeValue.ssampletypename||\"NA\":\"NA\"},{\"label\":\"IDS_REGTYPE\",\"value\":this.props.Login.masterData.realRegTypeValue?this.props.Login.masterData.realRegTypeValue.sregtypename||\"NA\":this.props.Login.masterData.RegTypeValue?this.props.Login.masterData.RegTypeValue.sregtypename||\"NA\":\"NA\"},{\"label\":\"IDS_REGSUBTYPE\",\"value\":this.props.Login.masterData.realRegSubTypeValue?this.props.Login.masterData.realRegSubTypeValue.sregsubtypename||\"-\":this.props.Login.masterData.RegSubTypeValue?this.props.Login.masterData.RegSubTypeValue.sregsubtypename:\"-\"},{\"label\":\"IDS_CONFIGVERSION\",\"value\":this.props.Login.masterData.realApprovalVersionValue?this.props.Login.masterData.realApprovalVersionValue.sversionname||\"-\":this.props.Login.masterData.ApprovalVersionValue?this.props.Login.masterData.ApprovalVersionValue.sversionname||\"-\":\"-\"},{\"label\":\"IDS_SECTION\",\"value\":this.props.Login.masterData.realUserSectionValue?this.props.Login.masterData.realUserSectionValue.ssectionname||\"-\":this.props.Login.masterData.UserSectionValue?this.props.Login.masterData.UserSectionValue.ssectionname||\"-\":\"-\"},{\"label\":\"IDS_Test\",\"value\":this.props.Login.masterData.realTestValue?this.props.Login.masterData.realTestValue.stestsynonym||\"-\":this.props.Login.masterData.TestValue?this.props.Login.masterData.TestValue.stestsynonym||\"-\":\"-\"},{\"label\":\"IDS_FILTERSTATUS\",\"value\":this.props.Login.masterData.realFilterStatusValue?this.props.Login.masterData.realFilterStatusValue.sfilterstatus||\"-\":this.props.Login.masterData.FilterStatusValue?this.props.Login.masterData.FilterStatusValue.sfilterstatus||\"-\":\"-\"}];var reportPreviewId=this.state.controlMap.has(\"SamplePreviewReport\")&&this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode;var editParamId=this.state.controlMap.has(\"EditReportMandatory\")&&this.state.controlMap.get(\"EditReportMandatory\").ncontrolcode;var TestDecisionActionId=this.state.controlMap.has(\"TestDecisionAction\")&&this.state.controlMap.get(\"TestDecisionAction\").ncontrolcode;var TestApprovalActionId=this.state.controlMap.has(\"TestApprovalAction\")&&this.state.controlMap.get(\"TestApprovalAction\").ncontrolcode;var reportGenerateId=this.state.controlMap.has(\"GenerateCOA\")&&this.state.controlMap.get(\"GenerateCOA\").ncontrolcode;this.postParamList=[{filteredListName:\"searchedSample\",clearFilter:\"no\",searchRef:this.searchSampleRef,primaryKeyField:\"npreregno\",fetchUrl:\"approval/getApprovalSubSample\",fecthInputObject:subSampleGetParam,selectedObject:\"APSelectedSample\",inputListName:\"AP_SAMPLE\",updatedListname:\"updatedSample\",childRefs:[{ref:this.searchSubSampleRef,childFilteredListName:\"searchedSubSample\"},{ref:this.searchTestRef,childFilteredListName:\"searchedTests\"}],unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\",\"SampletypeList\",\"RegistrationTypeList\",\"RegistrationSubTypeList\",\"FilterStatusList\",\"UserSectionList\"]},{filteredListName:\"searchedSubSample\",updatedListname:\"updatedSubSample\",clearFilter:\"no\",searchRef:this.searchSubSampleRef,primaryKeyField:\"ntransactionsamplecode\",fetchUrl:\"approval/getApprovalTest\",fecthInputObject:testGetParam,selectedObject:\"APSelectedSubSample\",childRefs:[{ref:this.searchTestRef,childFilteredListName:\"searchedTests\"}],inputListName:\"AP_SUBSAMPLE\",unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\",\"SampletypeList\",\"RegistrationTypeList\",\"RegistrationSubTypeList\",\"FilterStatusList\",\"UserSectionList\"]},{filteredListName:\"searchedTests\",clearFilter:\"no\",searchRef:this.searchTestRef,primaryKeyField:\"ntransactiontestcode\",fetchUrl:this.getActiveTestURL(),fecthInputObject:testChildGetParam,selectedObject:\"APSelectedTest\",inputListName:\"AP_TEST\",updatedListname:\"updatedTest\",unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\",\"SampletypeList\",\"RegistrationTypeList\",\"RegistrationSubTypeList\",\"FilterStatusList\",\"UserSectionList\",\"TestList\"]}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-4 screen-height-window\"},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData}),/*#__PURE__*/React.createElement(Row,{noGutters:\"true\"},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height sticky_head_parent\",ref:function ref(parentHeight){_this3.parentHeight=parentHeight;}},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",percentage:true,primaryIndex:1,secondaryInitialSize:this.state.splitChangeWidthPercentage,onSecondaryPaneSizeChange:this.paneSizeChange,primaryMinSize:40,secondaryMinSize:20},/*#__PURE__*/React.createElement(TransactionListMasterJson,{splitChangeWidthPercentage:this.state.splitChangeWidthPercentage,needMultiSelect:true,masterList:this.props.Login.masterData.searchedSample||AP_SampleList,selectedMaster:this.props.Login.masterData.APSelectedSample,primaryKeyField:\"npreregno\",getMasterDetail:this.props.getsubSampleDetail,inputParam:subSampleGetParam,additionalParam:['napprovalversioncode'],mainField:'sarno',selectionList:this.state.selectedFilter,selectionField:\"ntransactionstatus\",selectionFieldName:\"sfilterstatus\",selectionColorField:\"stranscolor\",selectedListName:\"APSelectedSample\",objectName:\"sample\",listName:\"IDS_SAMPLE\",filterColumnData:this.props.filterTransactionList,searchListName:\"searchedSample\",needValidation:true,validationKey:\"napprovalversioncode\",validationFailMsg:\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",showFilter:this.props.Login.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,subFields:this.state.DynamicSampleColumns,moreField:this.state.sampleMoreField,jsonDesignFields:true,jsonField:'jsondata',showStatusLink:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\"//statusColor=\"sdecisioncolor\"\n,statusColor:\"stranscolor\",showStatusIcon:false,showStatusName:true,needFilter:true,searchRef:this.searchSampleRef,filterParam:filterSampleParam,skip:this.state.skip,take:this.state.take,handlePageChange:this.handlePageChange,splitModeClass:this.state.splitChangeWidthPercentage&&this.state.splitChangeWidthPercentage>50?'split-mode':this.state.splitChangeWidthPercentage>40?'split-md':'',childTabsKey:[\"AP_SUBSAMPLE\",\"AP_TEST\",\"SampleApprovalHistory\",\"RegistrationAttachment\",\"PrintHistory\",\"COAHistory\"],actionIcons:[this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode===RegistrationType.PLASMA_POOL?{title:\"Report\",controlname:\"reports\",objectName:\"sample\",hidden:this.state.userRoleControlRights.indexOf(reportPreviewId)===-1,// onClick: ()=>this.previewSampleReport(reportPreviewId),\n//inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\nonClick:this.props.previewSampleReport,inputData:{userinfo:this.props.Login.userInfo,ncontrolcode:reportPreviewId}}:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode===RegistrationSubType.ROUTINE?{title:\"Report\",controlname:\"reports\",objectName:\"sample\",hidden:this.state.userRoleControlRights.indexOf(reportGenerateId)===-1,// onClick: ()=>this.previewSampleReport(reportPreviewId),\n//inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\nonClick:function onClick(obj){return _this3.generateCOAReport(obj,reportGenerateId);},inputData:{userinfo:this.props.Login.userInfo,ncontrolcode:reportPreviewId,nregtypecode:this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode}}:{}],commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",onClick:function onClick(){return _this3.onReload();}// title={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}})),this.props.Login.masterData.decisionStatus&&this.state.userRoleControlRights.indexOf(TestDecisionActionId)!==-1&&this.props.Login.masterData.decisionStatus.length>0?/*#__PURE__*/React.createElement(CustomPopOver,{icon:faBolt,nav:true,data:decisionStatus,btnClasses:\"btn-circle btn_grey ml-2\",textKey:\"sdecisionstatus\",iconKey:\"ntransactionstatus\",dynamicButton:function dynamicButton(value){return _this3.updateDecision(value);}}):\"\")),filterComponent:[{\"Sample Filter\":/*#__PURE__*/React.createElement(ApprovalFilter,{SampleType:this.state.SampletypeList||[],SampleTypeValue:this.props.Login.masterData.SampleTypeValue||[],RegType:this.state.RegistrationTypeList||[],RegTypeValue:this.props.Login.masterData.RegTypeValue||[],RegSubType:this.state.RegistrationSubTypeList||[],RegSubTypeValue:this.props.Login.masterData.RegSubTypeValue||[],ApprovalVersion:this.state.ConfigVersionList||[],ApprovalVersionValue:this.props.Login.masterData.ApprovalVersionValue||[],UserSection:this.state.UserSectionList||[],UserSectionValue:this.props.Login.masterData.UserSectionValue||[],JobStatus:this.props.Login.masterData.JobStatus||[],Test:this.state.TestList||[],TestValue:this.props.Login.masterData.TestValue||[],FilterStatus:this.state.FilterStatusList||[],FilterStatusValue:this.props.Login.masterData.FilterStatusValue||[],fromDate:this.props.Login.masterData.fromDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.fromDate):new Date(),toDate:this.props.Login.masterData.toDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.toDate):new Date(),onFilterComboChange:this.onFilterComboChange,handleDateChange:this.handleDateChange,userInfo:this.props.Login.userInfo})}]}),/*#__PURE__*/React.createElement(ScrollBar,{ref:function ref(_ref3){_this3._scrollBarRef=_ref3;}},/*#__PURE__*/React.createElement(SplitterLayout,{customClassName:\"detailed-inner\",vertical:true,borderColor:\"#999\",primaryIndex:1,onSecondaryPaneSizeChange:this.verticalPaneSizeChange,secondaryInitialSize:400},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:this.state.showTest===true?{display:\"block\",background:\"#FFFF\"}:{display:\"none\",background:\"#FFFF\"}},/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",primaryIndex:1,percentage:true,secondaryInitialSize:this.state.splitChangeWidthPercentage,onSecondaryPaneSizeChange:this.paneSizeChange,primaryMinSize:40,secondaryMinSize:30},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},\"Sub Sample\"))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(TransactionListMasterJson,{paneHeight:this.state.initialVerticalWidth,masterList:this.props.Login.masterData.searchedSubSample||AP_SubSampleList,selectedMaster:this.props.Login.masterData.APSelectedSubSample,primaryKeyField:\"ntransactionsamplecode\",getMasterDetail:this.props.getTestDetail,inputParam:testGetParam,additionalParam:[],mainField:\"ssamplearno\",selectedListName:\"APSelectedSubSample\",objectName:\"subSample\",listName:\"IDS_SUBSAMPLE\",jsonField:'jsondata',jsonDesignFields:true,showStatusLink:true,showStatusName:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",selectionField:\"ntransactionstatus\",selectionFieldName:\"stransdisplaystatus\",selectionColorField:\"stranscolor\",statusColor:\"stranscolor\",subFields:this.state.DynamicSubSampleColumns,moreField:this.state.subSampleMoreField,needValidation:false,needMultiSelect:true,needFilter:false,searchRef:this.searchSubSampleRef,filterParam:filterSubSampleParam,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedSubSample\",skip:this.state.subSampleSkip,take:this.state.subSampleTake,handlePageChange:this.handleSubSamplePageChange,childTabsKey:[\"AP_TEST\"]}))),/*#__PURE__*/React.createElement(ContentPanel,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary btn-padd-custom\",style:{float:\"right\"},onClick:function onClick(){return _this3.showAPSampleinfo();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(TransactionListMasterJson,{paneHeight:this.state.initialVerticalWidth,needMultiSelect:true,masterList:this.props.Login.masterData.searchedTests||AP_TestList,selectedMaster:this.props.Login.masterData.APSelectedTest,primaryKeyField:\"ntransactiontestcode\",getMasterDetail:this.props.getTestChildTabDetail,inputParam:testChildGetParam,additionalParam:[],mainField:'stestsynonym',selectedListName:\"APSelectedTest\",objectName:\"test\",listName:\"IDS_TEST\",pageSize:this.props.Login.settings&&this.props.Login.settings[13].split(\",\").map(function(setting){return parseInt(setting);}),showStatusLink:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",showStatusIcon:false,showStatusName:true,subFieldsLabel:true,jsonField:'jsondata',jsonDesignFields:false,selectionField:\"ntransactionstatus\",selectionFieldName:\"sfilterstatus\",selectionColorField:\"scolorhexcode\",selectionList:this.props.Login.masterData.FilterStatus||[],needSubFieldlabel:true,subFields:this.state.DynamicTestColumns,moreField:this.state.testMoreField,needValidation:false,needFilter:false,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedTests\",searchRef:this.searchTestRef,filterParam:filterTestParam,skip:this.state.testskip,take:this.state.testtake,showMoreResetList:true,showMoreResetListName:\"AP_SAMPLE\",handlePageChange:this.handleTestPageChange,buttonCount:5,childTabsKey:[\"ApprovalParameter\",\"ApprovalResultChangeHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"ApprovalHistory\"],commonActions:/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category justify-content-end icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{hidden:this.state.userRoleControlRights.indexOf(editParamId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDITREPORTMANDATORY\"}),\"data-for\":\"tooltip-common-wrap\",\"data-place\":\"left\",className:\"btn btn-circle outline-grey\",onClick:function onClick(){return _this3.props.getParameterEdit({APSelectedTest:_this3.props.Login.masterData.APSelectedTest,userInfo:_this3.props.Login.userInfo,masterData:_this3.props.Login.masterData});}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),this.props.Login.masterData.actionStatus&&this.state.userRoleControlRights.indexOf(TestApprovalActionId)!==-1&&actionStatus.length>0?/*#__PURE__*/React.createElement(CustomPopOver,{icon:faBolt,nav:true,data:actionStatus,btnClasses:\"btn-circle btn_grey ml-2\",dynamicButton:function dynamicButton(value){return _this3.checkRetestAction(value,TestApprovalActionId);},textKey:\"stransdisplaystatus\",iconKey:\"ntransactionstatus\"}):\"\")})))))),/*#__PURE__*/React.createElement(ContentPanel,{style:this.state.showSample===true?{display:\"block\"}:{display:\"none\"}},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,{className:\"p-0\"},/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary btn-padd-custom\",style:{float:\"right\"},onClick:function onClick(){return _this3.showAPTestList();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\" \",this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(ScrollBar,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:this.state.initialVerticalWidth}},this.props.Login.masterData.APSelectedSample&&this.props.Login.masterData.APSelectedSample.length===1?/*#__PURE__*/React.createElement(SampleInfoView,{data:this.props.Login.masterData.APSelectedSample&&this.props.Login.masterData.APSelectedSample.length>0?this.props.Login.masterData.APSelectedSample[this.props.Login.masterData.APSelectedSample.length-1]:{},SingleItem:this.props.Login.masterData.APSelectedSample&&this.props.Login.masterData.APSelectedSample?this.state.SingleItem:[],screenName:\"IDS_SAMPLEINFO\",userInfo:this.props.Login.userInfo}):/*#__PURE__*/React.createElement(SampleInfoGrid,{selectedSample:this.props.Login.masterData.APSelectedSample,userInfo:this.props.Login.userInfo||{},masterData:this.props.Login.masterData,inputParam:this.props.Login.inputParam,dataState:this.state.sampleGridDataState,dataStateChange:this.sampleInfoDataStateChange,extractedColumnList:this.gridfillingColumn(this.state.DynamicGridItem)||[],detailedFieldList:this.gridfillingColumn(this.state.DynamicGridMoreField)||[],primaryKeyField:\"npreregno\",expandField:\"expanded\",screenName:\"IDS_SAMPLEINFO\",jsonField:\"jsondata\"}))))))))))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ScrollBar,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:\"calc(110vh - \"+(+this.state.initialVerticalWidth+100)+\"px)\"}},this.state.showSample?/*#__PURE__*/React.createElement(CustomTabs,{paneHeight:this.state.tabPane,activeKey:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",tabDetail:this.sampleTabDetail(),onTabChange:this.onSampleTabChange}):this.state.showTest?/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},\"Parameter Results\"))),/*#__PURE__*/React.createElement(CustomTabs,{paneHeight:this.state.tabPane,activeKey:this.props.Login.activeTestTab||\"IDS_RESULTS\",tabDetail:this.testTabDetail(),onTabChange:this.onTestTabChange})):\"\")))))))))),this.props.Login.openChildModal?/*#__PURE__*/React.createElement(SlideOutModal,{onSaveClick:this.props.Login.operation==='dynamic'?function(){return _this3.performTestActions(_this3.props.Login.action,TestApprovalActionId);}:this.onSaveClick,operation:this.props.Login.operation,screenName:this.props.Login.screenName,closeModal:this.handleClose,show:this.props.Login.openChildModal,inputParam:this.props.Login.inputParam,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.operation==='enforce'?[{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"senforcestatuscomment\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}]:[],loginoperation:this.props.Login.operation==='view'?true:false//graphView={this.props.Login.operation !=='enforce' ? this.props.Login.operation:undefined}\n,noSave:this.props.Login.operation==='view'?true:false,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.operation==='enforce'?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ngradecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_STATUS\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_STATUS\"}),value:this.props.Login.masterData.GradeValue||[],options:this.props.Login.masterData.Grade||[],optionId:\"ngradecode\",optionValue:\"sgradename\",isMandatory:true,isMulti:false,isDisabled:false,isSearchable:false,closeMenuOnSelect:true,isClearable:false,onChange:function onChange(event){return _this3.onComboChange(event,'ngradecode');}}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"senforcestatuscomment\",label:this.props.intl.formatMessage({id:\"IDS_COMMENTS\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_COMMENTS\"}),value:this.state.selectedRecord?this.state.selectedRecord[\"senforcestatuscomment\"]:\"\",rows:\"2\",isMandatory:true,required:false,maxLength:255,onChange:function onChange(event){return _this3.onInputOnChange(event);}}))):this.props.Login.operation==='dynamic'?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"retestcount\",label:this.props.intl.formatMessage({id:\"IDS_RETESTCOUNT\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_MAX\"})+\": \"+this.props.Login.masterData.retestcount,type:\"text\",strict:true,className:\"form-control\",value:this.state.selectedRecord?this.state.selectedRecord.retestcount:\"\",maxLength:6,onChange:function onChange(event){return _this3.onNumericInputOnChange(event,'retestcount');},isMandatory:\"*\",required:true,noStyle:true// min={1}\n// max={this.props.Login.masterData.retestcount}\n}))):this.props.Login.operation==='view'?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nresultparamcommenthistorycode\",data:this.props.Login.masterData.enforceCommentsHistory||[],dataResult:this.props.Login.masterData.enforceCommentsHistory||[],dataState:{skip:0,take:this.props.Login.masterData.enforceCommentsHistory?this.props.Login.masterData.enforceCommentsHistory.length:0}// dataStateChange={this.dataStateChange}\n,extractedColumnList:[{\"idsName\":\"IDS_ENFORCESTATUSCOMMENT\",\"dataField\":\"senforcestatuscomment\",\"width\":\"450px\"}],userInfo:this.props.Login.userInfo,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,pageable:false,hideColumnFilter:true,isActionRequired:false,isToolBarRequired:false,scrollable:\"scrollable\"}))):/*#__PURE__*/React.createElement(EditApprovalParameter,{ApprovalParamEdit:this.props.Login.ApprovalParamEdit||[],changeMandatory:this.changeMandatory,selectedRecord:this.state.selectedRecord.approvalParameterEdit||{},nsubsampleneed:this.props.Login.masterData.RegSubTypeValue&&this.props.Login.masterData.RegSubTypeValue.nsubsampleneed})}):\"\",this.props.Login.masterData.ChecklistData&&this.props.Login.screenName==='IDS_CHECKLISTRESULT'?/*#__PURE__*/React.createElement(TemplateForm,{templateData:this.props.Login.masterData.ChecklistData,needSaveButton:false,formRef:this.formRef,onTemplateInputChange:this.onTemplateInputChange,handleClose:this.handleClose,onTemplateComboChange:this.onTemplateComboChange,screenName:this.props.Login.screenName,onSaveClick:this.props.onSaveCheckList,Login:this.props.Login,viewScreen:this.props.Login.openTemplateModal,selectedRecord:this.state.selectedRecord||[],onTemplateDateChange:this.onTemplateDateChange}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this$state7=this.state,userRoleControlRights=_this$state7.userRoleControlRights,controlMap=_this$state7.controlMap,sampleListColumns=_this$state7.sampleListColumns,subSampleListColumns=_this$state7.subSampleListColumns,testListColumns=_this$state7.testListColumns,SingleItem=_this$state7.SingleItem,sampleListMainField=_this$state7.sampleListMainField,subSampleListMainField=_this$state7.subSampleListMainField,testListMainField=_this$state7.testListMainField,SampleGridItem=_this$state7.SampleGridItem,SampleGridExpandableItem=_this$state7.SampleGridExpandableItem,testMoreField=_this$state7.testMoreField,resultDataState=_this$state7.resultDataState,instrumentDataState=_this$state7.instrumentDataState,materialDataState=_this$state7.materialDataState,taskDataState=_this$state7.taskDataState,documentDataState=_this$state7.documentDataState,resultChangeDataState=_this$state7.resultChangeDataState,historyDataState=_this$state7.historyDataState,testCommentDataState=_this$state7.testCommentDataState,samplePrintHistoryDataState=_this$state7.samplePrintHistoryDataState,sampleHistoryDataState=_this$state7.sampleHistoryDataState,selectedRecord=_this$state7.selectedRecord,SampletypeList=_this$state7.SampletypeList,RegistrationTypeList=_this$state7.RegistrationTypeList,RegistrationSubTypeList=_this$state7.RegistrationSubTypeList,FilterStatusList=_this$state7.FilterStatusList,ConfigVersionList=_this$state7.ConfigVersionList,UserSectionList=_this$state7.UserSectionList,TestList=_this$state7.TestList,skip=_this$state7.skip,take=_this$state7.take,testskip=_this$state7.testskip,testtake=_this$state7.testtake,selectedFilter=_this$state7.selectedFilter,DynamicSampleColumns=_this$state7.DynamicSampleColumns,DynamicSubSampleColumns=_this$state7.DynamicSubSampleColumns,DynamicTestColumns=_this$state7.DynamicTestColumns,DynamicGridItem=_this$state7.DynamicGridItem,DynamicGridMoreField=_this$state7.DynamicGridMoreField;var bool=false;if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);bool=true;// this.setState({userRoleControlRights, controlMap});\n}if(this.props.Login.masterData.RegSubTypeValue!==previousProps.Login.masterData.RegSubTypeValue){if(this.props.Login.masterData.RegSubTypeValue&&this.props.Login.masterData.RegSubTypeValue.nsubsampleneed===transactionStatus.NO){var dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5,group:[{field:'sarno'}]};resultDataState=dataState;instrumentDataState=dataState;materialDataState=dataState;taskDataState=dataState;documentDataState=dataState;resultChangeDataState=dataState;historyDataState=dataState;testCommentDataState=dataState;// this.setState({\n//     resultDataState: dataSate,instrumentDataState: dataSate,\n//     materialDataState: dataSate,taskDataState: dataSate,instrumentDataState: dataSate,\n//     instrumentDataState: dataSate,documentDataState: dataSate,resultChangeDataState: dataSate,\n//     historyDataState: dataSate,resultDataState: dataSate,testCommentDataState:dataSate,\n// });\nbool=true;}}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;// this.setState({selectedRecord: this.props.Login.selectedRecord });\nbool=true;}if(this.props.Login.masterData!==previousProps.Login.masterData){var SampletypeListMap=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",'ascending','nsampletypecode',false);var RegistrationTypeListMap=constructOptionList(this.props.Login.masterData.RegType||[],\"nregtypecode\",\"sregtypename\",\"nsorter\",'ascending','nregtypecode',false);var RegistrationSubTypeListMap=constructOptionList(this.props.Login.masterData.RegSubType||[],\"nregsubtypecode\",\"sregsubtypename\",\"nsorter\",'ascending','nregsubtypecode',false);var FilterStatusListMap=constructOptionList(this.props.Login.masterData.FilterStatus||[],\"ntransactionstatus\",\"sfilterstatus\",undefined,undefined,true);var ConfigVersionListMap=constructOptionList(this.props.Login.masterData.ApprovalVersion||[],\"napprovalconfigversioncode\",\"sversionname\",'descending','ntransactionstatus',false);var UserSectionListMap=constructOptionList(this.props.Login.masterData.UserSection||[],\"nsectioncode\",\"ssectionname\",undefined,undefined,true);var TestListMap=constructOptionList(this.props.Login.masterData.Test||[],\"ntestcode\",\"stestsynonym\",undefined,undefined,true);SampletypeList=SampletypeListMap.get(\"OptionList\");RegistrationTypeList=RegistrationTypeListMap.get(\"OptionList\");RegistrationSubTypeList=RegistrationSubTypeListMap.get(\"OptionList\");FilterStatusList=FilterStatusListMap.get(\"OptionList\");ConfigVersionList=ConfigVersionListMap.get(\"OptionList\");UserSectionList=UserSectionListMap.get(\"OptionList\");TestList=TestListMap.get(\"OptionList\");bool=true;skip=this.props.Login.skip===undefined?skip:this.props.Login.skip;take=this.props.Login.take||take;testskip=this.props.Login.testskip===undefined?testskip:this.props.Login.testskip;testtake=this.props.Login.testtake||testtake;var selectFilterStatus={ntransactionstatus:transactionStatus.PARTIAL,sfilterstatus:this.props.intl.formatMessage({id:\"IDS_PARTIAL\"}),scolorhexcode:\"#800000\"};// const selectedFilters = this.props.Login.masterData.FilterStatusValue && \n//     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ? \n//   JSON.stringify (JSON.parse(this.props.Login.masterData.FilterStatus)) : []\n// const selectedFilters = this.props.Login.masterData.FilterStatusValue &&\n//     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ?\n//     this.props.Login.masterData.FilterStatus : [];\nvar selectedFilters=this.props.Login.masterData.FilterStatus||[];var selectedFiltersNew=JSON.parse(JSON.stringify(selectedFilters));var index=selectedFiltersNew.findIndex(function(item){return item.ntransactionstatus===transactionStatus.PARTIAL;});if(selectedFiltersNew.length>0&&index===-1){selectedFiltersNew.push(selectFilterStatus);}selectedFilter=selectedFiltersNew;if(this.props.Login.resultDataState&&this.props.Login.resultDataState!==previousProps.Login.resultDataState){resultDataState=this.props.Login.resultDataState;}if(this.props.Login.instrumentDataState&&this.props.Login.instrumentDataState!==previousProps.Login.instrumentDataState){instrumentDataState=this.props.Login.instrumentDataState;}if(this.props.Login.taskDataState&&this.props.Login.taskDataState!==previousProps.Login.taskDataState){taskDataState=this.props.Login.taskDataState;}if(this.props.Login.resultChangeDataState&&this.props.Login.resultChangeDataState!==previousProps.Login.resultChangeDataState){resultChangeDataState=this.props.Login.resultChangeDataState;}if(this.props.Login.historyDataState&&this.props.Login.historyDataState!==previousProps.Login.historyDataState){historyDataState=this.props.Login.historyDataState;}if(this.props.Login.testCommentDataState&&this.props.Login.testCommentDataState!==previousProps.Login.testCommentDataState){testCommentDataState=this.props.Login.testCommentDataState;}if(this.props.Login.samplePrintHistoryDataState&&this.props.Login.samplePrintHistoryDataState!==previousProps.Login.samplePrintHistoryDataState){samplePrintHistoryDataState=this.props.Login.samplePrintHistoryDataState;}if(this.props.Login.sampleHistoryDataState&&this.props.Login.sampleHistoryDataState!==previousProps.Login.sampleHistoryDataState){sampleHistoryDataState=this.props.Login.sampleHistoryDataState;}}if(this.props.Login.masterData.DynamicDesign&&this.props.Login.masterData.DynamicDesign!==previousProps.Login.masterData.DynamicDesign){var dynamicColumn=JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);DynamicSampleColumns=dynamicColumn.samplelistitem?dynamicColumn.samplelistitem:[];DynamicSubSampleColumns=dynamicColumn.subsamplelistitem?dynamicColumn.subsamplelistitem:[];DynamicTestColumns=dynamicColumn.testlistitem?dynamicColumn.testlistitem:[];DynamicGridItem=dynamicColumn.samplegriditem?dynamicColumn.samplegriditem:[];DynamicGridMoreField=dynamicColumn.samplegridmoreitem?dynamicColumn.samplegridmoreitem:[];SingleItem=dynamicColumn.sampledisplayfields?dynamicColumn.sampledisplayfields:[];testMoreField=dynamicColumn.testlistmoreitems?dynamicColumn.testlistmoreitems:[];testListColumns=dynamicColumn.testlistitem?dynamicColumn.testlistitem:[];bool=true;// sampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTITEM);\n// subSampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTITEM);\n// testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTITEM);\n// sampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTMAINFIELD);\n// subSampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTMAINFIELD);\n// testListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMAINFIELD);\n// SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.SINGLEITEMDATA)\n// SampleGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDITEM)\n// SampleGridExpandableItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDEXPANDABLEITEM)\n// testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMOREITEM)\n// let {selectedRecord}=this.state\nvar obj=convertDateValuetoString(this.props.Login.masterData.fromDate,this.props.Login.masterData.toDate,this.props.Login.userInfo);selectedRecord['fromDate']=obj.fromDate;selectedRecord['toDate']=obj.toDate;// this.setState({\n//     sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\n//     sampleListMainField, subSampleListMainField, testListMainField,\n//     SampleGridItem, SampleGridExpandableItem, testMoreField,selectedRecord\n// })\nbool=true;}if(bool){bool=false;this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,sampleListColumns:sampleListColumns,subSampleListColumns:subSampleListColumns,testListColumns:testListColumns,SingleItem:SingleItem,sampleListMainField:sampleListMainField,subSampleListMainField:subSampleListMainField,testListMainField:testListMainField,SampleGridItem:SampleGridItem,SampleGridExpandableItem:SampleGridExpandableItem,testMoreField:testMoreField,resultDataState:resultDataState,instrumentDataState:instrumentDataState,materialDataState:materialDataState,taskDataState:taskDataState,documentDataState:documentDataState,resultChangeDataState:resultChangeDataState,historyDataState:historyDataState,testCommentDataState:testCommentDataState,samplePrintHistoryDataState:samplePrintHistoryDataState,sampleHistoryDataState:sampleHistoryDataState,selectedRecord:selectedRecord,SampletypeList:SampletypeList,RegistrationTypeList:RegistrationTypeList,RegistrationSubTypeList:RegistrationSubTypeList,FilterStatusList:FilterStatusList,ConfigVersionList:ConfigVersionList,UserSectionList:UserSectionList,TestList:TestList,skip:skip,take:take,testskip:testskip,testtake:testtake,selectedFilter:selectedFilter,DynamicSampleColumns:DynamicSampleColumns,DynamicSubSampleColumns:DynamicSubSampleColumns,DynamicTestColumns:DynamicTestColumns,DynamicGridItem:DynamicGridItem,DynamicGridMoreField:DynamicGridMoreField});}}// previewSampleReport = (ncontrolCode) => {\n//     console.log(\"report:\", this.props.Login.masterData.selectedSample);\n//     const selectedSample = this.props.Login.masterData.selectedSample[0];\n//     const inputData = {ndecisionstatus:selectedSample.ndecisionstatus,\n//                         userinfo:this.props.Login.userInfo,\n//                         nprimarykey: selectedSample.npreregno,\n//                         ncoareporttypecode : reportCOAType.SAMPLECERTIFICATEPRIVIEW,\n//                         nreporttypecode :REPORTTYPE.SAMPLEREPORT,\n//                         sprimarykeyname :\"npreregno\",\n//                         ncontrolcode : ncontrolCode,\n//                         nregtypecode:selectedSample.nregtypecode,\n//                         nregsubtypecode: selectedSample.nregsubtypecode\n//                         }\n//     this.props.previewSampleReport(inputData);\n// }\n},{key:\"sampleTabDetail\",value:function sampleTabDetail(){var tabMap=new Map();var npreregno=this.props.Login.masterData.selectedSample?this.props.Login.masterData.selectedSample.map(function(sample){return sample.npreregno;}).join(\",\"):\"-1\";tabMap.set(\"IDS_SAMPLEATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{screenName:\"IDS_SAMPLEATTACHMENTS\",selectedMaster:this.props.Login.masterData.selectedSample,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,attachments:this.props.Login.masterData.RegistrationAttachment||[],deleteRecord:this.props.deleteAttachment,onSaveClick:this.onAttachmentSaveClick,masterList:this.props.Login.masterData.selectedSample,masterAlertStatus:\"IDS_SELECTSAMPLETOADDATTACHEMENT\",fetchRecord:this.props.getAttachmentCombo,addName:\"AddSampleAttachment\",editName:\"EditSampleAttachment\",deleteName:\"DeleteSampleAttachment\",viewName:\"ViewSampleAttachment\",methodUrl:\"SampleAttachment\",deleteParam:{methodUrl:\"SampleAttachment\",npreregno:npreregno,userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,esignRights:this.props.Login.userRoleControlRights,screenName:this.props.Login.screenName},editParam:{methodUrl:\"SampleAttachment\",npreregno:npreregno,userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,esignRights:this.props.Login.userRoleControlRights,masterList:this.props.Login.masterData.selectedSample},selectedListName:\"IDS_SAMPLES\",displayName:\"sarno\"}));tabMap.set(\"IDS_SAMPLEAPPROVALHISTORY\",/*#__PURE__*/React.createElement(SampleApprovalHistory,{userInfo:this.props.Login.userInfo,ApprovalHistory:this.props.Login.masterData.SampleApprovalHistory,inputParam:this.props.Login.inputParam,dataState:this.state.sampleHistoryDataState,dataStateChange:this.sampleDataStateChange,screenName:\"IDS_SAMPLEAPPROVALHISTORY\",controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,selectedId:null}));tabMap.set(\"IDS_PRINTHISTORY\",/*#__PURE__*/React.createElement(ApprovalPrintHistoryTab,{userInfo:this.props.Login.userInfo,ApprovalPrintHistory:this.props.Login.masterData.PrintHistory,inputParam:this.props.Login.inputParam,dataState:this.state.samplePrintHistoryDataState,dataStateChange:this.sampleDataStateChange,screenName:\"IDS_PRINTHISTORY\",controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,selectedId:null}));if(this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode===RegistrationSubType.ROUTINE){tabMap.set(\"IDS_REPORTHISTORY\",/*#__PURE__*/React.createElement(ReportHistoryTab,{userInfo:this.props.Login.userInfo,COAHistory:this.props.Login.masterData.COAHistory,inputParam:this.props.Login.inputParam,dataState:this.state.reportHistoryDataState,dataStateChange:this.sampleDataStateChange,screenName:\"IDS_REPORTHISTORY\",controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,selectedId:null,viewDownloadFile:this.downloadReport}));}return tabMap;}},{key:\"showSampleInfo\",value:function showSampleInfo(){this.setState({showSample:true,showTest:false});}},{key:\"showTestList\",value:function showTestList(){this.setState({showTest:true,showSample:false});}},{key:\"getActiveTestURL\",value:// covertDatetoString(startDateValue, endDateValue) {\n//     const startDate = new Date(startDateValue);\n//     const endDate = new Date(endDateValue);\n//     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\n//     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\n//     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\n//     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\n//     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\n//     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\n//     const fromDate = fromDateOnly + \"T00:00:00\";\n//     const toDate = toDateOnly + \"T23:59:59\";\n//     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\n// }\nfunction getActiveTestURL(){var url=\"approval/getapprovalparameter\";switch(this.props.Login.activeTestTab){case\"IDS_RESULTS\":url=\"approval/getapprovalparameter\";break;case\"IDS_INSTRUMENT\":url=\"resultentrybysample/getResultUsedInstrument\";break;case\"IDS_MATERIAL\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_TASK\":url=\"resultentrybysample/getResultUsedTask\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"approval/getApprovalResultChangeHistory\";break;case\"IDS_TESTAPPROVALHISTORY\":url=\"approval/getApprovalHistory\";break;default:url=\"approval/getapprovalparameter\";break;}return url;}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.multilingualMsg!==undefined&&props.Login.multilingualMsg!==\"\"){toast.warn(props.intl.formatMessage({id:props.Login.multilingualMsg}));props.Login.multilingualMsg=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return Approval;}(React.Component);export default connect(mapStateToProps,{getsubSampleDetail:getsubSampleDetail,getTestDetail:getTestDetail,getTestChildTabDetail:getTestChildTabDetail,performAction:performAction,updateStore:updateStore,viewAttachment:viewAttachment,checkListRecord:checkListRecord,updateDecision:updateDecision,getRegistrationType:getRegistrationType,getRegistrationSubType:getRegistrationSubType,getFilterStatus:getFilterStatus,getApprovalSample:getApprovalSample,getStatusCombo:getStatusCombo,validateEsignCredential:validateEsignCredential,crudMaster:crudMaster,validateEsignforApproval:validateEsignforApproval,getApprovalVersion:getApprovalVersion,getParameterEdit:getParameterEdit,filterTransactionList:filterTransactionList,getSampleChildTabDetail:getSampleChildTabDetail,getAttachmentCombo:getAttachmentCombo,deleteAttachment:deleteAttachment,getCommentsCombo:getCommentsCombo,previewSampleReport:previewSampleReport,getFilterBasedTest:getFilterBasedTest,generateCOAReport:generateCOAReport,getEnforceCommentsHistory:getEnforceCommentsHistory})(injectIntl(Approval));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/approval/Approval.jsx"],"names":["React","connect","injectIntl","faBolt","faEye","faPencilAlt","faSync","FontAwesomeIcon","Button","Card","Col","Nav","Row","ContentPanel","ListWrapper","ProductList","SplitterLayout","DEFAULT_RETURN","getsubSampleDetail","getTestDetail","getTestChildTabDetail","performAction","updateStore","updateDecision","getRegistrationType","getRegistrationSubType","getFilterStatus","getApprovalSample","getStatusCombo","validateEsignCredential","crudMaster","validateEsignforApproval","getApprovalVersion","getParameterEdit","filterTransactionList","checkListRecord","generateCOAReport","getSampleChildTabDetail","getAttachmentCombo","viewAttachment","deleteAttachment","getCommentsCombo","previewSampleReport","getFilterBasedTest","getEnforceCommentsHistory","CustomTabs","ApprovalResultsTab","getControlMap","listDataFromDynamicArray","showEsign","sortData","constructOptionList","getSameRecordFromTwoArrays","convertDateValuetoString","rearrangeDateFormat","toast","TransactionListMaster","TransactionListMasterJson","ApprovalFilter","designProperties","transactionStatus","RegistrationType","RegistrationSubType","BreadcrumbComponent","SampleInfoGrid","SampleInfoView","ApprovalInstrumentTab","FormSelectSearch","FormTextarea","Esign","SlideOutModal","EditApprovalParameter","SampleApprovalHistory","ResultChangeHistoryTab","ApprovalTask","templateChangeHandler","TemplateForm","Attachments","onSaveSampleAttachment","onSaveTestAttachment","Comments","onSaveTestComments","CustomPopOver","ScrollBar","ApprovalPrintHistoryTab","ApprovalHistoryTab","FormNumericInput","DataGrid","ReportHistoryTab","mapStateToProps","state","Login","Approval","props","paneSizeChange","d","setState","splitChangeWidthPercentage","handleSubSamplePageChange","e","subSampleSkip","skip","subSampleTake","take","setTimeout","_scrollBarRef","updateScroll","showAPSampleinfo","showSample","showTest","sampleInfoDataStateChange","event","sampleGridDataState","dataState","verticalPaneSizeChange","val","console","log","initialVerticalWidth","downloadReport","input","inputParam","inputData","selectedRecord","userinfo","userInfo","classUrl","operation","methodUrl","testTabDetail","testTabMap","Map","testskip","testtake","testList","masterData","searchedTests","AP_TEST","editTestCommentsId","controlMap","has","get","ncontrolcode","slice","selectedTestList","APSelectedTest","ntransactiontestcode","map","test","join","set","resultDataState","testDataStateChange","userRoleControlRights","selectedParamId","instrumentDataState","ResultUsedTasks","taskDataState","RegistrationTestAttachment","onAttachmentSaveClick","nneedsubsample","VALUE","esignRights","screenName","masterList","onCommentsSaveClick","RegistrationTestComment","testCommentDataState","ncontrolCode","ApprovalResultChangeHistory","resultChangeDataState","ApprovalHistory","historyDataState","onNumericInputOnChange","value","name","onTestTabChange","tabProps","activeTestTab","length","String","item","npreregno","selectedSample","materialDataState","documentDataState","warn","intl","formatMessage","id","onSampleTabChange","activeSampleTab","handlePageChange","handleTestPageChange","checkRetestAction","action","ntransactionstatus","RETEST","retestcount","updateInfo","typeName","data","openChildModal","performTestActions","info","obj","realFromDate","realToDate","ntransCode","FilterStatusValue","ALL","FilterStatus","status","sample","ntransactionsamplecode","APSelectedSubSample","nsectioncode","UserSectionValue","UserSection","section","ntestcode","realTestValue","nTransStatus","nsampletypecode","realSampleTypeValue","nregtypecode","realRegTypeValue","nregsubtypecode","realRegSubTypeValue","napprovalversioncode","ApprovalVersionValue","napprovalconfigversioncode","dfrom","fromDate","dto","toDate","nflag","ntype","APSelectedSample","undefined","checkBoxOperation","postParamList","nesignneed","YES","loadEsign","screenData","realFilterStatusValue","sampleList","AP_SAMPLE","splice","selectedsampleList","TestValue","napprovalconfigcode","onFilterComboChange","comboData","fieldName","inputParamData","SampleTypeValue","RegTypeValue","RegSubTypeValue","napproveconfversioncode","stransactionstatus","JobStatusValue","njobstatuscode","onComboChange","GradeValue","onInputOnChange","target","type","checked","NO","handleDateChange","dateName","dateValue","Date","changeMandatory","dataItem","currentTarget","ntransactionresultcode","onReload","realApprovalVersionValue","realUserSectionValue","sfilterstatus","searchSampleRef","searchSubSampleRef","searchTestRef","samplePrintHistoryDataState","sampleHistoryDataState","onFilterSubmit","parseInt","sampleGridDataStateChange","sampleDataStateChange","reportHistoryDataState","onSaveClick","saveType","formRef","ok","ngradecode","senforcestatuscomment","selectedTestCode","postParam","selectedObject","primaryKeyField","saveParam","approvalparameter","approvalParameterEdit","Object","keys","key","push","nreportmandatory","handleClose","nformcode","openModal","templateData","openTemplateModal","validateEsign","sreason","password","onTemplateInputChange","control","onTemplateComboChange","onTemplateDateChange","dateData","isTestComment","x","searchedSample","selectedSampleList","selectedMaster","reporparam","createRef","settings","group","field","masterStatus","error","oldComboData","sampleListColumns","subSampleListColumns","testListColumns","TableExpandableItem","SingleItem","SampleGridItem","SampleGridExpandableItem","sampleListMainField","subSampleListMainField","testListMainField","testMoreField","firstPane","paneHeight","secondPaneHeight","tabPane","SampletypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","ConfigVersionList","UserSectionList","TestList","parentHeight","height","clientHeight","list","newList","i","LABEL","temparray","option","slanguagetypecode","sampleSearchField","ROUTINE","filterSampleParam","inputListName","fetchUrl","childRefs","ref","childFilteredListName","fecthInputObject","searchFieldList","changeList","filterSubSampleParam","filterTestParam","getActiveTestURL","isSingleSelect","AP_SampleList","AP_SubSampleList","AP_SUBSAMPLE","AP_TestList","decisionStatus","actionStatus","subSampleGetParam","testGetParam","testChildGetParam","breadCrumbData","breadCrumbFrom","breadCrumbto","ssampletypename","sregtypename","sregsubtypename","sversionname","ssectionname","stestsynonym","reportPreviewId","editParamId","TestDecisionActionId","TestApprovalActionId","reportGenerateId","filteredListName","clearFilter","searchRef","updatedListname","unchangeList","selectedFilter","showFilter","openFilter","closeFilter","DynamicSampleColumns","sampleMoreField","PLASMA_POOL","title","controlname","objectName","hidden","indexOf","onClick","JobStatus","display","background","borderBottom","marginTop","searchedSubSample","DynamicSubSampleColumns","subSampleMoreField","float","split","setting","DynamicTestColumns","showAPTestList","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","sampleTabDetail","Grade","enforceCommentsHistory","ApprovalParamEdit","nsubsampleneed","ChecklistData","onSaveCheckList","previousProps","bool","values","SampletypeListMap","SampleType","RegistrationTypeListMap","RegType","RegistrationSubTypeListMap","RegSubType","FilterStatusListMap","ConfigVersionListMap","ApprovalVersion","UserSectionListMap","TestListMap","Test","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","JSON","parse","stringify","index","findIndex","DynamicDesign","dynamicColumn","jsondata","samplelistitem","subsamplelistitem","testlistitem","samplegriditem","samplegridmoreitem","sampledisplayfields","testlistmoreitems","tabMap","RegistrationAttachment","PrintHistory","COAHistory","url","multilingualMsg","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { faBolt, faEye, faPencilAlt, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card, Col, Nav, Row, } from 'react-bootstrap';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ProductList } from '../testmanagement/testmaster-styled';\r\n//import SplitPane from \"react-splitter-layout\";\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {\r\n    getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, updateDecision,\r\n    getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo, validateEsignCredential,\r\n    crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList, checkListRecord, generateCOAReport,\r\n    getSampleChildTabDetail, getAttachmentCombo, viewAttachment, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest,\r\n    getEnforceCommentsHistory\r\n} from '../../actions'\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport ApprovalResultsTab from './ApprovalResultsTab';\r\nimport { getControlMap, listDataFromDynamicArray, showEsign, sortData, constructOptionList, getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport TransactionListMaster from '../../components/TransactionListMaster';\r\nimport TransactionListMasterJson from '../../components/TransactionListMasterJson';\r\nimport ApprovalFilter from './ApprovalFilter'\r\nimport { designProperties, transactionStatus, RegistrationType, RegistrationSubType } from '../../components/Enumeration';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport SampleInfoGrid from './SampleInfoGrid';\r\nimport SampleInfoView from './SampleInfoView';\r\nimport ApprovalInstrumentTab from './ApprovalInstrumentTab'\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport Esign from '../audittrail/Esign';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport EditApprovalParameter from './EditApprovalParameter';\r\n//import ApprovalHistoryTab from './ApprovalHistoryTab';\r\nimport SampleApprovalHistory from './SampleApprovalHistory';\r\nimport ResultChangeHistoryTab from './ResultChangeHistoryTab';\r\nimport ApprovalTask from './ApprovalTask';\r\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\r\nimport TemplateForm from '../checklist/checklist/TemplateForm';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport { onSaveSampleAttachment, onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions';\r\n//import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport CustomPopOver from '../../components/customPopover';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport ApprovalPrintHistoryTab from './ApprovalPrintHistoryTab';\r\nimport ApprovalHistoryTab from './ApprovalHistoryTab';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport ReportHistoryTab from './ReportHistoryTab';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Approval extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.formRef = React.createRef();\r\n        this.state = {\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            resultDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            instrumentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            materialDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            taskDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            testCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'stestsynonym' }] },\r\n            documentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            resultChangeDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            sampleHistoryDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            reportHistoryDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            historyDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            samplePrintHistoryDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            oldComboData: {},\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            screenName: undefined,\r\n            showSample: false,\r\n            showTest: true,\r\n            sampleListColumns: [],\r\n            subSampleListColumns: [],\r\n            testListColumns: [],\r\n            TableExpandableItem: [],\r\n            SingleItem: [],\r\n            SampleGridItem: [],\r\n            SampleGridExpandableItem: [],\r\n            sampleListMainField: [],\r\n            subSampleListMainField: [],\r\n            testListMainField: [],\r\n            testMoreField: [],\r\n            firstPane: 0,\r\n            paneHeight: 0,\r\n            secondPaneHeight: 0,\r\n            tabPane: 0,\r\n            SampletypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            ConfigVersionList: [],\r\n            UserSectionList: [],\r\n            TestList: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n            splitChangeWidthPercentage: 22,\r\n            subSampleSkip: 0,\r\n            subSampleTake :5,\r\n        }\r\n        //this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\r\n    }\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n    // onSecondaryPaneSizeChange = (e, val) => {\r\n    //     this.setState({\r\n    //         firstPane: e - val,\r\n    //         tabPane: e - 80,\r\n    //         childPane: this.state.parentHeight - e - 80\r\n    //     })\r\n    // }\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n\r\n    constructDesign(list) {\r\n\r\n        let newList = []\r\n        if (list.length > 0) {\r\n            list.map((i) => {\r\n                newList.push({ [designProperties.LABEL]: i, [designProperties.VALUE]: i })\r\n            })\r\n        }\r\n        return newList;\r\n    }\r\n\r\n    handleSubSamplePageChange = e => {\r\n        this.setState({ subSampleSkip: e.skip,subSampleTake: e.take });\r\n\r\n        setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    }\r\n    \r\n    showAPSampleinfo = () => {\r\n\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n\r\n    showAPTestList() {\r\n      \r\n        this.setState({ showTest: true, showSample: false })\r\n    }\r\n\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n\r\n    sampleInfoDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n    verticalPaneSizeChange = (val) => {\r\n        console.log(\"val\", val)\r\n        this.setState({\r\n            initialVerticalWidth: val - 150\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        // let obj = this.covertDatetoString(this.props.Login.masterData.realFromDate || this.props.Login.masterData.fromDate || new Date(), this.props.Login.masterData.realToDate || this.props.Login.masterData.toDate || new Date())\r\n        let sampleSearchField = [\"sarno\", \"dregdate\", \"sdecisionstatus\", \"ssampletypestatus\", \"smanuflotno\", \"smanufname\", \"smanufsitename\", \"sproductcatname\", \"sproductname\", \"sspecname\"];\r\n        if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\r\n            sampleSearchField = [\"sarno\", \"sproductname\", \"sproductcatname\", \"sregsubtypename\", \"sregtypename\", \"sspecname\", \"smanufname\", \"sstorageconditionname\",\r\n                \"sclientname\", \"scontainertype\", \"sdeadline\", \"sdecisionstatus\", \"sdeviationcomments\", \"sdispositionname\", \"slotno\", \"sbatchno\", \"sourfile\", \"speriodname\",\r\n                \"spriorityname\", \"sreceiveddate\", \"sremarks\", \"sreportremarks\", \"ssamplecondition\", \"ssuppliername\", \"stotalqty\", \"stransdisplaystatus\"\r\n            ]\r\n        }\r\n        const filterSampleParam = {\r\n            inputListName: \"AP_SAMPLE\",\r\n            selectedObject: \"APSelectedSample\",\r\n            primaryKeyField: \"npreregno\",\r\n            fetchUrl: \"approval/getApprovalSubSample\",\r\n            childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                nsampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: (this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue.ntestcode,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                checkBoxOperation:3\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            // searchFieldList: [\"sarno\", \"dregdate\", \"sdecisionstatus\", \"ssampletypestatus\", \"smanuflotno\", \"smanufname\", \"smanufsitename\", \"sproductcatname\", \"sproductname\", \"sspecname\"],\r\n            searchFieldList: sampleSearchField,\r\n            changeList: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedSample\", \"APSelectedSubSample\", \"APSelectedTest\", \"PrintHistory\", \"COAHistory\"]\r\n        };\r\n        const filterSubSampleParam = {\r\n            inputListName: \"AP_SUBSAMPLE\",\r\n            selectedObject: \"APSelectedSubSample\",\r\n            primaryKeyField: \"ntransactionsamplecode\",\r\n            fetchUrl: \"approval/getApprovalTest\",\r\n            childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: (this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode : null,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                checkBoxOperation:3\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"sarno\", \"ssamplearno\"],\r\n            changeList: [\"AP_TEST\", \"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedSubSample\", \"APSelectedTest\"]\r\n        };\r\n\r\n        const filterTestParam = {\r\n            inputListName: \"AP_TEST\",\r\n            selectedObject: \"APSelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            fetchUrl: this.getActiveTestURL(),\r\n            fecthInputObject: {\r\n                ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                checkBoxOperation:3\r\n            },\r\n            isSingleSelect: false,\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"sarno\", \"ssamplearno\", \"stestsynonym\", \"dtransactiondate\", \"smethodname\", \"ssectionname\", \"ssourcename\", \"stransdisplaystatus\", \"sinstrumentcatname\", \"stestname\"],\r\n            changeList: [\"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedTest\"]\r\n        };\r\n        \r\n        let AP_SampleList = this.props.Login.masterData.AP_SAMPLE ? sortData(this.props.Login.masterData.AP_SAMPLE, 'descending', 'npreregno') : [];\r\n        //let AP_SubSampleList = this.props.Login.masterData.AP_SUBSAMPLE ? sortData(this.props.Login.masterData.AP_SUBSAMPLE, 'descending', 'ntransactionsamplecode') : [];\r\n        let AP_SubSampleList = this.props.Login.masterData.AP_SUBSAMPLE ? this.props.Login.masterData.AP_SUBSAMPLE : [];\r\n        let AP_TestList = this.props.Login.masterData.AP_TEST ? this.props.Login.masterData.AP_TEST : [];\r\n        let decisionStatus = this.props.Login.masterData.decisionStatus ? sortData(this.props.Login.masterData.decisionStatus, 'ascending', 'ntransactionstatus') : [];\r\n        let actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'descending', 'ntransactionstatus') : [];\r\n        let subSampleGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            napprovalversioncode : this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\r\n            nneedsubsample:this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            searchSubSampleRef: this.searchSubSampleRef,\r\n            searchTestRef: this.searchTestRef,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            subSampleSkip: this.state.subSampleSkip,\r\n            subSampleTake: this.state.subSampleTake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n            sampleHistoryDataState: this.state.sampleHistoryDataState\r\n        };\r\n        let testGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            napprovalversioncode : this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\r\n            screenName: this.props.Login.screenName,\r\n            searchTestRef: this.searchTestRef\r\n        };\r\n        let testChildGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample && this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\r\n            screenName: this.props.Login.screenName,\r\n            postParamList: this.postParamList,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState\r\n\r\n        };\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            {\r\n                \"label\": \"IDS_SAMPLETYPE\",\r\n                \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\r\n                    this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"-\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"-\"\r\n            }, {\r\n                \"label\": \"IDS_CONFIGVERSION\",\r\n                \"value\": this.props.Login.masterData.realApprovalVersionValue ?\r\n                    this.props.Login.masterData.realApprovalVersionValue.sversionname || \"-\" :\r\n                    this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"-\" : \"-\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_SECTION\",\r\n                \"value\": this.props.Login.masterData.realUserSectionValue ?\r\n                    this.props.Login.masterData.realUserSectionValue.ssectionname || \"-\" :\r\n                    this.props.Login.masterData.UserSectionValue ?\r\n                        this.props.Login.masterData.UserSectionValue.ssectionname || \"-\" : \"-\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_Test\",\r\n                \"value\": this.props.Login.masterData.realTestValue ?\r\n                    this.props.Login.masterData.realTestValue.stestsynonym || \"-\" :\r\n                    this.props.Login.masterData.TestValue ?\r\n                        this.props.Login.masterData.TestValue.stestsynonym || \"-\" : \"-\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_FILTERSTATUS\",\r\n                \"value\": this.props.Login.masterData.realFilterStatusValue ?\r\n                    this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"-\" :\r\n                    this.props.Login.masterData.FilterStatusValue ?\r\n                        this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"-\" : \"-\"\r\n            }\r\n        ];\r\n        \r\n        const reportPreviewId = this.state.controlMap.has(\"SamplePreviewReport\") && this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode;\r\n        const editParamId = this.state.controlMap.has(\"EditReportMandatory\") && this.state.controlMap.get(\"EditReportMandatory\").ncontrolcode;\r\n        const TestDecisionActionId = this.state.controlMap.has(\"TestDecisionAction\") && this.state.controlMap.get(\"TestDecisionAction\").ncontrolcode;\r\n        const TestApprovalActionId = this.state.controlMap.has(\"TestApprovalAction\") && this.state.controlMap.get(\"TestApprovalAction\").ncontrolcode;\r\n        const reportGenerateId = this.state.controlMap.has(\"GenerateCOA\") && this.state.controlMap.get(\"GenerateCOA\").ncontrolcode;\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"npreregno\",\r\n                fetchUrl: \"approval/getApprovalSubSample\",\r\n                fecthInputObject: subSampleGetParam,\r\n                selectedObject: \"APSelectedSample\",\r\n                inputListName: \"AP_SAMPLE\",\r\n                updatedListname: \"updatedSample\",\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\r\n            }, {\r\n                filteredListName: \"searchedSubSample\",\r\n                updatedListname: \"updatedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"ntransactionsamplecode\",\r\n                fetchUrl: \"approval/getApprovalTest\",\r\n                fecthInputObject: testGetParam,\r\n                selectedObject: \"APSelectedSubSample\",\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n                inputListName: \"AP_SUBSAMPLE\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\r\n            }, {\r\n                filteredListName: \"searchedTests\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: this.getActiveTestURL(),\r\n                fecthInputObject: testChildGetParam,\r\n                selectedObject: \"APSelectedTest\",\r\n                inputListName: \"AP_TEST\",\r\n                updatedListname: \"updatedTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\", \"TestList\"]\r\n            }]\r\n\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                    <Row noGutters={\"true\"}>\r\n                        <Col md={12} className='parent-port-height sticky_head_parent' ref={(parentHeight) => { this.parentHeight = parentHeight }}>\r\n                            <ListWrapper>\r\n                                <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1} secondaryInitialSize={this.state.splitChangeWidthPercentage} onSecondaryPaneSizeChange={this.paneSizeChange} primaryMinSize={40} secondaryMinSize={20}>\r\n                                    <TransactionListMasterJson\r\n                                        splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                        needMultiSelect={true}\r\n                                        masterList={this.props.Login.masterData.searchedSample || AP_SampleList}\r\n                                        selectedMaster={this.props.Login.masterData.APSelectedSample}\r\n                                        primaryKeyField=\"npreregno\"\r\n                                        getMasterDetail={this.props.getsubSampleDetail}\r\n                                        inputParam={subSampleGetParam}\r\n                                        additionalParam={['napprovalversioncode']}\r\n                                        mainField={'sarno'}\r\n                                        selectionList={this.state.selectedFilter}\r\n                                        selectionField=\"ntransactionstatus\"\r\n                                        selectionFieldName=\"sfilterstatus\"\r\n                                        selectionColorField=\"stranscolor\"\r\n                                        selectedListName=\"APSelectedSample\"\r\n                                        objectName=\"sample\"\r\n                                        listName=\"IDS_SAMPLE\"\r\n                                        filterColumnData={this.props.filterTransactionList}\r\n                                        searchListName=\"searchedSample\"\r\n                                        needValidation={true}\r\n                                        validationKey=\"napprovalversioncode\"\r\n                                        validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                                        showFilter={this.props.Login.showFilter}\r\n                                        openFilter={this.openFilter}\r\n                                        closeFilter={this.closeFilter}\r\n                                        onFilterSubmit={this.onFilterSubmit}\r\n                                        subFields={this.state.DynamicSampleColumns}\r\n                                        moreField={this.state.sampleMoreField}\r\n                                        jsonDesignFields={true}\r\n                                        jsonField={'jsondata'}\r\n                                        showStatusLink={true}\r\n                                        statusFieldName=\"stransdisplaystatus\"\r\n                                        statusField=\"ntransactionstatus\"\r\n                                        //statusColor=\"sdecisioncolor\"\r\n                                        statusColor=\"stranscolor\"\r\n                                        showStatusIcon={false}\r\n                                        showStatusName={true}\r\n                                        needFilter={true}\r\n                                        searchRef={this.searchSampleRef}\r\n                                        filterParam={filterSampleParam}\r\n                                        skip={this.state.skip}\r\n                                        take={this.state.take}\r\n                                        handlePageChange={this.handlePageChange}\r\n                                        splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                        childTabsKey={[\"AP_SUBSAMPLE\", \"AP_TEST\", \"SampleApprovalHistory\", \"RegistrationAttachment\", \"PrintHistory\", \"COAHistory\"]}\r\n                                        actionIcons={\r\n                                            [\r\n                                                this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ?\r\n                                                    {\r\n                                                        title: \"Report\",\r\n                                                        controlname: \"reports\",\r\n                                                        objectName: \"sample\",\r\n                                                        hidden: this.state.userRoleControlRights.indexOf(reportPreviewId) === -1,\r\n                                                        // onClick: ()=>this.previewSampleReport(reportPreviewId),\r\n                                                        //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\r\n                                                        onClick: this.props.previewSampleReport,\r\n                                                        inputData: {\r\n                                                            userinfo: this.props.Login.userInfo,\r\n                                                            ncontrolcode: reportPreviewId\r\n                                                        },\r\n                                                    } :\r\n                                                    this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE ?\r\n                                                        {\r\n                                                            title: \"Report\",\r\n                                                            controlname: \"reports\",\r\n                                                            objectName: \"sample\",\r\n                                                            hidden: this.state.userRoleControlRights.indexOf(reportGenerateId) === -1,\r\n                                                            // onClick: ()=>this.previewSampleReport(reportPreviewId),\r\n                                                            //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\r\n                                                            onClick: (obj) => this.generateCOAReport(obj, reportGenerateId),\r\n                                                            inputData: {\r\n                                                                userinfo: this.props.Login.userInfo,\r\n                                                                ncontrolcode: reportPreviewId,\r\n                                                                nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                                                                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                                                            },\r\n                                                        }\r\n                                                        : {}\r\n                                            ]\r\n                                        }\r\n\r\n                                        commonActions={\r\n                                            <>\r\n                                                <ProductList className=\"d-flex product-category float-right\">\r\n                                                    {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                    <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                        onClick={() => this.onReload()}\r\n                                                        // title={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                        data-for=\"tooltip-common-wrap\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                        <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                    </Button>\r\n                                                    {/* </Tooltip> */}\r\n                                                    {this.props.Login.masterData.decisionStatus &&\r\n                                                        this.state.userRoleControlRights.indexOf(TestDecisionActionId) !== -1 &&\r\n                                                        this.props.Login.masterData.decisionStatus.length > 0 ?\r\n                                                        <CustomPopOver\r\n                                                            icon={faBolt}\r\n                                                            nav={true}\r\n                                                            data={decisionStatus}\r\n                                                            btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                            textKey=\"sdecisionstatus\"\r\n                                                            iconKey=\"ntransactionstatus\"\r\n                                                            dynamicButton={(value) => this.updateDecision(value)}\r\n                                                        >\r\n                                                        </CustomPopOver>\r\n\r\n                                                        : \"\"}\r\n                                                </ProductList>\r\n                                            </>\r\n                                        }\r\n                                        filterComponent={[\r\n                                            {\r\n                                                \"Sample Filter\": <ApprovalFilter\r\n                                                    SampleType={this.state.SampletypeList || []}\r\n                                                    SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                                    RegType={this.state.RegistrationTypeList || []}\r\n                                                    RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                                    RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                                    RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                                    ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                                    ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                                    UserSection={this.state.UserSectionList || []}\r\n                                                    UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                                    JobStatus={this.props.Login.masterData.JobStatus || []}\r\n                                                    Test={this.state.TestList || []}\r\n                                                    TestValue={this.props.Login.masterData.TestValue || []}\r\n                                                    FilterStatus={this.state.FilterStatusList || []}\r\n                                                    FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                                    fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                                    toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                                    onFilterComboChange={this.onFilterComboChange}\r\n                                                    handleDateChange={this.handleDateChange}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    \r\n                                                />\r\n                                            }\r\n                                        ]}\r\n\r\n                                    />\r\n                                    <ScrollBar ref={(ref) => { this._scrollBarRef = ref; }}>\r\n                                        <SplitterLayout\r\n                                            customClassName=\"detailed-inner\"\r\n                                            vertical\r\n                                            borderColor=\"#999\"\r\n                                            primaryIndex={1}\r\n                                            onSecondaryPaneSizeChange={this.verticalPaneSizeChange}\r\n                                            secondaryInitialSize={400}\r\n                                        >\r\n                                            <div>\r\n                                                <div style={this.state.showTest === true ? { display: \"block\", background: \"#FFFF\" } : { display: \"none\", background: \"#FFFF\" }} >\r\n                                                    <SplitterLayout borderColor=\"#999\"\r\n                                                        primaryIndex={1} percentage={true}\r\n                                                        secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                                        onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                                                        primaryMinSize={40}\r\n                                                        secondaryMinSize={30}\r\n                                                    >\r\n                                                        <Card>\r\n                                                            <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                                                                    <h4 className=\"card-title\">Sub Sample</h4>\r\n                                                                </span>\r\n                                                            </Card.Header>\r\n                                                            <Card.Body className='p-0'>\r\n                                                                <TransactionListMasterJson\r\n                                                                    paneHeight={this.state.initialVerticalWidth}\r\n                                                                    masterList={this.props.Login.masterData.searchedSubSample || AP_SubSampleList}\r\n                                                                    selectedMaster={this.props.Login.masterData.APSelectedSubSample}\r\n                                                                    primaryKeyField=\"ntransactionsamplecode\"\r\n                                                                    getMasterDetail={this.props.getTestDetail}\r\n                                                                    inputParam={testGetParam}\r\n                                                                    additionalParam={[]}\r\n                                                                    mainField=\"ssamplearno\"\r\n                                                                    selectedListName=\"APSelectedSubSample\"\r\n                                                                    objectName=\"subSample\"\r\n                                                                    listName=\"IDS_SUBSAMPLE\"\r\n                                                                    jsonField={'jsondata'}\r\n                                                                    jsonDesignFields={true}\r\n                                                                    showStatusLink={true}\r\n                                                                    showStatusName={true}\r\n                                                                    statusFieldName=\"stransdisplaystatus\"\r\n                                                                    statusField=\"ntransactionstatus\"\r\n                                                                    selectionField=\"ntransactionstatus\"\r\n                                                                    selectionFieldName=\"stransdisplaystatus\"\r\n                                                                    selectionColorField=\"stranscolor\"\r\n                                                                    statusColor=\"stranscolor\"\r\n                                                                    subFields={this.state.DynamicSubSampleColumns}\r\n                                                                    moreField={this.state.subSampleMoreField}\r\n                                                                    needValidation={false}\r\n                                                                    needMultiSelect={true}\r\n                                                                    needFilter={false}\r\n                                                                    searchRef={this.searchSubSampleRef}\r\n                                                                    filterParam={filterSubSampleParam}\r\n                                                                    filterColumnData={this.props.filterTransactionList}\r\n                                                                    searchListName=\"searchedSubSample\"\r\n                                                                    skip={this.state.subSampleSkip}\r\n                                                                    take={this.state.subSampleTake}\r\n                                                                    handlePageChange={this.handleSubSamplePageChange}\r\n                                                                    childTabsKey={[\"AP_TEST\"]}\r\n                                                                />\r\n                                                            </Card.Body>\r\n                                                        </Card>\r\n                                                        <ContentPanel>\r\n                                                            <Card>\r\n                                                                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                    <span style={{ display: \"inline-block\" }}>\r\n                                                                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                                                                    </span>\r\n                                                                    <button className=\"btn btn-primary btn-padd-custom\" style={{ float: \"right\" }}\r\n                                                                        onClick={() => this.showAPSampleinfo()}\r\n                                                                    >\r\n                                                                        <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                                                        {this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n                                                                    </button>\r\n                                                                    {/* </div> */}\r\n                                                                </Card.Header>\r\n                                                                <Card.Body className='p-0'>\r\n\r\n                                                                    <TransactionListMasterJson\r\n                                                                        paneHeight={this.state.initialVerticalWidth}\r\n                                                                        needMultiSelect={true}\r\n                                                                        masterList={this.props.Login.masterData.searchedTests || AP_TestList}\r\n                                                                        selectedMaster={this.props.Login.masterData.APSelectedTest}\r\n                                                                        primaryKeyField=\"ntransactiontestcode\"\r\n                                                                        getMasterDetail={this.props.getTestChildTabDetail}\r\n                                                                        inputParam={testChildGetParam}\r\n                                                                        additionalParam={[]}\r\n                                                                        mainField={'stestsynonym'}\r\n                                                                        selectedListName=\"APSelectedTest\"\r\n                                                                        objectName=\"test\"\r\n                                                                        listName=\"IDS_TEST\"\r\n                                                                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                                                                        showStatusLink={true}\r\n                                                                        statusFieldName=\"stransdisplaystatus\"\r\n                                                                        statusField=\"ntransactionstatus\"\r\n                                                                        showStatusIcon={false}\r\n                                                                        showStatusName={true}\r\n                                                                        subFieldsLabel={true}\r\n                                                                        jsonField={'jsondata'}\r\n                                                                        jsonDesignFields={false}\r\n                                                                        selectionField=\"ntransactionstatus\"\r\n                                                                        selectionFieldName=\"sfilterstatus\"\r\n                                                                        selectionColorField=\"scolorhexcode\"\r\n                                                                        selectionList={this.props.Login.masterData.FilterStatus || []}\r\n                                                                        needSubFieldlabel={true}\r\n                                                                        subFields={this.state.DynamicTestColumns}\r\n                                                                        moreField={this.state.testMoreField}\r\n                                                                        needValidation={false}\r\n                                                                        needFilter={false}\r\n                                                                        filterColumnData={this.props.filterTransactionList}\r\n                                                                        searchListName=\"searchedTests\"\r\n                                                                        searchRef={this.searchTestRef}\r\n                                                                        filterParam={filterTestParam}\r\n                                                                        skip={this.state.testskip}\r\n                                                                        take={this.state.testtake}\r\n                                                                        showMoreResetList={true}\r\n                                                                        showMoreResetListName=\"AP_SAMPLE\"\r\n                                                                        handlePageChange={this.handleTestPageChange}\r\n                                                                        buttonCount={5}\r\n                                                                        childTabsKey={\r\n                                                                            [\r\n                                                                                \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                                                                                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"ApprovalHistory\"\r\n                                                                            ]\r\n                                                                        }\r\n                                                                        commonActions={\r\n\r\n                                                                            <ProductList className=\"d-flex product-category justify-content-end icon-group-wrap\">\r\n                                                                                <Nav.Link\r\n                                                                                    hidden={this.state.userRoleControlRights.indexOf(editParamId) === -1}\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDITREPORTMANDATORY\" })}\r\n                                                                                    data-for=\"tooltip-common-wrap\"\r\n                                                                                    data-place=\"left\"\r\n                                                                                    className=\"btn btn-circle outline-grey\"\r\n                                                                                    onClick={() => this.props.getParameterEdit({ APSelectedTest: this.props.Login.masterData.APSelectedTest, userInfo: this.props.Login.userInfo, masterData: this.props.Login.masterData })}\r\n                                                                                >\r\n                                                                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                                                </Nav.Link>\r\n\r\n                                                                                {this.props.Login.masterData.actionStatus &&\r\n                                                                                    this.state.userRoleControlRights.indexOf(TestApprovalActionId) !== -1 &&\r\n                                                                                    actionStatus.length > 0 ?\r\n                                                                                    <CustomPopOver\r\n                                                                                        icon={faBolt}\r\n                                                                                        nav={true}\r\n                                                                                        data={actionStatus}\r\n                                                                                        btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                                                        dynamicButton={(value) => this.checkRetestAction(value, TestApprovalActionId)}\r\n                                                                                        textKey=\"stransdisplaystatus\"\r\n                                                                                        iconKey=\"ntransactionstatus\"\r\n                                                                                    >\r\n                                                                                    </CustomPopOver>\r\n                                                                                    : \"\"}\r\n                                                                            </ProductList>\r\n                                                                        }\r\n                                                                    />\r\n                                                                </Card.Body>\r\n                                                            </Card>\r\n                                                        </ContentPanel>\r\n                                                    </SplitterLayout>\r\n                                                </div>\r\n                                                <ContentPanel style={this.state.showSample === true ? { display: \"block\" } : { display: \"none\" }}>\r\n                                                    <Card className=\"border-0\">\r\n                                                        <Card.Body className='p-0'>\r\n                                                            <Row>\r\n                                                                <Col md={12}>\r\n                                                                    <Card className='p-0'>\r\n                                                                        <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                            <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                                                                <h4 >{this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}</h4>\r\n                                                                            </span>\r\n                                                                            <button className=\"btn btn-primary btn-padd-custom\" style={{ float: \"right\" }}\r\n                                                                                onClick={() => this.showAPTestList()}\r\n                                                                            >\r\n                                                                                <FontAwesomeIcon icon={faEye}></FontAwesomeIcon> { }\r\n                                                                                {this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                                                            </button>\r\n                                                                        </Card.Header>\r\n                                                                        <Card.Body>\r\n                                                                            <ScrollBar>\r\n                                                                                <div style={{ height: this.state.initialVerticalWidth }}>\r\n                                                                                    {this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length === 1 ?\r\n                                                                                        <SampleInfoView\r\n                                                                                            data={(this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length > 0) ?\r\n                                                                                                this.props.Login.masterData.APSelectedSample[this.props.Login.masterData.APSelectedSample.length - 1] : {}}\r\n                                                                                            SingleItem={this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample ?\r\n                                                                                                this.state.SingleItem : []}\r\n                                                                                            screenName=\"IDS_SAMPLEINFO\"\r\n                                                                                            userInfo = {this.props.Login.userInfo}\r\n\r\n                                                                                        />\r\n\r\n                                                                                        :\r\n                                                                                        <SampleInfoGrid\r\n                                                                                            selectedSample={this.props.Login.masterData.APSelectedSample}\r\n                                                                                            userInfo={this.props.Login.userInfo || {}}\r\n                                                                                            masterData={this.props.Login.masterData}\r\n                                                                                            inputParam={this.props.Login.inputParam}\r\n                                                                                            dataState={this.state.sampleGridDataState}\r\n                                                                                            dataStateChange={this.sampleInfoDataStateChange}\r\n                                                                                            extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem)||[]}\r\n                                                                                            detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField)||[]}\r\n                                                                                            primaryKeyField={\"npreregno\"}\r\n                                                                                            expandField=\"expanded\"\r\n                                                                                            screenName=\"IDS_SAMPLEINFO\"\r\n                                                                                            jsonField={\"jsondata\"}\r\n                                                                                        />\r\n                                                                                    }\r\n                                                                                </div>\r\n                                                                            </ScrollBar>\r\n                                                                        </Card.Body>\r\n                                                                    </Card>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Card.Body>\r\n                                                    </Card>\r\n                                                </ContentPanel>\r\n                                            </div>\r\n                                            <div>\r\n                                                <ScrollBar>\r\n                                                    <div style={{ height: \"calc(110vh - \" + (+this.state.initialVerticalWidth + 100) + \"px)\" }}>\r\n                                                        {this.state.showSample ?\r\n\r\n                                                            <CustomTabs paneHeight={this.state.tabPane} activeKey={this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\"}\r\n                                                                tabDetail={this.sampleTabDetail()} onTabChange={this.onSampleTabChange} /> :\r\n\r\n                                                            this.state.showTest ?\r\n                                                                <Card>\r\n                                                                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                                                                            <h4 className=\"card-title\">Parameter Results</h4>\r\n                                                                        </span>\r\n                                                                    </Card.Header>\r\n                                                                    <CustomTabs paneHeight={this.state.tabPane} activeKey={this.props.Login.activeTestTab || \"IDS_RESULTS\"}\r\n                                                                        tabDetail={this.testTabDetail()} onTabChange={this.onTestTabChange} />\r\n                                                                </Card>\r\n                                                                : \"\"}\r\n                                                    </div>\r\n                                                </ScrollBar>\r\n                                            </div>\r\n                                        </SplitterLayout>\r\n                                        {/* <div className=\"fixed_list_height\">\r\n                                            <>\r\n                                                <div className=\"card_group\">\r\n                                                    <ContentPanel style={this.state.showTest === true ? { display: \"block\" } : { display: \"none\" }}>\r\n                                                        <Card className=\"border-0\">\r\n                                                            <Card.Body className='p-0'>\r\n                                                                <Card>\r\n                                                                    <Card.Header className=\"d-flex justify-content-between\" style={{ borderBottom: \"0px\" }}>\r\n                                                                        <span>\r\n                                                                            <h4 >{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                                                                        </span>\r\n                                                                        <Button className=\"btn btn-primary\"\r\n                                                                            onClick={() => this.showSampleInfo()}>\r\n                                                                            <FontAwesomeIcon icon={faEye} />{\"  \"}\r\n                                                                            {this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n\r\n                                                                        </Button>\r\n                                                                    </Card.Header>\r\n                                                                    <Card.Body className=\"p-0\">\r\n                                                                        {this.state.showTest ?\r\n                                                                            <TransactionListMaster\r\n                                                                                needMultiSelect={true}\r\n                                                                                masterList={this.props.Login.masterData.searchedTests || AP_TestList}\r\n                                                                                selectedMaster={this.props.Login.masterData.selectedTest}\r\n                                                                                primaryKeyField=\"ntransactiontestcode\"\r\n                                                                                getMasterDetail={this.props.getTestChildTabDetail}\r\n                                                                                inputParam={testChildGetParam}\r\n                                                                                additionalParam={[]}\r\n                                                                                mainField={this.state.testListMainField.length > 0 && this.state.testListMainField[0]['2']}\r\n                                                                                selectedListName=\"selectedTest\"\r\n                                                                                objectName=\"test\"\r\n                                                                                listName=\"IDS_TEST\"\r\n                                                                                pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                                                                                showStatusLink={true}\r\n                                                                                statusFieldName=\"stransdisplaystatus\"\r\n                                                                                statusField=\"ntransactionstatus\"\r\n                                                                                showStatusIcon={false}\r\n                                                                                showStatusName={true}\r\n                                                                                subFieldsLabel={true}\r\n                                                                                selectionField=\"ntransactionstatus\"\r\n                                                                                selectionFieldName=\"sfilterstatus\"\r\n                                                                                selectionColorField=\"scolorhexcode\"\r\n                                                                                selectionList={this.props.Login.masterData.FilterStatus || []}\r\n                                                                                needSubFieldlabel={true}\r\n                                                                                subFields={this.state.testListColumns}\r\n                                                                                moreField={this.state.testMoreField}\r\n                                                                                needValidation={false}\r\n                                                                                needFilter={false}\r\n                                                                                filterColumnData={this.props.filterTransactionList}\r\n                                                                                searchListName=\"searchedTests\"\r\n                                                                                searchRef={this.searchTestRef}\r\n                                                                                filterParam={filterTestParam}\r\n                                                                                skip={this.state.testskip}\r\n                                                                                take={this.state.testtake}\r\n                                                                                showMoreResetList = {true}\r\n                                                                                showMoreResetListName=\"AP_SAMPLE\"\r\n                                                                                handlePageChange={this.handleTestPageChange}\r\n                                                                                buttonCount={5}\r\n                                                                                childTabsKey={\r\n                                                                                    [\r\n                                                                                        \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                                                                                        \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"ApprovalHistory\"\r\n                                                                                    ]\r\n                                                                                }\r\n                                                                                commonActions={\r\n\r\n                                                                                    <ProductList className=\"d-flex product-category justify-content-end icon-group-wrap\">\r\n                                                                                        <Nav.Link\r\n                                                                                            hidden={this.state.userRoleControlRights.indexOf(editParamId) === -1}\r\n                                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDITREPORTMANDATORY\" })}\r\n                                                                                            data-for=\"tooltip-common-wrap\"\r\n                                                                                            data-place=\"left\"\r\n                                                                                            className=\"btn btn-circle outline-grey\"\r\n                                                                                            onClick={() => this.props.getParameterEdit({ selectedTest: this.props.Login.masterData.selectedTest, userInfo: this.props.Login.userInfo, masterData: this.props.Login.masterData })}\r\n                                                                                        >\r\n                                                                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                                                        </Nav.Link>\r\n                                                                                        {this.props.Login.masterData.actionStatus &&\r\n                                                                                            this.state.userRoleControlRights.indexOf(TestApprovalActionId) !== -1 &&\r\n                                                                                            actionStatus.length > 0 ?\r\n                                                                                            <CustomPopOver\r\n                                                                                                icon={faBolt}\r\n                                                                                                nav={true}\r\n                                                                                                data={actionStatus}\r\n                                                                                                btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                                                                dynamicButton={(value) => this.checkRetestAction(value, TestApprovalActionId)}\r\n                                                                                                textKey=\"stransdisplaystatus\"\r\n                                                                                                iconKey=\"ntransactionstatus\"\r\n\r\n                                                                                            >\r\n                                                                                            </CustomPopOver>\r\n\r\n                                                                                            : \"\"}\r\n\r\n                                                                                    </ProductList>\r\n\r\n                                                                                }\r\n                                                                            />\r\n                                                                            : \"\"}\r\n                                                                    </Card.Body>\r\n                                                                </Card>\r\n                                                            </Card.Body>\r\n                                                        </Card>\r\n                                                    </ContentPanel>\r\n                                                    <ContentPanel style={this.state.showSample === true ? { display: \"block\" } : { display: \"none\" }}>\r\n                                                        <Row noGutters={\"true\"}>\r\n                                                            <Col md={12}>\r\n                                                                <Card>\r\n                                                                    <Card.Header className=\"d-flex justify-content-between\">\r\n                                                                        <span>\r\n                                                                            <h4 >{this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}</h4>\r\n                                                                        </span>\r\n                                                                        <Button className=\"btn btn-primary\"\r\n                                                                            onClick={() => this.showTestList()}>\r\n                                                                            <FontAwesomeIcon icon={faEye} />{\"  \"}\r\n                                                                            {this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                                                        </Button>\r\n                                                                    </Card.Header>\r\n                                                                    {this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length === 1 ?\r\n                                                                        < SampleInfoView\r\n                                                                            data={this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length > 0 ? this.props.Login.masterData.selectedSample[this.props.Login.masterData.selectedSample.length - 1] : {}}\r\n                                                                            SingleItem={this.state.SingleItem}\r\n                                                                            screenName=\"IDS_SAMPLEINFO\"\r\n                                                                        />\r\n                                                                        :\r\n                                                                        this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length > 1 ?\r\n                                                                            <SampleInfoGrid\r\n                                                                                selectedSample={this.props.Login.masterData.selectedSample}\r\n                                                                                dataState={this.state.sampleGridDataState}\r\n                                                                                dataStateChange={this.sampleGridDataStateChange}\r\n                                                                                detailedFieldList={this.state.SampleGridExpandableItem}\r\n                                                                                extractedColumnList={this.state.SampleGridItem}\r\n                                                                                userInfo={this.props.Login.userInfo}\r\n                                                                                inputParam={this.props.Login.inputParam}\r\n                                                                                screenName=\"IDS_SAMPLEINFO\"\r\n                                                                            /> : \"\"\r\n                                                                    }\r\n                                                                </Card>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ContentPanel>\r\n                                                    <ListWrapper>\r\n                                                        <ContentPanel className=\"panel-main-content\">\r\n                                                            <Card className=\"border-0\">\r\n                                                                <Card.Body className='p-0'>\r\n                                                                    <Row noGutters={\"true\"}>\r\n                                                                        <Col md={12}>\r\n                                                                            {this.state.showTest ?\r\n                                                                                <CustomTabs paneHeight={this.state.tabPane} activeKey={this.props.Login.activeTestTab || \"IDS_RESULTS\"} tabDetail={this.testTabDetail()} onTabChange={this.onTestTabChange} /> :\r\n                                                                                this.state.showSample ?\r\n                                                                                    <CustomTabs paneHeight={this.state.tabPane} activeKey={this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\"} tabDetail={this.sampleTabDetail()} onTabChange={this.onSampleTabChange} />\r\n                                                                                    : \"\"}\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </Card.Body>\r\n                                                            </Card>\r\n                                                        </ContentPanel>\r\n                                                    </ListWrapper>\r\n                                                </div>\r\n                                            </>\r\n                                        </div> */}\r\n                                    </ScrollBar>\r\n\r\n                                </SplitterLayout>\r\n                            </ListWrapper >\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {this.props.Login.openChildModal ?\r\n                    <SlideOutModal\r\n                        onSaveClick={this.props.Login.operation === 'dynamic' ? () => this.performTestActions(this.props.Login.action, TestApprovalActionId) : this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={this.props.Login.screenName}\r\n                        closeModal={this.handleClose}\r\n                        show={this.props.Login.openChildModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === 'enforce' ? [{ \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"senforcestatuscomment\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }] : []}\r\n                        loginoperation={this.props.Login.operation === 'view' ? true : false}\r\n                        //graphView={this.props.Login.operation !=='enforce' ? this.props.Login.operation:undefined}\r\n                        noSave={this.props.Login.operation === 'view' ? true : false}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.props.Login.operation === 'enforce' ?\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormSelectSearch\r\n                                            name={\"ngradecode\"}\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                                            value={this.props.Login.masterData.GradeValue || []}\r\n                                            options={this.props.Login.masterData.Grade || []}\r\n                                            optionId=\"ngradecode\"\r\n                                            optionValue=\"sgradename\"\r\n                                            isMandatory={true}\r\n                                            isMulti={false}\r\n                                            isDisabled={false}\r\n                                            isSearchable={false}\r\n                                            closeMenuOnSelect={true}\r\n                                            isClearable={false}\r\n                                            onChange={(event) => this.onComboChange(event, 'ngradecode')}\r\n                                        />\r\n                                        <FormTextarea\r\n                                            name=\"senforcestatuscomment\"\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                            value={this.state.selectedRecord ? this.state.selectedRecord[\"senforcestatuscomment\"] : \"\"}\r\n                                            rows=\"2\"\r\n                                            isMandatory={true}\r\n                                            required={false}\r\n                                            maxLength={255}\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                        />\r\n                                    </Col>\r\n                                </Row> :\r\n                                this.props.Login.operation === 'dynamic' ?\r\n                                    <Row>\r\n                                        <Col md=\"12\">\r\n                                            {/* <FormNumericInput\r\n                                            name={\"retestcount\"}\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_RETESTCOUNT\" })}\r\n                                            type=\"number\"\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                                            value={this.state.selectedRecord?this.state.selectedRecord.retestcount:\"\"}\r\n                                            isMandatory=\"*\" \r\n                                            required={true}\r\n                                            min={1}\r\n                                            max={10}\r\n                                        /> */}\r\n                                            <FormNumericInput\r\n                                                name=\"retestcount\"\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_RETESTCOUNT\" })}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_MAX\" }) + \": \" + this.props.Login.masterData.retestcount}\r\n                                                type=\"text\"\r\n                                                strict={true}\r\n                                                className=\"form-control\"\r\n                                                value={this.state.selectedRecord ? this.state.selectedRecord.retestcount : \"\"}\r\n                                                maxLength={6}\r\n                                                onChange={(event) => this.onNumericInputOnChange(event, 'retestcount')}\r\n                                                isMandatory=\"*\"\r\n                                                required={true}\r\n                                                noStyle={true}\r\n                                            // min={1}\r\n                                            // max={this.props.Login.masterData.retestcount}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row> :\r\n                                    this.props.Login.operation === 'view' ?\r\n                                        <Row>\r\n                                            <Col md={12}>\r\n                                                <DataGrid\r\n                                                    primaryKeyField={\"nresultparamcommenthistorycode\"}\r\n                                                    data={this.props.Login.masterData.enforceCommentsHistory || []}\r\n                                                    dataResult={this.props.Login.masterData.enforceCommentsHistory || []}\r\n                                                    dataState={{ skip: 0, take: this.props.Login.masterData.enforceCommentsHistory ? this.props.Login.masterData.enforceCommentsHistory.length : 0 }}\r\n                                                    // dataStateChange={this.dataStateChange}\r\n                                                    extractedColumnList={\r\n                                                        [\r\n                                                            { \"idsName\": \"IDS_ENFORCESTATUSCOMMENT\", \"dataField\": \"senforcestatuscomment\", \"width\": \"450px\" }\r\n                                                        ]\r\n                                                    }\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    pageable={false}\r\n                                                    hideColumnFilter={true}\r\n                                                    isActionRequired={false}\r\n                                                    isToolBarRequired={false}\r\n                                                    scrollable={\"scrollable\"}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        :\r\n                                        <EditApprovalParameter\r\n                                            ApprovalParamEdit={this.props.Login.ApprovalParamEdit || []}\r\n                                            changeMandatory={this.changeMandatory}\r\n                                            selectedRecord={this.state.selectedRecord.approvalParameterEdit || {}}\r\n                                            nsubsampleneed={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed}\r\n                                        />\r\n                        }\r\n                    />\r\n                    : \"\"}\r\n                {this.props.Login.masterData.ChecklistData && this.props.Login.screenName === 'IDS_CHECKLISTRESULT' ?\r\n                    <TemplateForm\r\n                        templateData={this.props.Login.masterData.ChecklistData}\r\n                        needSaveButton={false}\r\n                        formRef={this.formRef}\r\n                        onTemplateInputChange={this.onTemplateInputChange}\r\n                        handleClose={this.handleClose}\r\n                        onTemplateComboChange={this.onTemplateComboChange}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.props.onSaveCheckList}\r\n                        Login={this.props.Login}\r\n                        viewScreen={this.props.Login.openTemplateModal}\r\n                        selectedRecord={this.state.selectedRecord || []}\r\n                        onTemplateDateChange={this.onTemplateDateChange}\r\n                    />\r\n                    : \"\"}\r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            sampleListMainField, subSampleListMainField, testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n            resultDataState, instrumentDataState,\r\n            materialDataState, taskDataState,\r\n            documentDataState, resultChangeDataState,\r\n            historyDataState, testCommentDataState,\r\n            samplePrintHistoryDataState, sampleHistoryDataState,\r\n            selectedRecord, SampletypeList, RegistrationTypeList,\r\n            RegistrationSubTypeList, FilterStatusList,\r\n            ConfigVersionList, UserSectionList, TestList, skip, take, testskip, testtake, selectedFilter,\r\n            DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns, DynamicGridItem,\r\n            DynamicGridMoreField } = this.state;\r\n        let bool = false;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            bool = true;\r\n            // this.setState({userRoleControlRights, controlMap});\r\n        }\r\n        if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\r\n            if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\r\n                let dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] }\r\n                resultDataState = dataState\r\n                instrumentDataState = dataState\r\n                materialDataState = dataState\r\n                taskDataState = dataState\r\n                documentDataState = dataState\r\n                resultChangeDataState = dataState\r\n                historyDataState = dataState\r\n                testCommentDataState = dataState\r\n                // this.setState({\r\n                //     resultDataState: dataSate,instrumentDataState: dataSate,\r\n                //     materialDataState: dataSate,taskDataState: dataSate,instrumentDataState: dataSate,\r\n                //     instrumentDataState: dataSate,documentDataState: dataSate,resultChangeDataState: dataSate,\r\n                //     historyDataState: dataSate,resultDataState: dataSate,testCommentDataState:dataSate,\r\n                // });\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            // this.setState({selectedRecord: this.props.Login.selectedRecord });\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            TestList = TestListMap.get(\"OptionList\");\r\n            bool = true;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n\r\n            // const selectedFilters = this.props.Login.masterData.FilterStatusValue && \r\n            //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ? \r\n            //   JSON.stringify (JSON.parse(this.props.Login.masterData.FilterStatus)) : []\r\n\r\n            // const selectedFilters = this.props.Login.masterData.FilterStatusValue &&\r\n            //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ?\r\n            //     this.props.Login.masterData.FilterStatus : [];\r\n\r\n            const selectedFilters = this.props.Login.masterData.FilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\r\n                instrumentDataState = this.props.Login.instrumentDataState;\r\n            }\r\n            if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\r\n                taskDataState = this.props.Login.taskDataState;\r\n            }\r\n            if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\r\n                resultChangeDataState = this.props.Login.resultChangeDataState;\r\n            }\r\n            if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\r\n                historyDataState = this.props.Login.historyDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\r\n                samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\r\n            }\r\n            if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\r\n                sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\r\n            testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\r\n            bool = true;\r\n            // sampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTITEM);\r\n            // subSampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTITEM);\r\n            // testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTITEM);\r\n            // sampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTMAINFIELD);\r\n            // subSampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTMAINFIELD);\r\n            // testListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMAINFIELD);\r\n            // SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.SINGLEITEMDATA)\r\n            // SampleGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDITEM)\r\n            // SampleGridExpandableItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDEXPANDABLEITEM)\r\n            // testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMOREITEM)\r\n            // let {selectedRecord}=this.state\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n            // this.setState({\r\n            //     sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            //     sampleListMainField, subSampleListMainField, testListMainField,\r\n            //     SampleGridItem, SampleGridExpandableItem, testMoreField,selectedRecord\r\n            // })\r\n            bool = true;\r\n        }\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap,\r\n                sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n                sampleListMainField, subSampleListMainField, testListMainField,\r\n                SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n                resultDataState, instrumentDataState,\r\n                materialDataState, taskDataState,\r\n                documentDataState, resultChangeDataState,\r\n                historyDataState, testCommentDataState,\r\n                samplePrintHistoryDataState, sampleHistoryDataState,\r\n                selectedRecord, SampletypeList, RegistrationTypeList,\r\n                RegistrationSubTypeList, FilterStatusList,\r\n                ConfigVersionList, UserSectionList, TestList,\r\n                skip, take, testskip, testtake, selectedFilter,\r\n                DynamicSampleColumns, DynamicSubSampleColumns,\r\n                DynamicTestColumns, DynamicGridItem,\r\n                DynamicGridMoreField\r\n            });\r\n        }\r\n    }\r\n\r\n    // previewSampleReport = (ncontrolCode) => {\r\n\r\n    //     console.log(\"report:\", this.props.Login.masterData.selectedSample);\r\n    //     const selectedSample = this.props.Login.masterData.selectedSample[0];\r\n\r\n    //     const inputData = {ndecisionstatus:selectedSample.ndecisionstatus,\r\n    //                         userinfo:this.props.Login.userInfo,\r\n    //                         nprimarykey: selectedSample.npreregno,\r\n    //                         ncoareporttypecode : reportCOAType.SAMPLECERTIFICATEPRIVIEW,\r\n    //                         nreporttypecode :REPORTTYPE.SAMPLEREPORT,\r\n    //                         sprimarykeyname :\"npreregno\",\r\n    //                         ncontrolcode : ncontrolCode,\r\n    //                         nregtypecode:selectedSample.nregtypecode,\r\n    //                         nregsubtypecode: selectedSample.nregsubtypecode\r\n    //                         }\r\n    //     this.props.previewSampleReport(inputData);\r\n\r\n    // }\r\n\r\n    sampleTabDetail() {\r\n        const tabMap = new Map();\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        tabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                selectedMaster={this.props.Login.masterData.selectedSample}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={this.props.Login.masterData.selectedSample}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.selectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_SAMPLES\"\r\n                displayName=\"sarno\"\r\n            />)\r\n        tabMap.set(\"IDS_SAMPLEAPPROVALHISTORY\",\r\n            <SampleApprovalHistory\r\n                userInfo={this.props.Login.userInfo}\r\n                ApprovalHistory={this.props.Login.masterData.SampleApprovalHistory}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.sampleHistoryDataState}\r\n                dataStateChange={this.sampleDataStateChange}\r\n                screenName=\"IDS_SAMPLEAPPROVALHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n\r\n        tabMap.set(\"IDS_PRINTHISTORY\",\r\n            <ApprovalPrintHistoryTab\r\n                userInfo={this.props.Login.userInfo}\r\n                ApprovalPrintHistory={this.props.Login.masterData.PrintHistory}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.samplePrintHistoryDataState}\r\n                dataStateChange={this.sampleDataStateChange}\r\n                screenName=\"IDS_PRINTHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />);\r\n        if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\r\n            tabMap.set(\"IDS_REPORTHISTORY\",\r\n                <ReportHistoryTab\r\n                    userInfo={this.props.Login.userInfo}\r\n                    COAHistory={this.props.Login.masterData.COAHistory}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    dataState={this.state.reportHistoryDataState}\r\n                    dataStateChange={this.sampleDataStateChange}\r\n                    screenName=\"IDS_REPORTHISTORY\"\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    selectedId={null}\r\n                    viewDownloadFile={this.downloadReport}\r\n                />);\r\n        }\r\n        return tabMap;\r\n    }\r\n    downloadReport = (input) => {\r\n        let inputParam = {\r\n            inputData: { selectedRecord: { ...input.inputData }, userinfo: this.props.Login.userInfo },\r\n            classUrl: \"approval\",\r\n            operation: \"view\",\r\n            methodUrl: \"Report\"\r\n        }\r\n        this.props.viewAttachment(inputParam)\r\n    }\r\n    testTabDetail = () => {\r\n        const testTabMap = new Map();\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        if (this.state.showTest) {\r\n            testTabMap.set(\"IDS_RESULTS\", <ApprovalResultsTab\r\n                userInfo={this.props.Login.userInfo}\r\n                masterData={this.props.Login.masterData}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.resultDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                screenName=\"IDS_RESULTS\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                getStatusCombo={this.props.getStatusCombo}\r\n                selectedId={this.props.Login.masterData.selectedParamId}\r\n                viewFile={this.props.viewAttachment}\r\n                checkListRecord={this.props.checkListRecord}\r\n                getEnforceCommentsHistory={this.props.getEnforceCommentsHistory}\r\n            />)\r\n            testTabMap.set(\"IDS_INSTRUMENT\", <ApprovalInstrumentTab\r\n                userInfo={this.props.Login.userInfo}\r\n                masterData={this.props.Login.masterData}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.instrumentDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                screenName=\"IDS_INSTRUMENT\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n            // testTabMap.set(\"IDS_MATERIAL\", <ApprovalResultsTab\r\n            //     userInfo={this.props.Login.userInfo}\r\n            //     masterData={this.props.Login.masterData}\r\n            //     inputParam={this.props.Login.inputParam}\r\n            //     dataState={this.state.dataState}\r\n            //     dataStateChange={this.testDataStateChange}\r\n            //     screenName=\"IDS_MATERIAL\"\r\n            //     controlMap={this.state.controlMap}\r\n            //     userRoleControlRights={this.state.userRoleControlRights}\r\n            //     selectedId={null}\r\n            // />)\r\n            testTabMap.set(\"IDS_TASK\", <ApprovalTask\r\n                userInfo={this.props.Login.userInfo}\r\n                ResultUsedTasks={this.props.Login.masterData.ResultUsedTasks}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.taskDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                screenName=\"IDS_TASK\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n            testTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n                screenName=\"IDS_TESTATTACHMENTS\"\r\n                selectedMaster={selectedTestList}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={selectedTestList}\r\n                masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n                addName={\"AddTestAttachment\"}\r\n                editName={\"EditTestAttachment\"}\r\n                deleteName={\"DeleteTestAttachment\"}\r\n                viewName={\"ViewTestAttachment\"}\r\n                methodUrl={\"TestAttachment\"}\r\n                nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n                subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"dcreateddate\" }]}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"TestAttachment\",\r\n                        ntransactiontestcode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\",\r\n                    masterList: selectedTestList\r\n\r\n                }}\r\n                selectedListName=\"IDS_TESTS\"\r\n                displayName=\"stestsynonym\"\r\n            />)\r\n            testTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n                screenName=\"IDS_TESTCOMMENTS\"\r\n                selectedMaster={selectedTestList}\r\n                onSaveClick={this.onCommentsSaveClick}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n                fetchRecord={this.props.getCommentsCombo}\r\n                masterList={selectedTestList}\r\n                masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n                addName={\"AddTestComment\"}\r\n                editName={\"EditTestComment\"}\r\n                deleteName={\"DeleteTestComment\"}\r\n                methodUrl={\"TestComment\"}\r\n                isTestComment={false}\r\n                primaryKeyField={\"ntestcommentcode\"}\r\n                dataState={this.state.testCommentDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"TestComment\",\r\n                        ntransactiontestcode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\",\r\n                    operation: \"update\",\r\n                    masterList: selectedTestList,\r\n                    ncontrolCode: editTestCommentsId\r\n\r\n                }}\r\n                selectedListName=\"IDS_TESTS\"\r\n                displayName=\"stestsynonym\"\r\n            />)\r\n\r\n            testTabMap.set(\"IDS_RESULTCHANGEHISTORY\", <ResultChangeHistoryTab\r\n                userInfo={this.props.Login.userInfo}\r\n                ApprovalResultChangeHistory={this.props.Login.masterData.ApprovalResultChangeHistory}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.resultChangeDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                screenName=\"IDS_RESULTCHANGEHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n\r\n            />)\r\n\r\n\r\n\r\n\r\n            testTabMap.set(\"IDS_TESTAPPROVALHISTORY\",\r\n                <ApprovalHistoryTab\r\n                    userInfo={this.props.Login.userInfo}\r\n                    ApprovalHistory={this.props.Login.masterData.ApprovalHistory}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    dataState={this.state.historyDataState}\r\n                    dataStateChange={this.testDataStateChange}\r\n                    screenName=\"IDS_TESTAPPROVALHISTORY\"\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    selectedId={null}\r\n                />)\r\n        }\r\n\r\n        return testTabMap;\r\n    }\r\n    onNumericInputOnChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        if (value === 0 || value === 0.0) {\r\n            selectedRecord[name] = \"\";\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n\r\n            selectedRecord[name] = value;\r\n            this.setState({ selectedRecord });\r\n\r\n        }\r\n    }\r\n    onTestTabChange = (tabProps) => {\r\n\r\n        const activeTestTab = tabProps.screenName;\r\n        if (activeTestTab !== this.props.Login.activeTestTab) {\r\n            if (this.props.Login.masterData.APSelectedTest && this.props.Login.masterData.APSelectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                    ntransactiontestcode: this.props.Login.masterData.APSelectedTest ?\r\n                        String(this.props.Login.masterData.APSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                    npreregno: this.props.Login.masterData.selectedSample ?\r\n                        this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestTab,\r\n                    screenName: activeTestTab,\r\n                    resultDataState: this.state.resultDataState,\r\n                    instrumentDataState: this.state.instrumentDataState,\r\n                    materialDataState: this.state.materialDataState,\r\n                    taskDataState: this.state.taskDataState,\r\n                    documentDataState: this.state.documentDataState,\r\n                    historyDataState: this.state.historyDataState,\r\n                    resultChangeDataState: this.state.resultChangeDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                }\r\n                this.props.getTestChildTabDetail(inputData, true)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n            }\r\n        }\r\n    }\r\n    onSampleTabChange = (tabProps) => {\r\n        const activeSampleTab = tabProps.screenName;\r\n        if (activeSampleTab !== this.props.Login.activeSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                selectedSample: this.props.Login.masterData.selectedSample,\r\n                npreregno: this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSampleTab,\r\n                activeSampleTab\r\n            }\r\n            this.props.getSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n    showSampleInfo() {\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n    showTestList() {\r\n        this.setState({ showTest: true, showSample: false })\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n    checkRetestAction = (action, ncontrolCode) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        if (selectedTestList.length > 0) {\r\n            if (action.ntransactionstatus === transactionStatus.RETEST) {\r\n\r\n                if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\r\n                    if (selectedTestList.length > 1) {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONETESTONLY\" }));\r\n                    } else {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                action,\r\n                                masterData: this.props.Login.masterData,\r\n                                openChildModal: true,\r\n                                screenName: \"IDS_RETESTCOUNT\",\r\n                                operation: \"dynamic\"\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                } else {\r\n                    this.performTestActions(action, ncontrolCode);\r\n                }\r\n\r\n            } else {\r\n\r\n                this.performTestActions(action, ncontrolCode);\r\n\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n    }\r\n    performTestActions = (action, ncontrolCode) => {\r\n        if (action.ntransactionstatus === transactionStatus.RETEST && this.state.selectedRecord && this.state.selectedRecord.retestcount > this.props.Login.masterData.retestcount) {\r\n\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_MAX\" }) + \": \" + this.props.Login.masterData.retestcount)\r\n\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n            if (ntransCode === transactionStatus.ALL) {\r\n                ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n            } else {\r\n                ntransCode = ntransCode + \",\" + action.ntransactionstatus\r\n            }\r\n            let { testskip, testtake } = this.state\r\n            let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n            testList = testList.slice(testskip, testskip + testtake);\r\n            let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n            const inputParam = {\r\n                inputData: {\r\n                    'performaction': {\r\n                        npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\r\n                        ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                        ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                            this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                                this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                                String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                            null,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        nTransStatus: action.ntransactionstatus,\r\n                        ntransactionstatus: String(-1),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample:(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nflag: 2,\r\n                        ntype: 1,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                        APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                        APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                        retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                        ncontrolCode,\r\n                        checkBoxOperation:3\r\n                    },\r\n                    userinfo: this.props.Login.userInfo\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                methodUrl: \"performaction\",\r\n                postParamList: this.postParamList\r\n            }\r\n            if (action.nesignneed === transactionStatus.YES) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true,\r\n                        screenName: \"performaction\",\r\n                        operation: \"dynamic\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.performAction(inputParam)\r\n            }\r\n        }\r\n    }\r\n    updateDecision = (action) => {\r\n        let ntransCode = this.props.Login.masterData.realFilterStatusValue.ntransactionstatus\r\n        if (ntransCode === transactionStatus.ALL) {\r\n            ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n        }\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let { skip, take } = this.state\r\n        let sampleList = [...this.props.Login.masterData.AP_SAMPLE];\r\n        sampleList = sampleList.splice(skip, skip + take);\r\n        let selectedsampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\r\n        if (selectedsampleList.length > 0) {\r\n            const inputData = {\r\n                'updatedecision': {\r\n                    npreregno: selectedsampleList.map(sample => sample.npreregno).join(\",\"),\r\n                    nTransStatus: action.ntransactionstatus,\r\n                    ntransactionstatus: String(ntransCode),\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                        this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                            this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                            String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                        null,\r\n                    ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : 0,\r\n                    nflag: 1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    napprovalversioncode: String(selectedsampleList[0].napprovalversioncode),\r\n                    napprovalconfigcode: selectedsampleList[0].napprovalconfigcode,\r\n                    selectedSample: this.props.Login.masterData.selectedSample,\r\n                }, userinfo: this.props.Login.userInfo\r\n\r\n            }\r\n            let inputParam = { postParamList: this.postParamList, inputData, masterData: this.props.Login.masterData }\r\n            if (action.nesignneed === transactionStatus.YES) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true,\r\n                        screenName: \"updatedecision\",\r\n                        operation: \"decision\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.updateDecision(inputParam)\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n        }\r\n\r\n    }\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item\r\n                    };\r\n                    this.props.getRegistrationType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item\r\n                    }\r\n                    this.props.getRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    // let masterData = { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item }\r\n                    // const updateInfo = {\r\n                    //     typeName: DEFAULT_RETURN,\r\n                    //     data: { masterData }\r\n                    // }\r\n                    // this.props.updateStore(updateInfo);\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    }\r\n                    this.props.getFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'nsectioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n                    // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        nsectioncode: comboData.value === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : comboData.value,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                    }\r\n\r\n                    this.props.getFilterBasedTest(inputParamData);\r\n                }\r\n            } else if (fieldName === 'njobstatuscode') {\r\n                if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n                    let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else {\r\n                if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n                    //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n                    //  const updateInfo = {\r\n                    //     typeName: DEFAULT_RETURN,\r\n                    //    data: { masterData }\r\n                    // }\r\n\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: comboData.value,\r\n                        stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    }\r\n\r\n                    this.props.getFilterBasedTest(inputParamData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onComboChange = (comboData) => {\r\n        if (comboData) {\r\n            let masterData = { ...this.props.Login.masterData, GradeValue: comboData }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { masterData }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getApprovalVersion(inputParam)\r\n    }\r\n    changeMandatory = (event, dataItem) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let value = event.currentTarget.checked ? transactionStatus.YES : transactionStatus.NO\r\n        selectedRecord[\"approvalParameterEdit\"] = { ...selectedRecord[\"approvalParameterEdit\"], [dataItem.ntransactionresultcode]: value }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onReload = () => {\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue } = this.props.Login.masterData\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab || \"\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"\",\r\n            checkBoxOperation:3,\r\n            ntype:2\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getApprovalSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n    onFilterSubmit = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        // let realFromDate = new Date(this.props.Login.masterData.fromDate)\r\n        // let realToDate = new Date(this.props.Login.masterData.toDate)\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab,\r\n            activeSampleTab: this.props.Login.activeSampleTab,\r\n            checkBoxOperation: 3,\r\n            ntype:2\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\r\n\r\n            // let obj = this.covertDatetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getApprovalSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    testDataStateChange = (event) => {\r\n\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_RESULTS\":\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                this.setState({\r\n                    materialDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TASK\":\r\n                this.setState({\r\n                    taskDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_DOCUMENTS\":\r\n                this.setState({\r\n                    documentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                this.setState({\r\n                    resultChangeDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTAPPROVALHISTORY\":\r\n                this.setState({\r\n                    historyDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n    sampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n            case \"IDS_SAMPLEINFO\":\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SAMPLEAPPROVALHISTORY\":\r\n                this.setState({\r\n                    sampleHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_PRINTHISTORY\":\r\n                this.setState({\r\n                    samplePrintHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_REPORTHISTORY\":\r\n                this.setState({\r\n                    reportHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let ok = true;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        if (this.props.Login.operation === 'enforce') {\r\n            inputData[\"enforcestatus\"] = {\r\n                ngradecode: this.props.Login.masterData.GradeValue.value || -1,\r\n                ntransactiontestcode: this.state.selectedRecord.ntransactiontestcode,\r\n                ntransactionresultcode: this.state.selectedRecord.ntransactionresultcode,\r\n                senforcestatuscomment: this.state.selectedRecord.senforcestatuscomment || \"\",\r\n                selectedTestCode: this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\")\r\n            }\r\n            inputParam = {\r\n                methodUrl: \"EnforceStatus\",\r\n                classUrl: 'approval',\r\n                inputData: inputData,\r\n                postParam: { selectedObject: \"APSelectedTest\", primaryKeyField: \"ntransactiontestcode\" },\r\n                operation: \"update\"\r\n            }\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord: this.state.selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation\r\n            }\r\n            inputParam = onSaveSampleAttachment(saveParam);\r\n        }\r\n        else {\r\n            let approvalparameter = []\r\n            if (this.state.selectedRecord.approvalParameterEdit) {\r\n                Object.keys(this.state.selectedRecord.approvalParameterEdit).map((key) =>\r\n                    approvalparameter.push(\r\n                        {\r\n                            ntransactionresultcode: key,\r\n                            nreportmandatory: this.state.selectedRecord.approvalParameterEdit[key]\r\n                        }\r\n                    )\r\n                )\r\n                inputData[\"approvalparameter\"] = approvalparameter\r\n                inputParam = {\r\n                    methodUrl: \"ApprovalParameter\",\r\n                    classUrl: 'approval',\r\n                    inputData: inputData,\r\n                    postParam: { selectedObject: \"APSelectedTest\", primaryKeyField: \"ntransactiontestcode\" },\r\n                    operation: \"update\"\r\n                }\r\n            } else {\r\n                ok = false;\r\n                this.handleClose()\r\n            }\r\n        }\r\n        if (ok) {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        openChildModal: true,\r\n                        operation: this.props.Login.operation,\r\n                        screenName: \"IDS_ENFORCESTATUS\",\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n            }\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openChildModal = this.props.Login.openChildModal\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let templateData = this.props.Login.templateData;\r\n        let operation = this.props.Login.operation;\r\n        let openTemplateModal = this.props.Login.openTemplateModal;\r\n        if (this.props.Login.loadEsign) {\r\n            if (operation === \"delete\" || operation === \"dynamic\" || operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n                templateData = {};\r\n                operation = undefined;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openTemplateModal = false;\r\n            openModal = false;\r\n            openChildModal = false;\r\n            selectedRecord = {};\r\n            templateData = {}\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, openChildModal, loadEsign, selectedRecord, templateData, selectedParamId: null, operation, openTemplateModal }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData,\r\n            operation: this.props.Login.operation\r\n        }\r\n        if (this.props.Login.operation === 'dynamic' || this.props.Login.operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\r\n            this.props.validateEsignforApproval(inputParam, \"openChildModal\");\r\n        } else {\r\n            this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n        }\r\n    }\r\n    // covertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n    //     const fromDate = fromDateOnly + \"T00:00:00\";\r\n    //     const toDate = toDateOnly + \"T23:59:59\";\r\n\r\n\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n    getActiveTestURL() {\r\n        let url = \"approval/getapprovalparameter\"\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_RESULTS\":\r\n                url = \"approval/getapprovalparameter\"\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                url = \"resultentrybysample/getResultUsedInstrument\"\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                url = \"resultentrybysample/getResultUsedMaterial\"\r\n                break;\r\n            case \"IDS_TASK\":\r\n                url = \"resultentrybysample/getResultUsedTask\"\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                url = \"attachment/getTestAttachment\"\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                url = \"approval/getApprovalResultChangeHistory\"\r\n                break;\r\n            case \"IDS_TESTAPPROVALHISTORY\":\r\n                url = \"approval/getApprovalHistory\"\r\n                break;\r\n\r\n            default:\r\n                url = \"approval/getapprovalparameter\"\r\n                break;\r\n        }\r\n        return url;\r\n    }\r\n    onTemplateInputChange = (event, control) => {\r\n        let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateComboChange = (comboData, control) => {\r\n        let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateDateChange = (dateData, control) => {\r\n        let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        if (selectedTestList.length > 0) {\r\n\r\n            if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveTestComments(saveParam, selectedTestList);\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        operation: this.props.Login.operation,\r\n                        screenName: this.props.Login.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n            }\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n    }\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let { testskip, testtake, skip, take } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let sampleList = this.props.Login.masterData.searchedSample ? [...this.props.Login.masterData.searchedSample] : [...this.props.Login.masterData.AP_SAMPLE];\r\n        sampleList = sampleList.slice(skip, skip + take);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let ok = true;\r\n        if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            if (selectedSampleList.length > 0) {\r\n                inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\r\n            }\r\n            else {\r\n                ok = false\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            if (selectedTestList.length > 0) {\r\n                inputParam = onSaveTestAttachment(saveParam, selectedTestList);\r\n            }\r\n            else {\r\n                ok = false\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        if (ok) {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        operation: this.props.Login.operation,\r\n                        screenName: this.props.Login.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    generateCOAReport = (inputData, ncontrolCode) => {\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            let inputParam = { reporparam: inputData }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openChildModal: true,\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: \"reportgeneration\",\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n\r\n        } else {\r\n\r\n            this.props.generateCOAReport(inputData);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, viewAttachment, checkListRecord,\r\n    updateDecision, getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo,\r\n    validateEsignCredential, crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList,\r\n    getSampleChildTabDetail, getAttachmentCombo, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest,\r\n    generateCOAReport, getEnforceCommentsHistory\r\n})(injectIntl(Approval))"]},"metadata":{},"sourceType":"module"}