{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\dynamicpreregdesign\\\\DynamicPreRegDesign.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { updateStore, getReactInputFields, selectRegistrationTemplate, filterColumnData, getRegistrationTemplate, getEditRegTemplate, crudMaster, getPreviewTemplate, getChildValues } from '../../actions/index';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { Row, Col, FormGroup, FormLabel, Card, Nav } from 'react-bootstrap';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport { ContentPanel, ReadOnlyText } from '../../components/App.styles';\nimport { constructOptionList, getControlMap, getSameRecordFromTwoArrays, showEsign, comboChild } from '../../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport PreRegDesignPopUp from './PreRegDesignPopUp';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { Affix } from 'rsuite';\nimport PortalModal from '../../PortalModal';\nimport { faEye, faPencilAlt, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport DynamicSlideout from './DynamicSlideout.jsx';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass DynamicPreRegDesign extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.filterComboChange = comboData => {\n      this.setState({\n        selectedSampleType: comboData\n      });\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.reloadData();\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openPortal = this.props.Login.openPortal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          openPortal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openModal = false;\n        openPortal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          openPortal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          design: [],\n          selectedFieldRecord: {},\n          showConfirmAlert: false\n        } // data: {openModal, loadEsign, selectedRecord}\n\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteApproveTemplate(\"delete\", deleteId));\n    };\n\n    this.deleteApproveTemplate = (operation, ncontrolCode) => {\n      const masterData = this.props.Login.masterData;\n      const inputParam = {\n        methodUrl: \"RegistrationTemplate\",\n        classUrl: 'dynamicpreregdesign',\n        inputData: {\n          registrationtemplate: {\n            nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode\n          },\n          userinfo: this.props.Login.userInfo\n        },\n        operation\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            operation: \"delete\"\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.selectedSampleType) {\n        this.props.getRegistrationTemplate(this.state.selectedSampleType, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SAMPLETYPENOTAVALIABLE\"\n        }));\n      }\n    };\n\n    this.getPreviewTemplate = (masterData, userInfo, editId) => {\n      let data = [];\n      const withoutCombocomponent = [];\n      const Layout = this.props.Login.masterData.selectedTemplate.jsondata;\n      Layout.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n              if (componentrow.inputtype === \"combo\") {\n                data.push(componentrow);\n              } else {\n                withoutCombocomponent.push(componentrow);\n              }\n            }) : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component);\n          });\n        });\n      });\n      const comboComponents = data;\n      let childColumnList = {};\n      data.map(columnList => {\n        const val = this.comboChild(data, columnList, childColumnList, true);\n        data = val.data;\n        childColumnList = val.childColumnList;\n      });\n      this.props.getPreviewTemplate(masterData, userInfo, editId, data, this.state.selectedRecord, childColumnList, comboComponents, withoutCombocomponent);\n    };\n\n    this.onComboChange = (comboData, control, customName) => {\n      let comboName = customName || control.label;\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData) {\n        selectedRecord[comboName] = comboData;\n      } else {\n        selectedRecord[comboName] = [];\n      }\n\n      if (control.child && control.child.length > 0) {\n        const childComboList = getSameRecordFromTwoArrays(this.state.comboComponents, control.child, \"label\");\n        let childColumnList = {};\n        childComboList.map(columnList => {\n          const val = comboChild(this.state.comboComponents, columnList, childColumnList, false);\n          childColumnList = val.childColumnList;\n        });\n        const parentList = getSameRecordFromTwoArrays(this.state.withoutCombocomponent, control.child, \"label\");\n        const inputParem = {\n          child: control.child,\n          source: control.source,\n          primarykeyField: control.valuemember,\n          value: comboData.value,\n          item: comboData.item\n        };\n        this.props.getChildValues(inputParem, this.props.Login.userInfo, selectedRecord, this.props.Login.comboData, childComboList, childColumnList, this.state.withoutCombocomponent, [...childComboList, ...parentList]);\n      } else {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onInputOnChange = (event, value) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'toggle') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else if (event.target.type === 'numeric') {\n        if (/\\D/.test(event.target.value)) selectedRecord[event.target.name] = event.target.value;\n      } else if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = value;\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = value;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      }); // this.saveComponentProperties()\n    };\n\n    this.onNumericInputChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord;\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateValue, dateName) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onDrop = (value, type, oldVlaue) => {\n      const design = this.state.design;\n      let columns = design[0].children;\n      let designData = this.props.Login.ReactInputFields;\n      value = JSON.parse(value.fields);\n      value = { ...value,\n        type: \"component\"\n      };\n      let designDataIndex = designData.findIndex(item => item.label === value.label);\n      let firstIndex = columns[0] ? columns[0].children.findIndex(item => item.label === value.label) : -1;\n      let secondIndex = columns[1] ? columns[1].children.findIndex(item => item.label === value.label) : -1;\n      if (designDataIndex >= 0) designData.splice(designDataIndex, 1);\n\n      if (firstIndex >= 0) {\n        if (type !== 1) {\n          columns[0].children.splice(firstIndex, 1); // columns[0].splice(to, 0, columns[0].splice(from, 1)[0]);\n        } else {\n          if (oldVlaue) {\n            oldVlaue = JSON.parse(oldVlaue);\n            let from = columns[0].children.findIndex(item => item.label === value.label);\n            let to = columns[0].children.findIndex(item => item.label === oldVlaue.label);\n            columns[0].children.splice(to, 0, columns[0].children.splice(from, 1)[0]);\n          }\n        }\n      } else if (type === 1) {\n        if (columns[0]) {\n          columns[0].children.push(value);\n        } else {\n          columns[0] = {\n            id: \"1\",\n            type: \"column\",\n            children: []\n          };\n          columns[0].children.push(value);\n        }\n      }\n\n      if (secondIndex >= 0) {\n        if (type !== 2) {\n          columns[1].splice(secondIndex, 1);\n        } else {\n          if (oldVlaue) {\n            oldVlaue = JSON.parse(oldVlaue);\n            let from = columns[1].children.findIndex(item => item.label === value.label);\n            let to = columns[1].children.findIndex(item => item.label === oldVlaue.label);\n            columns[1].children.splice(to, 0, columns[1].children.splice(from, 1)[0]);\n          }\n        }\n      } else if (type === 2) {\n        if (columns[1]) {\n          columns[1].children.push(value);\n        } else {\n          columns[1] = {\n            id: \"2\",\n            type: \"column\",\n            children: []\n          };\n          columns[1].children.push(value);\n        }\n      } // design.push(columns)\n\n\n      this.setState({\n        designData,\n        design\n      });\n    };\n\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.state = {\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      addTemplateId: -1,\n      editId: -1,\n      deleteId: -1,\n      approveID: -1,\n      previewId: -1,\n      selectedRecord: {},\n      sampleTypeOptions: [],\n      selectedSampleType: {},\n      breadCrumbData: [],\n      design: [],\n      comboComponents: [],\n      withoutCombocomponent: []\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== \"\" && props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    const Layout = this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate.jsondata;\n    const filterParam = {\n      inputListName: \"RegistrationTemplate\",\n      selectedObject: \"selectedTemplate\",\n      primaryKeyField: \"nreactregtemplatecode\",\n      fetchUrl: \"dynamicpreregdesign/getDynamicPreRegDesign\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.state.breadCrumbData[0] ? this.state.breadCrumbData[0].item.value : -1\n      },\n      masterData: this.props.Login.masterData,\n      unchangeList: [\"realSampleType\", \"SampleTypes\"],\n      searchFieldList: [\"sregtemplatename\", \"stransdisplaystatus\"]\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, this.state.breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: this.state.breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      filterColumnData: this.props.filterColumnData,\n      screenName: \"Dynamic Pre-Reg Design\",\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.RegistrationTemplate || [],\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      getMasterDetail: template => this.props.selectRegistrationTemplate(template, this.props.Login.masterData, this.props.Login.userInfo),\n      selectedMaster: this.props.Login.masterData.selectedTemplate,\n      primaryKeyField: \"nreactregtemplatecode\",\n      mainField: \"sregtemplatename\",\n      firstField: \"stransdisplaystatus\" // secondField=\"stransdisplaystatus\"\n      ,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: this.state.addTemplateId,\n      filterParam: filterParam,\n      hidePaging: false,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getReactInputFields(this.props.Login.userInfo, 'create'),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_SAMPLETYPEFILTER\": /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n          name: \"nsampletypecode\",\n          formLabel: this.props.intl.formatMessage({\n            id: \"IDS_SAMPLETYPE\"\n          }),\n          isSearchable: false,\n          placeholder: \"Please Select...\",\n          options: this.state.sampleTypeOptions,\n          value: this.state.selectedSampleType ? this.state.selectedSampleType : \"\",\n          onChange: value => this.filterComboChange(value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 53\n          }\n        })))\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.selectedTemplate ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.selectedTemplate.sregtemplatename), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PREVIEW\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\" // hidden={this.state.userRoleControlRights.indexOf(this.state.previewId) === -1}\n      ,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.getPreviewTemplate(this.props.Login.masterData, this.props.Login.userInfo, this.state.previewId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(this.state.editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.props.getEditRegTemplate(this.props.Login.masterData, this.props.Login.userInfo, this.state.editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteInstrument\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(this.state.deleteId) === -1,\n      onClick: () => this.ConfirmDelete(this.state.approveID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteInstrument\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(this.state.approveID) === -1,\n      onClick: () => this.deleteApproveTemplate('approve', this.state.approveID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 61\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 41\n      }\n    }, Layout ? Layout.map(item => /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 57\n      }\n    }, item.children.length > 0 ? item.children.map(column => /*#__PURE__*/React.createElement(Col, {\n      md: 12 / item.children.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 69\n      }\n    }, column.children.map(component => {\n      return component.hasOwnProperty(\"children\") ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 89\n        }\n      }, component.children.map(componentrow => /*#__PURE__*/React.createElement(Col, {\n        md: 12 / componentrow.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 97\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 101\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 105\n        }\n      }, componentrow.label), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 105\n        }\n      }, \"-\"))))) : /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 93\n        }\n      }, component.label), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 93\n        }\n      }, \" \", \"-\"));\n    }))) : \"\")) : \"\"))) : \"\"))), this.props.Login.openPortal ? /*#__PURE__*/React.createElement(PortalModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PreRegDesignPopUp, {\n      closeModal: this.closeModal,\n      nsampletypecode: this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.value : -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    })) : \"\", this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      size: \"xl\",\n      onSaveClick: this.closeModal,\n      hideSave: true,\n      loginoperation: true,\n      operation: this.props.Login.operation,\n      screenName: \"IDS_PREVIEW\",\n      closeModal: this.closeModal,\n      show: this.props.Login.openModal,\n      inputParam: this.props.Login.inputParam,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.state.selectedRecord || {} // mandatoryFields={mandatoryFields}\n      ,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: event => this.onInputOnChange(event),\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideout, {\n        selectedRecord: this.props.Login.selectedRecord,\n        templateData: this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate.jsondata,\n        handleChange: this.handleChange,\n        handleDateChange: this.handleDateChange,\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputChange: this.onNumericInputChange,\n        comboData: this.props.Login.comboData,\n        onComboChange: this.onComboChange,\n        userInfo: this.props.Login.userInfo,\n        timeZoneList: this.props.Login.timeZoneList,\n        defaultTimeZone: this.props.Login.defaultTimeZone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 29\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }) : \"\");\n  } // onSaveClickPreview=()=>{\n  // }\n\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      userRoleControlRights,\n      controlMap,\n      addTemplateId,\n      sampleTypeOptions,\n      breadCrumbData,\n      selectedSampleType,\n      editId,\n      deleteId,\n      approveID,\n      selectedRecord,\n      comboComponents,\n      previewId,\n      withoutCombocomponent\n    } = this.state;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      updateState = true;\n      addTemplateId = controlMap.has(\"AddTemplate\") && controlMap.get(\"AddTemplate\").ncontrolcode;\n      editId = controlMap.has(\"EditTemplate\") && controlMap.get(\"EditTemplate\").ncontrolcode;\n      deleteId = controlMap.has(\"DeleteTemplate\") && controlMap.get(\"DeleteTemplate\").ncontrolcode;\n      approveID = controlMap.has(\"ApproveTemplate\") && controlMap.get(\"ApproveTemplate\").ncontrolcode;\n      previewId = controlMap.has(\"PreviewTemplate\") && controlMap.get(\"PreviewTemplate\").ncontrolcode;\n    }\n\n    if (this.props.Login.masterData.SampleTypes !== previousProps.Login.masterData.SampleTypes) {\n      sampleTypeOptions = constructOptionList(this.props.Login.masterData.SampleTypes || [], 'nsampletypecode', 'ssampletypename', 'nsampletypecode', \"ascending\").get(\"OptionList\");\n      selectedSampleType = sampleTypeOptions.length > 0 ? sampleTypeOptions[0] : {};\n      breadCrumbData = sampleTypeOptions.length > 0 ? [{\n        \"label\": \"IDS_SAMPLETYPE\",\n        \"value\": sampleTypeOptions[0].label,\n        \"item\": sampleTypeOptions[0]\n      }] : [];\n      updateState = true;\n    }\n\n    if (this.props.Login.realSampleType !== previousProps.Login.realSampleType) {\n      updateState = true;\n      breadCrumbData = this.props.Login.realSampleType || this.state.breadCrumbData;\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      updateState = true;\n      selectedRecord = this.props.Login.selectedRecord;\n    }\n\n    if (this.props.Login.comboComponents !== previousProps.Login.comboComponents) {\n      updateState = true;\n      comboComponents = this.props.Login.comboComponents;\n    }\n\n    if (this.props.Login.withoutCombocomponent !== previousProps.Login.withoutCombocomponent) {\n      updateState = true;\n      withoutCombocomponent = this.props.Login.withoutCombocomponent;\n    }\n\n    if (updateState) {\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        addTemplateId,\n        sampleTypeOptions,\n        breadCrumbData,\n        selectedSampleType,\n        editId,\n        deleteId,\n        approveID,\n        selectedRecord,\n        comboComponents,\n        previewId,\n        withoutCombocomponent\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  updateStore,\n  crudMaster,\n  getReactInputFields,\n  selectRegistrationTemplate,\n  filterColumnData,\n  getRegistrationTemplate,\n  getEditRegTemplate,\n  getPreviewTemplate,\n  getChildValues\n})(injectIntl(DynamicPreRegDesign));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/dynamicpreregdesign/DynamicPreRegDesign.jsx"],"names":["React","connect","injectIntl","updateStore","getReactInputFields","selectRegistrationTemplate","filterColumnData","getRegistrationTemplate","getEditRegTemplate","crudMaster","getPreviewTemplate","getChildValues","DEFAULT_RETURN","Row","Col","FormGroup","FormLabel","Card","Nav","ListMaster","ContentPanel","ReadOnlyText","constructOptionList","getControlMap","getSameRecordFromTwoArrays","showEsign","comboChild","toast","PreRegDesignPopUp","FormSelectSearch","BreadcrumbComponent","Affix","PortalModal","faEye","faPencilAlt","faThumbsUp","faTrashAlt","FontAwesomeIcon","ConfirmMessage","DynamicSlideout","SlideOutModal","Esign","transactionStatus","mapStateToProps","state","Login","DynamicPreRegDesign","Component","constructor","props","openFilter","showFilter","updateInfo","typeName","data","filterComboChange","comboData","setState","selectedSampleType","closeFilter","onFilterSubmit","reloadData","closeModal","loadEsign","openModal","openPortal","selectedRecord","operation","selectedId","design","selectedFieldRecord","showConfirmAlert","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deleteApproveTemplate","ncontrolCode","masterData","inputParam","methodUrl","classUrl","inputData","registrationtemplate","nreactregtemplatecode","selectedTemplate","userinfo","userInfo","userRoleControlRights","nformcode","screenData","searchRef","current","value","warn","editId","withoutCombocomponent","Layout","jsondata","map","row","children","column","component","hasOwnProperty","componentrow","inputtype","push","comboComponents","childColumnList","columnList","val","onComboChange","control","customName","comboName","label","child","length","childComboList","parentList","inputParem","source","primarykeyField","valuemember","item","onInputOnChange","event","target","type","name","checked","YES","NO","test","onNumericInputChange","handleDateChange","dateValue","dateName","onDrop","oldVlaue","columns","designData","ReactInputFields","JSON","parse","fields","designDataIndex","findIndex","firstIndex","secondIndex","splice","from","to","createRef","controlMap","Map","addTemplateId","approveID","previewId","sampleTypeOptions","breadCrumbData","getDerivedStateFromProps","masterStatus","error","render","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","nsampletypecode","unchangeList","searchFieldList","searchedData","RegistrationTemplate","template","sregtemplatename","e","indexOf","validateEsign","handleChange","timeZoneList","defaultTimeZone","componentDidUpdate","previousProps","updateState","Object","values","ncontrolcode","has","get","SampleTypes","realSampleType","componentWillUnmount","undefined","modalName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SACIC,WADJ,EACiBC,mBADjB,EACsCC,0BADtC,EACkEC,gBADlE,EAEIC,uBAFJ,EAE6BC,kBAF7B,EAEiDC,UAFjD,EAE6DC,kBAF7D,EAEiFC,cAFjF,QAGO,qBAHP;AAIA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,SAA9B,EAAyCC,IAAzC,EAA+CC,GAA/C,QAA0D,iBAA1D;AACA,OAAOC,UAAP,MAAuB,oDAAvB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,6BAA3C;AACA,SAASC,mBAAT,EAA8BC,aAA9B,EAA6CC,0BAA7C,EAAyEC,SAAzE,EAAmFC,UAAnF,QAAqG,+BAArG;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,UAA7B,EAAyCC,UAAzC,QAA2D,mCAA3D;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,cAAP,MAA2B,0DAA3B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAQ;AAAEC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,GAAR;AACH,CAFD;;AAGA,MAAMC,mBAAN,SAAkC9C,KAAK,CAAC+C,SAAxC,CAAkD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiUnBC,UAjUmB,GAiUN,MAAM;AACf,UAAIC,UAAU,GAAG,CAAC,KAAKF,KAAL,CAAWJ,KAAX,CAAiBM,UAAnC;AACA,YAAMC,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAEzC,cADK;AAEf0C,QAAAA,IAAI,EAAE;AAAEH,UAAAA;AAAF;AAFS,OAAnB;AAIA,WAAKF,KAAL,CAAW9C,WAAX,CAAuBiD,UAAvB;AACH,KAxUkB;;AAAA,SAyUnBG,iBAzUmB,GAyUEC,SAAD,IAAe;AAC/B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,kBAAkB,EAAEF;AAAtB,OAAd;AACH,KA3UkB;;AAAA,SA4UnBG,WA5UmB,GA4UL,MAAM;AAChB,YAAMP,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAEzC,cADK;AAEf0C,QAAAA,IAAI,EAAE;AAAEH,UAAAA,UAAU,EAAE;AAAd;AAFS,OAAnB;AAIA,WAAKF,KAAL,CAAW9C,WAAX,CAAuBiD,UAAvB;AACH,KAlVkB;;AAAA,SAmVnBQ,cAnVmB,GAmVF,MAAM;AACnB,WAAKC,UAAL;AACH,KArVkB;;AAAA,SAsVnBC,UAtVmB,GAsVN,MAAM;AACf,UAAIC,SAAS,GAAG,KAAKd,KAAL,CAAWJ,KAAX,CAAiBkB,SAAjC;AACA,UAAIC,SAAS,GAAG,KAAKf,KAAL,CAAWJ,KAAX,CAAiBmB,SAAjC;AACA,UAAIC,UAAU,GAAG,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBoB,UAAlC;AACA,UAAIC,cAAc,GAAG,KAAKjB,KAAL,CAAWJ,KAAX,CAAiBqB,cAAtC;;AACA,UAAI,KAAKjB,KAAL,CAAWJ,KAAX,CAAiBkB,SAArB,EAAgC;AAC5B,YAAI,KAAKd,KAAL,CAAWJ,KAAX,CAAiBsB,SAAjB,KAA+B,QAAnC,EAA6C;AACzCJ,UAAAA,SAAS,GAAG,KAAZ;AACAC,UAAAA,SAAS,GAAG,KAAZ;AACAC,UAAAA,UAAU,GAAG,KAAb;AACAC,UAAAA,cAAc,GAAG,EAAjB;AAEH,SAND,MAOK;AACDH,UAAAA,SAAS,GAAG,KAAZ;AACH;AACJ,OAXD,MAYK;AACDC,QAAAA,SAAS,GAAG,KAAZ;AACAC,QAAAA,UAAU,GAAG,KAAb;AACAC,QAAAA,cAAc,GAAG,EAAjB;AACH;;AAED,YAAMd,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAEzC,cADK;AAEf0C,QAAAA,IAAI,EAAE;AAAEU,UAAAA,SAAF;AAAaC,UAAAA,UAAb;AAAyBF,UAAAA,SAAzB;AAAoCG,UAAAA,cAApC;AAAoDE,UAAAA,UAAU,EAAE,IAAhE;AAAsEC,UAAAA,MAAM,EAAE,EAA9E;AAAkFC,UAAAA,mBAAmB,EAAE,EAAvG;AAA2GC,UAAAA,gBAAgB,EAAE;AAA7H,SAFS,CAGf;;AAHe,OAAnB;AAKA,WAAKtB,KAAL,CAAW9C,WAAX,CAAuBiD,UAAvB;AAEH,KApXkB;;AAAA,SAqXnBoB,aArXmB,GAqXFC,QAAD,IAAc;AAC1B,WAAKC,cAAL,CAAoBC,OAApB,CAA4B,eAA5B,EAA6C,KAAK1B,KAAL,CAAW2B,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAA7C,EAAkG,KAAK7B,KAAL,CAAW2B,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAlG,EACI,KAAK7B,KAAL,CAAW2B,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADJ,EACqD,KAAK7B,KAAL,CAAW2B,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADrD,EAEI,MAAM,KAAKC,qBAAL,CAA2B,QAA3B,EAAqCN,QAArC,CAFV;AAGH,KAzXkB;;AAAA,SA0XnBM,qBA1XmB,GA0XK,CAACZ,SAAD,EAAYa,YAAZ,KAA6B;AACjD,YAAMC,UAAU,GAAG,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,UAApC;AACA,YAAMC,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE,sBADI;AAEfC,QAAAA,QAAQ,EAAE,qBAFK;AAGfC,QAAAA,SAAS,EAAE;AACPC,UAAAA,oBAAoB,EAAE;AAClBC,YAAAA,qBAAqB,EAAE,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BO,gBAA5B,CAA6CD;AADlD,WADf;AAIPE,UAAAA,QAAQ,EAAE,KAAKxC,KAAL,CAAWJ,KAAX,CAAiB6C;AAJpB,SAHI;AASfvB,QAAAA;AATe,OAAnB;;AAWA,UAAI1C,SAAS,CAAC,KAAKwB,KAAL,CAAWJ,KAAX,CAAiB8C,qBAAlB,EAAyC,KAAK1C,KAAL,CAAWJ,KAAX,CAAiB6C,QAAjB,CAA0BE,SAAnE,EAA8EZ,YAA9E,CAAb,EAA0G;AACtG,cAAM5B,UAAU,GAAG;AACfC,UAAAA,QAAQ,EAAEzC,cADK;AAEf0C,UAAAA,IAAI,EAAE;AACFS,YAAAA,SAAS,EAAE,IADT;AAEF8B,YAAAA,UAAU,EAAE;AAAEX,cAAAA,UAAF;AAAcD,cAAAA;AAAd,aAFV;AAGFjB,YAAAA,SAAS,EAAE,IAHT;AAIFG,YAAAA,SAAS,EAAE;AAJT;AAFS,SAAnB;AASA,aAAKlB,KAAL,CAAW9C,WAAX,CAAuBiD,UAAvB;AACH,OAXD,MAYK;AACD,aAAKH,KAAL,CAAWxC,UAAX,CAAsByE,UAAtB,EAAkCD,UAAlC,EAA8C,WAA9C;AACH;AACJ,KAtZkB;;AAAA,SAuZnBpB,UAvZmB,GAuZN,MAAM;AACf,WAAKiC,SAAL,CAAeC,OAAf,CAAuBC,KAAvB,GAA+B,EAA/B;;AACA,UAAI,KAAKpD,KAAL,CAAWc,kBAAf,EAAmC;AAC/B,aAAKT,KAAL,CAAW1C,uBAAX,CAAmC,KAAKqC,KAAL,CAAWc,kBAA9C,EAAkE,KAAKT,KAAL,CAAWJ,KAAX,CAAiBoC,UAAnF,EAA+F,KAAKhC,KAAL,CAAWJ,KAAX,CAAiB6C,QAAhH;AACH,OAFD,MAEO;AACH/D,QAAAA,KAAK,CAACsE,IAAN,CAAW,KAAKhD,KAAL,CAAW2B,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KA9ZkB;;AAAA,SA+ZnBpE,kBA/ZmB,GA+ZE,CAACuE,UAAD,EAAaS,QAAb,EAAuBQ,MAAvB,KAAkC;AACnD,UAAI5C,IAAI,GAAG,EAAX;AACA,YAAM6C,qBAAqB,GAAG,EAA9B;AACA,YAAMC,MAAM,GAAG,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BO,gBAA5B,CAA6Ca,QAA5D;AACAD,MAAAA,MAAM,CAACE,GAAP,CAAWC,GAAG,IAAI;AACdA,QAAAA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAiBG,MAAM,IAAI;AACvBA,UAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAoBI,SAAS,IAAI;AAC7B,mBAAOA,SAAS,CAACC,cAAV,CAAyB,UAAzB,IAAuCD,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CAAuBM,YAAY,IAAI;AACjF,kBAAIA,YAAY,CAACC,SAAb,KAA2B,OAA/B,EAAwC;AACpCvD,gBAAAA,IAAI,CAACwD,IAAL,CAAUF,YAAV;AACH,eAFD,MAEO;AACHT,gBAAAA,qBAAqB,CAACW,IAAtB,CAA2BF,YAA3B;AACH;AACJ,aAN6C,CAAvC,GAODF,SAAS,CAACG,SAAV,KAAwB,OAAxB,GAAkCvD,IAAI,CAACwD,IAAL,CAAUJ,SAAV,CAAlC,GAAyDP,qBAAqB,CAACW,IAAtB,CAA2BJ,SAA3B,CAP/D;AAQH,WATD;AAUH,SAXD;AAYH,OAbD;AAcA,YAAMK,eAAe,GAAGzD,IAAxB;AACA,UAAI0D,eAAe,GAAG,EAAtB;AACA1D,MAAAA,IAAI,CAACgD,GAAL,CAASW,UAAU,IAAI;AACnB,cAAMC,GAAG,GAAG,KAAKxF,UAAL,CAAgB4B,IAAhB,EAAsB2D,UAAtB,EAAkCD,eAAlC,EAAmD,IAAnD,CAAZ;AACA1D,QAAAA,IAAI,GAAG4D,GAAG,CAAC5D,IAAX;AACA0D,QAAAA,eAAe,GAAGE,GAAG,CAACF,eAAtB;AACH,OAJD;AAKA,WAAK/D,KAAL,CAAWvC,kBAAX,CAA8BuE,UAA9B,EAA0CS,QAA1C,EAAoDQ,MAApD,EAA4D5C,IAA5D,EACK,KAAKV,KAAL,CAAWsB,cADhB,EACgC8C,eADhC,EACiDD,eADjD,EACkEZ,qBADlE;AAGH,KA3bkB;;AAAA,SA6bnBgB,aA7bmB,GA6bH,CAAC3D,SAAD,EAAY4D,OAAZ,EAAqBC,UAArB,KAAoC;AAEhD,UAAIC,SAAS,GAAGD,UAAU,IAAID,OAAO,CAACG,KAAtC;AACA,YAAMrD,cAAc,GAAG,KAAKtB,KAAL,CAAWsB,cAAX,IAA6B,EAApD;;AACA,UAAIV,SAAJ,EAAe;AACXU,QAAAA,cAAc,CAACoD,SAAD,CAAd,GAA4B9D,SAA5B;AACH,OAFD,MAEO;AACHU,QAAAA,cAAc,CAACoD,SAAD,CAAd,GAA4B,EAA5B;AACH;;AACD,UAAIF,OAAO,CAACI,KAAR,IAAiBJ,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAA5C,EAA+C;AAC3C,cAAMC,cAAc,GAAGlG,0BAA0B,CAAC,KAAKoB,KAAL,CAAWmE,eAAZ,EAA6BK,OAAO,CAACI,KAArC,EAA4C,OAA5C,CAAjD;AACA,YAAIR,eAAe,GAAG,EAAtB;AACAU,QAAAA,cAAc,CAACpB,GAAf,CAAmBW,UAAU,IAAI;AAC7B,gBAAMC,GAAG,GAAGxF,UAAU,CAAC,KAAKkB,KAAL,CAAWmE,eAAZ,EAA6BE,UAA7B,EAAyCD,eAAzC,EAA0D,KAA1D,CAAtB;AACAA,UAAAA,eAAe,GAAGE,GAAG,CAACF,eAAtB;AACH,SAHD;AAKA,cAAMW,UAAU,GAAGnG,0BAA0B,CAAC,KAAKoB,KAAL,CAAWuD,qBAAZ,EAAmCiB,OAAO,CAACI,KAA3C,EAAkD,OAAlD,CAA7C;AAEA,cAAMI,UAAU,GAAG;AACfJ,UAAAA,KAAK,EAAEJ,OAAO,CAACI,KADA;AAEfK,UAAAA,MAAM,EAAET,OAAO,CAACS,MAFD;AAGfC,UAAAA,eAAe,EAAEV,OAAO,CAACW,WAHV;AAIf/B,UAAAA,KAAK,EAAExC,SAAS,CAACwC,KAJF;AAKfgC,UAAAA,IAAI,EAAExE,SAAS,CAACwE;AALD,SAAnB;AAOA,aAAK/E,KAAL,CAAWtC,cAAX,CAA0BiH,UAA1B,EACI,KAAK3E,KAAL,CAAWJ,KAAX,CAAiB6C,QADrB,EAC+BxB,cAD/B,EAC+C,KAAKjB,KAAL,CAAWJ,KAAX,CAAiBW,SADhE,EAEIkE,cAFJ,EAEoBV,eAFpB,EAEqC,KAAKpE,KAAL,CAAWuD,qBAFhD,EAEuE,CAAC,GAAGuB,cAAJ,EAAoB,GAAGC,UAAvB,CAFvE;AAGH,OApBD,MAoBO;AACH,cAAMvE,UAAU,GAAG;AACfC,UAAAA,QAAQ,EAAEzC,cADK;AAEf0C,UAAAA,IAAI,EAAE;AAAEY,YAAAA;AAAF;AAFS,SAAnB;AAIA,aAAKjB,KAAL,CAAW9C,WAAX,CAAuBiD,UAAvB;AACH;AACJ,KAjekB;;AAAA,SAmenB6E,eAnemB,GAmeD,CAACC,KAAD,EAAQlC,KAAR,KAAkB;AAChC,YAAM9B,cAAc,GAAG,KAAKtB,KAAL,CAAWsB,cAAX,IAA6B,EAApD;;AACA,UAAIgE,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,QAA1B,EAAoC;AAChClE,QAAAA,cAAc,CAACgE,KAAK,CAACC,MAAN,CAAaE,IAAd,CAAd,GAAoCH,KAAK,CAACC,MAAN,CAAaG,OAAb,KAAyB,IAAzB,GAAgC5F,iBAAiB,CAAC6F,GAAlD,GAAwD7F,iBAAiB,CAAC8F,EAA9G;AACH,OAFD,MAEO,IAAIN,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,SAA1B,EAAqC;AACxC,YAAI,KAAKK,IAAL,CAAUP,KAAK,CAACC,MAAN,CAAanC,KAAvB,CAAJ,EACI9B,cAAc,CAACgE,KAAK,CAACC,MAAN,CAAaE,IAAd,CAAd,GAAoCH,KAAK,CAACC,MAAN,CAAanC,KAAjD;AACP,OAHM,MAGA,IAAIkC,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,UAA1B,EAAsC;AACzClE,QAAAA,cAAc,CAACgE,KAAK,CAACC,MAAN,CAAaE,IAAd,CAAd,GAAoCrC,KAApC;AACH,OAFM,MAEA,IAAIkC,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,OAA1B,EAAmC;AACtClE,QAAAA,cAAc,CAACgE,KAAK,CAACC,MAAN,CAAaE,IAAd,CAAd,GAAoCrC,KAApC;AACH,OAFM,MAEA;AACH9B,QAAAA,cAAc,CAACgE,KAAK,CAACC,MAAN,CAAaE,IAAd,CAAd,GAAoCH,KAAK,CAACC,MAAN,CAAanC,KAAjD;AACH;;AACD,WAAKvC,QAAL,CAAc;AAAES,QAAAA;AAAF,OAAd,EAdgC,CAehC;AACH,KAnfkB;;AAAA,SAofnBwE,oBApfmB,GAofI,CAAC1C,KAAD,EAAQqC,IAAR,KAAiB;AACpC,UAAInE,cAAc,GAAG,KAAKtB,KAAL,CAAWsB,cAAhC;AACAA,MAAAA,cAAc,CAACmE,IAAD,CAAd,GAAuBrC,KAAvB;AACA,WAAKvC,QAAL,CAAc;AAAES,QAAAA;AAAF,OAAd;AACH,KAxfkB;;AAAA,SAyfnByE,gBAzfmB,GAyfA,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AACxC,YAAM;AAAE3E,QAAAA;AAAF,UAAqB,KAAKtB,KAAhC;AACAsB,MAAAA,cAAc,CAAC2E,QAAD,CAAd,GAA2BD,SAA3B;AACA,WAAKnF,QAAL,CAAc;AAAES,QAAAA;AAAF,OAAd;AACH,KA7fkB;;AAAA,SA8fnB4E,MA9fmB,GA8fV,CAAC9C,KAAD,EAAQoC,IAAR,EAAcW,QAAd,KAA2B;AAChC,YAAM1E,MAAM,GAAG,KAAKzB,KAAL,CAAWyB,MAA1B;AACA,UAAI2E,OAAO,GAAG3E,MAAM,CAAC,CAAD,CAAN,CAAUmC,QAAxB;AACA,UAAIyC,UAAU,GAAG,KAAKhG,KAAL,CAAWJ,KAAX,CAAiBqG,gBAAlC;AACAlD,MAAAA,KAAK,GAAGmD,IAAI,CAACC,KAAL,CAAWpD,KAAK,CAACqD,MAAjB,CAAR;AACArD,MAAAA,KAAK,GAAG,EAAE,GAAGA,KAAL;AAAYoC,QAAAA,IAAI,EAAE;AAAlB,OAAR;AACA,UAAIkB,eAAe,GAAGL,UAAU,CAACM,SAAX,CAAqBvB,IAAI,IAAIA,IAAI,CAACT,KAAL,KAAevB,KAAK,CAACuB,KAAlD,CAAtB;AACA,UAAIiC,UAAU,GAAGR,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoB+C,SAApB,CAA8BvB,IAAI,IAAIA,IAAI,CAACT,KAAL,KAAevB,KAAK,CAACuB,KAA3D,CAAb,GAAiF,CAAC,CAAnG;AACA,UAAIkC,WAAW,GAAGT,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoB+C,SAApB,CAA8BvB,IAAI,IAAIA,IAAI,CAACT,KAAL,KAAevB,KAAK,CAACuB,KAA3D,CAAb,GAAiF,CAAC,CAApG;AAEA,UAAI+B,eAAe,IAAI,CAAvB,EACIL,UAAU,CAACS,MAAX,CAAkBJ,eAAlB,EAAmC,CAAnC;;AACJ,UAAIE,UAAU,IAAI,CAAlB,EAAqB;AACjB,YAAIpB,IAAI,KAAK,CAAb,EAAgB;AACZY,UAAAA,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoBkD,MAApB,CAA2BF,UAA3B,EAAuC,CAAvC,EADY,CAEZ;AACH,SAHD,MAGO;AACH,cAAIT,QAAJ,EAAc;AACVA,YAAAA,QAAQ,GAAGI,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAX;AACA,gBAAIY,IAAI,GAAGX,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoB+C,SAApB,CAA8BvB,IAAI,IAAIA,IAAI,CAACT,KAAL,KAAevB,KAAK,CAACuB,KAA3D,CAAX;AACA,gBAAIqC,EAAE,GAAGZ,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoB+C,SAApB,CAA8BvB,IAAI,IAAIA,IAAI,CAACT,KAAL,KAAewB,QAAQ,CAACxB,KAA9D,CAAT;AACAyB,YAAAA,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoBkD,MAApB,CAA2BE,EAA3B,EAA+B,CAA/B,EAAkCZ,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoBkD,MAApB,CAA2BC,IAA3B,EAAiC,CAAjC,EAAoC,CAApC,CAAlC;AACH;AACJ;AAEJ,OAbD,MAaO,IAAIvB,IAAI,KAAK,CAAb,EAAgB;AACnB,YAAIY,OAAO,CAAC,CAAD,CAAX,EAAgB;AACZA,UAAAA,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoBM,IAApB,CAAyBd,KAAzB;AACH,SAFD,MAEO;AACHgD,UAAAA,OAAO,CAAC,CAAD,CAAP,GAAa;AACTlE,YAAAA,EAAE,EAAE,GADK;AAETsD,YAAAA,IAAI,EAAE,QAFG;AAGT5B,YAAAA,QAAQ,EAAE;AAHD,WAAb;AAMAwC,UAAAA,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoBM,IAApB,CAAyBd,KAAzB;AACH;AACJ;;AACD,UAAIyD,WAAW,IAAI,CAAnB,EAAsB;AAClB,YAAIrB,IAAI,KAAK,CAAb,EAAgB;AACZY,UAAAA,OAAO,CAAC,CAAD,CAAP,CAAWU,MAAX,CAAkBD,WAAlB,EAA+B,CAA/B;AACH,SAFD,MAEO;AACH,cAAIV,QAAJ,EAAc;AACVA,YAAAA,QAAQ,GAAGI,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAX;AACA,gBAAIY,IAAI,GAAGX,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoB+C,SAApB,CAA8BvB,IAAI,IAAIA,IAAI,CAACT,KAAL,KAAevB,KAAK,CAACuB,KAA3D,CAAX;AACA,gBAAIqC,EAAE,GAAGZ,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoB+C,SAApB,CAA8BvB,IAAI,IAAIA,IAAI,CAACT,KAAL,KAAewB,QAAQ,CAACxB,KAA9D,CAAT;AACAyB,YAAAA,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoBkD,MAApB,CAA2BE,EAA3B,EAA+B,CAA/B,EAAkCZ,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoBkD,MAApB,CAA2BC,IAA3B,EAAiC,CAAjC,EAAoC,CAApC,CAAlC;AACH;AACJ;AACJ,OAXD,MAWO,IAAIvB,IAAI,KAAK,CAAb,EAAgB;AACnB,YAAIY,OAAO,CAAC,CAAD,CAAX,EAAgB;AACZA,UAAAA,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoBM,IAApB,CAAyBd,KAAzB;AACH,SAFD,MAEO;AACHgD,UAAAA,OAAO,CAAC,CAAD,CAAP,GAAa;AACTlE,YAAAA,EAAE,EAAE,GADK;AAETsD,YAAAA,IAAI,EAAE,QAFG;AAGT5B,YAAAA,QAAQ,EAAE;AAHD,WAAb;AAKAwC,UAAAA,OAAO,CAAC,CAAD,CAAP,CAAWxC,QAAX,CAAoBM,IAApB,CAAyBd,KAAzB;AACH;AACJ,OA5D+B,CA8DhC;;;AACA,WAAKvC,QAAL,CAAc;AAAEwF,QAAAA,UAAF;AAAc5E,QAAAA;AAAd,OAAd;AACH,KA9jBkB;;AAEf,SAAKyB,SAAL,GAAiB9F,KAAK,CAAC6J,SAAN,EAAjB;AACA,SAAKnF,cAAL,GAAsB,IAAIpC,cAAJ,EAAtB;AACA,SAAKM,KAAL,GAAa;AACT+C,MAAAA,qBAAqB,EAAE,EADd;AAETmE,MAAAA,UAAU,EAAE,IAAIC,GAAJ,EAFH;AAGTC,MAAAA,aAAa,EAAE,CAAC,CAHP;AAIT9D,MAAAA,MAAM,EAAE,CAAC,CAJA;AAIGzB,MAAAA,QAAQ,EAAE,CAAC,CAJd;AAIiBwF,MAAAA,SAAS,EAAE,CAAC,CAJ7B;AAIgCC,MAAAA,SAAS,EAAE,CAAC,CAJ5C;AAKThG,MAAAA,cAAc,EAAE,EALP;AAMTiG,MAAAA,iBAAiB,EAAE,EANV;AAOTzG,MAAAA,kBAAkB,EAAE,EAPX;AAQT0G,MAAAA,cAAc,EAAE,EARP;AAST/F,MAAAA,MAAM,EAAE,EATC;AAUT0C,MAAAA,eAAe,EAAE,EAVR;AAWTZ,MAAAA,qBAAqB,EAAE;AAXd,KAAb;AAaH;;AAC8B,SAAxBkE,wBAAwB,CAACpH,KAAD,EAAQL,KAAR,EAAe;AAC1C,QAAIK,KAAK,CAACJ,KAAN,CAAYyH,YAAZ,KAA6B,EAA7B,IAAmCrH,KAAK,CAACJ,KAAN,CAAYyH,YAAZ,KAA6B1H,KAAK,CAAC0H,YAA1E,EAAwF;AACpF3I,MAAAA,KAAK,CAACsE,IAAN,CAAWhD,KAAK,CAACJ,KAAN,CAAYyH,YAAvB;AACArH,MAAAA,KAAK,CAACJ,KAAN,CAAYyH,YAAZ,GAA2B,EAA3B;AACH;;AAED,QAAIrH,KAAK,CAACJ,KAAN,CAAY0H,KAAZ,KAAsB,EAAtB,IAA4BtH,KAAK,CAACJ,KAAN,CAAY0H,KAAZ,KAAsB3H,KAAK,CAAC2H,KAA5D,EAAmE;AAC/D5I,MAAAA,KAAK,CAAC4I,KAAN,CAAYtH,KAAK,CAACJ,KAAN,CAAY0H,KAAxB;AACAtH,MAAAA,KAAK,CAACJ,KAAN,CAAY0H,KAAZ,GAAoB,EAApB;AACH;;AACD,WAAO,IAAP;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAMpE,MAAM,GAAG,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BO,gBAA5B,IACf,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BO,gBAA5B,CAA6Ca,QAD7C;AAGA,UAAMoE,WAAW,GAAG;AAChBC,MAAAA,aAAa,EAAE,sBADC;AAEhBC,MAAAA,cAAc,EAAE,kBAFA;AAGhBC,MAAAA,eAAe,EAAE,uBAHD;AAIhBC,MAAAA,QAAQ,EAAE,4CAJM;AAKhBC,MAAAA,gBAAgB,EAAE;AACdrF,QAAAA,QAAQ,EAAE,KAAKxC,KAAL,CAAWJ,KAAX,CAAiB6C,QADb;AACuBqF,QAAAA,eAAe,EAAE,KAAKnI,KAAL,CAAWwH,cAAX,CAA0B,CAA1B,IAClD,KAAKxH,KAAL,CAAWwH,cAAX,CAA0B,CAA1B,EAA6BpC,IAA7B,CAAkChC,KADgB,GACR,CAAC;AAFjC,OALF;AAShBf,MAAAA,UAAU,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,UATb;AAUhB+F,MAAAA,YAAY,EAAE,CAAC,gBAAD,EAAmB,aAAnB,CAVE;AAWhBC,MAAAA,eAAe,EAAE,CAAC,kBAAD,EAAqB,qBAArB;AAXD,KAApB;AAaA,wBACI,uDACI;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrI,KAAL,CAAWwH,cAAX,CAA0B3C,MAA1B,GAAmC,CAAnC,gBACG,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,mBAAD;AAAqB,MAAA,cAAc,EAAE,KAAK7E,KAAL,CAAWwH,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,GAGc,EAJnB,eAMI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,gBAAgB,EAAE,KAAKnH,KAAL,CAAW3C,gBADjC;AAEI,MAAA,UAAU,EAAE,wBAFhB;AAGI,MAAA,UAAU,EAAE,KAAK2C,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BiG,YAA5B,IAA4C,KAAKjI,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BkG,oBAAxE,IAAgG,EAHhH;AAII,MAAA,UAAU,EAAE,KAAKlI,KAAL,CAAWJ,KAAX,CAAiBoC,UAJjC;AAKI,MAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiB6C,QAL/B;AAMI,MAAA,eAAe,EAAG0F,QAAD,IAAc,KAAKnI,KAAL,CAAW5C,0BAAX,CAAsC+K,QAAtC,EAAgD,KAAKnI,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjE,EAA6E,KAAKhC,KAAL,CAAWJ,KAAX,CAAiB6C,QAA9F,CANnC;AAOI,MAAA,cAAc,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BO,gBAPhD;AAQI,MAAA,eAAe,EAAC,uBARpB;AASI,MAAA,SAAS,EAAC,kBATd;AAUI,MAAA,UAAU,EAAC,qBAVf,CAWI;AAXJ;AAYI,MAAA,qBAAqB,EAAE,KAAK5C,KAAL,CAAW+C,qBAZtC;AAaI,MAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWoH,aAbtB;AAcI,MAAA,WAAW,EAAES,WAdjB;AAeI,MAAA,UAAU,EAAE,KAfhB;AAgBI,MAAA,SAAS,EAAE,KAAK3E,SAhBpB;AAiBI,MAAA,UAAU,EAAE,KAAKjC,UAjBrB;AAkBI,MAAA,SAAS,EAAE,MAAM,KAAKZ,KAAL,CAAW7C,mBAAX,CAA+B,KAAK6C,KAAL,CAAWJ,KAAX,CAAiB6C,QAAhD,EAA0D,QAA1D,CAlBrB;AAmBI,MAAA,UAAU,EAAE,KAAKxC,UAnBrB;AAoBI,MAAA,WAAW,EAAE,KAAKS,WApBtB;AAqBI,MAAA,cAAc,EAAE,KAAKC,cArBzB;AAsBI,MAAA,cAAc,EAAE,IAtBpB;AAuBI,MAAA,UAAU,EAAE,KAAKX,KAAL,CAAWJ,KAAX,CAAiBM,UAvBjC;AAwBI,MAAA,eAAe,EAAE,CACb;AACI,6CACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,gBAAD;AACI,UAAA,IAAI,EAAE,iBADV;AAEI,UAAA,SAAS,EAAE,KAAKF,KAAL,CAAW2B,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAFf;AAGI,UAAA,YAAY,EAAE,KAHlB;AAII,UAAA,WAAW,EAAC,kBAJhB;AAKI,UAAA,OAAO,EAAE,KAAKlC,KAAL,CAAWuH,iBALxB;AAMI,UAAA,KAAK,EAAE,KAAKvH,KAAL,CAAWc,kBAAX,GAAgC,KAAKd,KAAL,CAAWc,kBAA3C,GAAgE,EAN3E;AAOI,UAAA,QAAQ,EAAEsC,KAAK,IAAI,KAAKzC,iBAAL,CAAuByC,KAAvB,CAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAFR,OADa,CAxBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eA+CI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK/C,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BO,gBAA5B,gBACG,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BO,gBAA5B,CAA6C6F,gBADlD,CADJ,eAII,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,IAAI,EAAC,gBAAf;AACI,kBAAU,KAAKpI,KAAL,CAAW2B,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADd;AAEI,kBAAS,mBAFb,CAGI;AAHJ;AAII,MAAA,SAAS,EAAC,kCAJd;AAKI,MAAA,OAAO,EAAGwG,CAAD,IAAO,KAAK5K,kBAAL,CAAwB,KAAKuC,KAAL,CAAWJ,KAAX,CAAiBoC,UAAzC,EACZ,KAAKhC,KAAL,CAAWJ,KAAX,CAAiB6C,QADL,EACe,KAAK9C,KAAL,CAAWsH,SAD1B,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEjI,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ,eAYI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,IAAI,EAAC,gBAAf;AACI,kBAAU,KAAKgB,KAAL,CAAW2B,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADd;AAEI,kBAAS,mBAFb;AAGI,MAAA,MAAM,EAAE,KAAKlC,KAAL,CAAW+C,qBAAX,CAAiC4F,OAAjC,CAAyC,KAAK3I,KAAL,CAAWsD,MAApD,MAAgE,CAAC,CAH7E;AAII,MAAA,SAAS,EAAC,kCAJd;AAKI,MAAA,OAAO,EAAGoF,CAAD,IAAO,KAAKrI,KAAL,CAAWzC,kBAAX,CAA8B,KAAKyC,KAAL,CAAWJ,KAAX,CAAiBoC,UAA/C,EAA2D,KAAKhC,KAAL,CAAWJ,KAAX,CAAiB6C,QAA5E,EAAsF,KAAK9C,KAAL,CAAWsD,MAAjG,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEhE,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAZJ,eAqBI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,IAAI,EAAC,kBAAf;AAAkC,MAAA,SAAS,EAAC,oDAA5C;AACI,kBAAU,KAAKe,KAAL,CAAW2B,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADd;AAEI,kBAAS,mBAFb;AAGI,MAAA,MAAM,EAAE,KAAKlC,KAAL,CAAW+C,qBAAX,CAAiC4F,OAAjC,CAAyC,KAAK3I,KAAL,CAAW6B,QAApD,MAAkE,CAAC,CAH/E;AAII,MAAA,OAAO,EAAE,MAAM,KAAKD,aAAL,CAAmB,KAAK5B,KAAL,CAAWqH,SAA9B,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE7H,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CArBJ,eA4BI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,IAAI,EAAC,kBAAf;AAAkC,MAAA,SAAS,EAAC,oDAA5C;AACI,kBAAU,KAAKa,KAAL,CAAW2B,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADd;AAEI,kBAAS,mBAFb;AAGI,MAAA,MAAM,EAAE,KAAKlC,KAAL,CAAW+C,qBAAX,CAAiC4F,OAAjC,CAAyC,KAAK3I,KAAL,CAAWqH,SAApD,MAAmE,CAAC,CAHhF;AAII,MAAA,OAAO,EAAE,MAAM,KAAKlF,qBAAL,CAA2B,SAA3B,EAAsC,KAAKnC,KAAL,CAAWqH,SAAjD,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE9H,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CA5BJ,CAJJ,CADJ,CAJJ,CADJ,eAiDI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQiE,MAAM,GACFA,MAAM,CAACE,GAAP,CAAY0B,IAAD,iBACP,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,IAAI,CAACxB,QAAL,CAAciB,MAAd,GAAuB,CAAvB,GACGO,IAAI,CAACxB,QAAL,CAAcF,GAAd,CAAmBG,MAAD,iBACd,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,KAAKuB,IAAI,CAACxB,QAAL,CAAciB,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQhB,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAqBI,SAAD,IAAe;AAC/B,aACIA,SAAS,CAACC,cAAV,CAAyB,UAAzB,iBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CAAuBM,YAAY,iBAChC,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,KAAKA,YAAY,CAACa,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYb,YAAY,CAACW,KAAzB,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAe,GAAf,CAFJ,CADJ,CADH,CADL,CADJ,gBAaI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYb,SAAS,CAACa,KAAtB,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgB,GAAhB,CAFJ,CAdR;AAmBH,KApBD,CAFR,CADJ,CADH,GA6BK,EA9BV,CADJ,CADE,GAoCF,EAtCZ,CAjDJ,CADJ,CADH,GA8FK,EA/FV,CA/CJ,CANJ,CADJ,EAyJK,KAAKtE,KAAL,CAAWJ,KAAX,CAAiBoB,UAAjB,gBACG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,iBAAD;AACI,MAAA,UAAU,EAAE,KAAKH,UADrB;AAEI,MAAA,eAAe,EAAE,KAAKlB,KAAL,CAAWwH,cAAX,CAA0B3C,MAA1B,GAAmC,KAAK7E,KAAL,CAAWwH,cAAX,CAA0B,CAA1B,EAA6BpC,IAA7B,CAAkChC,KAArE,GAA6E,CAAC,CAFnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,GAMoB,EA/JzB,EAiKK,KAAK/C,KAAL,CAAWJ,KAAX,CAAiBmB,SAAjB,gBACG,oBAAC,aAAD;AACI,MAAA,IAAI,EAAE,IADV;AAEI,MAAA,WAAW,EAAE,KAAKF,UAFtB;AAGI,MAAA,QAAQ,EAAE,IAHd;AAII,MAAA,cAAc,EAAE,IAJpB;AAKI,MAAA,SAAS,EAAE,KAAKb,KAAL,CAAWJ,KAAX,CAAiBsB,SALhC;AAMI,MAAA,UAAU,EAAC,aANf;AAOI,MAAA,UAAU,EAAE,KAAKL,UAPrB;AAQI,MAAA,IAAI,EAAE,KAAKb,KAAL,CAAWJ,KAAX,CAAiBmB,SAR3B;AASI,MAAA,UAAU,EAAE,KAAKf,KAAL,CAAWJ,KAAX,CAAiBqC,UATjC;AAUI,MAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBkB,SAV5B;AAWI,MAAA,aAAa,EAAE,KAAKyH,aAXxB;AAYI,MAAA,cAAc,EAAE,KAAK5I,KAAL,CAAWsB,cAAX,IAA6B,EAZjD,CAaI;AAbJ;AAcI,MAAA,YAAY,EAAE,KAAKjB,KAAL,CAAWJ,KAAX,CAAiBkB,SAAjB,gBACV,oBAAC,KAAD;AACI,QAAA,SAAS,EAAE,KAAKd,KAAL,CAAWJ,KAAX,CAAiBsB,SADhC;AAEI,QAAA,eAAe,EAAG+D,KAAD,IAAW,KAAKD,eAAL,CAAqBC,KAArB,CAFhC;AAGI,QAAA,UAAU,EAAE,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBqC,UAHjC;AAII,QAAA,cAAc,EAAE,KAAKtC,KAAL,CAAWsB,cAAX,IAA6B,EAJjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU,gBAQV,oBAAC,eAAD;AACI,QAAA,cAAc,EAAE,KAAKjB,KAAL,CAAWJ,KAAX,CAAiBqB,cADrC;AAEI,QAAA,YAAY,EAAE,KAAKjB,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BO,gBAA5B,IACV,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BO,gBAA5B,CAA6Ca,QAHrD;AAII,QAAA,YAAY,EAAE,KAAKoF,YAJvB;AAKI,QAAA,gBAAgB,EAAE,KAAK9C,gBAL3B;AAMI,QAAA,eAAe,EAAE,KAAKV,eAN1B;AAOI,QAAA,oBAAoB,EAAE,KAAKS,oBAP/B;AAQI,QAAA,SAAS,EAAE,KAAKzF,KAAL,CAAWJ,KAAX,CAAiBW,SARhC;AASI,QAAA,aAAa,EAAE,KAAK2D,aATxB;AAUI,QAAA,QAAQ,EAAE,KAAKlE,KAAL,CAAWJ,KAAX,CAAiB6C,QAV/B;AAWI,QAAA,YAAY,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiB6I,YAXnC;AAYI,QAAA,eAAe,EAAE,KAAKzI,KAAL,CAAWJ,KAAX,CAAiB8I,eAZtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAsCK,EAvMV,CADJ;AA2MH,GA3P6C,CA6P9C;AAEA;;;AAEAC,EAAAA,kBAAkB,CAACC,aAAD,EAAgB;AAC9B,QAAIC,WAAW,GAAG,KAAlB;AACA,QAAI;AAAEnG,MAAAA,qBAAF;AAAyBmE,MAAAA,UAAzB;AAAqCE,MAAAA,aAArC;AACAG,MAAAA,iBADA;AACmBC,MAAAA,cADnB;AACmC1G,MAAAA,kBADnC;AAEAwC,MAAAA,MAFA;AAEQzB,MAAAA,QAFR;AAEkBwF,MAAAA,SAFlB;AAE6B/F,MAAAA,cAF7B;AAE6C6C,MAAAA,eAF7C;AAE8DmD,MAAAA,SAF9D;AAEyE/D,MAAAA;AAFzE,QAGA,KAAKvD,KAHT;;AAIA,QAAI,KAAKK,KAAL,CAAWJ,KAAX,CAAiB6C,QAAjB,CAA0BE,SAA1B,KAAwCiG,aAAa,CAAChJ,KAAd,CAAoB6C,QAApB,CAA6BE,SAAzE,EAAoF;AAChFD,MAAAA,qBAAqB,GAAG,EAAxB;;AACA,UAAI,KAAK1C,KAAL,CAAWJ,KAAX,CAAiB8C,qBAArB,EAA4C;AACxC,aAAK1C,KAAL,CAAWJ,KAAX,CAAiB8C,qBAAjB,CAAuC,KAAK1C,KAAL,CAAWJ,KAAX,CAAiB6C,QAAjB,CAA0BE,SAAjE,KAA+EmG,MAAM,CAACC,MAAP,CAAc,KAAK/I,KAAL,CAAWJ,KAAX,CAAiB8C,qBAAjB,CAAuC,KAAK1C,KAAL,CAAWJ,KAAX,CAAiB6C,QAAjB,CAA0BE,SAAjE,CAAd,EAA2FU,GAA3F,CAA+F0B,IAAI,IAC9KrC,qBAAqB,CAACmB,IAAtB,CAA2BkB,IAAI,CAACiE,YAAhC,CAD2E,CAA/E;AAEH;;AACDnC,MAAAA,UAAU,GAAGvI,aAAa,CAAC,KAAK0B,KAAL,CAAWJ,KAAX,CAAiB8C,qBAAlB,EAAyC,KAAK1C,KAAL,CAAWJ,KAAX,CAAiB6C,QAAjB,CAA0BE,SAAnE,CAA1B;AACAkG,MAAAA,WAAW,GAAG,IAAd;AACA9B,MAAAA,aAAa,GAAGF,UAAU,CAACoC,GAAX,CAAe,aAAf,KAAiCpC,UAAU,CAACqC,GAAX,CAAe,aAAf,EAA8BF,YAA/E;AACA/F,MAAAA,MAAM,GAAG4D,UAAU,CAACoC,GAAX,CAAe,cAAf,KAAkCpC,UAAU,CAACqC,GAAX,CAAe,cAAf,EAA+BF,YAA1E;AACAxH,MAAAA,QAAQ,GAAGqF,UAAU,CAACoC,GAAX,CAAe,gBAAf,KAAoCpC,UAAU,CAACqC,GAAX,CAAe,gBAAf,EAAiCF,YAAhF;AACAhC,MAAAA,SAAS,GAAGH,UAAU,CAACoC,GAAX,CAAe,iBAAf,KAAqCpC,UAAU,CAACqC,GAAX,CAAe,iBAAf,EAAkCF,YAAnF;AACA/B,MAAAA,SAAS,GAAGJ,UAAU,CAACoC,GAAX,CAAe,iBAAf,KAAqCpC,UAAU,CAACqC,GAAX,CAAe,iBAAf,EAAkCF,YAAnF;AACH;;AACD,QAAI,KAAKhJ,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BmH,WAA5B,KAA4CP,aAAa,CAAChJ,KAAd,CAAoBoC,UAApB,CAA+BmH,WAA/E,EAA4F;AACxFjC,MAAAA,iBAAiB,GAAG7I,mBAAmB,CAAC,KAAK2B,KAAL,CAAWJ,KAAX,CAAiBoC,UAAjB,CAA4BmH,WAA5B,IAA2C,EAA5C,EAAgD,iBAAhD,EAAmE,iBAAnE,EAAsF,iBAAtF,EAAyG,WAAzG,CAAnB,CAAyID,GAAzI,CAA6I,YAA7I,CAApB;AACAzI,MAAAA,kBAAkB,GAAGyG,iBAAiB,CAAC1C,MAAlB,GAA2B,CAA3B,GAA+B0C,iBAAiB,CAAC,CAAD,CAAhD,GAAsD,EAA3E;AACAC,MAAAA,cAAc,GAAGD,iBAAiB,CAAC1C,MAAlB,GAA2B,CAA3B,GAA+B,CAC5C;AACI,iBAAS,gBADb;AAEI,iBAAS0C,iBAAiB,CAAC,CAAD,CAAjB,CAAqB5C,KAFlC;AAGI,gBAAQ4C,iBAAiB,CAAC,CAAD;AAH7B,OAD4C,CAA/B,GAMb,EANJ;AAOA2B,MAAAA,WAAW,GAAG,IAAd;AACH;;AACD,QAAI,KAAK7I,KAAL,CAAWJ,KAAX,CAAiBwJ,cAAjB,KAAoCR,aAAa,CAAChJ,KAAd,CAAoBwJ,cAA5D,EAA4E;AACxEP,MAAAA,WAAW,GAAG,IAAd;AACA1B,MAAAA,cAAc,GAAG,KAAKnH,KAAL,CAAWJ,KAAX,CAAiBwJ,cAAjB,IAAmC,KAAKzJ,KAAL,CAAWwH,cAA/D;AACH;;AACD,QAAI,KAAKnH,KAAL,CAAWJ,KAAX,CAAiBqB,cAAjB,KAAoC2H,aAAa,CAAChJ,KAAd,CAAoBqB,cAA5D,EAA4E;AACxE4H,MAAAA,WAAW,GAAG,IAAd;AACA5H,MAAAA,cAAc,GAAG,KAAKjB,KAAL,CAAWJ,KAAX,CAAiBqB,cAAlC;AACH;;AACD,QAAI,KAAKjB,KAAL,CAAWJ,KAAX,CAAiBkE,eAAjB,KAAqC8E,aAAa,CAAChJ,KAAd,CAAoBkE,eAA7D,EAA8E;AAC1E+E,MAAAA,WAAW,GAAG,IAAd;AACA/E,MAAAA,eAAe,GAAG,KAAK9D,KAAL,CAAWJ,KAAX,CAAiBkE,eAAnC;AACH;;AACD,QAAI,KAAK9D,KAAL,CAAWJ,KAAX,CAAiBsD,qBAAjB,KAA2C0F,aAAa,CAAChJ,KAAd,CAAoBsD,qBAAnE,EAA0F;AACtF2F,MAAAA,WAAW,GAAG,IAAd;AACA3F,MAAAA,qBAAqB,GAAG,KAAKlD,KAAL,CAAWJ,KAAX,CAAiBsD,qBAAzC;AACH;;AACD,QAAI2F,WAAJ,EAAiB;AACb,WAAKrI,QAAL,CAAc;AACVkC,QAAAA,qBADU;AACamE,QAAAA,UADb;AACyBE,QAAAA,aADzB;AACwCG,QAAAA,iBADxC;AAEVC,QAAAA,cAFU;AAEM1G,QAAAA,kBAFN;AAGVwC,QAAAA,MAHU;AAGFzB,QAAAA,QAHE;AAGQwF,QAAAA,SAHR;AAGmB/F,QAAAA,cAHnB;AAGmC6C,QAAAA,eAHnC;AAGoDmD,QAAAA,SAHpD;AAG+D/D,QAAAA;AAH/D,OAAd;AAKH;AACJ;;AACDmG,EAAAA,oBAAoB,GAAG;AACnB,UAAMlJ,UAAU,GAAG;AACfC,MAAAA,QAAQ,EAAEzC,cADK;AAEf0C,MAAAA,IAAI,EAAE;AACF2B,QAAAA,UAAU,EAAE,EADV;AACcC,QAAAA,UAAU,EAAEqH,SAD1B;AACqCpI,QAAAA,SAAS,EAAE,IADhD;AACsDqI,QAAAA,SAAS,EAAED;AADjE;AAFS,KAAnB;AAMA,SAAKtJ,KAAL,CAAW9C,WAAX,CAAuBiD,UAAvB;AACH;;AAjU6C;;AAkkBlD,eAAenD,OAAO,CAAC0C,eAAD,EAAkB;AACpCxC,EAAAA,WADoC;AACvBM,EAAAA,UADuB;AAEpCL,EAAAA,mBAFoC;AAEfC,EAAAA,0BAFe;AAEaC,EAAAA,gBAFb;AAGpCC,EAAAA,uBAHoC;AAGXC,EAAAA,kBAHW;AAGSE,EAAAA,kBAHT;AAG6BC,EAAAA;AAH7B,CAAlB,CAAP,CAIZT,UAAU,CAAC4C,mBAAD,CAJE,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    updateStore, getReactInputFields, selectRegistrationTemplate, filterColumnData,\r\n    getRegistrationTemplate, getEditRegTemplate, crudMaster, getPreviewTemplate, getChildValues\r\n} from '../../actions/index'\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { Row, Col, FormGroup, FormLabel, Card, Nav } from 'react-bootstrap';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { ContentPanel, ReadOnlyText } from '../../components/App.styles';\r\nimport { constructOptionList, getControlMap, getSameRecordFromTwoArrays, showEsign,comboChild } from '../../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport PreRegDesignPopUp from './PreRegDesignPopUp';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\nimport PortalModal from '../../PortalModal';\r\nimport { faEye, faPencilAlt, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport DynamicSlideout from './DynamicSlideout.jsx'\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass DynamicPreRegDesign extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.state = {\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            addTemplateId: -1,\r\n            editId: -1, deleteId: -1, approveID: -1, previewId: -1,\r\n            selectedRecord: {},\r\n            sampleTypeOptions: [],\r\n            selectedSampleType: {},\r\n            breadCrumbData: [],\r\n            design: [],\r\n            comboComponents: [],\r\n            withoutCombocomponent: []\r\n        };\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const Layout = this.props.Login.masterData.selectedTemplate &&\r\n        this.props.Login.masterData.selectedTemplate.jsondata\r\n\r\n        const filterParam = {\r\n            inputListName: \"RegistrationTemplate\",\r\n            selectedObject: \"selectedTemplate\",\r\n            primaryKeyField: \"nreactregtemplatecode\",\r\n            fetchUrl: \"dynamicpreregdesign/getDynamicPreRegDesign\",\r\n            fecthInputObject: {\r\n                userinfo: this.props.Login.userInfo, nsampletypecode: this.state.breadCrumbData[0] ?\r\n                    this.state.breadCrumbData[0].item.value : -1\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            unchangeList: [\"realSampleType\", \"SampleTypes\"],\r\n            searchFieldList: [\"sregtemplatename\", \"stransdisplaystatus\"]\r\n        };\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {this.state.breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={this.state.breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                screenName={\"Dynamic Pre-Reg Design\"}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.RegistrationTemplate || []}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                getMasterDetail={(template) => this.props.selectRegistrationTemplate(template, this.props.Login.masterData, this.props.Login.userInfo)}\r\n                                selectedMaster={this.props.Login.masterData.selectedTemplate}\r\n                                primaryKeyField=\"nreactregtemplatecode\"\r\n                                mainField=\"sregtemplatename\"\r\n                                firstField=\"stransdisplaystatus\"\r\n                                // secondField=\"stransdisplaystatus\"\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={this.state.addTemplateId}\r\n                                filterParam={filterParam}\r\n                                hidePaging={false}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getReactInputFields(this.props.Login.userInfo, 'create')}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_SAMPLETYPEFILTER\":\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormSelectSearch\r\n                                                        name={\"nsampletypecode\"}\r\n                                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                                                        isSearchable={false}\r\n                                                        placeholder=\"Please Select...\"\r\n                                                        options={this.state.sampleTypeOptions}\r\n                                                        value={this.state.selectedSampleType ? this.state.selectedSampleType : \"\"}\r\n                                                        onChange={value => this.filterComboChange(value)}\r\n                                                    >\r\n                                                    </FormSelectSearch>\r\n                                                </Col>\r\n                                            </Row>\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md='8'>\r\n                            {this.props.Login.masterData.selectedTemplate ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                                {this.props.Login.masterData.selectedTemplate.sregtemplatename}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                    </h2>\r\n                                                    <div className=\"d-inline\">\r\n                                                        <Nav.Link name=\"editInstrument\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEW\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            // hidden={this.state.userRoleControlRights.indexOf(this.state.previewId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.getPreviewTemplate(this.props.Login.masterData,\r\n                                                                this.props.Login.userInfo, this.state.previewId\r\n                                                            )}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faEye} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"editInstrument\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.editId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.props.getEditRegTemplate(this.props.Login.masterData, this.props.Login.userInfo, this.state.editId)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"deleteInstrument\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.deleteId) === -1}\r\n                                                            onClick={() => this.ConfirmDelete(this.state.approveID)}>\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"deleteInstrument\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.approveID) === -1}\r\n                                                            onClick={() => this.deleteApproveTemplate('approve', this.state.approveID)}>\r\n                                                            <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n                                            {\r\n                                                Layout ?\r\n                                                    Layout.map((item) =>\r\n                                                        <Row>\r\n                                                            {item.children.length > 0 ?\r\n                                                                item.children.map((column) =>\r\n                                                                    <Col md={12 / item.children.length}>\r\n                                                                        {\r\n                                                                            column.children.map((component) => {\r\n                                                                                return (\r\n                                                                                    component.hasOwnProperty(\"children\") ?\r\n                                                                                        <Row>\r\n                                                                                            {component.children.map(componentrow =>\r\n                                                                                                <Col md={12 / componentrow.length}>\r\n                                                                                                    <FormGroup>\r\n                                                                                                        <FormLabel>{componentrow.label}</FormLabel>\r\n                                                                                                        <ReadOnlyText>{\"-\"}</ReadOnlyText>\r\n                                                                                                    </FormGroup>\r\n                                                                                                </Col>\r\n                                                                                            )\r\n                                                                                            }\r\n                                                                                        </Row>\r\n                                                                                        :\r\n                                                                                        <FormGroup>\r\n                                                                                            <FormLabel>{component.label}</FormLabel>\r\n                                                                                            <ReadOnlyText> {\"-\"}</ReadOnlyText>\r\n                                                                                        </FormGroup>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n\r\n                                                                    </Col>\r\n                                                                )\r\n                                                                : \"\"}\r\n                                                        </Row>\r\n                                                    )\r\n                                                    :\r\n                                                    \"\"\r\n                                            }\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openPortal ?\r\n                    <PortalModal>\r\n                        <PreRegDesignPopUp\r\n                            closeModal={this.closeModal}\r\n                            nsampletypecode={this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.value : -1}\r\n                        />\r\n                    </PortalModal> : \"\"}\r\n\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        size={\"xl\"}\r\n                        onSaveClick={this.closeModal}\r\n                        hideSave={true}\r\n                        loginoperation={true}\r\n                        operation={this.props.Login.operation}\r\n                        screenName=\"IDS_PREVIEW\"\r\n                        closeModal={this.closeModal}\r\n                        show={this.props.Login.openModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        // mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={(event) => this.onInputOnChange(event)}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            <DynamicSlideout\r\n                                selectedRecord={this.props.Login.selectedRecord}\r\n                                templateData={this.props.Login.masterData.selectedTemplate &&\r\n                                    this.props.Login.masterData.selectedTemplate.jsondata}\r\n                                handleChange={this.handleChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onNumericInputChange={this.onNumericInputChange}\r\n                                comboData={this.props.Login.comboData}\r\n                                onComboChange={this.onComboChange}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                timeZoneList={this.props.Login.timeZoneList}\r\n                                defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                            />\r\n                        } />\r\n                    : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    // onSaveClickPreview=()=>{\r\n\r\n    // }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let updateState = false;\r\n        let { userRoleControlRights, controlMap, addTemplateId,\r\n            sampleTypeOptions, breadCrumbData, selectedSampleType,\r\n            editId, deleteId, approveID, selectedRecord, comboComponents, previewId, withoutCombocomponent\r\n        } = this.state;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            updateState = true;\r\n            addTemplateId = controlMap.has(\"AddTemplate\") && controlMap.get(\"AddTemplate\").ncontrolcode;\r\n            editId = controlMap.has(\"EditTemplate\") && controlMap.get(\"EditTemplate\").ncontrolcode;\r\n            deleteId = controlMap.has(\"DeleteTemplate\") && controlMap.get(\"DeleteTemplate\").ncontrolcode;\r\n            approveID = controlMap.has(\"ApproveTemplate\") && controlMap.get(\"ApproveTemplate\").ncontrolcode;\r\n            previewId = controlMap.has(\"PreviewTemplate\") && controlMap.get(\"PreviewTemplate\").ncontrolcode;\r\n        }\r\n        if (this.props.Login.masterData.SampleTypes !== previousProps.Login.masterData.SampleTypes) {\r\n            sampleTypeOptions = constructOptionList(this.props.Login.masterData.SampleTypes || [], 'nsampletypecode', 'ssampletypename', 'nsampletypecode', \"ascending\").get(\"OptionList\")\r\n            selectedSampleType = sampleTypeOptions.length > 0 ? sampleTypeOptions[0] : {};\r\n            breadCrumbData = sampleTypeOptions.length > 0 ? [\r\n                {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    \"value\": sampleTypeOptions[0].label,\r\n                    \"item\": sampleTypeOptions[0]\r\n                }\r\n            ] : [];\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.realSampleType !== previousProps.Login.realSampleType) {\r\n            updateState = true;\r\n            breadCrumbData = this.props.Login.realSampleType || this.state.breadCrumbData;\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            updateState = true;\r\n            selectedRecord = this.props.Login.selectedRecord\r\n        }\r\n        if (this.props.Login.comboComponents !== previousProps.Login.comboComponents) {\r\n            updateState = true;\r\n            comboComponents = this.props.Login.comboComponents\r\n        }\r\n        if (this.props.Login.withoutCombocomponent !== previousProps.Login.withoutCombocomponent) {\r\n            updateState = true;\r\n            withoutCombocomponent = this.props.Login.withoutCombocomponent\r\n        }\r\n        if (updateState) {\r\n            this.setState({\r\n                userRoleControlRights, controlMap, addTemplateId, sampleTypeOptions,\r\n                breadCrumbData, selectedSampleType,\r\n                editId, deleteId, approveID, selectedRecord, comboComponents, previewId, withoutCombocomponent\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    filterComboChange = (comboData) => {\r\n        this.setState({ selectedSampleType: comboData })\r\n    }\r\n    closeFilter = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onFilterSubmit = () => {\r\n        this.reloadData()\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openPortal = this.props.Login.openPortal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openPortal = false;\r\n                selectedRecord = {};\r\n\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            openPortal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, openPortal, loadEsign, selectedRecord, selectedId: null, design: [], selectedFieldRecord: {}, showConfirmAlert: false }\r\n            // data: {openModal, loadEsign, selectedRecord}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteApproveTemplate(\"delete\", deleteId));\r\n    }\r\n    deleteApproveTemplate = (operation, ncontrolCode) => {\r\n        const masterData = this.props.Login.masterData;\r\n        const inputParam = {\r\n            methodUrl: \"RegistrationTemplate\",\r\n            classUrl: 'dynamicpreregdesign',\r\n            inputData: {\r\n                registrationtemplate: {\r\n                    nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode\r\n                },\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            operation\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    openModal: true,\r\n                    operation: \"delete\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        if (this.state.selectedSampleType) {\r\n            this.props.getRegistrationTemplate(this.state.selectedSampleType, this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENOTAVALIABLE\" }));\r\n        }\r\n    }\r\n    getPreviewTemplate = (masterData, userInfo, editId) => {\r\n        let data = [];\r\n        const withoutCombocomponent = []\r\n        const Layout = this.props.Login.masterData.selectedTemplate.jsondata\r\n        Layout.map(row => {\r\n            row.children.map(column => {\r\n                column.children.map(component => {\r\n                    return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            data.push(componentrow)\r\n                        } else {\r\n                            withoutCombocomponent.push(componentrow)\r\n                        }\r\n                    })\r\n                        : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component)\r\n                })\r\n            })\r\n        })\r\n        const comboComponents = data\r\n        let childColumnList = {};\r\n        data.map(columnList => {\r\n            const val = this.comboChild(data, columnList, childColumnList, true);\r\n            data = val.data;\r\n            childColumnList = val.childColumnList\r\n        })\r\n        this.props.getPreviewTemplate(masterData, userInfo, editId, data,\r\n             this.state.selectedRecord, childColumnList, comboComponents, withoutCombocomponent)\r\n\r\n    }\r\n   \r\n    onComboChange = (comboData, control, customName) => {\r\n\r\n        let comboName = customName || control.label;\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (comboData) {\r\n            selectedRecord[comboName] = comboData;\r\n        } else {\r\n            selectedRecord[comboName] = []\r\n        }\r\n        if (control.child && control.child.length > 0) {\r\n            const childComboList = getSameRecordFromTwoArrays(this.state.comboComponents, control.child, \"label\")\r\n            let childColumnList = {};\r\n            childComboList.map(columnList => {\r\n                const val = comboChild(this.state.comboComponents, columnList, childColumnList, false);\r\n                childColumnList = val.childColumnList\r\n            })\r\n\r\n            const parentList = getSameRecordFromTwoArrays(this.state.withoutCombocomponent, control.child, \"label\")\r\n\r\n            const inputParem = {\r\n                child: control.child,\r\n                source: control.source,\r\n                primarykeyField: control.valuemember,\r\n                value: comboData.value,\r\n                item: comboData.item\r\n            }\r\n            this.props.getChildValues(inputParem,\r\n                this.props.Login.userInfo, selectedRecord, this.props.Login.comboData,\r\n                childComboList, childColumnList, this.state.withoutCombocomponent, [...childComboList, ...parentList])\r\n        } else {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event, value) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'toggle') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else if (event.target.type === 'numeric') {\r\n            if (/\\D/.test(event.target.value))\r\n                selectedRecord[event.target.name] = event.target.value;\r\n        } else if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = value;\r\n        } else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = value\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n        // this.saveComponentProperties()\r\n    }\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    handleDateChange = (dateValue, dateName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onDrop = (value, type, oldVlaue) => {\r\n        const design = this.state.design;\r\n        let columns = design[0].children;\r\n        let designData = this.props.Login.ReactInputFields;\r\n        value = JSON.parse(value.fields);\r\n        value = { ...value, type: \"component\" }\r\n        let designDataIndex = designData.findIndex(item => item.label === value.label);\r\n        let firstIndex = columns[0] ? columns[0].children.findIndex(item => item.label === value.label) : -1;\r\n        let secondIndex = columns[1] ? columns[1].children.findIndex(item => item.label === value.label) : -1;\r\n\r\n        if (designDataIndex >= 0)\r\n            designData.splice(designDataIndex, 1);\r\n        if (firstIndex >= 0) {\r\n            if (type !== 1) {\r\n                columns[0].children.splice(firstIndex, 1);\r\n                // columns[0].splice(to, 0, columns[0].splice(from, 1)[0]);\r\n            } else {\r\n                if (oldVlaue) {\r\n                    oldVlaue = JSON.parse(oldVlaue);\r\n                    let from = columns[0].children.findIndex(item => item.label === value.label);\r\n                    let to = columns[0].children.findIndex(item => item.label === oldVlaue.label);\r\n                    columns[0].children.splice(to, 0, columns[0].children.splice(from, 1)[0]);\r\n                }\r\n            }\r\n\r\n        } else if (type === 1) {\r\n            if (columns[0]) {\r\n                columns[0].children.push(value);\r\n            } else {\r\n                columns[0] = {\r\n                    id: \"1\",\r\n                    type: \"column\",\r\n                    children: []\r\n                }\r\n\r\n                columns[0].children.push(value);\r\n            }\r\n        }\r\n        if (secondIndex >= 0) {\r\n            if (type !== 2) {\r\n                columns[1].splice(secondIndex, 1);\r\n            } else {\r\n                if (oldVlaue) {\r\n                    oldVlaue = JSON.parse(oldVlaue);\r\n                    let from = columns[1].children.findIndex(item => item.label === value.label);\r\n                    let to = columns[1].children.findIndex(item => item.label === oldVlaue.label);\r\n                    columns[1].children.splice(to, 0, columns[1].children.splice(from, 1)[0]);\r\n                }\r\n            }\r\n        } else if (type === 2) {\r\n            if (columns[1]) {\r\n                columns[1].children.push(value);\r\n            } else {\r\n                columns[1] = {\r\n                    id: \"2\",\r\n                    type: \"column\",\r\n                    children: []\r\n                }\r\n                columns[1].children.push(value);\r\n            }\r\n        }\r\n\r\n        // design.push(columns)\r\n        this.setState({ designData, design })\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    updateStore, crudMaster,\r\n    getReactInputFields, selectRegistrationTemplate, filterColumnData,\r\n    getRegistrationTemplate, getEditRegTemplate, getPreviewTemplate, getChildValues\r\n})(injectIntl(DynamicPreRegDesign))"]},"metadata":{},"sourceType":"module"}