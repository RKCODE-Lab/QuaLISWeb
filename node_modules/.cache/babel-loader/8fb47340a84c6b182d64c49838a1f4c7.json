{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useRef}from\"react\";import{useDrag}from\"react-dnd\";import{ROW}from\"./constants\";import DropArea from\"./DropArea.jsx\";import Column from\"./Column\";import\"./styles.css\";var style={};var DynamicRow=function DynamicRow(_ref){var data=_ref.data,components=_ref.components,handleDrop=_ref.handleDrop,path=_ref.path,indexrow=_ref.indexrow,onclickcomponent=_ref.onclickcomponent,selectedFieldRecord=_ref.selectedFieldRecord;var ref=useRef(null);var _useDrag=useDrag({type:ROW,item:{type:ROW,children:data.children,path:path},collect:function collect(monitor){return{isDragging:monitor.isDragging()};}}),_useDrag2=_slicedToArray(_useDrag,2),isDragging=_useDrag2[0].isDragging,drag=_useDrag2[1];var opacity=isDragging?0:1;drag(ref);var renderColumn=function renderColumn(column,currentPath){return/*#__PURE__*/React.createElement(Column,{key:column.id,data:column,components:components,handleDrop:handleDrop,path:currentPath,onclickcomponent:onclickcomponent,selectedFieldRecord:selectedFieldRecord});};return/*#__PURE__*/React.createElement(\"div\",{ref:ref,style:_objectSpread(_objectSpread({},style),{},{opacity:opacity}),className:\"base draggable row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"columns\"},data.children.map(function(column,index){var currentPath=\"\".concat(path,\"-\").concat(index);return/*#__PURE__*/React.createElement(React.Fragment,{key:column.id},data.children.length<4&&/*#__PURE__*/React.createElement(DropArea,{data:{path:currentPath,childrenCount:data.children.length},onDrop:handleDrop,className:\"horizontalDrag\"}),renderColumn(column,currentPath));}),data.children.length<4&&/*#__PURE__*/React.createElement(DropArea,{data:{path:\"\".concat(path,\"-\").concat(data.children.length),childrenCount:data.children.length},onDrop:handleDrop,className:\"horizontalDrag\",isLast:true})));};export default DynamicRow;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/droparea/Row.jsx"],"names":["React","useRef","useDrag","ROW","DropArea","Column","style","DynamicRow","data","components","handleDrop","path","indexrow","onclickcomponent","selectedFieldRecord","ref","type","item","children","collect","monitor","isDragging","drag","opacity","renderColumn","column","currentPath","id","map","index","length","childrenCount"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { ROW } from \"./constants\";\r\nimport DropArea from \"./DropArea.jsx\";\r\nimport Column from \"./Column\";\r\nimport \"./styles.css\"\r\n\r\nconst style = {};\r\nconst DynamicRow = ({ data, components, handleDrop, path, indexrow, onclickcomponent, selectedFieldRecord }) => {\r\n  const ref = useRef(null);\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n\r\n    type: ROW,\r\n    item: {\r\n      type: ROW,\r\n      children: data.children,\r\n      path\r\n    },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n  drag(ref);\r\n\r\n  const renderColumn = (column, currentPath) => {\r\n    return (\r\n      <Column\r\n        key={column.id}\r\n        data={column}\r\n        components={components}\r\n        handleDrop={handleDrop}\r\n        path={currentPath}\r\n        onclickcomponent={onclickcomponent}\r\n        selectedFieldRecord={selectedFieldRecord}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} style={{ ...style, opacity }} className=\"base draggable row\">\r\n      {/* {\"Row\"}{indexrow} */}\r\n      <div className=\"columns\">\r\n        {data.children.map((column, index) => {\r\n          const currentPath = `${path}-${index}`;\r\n\r\n          return (\r\n            <React.Fragment key={column.id}>\r\n              {data.children.length < 4 && <DropArea\r\n                data={{\r\n                  path: currentPath,\r\n                  childrenCount: data.children.length,\r\n                }}\r\n                onDrop={handleDrop}\r\n                className=\"horizontalDrag\"\r\n              />\r\n              }\r\n              {renderColumn(column, currentPath)}\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n        {data.children.length < 4 &&\r\n          <DropArea\r\n            data={{\r\n              path: `${path}-${data.children.length}`,\r\n              childrenCount: data.children.length\r\n            }}\r\n            onDrop={handleDrop}\r\n            className=\"horizontalDrag\"\r\n            isLast\r\n          />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DynamicRow;\r\n"]},"metadata":{},"sourceType":"module"}