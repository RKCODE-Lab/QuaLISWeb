{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import React from'react';import{Col,Nav,Row}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{FormattedMessage}from'react-intl';import{faPlus}from'@fortawesome/free-solid-svg-icons';import DataGrid from'../../components/data-grid/data-grid.component';import ReactTooltip from'react-tooltip';var InvenotryTransaction=function InvenotryTransaction(props){var _React$createElement;var QuantityTransaction=props.controlMap.has(\"QuantityTransaction\")&&props.controlMap.get(\"QuantityTransaction\").ncontrolcode;var ViewMaterialInventoryTrans=props.controlMap.has(\"ViewMaterialInventoryTrans\")&&props.controlMap.get(\"ViewMaterialInventoryTrans\").ncontrolcode;var testSectionColumnList=[{\"idsName\":\"IDS_INVENTORYID\",\"dataField\":\"IDS_INVENTORYID\",\"width\":\"200px\"},{\"idsName\":\"IDS_TRANSACTIONDATE\",\"dataField\":\"IDS_TRANSACTIONDATE\",\"width\":\"100px\"}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\"}),/*#__PURE__*/React.createElement(Nav.Link,{name:\"QuantityTransaction\",className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(QuantityTransaction)===-1,onClick:function onClick(){return props.quantityTransaction(QuantityTransaction,\"create\",{},props.userInfo);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_QUANTITYTRANSACTION\",defaultMessage:\"Quantity Transaction\"})))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DataGrid,(_React$createElement={key:\"testsectionkey\",primaryKeyField:\"nmaterialinventtranscode\",dataResult:props.dataResult,dataState:props.dataState,dataStateChange:props.dataStateChange,extractedColumnList:testSectionColumnList,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,fetchRecord:props.fetchRecord,deleteRecord:props.deleteRecord,pageable:false,scrollable:'scrollable',gridHeight:'600px',isActionRequired:true,hideColumnFilter:false,selectedId:0,isJsonFeild:true},_defineProperty(_React$createElement,\"isActionRequired\",true),_defineProperty(_React$createElement,\"actionIcons\",[{title:props.intl.formatMessage({id:\"IDS_VIEW\"}),controlname:\"faEye\",objectName:\"materialinventorytransaction\",hidden:props.userRoleControlRights.indexOf(ViewMaterialInventoryTrans)===-1,onClick:function onClick(viewdetails){return props.viewQuantityTrans(viewdetails);}}]),_defineProperty(_React$createElement,\"jsonFeild\",\"jsondata\"),_React$createElement)))));};export default InvenotryTransaction;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/Material/InvenotryTransaction.jsx"],"names":["React","Col","Nav","Row","FontAwesomeIcon","FormattedMessage","faPlus","DataGrid","ReactTooltip","InvenotryTransaction","props","QuantityTransaction","controlMap","has","get","ncontrolcode","ViewMaterialInventoryTrans","testSectionColumnList","userRoleControlRights","indexOf","quantityTransaction","userInfo","dataResult","dataState","dataStateChange","fetchRecord","deleteRecord","title","intl","formatMessage","id","controlname","objectName","hidden","onClick","viewdetails","viewQuantityTrans"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Nav, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n\r\nconst InvenotryTransaction = (props) => {\r\n    const QuantityTransaction = props.controlMap.has(\"QuantityTransaction\") && props.controlMap.get(\"QuantityTransaction\").ncontrolcode;\r\n    const ViewMaterialInventoryTrans = props.controlMap.has(\"ViewMaterialInventoryTrans\") && props.controlMap.get(\"ViewMaterialInventoryTrans\").ncontrolcode;\r\n    const testSectionColumnList = [\r\n        { \"idsName\": \"IDS_INVENTORYID\", \"dataField\": \"IDS_INVENTORYID\", \"width\": \"200px\" },\r\n        {\r\n            \"idsName\": \"IDS_TRANSACTIONDATE\", \"dataField\": \"IDS_TRANSACTIONDATE\", \"width\": \"100px\"\r\n        }\r\n    ];\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <ReactTooltip place=\"bottom\" globalEventOff='click' />\r\n                    <Nav.Link name=\"QuantityTransaction\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(QuantityTransaction) === -1}\r\n                        onClick={() => props.quantityTransaction(QuantityTransaction, \"create\", {}, props.userInfo)}>\r\n                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                        <FormattedMessage id=\"IDS_QUANTITYTRANSACTION\" defaultMessage=\"Quantity Transaction\" />\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n\r\n                    <DataGrid\r\n                        key=\"testsectionkey\"\r\n                        primaryKeyField=\"nmaterialinventtranscode\"\r\n                        dataResult={props.dataResult}\r\n                        dataState={props.dataState}\r\n                        dataStateChange={props.dataStateChange}\r\n                        extractedColumnList={testSectionColumnList}\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        fetchRecord={props.fetchRecord}\r\n                        deleteRecord={props.deleteRecord}\r\n                        pageable={false}\r\n                        scrollable={'scrollable'}\r\n                        gridHeight={'600px'}\r\n                        isActionRequired={true}\r\n                        hideColumnFilter={false}\r\n                        selectedId={0}\r\n                        isJsonFeild={true}\r\n                        isActionRequired={true}\r\n                        actionIcons={[{\r\n                            title: props.intl.formatMessage({ id: \"IDS_VIEW\" }),\r\n                            controlname: \"faEye\",\r\n                            objectName: \"materialinventorytransaction\",\r\n                            hidden: props.userRoleControlRights.indexOf(ViewMaterialInventoryTrans) === -1,\r\n                            onClick: (viewdetails) => props.viewQuantityTrans(viewdetails)\r\n                        }]}\r\n                        jsonFeild='jsondata'\r\n                    >\r\n                    </DataGrid>\r\n\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InvenotryTransaction;"]},"metadata":{},"sourceType":"module"}