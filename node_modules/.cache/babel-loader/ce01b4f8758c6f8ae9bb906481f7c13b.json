{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData}from'../components/CommonScript';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';import{transactionStatus}from'../components/Enumeration';import{intl}from\"../components/App\";export function getTechniqueDetail(technique,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"technique/getTechnique\",{ntechniquecode:technique.ntechniquecode,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getEditTechniqueService(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"technique/getActiveTechniqueById\",_defineProperty({},inputParam.primaryKeyName,inputParam.masterData.SelectedTechnique[inputParam.primaryKeyName])).then(function(response){//const masterData = {...inputParam.masterData, SelectedTestPriceVersion: response.data};\ndispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:inputParam.operation,loading:false,screenName:inputParam.screenName,selectedRecord:response.data,ncontrolCode:inputParam.ncontrolcode}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getAddTestService(screenName,operation,masterData,userInfo,ncontrolCode){return function(dispatch){//if (masterData.SelectedTestPriceVersion.ntransactionstatus === transactionStatus.DRAFT){     \ndispatch(initRequest(true));rsapi.post(\"technique/getTechniqueTest\",{\"ntechniquecode\":masterData.SelectedTechnique[\"ntechniquecode\"],userinfo:userInfo}).then(function(response){// const testMap = constructOptionList(response.data || [], \"ntestcode\", \"stestname\",\n//              undefined, undefined, true) ;\n// const testList = testMap.get(\"OptionList\");                          \ndispatch({type:DEFAULT_RETURN,payload:{//pricingTestList:testList, \ntechniqueTestList:response.data,// openModal:true,\nopenChildModal:true,operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,//selectedRecord, \nloading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});// }\n// else{\n//     toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTTESTPRICEVERSION\"}));\n// }\n};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/TechniqueAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","toast","initRequest","transactionStatus","intl","getTechniqueDetail","technique","userInfo","masterData","dispatch","post","ntechniquecode","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getEditTechniqueService","inputParam","primaryKeyName","SelectedTechnique","openModal","screenName","selectedRecord","ncontrolCode","ncontrolcode","getAddTestService","techniqueTestList","openChildModal"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport { sortData} from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { transactionStatus } from '../components/Enumeration';\r\nimport { intl } from \"../components/App\";\r\n\r\n\r\nexport function getTechniqueDetail (technique, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"technique/getTechnique\", {ntechniquecode:technique.ntechniquecode, \r\n                                                          userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getEditTechniqueService(inputParam){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"technique/getActiveTechniqueById\",{[inputParam.primaryKeyName]:inputParam.masterData.SelectedTechnique[inputParam.primaryKeyName] \r\n                                                                    })\r\n        .then(response=>{\r\n            //const masterData = {...inputParam.masterData, SelectedTestPriceVersion: response.data};\r\n            \r\n            \r\n            dispatch({type: DEFAULT_RETURN, payload:{ openModal:true,\r\n                                                       operation:inputParam.operation, \r\n                                                       loading:false,\r\n                                                       screenName:inputParam.screenName,   \r\n                                                       selectedRecord:response.data,\r\n                                                       ncontrolCode:inputParam.ncontrolcode,}})\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }  \r\n        })\r\n    }\r\n}\r\n\r\nexport function getAddTestService(screenName, operation, masterData, userInfo, ncontrolCode){\r\n    return function (dispatch) {    \r\n        //if (masterData.SelectedTestPriceVersion.ntransactionstatus === transactionStatus.DRAFT){     \r\n        \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"technique/getTechniqueTest\",{\"ntechniquecode\":masterData.SelectedTechnique[\"ntechniquecode\"], \r\n            userinfo:userInfo})\r\n\r\n        .then(response=>{\r\n\r\n                // const testMap = constructOptionList(response.data || [], \"ntestcode\", \"stestname\",\r\n                //              undefined, undefined, true) ;\r\n\r\n                // const testList = testMap.get(\"OptionList\");                          \r\n                dispatch({type: DEFAULT_RETURN, payload:{//pricingTestList:testList, \r\n                                                        techniqueTestList:response.data,\r\n                                                       // openModal:true,\r\n                                                        openChildModal:true,\r\n                                                        operation, screenName, ncontrolCode,\r\n                                                        //selectedRecord, \r\n                                                        loading:false}});\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }      \r\n            }) \r\n    // }\r\n    // else{\r\n    //     toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTTESTPRICEVERSION\"}));\r\n    // }\r\n}}"]},"metadata":{},"sourceType":"module"}