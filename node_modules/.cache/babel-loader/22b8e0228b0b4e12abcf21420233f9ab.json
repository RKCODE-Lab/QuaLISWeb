{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import Axios from\"axios\";import{toast}from\"react-toastify\";import{constructOptionList,sortData}from\"../components/CommonScript\";import{transactionStatus}from\"../components/Enumeration\";import rsapi from\"../rsapi\";import{initRequest}from\"./LoginAction\";import{intl}from'../components/App';import{DEFAULT_RETURN}from\"./LoginTypes\";export function getSeqNoFormats(inputObj){return function(dispatch){dispatch(initRequest(true));var URL=[rsapi.post('/registrationsubtype/getAllSeqNoFormats',{userinfo:inputObj.userInfo})];URL.push(rsapi.post('/registrationsubtype/getPeriods',{userinfo:inputObj.userInfo}));Axios.all(URL).then(function(response){var periodList=constructOptionList(response[1].data||[],'nperiodcode','speriodname').get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{existingFormats:response[0].data,periodList:periodList,openModal:true,loading:false,operation:'create',screenName:\"Version\",ncontrolcode:inputObj.ncontrolcode}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationSubTypeOnReload(userInfo,searchRef){return function(dispatch){dispatch(initRequest(true));rsapi.post('registrationsubtype/getRegistrationSubType',{userinfo:userInfo}).then(function(res){var masterData=_objectSpread({},res.data);if(searchRef!==undefined&&searchRef.current!==null){searchRef.current.value=\"\";//masterData['searchedData'] = undefined\n}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,reloadData:true}});}).catch(function(err){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(err.response.status===500)toast.error(err.message);else toast.warn(err.response.data);});};}export function getRegistrationSubTypeMaster(selectedSampleType,selectedRegType,masterData,userInfo,searchRef){return function(dispatch){dispatch(initRequest(true));rsapi.post('registrationsubtype/getRegistrationSubTypeMaster',{nregtypecode:selectedRegType.value,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);if(searchRef!==undefined&&searchRef.current!==null){searchRef.current.value=\"\";masterData['searchedData']=undefined;}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,realSampleType:selectedSampleType,realRegtype:selectedRegType,loading:false}});}).catch(function(err){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(err.response.status===500)toast.error(err.message);else toast.warn(err.response.data);});};}export function selectRegistrationSubType(selectedRegSubType,masterData,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post('/registrationsubtype/getRegistrationSubTypeById',{nregsubtypecode:selectedRegSubType.nregsubtypecode,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedRegistrationSubType:selectedRegSubType});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(err){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(err.response.status===500)toast.error(err.message);else toast.warn(err.response.data);});};}export function getEditRegSubType(nregsubtypecode,userInfo,ncontrolcode){return function(dispatch){dispatch(initRequest(true));rsapi.post('/registrationsubtype/getEditRegSubType',{nregsubtypecode:nregsubtypecode,userinfo:userInfo}).then(function(response){var selectedRecord=_objectSpread({nregsubtypecode:response.data.nregsubtypecode,nregtypecode:response.data.nregtypecode},response.data.jsondata);dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,loading:false,openModal:true,screenName:\"IDS_REGISTRATIONSUBTYPE\",ncontrolcode:ncontrolcode,operation:\"update\"}});}).catch(function(err){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(err.response.status===500)toast.error(err.message);else toast.warn(err.response.data);});};}export function getRegSubTypeDetails(inputObj){var version=inputObj.version,masterData=inputObj.masterData,userInfo=inputObj.userInfo;return function(dispatch){if(!(masterData.selectedVersion.nregsubtypeversioncode===version.nregsubtypeversioncode)){dispatch(initRequest(true));rsapi.post('registrationsubtype/getVersionDetails',{userinfo:userInfo,nregsubtypeversioncode:version.nregsubtypeversioncode}).then(function(res){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedVersion:res.data});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}export function getVersionById(primaryKey,userInfo,ncontrolcode){return function(dispatch){dispatch(initRequest(true));var URL=[];URL.push(rsapi.post('/registrationsubtype/getAllSeqNoFormats',{userinfo:userInfo}));URL.push(rsapi.post('/registrationsubtype/getPeriods',{userinfo:userInfo}));URL.push(rsapi.post('registrationsubtype/getVersionDetails',{userinfo:userInfo,nregsubtypeversioncode:primaryKey}));Axios.all(URL).then(function(res){if(res[2].data.ntransactionstatus===transactionStatus.DRAFT){var periodList=constructOptionList(res[1].data||[],'nperiodcode','speriodname').get(\"OptionList\");var nperiodcode=periodList.filter(function(period){return period.value===res[2].data.nperiodcode;});var selectedRecord={};selectedRecord=_objectSpread(_objectSpread({},res[2].data.jsondata),{},{nperiodcode:nperiodcode,nregsubtypeversioncode:primaryKey});dispatch({type:DEFAULT_RETURN,payload:{existingFormats:res[0].data,periodList:periodList,selectedRecord:selectedRecord,openModal:true,operation:'update',ncontrolcode:ncontrolcode,loading:false,screenName:\"Version\"}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterStatus:\"IDS_SELECTDRAFTRECORD\"}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationTypeBySampleType(comboData,masterData,userInfo,realRegtype){return function(dispatch){dispatch(initRequest(true));rsapi.post('registrationtype/getRegistrationTypeBySampleType',{nsampletypecode:comboData.value,userinfo:userInfo}).then(function(res){masterData=_objectSpread(_objectSpread({},masterData),{},{RegistrationTypes:res.data});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,selectedSampleType:comboData,realRegtype:realRegtype,loading:false,reloadData:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/RegistrationSubTypeAction.js"],"names":["Axios","toast","constructOptionList","sortData","transactionStatus","rsapi","initRequest","intl","DEFAULT_RETURN","getSeqNoFormats","inputObj","dispatch","URL","post","userinfo","userInfo","push","all","then","response","periodList","data","get","type","payload","existingFormats","openModal","loading","operation","screenName","ncontrolcode","catch","error","status","message","warn","getRegistrationSubTypeOnReload","searchRef","res","masterData","undefined","current","value","reloadData","err","getRegistrationSubTypeMaster","selectedSampleType","selectedRegType","nregtypecode","realSampleType","realRegtype","selectRegistrationSubType","selectedRegSubType","nregsubtypecode","selectedRegistrationSubType","getEditRegSubType","selectedRecord","jsondata","getRegSubTypeDetails","version","selectedVersion","nregsubtypeversioncode","getVersionById","primaryKey","ntransactionstatus","DRAFT","nperiodcode","filter","period","masterStatus","getRegistrationTypeBySampleType","comboData","nsampletypecode","RegistrationTypes"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { constructOptionList, sortData } from \"../components/CommonScript\";\r\nimport { transactionStatus } from \"../components/Enumeration\";\r\nimport rsapi from \"../rsapi\"\r\nimport { initRequest } from \"./LoginAction\"\r\nimport { intl } from '../components/App';\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\n\r\nexport function getSeqNoFormats(inputObj) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let URL = [rsapi.post('/registrationsubtype/getAllSeqNoFormats', { userinfo: inputObj.userInfo })]\r\n        URL.push(rsapi.post('/registrationsubtype/getPeriods', { userinfo: inputObj.userInfo }))\r\n        Axios.all(URL)\r\n            .then(response => {\r\n                let periodList = constructOptionList(response[1].data || [], 'nperiodcode', 'speriodname').get(\"OptionList\")\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        existingFormats: response[0].data,\r\n                        periodList,\r\n                        openModal: true,\r\n                        loading: false,\r\n                        operation: 'create',\r\n                        screenName: \"Version\",\r\n                        ncontrolcode:inputObj.ncontrolcode\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRegistrationSubTypeOnReload(userInfo,searchRef) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('registrationsubtype/getRegistrationSubType', { userinfo: userInfo })\r\n            .then(res => {\r\n                let masterData = {\r\n                    ...res.data\r\n                }\r\n                if (searchRef !== undefined && searchRef.current !== null) {\r\n                    searchRef.current.value = \"\";\r\n                    //masterData['searchedData'] = undefined\r\n                }\r\n                sortData(masterData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        reloadData: true\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: { loading: false }\r\n                })\r\n                if (err.response.status === 500)\r\n                    toast.error(err.message);\r\n                else\r\n                    toast.warn(err.response.data)\r\n            })\r\n    }\r\n}\r\nexport function getRegistrationSubTypeMaster(selectedSampleType, selectedRegType, masterData, userInfo,searchRef) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('registrationsubtype/getRegistrationSubTypeMaster', { nregtypecode: selectedRegType.value, userinfo: userInfo })\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data\r\n                }\r\n                if (searchRef !== undefined && searchRef.current !== null) {\r\n                    searchRef.current.value = \"\";\r\n                    masterData['searchedData'] = undefined\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        realSampleType: selectedSampleType,\r\n                        realRegtype: selectedRegType,\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: { loading: false }\r\n                })\r\n                if (err.response.status === 500)\r\n                    toast.error(err.message);\r\n                else\r\n                    toast.warn(err.response.data)\r\n            })\r\n    }\r\n}\r\nexport function selectRegistrationSubType(selectedRegSubType, masterData, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('/registrationsubtype/getRegistrationSubTypeById', { nregsubtypecode: selectedRegSubType.nregsubtypecode, userinfo: userInfo })\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    selectedRegistrationSubType: selectedRegSubType\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: { loading: false }\r\n                })\r\n                if (err.response.status === 500)\r\n                    toast.error(err.message);\r\n                else\r\n                    toast.warn(err.response.data)\r\n            })\r\n    }\r\n}\r\nexport function getEditRegSubType(nregsubtypecode, userInfo, ncontrolcode) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('/registrationsubtype/getEditRegSubType', { nregsubtypecode, userinfo: userInfo })\r\n            .then(response => {\r\n                let selectedRecord = {\r\n                    nregsubtypecode: response.data.nregsubtypecode,\r\n                    nregtypecode: response.data.nregtypecode,\r\n                    ...response.data.jsondata\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        openModal: true,\r\n                        screenName: \"IDS_REGISTRATIONSUBTYPE\",\r\n                        ncontrolcode,\r\n                        operation: \"update\"\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: { loading: false }\r\n                })\r\n                if (err.response.status === 500)\r\n                    toast.error(err.message);\r\n                else\r\n                    toast.warn(err.response.data)\r\n            })\r\n    }\r\n}\r\nexport function getRegSubTypeDetails(inputObj) {\r\n    let { version, masterData, userInfo } = inputObj;\r\n    return function (dispatch) {\r\n        if (!(masterData.selectedVersion.nregsubtypeversioncode === version.nregsubtypeversioncode)) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post('registrationsubtype/getVersionDetails', { userinfo: userInfo, nregsubtypeversioncode: version.nregsubtypeversioncode })\r\n                .then(res => {\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedVersion: res.data\r\n                    }\r\n                    sortData(masterData);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\nexport function getVersionById(primaryKey, userInfo, ncontrolcode) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let URL = []\r\n        URL.push(rsapi.post('/registrationsubtype/getAllSeqNoFormats', { userinfo: userInfo }))\r\n        URL.push(rsapi.post('/registrationsubtype/getPeriods', { userinfo: userInfo }))\r\n        URL.push(rsapi.post('registrationsubtype/getVersionDetails', { userinfo: userInfo, nregsubtypeversioncode: primaryKey }))\r\n        Axios.all(URL)\r\n            .then(res => {\r\n                if (res[2].data.ntransactionstatus === transactionStatus.DRAFT) {\r\n                    let periodList = constructOptionList(res[1].data || [], 'nperiodcode', 'speriodname').get(\"OptionList\")\r\n                    let nperiodcode = periodList.filter(period => period.value === res[2].data.nperiodcode)\r\n                    let selectedRecord = {}\r\n                    selectedRecord = {\r\n                        ...res[2].data.jsondata,\r\n                        nperiodcode,\r\n                        nregsubtypeversioncode: primaryKey\r\n                    }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            existingFormats: res[0].data,\r\n                            periodList,\r\n                            selectedRecord,\r\n                            openModal: true,\r\n                            operation: 'update',\r\n                            ncontrolcode,\r\n                            loading: false,\r\n                            screenName:\"Version\"\r\n                        }\r\n                    });\r\n                } else {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, masterStatus: \"IDS_SELECTDRAFTRECORD\" } });\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRegistrationTypeBySampleType(comboData, masterData, userInfo, realRegtype) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('registrationtype/getRegistrationTypeBySampleType', { nsampletypecode: comboData.value, userinfo: userInfo })\r\n            .then(res => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    RegistrationTypes: res.data\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        selectedSampleType: comboData,\r\n                        realRegtype,\r\n                        loading: false,\r\n                        reloadData: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}