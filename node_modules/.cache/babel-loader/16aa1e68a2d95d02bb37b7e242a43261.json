{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nimport { sortData } from '../components/CommonScript';\nexport function fetchById(languagesParam) {\n  return function (dispatch) {\n    let primaryKeyField = 0;\n    let findIndex = 0;\n    let fieldName = \"\";\n    let selectedJsondata;\n    let jsondataKeys;\n    let URL;\n\n    if (languagesParam.masterData.headername == \"Menu\") {\n      URL = rsapi.post(\"language/getActiveMenuByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nmenucode\": languagesParam.languagesRow.nmenucode\n      });\n      primaryKeyField = languagesParam.languagesRow.nmenucode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Module\") {\n      URL = rsapi.post(\"language/getActiveModuleByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nmodulecode\": languagesParam.languagesRow.nmodulecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nmodulecode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Forms\") {\n      URL = rsapi.post(\"language/getActiveFormByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nformcode\": languagesParam.languagesRow.nformcode\n      });\n      primaryKeyField = languagesParam.languagesRow.nformcode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Transaction Status\") {\n      URL = rsapi.post(\"language/getActiveTransactionStatusByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ntranscode\": languagesParam.languagesRow.ntranscode\n      });\n      primaryKeyField = languagesParam.languagesRow.ntranscode;\n      jsondataKeys = Object.keys(languagesParam.languagesRow.jsondata);\n      fieldName = jsondataKeys;\n    } else if (languagesParam.masterData.headername == \"Control Master\") {\n      URL = rsapi.post(\"language/getActiveControlMasterByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ncontrolcode\": languagesParam.languagesRow.ncontrolcode\n      });\n      primaryKeyField = languagesParam.languagesRow.ncontrolcode;\n      fieldName = \"scontrolids\";\n    } else if (languagesParam.masterData.headername == \"Approval Sub Type\") {\n      URL = rsapi.post(\"language/getActiveApprovalSubTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"napprovalsubtypecode\": languagesParam.languagesRow.napprovalsubtypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.napprovalsubtypecode;\n      fieldName = \"approvalsubtypename\";\n    } else if (languagesParam.masterData.headername == \"Sample Type\") {\n      URL = rsapi.post(\"language/getActiveSampleTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nsampletypecode\": languagesParam.languagesRow.nsampletypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nsampletypecode;\n      fieldName = \"sampletypename\";\n    } // else if (languagesParam.masterData.headername == \"Template Design\") {\n    //     URL = rsapi.post(\"language/getActiveTemplateTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ntemplatetypecode\": languagesParam.languagesRow.ntemplatetypecode })\n    //     primaryKeyField = languagesParam.languagesRow.ntemplatetypecode;\n    //     fieldName = \"stemplatetypename\";\n    // } \n    else if (languagesParam.masterData.headername == \"Period\") {\n      URL = rsapi.post(\"language/getActivePeriodByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nperiodcode\": languagesParam.languagesRow.nperiodcode\n      });\n      primaryKeyField = languagesParam.languagesRow.nperiodcode;\n      fieldName = \"speriodname\";\n    } else if (languagesParam.masterData.headername == \"Gender\") {\n      URL = rsapi.post(\"language/getActiveGenderByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ngendercode\": languagesParam.languagesRow.ngendercode\n      });\n      primaryKeyField = languagesParam.languagesRow.ngendercode;\n      fieldName = \"sgendername\";\n    } else if (languagesParam.masterData.headername == \"Grade\") {\n      URL = rsapi.post(\"language/getActiveGradeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ngradecode\": languagesParam.languagesRow.ngradecode\n      });\n      primaryKeyField = languagesParam.languagesRow.ngradecode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Scheduler Type\") {\n      URL = rsapi.post(\"language/getActiveSchedulerTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nschedulertypecode\": languagesParam.languagesRow.nschedulertypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nschedulertypecode;\n      fieldName = \"sschedulertypename\";\n    } else if (languagesParam.masterData.headername == \"Query Builder Tables\") {\n      URL = rsapi.post(\"language/getActiveQueryBuilderTablesByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nquerybuildertablecode\": languagesParam.languagesRow.nquerybuildertablecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nquerybuildertablecode;\n      fieldName = \"tablename\";\n    } else if (languagesParam.masterData.headername == \"Query Builder Views\") {\n      URL = rsapi.post(\"language/getActiveQueryBuilderViewsByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nquerybuilderviewscode\": languagesParam.languagesRow.nquerybuilderviewscode\n      });\n      primaryKeyField = languagesParam.languagesRow.nquerybuilderviewscode;\n      fieldName = \"displayname\";\n    } else if (languagesParam.masterData.headername == \"Query Builder Views Columns\") {\n      URL = rsapi.post(\"language/getActiveQueryBuilderViewsColumnsByID\", {\n        \"languagesParam\": languagesParam.languagesRow.jsondata[languagesParam.languagesRow.keys].findIndex(item => item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\"),\n        \"userinfo\": languagesParam.userInfo,\n        \"sviewname\": languagesParam.languagesRow.sviewname,\n        \"keysvalue\": languagesParam.languagesRow.keys\n      }); // primaryKeyField = languagesParam.languagesRow.jsondata[languagesParam.languagesRow.keys].findIndex((item) => (item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\"));\n\n      findIndex = languagesParam.languagesRow.jsondata[languagesParam.languagesRow.keys].findIndex(item => item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\");\n      primaryKeyField = languagesParam.languagesRow.index;\n      fieldName = \"displayname\";\n    } else if (languagesParam.masterData.headername == \"Multilingual Masters\") {\n      URL = rsapi.post(\"language/getActiveMultilingualMastersByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nmultilingualmasterscode\": languagesParam.languagesRow.nmultilingualmasterscode\n      });\n      primaryKeyField = languagesParam.languagesRow.nmultilingualmasterscode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Material Type\") {\n      URL = rsapi.post(\"language/getActiveMaterialTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nmaterialtypecode\": languagesParam.languagesRow.nmaterialtypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nmaterialtypecode;\n      fieldName = \"smaterialtypename\";\n    } else if (languagesParam.masterData.headername == \"Interface Type\") {\n      URL = rsapi.post(\"language/getActiveInterfaceTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ninterfacetypecode\": languagesParam.languagesRow.ninterfacetypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.ninterfacetypecode;\n      fieldName = \"sinterfacetypename\";\n    } else if (languagesParam.masterData.headername == \"Audit Action Filter\") {\n      URL = rsapi.post(\"language/getActiveAuditActionFilterByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nauditactionfiltercode\": languagesParam.languagesRow.nauditactionfiltercode\n      });\n      primaryKeyField = languagesParam.languagesRow.nauditactionfiltercode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Attachment Type\") {\n      URL = rsapi.post(\"language/getActiveAttachmentTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nattachmenttypecode\": languagesParam.languagesRow.nattachmenttypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nattachmenttypecode;\n      fieldName = \"sattachmenttype\";\n    } else if (languagesParam.masterData.headername == \"FTP Type\") {\n      URL = rsapi.post(\"language/getActiveFTPTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nftptypecode\": languagesParam.languagesRow.nftptypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nftptypecode;\n      fieldName = \"sftptypename\";\n    } else if (languagesParam.masterData.headername == \"Report Type\") {\n      URL = rsapi.post(\"language/getActiveReportTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nreporttypecode\": languagesParam.languagesRow.nreporttypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nreporttypecode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"COAReport Type\") {\n      URL = rsapi.post(\"language/getActiveCOAReportTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ncoareporttypecode\": languagesParam.languagesRow.ncoareporttypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.ncoareporttypecode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"React Components\") {\n      URL = rsapi.post(\"language/getActiveReactComponentByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nreactcomponentcode\": languagesParam.languagesRow.nreactcomponentcode\n      });\n      primaryKeyField = languagesParam.languagesRow.nreactcomponentcode;\n      fieldName = \"componentname\";\n    } else if (languagesParam.masterData.headername == \"Functions\") {\n      URL = rsapi.post(\"language/getActiveFunctionsByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nfunctioncode\": languagesParam.languagesRow.nfunctioncode\n      });\n      primaryKeyField = languagesParam.languagesRow.nfunctioncode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Dynamic Formula Fields\") {\n      URL = rsapi.post(\"language/getActiveDynamicFormulaFieldByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ndynamicformulafieldcode\": languagesParam.languagesRow.ndynamicformulafieldcode\n      });\n      primaryKeyField = languagesParam.languagesRow.ndynamicformulafieldcode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Chart Type\") {\n      URL = rsapi.post(\"language/getActiveChartTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ncharttypecode\": languagesParam.languagesRow.ncharttypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.ncharttypecode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Design Components\") {\n      URL = rsapi.post(\"language/getActiveDesignComponentByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ndesigncomponentcode\": languagesParam.languagesRow.ndesigncomponentcode\n      });\n      primaryKeyField = languagesParam.languagesRow.ndesigncomponentcode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"CheckList Component\") {\n      URL = rsapi.post(\"language/getActiveCheckListComponentByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nchecklistcomponentcode\": languagesParam.languagesRow.nchecklistcomponentcode\n      });\n      primaryKeyField = languagesParam.languagesRow.nchecklistcomponentcode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Generic Label\") {\n      URL = rsapi.post(\"language/getActiveGenericLabelByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ngenericlabelcode\": languagesParam.languagesRow.ngenericlabelcode\n      });\n      primaryKeyField = languagesParam.languagesRow.ngenericlabelcode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Query Builder Table Columns\") {\n      URL = rsapi.post(\"language/getActiveQueryBuilderTableColumnsByID\", {\n        \"languagesParam\": languagesParam.languagesRow[languagesParam.masterData.selectedQueryBuilderScolumnList[0].scolumnname] && languagesParam.languagesRow[languagesParam.masterData.selectedQueryBuilderScolumnList[0].scolumnname].value,\n        \"userinfo\": languagesParam.userInfo,\n        \"nquerybuildertablecode\": languagesParam.languagesRow.nquerybuildertablecode,\n        \"tablecolumnname\": languagesParam.masterData.selectedQueryBuilderScolumnList[0].scolumnname,\n        \"sdisplayname\": languagesParam.languagesRow.sdisplayname,\n        \"scolumnname\": languagesParam.languagesRow.scolumnname.value\n      });\n      primaryKeyField = languagesParam.languagesRow.index;\n      fieldName = \"displayname\";\n    } else if (languagesParam.masterData.headername == \"Dynamic Audit Table\") {\n      URL = rsapi.post(\"language/getActiveDynamicAuditTableByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ndynamicaudittablecode\": languagesParam.languagesRow.ndynamicaudittablecode,\n        \"subsampleenabledisable\": languagesParam.languagesRow.fieldname,\n        \"keyname\": Object.keys(JSON.parse(languagesParam.languagesRow.jsondata.value))[0],\n        \"conditioncheck\": languagesParam.languagesRow.jsondata.value\n      });\n      primaryKeyField = languagesParam.languagesRow.index;\n      fieldName = Object.keys(JSON.parse(languagesParam.languagesRow.jsondata.value))[0];\n    }\n\n    dispatch(initRequest(true));\n    Axios.all([URL]).then(response => {\n      const selectedRecord = { ...languagesParam.selectedRecord,\n        ...response[0].data.sjsondata,\n        ...response[0].data,\n        ...response[0].data.jsondata,\n        fieldName,\n        selectedJsondata,\n        findIndex,\n        keys: languagesParam.languagesRow.keys //jsondata:languagesParam.masterData.headername == \"Query Builder Views Columns\"? languagesParam.languagesRow.jsondata:response[0].data.jsondata\n\n      };\n      delete selectedRecord.esigncomments;\n      delete selectedRecord.esignpassword;\n      delete selectedRecord.esignreason;\n      delete selectedRecord.agree;\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          selectedRecord,\n          operation: languagesParam.operation,\n          openModal: true,\n          screenName: languagesParam.screenName,\n          ncontrolcode: languagesParam.ncontrolCode,\n          loading: false,\n          selectedId: primaryKeyField,\n          data: undefined,\n          dataState: undefined\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function comboService(methodParam) {\n  return function (dispatch) {\n    let URL;\n    let needHeader;\n\n    if (methodParam.item.displayname == \"Menu\") {\n      URL = rsapi.post(\"language/getMenuComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nmenucode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Module\") {\n      URL = rsapi.post(\"language/getModuleComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nmodulecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Forms\") {\n      URL = rsapi.post(\"language/getFormComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nformcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Transaction Status\") {\n      URL = rsapi.post(\"language/getTransactionStatusComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ntranscode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Control Master\") {\n      URL = rsapi.post(\"language/getControlMasterComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ncontrolcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Approval Sub Type\") {\n      URL = rsapi.post(\"language/getApprovalSubTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"napprovalsubtypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Sample Type\") {\n      URL = rsapi.post(\"language/getSampleTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nsampletypecode\": methodParam.inputData.primarykey\n      });\n    } // else if (methodParam.item.displayname == \"Template Design\") {\n    //     URL = rsapi.post(\"language/getTemplateTypeComboService\", { \"userinfo\": methodParam.userinfo, \"ntemplatetypecode\": methodParam.inputData.primarykey })\n    // }\n    else if (methodParam.item.displayname == \"Period\") {\n      URL = rsapi.post(\"language/getPeriodComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nperiodcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Gender\") {\n      URL = rsapi.post(\"language/getGenderComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ngendercode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Grade\") {\n      URL = rsapi.post(\"language/getGradeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ngradecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Scheduler Type\") {\n      URL = rsapi.post(\"language/getSchedulerTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nschedulertypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Query Builder Tables\") {\n      URL = rsapi.post(\"language/getQueryBuilderTablesComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nquerybuildertablecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Query Builder Views\") {\n      URL = rsapi.post(\"language/getQueryBuilderViewsComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nquerybuilderviewscode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Query Builder Views Columns\" || methodParam.masterData.headername == \"Query Builder Views Columns\") {\n      URL = rsapi.post(\"language/getQueryBuilderViewsColumnsComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"sviewname\": methodParam.inputData.item.displayname ? methodParam.inputData.item.displayname : methodParam.inputData.sdisplayname\n      });\n    } else if (methodParam.item.displayname == \"Material Config\") {\n      URL = rsapi.post(\"language/getMaterialConfigComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nmaterialconfigcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Multilingual Masters\") {\n      URL = rsapi.post(\"language/getMultilingualMastersComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nmultilingualmasterscode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Material Type\") {\n      URL = rsapi.post(\"language/getMaterialTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nmaterialtypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Interface Type\") {\n      URL = rsapi.post(\"language/getInterfaceTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ninterfacetypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Audit Action Filter\") {\n      URL = rsapi.post(\"language/getAuditActionFilterComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nauditactionfiltercode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Attachment Type\") {\n      URL = rsapi.post(\"language/getAttachmenttypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nattachmenttypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"FTP Type\") {\n      URL = rsapi.post(\"language/getFTPtypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nftptypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Report Type\") {\n      URL = rsapi.post(\"language/getReportTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nreporttypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"COA Report Type\") {\n      URL = rsapi.post(\"language/getCOAReportTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ncoareporttypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"React Components\") {\n      URL = rsapi.post(\"language/getReactComponentsComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nreactcomponentcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Functions\") {\n      URL = rsapi.post(\"language/getFunctionsComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nfunctioncode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Dynamic Formula Fields\") {\n      URL = rsapi.post(\"language/getDynamicFormulaFieldsComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ndynamicformulafieldcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Chart Type\") {\n      URL = rsapi.post(\"language/getChartTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ncharttypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Design Components\") {\n      URL = rsapi.post(\"language/getDesignComponentsComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ndesigncomponentcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"CheckList Component\") {\n      URL = rsapi.post(\"language/getCheckListComponentService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nchecklistcomponentcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.item.displayname == \"Generic Label\") {\n      URL = rsapi.post(\"language/getGenericLabelService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ngenericlabelcode\": methodParam.inputData.primarykey\n      });\n    } // else if ((methodParam.item.displayname == \"Query Builder Views Columns\" || methodParam.masterData.headername == \"Query Builder Views Columns\")) {\n    //     URL = rsapi.post(\"language/getQueryBuilderViewsColumnsComboService\", { \"userinfo\": methodParam.userinfo, \"sviewname\": methodParam.inputData.sdisplayname })\n    // }\n    else if (methodParam.item.displayname === \"Query Builder Table Columns\" || methodParam.masterData.headername === \"Query Builder Table Columns\") {\n      URL = rsapi.post(\"language/getQueryBuilderTableColumnsService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nquerybuildertablecode\": methodParam.inputData.fieldName ? methodParam.inputData.fieldName === \"nquerybuildertablecode\" ? methodParam.inputData.primarykey : methodParam.inputData.selectedvalues[0].value : null,\n        \"tablecolumnname\": methodParam.inputData.fieldName ? methodParam.inputData.fieldName === \"nquerybuildertablecode\" ? null : methodParam.inputData.sdisplayname : null\n      });\n    } else if (methodParam.item.displayname == \"Dynamic Audit Table\" || methodParam.masterData.headername === \"Dynamic Audit Table\") {\n      URL = rsapi.post(\"language/getDynamicAuditTableService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ndynamicaudittablecode\": methodParam.inputData.fieldName ? methodParam.inputData.primarykey : null,\n        \"nformcode\": methodParam.inputData.fieldName ? methodParam.inputData.formPrimayKey : null\n      });\n    }\n\n    dispatch(initRequest(true));\n    Axios.all([URL]).then(response => {\n      let masterData;\n      const selectedRecord = { ...methodParam.sdisplayname,\n        nquerybuilderviewscode: undefined\n      };\n      masterData = { ...methodParam.inputData.item,\n        ...response[0].data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          selectedRecord,\n          masterData,\n          loading: false,\n          data: undefined,\n          dataState: undefined,\n          selectedId: null\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/LanguagesAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","sortData","fetchById","languagesParam","dispatch","primaryKeyField","findIndex","fieldName","selectedJsondata","jsondataKeys","URL","masterData","headername","post","languagesRow","sdisplayname","userInfo","nmenucode","nmodulecode","nformcode","ntranscode","Object","keys","jsondata","ncontrolcode","napprovalsubtypecode","nsampletypecode","nperiodcode","ngendercode","ngradecode","nschedulertypecode","nquerybuildertablecode","nquerybuilderviewscode","item","displayname","slanguagetypecode","sviewname","index","nmultilingualmasterscode","nmaterialtypecode","ninterfacetypecode","nauditactionfiltercode","nattachmenttypecode","nftptypecode","nreporttypecode","ncoareporttypecode","nreactcomponentcode","nfunctioncode","ndynamicformulafieldcode","ncharttypecode","ndesigncomponentcode","nchecklistcomponentcode","ngenericlabelcode","selectedQueryBuilderScolumnList","scolumnname","value","ndynamicaudittablecode","fieldname","JSON","parse","all","then","response","selectedRecord","data","sjsondata","esigncomments","esignpassword","esignreason","agree","type","payload","operation","openModal","screenName","ncontrolCode","loading","selectedId","undefined","dataState","catch","error","status","message","warn","comboService","methodParam","needHeader","userinfo","inputData","primarykey","selectedvalues","formPrimayKey"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios'\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData } from '../components/CommonScript';\r\n\r\nexport function fetchById(languagesParam) {\r\n    return function (dispatch) {\r\n        let primaryKeyField = 0;\r\n        let findIndex = 0;\r\n        let fieldName = \"\";\r\n        let selectedJsondata;\r\n        let jsondataKeys;\r\n        let URL;\r\n        if (languagesParam.masterData.headername == \"Menu\") {\r\n            URL = rsapi.post(\"language/getActiveMenuByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nmenucode\": languagesParam.languagesRow.nmenucode })\r\n            primaryKeyField = languagesParam.languagesRow.nmenucode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Module\") {\r\n            URL = rsapi.post(\"language/getActiveModuleByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nmodulecode\": languagesParam.languagesRow.nmodulecode })\r\n            primaryKeyField = languagesParam.languagesRow.nmodulecode\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Forms\") {\r\n            URL = rsapi.post(\"language/getActiveFormByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nformcode\": languagesParam.languagesRow.nformcode })\r\n            primaryKeyField = languagesParam.languagesRow.nformcode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Transaction Status\") {\r\n            URL = rsapi.post(\"language/getActiveTransactionStatusByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ntranscode\": languagesParam.languagesRow.ntranscode })\r\n            primaryKeyField = languagesParam.languagesRow.ntranscode;\r\n            jsondataKeys = Object.keys(languagesParam.languagesRow.jsondata)\r\n            fieldName = jsondataKeys;\r\n        } else if (languagesParam.masterData.headername == \"Control Master\") {\r\n            URL = rsapi.post(\"language/getActiveControlMasterByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ncontrolcode\": languagesParam.languagesRow.ncontrolcode })\r\n            primaryKeyField = languagesParam.languagesRow.ncontrolcode;\r\n            fieldName = \"scontrolids\";\r\n        } else if (languagesParam.masterData.headername == \"Approval Sub Type\") {\r\n            URL = rsapi.post(\"language/getActiveApprovalSubTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"napprovalsubtypecode\": languagesParam.languagesRow.napprovalsubtypecode })\r\n            primaryKeyField = languagesParam.languagesRow.napprovalsubtypecode;\r\n            fieldName = \"approvalsubtypename\";\r\n        } else if (languagesParam.masterData.headername == \"Sample Type\") {\r\n            URL = rsapi.post(\"language/getActiveSampleTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nsampletypecode\": languagesParam.languagesRow.nsampletypecode })\r\n            primaryKeyField = languagesParam.languagesRow.nsampletypecode;\r\n            fieldName = \"sampletypename\";\r\n        }\r\n        // else if (languagesParam.masterData.headername == \"Template Design\") {\r\n        //     URL = rsapi.post(\"language/getActiveTemplateTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ntemplatetypecode\": languagesParam.languagesRow.ntemplatetypecode })\r\n        //     primaryKeyField = languagesParam.languagesRow.ntemplatetypecode;\r\n        //     fieldName = \"stemplatetypename\";\r\n        // } \r\n        else if (languagesParam.masterData.headername == \"Period\") {\r\n            URL = rsapi.post(\"language/getActivePeriodByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nperiodcode\": languagesParam.languagesRow.nperiodcode })\r\n            primaryKeyField = languagesParam.languagesRow.nperiodcode;\r\n            fieldName = \"speriodname\";\r\n        } else if (languagesParam.masterData.headername == \"Gender\") {\r\n            URL = rsapi.post(\"language/getActiveGenderByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ngendercode\": languagesParam.languagesRow.ngendercode })\r\n            primaryKeyField = languagesParam.languagesRow.ngendercode;\r\n            fieldName = \"sgendername\";\r\n        } else if (languagesParam.masterData.headername == \"Grade\") {\r\n            URL = rsapi.post(\"language/getActiveGradeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ngradecode\": languagesParam.languagesRow.ngradecode })\r\n            primaryKeyField = languagesParam.languagesRow.ngradecode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Scheduler Type\") {\r\n            URL = rsapi.post(\"language/getActiveSchedulerTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nschedulertypecode\": languagesParam.languagesRow.nschedulertypecode })\r\n            primaryKeyField = languagesParam.languagesRow.nschedulertypecode;\r\n            fieldName = \"sschedulertypename\";\r\n        } else if (languagesParam.masterData.headername == \"Query Builder Tables\") {\r\n            URL = rsapi.post(\"language/getActiveQueryBuilderTablesByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nquerybuildertablecode\": languagesParam.languagesRow.nquerybuildertablecode })\r\n            primaryKeyField = languagesParam.languagesRow.nquerybuildertablecode;\r\n            fieldName = \"tablename\";\r\n        } else if (languagesParam.masterData.headername == \"Query Builder Views\") {\r\n            URL = rsapi.post(\"language/getActiveQueryBuilderViewsByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nquerybuilderviewscode\": languagesParam.languagesRow.nquerybuilderviewscode })\r\n            primaryKeyField = languagesParam.languagesRow.nquerybuilderviewscode;\r\n            fieldName = \"displayname\";\r\n        } else if (languagesParam.masterData.headername == \"Query Builder Views Columns\") {\r\n            URL = rsapi.post(\"language/getActiveQueryBuilderViewsColumnsByID\", { \"languagesParam\": languagesParam.languagesRow.jsondata[languagesParam.languagesRow.keys].findIndex((item) => (item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\")), \"userinfo\": languagesParam.userInfo, \"sviewname\": languagesParam.languagesRow.sviewname, \"keysvalue\": languagesParam.languagesRow.keys })\r\n            // primaryKeyField = languagesParam.languagesRow.jsondata[languagesParam.languagesRow.keys].findIndex((item) => (item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\"));\r\n            findIndex = languagesParam.languagesRow.jsondata[languagesParam.languagesRow.keys].findIndex((item) => (item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\"));\r\n            primaryKeyField = languagesParam.languagesRow.index;\r\n            fieldName = \"displayname\";\r\n        } else if (languagesParam.masterData.headername == \"Multilingual Masters\") {\r\n            URL = rsapi.post(\"language/getActiveMultilingualMastersByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nmultilingualmasterscode\": languagesParam.languagesRow.nmultilingualmasterscode })\r\n            primaryKeyField = languagesParam.languagesRow.nmultilingualmasterscode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Material Type\") {\r\n            URL = rsapi.post(\"language/getActiveMaterialTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nmaterialtypecode\": languagesParam.languagesRow.nmaterialtypecode })\r\n            primaryKeyField = languagesParam.languagesRow.nmaterialtypecode;\r\n            fieldName = \"smaterialtypename\";\r\n        } else if (languagesParam.masterData.headername == \"Interface Type\") {\r\n            URL = rsapi.post(\"language/getActiveInterfaceTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ninterfacetypecode\": languagesParam.languagesRow.ninterfacetypecode })\r\n            primaryKeyField = languagesParam.languagesRow.ninterfacetypecode;\r\n            fieldName = \"sinterfacetypename\";\r\n        } else if (languagesParam.masterData.headername == \"Audit Action Filter\") {\r\n            URL = rsapi.post(\"language/getActiveAuditActionFilterByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nauditactionfiltercode\": languagesParam.languagesRow.nauditactionfiltercode })\r\n            primaryKeyField = languagesParam.languagesRow.nauditactionfiltercode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Attachment Type\") {\r\n            URL = rsapi.post(\"language/getActiveAttachmentTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nattachmenttypecode\": languagesParam.languagesRow.nattachmenttypecode })\r\n            primaryKeyField = languagesParam.languagesRow.nattachmenttypecode;\r\n            fieldName = \"sattachmenttype\";\r\n        } else if (languagesParam.masterData.headername == \"FTP Type\") {\r\n            URL = rsapi.post(\"language/getActiveFTPTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nftptypecode\": languagesParam.languagesRow.nftptypecode })\r\n            primaryKeyField = languagesParam.languagesRow.nftptypecode;\r\n            fieldName = \"sftptypename\";\r\n        } else if (languagesParam.masterData.headername == \"Report Type\") {\r\n            URL = rsapi.post(\"language/getActiveReportTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nreporttypecode\": languagesParam.languagesRow.nreporttypecode })\r\n            primaryKeyField = languagesParam.languagesRow.nreporttypecode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"COAReport Type\") {\r\n            URL = rsapi.post(\"language/getActiveCOAReportTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ncoareporttypecode\": languagesParam.languagesRow.ncoareporttypecode })\r\n            primaryKeyField = languagesParam.languagesRow.ncoareporttypecode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"React Components\") {\r\n            URL = rsapi.post(\"language/getActiveReactComponentByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nreactcomponentcode\": languagesParam.languagesRow.nreactcomponentcode })\r\n            primaryKeyField = languagesParam.languagesRow.nreactcomponentcode;\r\n            fieldName = \"componentname\";\r\n        } else if (languagesParam.masterData.headername == \"Functions\") {\r\n            URL = rsapi.post(\"language/getActiveFunctionsByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nfunctioncode\": languagesParam.languagesRow.nfunctioncode })\r\n            primaryKeyField = languagesParam.languagesRow.nfunctioncode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Dynamic Formula Fields\") {\r\n            URL = rsapi.post(\"language/getActiveDynamicFormulaFieldByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ndynamicformulafieldcode\": languagesParam.languagesRow.ndynamicformulafieldcode })\r\n            primaryKeyField = languagesParam.languagesRow.ndynamicformulafieldcode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Chart Type\") {\r\n            URL = rsapi.post(\"language/getActiveChartTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ncharttypecode\": languagesParam.languagesRow.ncharttypecode })\r\n            primaryKeyField = languagesParam.languagesRow.ncharttypecode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Design Components\") {\r\n            URL = rsapi.post(\"language/getActiveDesignComponentByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ndesigncomponentcode\": languagesParam.languagesRow.ndesigncomponentcode })\r\n            primaryKeyField = languagesParam.languagesRow.ndesigncomponentcode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"CheckList Component\") {\r\n            URL = rsapi.post(\"language/getActiveCheckListComponentByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nchecklistcomponentcode\": languagesParam.languagesRow.nchecklistcomponentcode })\r\n            primaryKeyField = languagesParam.languagesRow.nchecklistcomponentcode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Generic Label\") {\r\n            URL = rsapi.post(\"language/getActiveGenericLabelByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ngenericlabelcode\": languagesParam.languagesRow.ngenericlabelcode })\r\n            primaryKeyField = languagesParam.languagesRow.ngenericlabelcode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Query Builder Table Columns\") {\r\n            URL = rsapi.post(\"language/getActiveQueryBuilderTableColumnsByID\", { \"languagesParam\": languagesParam.languagesRow[languagesParam.masterData.selectedQueryBuilderScolumnList[0].scolumnname] && languagesParam.languagesRow[languagesParam.masterData.selectedQueryBuilderScolumnList[0].scolumnname].value, \"userinfo\": languagesParam.userInfo, \"nquerybuildertablecode\": languagesParam.languagesRow.nquerybuildertablecode, \"tablecolumnname\": languagesParam.masterData.selectedQueryBuilderScolumnList[0].scolumnname, \"sdisplayname\": languagesParam.languagesRow.sdisplayname, \"scolumnname\": languagesParam.languagesRow.scolumnname.value })\r\n            primaryKeyField = languagesParam.languagesRow.index;\r\n            fieldName = \"displayname\";\r\n        } else if (languagesParam.masterData.headername == \"Dynamic Audit Table\") {\r\n            URL = rsapi.post(\"language/getActiveDynamicAuditTableByID\", {\r\n                \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ndynamicaudittablecode\": languagesParam.languagesRow.ndynamicaudittablecode,\r\n                \"subsampleenabledisable\": languagesParam.languagesRow.fieldname, \"keyname\": Object.keys(JSON.parse(languagesParam.languagesRow.jsondata.value))[0], \"conditioncheck\": languagesParam.languagesRow.jsondata.value\r\n            })\r\n            primaryKeyField = languagesParam.languagesRow.index;\r\n            fieldName = Object.keys(JSON.parse(languagesParam.languagesRow.jsondata.value))[0];\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL])\r\n            .then(response => {\r\n\r\n                const selectedRecord = {\r\n                    ...languagesParam.selectedRecord,\r\n                    ...response[0].data.sjsondata,\r\n                    ...response[0].data,\r\n                    ...response[0].data.jsondata, fieldName,\r\n                    selectedJsondata,\r\n                    findIndex, keys: languagesParam.languagesRow.keys,\r\n                    //jsondata:languagesParam.masterData.headername == \"Query Builder Views Columns\"? languagesParam.languagesRow.jsondata:response[0].data.jsondata\r\n                }\r\n                delete (selectedRecord.esigncomments);\r\n                delete (selectedRecord.esignpassword);\r\n                delete (selectedRecord.esignreason);\r\n                delete (selectedRecord.agree);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        selectedRecord,\r\n                        operation: languagesParam.operation,\r\n                        openModal: true,\r\n                        screenName: languagesParam.screenName,\r\n                        ncontrolcode: languagesParam.ncontrolCode,\r\n                        loading: false, selectedId: primaryKeyField,\r\n                        data: undefined, dataState: undefined,\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function comboService(methodParam) {\r\n    return function (dispatch) {\r\n        let URL;\r\n        let needHeader;\r\n        if (methodParam.item.displayname == \"Menu\") {\r\n            URL = rsapi.post(\"language/getMenuComboService\", { \"userinfo\": methodParam.userinfo, \"nmenucode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Module\") {\r\n            URL = rsapi.post(\"language/getModuleComboService\", { \"userinfo\": methodParam.userinfo, \"nmodulecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Forms\") {\r\n            URL = rsapi.post(\"language/getFormComboService\", { \"userinfo\": methodParam.userinfo, \"nformcode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Transaction Status\") {\r\n            URL = rsapi.post(\"language/getTransactionStatusComboService\", { \"userinfo\": methodParam.userinfo, \"ntranscode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Control Master\") {\r\n            URL = rsapi.post(\"language/getControlMasterComboService\", { \"userinfo\": methodParam.userinfo, \"ncontrolcode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Approval Sub Type\") {\r\n            URL = rsapi.post(\"language/getApprovalSubTypeComboService\", { \"userinfo\": methodParam.userinfo, \"napprovalsubtypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Sample Type\") {\r\n            URL = rsapi.post(\"language/getSampleTypeComboService\", { \"userinfo\": methodParam.userinfo, \"nsampletypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        // else if (methodParam.item.displayname == \"Template Design\") {\r\n        //     URL = rsapi.post(\"language/getTemplateTypeComboService\", { \"userinfo\": methodParam.userinfo, \"ntemplatetypecode\": methodParam.inputData.primarykey })\r\n        // }\r\n        else if (methodParam.item.displayname == \"Period\") {\r\n            URL = rsapi.post(\"language/getPeriodComboService\", { \"userinfo\": methodParam.userinfo, \"nperiodcode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Gender\") {\r\n            URL = rsapi.post(\"language/getGenderComboService\", { \"userinfo\": methodParam.userinfo, \"ngendercode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Grade\") {\r\n            URL = rsapi.post(\"language/getGradeComboService\", { \"userinfo\": methodParam.userinfo, \"ngradecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Scheduler Type\") {\r\n            URL = rsapi.post(\"language/getSchedulerTypeComboService\", { \"userinfo\": methodParam.userinfo, \"nschedulertypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Query Builder Tables\") {\r\n            URL = rsapi.post(\"language/getQueryBuilderTablesComboService\", { \"userinfo\": methodParam.userinfo, \"nquerybuildertablecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Query Builder Views\") {\r\n            URL = rsapi.post(\"language/getQueryBuilderViewsComboService\", { \"userinfo\": methodParam.userinfo, \"nquerybuilderviewscode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if ((methodParam.item.displayname == \"Query Builder Views Columns\" || methodParam.masterData.headername == \"Query Builder Views Columns\")) {\r\n            URL = rsapi.post(\"language/getQueryBuilderViewsColumnsComboService\", { \"userinfo\": methodParam.userinfo, \"sviewname\": methodParam.inputData.item.displayname ? methodParam.inputData.item.displayname : methodParam.inputData.sdisplayname })\r\n        }\r\n        else if (methodParam.item.displayname == \"Material Config\") {\r\n            URL = rsapi.post(\"language/getMaterialConfigComboService\", { \"userinfo\": methodParam.userinfo, \"nmaterialconfigcode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Multilingual Masters\") {\r\n            URL = rsapi.post(\"language/getMultilingualMastersComboService\", { \"userinfo\": methodParam.userinfo, \"nmultilingualmasterscode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Material Type\") {\r\n            URL = rsapi.post(\"language/getMaterialTypeComboService\", { \"userinfo\": methodParam.userinfo, \"nmaterialtypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Interface Type\") {\r\n            URL = rsapi.post(\"language/getInterfaceTypeComboService\", { \"userinfo\": methodParam.userinfo, \"ninterfacetypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Audit Action Filter\") {\r\n            URL = rsapi.post(\"language/getAuditActionFilterComboService\", { \"userinfo\": methodParam.userinfo, \"nauditactionfiltercode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Attachment Type\") {\r\n            URL = rsapi.post(\"language/getAttachmenttypeComboService\", { \"userinfo\": methodParam.userinfo, \"nattachmenttypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"FTP Type\") {\r\n            URL = rsapi.post(\"language/getFTPtypeComboService\", { \"userinfo\": methodParam.userinfo, \"nftptypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Report Type\") {\r\n            URL = rsapi.post(\"language/getReportTypeComboService\", { \"userinfo\": methodParam.userinfo, \"nreporttypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"COA Report Type\") {\r\n            URL = rsapi.post(\"language/getCOAReportTypeComboService\", { \"userinfo\": methodParam.userinfo, \"ncoareporttypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"React Components\") {\r\n            URL = rsapi.post(\"language/getReactComponentsComboService\", { \"userinfo\": methodParam.userinfo, \"nreactcomponentcode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Functions\") {\r\n            URL = rsapi.post(\"language/getFunctionsComboService\", { \"userinfo\": methodParam.userinfo, \"nfunctioncode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Dynamic Formula Fields\") {\r\n            URL = rsapi.post(\"language/getDynamicFormulaFieldsComboService\", { \"userinfo\": methodParam.userinfo, \"ndynamicformulafieldcode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Chart Type\") {\r\n            URL = rsapi.post(\"language/getChartTypeComboService\", { \"userinfo\": methodParam.userinfo, \"ncharttypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Design Components\") {\r\n            URL = rsapi.post(\"language/getDesignComponentsComboService\", { \"userinfo\": methodParam.userinfo, \"ndesigncomponentcode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"CheckList Component\") {\r\n            URL = rsapi.post(\"language/getCheckListComponentService\", { \"userinfo\": methodParam.userinfo, \"nchecklistcomponentcode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.item.displayname == \"Generic Label\") {\r\n            URL = rsapi.post(\"language/getGenericLabelService\", { \"userinfo\": methodParam.userinfo, \"ngenericlabelcode\": methodParam.inputData.primarykey })\r\n        }\r\n        // else if ((methodParam.item.displayname == \"Query Builder Views Columns\" || methodParam.masterData.headername == \"Query Builder Views Columns\")) {\r\n        //     URL = rsapi.post(\"language/getQueryBuilderViewsColumnsComboService\", { \"userinfo\": methodParam.userinfo, \"sviewname\": methodParam.inputData.sdisplayname })\r\n        // }\r\n        else if ((methodParam.item.displayname === \"Query Builder Table Columns\" || methodParam.masterData.headername === \"Query Builder Table Columns\")) {\r\n            URL = rsapi.post(\"language/getQueryBuilderTableColumnsService\", {\r\n                \"userinfo\": methodParam.userinfo,\r\n                \"nquerybuildertablecode\": methodParam.inputData.fieldName ? methodParam.inputData.fieldName === \"nquerybuildertablecode\" ? methodParam.inputData.primarykey : methodParam.inputData.selectedvalues[0].value : null,\r\n                \"tablecolumnname\": methodParam.inputData.fieldName ? methodParam.inputData.fieldName === \"nquerybuildertablecode\" ? null : methodParam.inputData.sdisplayname : null\r\n            })\r\n        }\r\n        else if (methodParam.item.displayname == \"Dynamic Audit Table\" || methodParam.masterData.headername === \"Dynamic Audit Table\") {\r\n            URL = rsapi.post(\"language/getDynamicAuditTableService\", {\r\n                \"userinfo\": methodParam.userinfo,\r\n                \"ndynamicaudittablecode\": methodParam.inputData.fieldName ? methodParam.inputData.primarykey : null,\r\n                \"nformcode\": methodParam.inputData.fieldName ? methodParam.inputData.formPrimayKey : null\r\n            })\r\n        }\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL])\r\n            .then(response => {\r\n                let masterData;\r\n                const selectedRecord = { ...methodParam.sdisplayname, nquerybuilderviewscode: undefined };\r\n                masterData = {\r\n                    ...methodParam.inputData.item,\r\n                    ...response[0].data\r\n                };\r\n                sortData(masterData)\r\n                dispatch({ type: DEFAULT_RETURN, payload: { selectedRecord, masterData, loading: false, data: undefined, dataState: undefined, selectedId: null } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}