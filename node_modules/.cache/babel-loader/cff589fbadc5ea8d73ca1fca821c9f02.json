{"ast":null,"code":"import*as React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import'@progress/kendo-react-animation';import FormInput from'../../components/form-input/form-input.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';var AddSample=function AddSample(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_SAMPLE\"}),name:\"ssamplearno\",type:\"text\",onChange:function onChange(event){return props.onInputChange(event);},onKeyUp:function onKeyUp(event){return props.onKeyUp(event);},placeholder:props.intl.formatMessage({id:\"IDS_SAMPLE\"}),value:props.selectedRecord?props.selectedRecord[\"ssamplearno\"]:\"\",isMandatory:true,required:true,maxLength:\"50\"}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"nsampleqty\",label:props.intl.formatMessage({id:\"IDS_SAMPLEQTY\"}),type:\"number\",value:props.selectedRecord[\"nsampleqty\"],placeholder:props.intl.formatMessage({id:\"IDS_SAMPLEQTY\"}),strict:true,min:0,maxLength:11,onChange:function onChange(value){return props.onNumericInputChange(value,\"nsampleqty\");},noStyle:true,precision:2,className:\"form-control\",errors:\"Please provide a valid number.\"})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nunitcode\",formLabel:props.intl.formatMessage({id:\"IDS_UNIT\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.unitMaster,value:props.selectedRecord[\"nunitcode\"],isMandatory:false,isClearable:false,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,'nunitcode',0);}}))));};export default injectIntl(AddSample);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/basemaster/AddSample.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormNumericInput","FormSelectSearch","AddSample","props","intl","formatMessage","id","event","onInputChange","onKeyUp","selectedRecord","value","onNumericInputChange","unitMaster","onComboChange"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\n\r\nconst AddSample = (props) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={12}>\r\n          <FormInput\r\n            label={props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n            name={\"ssamplearno\"}\r\n            type=\"text\"\r\n            onChange={(event) => props.onInputChange(event)}\r\n            onKeyUp={(event) => props.onKeyUp(event)}\r\n            placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n            value={props.selectedRecord ? props.selectedRecord[\"ssamplearno\"] : \"\"}\r\n            isMandatory={true}\r\n            required={true}\r\n            maxLength={\"50\"}\r\n          />\r\n        </Col>\r\n\r\n      </Row>\r\n      <Row>\r\n        <Col md={6}>\r\n          <FormNumericInput\r\n            name={\"nsampleqty\"}\r\n            label={props.intl.formatMessage({ id: \"IDS_SAMPLEQTY\" })}\r\n            type=\"number\"\r\n            value={props.selectedRecord[\"nsampleqty\"]}\r\n            placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLEQTY\" })}\r\n            strict={true}\r\n            min={0}          \r\n            maxLength={11}\r\n            onChange={(value) => props.onNumericInputChange(value, \"nsampleqty\")}\r\n            noStyle={true}\r\n            precision={2}           \r\n            className=\"form-control\"\r\n            errors=\"Please provide a valid number.\"\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          <FormSelectSearch\r\n            name={\"nunitcode\"}\r\n            formLabel={props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n            options={props.unitMaster}\r\n            value={props.selectedRecord[\"nunitcode\"]}\r\n            isMandatory={false}\r\n            isClearable={false}\r\n            isMulti={false}\r\n            isSearchable={true}\r\n            isDisabled={false}\r\n            closeMenuOnSelect={true}\r\n            onChange={(event) => props.onComboChange(event, 'nunitcode', 0)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>)\r\n}\r\nexport default injectIntl(AddSample);\r\n"]},"metadata":{},"sourceType":"module"}