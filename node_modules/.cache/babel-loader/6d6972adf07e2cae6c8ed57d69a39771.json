{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{toast}from'react-toastify';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,Nav,FormGroup,FormLabel}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt,faPlus}from'@fortawesome/free-solid-svg-icons';import DataGrid from'../../../components/data-grid/data-grid.component';import{callService,crudMaster,validateEsignCredential,updateStore,filterColumnData,getTechniqueDetail,getEditTechniqueService,getAddTestService}from'../../../actions';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import{showEsign,getControlMap}from'../../../components/CommonScript';import{process}from'@progress/kendo-data-query';import{transactionStatus}from'../../../components/Enumeration';import ListMaster from'../../../components/list-master/list-master.component';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import{ReadOnlyText,ContentPanel}from'../../../components/App.styles';import AddType1Component from'../../../components/type1component/AddType1Component';import Esign from'../../audittrail/Esign';import ConfirmMessage from'../../../components/confirm-alert/confirm-message.component';import AddTechniqueTest from'./AddTechniqueTest';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var Technique=/*#__PURE__*/function(_React$Component){_inherits(Technique,_React$Component);var _super=_createSuper(Technique);function Technique(props){var _this;_classCallCheck(this,Technique);_this=_super.call(this,props);_this.confirmDelete=function(deleteId){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteTechnique(\"Technique\",_this.props.Login.masterData.SelectedTechnique,\"delete\",deleteId);});};_this.deleteTechnique=function(methodUrl,SelectedTechnique,operation,ncontrolCode){var postParam={inputListName:\"Technique\",selectedObject:\"SelectedTechnique\",primaryKeyField:\"ntechniquecode\",primaryKeyValue:SelectedTechnique.ntechniquecode,fetchUrl:\"technique/getTechnique\",fecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:methodUrl,postParam:postParam,inputData:{\"userinfo\":_this.props.Login.userInfo,\"technique\":SelectedTechnique},operation:operation,isClearSearch:_this.props.Login.isClearSearch};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_TECHNIQUE\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.deleteTechniqueTest=function(deleteParam){var postParam={inputListName:\"techniquetest\",selectedObject:\"TechniqueTest\",primaryKeyField:\"ntestcode\",primaryKeyValue:deleteParam.selectedRecord.ntestcode,fetchUrl:\"technique/getTechniqueTest\",fecthInputObject:{ntechniquecode:_this.props.Login.masterData.SelectedTechnique.ntechniquecode,userinfo:_this.props.Login.userInfo},masterData:_this.props.Login.masterData};var inputParam={classUrl:\"technique\",methodUrl:\"TechniqueTest\",inputData:{\"techniquetest\":deleteParam.selectedRecord,//.dataItem,\n\"ntechniquecode\":_this.props.Login.masterData.SelectedTechnique.ntechniquecode,\"userinfo\":_this.props.Login.userInfo},operation:\"delete\",postParam:postParam,testDataState:_this.state.testDataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:\"IDS_TEST\"}),operation:deleteParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.onSaveTechniqueTest=function(saveType,formRef){var techniqueTestData={\"userinfo\":_this.props.Login.userInfo,\"technique\":_this.props.Login.masterData.SelectedTechnique,\"ntechniquecode\":_this.props.Login.masterData.SelectedTechnique.ntechniquecode};var postParam=undefined;var techniquetestDataState=undefined;var selectedId=null;if(_this.props.Login.operation===\"update\"){}else{//add                                                 \nvar techniquetestList=[];_this.state.selectedRecord[\"ntestcode\"]&&_this.state.selectedRecord[\"ntestcode\"].map(function(item){return techniquetestList.push({ntestcode:item.value});});techniqueTestData[\"techniquetestlist\"]=techniquetestList;}if(techniqueTestData[\"technique\"].hasOwnProperty('esignpassword')){if(techniqueTestData[\"technique\"]['esignpassword']===''){delete techniqueTestData[\"technique\"]['esigncomments'];delete techniqueTestData[\"technique\"]['esignpassword'];delete techniqueTestData[\"technique\"]['esignreason'];delete techniqueTestData[\"technique\"][\"agree\"];}}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"TechniqueTest\",inputData:techniqueTestData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef,isClearSearch:_this.props.Login.isClearSearch,selectedId:selectedId,techniquetestDataState:techniquetestDataState};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openChildModal\");}};_this.onSaveClick=function(saveType,formRef){var techniqueData=[];techniqueData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;if(_this.props.Login.operation===\"update\"){// edit\n//postParam = { inputListName: \"Technique\", selectedObject: \"SelectedTechnique\", primaryKeyField: \"ntechniquecode\" };\npostParam={inputListName:\"Technique\",selectedObject:\"SelectedTechnique\",primaryKeyField:\"ntechniquecode\",primaryKeyValue:_this.props.Login.selectedRecord.ntechniquecode,fetchUrl:\"technique/getActiveTechniqueById\",fecthInputObject:{userinfo:_this.props.Login.userInfo},masterData:_this.props.Login.masterData};techniqueData[\"technique\"]=JSON.parse(JSON.stringify(_this.props.Login.selectedRecord));techniqueData[\"stechniquename\"]=_this.state.selectedRecord[\"stechniquename\"]||\"\";techniqueData[\"sdescription\"]=_this.state.selectedRecord[\"sdescription\"]||\"\";}else{//add               \ntechniqueData[\"technique\"]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode,\"stechniquename\":_this.state.selectedRecord[\"stechniquename\"]||\"\",\"sdescription\":_this.state.selectedRecord[\"sdescription\"]||\"\"};}if(techniqueData[\"technique\"].hasOwnProperty('esignpassword')){if(techniqueData[\"technique\"]['esignpassword']===''){delete techniqueData[\"technique\"]['esigncomments'];delete techniqueData[\"technique\"]['esignpassword'];delete techniqueData[\"technique\"]['esignreason'];}}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"Technique\",inputData:techniqueData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef,isClearSearch:_this.props.Login.isClearSearch};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.openModal=function(inputParam){var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:{},operation:inputParam.operation,ncontrolCode:inputParam.ncontrolcode,selectedId:null,openModal:true,screenName:_this.props.intl.formatMessage({id:'IDS_TECHNIQUE'})}};_this.props.updateStore(updateInfo);};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),priceDataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var openChildModal=_this.props.Login.openChildModal;var selectedRecord=_this.props.Login.selectedRecord;var selectedId=_this.state.selectedId;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";if(_this.props.Login.screenName===\"IDS_TEST\"){openChildModal=false;}}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}}else{openModal=false;selectedRecord={};selectedId=null;openChildModal=false;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,openChildModal:openChildModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:selectedId}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});};_this.onNumericInputOnChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event,primaryFieldKey){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"ntransactionstatus\")selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;else selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.reloadData=function(){_this.searchRef.current.value=\"\";var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"technique\",methodUrl:\"Technique\",displayName:\"IDS_TECHNIQUE\",userInfo:_this.props.Login.userInfo,isClearSearch:_this.props.Login.isClearSearch};_this.props.callService(inputParam);};var testDataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={masterStatus:\"\",error:\"\",selectedRecord:{},operation:\"\",SelectedTechnique:undefined,screenName:undefined,userRoleControlRights:[],controlMap:new Map(),isClearSearch:false,data:[],dataResult:[],testDataState:testDataState};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();_this.techniqueFieldList=[{\"idsName\":\"IDS_TECHNIQUE\",\"dataField\":\"stechniquename\",\"width\":\"200px\",\"fieldLength\":\"100\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"200px\",\"fieldLength\":\"255\",\"mandatory\":false,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textarea\"}];_this.extractedColumnList=[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestname\",\"width\":\"200px\"}];_this.mandatoryFields=[{\"idsName\":\"IDS_TECHNIQUE\",\"dataField\":\"stechniquename\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];_this.mandatoryTestFields=[{\"idsName\":\"IDS_TEST\",\"dataField\":\"ntestcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];_this.searchFieldList=[\"stechniquename\",\"sdescription\"];return _this;}_createClass(Technique,[{key:\"render\",value:function render(){var _this2=this;// let versionStatusCSS = \"outline-secondary\";\n// let activeIconCSS = \"fa fa-check\"\n// if (this.props.Login.masterData.SelectedTestPriceVersion && this.props.Login.masterData.SelectedTestPriceVersion.ntransactionstatus === transactionStatus.APPROVED) {\n//     versionStatusCSS = \"outline-success\";\n// }\n// else if (this.props.Login.masterData.SelectedTestPriceVersion && this.props.Login.masterData.SelectedTestPriceVersion.ntransactionstatus === transactionStatus.RETIRED) {\n//     versionStatusCSS = \"outline-danger\";\n//     activeIconCSS = \"\";\n// }\n// else if (this.props.Login.masterData.SelectedTestPriceVersion && this.props.Login.masterData.SelectedTestPriceVersion.ntransactionstatus === transactionStatus.DRAFT) {\n//     activeIconCSS = \"\";\n// }\nvar addId=this.state.controlMap.has(\"AddTechnique\")&&this.state.controlMap.get(\"AddTechnique\").ncontrolcode;var editId=this.state.controlMap.has(\"EditTechnique\")&&this.state.controlMap.get(\"EditTechnique\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteTechnique\")&&this.state.controlMap.get(\"DeleteTechnique\").ncontrolcode;var addTechniqueTestId=this.state.controlMap.has(\"AddTechniqueTest\")&&this.state.controlMap.get(\"AddTechniqueTest\").ncontrolcode;var filterParam={inputListName:\"Technique\",selectedObject:\"SelectedTechnique\",primaryKeyField:\"ntechniquecode\",fetchUrl:\"technique/getTechnique\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};var addParam={screenName:\"IDS_TECHNIQUE\",operation:\"create\",primaryKeyName:\"ntechniquecode\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolcode:addId};var editParam={screenName:\"IDS_TECHNIQUE\",operation:\"update\",primaryKeyName:\"ntechniquecode\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolcode:editId,inputListName:\"Technique\",selectedObject:\"SelectedTechnique\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMaster,{screenName:this.props.intl.formatMessage({id:\"IDS_TECHNIQUE\"}),masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.Technique,getMasterDetail:function getMasterDetail(technique){return _this2.props.getTechniqueDetail(technique,_this2.props.Login.userInfo,_this2.props.Login.masterData);},selectedMaster:this.props.Login.masterData.SelectedTechnique,primaryKeyField:\"ntechniquecode\",mainField:\"stechniquename\",firstField:\"\",secondField:\"\",filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,openModal:function openModal(){return _this2.openModal(addParam);},isMultiSelecct:false,hidePaging:false,isClearSearch:this.props.Login.isClearSearch})),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.Technique&&this.props.Login.masterData.Technique.length>0&&this.props.Login.masterData.SelectedTechnique?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedTechnique.stechniquename),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"editTechnique\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),onClick:function onClick(){return _this2.props.getEditTechniqueService(editParam);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteTechnique\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this2.confirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})))))),/*#__PURE__*/React.createElement(Card.Body,{className:\"form-static-wrap\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_DESCRIPTION\",message:\"Description\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedTechnique.sdescription)))),/*#__PURE__*/React.createElement(Card,{className:\"at-tabs border-0\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addTechniqueTest\",className:\"add-txt-btn\",hidden:this.state.userRoleControlRights.indexOf(addTechniqueTestId)===-1,onClick:function onClick(){return _this2.props.getAddTestService(\"IDS_TEST\",\"create\",_this2.props.Login.masterData,_this2.props.Login.userInfo,addTechniqueTestId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TESTS\",defaultMessage:\"TestS\"}))))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"ntechniquetestcode\",data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.testDataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,deleteRecord:this.deleteTechniqueTest,deleteParam:{operation:\"delete\"},methodUrl:\"TechniqueTest\",addRecord:function addRecord(){return _this2.openModal(addId);},pageable:true,scrollable:'scrollable',isActionRequired:true,isToolBarRequired:false,selectedId:this.props.Login.selectedId})))))):\"\"))))),this.props.Login.openModal||this.props.Login.openChildModal?/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.screenName===\"IDS_TEST\"?this.props.Login.openChildModal:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.props.Login.screenName===\"IDS_TEST\"?this.onSaveTechniqueTest:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.screenName===\"IDS_TEST\"?this.props.Login.operation===\"update\"?[]:this.mandatoryTestFields:this.mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.openChildModal&&this.props.Login.screenName===\"IDS_TEST\"?/*#__PURE__*/React.createElement(AddTechniqueTest,{selectedRecord:this.state.selectedRecord||{},onComboChange:this.onComboChange,techniqueTestList:this.props.Login.techniqueTestList||[]}):/*#__PURE__*/React.createElement(AddType1Component,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,extractedColumnList:this.techniqueFieldList})}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData.Test,dataResult:process(this.props.Login.masterData.TechniqueTest||[],this.state.testDataState)});}else{var testDataState=this.state.testDataState;if(this.props.Login.testDataState===undefined){testDataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData.TechniqueTest,selectedRecord:this.props.Login.selectedRecord,dataResult:process(this.props.Login.masterData.TechniqueTest||[],testDataState),testDataState:testDataState});}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;}}]);return Technique;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,getTechniqueDetail:getTechniqueDetail,getEditTechniqueService:getEditTechniqueService,getAddTestService:getAddTestService,updateStore:updateStore,filterColumnData:filterColumnData})(injectIntl(Technique));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/competencemanagement/Technique/Technique.jsx"],"names":["React","connect","toast","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","faPlus","DataGrid","callService","crudMaster","validateEsignCredential","updateStore","filterColumnData","getTechniqueDetail","getEditTechniqueService","getAddTestService","DEFAULT_RETURN","showEsign","getControlMap","process","transactionStatus","ListMaster","SlideOutModal","ReadOnlyText","ContentPanel","AddType1Component","Esign","ConfirmMessage","AddTechniqueTest","mapStateToProps","state","Login","Technique","props","confirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deleteTechnique","masterData","SelectedTechnique","methodUrl","operation","ncontrolCode","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","ntechniquecode","fetchUrl","fecthInputObject","userinfo","userInfo","inputParam","classUrl","inputData","isClearSearch","userRoleControlRights","nformcode","updateInfo","typeName","data","loadEsign","screenData","openModal","screenName","deleteTechniqueTest","deleteParam","selectedRecord","ntestcode","testDataState","onSaveTechniqueTest","saveType","formRef","techniqueTestData","undefined","techniquetestDataState","selectedId","techniquetestList","map","item","push","value","hasOwnProperty","searchRef","onSaveClick","techniqueData","JSON","parse","stringify","nmastersitecode","ncontrolcode","dataStateChange","event","setState","dataResult","dataState","priceDataState","closeModal","openChildModal","onComboChange","comboData","fieldName","onNumericInputOnChange","name","onInputOnChange","primaryFieldKey","target","type","checked","ACTIVE","DEACTIVE","YES","NO","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","reloadData","current","displayName","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","createRef","techniqueFieldList","extractedColumnList","mandatoryFields","mandatoryTestFields","searchFieldList","addId","has","get","editId","addTechniqueTestId","filterParam","addParam","primaryKeyName","editParam","searchedData","technique","length","stechniquename","indexOf","sdescription","techniqueTestList","previousProps","Object","values","Test","TechniqueTest","modalName","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport DataGrid from '../../../components/data-grid/data-grid.component';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, filterColumnData,getTechniqueDetail,getEditTechniqueService,getAddTestService\r\n   } from '../../../actions';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport { showEsign, getControlMap } from '../../../components/CommonScript';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { transactionStatus } from '../../../components/Enumeration';\r\nimport ListMaster from '../../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\n\r\nimport { ReadOnlyText, ContentPanel } from '../../../components/App.styles';\r\nimport AddType1Component from '../../../components/type1component/AddType1Component';\r\nimport Esign from '../../audittrail/Esign';\r\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\r\nimport AddTechniqueTest from './AddTechniqueTest';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Technique extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const testDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            SelectedTechnique: undefined,\r\n            screenName: undefined,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            isClearSearch: false,\r\n            data: [], \r\n            dataResult: [],\r\n            testDataState: testDataState,\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n       \r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n       \r\n        this.techniqueFieldList = [\r\n            { \"idsName\": \"IDS_TECHNIQUE\", \"dataField\": \"stechniquename\", \"width\": \"200px\",\"fieldLength\":\"100\",\"mandatory\": true , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"200px\" , \"fieldLength\":\"255\",\"mandatory\": false , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textarea\"},\r\n            ]\r\n        this.extractedColumnList = [\r\n                { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"200px\"},\r\n                \r\n               ]\r\n        this.mandatoryFields = [ { \"idsName\": \"IDS_TECHNIQUE\", \"dataField\": \"stechniquename\", \"width\": \"200px\",\"mandatory\": true , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                                    ];\r\n        this.mandatoryTestFields = [ { \"idsName\": \"IDS_TEST\", \"dataField\": \"ntestcode\", \"width\": \"200px\",\"mandatory\": true , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n                                ];\r\n        this.searchFieldList = [\"stechniquename\", \"sdescription\"];\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        // let versionStatusCSS = \"outline-secondary\";\r\n        // let activeIconCSS = \"fa fa-check\"\r\n        // if (this.props.Login.masterData.SelectedTestPriceVersion && this.props.Login.masterData.SelectedTestPriceVersion.ntransactionstatus === transactionStatus.APPROVED) {\r\n        //     versionStatusCSS = \"outline-success\";\r\n        // }\r\n        // else if (this.props.Login.masterData.SelectedTestPriceVersion && this.props.Login.masterData.SelectedTestPriceVersion.ntransactionstatus === transactionStatus.RETIRED) {\r\n        //     versionStatusCSS = \"outline-danger\";\r\n        //     activeIconCSS = \"\";\r\n        // }\r\n        // else if (this.props.Login.masterData.SelectedTestPriceVersion && this.props.Login.masterData.SelectedTestPriceVersion.ntransactionstatus === transactionStatus.DRAFT) {\r\n        //     activeIconCSS = \"\";\r\n        // }\r\n\r\n        const addId = this.state.controlMap.has(\"AddTechnique\") && this.state.controlMap.get(\"AddTechnique\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditTechnique\") && this.state.controlMap.get(\"EditTechnique\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteTechnique\") && this.state.controlMap.get(\"DeleteTechnique\").ncontrolcode\r\n        \r\n        const addTechniqueTestId = this.state.controlMap.has(\"AddTechniqueTest\") && this.state.controlMap.get(\"AddTechniqueTest\").ncontrolcode;\r\n        \r\n             \r\n\r\n        const filterParam = {\r\n            inputListName: \"Technique\", selectedObject: \"SelectedTechnique\", primaryKeyField: \"ntechniquecode\",\r\n            fetchUrl: \"technique/getTechnique\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n        };\r\n\r\n        const addParam = {\r\n            screenName: \"IDS_TECHNIQUE\", operation: \"create\", primaryKeyName: \"ntechniquecode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: addId\r\n        }\r\n\r\n        const editParam = {\r\n            screenName: \"IDS_TECHNIQUE\", operation: \"update\", primaryKeyName: \"ntechniquecode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: editId, inputListName: \"Technique\", selectedObject: \"SelectedTechnique\"\r\n        };\r\n\r\n        \r\n        return (<>\r\n            {/* Start of get display*/}\r\n            <div className=\"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\">\r\n                <Row noGutters>\r\n                    <Col md={4}>\r\n                        {/* <Row noGutters>\r\n                            <Col md={12}> */}\r\n                            {/* <div className=\"list-fixed-wrap\"> */}\r\n                                <ListMaster\r\n                                    screenName={this.props.intl.formatMessage({ id: \"IDS_TECHNIQUE\" })}\r\n                                    masterData={this.props.Login.masterData}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Technique}\r\n                                    getMasterDetail={(technique) => this.props.getTechniqueDetail(technique, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                    selectedMaster={this.props.Login.masterData.SelectedTechnique}\r\n                                    primaryKeyField=\"ntechniquecode\"\r\n                                    mainField=\"stechniquename\"\r\n                                    firstField=\"\"\r\n                                    secondField=\"\"\r\n                                    filterColumnData={this.props.filterColumnData}\r\n                                    filterParam={filterParam}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    addId={addId}\r\n                                    searchRef={this.searchRef}\r\n                                    reloadData={this.reloadData}\r\n                                    openModal={() => this.openModal(addParam)}\r\n                                    isMultiSelecct={false}\r\n                                    hidePaging={false}\r\n                                    isClearSearch={this.props.Login.isClearSearch}\r\n                                />\r\n                            {/* </div>\r\n                        </Col></Row> */}\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        {/* <Row>\r\n                            <Col md={12}> */}\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.Technique && this.props.Login.masterData.Technique.length > 0 && this.props.Login.masterData.SelectedTechnique ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                \r\n                                                <Card.Title className=\"product-title-main\">\r\n                                                    {this.props.Login.masterData.SelectedTechnique.stechniquename}\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle>\r\n                                                    <div className=\"d-flex product-category\">\r\n                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                            \r\n                                                        </h2>\r\n                                                        \r\n                                                        <div className=\"d-inline\">\r\n                                                            <Nav.Link name=\"editTechnique\" hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                \r\n                                                                onClick={() => this.props.getEditTechniqueService(editParam)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                            </Nav.Link>\r\n\r\n                                                            <Nav.Link name=\"deleteTechnique\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                              \r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                onClick={() => this.confirmDelete(deleteId)}>\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                               \r\n                                                            </Nav.Link>\r\n                                                            \r\n                                                            \r\n                                                        </div>\r\n                                                        \r\n                                                    </div>\r\n\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body className=\"form-static-wrap\">\r\n                                                \r\n\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_DESCRIPTION\" message=\"Description\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTechnique.sdescription}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                  \r\n                                                </Row>\r\n                                                \r\n                                                  <Card className=\"at-tabs border-0\">\r\n                                                        <Row noGutters>\r\n                                                            <Col md={12}>\r\n                                                                <div className=\"d-flex justify-content-end\">\r\n                                                                <Nav.Link name=\"addTechniqueTest\" className=\"add-txt-btn\" \r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(addTechniqueTestId) === -1}\r\n                                                                        onClick={()=>this.props.getAddTestService(\"IDS_TEST\", \"create\", this.props.Login.masterData, this.props.Login.userInfo, addTechniqueTestId)}\r\n                                                                        >\r\n                                                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                                    <FormattedMessage id='IDS_TESTS' defaultMessage='TestS' />\r\n                                                                </Nav.Link>\r\n                                                                \r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row noGutters>\r\n                                                            <Col md={12}>\r\n                                                                <DataGrid\r\n                                                                    primaryKeyField={\"ntechniquetestcode\"}\r\n                                                                    data={this.state.data}\r\n                                                                    dataResult={this.state.dataResult}\r\n                                                                    dataState={this.state.testDataState}\r\n                                                                    dataStateChange={this.dataStateChange}\r\n                                                                    extractedColumnList={this.extractedColumnList}\r\n                                                                    controlMap={this.state.controlMap}\r\n                                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                    inputParam={this.props.Login.inputParam}\r\n                                                                    userInfo={this.props.Login.userInfo}\r\n                                                                    \r\n                                                                    deleteRecord={this.deleteTechniqueTest}\r\n                                                                    deleteParam={{operation:\"delete\"}}\r\n                                                                    methodUrl={\"TechniqueTest\"}\r\n                                                                \r\n                                                                    addRecord = {() => this.openModal(addId)}\r\n                                                                    pageable={true}\r\n                                                                    scrollable={'scrollable'}\r\n                                                                \r\n                                                                    isActionRequired={true}\r\n                                                                    isToolBarRequired={false}\r\n                                                                    selectedId={this.props.Login.selectedId}\r\n                                                                />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                </Card>\r\n                                                \r\n                                            \r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col></Row>\r\n                    {/* </Col>\r\n                </Row> */}\r\n            </div>\r\n\r\n            {/* End of get display*/}\r\n\r\n            {/* Start of Modal Sideout for  Creation */}\r\n            {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n            {this.props.Login.openModal || this.props.Login.openChildModal ?\r\n                <SlideOutModal show={this.props.Login.screenName === \"IDS_TEST\"?\r\n                this.props.Login.openChildModal:\r\n                this.props.Login.openModal}\r\n                    closeModal={this.closeModal}\r\n                    operation={this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    screenName={this.props.Login.screenName}\r\n                    onSaveClick={this.props.Login.screenName === \"IDS_TEST\"  ? this.onSaveTechniqueTest: this.onSaveClick}\r\n                    esign={this.props.Login.loadEsign}\r\n                    validateEsign={this.validateEsign}\r\n                    masterStatus={this.props.Login.masterStatus}\r\n                    updateStore={this.props.updateStore}\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    mandatoryFields={this.props.Login.screenName === \"IDS_TEST\" ? \r\n                            this.props.Login.operation === \"update\" ? [] : this.mandatoryTestFields:\r\n                            this.mandatoryFields}\r\n                    addComponent={this.props.Login.loadEsign ?\r\n                        <Esign operation={this.props.Login.operation}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                        />\r\n                        : this.props.Login.openChildModal&&\r\n                        this.props.Login.screenName === \"IDS_TEST\"  ? \r\n                            \r\n                                <AddTechniqueTest\r\n                                     selectedRecord={this.state.selectedRecord || {}}\r\n                                     onComboChange={this.onComboChange}\r\n                                     techniqueTestList={this.props.Login.techniqueTestList || []}/>\r\n                                \r\n\r\n                            : <AddType1Component\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                extractedColumnList={this.techniqueFieldList}\r\n                            />\r\n                      \r\n                    }\r\n                /> : \"\"}\r\n            {/* End of Modal Sideout for User Creation */}\r\n        </>\r\n        );\r\n    }\r\n\r\n    confirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteTechnique(\"Technique\", this.props.Login.masterData.SelectedTechnique, \"delete\", deleteId));\r\n    }\r\n\r\n    deleteTechnique = (methodUrl, SelectedTechnique, operation, ncontrolCode) => {\r\n        \r\n\r\n            const postParam = {\r\n                inputListName: \"Technique\", selectedObject: \"SelectedTechnique\",\r\n                primaryKeyField: \"ntechniquecode\",\r\n                primaryKeyValue: SelectedTechnique.ntechniquecode,\r\n                fetchUrl: \"technique/getTechnique\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl, postParam,\r\n                inputData: {\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n                    \"technique\": SelectedTechnique\r\n                },\r\n                operation,\r\n                isClearSearch: this.props.Login.isClearSearch\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_TECHNIQUE\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n            \r\n    }\r\n\r\n    deleteTechniqueTest = (deleteParam) =>{\r\n       let postParam = { inputListName: \"techniquetest\", selectedObject: \"TechniqueTest\", primaryKeyField: \"ntestcode\",\r\n        primaryKeyValue: deleteParam.selectedRecord.ntestcode,\r\n         fetchUrl: \"technique/getTechniqueTest\", fecthInputObject: {ntechniquecode:this.props.Login.masterData.SelectedTechnique.ntechniquecode, userinfo: this.props.Login.userInfo },\r\n         masterData: this.props.Login.masterData \r\n      }\r\n        const inputParam = {\r\n            classUrl: \"technique\",\r\n            methodUrl: \"TechniqueTest\",\r\n            \r\n            inputData: {\r\n                \"techniquetest\": deleteParam.selectedRecord,//.dataItem,\r\n                \"ntechniquecode\":this.props.Login.masterData.SelectedTechnique.ntechniquecode,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation:\"delete\",postParam,\r\n            testDataState:this.state.testDataState\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_TEST\" }),\r\n                    operation:deleteParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    onSaveTechniqueTest = (saveType, formRef) => {\r\n\r\n        const techniqueTestData = {\"userinfo\": this.props.Login.userInfo,\r\n                                 \"technique\":this.props.Login.masterData.SelectedTechnique,\r\n                                 \"ntechniquecode\":this.props.Login.masterData.SelectedTechnique.ntechniquecode};\r\n \r\n         let postParam = undefined;\r\n         let techniquetestDataState = undefined;\r\n         let selectedId = null;\r\n         \r\n         if (this.props.Login.operation === \"update\") {\r\n            \r\n         }\r\n         else {\r\n             //add                                                 \r\n             let techniquetestList = [];\r\n             this.state.selectedRecord[\"ntestcode\"] &&\r\n                 this.state.selectedRecord[\"ntestcode\"].map(item => {\r\n                     return techniquetestList.push({\r\n                        ntestcode: item.value                      \r\n                     })\r\n                 })\r\n            \r\n             techniqueTestData[\"techniquetestlist\"] = techniquetestList;                             \r\n \r\n         }\r\n         if (techniqueTestData[\"technique\"].hasOwnProperty('esignpassword')) {\r\n             if (techniqueTestData[\"technique\"]['esignpassword'] === '') {\r\n                 delete techniqueTestData[\"technique\"]['esigncomments']\r\n                 delete techniqueTestData[\"technique\"]['esignpassword']\r\n                 delete techniqueTestData[\"technique\"]['esignreason']\r\n                 delete techniqueTestData[\"technique\"][\"agree\"]\r\n             }\r\n         }\r\n        \r\n         const inputParam = {\r\n             classUrl: this.props.Login.inputParam.classUrl,\r\n             methodUrl: \"TechniqueTest\",\r\n             inputData: techniqueTestData,\r\n             operation: this.props.Login.operation,\r\n             saveType, formRef, postParam, searchRef: this.searchRef,\r\n             isClearSearch: this.props.Login.isClearSearch,\r\n             selectedId, techniquetestDataState\r\n         }\r\n         const masterData = this.props.Login.masterData;\r\n \r\n         if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n \r\n             const updateInfo = {\r\n                 typeName: DEFAULT_RETURN,\r\n                 data: {\r\n                     loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                 }\r\n             }\r\n             this.props.updateStore(updateInfo);\r\n         }\r\n         else {            \r\n             this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n         }\r\n \r\n     }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        let techniqueData = [];\r\n        techniqueData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        let postParam = undefined;\r\n\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            //postParam = { inputListName: \"Technique\", selectedObject: \"SelectedTechnique\", primaryKeyField: \"ntechniquecode\" };\r\n            postParam = { inputListName: \"Technique\", selectedObject: \"SelectedTechnique\", primaryKeyField: \"ntechniquecode\",\r\n        primaryKeyValue: this.props.Login.selectedRecord.ntechniquecode,\r\n         fetchUrl: \"technique/getActiveTechniqueById\", fecthInputObject: {userinfo: this.props.Login.userInfo },\r\n         masterData: this.props.Login.masterData \r\n      }\r\n            techniqueData[\"technique\"] = JSON.parse(JSON.stringify(this.props.Login.selectedRecord));\r\n            techniqueData[\"stechniquename\"]=this.state.selectedRecord[\"stechniquename\"] || \"\";\r\n            techniqueData[\"sdescription\"]=this.state.selectedRecord[\"sdescription\"] || \"\";\r\n\r\n        }\r\n        else {\r\n            //add               \r\n            techniqueData[\"technique\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode,\r\n                                                \"stechniquename\":this.state.selectedRecord[\"stechniquename\"] || \"\",\r\n                                                \"sdescription\":this.state.selectedRecord[\"sdescription\"] || \"\",\r\n                                            };\r\n\r\n            \r\n\r\n        }\r\n        if (techniqueData[\"technique\"].hasOwnProperty('esignpassword')) {\r\n            if (techniqueData[\"technique\"]['esignpassword'] === '') {\r\n                delete techniqueData[\"technique\"]['esigncomments']\r\n                delete techniqueData[\"technique\"]['esignpassword']\r\n                delete techniqueData[\"technique\"]['esignreason']\r\n            }\r\n        }\r\n      \r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Technique\",\r\n            inputData: techniqueData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef,\r\n            isClearSearch: this.props.Login.isClearSearch\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({ userRoleControlRights, controlMap,\r\n                    data: this.props.Login.masterData.Test,\r\n                    dataResult: process(this.props.Login.masterData.TechniqueTest || [], this.state.testDataState), });\r\n            }\r\n            else {        \r\n                let {testDataState} = this.state;\r\n                if(this.props.Login.testDataState === undefined){\r\n                    testDataState={skip:0,take:this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n                }         \r\n                this.setState({\r\n                    data: this.props.Login.masterData.TechniqueTest, selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData.TechniqueTest ||[],testDataState),\r\n                    testDataState\r\n                });\r\n            }  \r\n        }\r\n    }\r\n    openModal = (inputParam) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord: {}, operation: inputParam.operation, ncontrolCode:inputParam.ncontrolcode, selectedId:null,\r\n                openModal: true, screenName: this.props.intl.formatMessage({id:'IDS_TECHNIQUE'})\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            priceDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openChildModal = this.props.Login.openChildModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.state.selectedId;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n\r\n                if( this.props.Login.screenName === \"IDS_TEST\"){\r\n                    openChildModal=false\r\n                }\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n                \r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            selectedId = null;\r\n            openChildModal=false;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal,openChildModal, loadEsign, selectedRecord, selectedId }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onInputOnChange = (event, primaryFieldKey) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n\r\n        }\r\n        else {   \r\n                  \r\n                selectedRecord[event.target.name] = event.target.value;\r\n                   \r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"technique\",\r\n            methodUrl: \"Technique\",\r\n            displayName: \"IDS_TECHNIQUE\",\r\n            userInfo: this.props.Login.userInfo,\r\n            isClearSearch: this.props.Login.isClearSearch\r\n\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential,getTechniqueDetail,getEditTechniqueService,getAddTestService,\r\n    updateStore,filterColumnData\r\n})(injectIntl(Technique));\r\n\r\n"]},"metadata":{},"sourceType":"module"}