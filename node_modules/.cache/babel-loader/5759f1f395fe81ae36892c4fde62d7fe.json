{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';//import {getComboLabelValue, constructOptionList} from '../components/CommonScript'\nimport{sortData,getComboLabelValue,constructOptionList,formatInputDate,rearrangeDateFormat,formatDate}from'../components/CommonScript';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{intl}from'../components/App';import{parameterType,transactionStatus,operators,attachmentType,FORMULAFIELDTYPE}from\"../components/Enumeration\";//import { intl } from '../components/App';\nexport function getMethodDetail(method,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"method/getMethod\",{nmethodcode:method.nmethodcode,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}//export function getMethodComboService (screenName, primaryKeyName, primaryKeyValue, operation, inputParam , userInfo, ncontrolCode) {            \nexport function getMethodComboService(methodParam){return function(dispatch){var methodCategoryService=rsapi.post(\"methodcategory/getMethodCategory\",{userinfo:methodParam.userInfo});var DateService=rsapi.post(\"/timezone/getLocalTimeByZone\",{\"userinfo\":methodParam.userInfo});var urlArray=[];var selectedId=null;if(methodParam.operation===\"create\"){urlArray=[methodCategoryService,DateService];}else{var _rsapi$post;// const url = methodParam.inputParam.classUrl+ \"/getActive\" + methodParam.inputParam.methodUrl + \"ById\";   //\"method/getActiveMethodById\"      \nvar url=\"method/getActiveMethodById\";//\"method/getActiveMethodById\"      \nvar methodById=rsapi.post(url,(_rsapi$post={},_defineProperty(_rsapi$post,methodParam.primaryKeyName,methodParam.masterData.SelectedMethod[methodParam.primaryKeyName]),_defineProperty(_rsapi$post,\"userinfo\",methodParam.userInfo),_rsapi$post));urlArray=[methodCategoryService,DateService,methodById];selectedId=methodParam.primaryKeyValue;}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedRecord={};var methodCatMap=constructOptionList(response[0].data||[],\"nmethodcatcode\",\"smethodcatname\",undefined,undefined,true);var methodCategoryList=methodCatMap.get(\"OptionList\");selectedRecord[\"dcurrentdate\"]=rearrangeDateFormat(methodParam.userInfo,response[1].data);selectedRecord[\"ndefaultstatus\"]=transactionStatus.NO;selectedRecord[\"nneedvalidity\"]=transactionStatus.NO;//selectedRecord[\"dvaliditystartdate\"]= selectedRecord[\"dvalidityenddate\"];\nif(methodParam.operation===\"update\"){selectedRecord=response[2].data;selectedRecord[\"nmethodcatcode\"]=getComboLabelValue(selectedRecord,response[0].data,\"nmethodcatcode\",\"smethodcatname\");selectedRecord[\"dcurrentdate\"]=rearrangeDateFormat(methodParam.userInfo,response[1].data);}dispatch({type:DEFAULT_RETURN,payload:{methodCategoryList:methodCategoryList,//:response[0].data || [],                               \noperation:methodParam.operation,screenName:methodParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:methodParam.ncontrolcode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getMethodValidityUTCDate(methodParam){return function(dispatch){var DateService=rsapi.post(\"/timezone/getLocalTimeByZone\",{\"userinfo\":methodParam.userInfo});var urlArray=[];var selectedId=null;urlArray=[DateService];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedRecord={};selectedRecord[\"dcurrentdate\"]=rearrangeDateFormat(methodParam.userInfo,response[0].data);//selectedRecord[\"dvaliditystartdate\"]= selectedRecord[\"dvalidityenddate\"];\ndispatch({type:DEFAULT_RETURN,payload:{operation:methodParam.operation,screenName:methodParam.screenName,selectedRecord:selectedRecord,openChildModal:true,//ncontrolCode:methodParam.ncontrolcode,\nloading:false//,selectedId\n}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export var getAvailableValidityData=function getAvailableValidityData(methodItem,url,key,screenName,userInfo,ncontrolCode){return function(dispatch){var inputParam={\"userinfo\":userInfo};dispatch(initRequest(true));rsapi.post(\"method/\"+url,inputParam).then(function(response){var availableDataMap=constructOptionList(response.data,key===\"methodvalidity\"?\"nmethodvaliditycode\":key===\"method\"?\"nmethodcode\":key==\"instrumentcategory\"?\"ninstrumentcatcode\":key==\"package\"?\"ntestpackagecode\":\"ncontainertypecode\",key===\"section\"?\"ssectionname\":key===\"method\"?\"smethodname\":key==\"instrumentcategory\"?\"sinstrumentcatname\":key==\"package\"?\"stestpackagename\":\"scontainertype\",false,false,true);dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:false,// otherTestData: {\n//     [key]: availableDataMap.get(\"OptionList\")\n// },\nscreenName:screenName,selectedRecord:{availableData:\"\"},operation:\"create\",ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===417){toast.info(error.response.data);}else{toast.error(error.message);}});};};export function fetchMethodValidityById(editParam){return function(dispatch){if(editParam.editRow.ntransactionstatus===transactionStatus.DRAFT){var _rsapi$post2;var URL3=rsapi.post(\"/method/getActiveMethodValidityById\",(_rsapi$post2={},_defineProperty(_rsapi$post2,editParam.primaryKeyName,editParam.editRow.nmethodvaliditycode),_defineProperty(_rsapi$post2,\"userinfo\",editParam.userInfo),_rsapi$post2));dispatch(initRequest(true));Axios.all([URL3]).then(function(response){var selectedRecord={};var selectedId=editParam.editRow.nmethodvaliditycode;selectedRecord=response[0].data.body.MethodValidity[0];if(selectedRecord[\"svaliditystartdate\"]!==\"\"){selectedRecord[\"dvaliditystartdate\"]=rearrangeDateFormat(editParam.userInfo,selectedRecord[\"svaliditystartdate\"]);//new Date(response[7].data[\"smanufacdate\"]);\n}if(selectedRecord[\"svalidityenddate\"]!==\"\"){selectedRecord[\"dvalidityenddate\"]=rearrangeDateFormat(editParam.userInfo,selectedRecord[\"svalidityenddate\"]);//new Date(response[7].data[\"spodate\"]);\n}dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,operation:editParam.operation,openChildModal:true,screenName:editParam.screenName,ncontrolcode:editParam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_NOTEDITDELETEMETHODVALIDITY\"}));}};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/MethodAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","getComboLabelValue","constructOptionList","formatInputDate","rearrangeDateFormat","formatDate","toast","Axios","initRequest","intl","parameterType","transactionStatus","operators","attachmentType","FORMULAFIELDTYPE","getMethodDetail","method","userInfo","masterData","dispatch","post","nmethodcode","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getMethodComboService","methodParam","methodCategoryService","DateService","urlArray","selectedId","url","methodById","primaryKeyName","SelectedMethod","primaryKeyValue","all","selectedRecord","methodCatMap","methodCategoryList","get","NO","screenName","openModal","ncontrolCode","ncontrolcode","getMethodValidityUTCDate","openChildModal","getAvailableValidityData","methodItem","key","inputParam","availableDataMap","showSaveContinue","availableData","info","fetchMethodValidityById","editParam","editRow","ntransactionstatus","DRAFT","URL3","nmethodvaliditycode","body","MethodValidity","formatMessage","id"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\n//import {getComboLabelValue, constructOptionList} from '../components/CommonScript'\r\nimport {sortData, getComboLabelValue, constructOptionList,formatInputDate, rearrangeDateFormat, formatDate} from '../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl} from '../components/App';\r\nimport {\r\n    parameterType,\r\n    transactionStatus,\r\n    operators,\r\n    attachmentType,\r\n    FORMULAFIELDTYPE,\r\n  } from \"../components/Enumeration\";\r\n//import { intl } from '../components/App';\r\n\r\nexport function getMethodDetail (method, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"method/getMethod\", {nmethodcode:method.nmethodcode, userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}\r\n}\r\n\r\n//export function getMethodComboService (screenName, primaryKeyName, primaryKeyValue, operation, inputParam , userInfo, ncontrolCode) {            \r\nexport function getMethodComboService (methodParam) {            \r\n    return function (dispatch) {   \r\n    const methodCategoryService = rsapi.post(\"methodcategory/getMethodCategory\", \r\n                                    {userinfo:methodParam.userInfo});\r\n    const DateService= rsapi.post(\"/timezone/getLocalTimeByZone\", {\r\n                                        \"userinfo\": methodParam.userInfo\r\n                                    })\r\n    let urlArray = [];\r\n    let selectedId = null;\r\n    if (methodParam.operation === \"create\"){\r\n        urlArray = [methodCategoryService,DateService];\r\n    }\r\n    else{           \r\n       // const url = methodParam.inputParam.classUrl+ \"/getActive\" + methodParam.inputParam.methodUrl + \"ById\";   //\"method/getActiveMethodById\"      \r\n       const url = \"method/getActiveMethodById\";   //\"method/getActiveMethodById\"      \r\n        const methodById =  rsapi.post(url, { [methodParam.primaryKeyName] :methodParam.masterData.SelectedMethod[methodParam.primaryKeyName], \"userinfo\": methodParam.userInfo} );\r\n        urlArray = [methodCategoryService, DateService,methodById];\r\n        selectedId = methodParam.primaryKeyValue;\r\n    }\r\n    dispatch(initRequest(true));\r\n    Axios.all(urlArray)\r\n        .then(response=>{                  \r\n            \r\n            let selectedRecord =  {};\r\n\r\n            const methodCatMap = constructOptionList(response[0].data || [], \"nmethodcatcode\",\r\n                                \"smethodcatname\", undefined, undefined, true);\r\n            const methodCategoryList = methodCatMap.get(\"OptionList\");\r\n            selectedRecord[\"dcurrentdate\"]= rearrangeDateFormat(methodParam.userInfo, response[1].data);\r\n            selectedRecord[\"ndefaultstatus\"]=transactionStatus.NO;\r\n            selectedRecord[\"nneedvalidity\"]=transactionStatus.NO;\r\n            //selectedRecord[\"dvaliditystartdate\"]= selectedRecord[\"dvalidityenddate\"];\r\n            if (methodParam.operation === \"update\"){\r\n                selectedRecord = response[2].data;\r\n                selectedRecord[\"nmethodcatcode\"] = getComboLabelValue(selectedRecord, response[0].data, \r\n                    \"nmethodcatcode\", \"smethodcatname\");                   \r\n                selectedRecord[\"dcurrentdate\"]= rearrangeDateFormat(methodParam.userInfo, response[1].data);\r\n            }\r\n           \r\n            dispatch({type: DEFAULT_RETURN, payload:{methodCategoryList,//:response[0].data || [],                               \r\n                        operation:methodParam.operation, screenName:methodParam.screenName, selectedRecord, \r\n                        openModal : true,\r\n                        ncontrolCode:methodParam.ncontrolcode,\r\n                        loading:false,selectedId\r\n                    }});\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }  \r\n        })        \r\n    }\r\n}\r\n\r\nexport function getMethodValidityUTCDate (methodParam) {            \r\n    return function (dispatch) {   \r\n    \r\n    const DateService= rsapi.post(\"/timezone/getLocalTimeByZone\", {\r\n                                        \"userinfo\": methodParam.userInfo\r\n                                    })\r\n    let urlArray = [];\r\n    let selectedId = null;\r\n    \r\n        urlArray = [DateService];\r\n    \r\n    dispatch(initRequest(true));\r\n    Axios.all(urlArray)\r\n        .then(response=>{                  \r\n            \r\n            let selectedRecord =  {};\r\n\r\n            \r\n            selectedRecord[\"dcurrentdate\"]= rearrangeDateFormat(methodParam.userInfo, response[0].data);\r\n            //selectedRecord[\"dvaliditystartdate\"]= selectedRecord[\"dvalidityenddate\"];\r\n                       \r\n            dispatch({type: DEFAULT_RETURN, payload:{          \r\n                        operation:methodParam.operation, screenName:methodParam.screenName, selectedRecord, \r\n                        openChildModal : true,\r\n                        //ncontrolCode:methodParam.ncontrolcode,\r\n                        loading:false//,selectedId\r\n                    }});\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }  \r\n        })        \r\n    }\r\n}\r\n\r\nexport const getAvailableValidityData = (methodItem, url, key, screenName, userInfo, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        const inputParam = {\r\n            \"userinfo\": userInfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"method/\" + url, inputParam)\r\n            .then(response => {\r\n                const availableDataMap = constructOptionList(response.data, key === \"methodvalidity\" ? \"nmethodvaliditycode\" : key === \"method\" ? \"nmethodcode\" : key == \"instrumentcategory\" ?\"ninstrumentcatcode\" : key == \"package\" ?\"ntestpackagecode\" : \"ncontainertypecode\",\r\n                    key === \"section\" ? \"ssectionname\" : key === \"method\" ? \"smethodname\" :  key == \"instrumentcategory\" ? \"sinstrumentcatname\"  :  key == \"package\" ? \"stestpackagename\" : \"scontainertype\", false, false, true);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openChildModal: true,\r\n                        showSaveContinue: false,\r\n                        // otherTestData: {\r\n                        //     [key]: availableDataMap.get(\"OptionList\")\r\n                        // },\r\n                        screenName: screenName,\r\n                        selectedRecord: {\r\n                            availableData: \"\"\r\n                        },\r\n                        operation: \"create\",\r\n                        ncontrolCode,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 417) {\r\n                    toast.info(error.response.data)\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\nexport function fetchMethodValidityById (editParam){  \r\n    return function(dispatch){\r\n        if (editParam.editRow.ntransactionstatus === transactionStatus.DRAFT) {\r\n        const URL3=rsapi.post(\"/method/getActiveMethodValidityById\", { [editParam.primaryKeyName] :editParam.editRow.nmethodvaliditycode , \"userinfo\": editParam.userInfo} )\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL3])\r\n        .then(response=> { \r\n            let selectedRecord={}\r\n            let selectedId = editParam.editRow.nmethodvaliditycode;\r\n            selectedRecord=response[0].data.body.MethodValidity[0];\r\n\r\n            if (selectedRecord[\"svaliditystartdate\"] !== \"\") {\r\n\r\n                selectedRecord[\"dvaliditystartdate\"] = rearrangeDateFormat(editParam.userInfo, selectedRecord[\"svaliditystartdate\"]); //new Date(response[7].data[\"smanufacdate\"]);\r\n            }\r\n\r\n            if (selectedRecord[\"svalidityenddate\"] !== \"\") {\r\n                selectedRecord[\"dvalidityenddate\"] = rearrangeDateFormat(editParam.userInfo, selectedRecord[\"svalidityenddate\"]); //new Date(response[7].data[\"spodate\"]);\r\n            }\r\n            \r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload:{\r\n                selectedRecord ,\r\n                operation:editParam.operation,\r\n                openChildModal: true,\r\n                screenName:editParam.screenName,\r\n                ncontrolcode:editParam.ncontrolCode,\r\n                loading:false,selectedId\r\n            }\r\n            }); \r\n            \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })\r\n    }\r\n    else {\r\n        toast.warn(intl.formatMessage({ id: \"IDS_NOTEDITDELETEMETHODVALIDITY\" }));\r\n    }\r\n    }\r\n }"]},"metadata":{},"sourceType":"module"}