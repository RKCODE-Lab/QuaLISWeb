{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { sortData, constructOptionList, parentChildComboLoad, rearrangeDateFormat } from '../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nimport { intl } from '../components/App';\nimport { attachmentType, transactionStatus } from '../components/Enumeration';\nexport function initialcombochangeMaterialInvget(nmaterialtypecode, nmaterialcatcode, data, userInfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/materialinventory/getMaterialInventorycombo\", {\n      nmaterialtypecode,\n      nmaterialcatcode: nmaterialcatcode && nmaterialcatcode,\n      \"userinfo\": userInfo\n    }).then(response => {\n      const masterData = { ...data,\n        ...response.data,\n        searchedData: undefined\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(intl.formatMessage({\n        id: error.message\n      }));\n    });\n  };\n}\nexport function getMaterialInventoryByID(selectedcombo, selectedcombouser, selectedMaterialcombo, Data, userInfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/materialinventory/getMaterialInventoryByID\", selectedcombouser !== undefined ? {\n      nmaterialtypecode: selectedcombo['nmaterialtypecode'].value !== undefined ? selectedcombo['nmaterialtypecode'].value : selectedcombo['nmaterialtypecode'],\n      nmaterialcatcode: selectedcombouser['nmaterialcatcode'].value !== undefined ? selectedcombouser['nmaterialcatcode'].value : selectedcombouser['nmaterialcatcode'],\n      nmaterialcode: selectedMaterialcombo[\"nmaterialcode\"].value !== undefined ? selectedMaterialcombo[\"nmaterialcode\"].value : selectedMaterialcombo[\"nmaterialcode\"],\n      \"userinfo\": userInfo\n    } : {\n      nmaterialtypecode: selectedcombo['nmaterialtypecode'].value,\n      \"userinfo\": userInfo\n    }).then(response => {\n      let masterData = {};\n      masterData = { ...Data,\n        ...response.data,\n        searchedData: undefined\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          skip: 0,\n          take: 20\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(intl.formatMessage({\n        id: error.message\n      }));\n    });\n  };\n}\nexport function getAddMaterialInventoryPopup(operation, userInfo, selectedcombo, ncontrolCode, masterData, selectedRecord) {\n  return function (dispatch) {\n    if (operation === \"create\") {\n      if (selectedcombo !== undefined) {\n        let urlArray = [];\n        let timeZoneList;\n        let templateData = [];\n        let data = [];\n        let dataparent = [];\n        const withoutCombocomponent = [];\n        const Layout = masterData.selectedTemplate[0].jsondata;\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.hasOwnProperty(\"parent\")) {\n                dataparent.push(component);\n              }\n\n              return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                if (componentrow.inputtype === \"combo\" && !component.hasOwnProperty(\"parent\")) {\n                  if (componentrow.hasOwnProperty(\"parent\")) {\n                    dataparent.push(componentrow);\n                  } else {\n                    data.push(componentrow);\n                  }\n                }\n              }) : component.inputtype === \"combo\" && !component.hasOwnProperty(\"parent\") ? data.push(component) : withoutCombocomponent.push(component);\n            });\n          });\n        });\n        const comboComponents = data;\n        dataparent[0] = {\n          displaymember: dataparent[0].displaymember,\n          inputtype: dataparent[0].inputtype,\n          label: dataparent[0].label,\n          source: dataparent[0].source,\n          type: dataparent[0].type,\n          valuemember: dataparent[0].valuemember\n        };\n        const MaterialInvreq = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\n          \"nunitcode\": selectedcombo['jsondata'][\"nunitcode\"].value,\n          \"userinfo\": userInfo,\n          \"parentcolumnlist\": comboComponents,\n          parameters: {\n            nusercode: userInfo.nusercode\n          }\n        });\n        const MaterialInvreq1 = rsapi.post('dynamicpreregdesign/getChildValues', {\n          child: Layout[0].children[0].children[0].childValue,\n          parentdata: {\n            nunitcode: selectedcombo['jsondata'][\"nunitcode\"].value\n          },\n          parentsource: 'unit',\n          'nunitcode': selectedcombo['jsondata'][\"nunitcode\"].value,\n          valuemember: 'nunitcode',\n          userInfo,\n          parentcolumnlist: dataparent\n        });\n        const materialReq3 = rsapi.post('materialinventory/getMaterialInventoryByID', {\n          'nmaterialcatcode': masterData['SelectedMaterialCategory'].nmaterialcatcode,\n          'nmaterialtypecode': masterData['SelectedMaterialType'][0].nmaterialtypecode,\n          'nmaterialcode': masterData['SelectedMaterialCrumb']['jsondata'].nmaterialcode,\n          'userinfo': userInfo\n        });\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\n        urlArray = [MaterialInvreq, MaterialInvreq1, timezone, materialReq3];\n        dispatch(initRequest(true));\n        Axios.all(urlArray).then(response => {\n          templateData = response[0].data;\n          data.splice(1, 0, dataparent[0]);\n          let temp1 = [];\n          const temp2 = { ...response[0].data,\n            ...response[1].data\n          };\n          templateData = parentChildComboLoad(data, temp2, selectedRecord, null, withoutCombocomponent, undefined, userInfo.slanguagetypecode);\n          let dateLables = [];\n          const Layout = masterData.selectedTemplate[0].jsondata;\n          Layout.map(row => {\n            row.children.map(column => {\n              column.children.map(component => {\n                if (component.inputtype === 'combo') {\n                  selectedRecord[component.label] = templateData[\"comboData\"][component.label] && templateData[\"comboData\"][component.label][0];\n                } else if (component.inputtype === 'date') {\n                  if (component.hasOwnProperty('timezone')) dateLables.push(component.label);\n                }\n\n                component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n                  if (componentrow.inputtype === 'combo') {\n                    selectedRecord[componentrow.label] = templateData[\"comboData\"][componentrow.label] && templateData[\"comboData\"][componentrow.label][0];\n                  } else if (componentrow.inputtype === 'date') {\n                    if (componentrow.hasOwnProperty('timezone')) dateLables.push(componentrow.label);\n                  }\n                });\n              });\n            });\n          });\n\n          if (dateLables) {\n            const timeZoneListMap = constructOptionList(response[2].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\n            timeZoneList = timeZoneListMap.get(\"OptionList\");\n            dateLables.map(temp => {\n              selectedRecord[`tz${temp}`] = timeZoneList[0];\n            });\n          }\n\n          masterData['SelectedMaterialCrumb'] = response[3].data.SelectedMaterialCrumb;\n          dispatch({\n            type: DEFAULT_RETURN,\n            payload: {\n              operation,\n              timeZoneList,\n              screenname: 'IDS_MATERIALINVENTORY',\n              masterData,\n              selectedRecord,\n              showMaterialSection: false,\n              templateData,\n              openModal: true,\n              ncontrolCode,\n              loading: false\n            }\n          });\n        }).catch(error => {\n          dispatch({\n            type: DEFAULT_RETURN,\n            payload: {\n              loading: false\n            }\n          });\n\n          if (error.response.status === 500) {\n            toast.error(intl.formatMessage({\n              id: error.message\n            }));\n          } else {\n            toast.warn(intl.formatMessage({\n              id: error.response.data\n            }));\n          }\n        });\n      } else {\n        toast.warn(intl.formatMessage({\n          id: 'IDS_CONFIGMATERIAL'\n        }));\n      }\n    } else {\n      let urlArray = [];\n      let templateData = [];\n      let data = [];\n      let dataparent = [];\n      let dateLables = [];\n      let timeZoneList;\n      const withoutCombocomponent = [];\n      const Layout = masterData.selectedTemplate[0].jsondata;\n\n      if (masterData[\"SelectedMaterialInventory\"].jsondata.ntranscode !== transactionStatus.RETIRED && masterData[\"SelectedMaterialInventory\"].jsondata.ntranscode !== transactionStatus.RELEASED && masterData[\"SelectedMaterialInventory\"].jsondata.ntranscode !== 55) {\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.hasOwnProperty(\"parent\")) {\n                dataparent.push(component);\n              }\n\n              if (component.hasOwnProperty('timezone')) {\n                dateLables.push(component.label);\n              }\n\n              return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                if (componentrow.inputtype === \"combo\" && !component.hasOwnProperty(\"parent\")) {\n                  if (componentrow.hasOwnProperty(\"parent\")) {\n                    dataparent.push(componentrow);\n                  } else {\n                    data.push(componentrow);\n                  }\n                }\n\n                if (component.hasOwnProperty('timezone')) {\n                  dateLables.push(component.label);\n                }\n              }) : component.inputtype === \"combo\" && !component.hasOwnProperty(\"parent\") ? data.push(component) : withoutCombocomponent.push(component);\n            });\n          });\n        });\n        const comboComponents = data;\n        const MaterialInv = rsapi.post(\"/materialinventory/getMaterialInventoryEdit\", {\n          'nmaterialtypecode': masterData.SelectedMaterialInventory.jsondata.nmaterialtypecode,\n          'nmaterialinventorycode': masterData.SelectedMaterialInventory.jsondata.nmaterialinventorycode,\n          \"userinfo\": userInfo\n        });\n        dataparent[0] = {\n          displaymember: dataparent[0].displaymember,\n          inputtype: dataparent[0].inputtype,\n          label: dataparent[0].label,\n          source: dataparent[0].source,\n          type: dataparent[0].type,\n          valuemember: dataparent[0].valuemember\n        };\n        const Materialinvreq = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\n          \"nunitcode\": selectedcombo['jsondata'][\"nunitcode\"].value,\n          \"userinfo\": userInfo,\n          \"parentcolumnlist\": comboComponents,\n          parameters: {\n            nusercode: userInfo.nusercode\n          }\n        });\n        const MaterialInvreq1 = rsapi.post('dynamicpreregdesign/getChildValues', {\n          child: Layout[0].children[0].children[0].childValue,\n          parentdata: {\n            nunitcode: selectedcombo['jsondata'][\"nunitcode\"].value\n          },\n          parentsource: 'unit',\n          'nunitcode': selectedcombo['jsondata'][\"nunitcode\"].value,\n          valuemember: 'nunitcode',\n          userInfo,\n          parentcolumnlist: dataparent\n        });\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\n        const materialReq3 = rsapi.post('materialinventory/getMaterialInventoryByID', {\n          'nmaterialcatcode': masterData['SelectedMaterialCategory'].nmaterialcatcode,\n          'nmaterialtypecode': masterData['SelectedMaterialType'][0].nmaterialtypecode,\n          'nmaterialcode': masterData['SelectedMaterialCrumb']['jsondata'].nmaterialcode,\n          'userinfo': userInfo\n        });\n        urlArray = [Materialinvreq, MaterialInvreq1, MaterialInv, timezone, materialReq3];\n        dispatch(initRequest(true));\n        Axios.all(urlArray).then(response => {\n          templateData = response[0].data;\n          data = [...data, ...dataparent];\n          templateData = parentChildComboLoad(data, { ...response[0].data,\n            ...response[1].data\n          }, selectedRecord, null, withoutCombocomponent, undefined, userInfo.slanguagetypecode);\n\n          if (response[2].data[\"EditedMaterialInventory\"].length > 0) {\n            if (response[2].data[\"MaterialInventoryDateFeild\"]) {\n              response[2].data[\"MaterialInventoryDateFeild\"].map(temp => {\n                response[2].data[\"EditedMaterialInventory\"][0].jsondata[temp] = rearrangeDateFormat(userInfo, response[2].data[\"EditedMaterialInventory\"][0].jsondata[temp]);\n              });\n            }\n          }\n\n          selectedRecord = { ...selectedRecord,\n            ...response[2].data.EditedMaterialInventory[0].jsondata\n          };\n\n          if (dateLables) {\n            const timeZoneListMap = constructOptionList(response[3].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\n            timeZoneList = timeZoneListMap.get(\"OptionList\");\n            response[2].data[\"DateFeildsInventory\"].map(temp => {\n              if (!selectedRecord.hasOwnProperty(temp)) {\n                selectedRecord[`tz${temp}`] = timeZoneList[0];\n              }\n            });\n          }\n\n          masterData['SelectedMaterialCrumb'] = response[4].data.SelectedMaterialCrumb;\n          dispatch({\n            type: DEFAULT_RETURN,\n            payload: {\n              operation,\n              screenname: 'IDS_MATERIALINVENTORY',\n              timeZoneList,\n              masterData,\n              isSelectedRecordChange: false,\n              showMaterialSection: false,\n              templateData,\n              openModal: true,\n              selectedcombo,\n              selectedRecord,\n              ncontrolCode,\n              loading: false\n            }\n          });\n        }).catch(error => {\n          dispatch({\n            type: DEFAULT_RETURN,\n            payload: {\n              loading: false\n            }\n          });\n\n          if (error.response.status === 500) {\n            toast.error(intl.formatMessage({\n              id: error.message\n            }));\n          } else {\n            toast.warn(intl.formatMessage({\n              id: error.response.data\n            }));\n          }\n        });\n      } else {\n        toast.warn(intl.formatMessage({\n          id: \"IDS_SELECTQUARENTINEINVENTORY\"\n        }));\n      }\n    }\n  };\n}\nexport function getMaterialInventoryDetails(inputData, masterData, userInfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"materialinventory/getMaterialInventoryDetails\", {\n      \"nmaterialcode\": inputData.nmaterialcode,\n      \"nmaterialcatcode\": inputData.nmaterialcatcode,\n      \"nmaterialtypecode\": inputData.nmaterialtypecode,\n      \"nmaterialinventorycode\": inputData.nmaterialinventorycode,\n      \"userinfo\": userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response\n        }));\n      }\n    });\n  };\n}\nexport function updateMaterialStatus(masterData, userInfo, ncontrolcode, nflag) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"materialinventory/updateMaterialStatus\", {\n      nflag: nflag,\n      nmaterialinventorycode: masterData[\"SelectedMaterialInventory\"].jsondata.nmaterialinventorycode,\n      nmaterialcode: masterData[\"SelectedMaterialInventory\"].jsondata.nmaterialcode,\n      nmaterialtypecode: masterData[\"SelectedMaterialInventory\"].jsondata.nmaterialtypecode,\n      nmaterialcatcode: masterData[\"SelectedMaterialInventory\"].jsondata.nmaterialcatcode,\n      \"userinfo\": userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function openDatePopup(masterData, ncontrolCode) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"timezone/getTimeZone\").then(response => {\n      let selectedRecord = {}; // const timeZoneListMap = constructOptionList(response.data || [], \"ntimezonecode\",\n      //     \"stimezoneid\", undefined, undefined, true);\n      // const timeZoneList = timeZoneListMap.get(\"OptionList\");\n      // selectedRecord = { 'tzIDS_OPENDATE': timeZoneList[0] }\n      //  dispatch({ type: DEFAULT_RETURN, payload: { timeZoneList, ncontrolCode, selectedRecord, ModaTitle: 'IDS_OPENDATE', showModalPopup: true, masterData, loading: false } });\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          ncontrolCode,\n          selectedRecord,\n          ModaTitle: 'IDS_OPENDATE',\n          showModalPopup: true,\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function getQuantityTransactionPopup(Data, userInfo, updateInfo, ncontrolCode) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    let urlArray = [];\n    let timeZoneList;\n    const getQuantityTransaction = rsapi.post(\"/materialinventory/getQuantityTransaction\", {\n      \"userinfo\": userInfo,\n      'nmaterialtypecode': Data[\"SelectedMaterialType\"][\"nmaterialtypecode\"],\n      nmaterialinventorycode: Data[\"SelectedMaterialInventory\"][\"nmaterialinventorycode\"],\n      nflag: 1\n    });\n    const timezone = rsapi.post(\"timezone/getTimeZone\");\n    urlArray = [getQuantityTransaction, timezone];\n    Axios.all(urlArray).then(response => {\n      let masterData = {};\n      let templateData = [];\n      let selectedRecord = {};\n      masterData = { ...Data,\n        ...response[0].data,\n        searchedData: undefined\n      };\n      templateData = parentChildComboLoad(response[0].data.parentcolumnlist, response[0].data, selectedRecord, response[0].data.childcolumnlist, undefined, undefined, userInfo.slanguagetypecode);\n      selectedRecord = { ...templateData.selectedRecord,\n        'IDS_SECTION': Data['SelectedMaterialInventory']['jsondata']['IDS_SECTION'],\n        'IDS_AVAILABLEQUANTITY': response[0].data.navailableqty\n      }; // const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\n      //     \"stimezoneid\", undefined, undefined, true);\n      // const timeZoneList = timeZoneListMap.get(\"OptionList\");\n      // response[0].data[\"DateFeildsProperties\"].map((temp) => {\n      //     if (!selectedRecord.hasOwnProperty(temp)) {\n      //         selectedRecord[`tz${temp}`] = timeZoneList[0]\n      //     }\n      // })\n\n      masterData['QuantityTransactionTemplate'][0].jsondata.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            if (component.inputtype === 'combo') {\n              if (selectedRecord[component.label] === undefined) {\n                selectedRecord[component.label] = templateData.comboData[component.label][0];\n              }\n            }\n\n            if (component.inputtype === 'date') {\n              if (component.hasOwnProperty('timezone')) {\n                const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\n                const timeZoneList = timeZoneListMap.get(\"OptionList\");\n                response[0].data[\"DateFeildsProperties\"].map(temp => {\n                  if (!selectedRecord.hasOwnProperty(temp)) {\n                    selectedRecord[`tz${temp}`] = timeZoneList[0];\n                  }\n                });\n              }\n            }\n          });\n        });\n      });\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          operation: \"create\",\n          selectedRecord,\n          templateData,\n          timeZoneList,\n          navailableqty: response[0].data.navailableqty,\n          masterData,\n          updateInfo,\n          ncontrolCode,\n          openModal: true,\n          screenname: \"IDS_QUANTITYTRANSACTION\",\n          loading: false,\n          skip: 0,\n          take: 20\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(error);\n    });\n  };\n}\nexport function getMaterialChildValues(inputParem, userInfo, selectedRecord, parentcolumnlist, childcolumnlist, comboData, childKeyname, parentDependentChild, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post('dynamicpreregdesign/getChildValues', {\n      child: inputParem.child,\n      parentdata: inputParem.item.jsondata,\n      parentsource: inputParem.source,\n      [inputParem.primarykeyField]: inputParem.value,\n      valuemember: inputParem.primarykeyField,\n      userInfo,\n      parentcolumnlist: childcolumnlist[childKeyname]\n    }).then(response => {\n      let templateData = [];\n      let temp = selectedRecord[childKeyname];\n      let returnObj = { ...comboData,\n        ...response.data\n      };\n      templateData = parentChildComboLoad(parentcolumnlist, returnObj, selectedRecord, childcolumnlist, undefined, undefined, userInfo.slanguagetypecode);\n      selectedRecord[childKeyname] = temp;\n      selectedRecord = { ...selectedRecord,\n        [parentDependentChild]: templateData['comboData'][parentDependentChild][0]\n      };\n      const comboData1 = {\n        value: selectedRecord['IDS_TRANSACTIONTYPE'].value\n      };\n      dispatch(getQuantityTransactionOnchange(comboData1, masterData, userInfo, selectedRecord, templateData)); // dispatch( type: DEFAULT_RETURN, payload: {templateData,selectedRecord});\n      //  dispatch({\n      //     type: DEFAULT_RETURN,\n      //     payload: {\n      //         templateData,selectedRecord,loading: false\n      //     }\n      // });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(error);\n    });\n  };\n}\nexport function getQuantityTransactionOnchange(comboData, Data, userInfo, selectedRecord, templateData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/materialinventory/getQuantityTransaction\", {\n      \"userinfo\": userInfo,\n      'nmaterialtypecode': Data[\"SelectedMaterialType\"][\"nmaterialtypecode\"],\n      nmaterialinventorycode: Data[\"SelectedMaterialInventory\"][\"nmaterialinventorycode\"],\n      nflag: selectedRecord.IDS_INVENTORYTRANSACTIONTYPE.value === transactionStatus.ACTIVE ? 2 : 3,\n      ntransactiontype: comboData.value\n    }).then(response => {\n      let masterData = {};\n      let navailableqtyref = {};\n      masterData = { ...Data,\n        ...response.data\n      };\n      selectedRecord = { ...selectedRecord,\n        'IDS_AVAILABLEQUANTITY': response.data.navailableqty\n      };\n      navailableqtyref = response.data.navailableqtyref;\n\n      if (selectedRecord['IDS_TRANSACTIONTYPE'].value === 47) {\n        masterData['QuantityTransactionTemplate'][0].jsondata.map(row => {\n          row.children.map(column => {\n            column.children.map((component, i) => {\n              if (component.label === 'IDS_AVAILABLEQUANTITY') {\n                delete column.children[i];\n              }\n            });\n          });\n        });\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          operation: \"create\",\n          selectedRecord,\n          templateData,\n          navailableqtyref,\n          masterData,\n          openModal: true,\n          screenname: \"IDS_QUANTITYTRANSACTION\",\n          loading: false,\n          skip: 0,\n          take: 20\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(error);\n    });\n  };\n}\nexport function addMaterialInventoryFile(inputParam, param) {\n  return dispatch => {\n    dispatch(initRequest(true));\n    let urlArray = [rsapi.post(\"/materialinventory/getMaterialInventoryLinkMaster\", {\n      nmaterialinventorycode: param.nmaterialinventorycode && param.nmaterialinventorycode,\n      userinfo: inputParam.userInfo\n    })];\n\n    if (inputParam.operation === \"update\") {\n      urlArray.push(rsapi.post(\"/materialinventory/editMaterialInventoryFile\", {\n        userinfo: inputParam.userInfo,\n        nmaterialinventorycode: param.nmaterialinventorycode && param.nmaterialinventorycode,\n        nmaterialinventoryfilecode: inputParam.selectedRecord.nmaterialinventoryfilecode\n      }));\n    }\n\n    Axios.all(urlArray).then(response => {\n      const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\n      const linkmaster = linkMap.get(\"OptionList\");\n      let selectedRecord = {};\n      const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\n      let disabled = false;\n      let editObject = {};\n\n      if (inputParam.operation === \"update\") {\n        editObject = response[1].data;\n        let nlinkcode = {};\n        let link = {};\n\n        if (editObject[\"jsondata\"].nattachmenttypecode === attachmentType.LINK) {\n          nlinkcode = {\n            \"label\": editObject[\"jsondata\"].slinkname,\n            \"value\": editObject[\"jsondata\"].nlinkcode\n          };\n          link = {\n            slinkfilename: editObject[\"jsondata\"].sfilename,\n            slinkdescription: editObject[\"jsondata\"].sdescription,\n            nlinkdefaultstatus: editObject[\"jsondata\"].ndefaultstatus,\n            sfilesize: '',\n            nfilesize: 0,\n            ndefaultstatus: 4,\n            sfilename: ''\n          };\n        } else {\n          nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\";\n          link = {\n            slinkfilename: '',\n            slinkdescription: '',\n            nlinkdefaultstatus: 4,\n            sfilesize: editObject[\"jsondata\"].sfilesize,\n            nfilesize: editObject[\"jsondata\"].nfilesize,\n            ndefaultstatus: editObject[\"jsondata\"].ndefaultstatus,\n            ssystemfilename: editObject[\"jsondata\"].ssystemfilename,\n            sfilename: editObject[\"jsondata\"].sfilename\n          };\n        }\n\n        selectedRecord = { ...link,\n          sdescription: editObject[\"jsondata\"].sdescription,\n          nmaterialinventoryfilecode: editObject[\"jsondata\"].nmaterialinventoryfilecode,\n          nattachmenttypecode: editObject[\"jsondata\"].nattachmenttypecode,\n          nlinkcode\n        };\n      } else {\n        selectedRecord = {\n          nattachmenttypecode: response[0].data.AttachmentType.length > 0 ? response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\n          nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\",\n          disabled\n        };\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openModal: true,\n          dcreateddate: inputParam.selectedRecord && rearrangeDateFormat(inputParam.userInfo, inputParam.selectedRecord.dcreateddate),\n          operation: inputParam.operation,\n          screenname: inputParam.screenName,\n          ncontrolCode: inputParam.ncontrolCode,\n          selectedRecord,\n          loading: false,\n          linkMaster: linkmaster,\n          showSaveContinue: false,\n          editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/MaterialInventoryAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","constructOptionList","parentChildComboLoad","rearrangeDateFormat","toast","Axios","initRequest","intl","attachmentType","transactionStatus","initialcombochangeMaterialInvget","nmaterialtypecode","nmaterialcatcode","data","userInfo","dispatch","post","then","response","masterData","searchedData","undefined","type","payload","loading","catch","error","formatMessage","id","message","getMaterialInventoryByID","selectedcombo","selectedcombouser","selectedMaterialcombo","Data","value","nmaterialcode","skip","take","getAddMaterialInventoryPopup","operation","ncontrolCode","selectedRecord","urlArray","timeZoneList","templateData","dataparent","withoutCombocomponent","Layout","selectedTemplate","jsondata","map","row","children","column","component","hasOwnProperty","push","componentrow","inputtype","comboComponents","displaymember","label","source","valuemember","MaterialInvreq","parameters","nusercode","MaterialInvreq1","child","childValue","parentdata","nunitcode","parentsource","parentcolumnlist","materialReq3","timezone","all","splice","temp1","temp2","slanguagetypecode","dateLables","timeZoneListMap","get","temp","SelectedMaterialCrumb","screenname","showMaterialSection","openModal","status","warn","ntranscode","RETIRED","RELEASED","MaterialInv","SelectedMaterialInventory","nmaterialinventorycode","Materialinvreq","length","EditedMaterialInventory","isSelectedRecordChange","getMaterialInventoryDetails","inputData","updateMaterialStatus","ncontrolcode","nflag","openDatePopup","ModaTitle","showModalPopup","getQuantityTransactionPopup","updateInfo","getQuantityTransaction","childcolumnlist","navailableqty","comboData","getMaterialChildValues","inputParem","childKeyname","parentDependentChild","item","primarykeyField","returnObj","comboData1","getQuantityTransactionOnchange","IDS_INVENTORYTRANSACTIONTYPE","ACTIVE","ntransactiontype","navailableqtyref","i","addMaterialInventoryFile","inputParam","param","userinfo","nmaterialinventoryfilecode","linkMap","LinkMaster","linkmaster","defaultLink","filter","items","ndefaultlink","YES","disabled","editObject","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","sdescription","nlinkdefaultstatus","ndefaultstatus","sfilesize","nfilesize","ssystemfilename","AttachmentType","FTP","dcreateddate","screenName","linkMaster","showSaveContinue","editFiles"],"mappings":"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","sourcesContent":["\r\n\r\nimport rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData, constructOptionList, parentChildComboLoad, rearrangeDateFormat } from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { attachmentType, transactionStatus } from '../components/Enumeration';\r\n\r\n\r\nexport function initialcombochangeMaterialInvget(nmaterialtypecode, nmaterialcatcode, data, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/materialinventory/getMaterialInventorycombo\", { nmaterialtypecode, nmaterialcatcode: nmaterialcatcode && nmaterialcatcode, \"userinfo\": userInfo })\r\n            .then(response => {\r\n                const masterData = { ...data, ...response.data, searchedData: undefined }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}\r\n\r\nexport function getMaterialInventoryByID(selectedcombo, selectedcombouser, selectedMaterialcombo, Data, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/materialinventory/getMaterialInventoryByID\", selectedcombouser !== undefined ? {\r\n            nmaterialtypecode: selectedcombo['nmaterialtypecode'].value !== undefined ?\r\n                selectedcombo['nmaterialtypecode'].value : selectedcombo['nmaterialtypecode'],\r\n            nmaterialcatcode: selectedcombouser['nmaterialcatcode'].value !== undefined ?\r\n                selectedcombouser['nmaterialcatcode'].value : selectedcombouser['nmaterialcatcode'],\r\n            nmaterialcode: selectedMaterialcombo[\"nmaterialcode\"].value !== undefined ?\r\n                selectedMaterialcombo[\"nmaterialcode\"].value : selectedMaterialcombo[\"nmaterialcode\"]\r\n            , \"userinfo\": userInfo\r\n        } : {\r\n            nmaterialtypecode: selectedcombo['nmaterialtypecode'].value\r\n\r\n            , \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                let masterData = {}\r\n\r\n                masterData = { ...Data, ...response.data, searchedData: undefined }\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false, skip: 0, take: 20\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}\r\nexport function getAddMaterialInventoryPopup(operation, userInfo, selectedcombo,\r\n    ncontrolCode, masterData, selectedRecord) {\r\n    return function (dispatch) {\r\n        if (operation === \"create\") {\r\n            if (selectedcombo !== undefined) {\r\n                let urlArray = [];\r\n                let timeZoneList;\r\n                let templateData = [];\r\n                let data = [];\r\n                let dataparent = [];\r\n                const withoutCombocomponent = []\r\n                const Layout = masterData.selectedTemplate[0].jsondata\r\n                Layout.map(row => {\r\n                    row.children.map(column => {\r\n                        column.children.map(component => {\r\n                            if (component.hasOwnProperty(\"parent\")) {\r\n                                dataparent.push(component)\r\n                            }\r\n                            return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                                if (componentrow.inputtype === \"combo\" && !(component.hasOwnProperty(\"parent\"))) {\r\n                                    if (componentrow.hasOwnProperty(\"parent\")) {\r\n                                        dataparent.push(componentrow)\r\n                                    }\r\n                                    else {\r\n                                        data.push(componentrow)\r\n                                    }\r\n                                }\r\n                            })\r\n                                : component.inputtype === \"combo\" && !(component.hasOwnProperty(\"parent\")) ? data.push(component) : withoutCombocomponent.push(component)\r\n                        })\r\n                    })\r\n                })\r\n                const comboComponents = data\r\n                dataparent[0] = {\r\n                    displaymember: dataparent[0].displaymember,\r\n                    inputtype: dataparent[0].inputtype,\r\n                    label: dataparent[0].label,\r\n                    source: dataparent[0].source,\r\n                    type: dataparent[0].type,\r\n                    valuemember: dataparent[0].valuemember\r\n                }\r\n                const MaterialInvreq = rsapi.post(\"dynamicpreregdesign/getComboValues\",\r\n                    {\r\n                        \"nunitcode\": selectedcombo['jsondata'][\"nunitcode\"].value\r\n                        , \"userinfo\": userInfo, \"parentcolumnlist\": comboComponents,\r\n                        parameters: { nusercode: userInfo.nusercode }\r\n                    });\r\n                const MaterialInvreq1 = rsapi.post('dynamicpreregdesign/getChildValues', {\r\n                    child: Layout[0].children[0].children[0].childValue,\r\n                    parentdata: { nunitcode: selectedcombo['jsondata'][\"nunitcode\"].value },\r\n                    parentsource: 'unit',\r\n                    'nunitcode': selectedcombo['jsondata'][\"nunitcode\"].value,\r\n                    valuemember: 'nunitcode',\r\n                    userInfo,\r\n                    parentcolumnlist: dataparent\r\n                });\r\n                const materialReq3 = rsapi.post('materialinventory/getMaterialInventoryByID', {\r\n                    'nmaterialcatcode': masterData['SelectedMaterialCategory'].nmaterialcatcode,\r\n                    'nmaterialtypecode': masterData['SelectedMaterialType'][0].nmaterialtypecode,\r\n                    'nmaterialcode': masterData['SelectedMaterialCrumb']['jsondata'].nmaterialcode,\r\n                    'userinfo': userInfo\r\n                });\r\n                const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n                urlArray = [MaterialInvreq, MaterialInvreq1, timezone, materialReq3];\r\n                dispatch(initRequest(true));\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        templateData = response[0].data;\r\n                        data.splice(1, 0, dataparent[0])\r\n                        let temp1 = []\r\n                        const temp2 = { ...response[0].data, ...response[1].data }\r\n                        templateData = parentChildComboLoad(data, temp2, selectedRecord, null, withoutCombocomponent, undefined, userInfo.slanguagetypecode)\r\n                        let dateLables = []\r\n                        const Layout = masterData.selectedTemplate[0].jsondata\r\n                        Layout.map((row) => {\r\n                            row.children.map((column) => {\r\n                                column.children.map((component) => {\r\n                                    if (component.inputtype === 'combo') {\r\n                                        selectedRecord[component.label] = templateData[\"comboData\"][component.label]\r\n                                            && templateData[\"comboData\"][component.label][0]\r\n                                    }\r\n                                    else if (component.inputtype === 'date') {\r\n                                        if (component.hasOwnProperty('timezone'))\r\n                                            dateLables.push(component.label)\r\n\r\n                                    }\r\n                                    component.hasOwnProperty(\"children\") && component.children.map(\r\n                                        (componentrow) => {\r\n                                            if (componentrow.inputtype === 'combo') {\r\n                                                selectedRecord[componentrow.label] = templateData[\"comboData\"][componentrow.label]\r\n                                                    && templateData[\"comboData\"][componentrow.label][0]\r\n                                            }\r\n                                            else if (componentrow.inputtype === 'date') {\r\n                                                if (componentrow.hasOwnProperty('timezone'))\r\n                                                    dateLables.push(componentrow.label)\r\n\r\n                                            }\r\n\r\n                                        }\r\n                                    )\r\n                                })\r\n                            })\r\n                        })\r\n                        if (dateLables) {\r\n                            const timeZoneListMap = constructOptionList(response[2].data || [], \"ntimezonecode\",\r\n                                \"stimezoneid\", undefined, undefined, true);\r\n                            timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n                            dateLables.map((temp) => {\r\n                                selectedRecord[`tz${temp}`] = timeZoneList[0]\r\n                            })\r\n                        }\r\n                        masterData['SelectedMaterialCrumb'] = response[3].data.SelectedMaterialCrumb\r\n                        dispatch({\r\n\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                operation, timeZoneList, screenname: 'IDS_MATERIALINVENTORY', masterData, selectedRecord, showMaterialSection: false, templateData, openModal: true,\r\n                                ncontrolCode, loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(intl.formatMessage({ id: error.message }));\r\n                        }\r\n                        else {\r\n                            toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({ id: 'IDS_CONFIGMATERIAL' }));\r\n            }\r\n        }\r\n        else {\r\n            let urlArray = [];\r\n            let templateData = [];\r\n            let data = [];\r\n            let dataparent = [];\r\n            let dateLables = [];\r\n            let timeZoneList;\r\n            const withoutCombocomponent = []\r\n            const Layout = masterData.selectedTemplate[0].jsondata\r\n            if (masterData[\"SelectedMaterialInventory\"].jsondata.ntranscode !== transactionStatus.RETIRED &&\r\n                masterData[\"SelectedMaterialInventory\"].jsondata.ntranscode !== transactionStatus.RELEASED\r\n                && masterData[\"SelectedMaterialInventory\"].jsondata.ntranscode !== 55) {\r\n                Layout.map(row => {\r\n                    row.children.map(column => {\r\n                        column.children.map(component => {\r\n                            if (component.hasOwnProperty(\"parent\")) {\r\n                                dataparent.push(component)\r\n                            }\r\n                            if (component.hasOwnProperty('timezone')) {\r\n                                dateLables.push(component.label)\r\n                            }\r\n                            return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                                if (componentrow.inputtype === \"combo\" && !(component.hasOwnProperty(\"parent\"))) {\r\n                                    if (componentrow.hasOwnProperty(\"parent\")) {\r\n                                        dataparent.push(componentrow)\r\n                                    }\r\n                                    else {\r\n                                        data.push(componentrow)\r\n                                    }\r\n                                }\r\n                                if (component.hasOwnProperty('timezone')) {\r\n                                    dateLables.push(component.label)\r\n                                }\r\n                            })\r\n                                : component.inputtype === \"combo\" && !(component.hasOwnProperty(\"parent\")) ? data.push(component) : withoutCombocomponent.push(component)\r\n                        })\r\n                    })\r\n                })\r\n                const comboComponents = data\r\n                const MaterialInv = rsapi.post(\"/materialinventory/getMaterialInventoryEdit\",\r\n                    {\r\n                        'nmaterialtypecode': masterData.SelectedMaterialInventory.jsondata.nmaterialtypecode,\r\n                        'nmaterialinventorycode': masterData.SelectedMaterialInventory.jsondata.nmaterialinventorycode, \"userinfo\": userInfo\r\n                    });\r\n                dataparent[0] = {\r\n                    displaymember: dataparent[0].displaymember,\r\n                    inputtype: dataparent[0].inputtype,\r\n                    label: dataparent[0].label,\r\n                    source: dataparent[0].source,\r\n                    type: dataparent[0].type,\r\n                    valuemember: dataparent[0].valuemember\r\n                }\r\n                const Materialinvreq = rsapi.post(\"dynamicpreregdesign/getComboValues\",\r\n                    {\r\n                        \"nunitcode\": selectedcombo['jsondata'][\"nunitcode\"].value\r\n                        , \"userinfo\": userInfo, \"parentcolumnlist\": comboComponents,\r\n                        parameters: { nusercode: userInfo.nusercode }\r\n                    });\r\n                const MaterialInvreq1 = rsapi.post('dynamicpreregdesign/getChildValues', {\r\n                    child: Layout[0].children[0].children[0].childValue,\r\n                    parentdata: { nunitcode: selectedcombo['jsondata'][\"nunitcode\"].value },\r\n                    parentsource: 'unit',\r\n                    'nunitcode': selectedcombo['jsondata'][\"nunitcode\"].value,\r\n                    valuemember: 'nunitcode',\r\n                    userInfo,\r\n                    parentcolumnlist: dataparent\r\n                });\r\n                const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n                const materialReq3 = rsapi.post('materialinventory/getMaterialInventoryByID', {\r\n                    'nmaterialcatcode': masterData['SelectedMaterialCategory'].nmaterialcatcode,\r\n                    'nmaterialtypecode': masterData['SelectedMaterialType'][0].nmaterialtypecode,\r\n                    'nmaterialcode': masterData['SelectedMaterialCrumb']['jsondata'].nmaterialcode,\r\n                    'userinfo': userInfo\r\n                });\r\n                urlArray = [Materialinvreq, MaterialInvreq1, MaterialInv, timezone, materialReq3];\r\n\r\n                dispatch(initRequest(true));\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        templateData = response[0].data;\r\n                        data = [...data, ...dataparent]\r\n                        templateData = parentChildComboLoad(data, { ...response[0].data, ...response[1].data }, selectedRecord, null, withoutCombocomponent, undefined, userInfo.slanguagetypecode)\r\n\r\n                        if (response[2].data[\"EditedMaterialInventory\"].length > 0) {\r\n                            if (response[2].data[\"MaterialInventoryDateFeild\"]) {\r\n                                response[2].data[\"MaterialInventoryDateFeild\"].map((temp) => {\r\n                                    response[2].data[\"EditedMaterialInventory\"][0].jsondata[temp] =\r\n                                        rearrangeDateFormat(userInfo, response[2].data[\"EditedMaterialInventory\"][0].jsondata[temp])\r\n                                })\r\n                            }\r\n                        }\r\n                        selectedRecord = { ...selectedRecord, ...response[2].data.EditedMaterialInventory[0].jsondata }\r\n                        if (dateLables) {\r\n                            const timeZoneListMap = constructOptionList(response[3].data || [], \"ntimezonecode\",\r\n                                \"stimezoneid\", undefined, undefined, true);\r\n                            timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n\r\n                            response[2].data[\"DateFeildsInventory\"].map((temp) => {\r\n                                if (!selectedRecord.hasOwnProperty(temp)) {\r\n                                    selectedRecord[`tz${temp}`] = timeZoneList[0]\r\n                                }\r\n                            })\r\n                        }\r\n                        masterData['SelectedMaterialCrumb'] = response[4].data.SelectedMaterialCrumb\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                operation, screenname: 'IDS_MATERIALINVENTORY', timeZoneList, masterData, isSelectedRecordChange: false, showMaterialSection: false, templateData, openModal: true, selectedcombo, selectedRecord,\r\n                                ncontrolCode, loading: false\r\n                            }\r\n                        });\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(intl.formatMessage({ id: error.message }));\r\n                        }\r\n                        else {\r\n                            toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_SELECTQUARENTINEINVENTORY\" }));\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\nexport function getMaterialInventoryDetails(inputData, masterData, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"materialinventory/getMaterialInventoryDetails\", {\r\n            \"nmaterialcode\": inputData.nmaterialcode,\r\n            \"nmaterialcatcode\": inputData.nmaterialcatcode,\r\n            \"nmaterialtypecode\": inputData.nmaterialtypecode,\r\n            \"nmaterialinventorycode\": inputData.nmaterialinventorycode,\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport function updateMaterialStatus(masterData, userInfo, ncontrolcode, nflag) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"materialinventory/updateMaterialStatus\", {\r\n            nflag: nflag,\r\n            nmaterialinventorycode: masterData[\"SelectedMaterialInventory\"].jsondata.nmaterialinventorycode,\r\n            nmaterialcode: masterData[\"SelectedMaterialInventory\"].jsondata.nmaterialcode,\r\n            nmaterialtypecode: masterData[\"SelectedMaterialInventory\"].jsondata.nmaterialtypecode,\r\n            nmaterialcatcode: masterData[\"SelectedMaterialInventory\"].jsondata.nmaterialcatcode,\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function openDatePopup(masterData, ncontrolCode) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"timezone/getTimeZone\")\r\n            .then(response => {\r\n                let selectedRecord = {};\r\n                // const timeZoneListMap = constructOptionList(response.data || [], \"ntimezonecode\",\r\n                //     \"stimezoneid\", undefined, undefined, true);\r\n                // const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n                // selectedRecord = { 'tzIDS_OPENDATE': timeZoneList[0] }\r\n              //  dispatch({ type: DEFAULT_RETURN, payload: { timeZoneList, ncontrolCode, selectedRecord, ModaTitle: 'IDS_OPENDATE', showModalPopup: true, masterData, loading: false } });\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: {  ncontrolCode, selectedRecord, ModaTitle: 'IDS_OPENDATE', showModalPopup: true, masterData, loading: false } });\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function getQuantityTransactionPopup(Data, userInfo, updateInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [];\r\n        let  timeZoneList;\r\n        const getQuantityTransaction = rsapi.post(\"/materialinventory/getQuantityTransaction\",\r\n            {\r\n                \"userinfo\": userInfo, 'nmaterialtypecode': Data[\"SelectedMaterialType\"][\"nmaterialtypecode\"],\r\n                nmaterialinventorycode: Data[\"SelectedMaterialInventory\"][\"nmaterialinventorycode\"]\r\n                , nflag: 1\r\n            })\r\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n        urlArray = [getQuantityTransaction, timezone]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let masterData = {}\r\n                let templateData = [];\r\n                let selectedRecord = {};\r\n                masterData = { ...Data, ...response[0].data, searchedData: undefined }\r\n                templateData = parentChildComboLoad(response[0].data.parentcolumnlist, response[0].data, selectedRecord, response[0].data.childcolumnlist, undefined, undefined, userInfo.slanguagetypecode)\r\n                selectedRecord = {\r\n                    ...templateData.selectedRecord,\r\n                    'IDS_SECTION': Data['SelectedMaterialInventory']['jsondata']['IDS_SECTION'],\r\n                    'IDS_AVAILABLEQUANTITY': response[0].data.navailableqty,\r\n                }\r\n                // const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                //     \"stimezoneid\", undefined, undefined, true);\r\n                // const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n                // response[0].data[\"DateFeildsProperties\"].map((temp) => {\r\n                //     if (!selectedRecord.hasOwnProperty(temp)) {\r\n                //         selectedRecord[`tz${temp}`] = timeZoneList[0]\r\n                //     }\r\n                // })\r\n                masterData['QuantityTransactionTemplate'][0].jsondata.map((row) => {\r\n                    row.children.map((column) => {\r\n                        column.children.map((component) => {\r\n                            if (component.inputtype === 'combo') {\r\n                                if (selectedRecord[component.label] === undefined) {\r\n                                    selectedRecord[component.label] = templateData.comboData[component.label][0]\r\n                                }\r\n                            }\r\n                            if (component.inputtype === 'date') {\r\n                                if (component.hasOwnProperty('timezone')) {\r\n                                    const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                                        \"stimezoneid\", undefined, undefined, true);\r\n                                    const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n                                    response[0].data[\"DateFeildsProperties\"].map((temp) => {\r\n                                        if (!selectedRecord.hasOwnProperty(temp)) {\r\n                                            selectedRecord[`tz${temp}`] = timeZoneList[0]\r\n                                        }\r\n                                    })\r\n                                }\r\n                            }\r\n\r\n                        })\r\n                    })\r\n                })\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        operation: \"create\", selectedRecord, templateData, timeZoneList, navailableqty: response[0].data.navailableqty,\r\n                        masterData, updateInfo, ncontrolCode, openModal: true, screenname: \"IDS_QUANTITYTRANSACTION\",\r\n                        loading: false, skip: 0, take: 20\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(error);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getMaterialChildValues(inputParem, userInfo, selectedRecord,\r\n    parentcolumnlist, childcolumnlist, comboData, childKeyname, parentDependentChild, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('dynamicpreregdesign/getChildValues', {\r\n            child: inputParem.child,\r\n            parentdata: inputParem.item.jsondata,\r\n            parentsource: inputParem.source,\r\n            [inputParem.primarykeyField]: inputParem.value,\r\n            valuemember: inputParem.primarykeyField,\r\n            userInfo,\r\n            parentcolumnlist: childcolumnlist[childKeyname]\r\n        })\r\n            .then(response => {\r\n                let templateData = [];\r\n                let temp = selectedRecord[childKeyname]\r\n                let returnObj = { ...comboData, ...response.data }\r\n                templateData = parentChildComboLoad(parentcolumnlist, returnObj, selectedRecord, childcolumnlist, undefined, undefined, userInfo.slanguagetypecode)\r\n                 selectedRecord[childKeyname] = temp\r\n                 selectedRecord = { ...selectedRecord, [parentDependentChild]: templateData['comboData'][parentDependentChild][0] }\r\n                 const comboData1 = { value: selectedRecord['IDS_TRANSACTIONTYPE'].value }\r\n              dispatch(getQuantityTransactionOnchange(comboData1, masterData, userInfo, selectedRecord, templateData));\r\n                // dispatch( type: DEFAULT_RETURN, payload: {templateData,selectedRecord});\r\n                //  dispatch({\r\n                //     type: DEFAULT_RETURN,\r\n                //     payload: {\r\n                //         templateData,selectedRecord,loading: false\r\n                //     }\r\n                // });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(error);\r\n            });\r\n    }\r\n}\r\nexport function getQuantityTransactionOnchange(comboData, Data, userInfo, selectedRecord, templateData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/materialinventory/getQuantityTransaction\",\r\n            {\r\n                \"userinfo\": userInfo, 'nmaterialtypecode': Data[\"SelectedMaterialType\"][\"nmaterialtypecode\"],\r\n                nmaterialinventorycode: Data[\"SelectedMaterialInventory\"][\"nmaterialinventorycode\"]\r\n                , nflag: selectedRecord.IDS_INVENTORYTRANSACTIONTYPE.value === transactionStatus.ACTIVE ? 2 : 3,\r\n                ntransactiontype: comboData.value\r\n            })\r\n            .then(response => {\r\n                let masterData = {}\r\n                let navailableqtyref = {}\r\n                masterData = { ...Data, ...response.data }\r\n                selectedRecord = {\r\n                    ...selectedRecord,\r\n                    'IDS_AVAILABLEQUANTITY': response.data.navailableqty,\r\n                }\r\n                navailableqtyref = response.data.navailableqtyref\r\n                if (selectedRecord['IDS_TRANSACTIONTYPE'].value === 47) {\r\n                    masterData['QuantityTransactionTemplate'][0].jsondata.map((row) => {\r\n                        row.children.map((column) => {\r\n                            column.children.map((component, i) => {\r\n                                if (component.label === 'IDS_AVAILABLEQUANTITY') {\r\n                                    delete column.children[i]\r\n                                }\r\n                            })\r\n                        })\r\n                    })\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        operation: \"create\", selectedRecord, templateData, navailableqtyref,\r\n                        masterData, openModal: true, screenname: \"IDS_QUANTITYTRANSACTION\",\r\n                        loading: false, skip: 0, take: 20\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(error);\r\n            });\r\n    }\r\n}\r\n\r\nexport function addMaterialInventoryFile(inputParam, param) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [rsapi.post(\"/materialinventory/getMaterialInventoryLinkMaster\", {\r\n            nmaterialinventorycode: param.nmaterialinventorycode && param.nmaterialinventorycode,\r\n            userinfo: inputParam.userInfo\r\n        })];\r\n        if (inputParam.operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"/materialinventory/editMaterialInventoryFile\", {\r\n                userinfo: inputParam.userInfo,\r\n                nmaterialinventorycode: param.nmaterialinventorycode && param.nmaterialinventorycode,\r\n                nmaterialinventoryfilecode: inputParam.selectedRecord.nmaterialinventoryfilecode\r\n            }))\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                const linkmaster = linkMap.get(\"OptionList\");\r\n                let selectedRecord = {};\r\n                const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                let disabled = false;\r\n                let editObject = {};\r\n                if (inputParam.operation === \"update\") {\r\n                    editObject = response[1].data;\r\n                    let nlinkcode = {};\r\n                    let link = {};\r\n                    if (editObject[\"jsondata\"].nattachmenttypecode === attachmentType.LINK) {\r\n                        nlinkcode = {\r\n                            \"label\": editObject[\"jsondata\"].slinkname,\r\n                            \"value\": editObject[\"jsondata\"].nlinkcode\r\n                        }\r\n\r\n                        link = {\r\n                            slinkfilename: editObject[\"jsondata\"].sfilename,\r\n                            slinkdescription: editObject[\"jsondata\"].sdescription,\r\n                            nlinkdefaultstatus: editObject[\"jsondata\"].ndefaultstatus,\r\n                            sfilesize: '',\r\n                            nfilesize: 0,\r\n                            ndefaultstatus: 4,\r\n                            sfilename: '',\r\n                        }\r\n\r\n                    } else {\r\n                        nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\"\r\n                        link = {\r\n                            slinkfilename: '',\r\n                            slinkdescription: '',\r\n                            nlinkdefaultstatus: 4,\r\n                            sfilesize: editObject[\"jsondata\"].sfilesize,\r\n                            nfilesize: editObject[\"jsondata\"].nfilesize,\r\n                            ndefaultstatus: editObject[\"jsondata\"].ndefaultstatus,\r\n                            ssystemfilename: editObject[\"jsondata\"].ssystemfilename,\r\n                            sfilename: editObject[\"jsondata\"].sfilename,\r\n                        }\r\n                    }\r\n                    selectedRecord = {\r\n                        ...link,\r\n                        sdescription: editObject[\"jsondata\"].sdescription,\r\n                        nmaterialinventoryfilecode: editObject[\"jsondata\"].nmaterialinventoryfilecode,\r\n                        nattachmenttypecode: editObject[\"jsondata\"].nattachmenttypecode,\r\n                        nlinkcode,\r\n                    };\r\n                } else {\r\n                    selectedRecord = {\r\n                        nattachmenttypecode: response[0].data.AttachmentType.length > 0 ?\r\n                            response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\r\n                        nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\",\r\n                        disabled\r\n                    };\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openModal: true,\r\n                        dcreateddate: inputParam.selectedRecord && rearrangeDateFormat(inputParam.userInfo, inputParam.selectedRecord.dcreateddate),\r\n                        operation: inputParam.operation,\r\n                        screenname: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        linkMaster: linkmaster,\r\n                        showSaveContinue: false,\r\n                        editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}