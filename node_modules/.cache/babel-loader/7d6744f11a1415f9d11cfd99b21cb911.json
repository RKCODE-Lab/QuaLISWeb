{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{constructOptionList,sortData}from'../components/CommonScript';import{intl}from'../components/App';import{transactionStatus,attachmentType}from'../components/Enumeration';export function getClientComboService(clientparam){return function(dispatch){if(clientparam.nfilterClientCategory&&Object.values(clientparam.nfilterClientCategory).length>0){if(clientparam.operation===\"create\"||clientparam.operation===\"update\"){var countryService=rsapi.post(\"country/getCountry\",{userinfo:clientparam.userInfo});var clientCatService=rsapi.post(\"clientcategory/getClientCategory\",{userinfo:clientparam.userInfo});var urlArray=[];var selectedId=null;if(clientparam.operation===\"create\"){urlArray=[countryService,clientCatService];}else{var _rsapi$post;var clientById=rsapi.post(\"client/getActiveClientById\",(_rsapi$post={},_defineProperty(_rsapi$post,clientparam.primaryKeyField,clientparam.masterData.selectedClient[clientparam.primaryKeyField]),_defineProperty(_rsapi$post,\"userinfo\",clientparam.userInfo),_rsapi$post));urlArray=[countryService,clientById,clientCatService];selectedId=clientparam.primaryKeyValue;}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var country=[];var clientCaegory=[];var selectedRecord={};if(clientparam.operation===\"update\"){selectedRecord=response[1].data;country.push({\"value\":response[1].data[\"ncountrycode\"],\"label\":response[1].data[\"scountryname\"]});selectedRecord[\"ncountrycode\"]=country[0];var clientCatList=constructOptionList(response[2].data||[],\"nclientcatcode\",\"sclientcatname\",undefined,undefined,undefined);clientCaegory=clientCatList.get(\"OptionList\");selectedRecord['nclientcatcode']={\"value\":response[1].data[\"nclientcatcode\"],\"label\":response[1].data[\"sclientcatname\"]};}else{selectedRecord[\"ntransactionstatus\"]=1;var _clientCatList=constructOptionList(response[1].data||[],\"nclientcatcode\",\"sclientcatname\",undefined,undefined,undefined);clientCaegory=_clientCatList.get(\"OptionList\");selectedRecord[\"nclientcatcode\"]=clientparam.nfilterClientCategory.value===-2?clientCaegory.length>0?clientCaegory[0]:\"\":clientparam.nfilterClientCategory;}dispatch({type:DEFAULT_RETURN,payload:{countryList:response[0].data||[],clientCategoryList:clientCaegory,selectedRecord:selectedRecord,openModal:true,operation:clientparam.operation,screenName:clientparam.screenName,ncontrolCode:clientparam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}}else{toast.warn(intl.formatMessage({id:\"IDS_CLIENTCATEGORYNOTAVAILABLE\"}));}};}export var changeClientCategoryFilter=function changeClientCategoryFilter(inputParam,filterClientCategory,nfilterClientCategory){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/client/get\"+inputParam.methodUrl,inputParam.inputData).then(function(response){var masterData=response.data;sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:_objectSpread(_objectSpread({},masterData),{},{filterClientCategory:filterClientCategory,nfilterClientCategory:nfilterClientCategory// nfilterClientCategory: inputParam.inputData.nfilterClientCategory\n})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export function getClientDetail(client,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"client/getSelectedClientDetail\",{nclientcode:client.nclientcode,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getClientSiteForAddEdit(screenName,operation,nclientcode,nclientsitecode,ncontrolCode,userInfo){return function(dispatch){var urlArray=[];var selectedRecord={};if(operation===\"create\"){var Country=rsapi.post(\"/country/getCountry\",{\"userinfo\":userInfo});urlArray=[Country];}else{var _Country=rsapi.post(\"/country/getCountry\",{\"userinfo\":userInfo});var clientSiteByID=rsapi.post(\"/client/getClientSiteAddressById\",{\"nclientcode\":nclientcode,\"nclientsitecode\":nclientsitecode,\"userinfo\":userInfo});urlArray=[_Country,clientSiteByID];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var countryCode=[];var countryMap=constructOptionList(response[0].data||[],\"ncountrycode\",\"scountryname\",undefined,undefined,true);var countryList=countryMap.get(\"OptionList\");if(operation===\"update\"){selectedRecord=response[1].data;selectedRecord[\"ncountrycode\"]={label:response[1].data[\"scountryname\"],value:response[1].data[\"ncountrycode\"]};}dispatch({type:DEFAULT_RETURN,payload:{Country:countryList,openChildModal:true,operation:operation,selectedRecord:operation===\"update\"?selectedRecord:{\"ntransactionstatus\":transactionStatus.ACTIVE,\"ndefaultstatus\":transactionStatus.NO},countryCode:countryCode,ncontrolCode:ncontrolCode,screenName:\"IDS_CLIENTSITE\",loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getClientSiteContactDetails(inputParam){return function(dispatch){var Map={};Map[\"nclientcode\"]=inputParam.clientSite.nclientcode;Map[\"nclientsitecode\"]=inputParam.clientSite.nclientsitecode;Map[\"userinfo\"]=inputParam.userInfo;dispatch(initRequest(true));rsapi.post(\"/client/getClientContactInfoBySite\",Map).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),{},{ClientContact:response.data,selectedClientSite:inputParam.clientSite});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getClientContactForAddEdit(fetchRecord){return function(dispatch){var urlArray=[];var selectedId=null;var ClientContactByID=rsapi.post(\"/client/getClientContactInfoById\",{\"nclientcode\":fetchRecord.editRow.nclientcode,\"nclientsitecode\":fetchRecord.editRow.nclientsitecode,\"nclientcontactcode\":fetchRecord.editRow.nclientcontactcode,\"userinfo\":fetchRecord.userInfo});urlArray=[ClientContactByID];selectedId=fetchRecord.editRow.nclientcontactcode;dispatch(initRequest(true));Axios.all(urlArray).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,operation:fetchRecord.operation,selectedRecord:fetchRecord.operation===\"update\"?response[0].data:undefined,defaultSite:fetchRecord.editRow.nclientsitecode,ncontrolCode:fetchRecord.ncontrolCode,screenName:\"IDS_CLIENTCONTACT\",loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export var addClientFile=function addClientFile(inputParam){return function(dispatch){dispatch(initRequest(true));var urlArray=[rsapi.post(\"/linkmaster/getLinkMaster\",{userinfo:inputParam.userInfo})];if(inputParam.operation===\"update\"){urlArray.push(rsapi.post(\"/client/editClientFile\",{userinfo:inputParam.userInfo,clientfile:inputParam.selectedRecord}));}Axios.all(urlArray).then(function(response){var _payload;var linkMap=constructOptionList(response[0].data.LinkMaster,\"nlinkcode\",\"slinkname\",false,false,true);var linkmaster=linkMap.get(\"OptionList\");var selectedRecord={};var defaultLink=linkmaster.filter(function(items){return items.item.ndefaultlink===transactionStatus.YES;});var disabled=false;var editObject={};if(inputParam.operation===\"update\"){editObject=response[1].data;var nlinkcode={};var link={};if(editObject.nattachmenttypecode===attachmentType.LINK){nlinkcode={\"label\":editObject.slinkname,\"value\":editObject.nlinkcode};link={slinkfilename:editObject.sfilename,slinkdescription:editObject.sdescription,nlinkdefaultstatus:editObject.ndefaultstatus,sfilesize:'',nfilesize:0,ndefaultstatus:4,sfilename:''};}else{nlinkcode=defaultLink.length>0?defaultLink[0]:\"\";//{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\nlink={slinkfilename:'',slinkdescription:'',nlinkdefaultstatus:4,sfilesize:editObject.sfilesize,nfilesize:editObject.nfilesize,ndefaultstatus:editObject.ndefaultstatus,sfilename:editObject.sfilename,sdescription:editObject.sdescription,ssystemfilename:editObject.ssystemfilename};}selectedRecord=_objectSpread(_objectSpread({},link),{},{nclientfilecode:editObject.nclientfilecode,nattachmenttypecode:editObject.nattachmenttypecode,// sdescription:editObject.sdescription,\nnlinkcode:nlinkcode// disabled: true\n});}else{selectedRecord={nattachmenttypecode:response[0].data.AttachmentType.length>0?response[0].data.AttachmentType[0].nattachmenttypecode:attachmentType.FTP,nlinkcode:defaultLink.length>0?defaultLink[0]:\"\",//{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\ndisabled:disabled};}dispatch({type:DEFAULT_RETURN,payload:(_payload={},_defineProperty(_payload,inputParam.modalName,true),_defineProperty(_payload,\"operation\",inputParam.operation),_defineProperty(_payload,\"screenName\",inputParam.screenName),_defineProperty(_payload,\"ncontrolCode\",inputParam.ncontrolCode),_defineProperty(_payload,\"selectedRecord\",selectedRecord),_defineProperty(_payload,\"loading\",false),_defineProperty(_payload,\"linkMaster\",linkmaster),_defineProperty(_payload,\"showSaveContinue\",false),_defineProperty(_payload,\"editFiles\",editObject.nattachmenttypecode===attachmentType.FTP?editObject:{}),_payload)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/actions/ClientAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","constructOptionList","sortData","intl","transactionStatus","attachmentType","getClientComboService","clientparam","dispatch","nfilterClientCategory","Object","values","length","operation","countryService","post","userinfo","userInfo","clientCatService","urlArray","selectedId","clientById","primaryKeyField","masterData","selectedClient","primaryKeyValue","all","then","response","country","clientCaegory","selectedRecord","data","push","clientCatList","undefined","get","value","type","payload","countryList","clientCategoryList","openModal","screenName","ncontrolCode","loading","catch","error","status","message","warn","formatMessage","id","changeClientCategoryFilter","inputParam","filterClientCategory","methodUrl","inputData","getClientDetail","client","nclientcode","modalName","getClientSiteForAddEdit","nclientsitecode","Country","clientSiteByID","countryCode","countryMap","label","openChildModal","ACTIVE","NO","getClientSiteContactDetails","Map","clientSite","ClientContact","selectedClientSite","dataState","getClientContactForAddEdit","fetchRecord","ClientContactByID","editRow","nclientcontactcode","defaultSite","addClientFile","clientfile","linkMap","LinkMaster","linkmaster","defaultLink","filter","items","item","ndefaultlink","YES","disabled","editObject","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","sdescription","nlinkdefaultstatus","ndefaultstatus","sfilesize","nfilesize","ssystemfilename","nclientfilecode","AttachmentType","FTP"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { constructOptionList, sortData } from '../components/CommonScript';\r\nimport { intl } from '../components/App';\r\nimport { transactionStatus ,attachmentType} from '../components/Enumeration';\r\n\r\n\r\nexport function getClientComboService(clientparam) {\r\n    return function (dispatch) {\r\n        if (clientparam.nfilterClientCategory && Object.values(clientparam.nfilterClientCategory).length > 0) {\r\n        if (clientparam.operation === \"create\" || clientparam.operation === \"update\") {\r\n            const countryService = rsapi.post(\"country/getCountry\", { userinfo: clientparam.userInfo });\r\n            const clientCatService = rsapi.post(\"clientcategory/getClientCategory\", { userinfo: clientparam.userInfo });\r\n            let urlArray = [];\r\n            let selectedId = null;\r\n            if (clientparam.operation === \"create\") {\r\n\r\n                urlArray = [countryService,clientCatService];\r\n            }\r\n            else {\r\n                const clientById = rsapi.post(\"client/getActiveClientById\", { [clientparam.primaryKeyField]: clientparam.masterData.selectedClient[clientparam.primaryKeyField], \"userinfo\": clientparam.userInfo });\r\n\r\n                urlArray = [countryService, clientById,clientCatService];\r\n                selectedId = clientparam.primaryKeyValue;\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let country = [];\r\n                    let clientCaegory = [];\r\n                    let selectedRecord = {};\r\n                    if (clientparam.operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n                        country.push({ \"value\": response[1].data[\"ncountrycode\"], \"label\": response[1].data[\"scountryname\"] });\r\n                        selectedRecord[\"ncountrycode\"] = country[0];\r\n\r\n                        const clientCatList = constructOptionList(response[2].data || [], \"nclientcatcode\",\r\n                        \"sclientcatname\", undefined, undefined, undefined);\r\n                        clientCaegory = clientCatList.get(\"OptionList\");\r\n                        selectedRecord['nclientcatcode']={ \"value\": response[1].data[\"nclientcatcode\"], \"label\": response[1].data[\"sclientcatname\"] }\r\n                    } else {\r\n                        selectedRecord[\"ntransactionstatus\"] = 1;\r\n                        const clientCatList = constructOptionList(response[1].data || [], \"nclientcatcode\",\r\n                        \"sclientcatname\", undefined, undefined, undefined);\r\n                        clientCaegory = clientCatList.get(\"OptionList\");\r\n                        selectedRecord[\"nclientcatcode\"]= clientparam.nfilterClientCategory.value === -2 ? (clientCaegory.length > 0 ?\r\n                            clientCaegory[0] : \"\") : clientparam.nfilterClientCategory\r\n                    }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            countryList: response[0].data || [],\r\n                            clientCategoryList:clientCaegory,\r\n                            selectedRecord, openModal: true,\r\n                            operation: clientparam.operation, screenName: clientparam.screenName,\r\n                            ncontrolCode: clientparam.ncontrolCode, loading: false, selectedId\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_CLIENTCATEGORYNOTAVAILABLE\"\r\n            }))\r\n        }\r\n    }\r\n \r\n}\r\n\r\n\r\nexport const changeClientCategoryFilter = (inputParam, filterClientCategory, nfilterClientCategory) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/client/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            filterClientCategory,\r\n                            nfilterClientCategory\r\n                            // nfilterClientCategory: inputParam.inputData.nfilterClientCategory\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getClientDetail (client, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"client/getSelectedClientDetail\", {nclientcode:client.nclientcode, userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\nexport function getClientSiteForAddEdit(screenName, operation, nclientcode, nclientsitecode, ncontrolCode, userInfo){\r\n    return function(dispatch){ \r\n    let urlArray = [];\r\n    let selectedRecord = {};\r\n\r\n    if (operation === \"create\") {\r\n        const Country = rsapi.post(\"/country/getCountry\", { \"userinfo\": userInfo });\r\n        urlArray = [Country];\r\n    }\r\n    else {\r\n\r\n        const Country = rsapi.post(\"/country/getCountry\", { \"userinfo\": userInfo });\r\n        const clientSiteByID = rsapi.post(\"/client/getClientSiteAddressById\", { \"nclientcode\": nclientcode, \"nclientsitecode\": nclientsitecode ,\"userinfo\": userInfo});\r\n        urlArray = [Country, clientSiteByID];\r\n    }\r\n\r\n    dispatch(initRequest(true));\r\n    Axios.all(urlArray)\r\n        .then(response => {\r\n\r\n            let countryCode = [];\r\n\r\n            const countryMap = constructOptionList(response[0].data || [], \"ncountrycode\",\r\n            \"scountryname\", undefined, undefined, true);\r\n\r\n            const countryList = countryMap.get(\"OptionList\");\r\n\r\n\r\n            if (operation === \"update\") {\r\n\r\n                selectedRecord = response[1].data;\r\n                selectedRecord[\"ncountrycode\"] = {\r\n                    label: response[1].data[\"scountryname\"],\r\n                    value: response[1].data[\"ncountrycode\"]\r\n                };\r\n            \r\n            }\r\n\r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                Country: countryList, openChildModal:true, operation, \r\n                selectedRecord: operation === \"update\" ? selectedRecord : {\"ntransactionstatus\": transactionStatus.ACTIVE,\"ndefaultstatus\":transactionStatus.NO}, countryCode: countryCode, ncontrolCode,\r\n                screenName: \"IDS_CLIENTSITE\", loading:false\r\n             }});\r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500) {\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({ id: error.response.data }));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport function getClientSiteContactDetails(inputParam){\r\n    return function(dispatch){ \r\n    let Map={};\r\n \r\n    Map[\"nclientcode\"]=inputParam.clientSite.nclientcode;\r\n    Map[\"nclientsitecode\"]=inputParam.clientSite.nclientsitecode;\r\n    Map[\"userinfo\"]=inputParam.userInfo;\r\n    dispatch(initRequest(true));\r\n    rsapi.post(\"/client/getClientContactInfoBySite\",Map)\r\n    .then(response =>{          \r\n       let masterData = {...inputParam.masterData, ClientContact: response.data,\r\n            selectedClientSite:  inputParam.clientSite,\r\n            };     \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, loading:false, dataState: undefined}}); \r\n\r\n    })\r\n    .catch(error =>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n    })\r\n}\r\n}\r\nexport function getClientContactForAddEdit(fetchRecord){\r\n    return function(dispatch){ \r\n    let urlArray = [];\r\n    let selectedId = null;\r\n    const ClientContactByID = rsapi.post(\"/client/getClientContactInfoById\", { \"nclientcode\": fetchRecord.editRow.nclientcode, \"nclientsitecode\": fetchRecord.editRow.nclientsitecode, \"nclientcontactcode\": fetchRecord.editRow.nclientcontactcode,\"userinfo\": fetchRecord.userInfo });\r\n    urlArray = [ClientContactByID];\r\n    selectedId = fetchRecord.editRow.nclientcontactcode;\r\n\r\n    dispatch(initRequest(true));\r\n    Axios.all(urlArray)\r\n        .then(response => {            \r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                openChildModal:true, operation:fetchRecord.operation, \r\n                selectedRecord: fetchRecord.operation === \"update\" ? response[0].data : undefined,\r\n          defaultSite: fetchRecord.editRow.nclientsitecode, ncontrolCode:fetchRecord.ncontrolCode ,\r\n          screenName: \"IDS_CLIENTCONTACT\", loading:false, selectedId\r\n        }});\r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500) {\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({ id: error.response.data }));\r\n            }\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport const addClientFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n            userinfo: inputParam.userInfo\r\n        })];\r\n        if (inputParam.operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"/client/editClientFile\", {\r\n                userinfo: inputParam.userInfo,\r\n                clientfile: inputParam.selectedRecord\r\n            }))\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                const linkmaster = linkMap.get(\"OptionList\");\r\n                let selectedRecord = {};\r\n                const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                let disabled = false;\r\n                let editObject = {};\r\n                if (inputParam.operation === \"update\") {\r\n                    editObject = response[1].data;\r\n                    let nlinkcode = {};\r\n                    let link = {};\r\n                    if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                        nlinkcode = {\r\n                            \"label\": editObject.slinkname,\r\n                            \"value\": editObject.nlinkcode\r\n                        }\r\n\r\n                        link = {\r\n                            slinkfilename: editObject.sfilename,\r\n                            slinkdescription: editObject.sdescription,\r\n                            nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                            sfilesize: '',\r\n                            nfilesize: 0,\r\n                            ndefaultstatus: 4,\r\n                            sfilename: '',\r\n                        }\r\n\r\n                    } else {\r\n                        nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\" //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\r\n                        link = {\r\n                            slinkfilename: '',\r\n                            slinkdescription: '',\r\n                            nlinkdefaultstatus: 4,\r\n                            sfilesize: editObject.sfilesize,\r\n                            nfilesize: editObject.nfilesize,\r\n                            ndefaultstatus: editObject.ndefaultstatus,\r\n                            sfilename: editObject.sfilename,\r\n                            sdescription:editObject.sdescription,\r\n                            ssystemfilename: editObject.ssystemfilename\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    selectedRecord = {\r\n                        ...link,\r\n                        nclientfilecode: editObject.nclientfilecode,\r\n                        nattachmenttypecode: editObject.nattachmenttypecode,\r\n                        // sdescription:editObject.sdescription,\r\n                        nlinkcode,\r\n\r\n                        // disabled: true\r\n                    };\r\n                } else {\r\n                    selectedRecord = {\r\n                        nattachmenttypecode: response[0].data.AttachmentType.length > 0 ?\r\n                            response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\r\n                        nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\r\n                        disabled\r\n                    };\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        [inputParam.modalName]: true,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        linkMaster: linkmaster,\r\n                        showSaveContinue: false,\r\n                        editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}