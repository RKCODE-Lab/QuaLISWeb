{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{Grid,GridColumn}from'@progress/kendo-react-grid';import{process}from'@progress/kendo-data-query';import{toast}from'react-toastify';// import { css } from 'styled-components';\nimport ColumnMenu from'../../components/data-grid/ColumnMenu';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../../pages/audittrail/Esign';import{callService,crudMaster,updateStore,validateEsignCredential}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{showEsign,getControlMap}from'../../components/CommonScript';import{transactionStatus}from'../../components/Enumeration';import{ListWrapper,AtTableWrap}from'../../components/client-group.styles';import{loadMessages,LocalizationProvider}from'@progress/kendo-react-intl';import messages_en from'../../assets/translations/en.json';import messages_de from'../../assets/translations/de.json';import ReactTooltip from'react-tooltip';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var messages={'en-US':messages_en,'ko-KR':messages_de};var UserRoleConfiguration=/*#__PURE__*/function(_React$Component){_inherits(UserRoleConfiguration,_React$Component);var _super=_createSuper(UserRoleConfiguration);function UserRoleConfiguration(props){var _this;_classCallCheck(this,UserRoleConfiguration);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){loadEsign=false;openModal=false;selectedRecord={};var data=_toConsumableArray(_this.state.data);if(_this.state.selectedUserRole[_this.state.columnName]===transactionStatus.YES){data[_this.state.rowIndex][_this.state.columnName]=transactionStatus.NO;}else{data[_this.state.rowIndex][_this.state.columnName]=transactionStatus.YES;}_this.setState({data:data});}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onSaveClick=function(selectedRecord,saveType,formRef){var operation=\"\";var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;// edit    \ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]=selectedRecord;_this.extractedColumnList.map(function(item){return inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][item]=selectedRecord[item]?selectedRecord[item]:\"\";});operation=\"update\";var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,114)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:operation//this.props.Login.operation\n}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}//this.props.crudMaster(inputParam);\n};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.columnWidth=[];var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={addScreen:false,data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,selectedUserRole:{},columnName:'',rowIndex:0};return _this;}_createClass(UserRoleConfiguration,[{key:\"render\",value:function render(){var _this2=this;loadMessages(messages[this.props.Login.userInfo.slanguagetypecode],\"lang\");// this.columnWidth = [{ \"width\": \"35%\" },{ \"width\": \"35%\" },{ \"width\": \"35%\" },{ \"width\": \"35%\" }];\n// this.columnWidth = [{ \"width\": \"20%\" },{ \"width\": \"20%\" },{ \"width\": \"20%\" },{ \"width\": \"20%\" },{ \"width\": \"20%\" }];\nthis.extractedColumnList=[\"nuserrolecode\",\"suserrolename\",\"nneedapprovalflow\",\"nneedresultflow\"];//, \"nneedproductflow\", \"nwithdrawnmail\"\nvar pageSizes=this.props.Login.settings&&this.props.Login.settings[15].split(\",\").map(function(setting){return parseInt(setting);});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",id:\"tooltip-grid-wrap\",globalEventOff:\"click\"}),/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(LocalizationProvider,{language:\"lang\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid// className={this.setPercentage()}\n// sortable\n,Object.assign({className:\"active-paging\",style:{height:'600px'},resizable:true,reorderable:true//scrollable=\"none\"\n,scrollable:\"scrollable\",pageable:{buttonCount:5,pageSizes:pageSizes,previousNext:false},data:this.state.dataResult},this.state.dataState,{onDataStateChange:this.dataStateChange}),/*#__PURE__*/React.createElement(GridColumn,{field:\"suserrolename\",columnMenu:ColumnMenu,title:this.props.intl.formatMessage({id:\"IDS_USERROLENAME\"}),cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"]['suserrolename'],\"data-for\":\"tooltip-grid-wrap\"},row[\"dataItem\"]['suserrolename']);}}),/*#__PURE__*/React.createElement(GridColumn,{field:\"nneedapprovalflow\",title:this.props.intl.formatMessage({id:\"IDS_NEEDAPPROVALFLOW\"}),headerClassName:\"text-center\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"},\"data-tip\":\"kfkf\",\"data-for\":\"tooltip-grid-wrap\"},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][\"nneedapprovalflow\"],onChange:function onChange(event){return _this2.onInputOnChangeRole(event,row[\"dataItem\"],\"nneedapprovalflow\",row.dataIndex);},checked:row[\"dataItem\"][\"nneedapprovalflow\"]===transactionStatus.YES?true:false,name:row[\"dataItem\"][\"nuserrolecode\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex}));}}),/*#__PURE__*/React.createElement(GridColumn,{field:\"nneedresultflow\",title:this.props.intl.formatMessage({id:\"IDS_NEEDRESULTFLOW\"}),headerClassName:\"text-center\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"},\"data-tip\":\"jdjd\",\"data-for\":\"tooltip-grid-wrap\"},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][\"nneedresultflow\"],onChange:function onChange(event){return _this2.onInputOnChangeRole(event,row[\"dataItem\"],\"nneedresultflow\",row.dataIndex);},checked:row[\"dataItem\"][\"nneedresultflow\"]===transactionStatus.YES?true:false,name:row[\"dataItem\"][\"nuserrolecode\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex}));}}))))),/*#__PURE__*/React.createElement(ReactTooltip,null)))),/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(React.Fragment,null)}));}// setPercentage = () => {\n//     let styles = css;\n//     let idx = 1;\n//     this.columnWidth.forEach(item => {\n//         styles += `.k-grid-header col:nth-of-type(${idx}){\n//                 width: ${item.width}\n//             }\n//             .k-grid-table col:nth-of-type(${idx}){\n//                 width: ${item.width}\n//             }`\n//         idx++;\n//     })\n// }\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){ReactTooltip.rebuild();if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{this.setState({data:this.props.Login.masterData,isOpen:false,selectedRecord:this.props.Login.selectedRecord,dataResult:process(this.props.Login.masterData,this.state.dataState)});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}// if (this.props.Login.masterData !== previousProps.Login.masterData) {\n//     this.setState({\n//         data: this.props.Login.masterData,\n//         addScreen: this.props.Login.showScreen,\n//         dataResult: process(this.props.Login.masterData, this.state.dataState),\n//     });\n// }\n}},{key:\"onInputOnChangeRole\",value:function onInputOnChangeRole(event,rowItem,columnName,rowIndex){var selectedRecord=rowItem||{};var selectedUserRole=rowItem||{};var isCheck=false;if(columnName===\"nneedresultflow\"){if(event.target.checked===true){if(rowItem[\"nneedapprovalflow\"]===transactionStatus.YES){toast.warn(this.props.intl.formatMessage({id:\"IDS_SELECTAPPROVALFLOWORRESULTFLOW\"}));}else{isCheck=true;}}else{// toast.warn(\"If you want deselect, Select another role\");\nisCheck=true;}}else if(columnName===\"nneedapprovalflow\"){if(event.target.checked===true){if(rowItem[\"nneedresultflow\"]===transactionStatus.YES){toast.warn(this.props.intl.formatMessage({id:\"IDS_SELECTAPPROVALFLOWORRESULTFLOW\"}));}else{isCheck=true;}}else{isCheck=true;}}else if(columnName===\"nneedproductflow\"||columnName===\"nwithdrawnmail\"||columnName===\"nfailmail\"){isCheck=true;}if(isCheck===true){selectedRecord[columnName]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;selectedUserRole[columnName]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;this.onSaveClick(selectedRecord,undefined,undefined);this.setState({selectedUserRole:selectedUserRole,columnName:columnName,rowIndex:rowIndex});}}}]);return UserRoleConfiguration;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,validateEsignCredential:validateEsignCredential})(injectIntl(UserRoleConfiguration));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/credentialmanagement/UserRoleConfiguration.jsx"],"names":["React","connect","injectIntl","Row","Col","Grid","GridColumn","process","toast","ColumnMenu","CustomSwitch","SlideOutModal","Esign","callService","crudMaster","updateStore","validateEsignCredential","DEFAULT_RETURN","showEsign","getControlMap","transactionStatus","ListWrapper","AtTableWrap","loadMessages","LocalizationProvider","messages_en","messages_de","ReactTooltip","mapStateToProps","state","Login","messages","UserRoleConfiguration","props","dataStateChange","event","setState","dataResult","data","dataState","closeModal","loadEsign","openModal","selectedRecord","selectedUserRole","columnName","YES","rowIndex","NO","updateInfo","typeName","onInputOnChange","target","name","checked","value","onSaveClick","saveType","formRef","operation","inputData","userInfo","inputParam","methodUrl","toLowerCase","extractedColumnList","map","item","classUrl","displayName","userRoleControlRights","nformcode","screenData","masterData","screenName","intl","formatMessage","id","validateEsign","sreason","password","createRef","columnWidth","skip","take","settings","parseInt","addScreen","masterStatus","error","slanguagetypecode","pageSizes","split","setting","height","buttonCount","previousNext","row","textAlign","onInputOnChangeRole","dataIndex","columnIndex","previousProps","rebuild","Object","values","push","ncontrolcode","controlMap","isOpen","rowItem","isCheck","warn","undefined","Component"],"mappings":"m8BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,4BAAjC,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA;AACA,MAAOC,CAAAA,UAAP,KAAuB,uCAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gDAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,8BAAlB,CACA,OAASC,WAAT,CAAsBC,UAAtB,CAAkCC,WAAlC,CAA+CC,uBAA/C,KAA8E,eAA9E,CACA,OAASC,cAAT,KAA+B,0BAA/B,CACA,OAASC,SAAT,CAAoBC,aAApB,KAAyC,+BAAzC,CACA,OAASC,iBAAT,KAAkC,8BAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,sCAAzC,CACA,OAASC,YAAT,CAAuBC,oBAAvB,KAAmD,4BAAnD,CACA,MAAOC,CAAAA,WAAP,KAAwB,mCAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,mCAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,CACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAQ,CAAEC,KAAK,CAAED,KAAK,CAACC,KAAf,CAAR,CACH,CAFD,CAGA,GAAMC,CAAAA,QAAQ,CAAG,CACb,QAASN,WADI,CAEb,QAASC,WAFI,CAAjB,C,GAIMM,CAAAA,qB,0IACF,+BAAYC,KAAZ,CAAmB,uDACf,uBAAMA,KAAN,EADe,MAmBnBC,eAnBmB,CAmBD,SAACC,KAAD,CAAW,CACzB,MAAKC,QAAL,CAAc,CACVC,UAAU,CAAE9B,OAAO,CAAC,MAAKsB,KAAL,CAAWS,IAAZ,CAAkBH,KAAK,CAACI,SAAxB,CADT,CAEVA,SAAS,CAAEJ,KAAK,CAACI,SAFP,CAAd,EAIH,CAxBkB,OA0BnBC,UA1BmB,CA0BN,UAAM,CACf,GAAIC,CAAAA,SAAS,CAAG,MAAKR,KAAL,CAAWH,KAAX,CAAiBW,SAAjC,CACA,GAAIC,CAAAA,SAAS,CAAG,MAAKT,KAAL,CAAWH,KAAX,CAAiBY,SAAjC,CACA,GAAIC,CAAAA,cAAc,CAAG,MAAKV,KAAL,CAAWH,KAAX,CAAiBa,cAAtC,CACA,GAAI,MAAKV,KAAL,CAAWH,KAAX,CAAiBW,SAArB,CAAgC,CAExBA,SAAS,CAAG,KAAZ,CACAC,SAAS,CAAG,KAAZ,CACAC,cAAc,CAAE,EAAhB,CACA,GAAML,CAAAA,IAAI,oBAAO,MAAKT,KAAL,CAAWS,IAAlB,CAAV,CACA,GAAI,MAAKT,KAAL,CAAWe,gBAAX,CAA4B,MAAKf,KAAL,CAAWgB,UAAvC,IAAuDzB,iBAAiB,CAAC0B,GAA7E,CAAiF,CAC9ER,IAAI,CAAC,MAAKT,KAAL,CAAWkB,QAAZ,CAAJ,CAA0B,MAAKlB,KAAL,CAAWgB,UAArC,EAAmDzB,iBAAiB,CAAC4B,EAArE,CAEF,CAHD,IAII,CACAV,IAAI,CAAC,MAAKT,KAAL,CAAWkB,QAAZ,CAAJ,CAA0B,MAAKlB,KAAL,CAAWgB,UAArC,EAAmDzB,iBAAiB,CAAC0B,GAArE,CAEH,CACD,MAAKV,QAAL,CAAc,CAAEE,IAAI,CAAJA,IAAF,CAAd,EACP,CAfD,IAgBK,CACDI,SAAS,CAAG,KAAZ,CACAC,cAAc,CAAG,EAAjB,CACH,CAED,GAAMM,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEjC,cADK,CAEfqB,IAAI,CAAE,CAAEI,SAAS,CAATA,SAAF,CAAaD,SAAS,CAATA,SAAb,CAAwBE,cAAc,CAAdA,cAAxB,CAFS,CAAnB,CAIA,MAAKV,KAAL,CAAWlB,WAAX,CAAuBkC,UAAvB,EAEH,CAzDkB,OAoSnBE,eApSmB,CAoSD,SAAChB,KAAD,CAAW,CAEzB,GAAMQ,CAAAA,cAAc,CAAG,MAAKd,KAAL,CAAWc,cAAX,EAA6B,EAApD,CAEA,GAAIR,KAAK,CAACiB,MAAN,CAAaC,IAAb,GAAsB,OAA1B,CAAmC,CAC/BV,cAAc,CAACR,KAAK,CAACiB,MAAN,CAAaC,IAAd,CAAd,CAAoClB,KAAK,CAACiB,MAAN,CAAaE,OAAb,GAAyB,IAAzB,CAAgClC,iBAAiB,CAAC0B,GAAlD,CAAwD1B,iBAAiB,CAAC4B,EAA9G,CACH,CAFD,IAGK,CACDL,cAAc,CAACR,KAAK,CAACiB,MAAN,CAAaC,IAAd,CAAd,CAAoClB,KAAK,CAACiB,MAAN,CAAaG,KAAjD,CACH,CACD,MAAKnB,QAAL,CAAc,CAAEO,cAAc,CAAdA,cAAF,CAAd,EAEH,CAhTkB,OAmTnBa,WAnTmB,CAmTL,SAACb,cAAD,CAAiBc,QAAjB,CAA2BC,OAA3B,CAAuC,CAEjD,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACAA,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK3B,KAAL,CAAWH,KAAX,CAAiB+B,QAAzC,CAGA;AACAD,SAAS,CAAC,MAAK3B,KAAL,CAAWH,KAAX,CAAiBgC,UAAjB,CAA4BC,SAA5B,CAAsCC,WAAtC,EAAD,CAAT,CAAiErB,cAAjE,CACA,MAAKsB,mBAAL,CAAyBC,GAAzB,CAA6B,SAAAC,IAAI,CAAI,CACjC,MAAOP,CAAAA,SAAS,CAAC,MAAK3B,KAAL,CAAWH,KAAX,CAAiBgC,UAAjB,CAA4BC,SAA5B,CAAsCC,WAAtC,EAAD,CAAT,CAA+DG,IAA/D,EAAuExB,cAAc,CAACwB,IAAD,CAAd,CAAuBxB,cAAc,CAACwB,IAAD,CAArC,CAA8C,EAA5H,CACH,CAFD,EAGAR,SAAS,CAAG,QAAZ,CAEA,GAAMG,CAAAA,UAAU,CAAG,CACfM,QAAQ,CAAE,MAAKnC,KAAL,CAAWH,KAAX,CAAiBgC,UAAjB,CAA4BM,QADvB,CAEfL,SAAS,CAAE,MAAK9B,KAAL,CAAWH,KAAX,CAAiBgC,UAAjB,CAA4BC,SAFxB,CAGfM,WAAW,CAAE,MAAKpC,KAAL,CAAWH,KAAX,CAAiBgC,UAAjB,CAA4BO,WAH1B,CAIfT,SAAS,CAAEA,SAJI,CAKfD,SAAS,CAAEA,SALI,CAKOF,QAAQ,CAARA,QALP,CAKiBC,OAAO,CAAPA,OALjB,CAAnB,CAOA,GAAIxC,SAAS,CAAC,MAAKe,KAAL,CAAWH,KAAX,CAAiBwC,qBAAlB,CAAyC,MAAKrC,KAAL,CAAWH,KAAX,CAAiB+B,QAAjB,CAA0BU,SAAnE,CAA8E,GAA9E,CAAb,CAAiG,CAC7F,GAAMtB,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEjC,cADK,CAEfqB,IAAI,CAAE,CACFG,SAAS,CAAE,IADT,CACe+B,UAAU,CAAE,CAAEV,UAAU,CAAVA,UAAF,CAAcW,UAAU,CAAE,MAAKxC,KAAL,CAAWH,KAAX,CAAiB2C,UAA3C,CAD3B,CAEF/B,SAAS,CAAE,IAFT,CAEegC,UAAU,CAAE,MAAKzC,KAAL,CAAW0C,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,MAAK5C,KAAL,CAAWH,KAAX,CAAiBgC,UAAjB,CAA4BO,WAAlC,CAA9B,CAF3B,CAGFV,SAAS,CAAEA,SAAS;AAHlB,CAFS,CAAnB,CAQA,MAAK1B,KAAL,CAAWlB,WAAX,CAAuBkC,UAAvB,EACH,CAVD,IAWK,CACD,MAAKhB,KAAL,CAAWnB,UAAX,CAAsBgD,UAAtB,CAAkC,MAAK7B,KAAL,CAAWH,KAAX,CAAiB2C,UAAnD,CAA+D,WAA/D,EACH,CACD;AAEH,CAxVkB,OA0VnBK,aA1VmB,CA0VH,UAAM,CAClB,GAAMhB,CAAAA,UAAU,CAAG,CACfF,SAAS,CAAE,CACP,0CACO,MAAK3B,KAAL,CAAWH,KAAX,CAAiB+B,QADxB,MAEIkB,OAAO,CAAE,MAAKlD,KAAL,CAAWc,cAAX,CAA0B,eAA1B,CAFb,EADO,CAKPqC,QAAQ,CAAE,MAAKnD,KAAL,CAAWc,cAAX,CAA0B,eAA1B,CALH,CADI,CAQf6B,UAAU,CAAE,MAAKvC,KAAL,CAAWH,KAAX,CAAiB0C,UARd,CAAnB,CAUA,MAAKvC,KAAL,CAAWjB,uBAAX,CAAmC8C,UAAnC,CAA+C,WAA/C,EACH,CAtWkB,CAGf,MAAKJ,OAAL,CAAe1D,KAAK,CAACiF,SAAN,EAAf,CACA,MAAKhB,mBAAL,CAA2B,EAA3B,CACA,MAAKiB,WAAL,CAAmB,EAAnB,CAEA,GAAM3C,CAAAA,SAAS,CAAG,CACd4C,IAAI,CAAE,CADQ,CAEdC,IAAI,CAAE,MAAKnD,KAAL,CAAWH,KAAX,CAAiBuD,QAAjB,CAA4BC,QAAQ,CAAC,MAAKrD,KAAL,CAAWH,KAAX,CAAiBuD,QAAjB,CAA0B,EAA1B,CAAD,CAApC,CAAsE,CAF9D,CAAlB,CAIA,MAAKxD,KAAL,CAAa,CACT0D,SAAS,CAAE,KADF,CACSjD,IAAI,CAAE,EADf,CACmBkD,YAAY,CAAE,EADjC,CACqCC,KAAK,CAAE,EAD5C,CACgD9C,cAAc,CAAE,EADhE,CAETN,UAAU,CAAE,EAFH,CAGTE,SAAS,CAAEA,SAHF,CAITK,gBAAgB,CAAE,EAJT,CAIaC,UAAU,CAAC,EAJxB,CAI4BE,QAAQ,CAAE,CAJtC,CAAb,CAXe,aAiBlB,C,wDA0CD,iBAAS,iBACLxB,YAAY,CAACQ,QAAQ,CAAC,KAAKE,KAAL,CAAWH,KAAX,CAAiB+B,QAAjB,CAA0B6B,iBAA3B,CAAT,CAAwD,MAAxD,CAAZ,CACA;AACA;AACA,KAAKzB,mBAAL,CAA2B,CAAC,eAAD,CAAkB,eAAlB,CAAmC,mBAAnC,CAAwD,iBAAxD,CAA3B,CACA;AACA,GAAM0B,CAAAA,SAAS,CAAG,KAAK1D,KAAL,CAAWH,KAAX,CAAiBuD,QAAjB,EAA6B,KAAKpD,KAAL,CAAWH,KAAX,CAAiBuD,QAAjB,CAA0B,EAA1B,EAA8BO,KAA9B,CAAoC,GAApC,EAAyC1B,GAAzC,CAA6C,SAAA2B,OAAO,QAAIP,CAAAA,QAAQ,CAACO,OAAD,CAAZ,EAApD,CAA/C,CACA,mBAAQ,qDACA,oBAAC,GAAD,mBACI,oBAAC,GAAD,mBACI,oBAAC,WAAD,EAAa,SAAS,CAAC,qBAAvB,eACI,oBAAC,YAAD,EAAc,KAAK,CAAC,QAApB,CAA6B,EAAE,CAAC,mBAAhC,CAAoD,cAAc,CAAC,OAAnE,EADJ,cAEI,oBAAC,WAAD,EAAa,SAAS,CAAC,eAAvB,eACI,oBAAC,oBAAD,EAAsB,QAAQ,CAAC,MAA/B,eACI,qDACA,oBAAC,IACG;AACA;AAFJ,gBAGI,SAAS,CAAE,eAHf,CAII,KAAK,CAAE,CAAEC,MAAM,CAAE,OAAV,CAJX,CAKI,SAAS,KALb,CAMI,WAAW,KACX;AAPJ,CAQI,UAAU,CAAE,YARhB,CASI,QAAQ,CAAG,CAAEC,WAAW,CAAE,CAAf,CAAkBJ,SAAS,CAAEA,SAA7B,CAAyCK,YAAY,CAAE,KAAvD,CATf,CAUI,IAAI,CAAE,KAAKnE,KAAL,CAAWQ,UAVrB,EAWQ,KAAKR,KAAL,CAAWU,SAXnB,EAYI,iBAAiB,CAAE,KAAKL,eAZ5B,gBAcI,oBAAC,UAAD,EACI,KAAK,CAAC,eADV,CAEI,UAAU,CAAGzB,UAFjB,CAGI,KAAK,CAAE,KAAKwB,KAAL,CAAW0C,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAHX,CAII,IAAI,CAAE,cAACoB,GAAD,qBACF,0BAAI,WAAUA,GAAG,CAAC,UAAD,CAAH,CAAgB,eAAhB,CAAd,CAAgD,WAAS,mBAAzD,EACKA,GAAG,CAAC,UAAD,CAAH,CAAgB,eAAhB,CADL,CADE,EAJV,EAdJ,cAwBI,oBAAC,UAAD,EACI,KAAK,CAAE,mBADX,CAEI,KAAK,CAAE,KAAKhE,KAAL,CAAW0C,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,sBAAN,CAA9B,CAFX,CAGI,eAAe,CAAC,aAHpB,CAII,IAAI,CAAE,cAACoB,GAAD,qBACF,0BAAI,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAb,CAAX,CAAoC,WAAU,MAA9C,CAAsD,WAAS,mBAA/D,eACI,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,CAA4B,EAAE,CAAED,GAAG,CAAC,UAAD,CAAH,CAAgB,mBAAhB,CAAhC,CACI,QAAQ,CAAE,kBAAC9D,KAAD,QAAW,CAAA,MAAI,CAACgE,mBAAL,CAAyBhE,KAAzB,CAAgC8D,GAAG,CAAC,UAAD,CAAnC,CAAiD,mBAAjD,CAAsEA,GAAG,CAACG,SAA1E,CAAX,EADd,CAEI,OAAO,CAAEH,GAAG,CAAC,UAAD,CAAH,CAAgB,mBAAhB,IAAyC7E,iBAAiB,CAAC0B,GAA3D,CAAiE,IAAjE,CAAwE,KAFrF,CAGI,IAAI,CAAEmD,GAAG,CAAC,UAAD,CAAH,CAAgB,eAAhB,EAAmC,GAAnC,CAAyCA,GAAG,CAACG,SAA7C,CAAyD,GAAzD,CAA+DH,GAAG,CAACI,WAH7E,EADJ,CADE,EAJV,EAxBJ,cAoCI,oBAAC,UAAD,EACI,KAAK,CAAE,iBADX,CAEI,KAAK,CAAE,KAAKpE,KAAL,CAAW0C,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oBAAN,CAA9B,CAFX,CAGI,eAAe,CAAC,aAHpB,CAII,IAAI,CAAE,cAACoB,GAAD,qBACF,0BAAI,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAb,CAAX,CAAsC,WAAS,MAA/C,CAAsD,WAAS,mBAA/D,eACI,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,CAA4B,EAAE,CAAED,GAAG,CAAC,UAAD,CAAH,CAAgB,iBAAhB,CAAhC,CACI,QAAQ,CAAE,kBAAC9D,KAAD,QAAW,CAAA,MAAI,CAACgE,mBAAL,CAAyBhE,KAAzB,CAAgC8D,GAAG,CAAC,UAAD,CAAnC,CAAiD,iBAAjD,CAAoEA,GAAG,CAACG,SAAxE,CAAX,EADd,CAEI,OAAO,CAAEH,GAAG,CAAC,UAAD,CAAH,CAAgB,iBAAhB,IAAuC7E,iBAAiB,CAAC0B,GAAzD,CAA+D,IAA/D,CAAsE,KAFnF,CAGI,IAAI,CAAEmD,GAAG,CAAC,UAAD,CAAH,CAAgB,eAAhB,EAAmC,GAAnC,CAAyCA,GAAG,CAACG,SAA7C,CAAyD,GAAzD,CAA+DH,GAAG,CAACI,WAH7E,EADJ,CADE,EAJV,EApCJ,CADA,CADJ,CADJ,CAFJ,cA+FI,oBAAC,YAAD,MA/FJ,CADJ,CADJ,CADA,cAsGA,oBAAC,aAAD,EAAe,IAAI,CAAE,KAAKpE,KAAL,CAAWH,KAAX,CAAiBY,SAAtC,CACI,UAAU,CAAE,KAAKF,UADrB,CAEI,SAAS,CAAE,KAAKP,KAAL,CAAWH,KAAX,CAAiB6B,SAFhC,CAGI,UAAU,CAAE,KAAK1B,KAAL,CAAWH,KAAX,CAAiBgC,UAHjC,CAII,UAAU,CAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiB4C,UAJjC,CAKI,WAAW,CAAE,KAAKlB,WALtB,CAMI,KAAK,CAAE,KAAKvB,KAAL,CAAWH,KAAX,CAAiBW,SAN5B,CAOI,aAAa,CAAE,KAAKqC,aAPxB,CAQI,YAAY,CAAE,KAAK7C,KAAL,CAAWH,KAAX,CAAiB0D,YARnC,CASI,WAAW,CAAE,KAAKvD,KAAL,CAAWlB,WAT5B,CAUI,cAAc,CAAE,KAAKc,KAAL,CAAWc,cAV/B,CAWI,YAAY,CAAE,KAAKV,KAAL,CAAWH,KAAX,CAAiBW,SAAjB,cACV,oBAAC,KAAD,EAAO,SAAS,CAAE,KAAKR,KAAL,CAAWH,KAAX,CAAiB6B,SAAnC,CACI,aAAa,CAAE,KAAK1B,KAAL,CAAW0C,IAAX,CAAgBC,aADnC,CAEI,eAAe,CAAE,KAAKzB,eAF1B,CAGI,UAAU,CAAE,KAAKlB,KAAL,CAAWH,KAAX,CAAiBgC,UAHjC,CAII,cAAc,CAAE,KAAKjC,KAAL,CAAWc,cAAX,EAA6B,EAJjD,EADU,cAQV,wCAnBR,EAtGA,CAAR,CA+HH,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;kCAEA,4BAAmB2D,aAAnB,CAAkC,CAC9B3E,YAAY,CAAC4E,OAAb,GACA,GAAI,KAAKtE,KAAL,CAAWH,KAAX,CAAiB2C,UAAjB,GAAgC6B,aAAa,CAACxE,KAAd,CAAoB2C,UAAxD,CAAoE,CAChE,GAAI,KAAKxC,KAAL,CAAWH,KAAX,CAAiB+B,QAAjB,CAA0BU,SAA1B,GAAwC+B,aAAa,CAACxE,KAAd,CAAoB+B,QAApB,CAA6BU,SAAzE,CAAoF,CAChF,GAAMD,CAAAA,qBAAqB,CAAG,EAA9B,CACA,GAAI,KAAKrC,KAAL,CAAWH,KAAX,CAAiBwC,qBAArB,CAA4C,CACxC,KAAKrC,KAAL,CAAWH,KAAX,CAAiBwC,qBAAjB,CAAuC,KAAKrC,KAAL,CAAWH,KAAX,CAAiB+B,QAAjB,CAA0BU,SAAjE,GAA+EiC,MAAM,CAACC,MAAP,CAAc,KAAKxE,KAAL,CAAWH,KAAX,CAAiBwC,qBAAjB,CAAuC,KAAKrC,KAAL,CAAWH,KAAX,CAAiB+B,QAAjB,CAA0BU,SAAjE,CAAd,EAA2FL,GAA3F,CAA+F,SAAAC,IAAI,QAC9KG,CAAAA,qBAAqB,CAACoC,IAAtB,CAA2BvC,IAAI,CAACwC,YAAhC,CAD8K,EAAnG,CAA/E,CAEH,CACD,GAAMC,CAAAA,UAAU,CAAGzF,aAAa,CAAC,KAAKc,KAAL,CAAWH,KAAX,CAAiBwC,qBAAlB,CAAyC,KAAKrC,KAAL,CAAWH,KAAX,CAAiB+B,QAAjB,CAA0BU,SAAnE,CAAhC,CAEA,KAAKnC,QAAL,CAAc,CACVkC,qBAAqB,CAArBA,qBADU,CACasC,UAAU,CAAVA,UADb,CACyBtE,IAAI,CAAE,KAAKL,KAAL,CAAWH,KAAX,CAAiB2C,UADhD,CAEVpC,UAAU,CAAE9B,OAAO,CAAC,KAAK0B,KAAL,CAAWH,KAAX,CAAiB2C,UAAlB,CAA8B,KAAK5C,KAAL,CAAWU,SAAzC,CAFT,CAAd,EAIH,CAZD,IAaK,CACD,KAAKH,QAAL,CAAc,CACVE,IAAI,CAAE,KAAKL,KAAL,CAAWH,KAAX,CAAiB2C,UADb,CAEVoC,MAAM,CAAE,KAFE,CAGVlE,cAAc,CAAE,KAAKV,KAAL,CAAWH,KAAX,CAAiBa,cAHvB,CAIVN,UAAU,CAAE9B,OAAO,CAAC,KAAK0B,KAAL,CAAWH,KAAX,CAAiB2C,UAAlB,CAA8B,KAAK5C,KAAL,CAAWU,SAAzC,CAJT,CAAd,EAMH,CACJ,CAtBD,IAuBK,IAAI,KAAKN,KAAL,CAAWH,KAAX,CAAiBa,cAAjB,GAAoC2D,aAAa,CAACxE,KAAd,CAAoBa,cAA5D,CAA4E,CAC7E,KAAKP,QAAL,CAAc,CAAEO,cAAc,CAAE,KAAKV,KAAL,CAAWH,KAAX,CAAiBa,cAAnC,CAAd,EACH,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACH,C,mCACD,6BAAoBR,KAApB,CAA2B2E,OAA3B,CAAoCjE,UAApC,CAAgDE,QAAhD,CAA0D,CAEtD,GAAMJ,CAAAA,cAAc,CAAGmE,OAAO,EAAI,EAAlC,CACA,GAAMlE,CAAAA,gBAAgB,CAAGkE,OAAO,EAAI,EAApC,CACA,GAAIC,CAAAA,OAAO,CAAG,KAAd,CAEA,GAAIlE,UAAU,GAAK,iBAAnB,CAAsC,CAClC,GAAIV,KAAK,CAACiB,MAAN,CAAaE,OAAb,GAAyB,IAA7B,CAAmC,CAC/B,GAAIwD,OAAO,CAAC,mBAAD,CAAP,GAAiC1F,iBAAiB,CAAC0B,GAAvD,CAA4D,CACxDtC,KAAK,CAACwG,IAAN,CAAW,KAAK/E,KAAL,CAAW0C,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oCAAN,CAA9B,CAAX,EACH,CAFD,IAGK,CACDkC,OAAO,CAAG,IAAV,CACH,CACJ,CAPD,IAQK,CACD;AACAA,OAAO,CAAG,IAAV,CACH,CAEJ,CAdD,IAeK,IAAIlE,UAAU,GAAK,mBAAnB,CAAwC,CACzC,GAAIV,KAAK,CAACiB,MAAN,CAAaE,OAAb,GAAyB,IAA7B,CAAmC,CAC/B,GAAIwD,OAAO,CAAC,iBAAD,CAAP,GAA+B1F,iBAAiB,CAAC0B,GAArD,CAA0D,CACtDtC,KAAK,CAACwG,IAAN,CAAW,KAAK/E,KAAL,CAAW0C,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oCAAN,CAA9B,CAAX,EACH,CAFD,IAGK,CACDkC,OAAO,CAAG,IAAV,CACH,CACJ,CAPD,IAQK,CACDA,OAAO,CAAG,IAAV,CACH,CACJ,CAZI,IAaA,IAAIlE,UAAU,GAAK,kBAAf,EAAqCA,UAAU,GAAK,gBAApD,EAAuEA,UAAU,GAAK,WAA1F,CAAuG,CACxGkE,OAAO,CAAG,IAAV,CACH,CAED,GAAIA,OAAO,GAAK,IAAhB,CAAsB,CAClBpE,cAAc,CAACE,UAAD,CAAd,CAA6BV,KAAK,CAACiB,MAAN,CAAaE,OAAb,GAAyB,IAAzB,CAAgClC,iBAAiB,CAAC0B,GAAlD,CAAwD1B,iBAAiB,CAAC4B,EAAvG,CACAJ,gBAAgB,CAACC,UAAD,CAAhB,CAA+BV,KAAK,CAACiB,MAAN,CAAaE,OAAb,GAAyB,IAAzB,CAAgClC,iBAAiB,CAAC0B,GAAlD,CAAwD1B,iBAAiB,CAAC4B,EAAzG,CACA,KAAKQ,WAAL,CAAiBb,cAAjB,CAAiCsE,SAAjC,CAA4CA,SAA5C,EACA,KAAK7E,QAAL,CAAc,CAACQ,gBAAgB,CAAhBA,gBAAD,CAAmBC,UAAU,CAAVA,UAAnB,CAA+BE,QAAQ,CAARA,QAA/B,CAAd,EACH,CAGJ,C,mCApS+B/C,KAAK,CAACkH,S,EAyW1C,cAAejH,CAAAA,OAAO,CAAC2B,eAAD,CAAkB,CAAEf,WAAW,CAAXA,WAAF,CAAeC,UAAU,CAAVA,UAAf,CAA2BC,WAAW,CAAXA,WAA3B,CAAwCC,uBAAuB,CAAvBA,uBAAxC,CAAlB,CAAP,CAA4Fd,UAAU,CAAC8B,qBAAD,CAAtG,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\n// import { css } from 'styled-components';\r\nimport ColumnMenu from '../../components/data-grid/ColumnMenu';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../../pages/audittrail/Esign';\r\nimport { callService, crudMaster, updateStore, validateEsignCredential } from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { showEsign, getControlMap } from '../../components/CommonScript';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { ListWrapper, AtTableWrap } from '../../components/client-group.styles'\r\nimport { loadMessages, LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport messages_en from '../../assets/translations/en.json';\r\nimport messages_de from '../../assets/translations/de.json';\r\nimport ReactTooltip from 'react-tooltip';\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nconst messages = {\r\n    'en-US': messages_en,\r\n    'ko-KR': messages_de\r\n}\r\nclass UserRoleConfiguration extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.columnWidth = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            addScreen: false, data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            selectedUserRole: {}, columnName:'', rowIndex: 0\r\n        }\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n           \r\n                loadEsign = false;\r\n                openModal = false;  \r\n                selectedRecord ={};            \r\n                const data = [...this.state.data];\r\n                if (this.state.selectedUserRole[this.state.columnName] === transactionStatus.YES){\r\n                   data[this.state.rowIndex][this.state.columnName] = transactionStatus.NO; \r\n\r\n                }\r\n                else{\r\n                    data[this.state.rowIndex][this.state.columnName] = transactionStatus.YES; \r\n\r\n                }\r\n                this.setState({ data });\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    render() {\r\n        loadMessages(messages[this.props.Login.userInfo.slanguagetypecode], \"lang\");\r\n        // this.columnWidth = [{ \"width\": \"35%\" },{ \"width\": \"35%\" },{ \"width\": \"35%\" },{ \"width\": \"35%\" }];\r\n        // this.columnWidth = [{ \"width\": \"20%\" },{ \"width\": \"20%\" },{ \"width\": \"20%\" },{ \"width\": \"20%\" },{ \"width\": \"20%\" }];\r\n        this.extractedColumnList = [\"nuserrolecode\", \"suserrolename\", \"nneedapprovalflow\", \"nneedresultflow\"];\r\n        //, \"nneedproductflow\", \"nwithdrawnmail\"\r\n        const pageSizes = this.props.Login.settings && this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting))\r\n        return (<>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            <ReactTooltip place=\"bottom\" id=\"tooltip-grid-wrap\" globalEventOff='click' />\r\n                            <AtTableWrap className=\"at-list-table\">\r\n                                <LocalizationProvider language=\"lang\">\r\n                                    <>\r\n                                    <Grid\r\n                                        // className={this.setPercentage()}\r\n                                        // sortable\r\n                                        className={\"active-paging\"}\r\n                                        style={{ height: '600px'}}\r\n                                        resizable\r\n                                        reorderable\r\n                                        //scrollable=\"none\"\r\n                                        scrollable={\"scrollable\"}\r\n                                        pageable={ { buttonCount: 5, pageSizes: pageSizes , previousNext: false } }\r\n                                        data={this.state.dataResult}\r\n                                        {...this.state.dataState}\r\n                                        onDataStateChange={this.dataStateChange}>\r\n\r\n                                        <GridColumn \r\n                                            field=\"suserrolename\" \r\n                                            columnMenu= {ColumnMenu}\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_USERROLENAME\" })}\r\n                                            cell={(row) => (\r\n                                                <td data-tip={row[\"dataItem\"]['suserrolename']} data-for=\"tooltip-grid-wrap\">\r\n                                                    {row[\"dataItem\"]['suserrolename']}\r\n                                                </td>\r\n                                            )}\r\n                                        />\r\n                                        <GridColumn\r\n                                            field={\"nneedapprovalflow\"}\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_NEEDAPPROVALFLOW\" })}\r\n                                            headerClassName=\"text-center\" \r\n                                            cell={(row) => (\r\n                                                <td style={{ textAlign: \"center\" }} data-tip={\"kfkf\"} data-for=\"tooltip-grid-wrap\">\r\n                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nneedapprovalflow\"]}\r\n                                                        onChange={(event) => this.onInputOnChangeRole(event, row[\"dataItem\"], \"nneedapprovalflow\", row.dataIndex)}\r\n                                                        checked={row[\"dataItem\"][\"nneedapprovalflow\"] === transactionStatus.YES ? true : false}\r\n                                                        name={row[\"dataItem\"][\"nuserrolecode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                </td>)}\r\n                                        />\r\n                                        <GridColumn\r\n                                            field={\"nneedresultflow\"}\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_NEEDRESULTFLOW\" })}\r\n                                            headerClassName=\"text-center\" \r\n                                            cell={(row) => (\r\n                                                <td style={{ textAlign: \"center\" }}   data-tip=\"jdjd\" data-for=\"tooltip-grid-wrap\">\r\n                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nneedresultflow\"]}\r\n                                                        onChange={(event) => this.onInputOnChangeRole(event, row[\"dataItem\"], \"nneedresultflow\", row.dataIndex)}\r\n                                                        checked={row[\"dataItem\"][\"nneedresultflow\"] === transactionStatus.YES ? true : false}\r\n                                                        name={row[\"dataItem\"][\"nuserrolecode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                </td>)}\r\n                                        />\r\n                                        {/* <GridColumn\r\n                                            field={\"nneedproductflow\"}\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_NEEDPRODUCTFLOW\" })}\r\n                                            headerClassName=\"text-center\"\r\n                                            cell={(row) => (\r\n                                                <td style={{ textAlign: \"center\" }}>\r\n                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nneedproductflow\"]}\r\n                                                        onChange={(event) => this.onInputOnChangeRole(event, row[\"dataItem\"], \"nneedproductflow\", row.dataIndex)}\r\n                                                        checked={row[\"dataItem\"][\"nneedproductflow\"] === transactionStatus.YES ? true : false}\r\n                                                        name={row[\"dataItem\"][\"nuserrolecode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                </td>)}\r\n                                        />\r\n                                        <GridColumn\r\n                                            field={\"nwithdrawnmail\"}\r\n                                            width=\"175px\"\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_WITHDRAWNEMAIL\" })}\r\n                                            headerClassName=\"text-center\"\r\n                                            cell={(row) => (\r\n                                                <td style={{ textAlign: \"center\" }}>\r\n                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nwithdrawnmail\"]}\r\n                                                        onChange={(event) => this.onInputOnChangeRole(event, row[\"dataItem\"], \"nwithdrawnmail\", row.dataIndex)}\r\n                                                        checked={row[\"dataItem\"][\"nwithdrawnmail\"] === transactionStatus.YES ? true : false}\r\n                                                        name={row[\"dataItem\"][\"nuserrolecode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                </td>)}\r\n                                        />\r\n                                        <GridColumn\r\n                                            field={\"nfailmail\"}\r\n                                            width=\"175px\"\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_FAILEMAIL\" })}\r\n                                            headerClassName=\"text-center\"\r\n                                            cell={(row) => (\r\n                                                <td style={{ textAlign: \"center\" }}>\r\n                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nfailmail\"]}\r\n                                                        onChange={(event) => this.onInputOnChangeRole(event, row[\"dataItem\"], \"nfailmail\", row.dataIndex)}\r\n                                                        checked={row[\"dataItem\"][\"nfailmail\"] === transactionStatus.YES ? true : false}\r\n                                                        name={row[\"dataItem\"][\"nuserrolecode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                </td>)}\r\n                                        /> */}\r\n                                    </Grid>\r\n                                    </>\r\n                                </LocalizationProvider>\r\n                            </AtTableWrap>\r\n                            <ReactTooltip/>\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <SlideOutModal show={this.props.Login.openModal}\r\n                    closeModal={this.closeModal}\r\n                    operation={this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    screenName={this.props.Login.screenName}\r\n                    onSaveClick={this.onSaveClick}\r\n                    esign={this.props.Login.loadEsign}\r\n                    validateEsign={this.validateEsign}\r\n                    masterStatus={this.props.Login.masterStatus}\r\n                    updateStore={this.props.updateStore}\r\n                    selectedRecord={this.state.selectedRecord}\r\n                    addComponent={this.props.Login.loadEsign ?\r\n                        <Esign operation={this.props.Login.operation}\r\n                            formatMessage={this.props.intl.formatMessage}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                        />\r\n                        :\r\n                        <>\r\n                        </>\r\n                    }\r\n                />\r\n            </>\r\n        );\r\n    }\r\n    \r\n    // setPercentage = () => {\r\n    //     let styles = css;\r\n    //     let idx = 1;\r\n    //     this.columnWidth.forEach(item => {\r\n    //         styles += `.k-grid-header col:nth-of-type(${idx}){\r\n    //                 width: ${item.width}\r\n    //             }\r\n    //             .k-grid-table col:nth-of-type(${idx}){\r\n    //                 width: ${item.width}\r\n    //             }`\r\n    //         idx++;\r\n    //     })\r\n    // }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        ReactTooltip.rebuild();\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    isOpen: false,\r\n                    selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        // if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n        //     this.setState({\r\n        //         data: this.props.Login.masterData,\r\n        //         addScreen: this.props.Login.showScreen,\r\n        //         dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n        //     });\r\n        // }\r\n    }\r\n    onInputOnChangeRole(event, rowItem, columnName, rowIndex) {\r\n\r\n        const selectedRecord = rowItem || {};\r\n        const selectedUserRole = rowItem || {};\r\n        let isCheck = false;\r\n\r\n        if (columnName === \"nneedresultflow\") {\r\n            if (event.target.checked === true) {\r\n                if (rowItem[\"nneedapprovalflow\"] === transactionStatus.YES) {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTAPPROVALFLOWORRESULTFLOW\" }));\r\n                }\r\n                else {\r\n                    isCheck = true;\r\n                }\r\n            }\r\n            else {\r\n                // toast.warn(\"If you want deselect, Select another role\");\r\n                isCheck = true;\r\n            }\r\n\r\n        }\r\n        else if (columnName === \"nneedapprovalflow\") {\r\n            if (event.target.checked === true) {\r\n                if (rowItem[\"nneedresultflow\"] === transactionStatus.YES) {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTAPPROVALFLOWORRESULTFLOW\" }));\r\n                }\r\n                else {\r\n                    isCheck = true;\r\n                }\r\n            }\r\n            else {\r\n                isCheck = true;\r\n            }\r\n        }\r\n        else if (columnName === \"nneedproductflow\" || columnName === \"nwithdrawnmail\"|| columnName === \"nfailmail\") {\r\n            isCheck = true;\r\n        }\r\n\r\n        if (isCheck === true) {\r\n            selectedRecord[columnName] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            selectedUserRole[columnName] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            this.onSaveClick(selectedRecord, undefined, undefined);\r\n            this.setState({selectedUserRole, columnName, rowIndex});\r\n        }\r\n\r\n\r\n    }\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.name === \"agree\") {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n\r\n\r\n    onSaveClick = (selectedRecord, saveType, formRef) => {\r\n\r\n        let operation = \"\";\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n\r\n        // edit    \r\n        inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = selectedRecord;\r\n        this.extractedColumnList.map(item => {\r\n            return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item] = selectedRecord[item] ? selectedRecord[item] : \"\";\r\n        })\r\n        operation = \"update\";\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, 114)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: operation//this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n        //this.props.crudMaster(inputParam);\r\n\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { callService, crudMaster, updateStore, validateEsignCredential })(injectIntl(UserRoleConfiguration));"]},"metadata":{},"sourceType":"module"}