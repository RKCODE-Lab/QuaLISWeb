{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\components\\\\droparea\\\\Componentexp.jsx\";\nimport React, { useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useDrag } from \"react-dnd\";\nimport { COMPONENT, COMPONENTROW } from \"./constants\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nconst style = {\n  border: \"1px dashed black\",\n  padding: \"0\",\n  cursor: \"move\"\n};\n\nconst Componentexp = ({\n  data,\n  components,\n  path,\n  onclickcomponent,\n  deleteInput,\n  validateDrop,\n  selectedFieldRecord,\n  slanguagetypecode\n}) => {\n  const ref = useRef(null);\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: COMPONENTROW,\n    item: {\n      type: COMPONENTROW,\n      id: data.id,\n      data: data,\n      path\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(ref); // const component = components[data.id];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: { ...style,\n      opacity\n    },\n    className: `component draggable ${selectedFieldRecord.id === data.id ? \"selected\" : \"\"} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `componentItem text-center ${selectedFieldRecord.id === data.id ? \"selected\" : \"\"}` //style={{ \"whiteSpace\": \"nowrap\" }}\n    ,\n    onClick: e => onclickcomponent(e, data, path),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, data.displayname && data.displayname[slanguagetypecode] ? data.displayname[slanguagetypecode] : data.label || data.componentname, data.templatemandatory != true && /*#__PURE__*/React.createElement(\"a\", {\n    class: \"position-absolute delete-dynamic-column\",\n    onClick: e => deleteInput(e, data, {\n      type: COMPONENT,\n      id: data.id,\n      data: data,\n      path\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }))));\n};\n\nexport default Componentexp;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/components/droparea/Componentexp.jsx"],"names":["React","useRef","Button","useDrag","COMPONENT","COMPONENTROW","FontAwesomeIcon","faTrashAlt","style","border","padding","cursor","Componentexp","data","components","path","onclickcomponent","deleteInput","validateDrop","selectedFieldRecord","slanguagetypecode","ref","isDragging","drag","type","item","id","collect","monitor","opacity","e","displayname","label","componentname","templatemandatory"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { COMPONENT, COMPONENTROW } from \"./constants\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst style = {\r\n   border: \"1px dashed black\",\r\n  padding: \"0\",\r\n  cursor: \"move\"\r\n};\r\nconst Componentexp = ({ data, components, path, onclickcomponent, deleteInput, validateDrop, selectedFieldRecord ,  slanguagetypecode}) => {\r\n  const ref = useRef(null);\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: COMPONENTROW,\r\n    item: {\r\n      type: COMPONENTROW,\r\n      id: data.id, \r\n      data: data,\r\n      path\r\n    },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n    drag(ref);\r\n\r\n  // const component = components[data.id];\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      style={{ ...style, opacity }}\r\n      className={`component draggable ${selectedFieldRecord.id === data.id ? \"selected\" : \"\"} `}\r\n    >\r\n      {/* <div>{data.id}</div> */}\r\n      {/* <Button className={`componentItemButton ${selectedFieldRecord.id === data.id ? \"selected\" : \"\"}`} onClick={(e) => onclickcomponent(e, data, path)}> */}\r\n      <div\r\n        className={`componentItem text-center ${selectedFieldRecord.id === data.id ? \"selected\" : \"\"}`} //style={{ \"whiteSpace\": \"nowrap\" }}\r\n        onClick={(e) => onclickcomponent(e, data, path)}>\r\n        {(data.displayname&& data.displayname[slanguagetypecode]) ? data.displayname[slanguagetypecode]:data.label  || data.componentname}\r\n        {data.templatemandatory != true &&\r\n        <a class=\"position-absolute delete-dynamic-column\" onClick={(e) => deleteInput(e,data, {\r\n              type: COMPONENT,\r\n              id: data.id,\r\n              data: data,\r\n              path\r\n       })}><FontAwesomeIcon icon={faTrashAlt} /></a>\r\n        }\r\n          </div>\r\n      {/* </Button> */}\r\n    </div>\r\n  );\r\n};\r\nexport default Componentexp;\r\n"]},"metadata":{},"sourceType":"module"}