{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\components\\\\form-input\\\\form-input.component.jsx\";\nimport React, { useImperativeHandle, useRef } from 'react';\nimport './form-input.styles';\nimport { Form } from 'react-bootstrap';\nimport { whitespaceTrim } from '../CommonScript';\n\nclass FormInput extends React.Component {\n  //React.forwardRef((props, ref) => {\n  // const inputRef = useRef();\n  // onFocus={props.onFocus}\n  // const activate = () => {\n  //     inputRef.current.focus();\n  //     console.log('entered')\n  // }\n  // useImperativeHandle(ref, () => {\n  //     return {\n  //         focus: activate,\n  //     }\n  // })\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: `floating-label form-select w-100 floating-label react-select-wrap ${this.props.formGroupClassName ? this.props.formGroupClassName : \"\"}`,\n      controlId: this.props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: this.props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, this.props.label, this.props.isMandatory && /*#__PURE__*/React.createElement(\"sup\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 104\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Form.Control, {\n      id: this.props.name,\n      label: this.props.label,\n      onKeyDown: this.props.onKeyDown,\n      name: this.props.name,\n      type: this.props.type,\n      placeholder: this.props.placeholder,\n      onChange: this.props.onChange,\n      value: this.props.value,\n      isInvalid: this.props.isInvalid,\n      className: this.props.className,\n      defaultValue: this.props.defaultValue,\n      required: false,\n      maxLength: this.props.maxLength,\n      readOnly: this.props.readOnly,\n      disabled: this.props.isDisabled,\n      onBlur: this.props.onBlur,\n      onBlurCapture: this.props.onBlur ? e => {\n        this.props.onChange(whitespaceTrim(e));\n        this.props.onBlur(e);\n      } : e => {\n        this.props.onChange && this.props.onChange(whitespaceTrim(e));\n      },\n      onFocus: this.props.onFocus,\n      onKeyUp: this.props.onKeyUp,\n      onKeyPress: e => {\n        e.key === 'Enter' && e.preventDefault();\n      },\n      autoComplete: \"off\",\n      ref: this.props.inputRef,\n      min: this.props.minValue,\n      max: this.props.maxValue,\n      onPaste: this.props.onPaste === true ? e => {\n        e.preventDefault();\n      } : this.props.value,\n      pattern: this.props.pattern,\n      style: this.props.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, this.props.errors)));\n  }\n\n}\n\nFormInput.defaultProps = {\n  type: \"text\",\n  className: \"\"\n}; // FormInput.propTypes = {\n//     name: PropTypes.string.isRequired,\n//     type: PropTypes.string,\n//     placeholder: PropTypes.string.isRequired,\n//     type: PropTypes.oneOf(['text', 'number', 'password']),\n//     className: PropTypes.string,\n//     value: PropTypes.any,\n//     onChange: PropTypes.func.isRequired\n//   }\n\nexport default FormInput;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/components/form-input/form-input.component.jsx"],"names":["React","useImperativeHandle","useRef","Form","whitespaceTrim","FormInput","Component","render","props","formGroupClassName","name","label","isMandatory","onKeyDown","type","placeholder","onChange","value","isInvalid","className","defaultValue","maxLength","readOnly","isDisabled","onBlur","e","onFocus","onKeyUp","key","preventDefault","inputRef","minValue","maxValue","onPaste","pattern","style","errors","defaultProps"],"mappings":"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","sourcesContent":["import React, { useImperativeHandle, useRef } from 'react';\r\nimport './form-input.styles';\r\nimport { Form } from 'react-bootstrap';\r\nimport { whitespaceTrim } from '../CommonScript';\r\n\r\nclass  FormInput extends React.Component  {\r\n//React.forwardRef((props, ref) => {\r\n    // const inputRef = useRef();\r\n                    // onFocus={props.onFocus}\r\n    // const activate = () => {\r\n    //     inputRef.current.focus();\r\n    //     console.log('entered')\r\n    // }\r\n\r\n    // useImperativeHandle(ref, () => {\r\n    //     return {\r\n\r\n    //         focus: activate,\r\n\r\n    //     }\r\n    // })\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Form.Group className={`floating-label form-select w-100 floating-label react-select-wrap ${this.props.formGroupClassName? this.props.formGroupClassName: \"\"}`} controlId={this.props.name}>\r\n                    <Form.Label htmlFor={this.props.name}>{this.props.label}{this.props.isMandatory && <sup>*</sup>}</Form.Label>\r\n                    <Form.Control\r\n                        id={this.props.name}\r\n                        label={this.props.label}\r\n                        onKeyDown={this.props.onKeyDown}\r\n                        name={this.props.name}\r\n                        type={this.props.type}\r\n                        placeholder={this.props.placeholder}\r\n                        onChange={this.props.onChange}\r\n                        value={this.props.value}\r\n                        isInvalid={this.props.isInvalid}\r\n                        className={this.props.className}\r\n                        defaultValue={this.props.defaultValue}\r\n                        required={false}\r\n                        maxLength={this.props.maxLength}\r\n                        readOnly={this.props.readOnly}\r\n                        disabled={this.props.isDisabled}\r\n                        onBlur={this.props.onBlur}\r\n                        onBlurCapture={this.props.onBlur?(e)=>{this.props.onChange(whitespaceTrim(e));this.props.onBlur(e)}:(e)=>{this.props.onChange&& this.props.onChange(whitespaceTrim(e))} }\r\n                        onFocus={this.props.onFocus}\r\n                        onKeyUp={this.props.onKeyUp}\r\n                        onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }}\r\n                        autoComplete=\"off\"\r\n                        ref={this.props.inputRef}\r\n                        min={this.props.minValue}\r\n                        max={this.props.maxValue}\r\n                        onPaste={this.props.onPaste === true?(e)=>{\r\n                            e.preventDefault() \r\n                          } : this.props.value}\r\n                          pattern={this.props.pattern}\r\n                          style={this.props.style}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                    { this.props.errors }\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n \r\n\r\n}\r\nFormInput.defaultProps = {\r\n    type: \"text\",\r\n    className: \"\"\r\n}\r\n// FormInput.propTypes = {\r\n//     name: PropTypes.string.isRequired,\r\n//     type: PropTypes.string,\r\n//     placeholder: PropTypes.string.isRequired,\r\n//     type: PropTypes.oneOf(['text', 'number', 'password']),\r\n//     className: PropTypes.string,\r\n//     value: PropTypes.any,\r\n//     onChange: PropTypes.func.isRequired\r\n//   }\r\n\r\nexport default FormInput;"]},"metadata":{},"sourceType":"module"}