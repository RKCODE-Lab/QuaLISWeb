{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\PortalOrderDetailsTestTab.jsx\";\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { Nav, Row, Col } from 'react-bootstrap';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\n\nclass PortalOrderDetailsTestTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      testDataState: {\n        skip: 0,\n        take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n      }\n    };\n  }\n\n  render() {\n    const portalTestColumnList = [{\n      \"idsName\": \"IDS_TESTCATEGORY\",\n      \"dataField\": \"stestcategoryname\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_TEST\",\n      \"dataField\": \"stestname\",\n      \"width\": \"150px\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nportalordertestcode\",\n      data: this.props.PortalOrderTest,\n      dataResult: process(this.props.PortalOrderTest || [], this.state.testDataState),\n      dataState: this.state.testDataState,\n      dataStateChange: event => this.setState({\n        testDataState: event.dataState\n      }),\n      extractedColumnList: portalTestColumnList,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      pageable: true,\n      scrollable: 'scrollable',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.PortalOrderTest !== previousProps.PortalOrderTest) {\n      let {\n        testDataState\n      } = this.state;\n\n      if (this.props.dataState === undefined) {\n        testDataState = {\n          skip: 0,\n          take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n        };\n      }\n\n      this.setState({\n        testDataState\n      });\n    }\n  }\n\n}\n\n;\nexport default injectIntl(PortalOrderDetailsTestTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/registration/PortalOrderDetailsTestTab.jsx"],"names":["React","injectIntl","FormattedMessage","Nav","Row","Col","DataGrid","process","PortalOrderDetailsTestTab","Component","constructor","props","state","testDataState","skip","take","settings","parseInt","render","portalTestColumnList","PortalOrderTest","event","setState","dataState","inputParam","userInfo","componentDidUpdate","previousProps","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,QAA8B,iBAA9B;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AACA,MAAOC,yBAAP,SAAyCR,KAAK,CAACS,SAA/C,CAAwD;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAc;AACVC,MAAAA,aAAa,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,QAAX,GAAsBC,QAAQ,CAAC,KAAKN,KAAL,CAAWK,QAAX,CAAoB,EAApB,CAAD,CAA9B,GAA0D;AAA3E;AADL,KAAd;AAGH;;AACGE,EAAAA,MAAM,GAAE;AACJ,UAAMC,oBAAoB,GAAG,CACzB;AAAC,iBAAU,kBAAX;AAA8B,mBAAY,mBAA1C;AAA8D,eAAQ;AAAtE,KADyB,EAEzB;AAAC,iBAAU,UAAX;AAAsB,mBAAY,WAAlC;AAA8C,eAAQ;AAAtD,KAFyB,CAA7B;AAIJ,wBACI,uDAEI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACG,MAAA,eAAe,EAAG,sBADrB;AAEG,MAAA,IAAI,EAAI,KAAKR,KAAL,CAAWS,eAFtB;AAGG,MAAA,UAAU,EAAIb,OAAO,CAAC,KAAKI,KAAL,CAAWS,eAAX,IAA4B,EAA7B,EAAgC,KAAKR,KAAL,CAAWC,aAA3C,CAHxB;AAIG,MAAA,SAAS,EAAI,KAAKD,KAAL,CAAWC,aAJ3B;AAKG,MAAA,eAAe,EAAKQ,KAAD,IAAW,KAAKC,QAAL,CAAc;AAACT,QAAAA,aAAa,EAAEQ,KAAK,CAACE;AAAtB,OAAd,CALjC;AAMG,MAAA,mBAAmB,EAAIJ,oBAN1B;AAOG,MAAA,UAAU,EAAI,KAAKR,KAAL,CAAWa,UAP5B;AAQG,MAAA,QAAQ,EAAI,KAAKb,KAAL,CAAWc,QAR1B;AASG,MAAA,QAAQ,EAAE,IATb;AAUG,MAAA,UAAU,EAAE,YAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAFJ,CADJ;AAuBH;;AACDC,EAAAA,kBAAkB,CAACC,aAAD,EAAgB;AAC9B,QAAI,KAAKhB,KAAL,CAAWS,eAAX,KAA+BO,aAAa,CAACP,eAAjD,EAAkE;AAC9D,UAAI;AAAEP,QAAAA;AAAF,UAAmB,KAAKD,KAA5B;;AACA,UAAI,KAAKD,KAAL,CAAWY,SAAX,KAAwBK,SAA5B,EAAuC;AACnCf,QAAAA,aAAa,GAAG;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,QAAX,GAAsBC,QAAQ,CAAC,KAAKN,KAAL,CAAWK,QAAX,CAAoB,EAApB,CAAD,CAA9B,GAA0D;AAA3E,SAAhB;AACH;;AACD,WAAKM,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACH;AAEJ;;AA7CuD;;AA8CvD;AAED,eAAeZ,UAAU,CAACO,yBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nclass  PortalOrderDetailsTestTab extends React.Component{\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n        testDataState: { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 },\r\n    });\r\n}\r\n    render(){\r\n        const portalTestColumnList = [\r\n            {\"idsName\":\"IDS_TESTCATEGORY\",\"dataField\":\"stestcategoryname\",\"width\":\"150px\"},\r\n            {\"idsName\":\"IDS_TEST\",\"dataField\":\"stestname\",\"width\":\"150px\"}\r\n        ];\r\n    return (\r\n        <>\r\n        \r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n                    <DataGrid\r\n                       primaryKeyField = \"nportalordertestcode\"\r\n                       data = {this.props.PortalOrderTest}\r\n                       dataResult = {process(this.props.PortalOrderTest||[],this.state.testDataState)}\r\n                       dataState = {this.state.testDataState}\r\n                       dataStateChange = {(event) => this.setState({testDataState: event.dataState })}\r\n                       extractedColumnList = {portalTestColumnList}\r\n                       inputParam = {this.props.inputParam}\r\n                       userInfo = {this.props.userInfo}\r\n                       pageable={true}\r\n                       scrollable={'scrollable'}\r\n                       \r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\ncomponentDidUpdate(previousProps) {\r\n    if (this.props.PortalOrderTest !== previousProps.PortalOrderTest) {\r\n        let { testDataState} = this.state;\r\n        if (this.props.dataState=== undefined) {\r\n            testDataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 };\r\n        }\r\n        this.setState({ testDataState });\r\n    }\r\n\r\n}\r\n};\r\n\r\nexport default injectIntl(PortalOrderDetailsTestTab);"]},"metadata":{},"sourceType":"module"}