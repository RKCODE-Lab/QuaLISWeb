{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormTextarea from'../../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import{MediaHeader}from'../../../components/App.styles';import TestPopOver from'../../ResultEntryBySample/TestPopOver';var AddComment=function AddComment(props){var nameString=props.operation==='update'?props.selectedRecord.jsondata&&[props.selectedRecord.jsondata[props.displayName]]||[]:props.masterList?props.masterList.map(function(obj){return obj[props.displayName]||obj[props.jsonField][props.displayName];}):[];var message=\"\".concat(nameString.length,\" \").concat(props.intl.formatMessage({id:props.selectedListName||\"IDS_TESTS\"}),\" \").concat(props.intl.formatMessage({id:\"IDS_SELECTED\"}));return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,props.masterList&&Object.values(props.masterList).length>0?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\"},nameString.length===1?\"\".concat(props.intl.formatMessage({id:props.selectedListName||\"IDS_TESTS\"}),\": \").concat(nameString[0]):/*#__PURE__*/React.createElement(TestPopOver,{stringList:nameString,message:message}))))):\"\"),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},props.isTestComment?/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_SAMPLETESTCOMMENTS\"}),isSearchable:true,name:\"nsamplecommentscode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_PLEASESELECT\"}),isMandatory:true,showOption:true,isClearable:false,options:props.SampleTestComments||[],optionId:\"nsampletestcommentcode\",optionValue:\"ssampletestcommentname\",value:props.selectedRecord[\"nsamplecommentscode\"],onChange:function onChange(value){return props.onComboChange(value,\"nsamplecommentscode\");},alphabeticalSort:true}):\"\",/*#__PURE__*/React.createElement(FormTextarea,{name:\"scomments\",label:props.intl.formatMessage({id:\"IDS_COMMENT\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_COMMENT\"}),value:props.selectedRecord?props.selectedRecord[\"scomments\"]:\"\",rows:\"2\",required:true,isMandatory:true,maxLength:1500}))));};export default injectIntl(AddComment);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/attachmentscomments/comments/AddComment.jsx"],"names":["React","injectIntl","Row","Col","FormTextarea","FormSelectSearch","MediaHeader","TestPopOver","AddComment","props","nameString","operation","selectedRecord","jsondata","displayName","masterList","map","obj","jsonField","message","length","intl","formatMessage","id","selectedListName","Object","values","isTestComment","SampleTestComments","value","onComboChange","event","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport { MediaHeader } from '../../../components/App.styles';\r\nimport TestPopOver from '../../ResultEntryBySample/TestPopOver';\r\n\r\nconst AddComment = props => {\r\n    let nameString = props.operation === 'update'?  props.selectedRecord.jsondata && [props.selectedRecord.jsondata[props.displayName]] || [] : props.masterList ? props.masterList.map(obj=>obj[props.displayName]||obj[props.jsonField][props.displayName]) : []\r\n    let message= `${nameString.length} ${props.intl.formatMessage({ id: props.selectedListName||\"IDS_TESTS\" })} ${props.intl.formatMessage({ id: \"IDS_SELECTED\" })}`\r\n    return (\r\n        <>\r\n        <Row>\r\n            {props.masterList && Object.values(props.masterList).length > 0 ?\r\n                <div>\r\n                    <Row className=\"mb-4\">\r\n                        <Col md={12}>\r\n                            <MediaHeader className={`labelfont`}>\r\n                                {nameString.length === 1 ?\r\n                                        `${props.intl.formatMessage({id:props.selectedListName||\"IDS_TESTS\"})}: ${nameString[0] }`:\r\n                                        <TestPopOver stringList={nameString} message={message}></TestPopOver>\r\n\r\n                                }\r\n                            </MediaHeader>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            : \"\"}\r\n        </Row>\r\n        <Row>\r\n            <Col md=\"12\">\r\n                {props.isTestComment?\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_SAMPLETESTCOMMENTS\" })}\r\n                        isSearchable={true}\r\n                        name={\"nsamplecommentscode\"}\r\n                        isDisabled={false}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                        isMandatory={true}\r\n                        showOption={true}\r\n                        isClearable={false}\r\n                        options={props.SampleTestComments || []}\r\n                        optionId='nsampletestcommentcode'\r\n                        optionValue='ssampletestcommentname'\r\n                        value={props.selectedRecord[\"nsamplecommentscode\"]}\r\n                        onChange={value => props.onComboChange(value, \"nsamplecommentscode\")}\r\n                        alphabeticalSort={true}\r\n                    />\r\n                :\"\"}\r\n                <FormTextarea\r\n                    name={\"scomments\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_COMMENT\" })}\r\n                    onChange={(event) => props.onInputOnChange(event, 1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_COMMENT\" })}\r\n                    value={props.selectedRecord?props.selectedRecord[\"scomments\"]:\"\"}\r\n                    rows=\"2\"\r\n                    required={true}\r\n                    isMandatory={true}\r\n                    maxLength={1500}\r\n                />\r\n            </Col>    \r\n        </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddComment);"]},"metadata":{},"sourceType":"module"}