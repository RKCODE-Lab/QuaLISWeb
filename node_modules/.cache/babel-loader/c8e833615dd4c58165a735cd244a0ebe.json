{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{toast}from\"react-toastify\";import{replaceUpdatedObject,sortData}from\"../components/CommonScript\";import{transactionStatus}from\"../components/Enumeration\";import rsapi from\"../rsapi\";import{initRequest,updateStore}from\"./LoginAction\";import{DEFAULT_RETURN}from\"./LoginTypes\";import{postCRUDOrganiseTransSearch}from\"./ServiceAction\";export function getBAFilterStatus(filterRecord,masterData,userinfo){return function(dispatch){var inputData={napprovalversioncode:filterRecord.napproveconfversioncode.value,userinfo:userinfo};dispatch(initRequest(true));rsapi.post(\"batchapproval/getFilterStatus\",inputData).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{BA_FilterStatus:response.data.BA_FilterStatus});filterRecord=_objectSpread(_objectSpread({},filterRecord),{},{ntransactionstatus:{label:response.data.BA_FilterStatusValue.sfilterstatus,value:response.data.BA_FilterStatusValue.ntransactionstatus,item:response.data.BA_FilterStatusValue}});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,filterRecord:filterRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBatchCreation(inputParam){return function(dispatch){var inputData={};if(inputParam.inputData){inputData=inputParam.inputData;}else{inputData={nreleasebatchcode:parseInt(inputParam.nreleasebatchcode),dfrom:inputParam.dfrom,dto:inputParam.dto,napprovalversioncode:inputParam.napprovalversioncode,ntransactionstatus:inputParam.ntransactionstatus,activeBATab:inputParam.activeBATab,userinfo:inputParam.userinfo};}var componentDataState=inputParam.componentDataState,parameterDataState=inputParam.parameterDataState,testCommentDataState=inputParam.testCommentDataState,sampleHistoryDataState=inputParam.sampleHistoryDataState,batchApprovalDataState=inputParam.batchApprovalDataState,decisionDataState=inputParam.decisionDataState,batchClockDataState=inputParam.batchClockDataState,checklistDataState=inputParam.checklistDataState,batchAttachmentDataState=inputParam.batchAttachmentDataState,sampleapprovalDataState=inputParam.sampleapprovalDataState;dispatch(initRequest(true));rsapi.post(\"batchapproval/getBatchCreation\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);var masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);if(inputParam.searchRef!==undefined&&inputParam.searchRef.current!==null){inputParam.searchRef.current.value=\"\";masterData['searchedData']=undefined;}dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,updateDataState:true,componentDataState:_objectSpread(_objectSpread({},componentDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),parameterDataState:_objectSpread(_objectSpread({},parameterDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),testCommentDataState:_objectSpread(_objectSpread({},testCommentDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},sampleHistoryDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),batchApprovalDataState:_objectSpread(_objectSpread({},batchApprovalDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),decisionDataState:_objectSpread(_objectSpread({},decisionDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),batchClockDataState:_objectSpread(_objectSpread({},batchClockDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),checklistDataState:_objectSpread(_objectSpread({},checklistDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),batchAttachmentDataState:_objectSpread(_objectSpread({},batchAttachmentDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),sampleapprovalDataState:_objectSpread(_objectSpread({},sampleapprovalDataState),{},{skip:0,take:5,sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRoleChecklist(nchecklistversioncode,nreleasebatchcode,userinfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"batchapproval/viewBatchTemplate\",{nchecklistversioncode:nchecklistversioncode,nreleasebatchcode:nreleasebatchcode,nuserrolecode:userinfo.nuserrole,userinfo:userinfo}).then(function(response){var selectedRecord={};var editedQB=[];response.data&&response.data.map(function(qb){if(qb.sdefaultvalue!==null){selectedRecord[qb.nchecklistversionqbcode]={nchecklistversioncode:qb.nchecklistversioncode,nchecklistversionqbcode:qb.nchecklistversionqbcode,nchecklistqbcode:qb.nchecklistqbcode,sdefaultvalue:qb.sdefaultvalue};editedQB.push(qb.nchecklistversionqbcode);selectedRecord['editedQB']=editedQB;}return null;});dispatch({type:DEFAULT_RETURN,payload:{templateData:response.data,loading:false,openTemplateModal:true,selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nreleasebatchcode:nreleasebatchcode}),needSaveButton:true}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function onSaveBatchChecklist(selectedRecord,userInfo){return function(dispatch){var listChecklistVersionTemplate=[];if(selectedRecord&&selectedRecord.editedQB){selectedRecord.editedQB.map(function(qbcode){return listChecklistVersionTemplate.push(selectedRecord[qbcode]);});dispatch(initRequest(true));rsapi.post(\"batchapproval/createUpdateBatchChecklist\",{checklistversiontemplate:listChecklistVersionTemplate,nreleasebatchcode:selectedRecord[\"nreleasebatchcode\"],\"userinfo\":userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:{},templateData:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{openTemplateModal:false,selectedRecord:{},loading:false}});}};}export function validateBatchTest(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"batchapproval/validateBatchTests\",inputParam.inputData).then(function(response){if(response.data){if(inputParam.action.nesignneed===transactionStatus.YES){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:inputParam.masterData},openChildModal:true,screenName:\"performaction\",operation:\"dynamic\",showConfirmAlert:false,loading:false}};dispatch(updateStore(updateInfo));// dispatch({\n//     type: DEFAULT_RETURN, payload: {\n//         loadEsign: true,\n//         screenData: { inputParam, masterData: inputParam.masterData },\n//         openChildModal: true,\n//         screenName: \"performaction\",\n//         operation: \"dynamic\",\n//         showConfirmAlert: false,\n//         loading: false\n//     }\n// })\n}else{dispatch(performBatchAction(inputParam,true));}}else{dispatch({type:DEFAULT_RETURN,payload:{showConfirmAlert:true,loading:false,inputParam:inputParam}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function performBatchAction(inputParam){return function(dispatch){var URL=\"batchapproval/updateApproval\";if(inputParam.type===1){URL=\"batchapproval/updateDecision\";}dispatch(initRequest(true));rsapi.post(URL,inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);sortData(responseData);var masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{BA_BatchCreation:replaceUpdatedObject(response.data.updatedBatchCreation,inputParam.masterData.BA_BatchCreation,'nreleasebatchcode')});var respObject={masterData:masterData,inputParam:inputParam,openChildModal:false,operation:\"dynamic\",masterStatus:\"\",errorCode:undefined,loadEsign:false,showEsign:false,selectedRecord:{},loading:false,showConfirmAlert:false};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));// dispatch({ type: DEFAULT_RETURN, payload: { ...respObject } })\n}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBAChildTabDetail(inputData){return function(dispatch){if(inputData.nreleasebatchcode){var inputParamData={nreleasebatchcode:parseInt(inputData.nreleasebatchcode),activeBATab:inputData.activeBATab,userinfo:inputData.userinfo,nflag:inputData.nflag,napprovalversioncode:inputData.napprovalversioncode};var componentDataState=inputData.componentDataState,parameterDataState=inputData.parameterDataState,testCommentDataState=inputData.testCommentDataState,sampleHistoryDataState=inputData.sampleHistoryDataState,batchApprovalDataState=inputData.batchApprovalDataState,decisionDataState=inputData.decisionDataState,batchClockDataState=inputData.batchClockDataState,checklistDataState=inputData.checklistDataState,batchAttachmentDataState=inputData.batchAttachmentDataState,sampleapprovalDataState=inputData.sampleapprovalDataState;dispatch(initRequest(true));rsapi.post(\"batchapproval/getBAChildTab\",inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{BA_SelectedBatchCreation:inputData.BA_SelectedBatchCreation}),loading:false,activeBATab:inputData.activeBATab,screenName:inputData.screenName,updateDataState:inputData.updateDataState!==undefined?inputData.updateDataState:true,componentDataState:_objectSpread(_objectSpread({},componentDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),parameterDataState:_objectSpread(_objectSpread({},parameterDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),testCommentDataState:_objectSpread(_objectSpread({},testCommentDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},sampleHistoryDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),batchApprovalDataState:_objectSpread(_objectSpread({},batchApprovalDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),decisionDataState:_objectSpread(_objectSpread({},decisionDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),batchClockDataState:_objectSpread(_objectSpread({},batchClockDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),checklistDataState:_objectSpread(_objectSpread({},checklistDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),batchAttachmentDataState:_objectSpread(_objectSpread({},batchAttachmentDataState),{},{skip:0,take:5,sort:undefined,filter:undefined}),sampleapprovalDataState:_objectSpread(_objectSpread({},sampleapprovalDataState),{},{skip:0,take:5,sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},inputData.masterData),loading:false,activeBATab:inputData.activeBATab}});}};}export function getBASampleApprovalHistory(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"batchapproval/getBASampleApprovalHistory\",inputParam.inputData).then(function(response){var historyMap=inputParam.historyMap;historyMap=_objectSpread(_objectSpread({},historyMap),response.data.BA_SampleApprovalHistory);var masterData=_objectSpread(_objectSpread({},inputParam.masterData),{},{BA_SampleApprovalHistory:historyMap});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function BA_viewCheckList(inputData){return function(dispatch){var inputParamData={nreleasebatchcode:inputData.selectedRecord.nreleasebatchcode,nchecklistversioncode:inputData.selectedRecord.nchecklistversioncode,nuserrolecode:inputData.selectedRecord.nuserrolecode,userinfo:inputData.userInfo};dispatch(initRequest(true));rsapi.post(\"batchapproval/viewBatchTemplate\",inputParamData).then(function(response){var selectedRecord={};var editedQB=[];response.data&&response.data.map(function(qb){if(qb.sdefaultvalue!==null){selectedRecord[qb.nchecklistversionqbcode]={nchecklistversioncode:qb.nchecklistversioncode,nchecklistversionqbcode:qb.nchecklistversionqbcode,nchecklistqbcode:qb.nchecklistqbcode,sdefaultvalue:qb.sdefaultvalue};editedQB.push(qb.nchecklistversionqbcode);selectedRecord['editedQB']=editedQB;}return null;});dispatch({type:DEFAULT_RETURN,payload:{templateData:response.data,loading:false,openTemplateModal:true,selectedRecord:_objectSpread({},selectedRecord),needSaveButton:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function validateEsignforBatchApproval(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){var methodUrl=\"performaction\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}dispatch(performBatchAction(inputParam[\"screenData\"][\"inputParam\"],inputParam[\"screenData\"][\"masterData\"]));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSpecComponentView(inputParam){return function(dispatch){var inputData={testgroupspecification:{nallottedspeccode:inputParam.nallottedspeccode},userinfo:inputParam.userInfo};dispatch(initRequest(true));rsapi.post(\"testgroup/getTestGroupSampleType\",inputData).then(function(response){var _payload;var selectedRecord={sproductname:inputParam.sproductname,sspecname:inputParam.sspecname};dispatch({type:DEFAULT_RETURN,payload:(_payload={loading:false},_defineProperty(_payload,inputParam.modalName,true),_defineProperty(_payload,\"selectedRecord\",_objectSpread({},selectedRecord)),_defineProperty(_payload,\"SpecComponents\",response.data),_defineProperty(_payload,\"operation\",\"view\"),_defineProperty(_payload,\"screenName\",\"IDS_TESTGROUP\"),_defineProperty(_payload,\"noSave\",true),_payload)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/BatchApprovalAction.js"],"names":["toast","replaceUpdatedObject","sortData","transactionStatus","rsapi","initRequest","updateStore","DEFAULT_RETURN","postCRUDOrganiseTransSearch","getBAFilterStatus","filterRecord","masterData","userinfo","dispatch","inputData","napprovalversioncode","napproveconfversioncode","value","post","then","response","BA_FilterStatus","data","ntransactionstatus","label","BA_FilterStatusValue","sfilterstatus","item","type","payload","loading","catch","error","status","message","warn","getBatchCreation","inputParam","nreleasebatchcode","parseInt","dfrom","dto","activeBATab","componentDataState","parameterDataState","testCommentDataState","sampleHistoryDataState","batchApprovalDataState","decisionDataState","batchClockDataState","checklistDataState","batchAttachmentDataState","sampleapprovalDataState","responseData","searchRef","undefined","current","showFilter","updateDataState","skip","take","sort","filter","getRoleChecklist","nchecklistversioncode","nuserrolecode","nuserrole","selectedRecord","editedQB","map","qb","sdefaultvalue","nchecklistversionqbcode","nchecklistqbcode","push","templateData","openTemplateModal","needSaveButton","onSaveBatchChecklist","userInfo","listChecklistVersionTemplate","qbcode","checklistversiontemplate","validateBatchTest","action","nesignneed","YES","updateInfo","typeName","loadEsign","screenData","openChildModal","screenName","operation","showConfirmAlert","performBatchAction","URL","BA_BatchCreation","updatedBatchCreation","respObject","masterStatus","errorCode","showEsign","postParamList","getBAChildTabDetail","inputParamData","nflag","BA_SelectedBatchCreation","getBASampleApprovalHistory","historyMap","BA_SampleApprovalHistory","BA_viewCheckList","validateEsignforBatchApproval","methodUrl","toLowerCase","getSpecComponentView","testgroupspecification","nallottedspeccode","sproductname","sspecname","modalName"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport { replaceUpdatedObject, sortData } from \"../components/CommonScript\";\r\nimport { transactionStatus } from \"../components/Enumeration\";\r\nimport rsapi from \"../rsapi\";\r\nimport { initRequest, updateStore } from \"./LoginAction\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\nimport { postCRUDOrganiseTransSearch } from \"./ServiceAction\";\r\n\r\nexport function getBAFilterStatus(filterRecord,masterData,userinfo){\r\n    return function (dispatch){\r\n        let inputData={napprovalversioncode:filterRecord.napproveconfversioncode.value,userinfo};\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"batchapproval/getFilterStatus\", inputData)\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    BA_FilterStatus:response.data.BA_FilterStatus,\r\n                }\r\n                filterRecord={\r\n                    ...filterRecord,\r\n                    ntransactionstatus:{label:response.data.BA_FilterStatusValue.sfilterstatus,value:response.data.BA_FilterStatusValue.ntransactionstatus,item:response.data.BA_FilterStatusValue}\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        filterRecord\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getBatchCreation(inputParam) {\r\n    return function (dispatch) {\r\n        let inputData = {};\r\n        if (inputParam.inputData) {\r\n            inputData = inputParam.inputData\r\n        } else {\r\n            inputData = {\r\n                nreleasebatchcode: parseInt(inputParam.nreleasebatchcode),\r\n                dfrom: inputParam.dfrom,\r\n                dto: inputParam.dto,\r\n                napprovalversioncode: inputParam.napprovalversioncode,\r\n                ntransactionstatus: inputParam.ntransactionstatus,\r\n                activeBATab: inputParam.activeBATab,\r\n                userinfo: inputParam.userinfo\r\n            }\r\n        }\r\n        let {componentDataState,parameterDataState,testCommentDataState,sampleHistoryDataState,\r\n            batchApprovalDataState,decisionDataState,batchClockDataState,checklistDataState,\r\n            batchAttachmentDataState,sampleapprovalDataState} = inputParam\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"batchapproval/getBatchCreation\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\r\n                    inputParam.searchRef.current.value = \"\";\r\n                    masterData['searchedData'] = undefined\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        updateDataState :true,\r\n                        componentDataState:{...componentDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                        parameterDataState:{...parameterDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                        testCommentDataState:{...testCommentDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                        sampleHistoryDataState:{...sampleHistoryDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                        batchApprovalDataState:{...batchApprovalDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                        decisionDataState:{...decisionDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                        batchClockDataState:{...batchClockDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                        checklistDataState:{...checklistDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                        batchAttachmentDataState:{...batchAttachmentDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                        sampleapprovalDataState:{...sampleapprovalDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRoleChecklist(nchecklistversioncode, nreleasebatchcode, userinfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"batchapproval/viewBatchTemplate\", { nchecklistversioncode, nreleasebatchcode,nuserrolecode:userinfo.nuserrole, userinfo })\r\n            .then(response => {\r\n                let selectedRecord = {}\r\n                let editedQB = []\r\n                response.data && response.data.map(qb => {\r\n                    if (qb.sdefaultvalue !== null) {\r\n                        selectedRecord[qb.nchecklistversionqbcode] = { nchecklistversioncode: qb.nchecklistversioncode, nchecklistversionqbcode: qb.nchecklistversionqbcode, nchecklistqbcode: qb.nchecklistqbcode, sdefaultvalue: qb.sdefaultvalue }\r\n                        editedQB.push(qb.nchecklistversionqbcode)\r\n                        selectedRecord['editedQB'] = editedQB\r\n                    }\r\n                    return null;\r\n                })\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        templateData: response.data,\r\n                        loading: false,\r\n                        openTemplateModal: true,\r\n                        selectedRecord: { ...selectedRecord, nreleasebatchcode },\r\n                        needSaveButton:true\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function onSaveBatchChecklist(selectedRecord, userInfo) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let listChecklistVersionTemplate = [];\r\n        if (selectedRecord && selectedRecord.editedQB) {\r\n            selectedRecord.editedQB.map(qbcode =>\r\n                listChecklistVersionTemplate.push(selectedRecord[qbcode]))\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"batchapproval/createUpdateBatchChecklist\",\r\n                { checklistversiontemplate: listChecklistVersionTemplate, nreleasebatchcode: selectedRecord[\"nreleasebatchcode\"], \"userinfo\": userInfo })\r\n\r\n                .then(response => {\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            selectedRecord: {},\r\n                            templateData: undefined,\r\n                            loading: false\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    openTemplateModal: false, selectedRecord: {}, loading: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function validateBatchTest(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"batchapproval/validateBatchTests\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data) {\r\n                    if (inputParam.action.nesignneed === transactionStatus.YES) {\r\n\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true,  screenData: { inputParam, masterData: inputParam.masterData },\r\n                                openChildModal: true,\r\n                                screenName: \"performaction\",\r\n                                operation: \"dynamic\",\r\n                                showConfirmAlert: false,\r\n                                loading: false\r\n                            }\r\n                        }\r\n                         dispatch(updateStore(updateInfo));\r\n                        // dispatch({\r\n                        //     type: DEFAULT_RETURN, payload: {\r\n                        //         loadEsign: true,\r\n                        //         screenData: { inputParam, masterData: inputParam.masterData },\r\n                        //         openChildModal: true,\r\n                        //         screenName: \"performaction\",\r\n                        //         operation: \"dynamic\",\r\n                        //         showConfirmAlert: false,\r\n                        //         loading: false\r\n                        //     }\r\n                        // })\r\n                    } else {\r\n                        dispatch(performBatchAction(inputParam,true));\r\n                    }\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            showConfirmAlert: true,\r\n                            loading: false,\r\n                            inputParam\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\nexport function performBatchAction(inputParam) {\r\n    return function (dispatch) {\r\n        \r\n            let URL = \"batchapproval/updateApproval\";\r\n            if (inputParam.type === 1) {\r\n                URL = \"batchapproval/updateDecision\";\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(URL, inputParam.inputData)\r\n                .then(response => {\r\n                    const responseData={...response.data}\r\n                    sortData(responseData);\r\n                    let masterData = {\r\n                        ...inputParam.masterData,\r\n                        ...responseData,\r\n                        BA_BatchCreation: replaceUpdatedObject(response.data.updatedBatchCreation, inputParam.masterData.BA_BatchCreation, 'nreleasebatchcode'),\r\n                    }\r\n                    let respObject = {\r\n                        masterData,\r\n                        inputParam,\r\n                        openChildModal: false,\r\n                        operation: \"dynamic\",\r\n                        masterStatus: \"\",\r\n                        errorCode: undefined,\r\n                        loadEsign: false,\r\n                        showEsign: false,\r\n                        selectedRecord: {},\r\n                        loading: false,\r\n                        showConfirmAlert: false,\r\n                    }\r\n\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                    // dispatch({ type: DEFAULT_RETURN, payload: { ...respObject } })\r\n\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        \r\n    }\r\n}\r\nexport function getBAChildTabDetail(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.nreleasebatchcode) {\r\n            let inputParamData = {\r\n                nreleasebatchcode: parseInt(inputData.nreleasebatchcode),\r\n                activeBATab: inputData.activeBATab,\r\n                userinfo: inputData.userinfo,\r\n                nflag: inputData.nflag,\r\n                napprovalversioncode: inputData.napprovalversioncode\r\n\r\n            }\r\n            let {componentDataState,parameterDataState,testCommentDataState,sampleHistoryDataState,\r\n                batchApprovalDataState,decisionDataState,batchClockDataState,checklistDataState,\r\n                batchAttachmentDataState,sampleapprovalDataState} = inputData\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"batchapproval/getBAChildTab\", inputParamData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...inputData.masterData,\r\n                                ...responseData,\r\n                                BA_SelectedBatchCreation:inputData.BA_SelectedBatchCreation\r\n                            },\r\n                            loading: false,\r\n                            activeBATab: inputData.activeBATab,\r\n                            screenName: inputData.screenName,\r\n                            updateDataState :inputData.updateDataState !==undefined ? inputData.updateDataState :true,\r\n                            componentDataState:{...componentDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                            parameterDataState:{...parameterDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                            testCommentDataState:{...testCommentDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                            sampleHistoryDataState:{...sampleHistoryDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                            batchApprovalDataState:{...batchApprovalDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                            decisionDataState:{...decisionDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                            batchClockDataState:{...batchClockDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                            checklistDataState:{...checklistDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                            batchAttachmentDataState:{...batchAttachmentDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                            sampleapprovalDataState:{...sampleapprovalDataState,skip:0,take:5,sort:undefined,filter:undefined},\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData: {\r\n                        ...inputData.masterData\r\n                    },\r\n                    loading: false,\r\n                    activeBATab: inputData.activeBATab\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\nexport function getBASampleApprovalHistory(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"batchapproval/getBASampleApprovalHistory\", inputParam.inputData)\r\n            .then(response => {\r\n                let historyMap = inputParam.historyMap\r\n                historyMap = { ...historyMap, ...response.data.BA_SampleApprovalHistory }\r\n                const masterData = {\r\n                    ...inputParam.masterData,\r\n                    BA_SampleApprovalHistory: historyMap\r\n                };\r\n                sortData(masterData);\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    }\r\n                );\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function BA_viewCheckList(inputData) {\r\n\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nreleasebatchcode: inputData.selectedRecord.nreleasebatchcode,\r\n            nchecklistversioncode: inputData.selectedRecord.nchecklistversioncode,\r\n            nuserrolecode:inputData.selectedRecord.nuserrolecode,\r\n            userinfo: inputData.userInfo,\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"batchapproval/viewBatchTemplate\", inputParamData)\r\n            .then(response => {\r\n                let selectedRecord = {}\r\n                let editedQB = []\r\n                response.data && response.data.map(qb => {\r\n                    if (qb.sdefaultvalue !== null) {\r\n                        selectedRecord[qb.nchecklistversionqbcode] = { nchecklistversioncode: qb.nchecklistversioncode, nchecklistversionqbcode: qb.nchecklistversionqbcode, nchecklistqbcode: qb.nchecklistqbcode, sdefaultvalue: qb.sdefaultvalue }\r\n                        editedQB.push(qb.nchecklistversionqbcode)\r\n                        selectedRecord['editedQB'] = editedQB\r\n                    }\r\n                    return null;\r\n                })\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        templateData: response.data,\r\n                        loading: false,\r\n                        openTemplateModal: true,\r\n                        selectedRecord: { ...selectedRecord },\r\n                        needSaveButton:false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function validateEsignforBatchApproval(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n                    const methodUrl = \"performaction\"\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"]\r\n                    }\r\n                    dispatch(performBatchAction(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\nexport function getSpecComponentView(inputParam) {\r\n\r\n    return function (dispatch) {\r\n        let inputData = {\r\n            testgroupspecification:{nallottedspeccode:inputParam.nallottedspeccode},\r\n            userinfo:inputParam.userInfo,\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testgroup/getTestGroupSampleType\", inputData)\r\n            .then(response => {\r\n                let selectedRecord = {\r\n                    sproductname:inputParam.sproductname,\r\n                    sspecname:inputParam.sspecname,\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false,\r\n                        [inputParam.modalName]: true,\r\n                        selectedRecord: { ...selectedRecord },\r\n                        SpecComponents:response.data,\r\n                        operation:\"view\",\r\n                        screenName:\"IDS_TESTGROUP\",\r\n                        noSave:true\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}