{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{faCheck,faCopy,faUserTimes}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React from'react';import{Col,FormGroup,FormLabel,Nav,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import{ReadOnlyText}from'../../components/App.styles';///import { getStatusIcon } from '../../components/StatusIcon';\nimport ActionPopOver from'../product/ActionPopover';// import { Tooltip } from '@progress/kendo-react-tooltip';\n//import GenerateCertificate from '../../assets/image/generate-certificate.svg';\nimport{ReactComponent as Reports}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/report-Icon.svg\";import ReactTooltip from'react-tooltip';var SpecificationInfo=function SpecificationInfo(props){var selectedSpecification=props.selectedSpecification,controlMap=props.controlMap,selectedNode=props.selectedNode,userInfo=props.userInfo,approvalRoleActionDetail=props.approvalRoleActionDetail,selectedRecord=props.selectedRecord;var addSpecParam={testgroupspecification:selectedSpecification,selectedRecord:selectedRecord,userInfo:userInfo,selectedNode:selectedNode};var specInfoFields=[{\"fieldName\":\"sspecname\",\"label\":\"IDS_SPECNAME\"},{\"fieldName\":\"sapprovalstatus\",\"label\":\"IDS_APPROVALSTATUS\"},{\"fieldName\":\"sversion\",\"label\":\"IDS_VERSIONNO\"},{\"fieldName\":\"scomponentrequired\",\"label\":\"IDS_COMPONENTREQUIRED\"},{\"fieldName\":\"sexpirydate\",\"label\":\"IDS_EXPIRYDATE\"},{\"fieldName\":\"stimezoneid\",\"label\":\"IDS_TIMEZONE\"}];var copySpecId=controlMap.has(\"CopySpecification\")&&controlMap.get(\"CopySpecification\").ncontrolcode;var completedSpecId=controlMap.has(\"CompleteSpecification\")&&controlMap.get(\"CompleteSpecification\").ncontrolcode;var completeSpecParam={testgroupspecification:selectedSpecification,treetemplatemanipulation:selectedNode};var reportSpecId=controlMap.has(\"ReportSpecification\")&&controlMap.get(\"ReportSpecification\").ncontrolcode;var retireSpecId=controlMap.has(\"RetireSpecification\")&&controlMap.get(\"RetireSpecification\").ncontrolcode;var approvalActionId=controlMap.has(\"SpecApprovalAction\")&&controlMap.get(\"SpecApprovalAction\").ncontrolcode;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end mr-3\"},/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\"}),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",hidden:props.userRoleControlRights.indexOf(copySpecId)===-1,onClick:function onClick(){return props.addSpecification(\"copy\",addSpecParam,copySpecId);},\"data-for\":\"tooltip-list-wrap\",\"data-tip\":props.intl.formatMessage({id:\"IDS_COPY\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCopy})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",hidden:props.userRoleControlRights.indexOf(completedSpecId)===-1,onClick:function onClick(){return props.completeSpecification(\"complete\",_objectSpread({},completeSpecParam),completedSpecId);},\"data-for\":\"tooltip-list-wrap\",\"data-tip\":props.intl.formatMessage({id:\"IDS_COMPLETE\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheck})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",hidden:props.userRoleControlRights.indexOf(reportSpecId)===-1,onClick:function onClick(){return props.specificationReport(\"report\",reportSpecId);},\"data-for\":\"tooltip-list-wrap\",\"data-tip\":props.intl.formatMessage({id:\"IDS_SPECREPORT\"})},/*#__PURE__*/React.createElement(Reports,{className:\"custom_icons\",width:\"20\",height:\"20\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\"// hidden={props.userRoleControlRights.indexOf(retireSpecId) === -1}\n,hidden:true,\"data-for\":\"tooltip-list-wrap\",\"data-tip\":props.intl.formatMessage({id:\"IDS_RETIRE\"}),onClick:function onClick(){return props.retireSpec(\"retire\",_objectSpread({},completeSpecParam),approvalRoleActionDetail,retireSpecId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faUserTimes})),approvalRoleActionDetail&&approvalRoleActionDetail.length>0&&props.userRoleControlRights.indexOf(approvalActionId)!==-1&&/*#__PURE__*/ // <Dropdown className=\"mr-2\">\n//     <Dropdown.Toggle className=\"btn-circle btn-primary-blue flex\">\n//         <FontAwesomeIcon icon={faBolt} size=\"sm\"></FontAwesomeIcon>\n//     </Dropdown.Toggle>\n//     <Dropdown.Menu>\n// {approvalRoleActionDetail.map((action) =>\n// <Dropdown.Item onClick={() => props.approveSpecification(action.ntransactionstatus, action.nesignneed)}>\n//     <Nav.Link className='add-txt-btn blue-text ml-1' style={{ display: 'inline' }}>\n//         {getStatusIcon(action.ntransactionstatus)}\n//         <span className='ml-1 text-nowrap'><FormattedMessage id={action.sactiondisplaystatus}\n//             defaultMessage={action.sactiondisplaystatus} /></span>\n//     </Nav.Link>\n// </Dropdown.Item>\nReact.createElement(ActionPopOver,{actionDetails:approvalRoleActionDetail,roleActionDetails:approvalRoleActionDetail,dynamicButton:function dynamicButton(value){return props.approveSpecification(value.paramstatus,value.sign);}})),selectedSpecification&&Object.values(selectedSpecification).length?/*#__PURE__*/React.createElement(Row,null,specInfoFields.map(function(item,index){return/*#__PURE__*/React.createElement(Col,{md:6,key:\"specInfo_\".concat(index)},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,props.intl.formatMessage({id:item.label})),/*#__PURE__*/React.createElement(ReadOnlyText,null,selectedSpecification[item.fieldName])));})):\"\");};export default injectIntl(SpecificationInfo);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/testgroup/SpecificationInfo.jsx"],"names":["faCheck","faCopy","faUserTimes","FontAwesomeIcon","React","Col","FormGroup","FormLabel","Nav","Row","injectIntl","ReadOnlyText","ActionPopOver","ReactTooltip","SpecificationInfo","props","selectedSpecification","controlMap","selectedNode","userInfo","approvalRoleActionDetail","selectedRecord","addSpecParam","testgroupspecification","specInfoFields","copySpecId","has","get","ncontrolcode","completedSpecId","completeSpecParam","treetemplatemanipulation","reportSpecId","retireSpecId","approvalActionId","userRoleControlRights","indexOf","addSpecification","intl","formatMessage","id","completeSpecification","specificationReport","retireSpec","length","value","approveSpecification","paramstatus","sign","Object","values","map","item","index","label","fieldName"],"mappings":"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","sourcesContent":["import { faCheck, faCopy, faUserTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Col, FormGroup, FormLabel, Nav, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\n///import { getStatusIcon } from '../../components/StatusIcon';\r\nimport ActionPopOver from '../product/ActionPopover';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\n//import GenerateCertificate from '../../assets/image/generate-certificate.svg';\r\nimport { ReactComponent as Reports } from '../../assets/image/report-Icon.svg'\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst SpecificationInfo = (props) => {\r\n    const { selectedSpecification, controlMap, selectedNode, userInfo, approvalRoleActionDetail, selectedRecord } = props;\r\n    const addSpecParam = { testgroupspecification: selectedSpecification, selectedRecord, userInfo: userInfo, selectedNode };\r\n    const specInfoFields = [{ \"fieldName\": \"sspecname\", \"label\": \"IDS_SPECNAME\" },\r\n    { \"fieldName\": \"sapprovalstatus\", \"label\": \"IDS_APPROVALSTATUS\" },\r\n    { \"fieldName\": \"sversion\", \"label\": \"IDS_VERSIONNO\" },\r\n    { \"fieldName\": \"scomponentrequired\", \"label\": \"IDS_COMPONENTREQUIRED\" },\r\n    { \"fieldName\": \"sexpirydate\", \"label\": \"IDS_EXPIRYDATE\" },\r\n    { \"fieldName\": \"stimezoneid\", \"label\": \"IDS_TIMEZONE\" }];\r\n    const copySpecId = controlMap.has(\"CopySpecification\") && controlMap.get(\"CopySpecification\").ncontrolcode;\r\n    const completedSpecId = controlMap.has(\"CompleteSpecification\") && controlMap.get(\"CompleteSpecification\").ncontrolcode;\r\n    const completeSpecParam = { testgroupspecification: selectedSpecification, treetemplatemanipulation: selectedNode };\r\n    const reportSpecId = controlMap.has(\"ReportSpecification\") && controlMap.get(\"ReportSpecification\").ncontrolcode;\r\n    const retireSpecId = controlMap.has(\"RetireSpecification\") && controlMap.get(\"RetireSpecification\").ncontrolcode;\r\n    const approvalActionId = controlMap.has(\"SpecApprovalAction\") && controlMap.get(\"SpecApprovalAction\").ncontrolcode;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-end mr-3\">\r\n                {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true} > */}\r\n                <ReactTooltip place=\"bottom\" globalEventOff='click' />\r\n                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" hidden={props.userRoleControlRights.indexOf(copySpecId) === -1}\r\n                    onClick={() => props.addSpecification(\"copy\", addSpecParam, copySpecId)}\r\n                    data-for=\"tooltip-list-wrap\"\r\n                    data-tip={props.intl.formatMessage({ id: \"IDS_COPY\" })}>\r\n                    <FontAwesomeIcon icon={faCopy} />\r\n                </Nav.Link>\r\n                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" hidden={props.userRoleControlRights.indexOf(completedSpecId) === -1}\r\n                    onClick={() => props.completeSpecification(\"complete\", { ...completeSpecParam }, completedSpecId)}\r\n                    data-for=\"tooltip-list-wrap\"\r\n                    data-tip={props.intl.formatMessage({ id: \"IDS_COMPLETE\" })}>\r\n                    <FontAwesomeIcon icon={faCheck} />\r\n                </Nav.Link>\r\n\r\n\r\n                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                    hidden={props.userRoleControlRights.indexOf(reportSpecId) === -1}\r\n                    onClick={() => props.specificationReport(\"report\", reportSpecId)}\r\n                    data-for=\"tooltip-list-wrap\"\r\n                    data-tip={props.intl.formatMessage({ id: \"IDS_SPECREPORT\" })}>\r\n                    {/* <Image src={GenerateCertificate} alt=\"generate-certificate\" width=\"20\" hieght=\"20\"\r\n                        className=\"ActionIconColor img-normalize\"/> */}\r\n                    <Reports className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                </Nav.Link>\r\n\r\n                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                    // hidden={props.userRoleControlRights.indexOf(retireSpecId) === -1}\r\n                    hidden\r\n                    data-for=\"tooltip-list-wrap\"\r\n                    data-tip={props.intl.formatMessage({ id: \"IDS_RETIRE\" })}\r\n                    onClick={() => props.retireSpec(\"retire\", { ...completeSpecParam }, approvalRoleActionDetail, retireSpecId)}\r\n                >\r\n                    <FontAwesomeIcon icon={faUserTimes} />\r\n                </Nav.Link>\r\n\r\n                {/* </Tooltip> */}\r\n                {approvalRoleActionDetail && approvalRoleActionDetail.length > 0 &&\r\n                    props.userRoleControlRights.indexOf(approvalActionId) !== -1 &&\r\n                    // <Dropdown className=\"mr-2\">\r\n                    //     <Dropdown.Toggle className=\"btn-circle btn-primary-blue flex\">\r\n                    //         <FontAwesomeIcon icon={faBolt} size=\"sm\"></FontAwesomeIcon>\r\n                    //     </Dropdown.Toggle>\r\n                    //     <Dropdown.Menu>\r\n                    // {approvalRoleActionDetail.map((action) =>\r\n                    // <Dropdown.Item onClick={() => props.approveSpecification(action.ntransactionstatus, action.nesignneed)}>\r\n                    //     <Nav.Link className='add-txt-btn blue-text ml-1' style={{ display: 'inline' }}>\r\n                    //         {getStatusIcon(action.ntransactionstatus)}\r\n                    //         <span className='ml-1 text-nowrap'><FormattedMessage id={action.sactiondisplaystatus}\r\n                    //             defaultMessage={action.sactiondisplaystatus} /></span>\r\n                    //     </Nav.Link>\r\n                    // </Dropdown.Item>\r\n\r\n                    <ActionPopOver\r\n                        actionDetails={approvalRoleActionDetail}\r\n                        roleActionDetails={approvalRoleActionDetail}\r\n                        dynamicButton={(value) => props.approveSpecification(value.paramstatus, value.sign)}\r\n                    >\r\n                    </ActionPopOver>\r\n                }\r\n\r\n                {/* //)} */}\r\n                {/* //</Dropdown.Menu>\r\n                    </Dropdown>} */}\r\n            </div>\r\n\r\n            {selectedSpecification && Object.values(selectedSpecification).length ?\r\n                <Row>\r\n                    {specInfoFields.map((item, index) => {\r\n                        return (\r\n                            <Col md={6} key={`specInfo_${index}`}>\r\n                                <FormGroup>\r\n                                    <FormLabel>{props.intl.formatMessage({ id: item.label })}</FormLabel>\r\n                                    <ReadOnlyText>{selectedSpecification[item.fieldName]}</ReadOnlyText>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row> : \"\"\r\n            }\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default injectIntl(SpecificationInfo);"]},"metadata":{},"sourceType":"module"}