{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';import{MediaHeader}from'../../components/App.styles';var TestEditForm=function TestEditForm(props){return/*#__PURE__*/React.createElement(React.Fragment,null,Object.values(props.selecteRecord).length>0?/*#__PURE__*/React.createElement(Row,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\"},\"Test: \",\" \"+props.selecteRecord.stestsynonym))):\"\",/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_SOURCE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isSearchable:false,name:\"nsourcecode\",isDisabled:false,isMandatory:true,options:props.sourceValues||[],optionId:\"nsourcecode\",optionValue:\"ssourcename\",value:props.selecteRecord?props.selecteRecord.nsourcecode:\"\",showOption:true,required:true,onChange:function onChange(event){return props.onComboChange(event,'nsourcecode');},isMulti:false,closeMenuOnSelect:true//alphabeticalSort={true}\n})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_METHOD\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isSearchable:false,name:\"nmethodcode\",isDisabled:false,isMandatory:true,options:props.methodValues||[],optionId:\"nmethodcode\",optionValue:\"smethodname\",value:props.selecteRecord?props.selecteRecord.nmethodcode:\"\",showOption:true,required:true,onChange:function onChange(event){return props.onComboChange(event,'nmethodcode');},isMulti:false,closeMenuOnSelect:true//alphabeticalSort={true}\n}))));};export default injectIntl(TestEditForm);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/ResultEntryBySample/TestEditForm.jsx"],"names":["React","Row","Col","FormSelectSearch","injectIntl","MediaHeader","TestEditForm","props","Object","values","selecteRecord","length","stestsynonym","intl","formatMessage","id","sourceValues","nsourcecode","event","onComboChange","methodValues","nmethodcode"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CAEA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,WAAT,KAA4B,6BAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5B,mBACI,wCAEQC,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,aAApB,EAAmCC,MAAnC,CAA4C,CAA5C,cACI,oBAAC,GAAD,EAAK,SAAS,CAAC,MAAf,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,WAAD,EAAa,SAAS,YAAtB,WAA4C,IAAMJ,KAAK,CAACG,aAAN,CAAoBE,YAAtE,CADJ,CADJ,CADJ,CAMM,EARd,cAWI,oBAAE,GAAF,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,SAAS,CAAEL,KAAK,CAACM,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,YAAN,CAAzB,CADf,CAEI,WAAW,CAAER,KAAK,CAACM,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CAFjB,CAGI,YAAY,CAAE,KAHlB,CAII,IAAI,CAAE,aAJV,CAKI,UAAU,CAAE,KALhB,CAMI,WAAW,CAAE,IANjB,CAOI,OAAO,CAAER,KAAK,CAACS,YAAN,EAAsB,EAPnC,CAQI,QAAQ,CAAC,aARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAET,KAAK,CAACG,aAAN,CAAsBH,KAAK,CAACG,aAAN,CAAoBO,WAA1C,CAAwD,EAVnE,CAWI,UAAU,CAAE,IAXhB,CAYI,QAAQ,CAAE,IAZd,CAaI,QAAQ,CAAE,kBAACC,KAAD,QAAWX,CAAAA,KAAK,CAACY,aAAN,CAAoBD,KAApB,CAA2B,aAA3B,CAAX,EAbd,CAcI,OAAO,CAAE,KAdb,CAeI,iBAAiB,CAAE,IACvB;AAhBA,EADJ,CADJ,cAsBI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eAEI,oBAAC,gBAAD,EACI,SAAS,CAAEX,KAAK,CAACM,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,YAAN,CAAzB,CADf,CAEI,WAAW,CAAER,KAAK,CAACM,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CAFjB,CAGI,YAAY,CAAE,KAHlB,CAII,IAAI,CAAE,aAJV,CAKI,UAAU,CAAE,KALhB,CAMI,WAAW,CAAE,IANjB,CAOI,OAAO,CAAER,KAAK,CAACa,YAAN,EAAsB,EAPnC,CAQI,QAAQ,CAAC,aARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAEb,KAAK,CAACG,aAAN,CAAsBH,KAAK,CAACG,aAAN,CAAoBW,WAA1C,CAAwD,EAVnE,CAWI,UAAU,CAAE,IAXhB,CAYI,QAAQ,CAAE,IAZd,CAaI,QAAQ,CAAE,kBAACH,KAAD,QAAWX,CAAAA,KAAK,CAACY,aAAN,CAAoBD,KAApB,CAA2B,aAA3B,CAAX,EAbd,CAcI,OAAO,CAAE,KAdb,CAeI,iBAAiB,CAAE,IACvB;AAhBA,EAFJ,CAtBJ,CAXJ,CADJ,CA0DH,CA3DD,CA4DA,cAAed,CAAAA,UAAU,CAACE,YAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nimport { injectIntl } from 'react-intl';\r\nimport { MediaHeader } from '../../components/App.styles';\r\n\r\nconst TestEditForm = (props) => {\r\n    return (\r\n        <>\r\n            {\r\n                Object.values(props.selecteRecord).length > 0 ?\r\n                    <Row className=\"mb-4\">\r\n                        <Col md={12}>\r\n                            <MediaHeader className={`labelfont`}>Test: {\" \" + props.selecteRecord.stestsynonym}</MediaHeader>\r\n                        </Col>\r\n                    </Row>\r\n                    : \"\"\r\n            }\r\n\r\n            < Row >\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_SOURCE\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isSearchable={false}\r\n                        name={\"nsourcecode\"}\r\n                        isDisabled={false}\r\n                        isMandatory={true}\r\n                        options={props.sourceValues || []}\r\n                        optionId='nsourcecode'\r\n                        optionValue='ssourcename'\r\n                        value={props.selecteRecord ? props.selecteRecord.nsourcecode : \"\"}\r\n                        showOption={true}\r\n                        required={true}\r\n                        onChange={(event) => props.onComboChange(event, 'nsourcecode')}\r\n                        isMulti={false}\r\n                        closeMenuOnSelect={true}\r\n                    //alphabeticalSort={true}\r\n                    />\r\n                </Col>\r\n\r\n                <Col md={12}>\r\n\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_METHOD\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isSearchable={false}\r\n                        name={\"nmethodcode\"}\r\n                        isDisabled={false}\r\n                        isMandatory={true}\r\n                        options={props.methodValues || []}\r\n                        optionId='nmethodcode'\r\n                        optionValue='smethodname'\r\n                        value={props.selecteRecord ? props.selecteRecord.nmethodcode : \"\"}\r\n                        showOption={true}\r\n                        required={true}\r\n                        onChange={(event) => props.onComboChange(event, 'nmethodcode')}\r\n                        isMulti={false}\r\n                        closeMenuOnSelect={true}\r\n                    //alphabeticalSort={true}\r\n                    />\r\n                </Col>\r\n            </Row >\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(TestEditForm);\r\n"]},"metadata":{},"sourceType":"module"}