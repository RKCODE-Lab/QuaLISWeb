{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\goodsin\\\\GoodsIn.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { callService, crudMaster, updateStore, getGoodsInFilterSubmit, validateEsignCredential, getGoodsInComboService, getGoodsInDetail, getClient, getProjectType, getProject, filterColumnData, getPreviewTemplate, viewInformation, checkListGoodsIn, downloadGoodsIn, onSaveGoodsInCheckList, validateEsignGoodsIn } from '../../actions';\nimport { toast } from 'react-toastify';\nimport { convertDateValuetoString, rearrangeDateFormat, getControlMap, showEsign, formatInputDate, comboChild, convertDateTimetoStringDBFormat, onDropAttachFileList, deleteAttachmentDropZone, Lims_JSON_stringify } from '../../components/CommonScript';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { Col, Row, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport GoodsInFilter from './GoodsInFilter';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport AddGoodsIn from './AddGoodsIn';\nimport Esign from '../audittrail/Esign';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport { SampleType, designProperties, transactionStatus } from '../../components/Enumeration';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport { ContentPanel, ReadOnlyText } from '../../components/App.styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faListAlt, faCloudDownloadAlt, faEye } from '@fortawesome/free-solid-svg-icons';\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\nimport { ReactComponent as GoodsReceivedIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/goods-received.svg\";\nimport AddFile from './AddFile';\nimport GoodsInView from './GoodsInView';\nimport GoodsInChecklist from './GoodsInChecklist';\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\nimport { REPORTTYPE } from '../../components/Enumeration';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass GoodsIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.handleFilterDateChange = (dateName, dateValue) => {\n      let masterData = this.props.Login.masterData;\n      masterData[dateName] = dateValue;\n      this.setState({\n        masterData\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTemplateInputChange = (event, control) => {\n      let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTemplateComboChange = (comboData, control) => {\n      let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTemplateDateChange = (dateData, control) => {\n      let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onFilterSubmit = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realfromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\n      let realtoDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\n      let masterData = { ...this.props.Login.masterData,\n        realfromDate,\n        realtoDate\n      };\n      let inputData = {\n        fromDate: obj.fromDate,\n        toDate: obj.toDate,\n        userinfo: this.props.Login.userInfo\n      };\n      let inputParam = {\n        masterData,\n        inputData\n      };\n      this.props.getGoodsInFilterSubmit(inputParam);\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realfromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\n      let realtoDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\n      let masterData = { ...this.props.Login.masterData,\n        realfromDate,\n        realtoDate\n      };\n      let inputData = {\n        fromDate: obj.fromDate,\n        toDate: obj.toDate,\n        userinfo: this.props.Login.userInfo\n      };\n      let inputParam = {\n        masterData,\n        inputData\n      };\n      this.props.getGoodsInFilterSubmit(inputParam);\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let screenName = this.props.Login.screenName;\n      let operation = this.props.Login.operation;\n      let openTemplateModal = this.props.Login.openTemplateModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"receive\" || this.props.Login.operation === \"approve\") {\n          loadEsign = false;\n          openModal = false;\n          openTemplateModal = false;\n          selectedRecord = {};\n        } else {\n          if (this.props.Login.operation === \"checklist\") {\n            openModal = false;\n          }\n\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        openTemplateModal = false;\n        selectedRecord = {};\n        screenName = \"\";\n        operation = \"\";\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          openTemplateModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          screenName,\n          operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n\n      if (this.props.Login.operation === \"checklist\") {\n        this.props.validateEsignGoodsIn(inputParam, \"openModal\");\n      } else {\n        this.props.validateEsignCredential(inputParam, \"openModal\");\n      }\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"agree\") {\n          selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n        } else if (event.target.name === \"noutofhours\") {\n          selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n        } else {\n          selectedRecord[event.target.name] = event.target.checked === true ? 1 : 2;\n        }\n      } else {\n        if (event.target.value !== \"\") {\n          selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (fieldName === \"nclientcatcode\") {\n        selectedRecord[\"nclientcatcode\"] = comboData;\n        this.props.getClient(this.state.selectedRecord.nclientcatcode.value, this.props.Login.masterData, this.props.Login.userInfo, selectedRecord);\n      } else if (fieldName === \"nclientcode\") {\n        selectedRecord[\"nclientcode\"] = comboData;\n        this.props.getProjectType(this.state.selectedRecord.nclientcatcode.value, this.state.selectedRecord.nclientcode.value, this.props.Login.masterData, this.props.Login.userInfo, selectedRecord);\n      } else if (fieldName === \"nprojecttypecode\") {\n        selectedRecord[\"nprojecttypecode\"] = comboData;\n\n        if (comboData !== null) {\n          this.props.getProject(this.state.selectedRecord.nclientcatcode.value, this.state.selectedRecord.nclientcode.value, this.state.selectedRecord.nprojecttypecode.value, this.props.Login.masterData, this.props.Login.userInfo, selectedRecord);\n        } else {\n          delete selectedRecord[\"nprojecttypecode\"];\n          delete selectedRecord[\"nprojectmastercode\"];\n          this.setState({\n            selectedRecord\n          });\n        }\n      } else if (fieldName === \"nprojectmastercode\") {\n        selectedRecord[\"nprojectmastercode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      } else if (fieldName === \"ncouriercode\") {\n        selectedRecord[\"ncouriercode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onDynamicComboChange = (comboData, control, customName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      let comboName = customName || control.label;\n\n      if (comboData) {\n        comboData[\"item\"] = { ...comboData[\"item\"],\n          \"pkey\": control.valuemember,\n          \"nquerybuildertablecode\": control.nquerybuildertablecode,\n          source: control.source\n        };\n        selectedRecord[comboName] = comboData;\n      } else {\n        selectedRecord[comboName] = [];\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericBlur = control => {\n      let selectedRecord = this.state.selectedRecord;\n\n      if (selectedRecord[control.label]) {\n        if (control.max) {\n          if (!(selectedRecord[control.label] < parseFloat(control.max))) {\n            selectedRecord[control.label] = control.precision ? parseFloat(control.max) : parseInt(control.max);\n          }\n        }\n\n        if (control.min) {\n          if (!(selectedRecord[control.label] > parseFloat(control.min))) {\n            selectedRecord[control.label] = control.precision ? parseFloat(control.min) : parseInt(control.min);\n          }\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.sampleInfoDataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.Login.masterData.GoodsInSample, event.dataState),\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      if (this.props.Login.screenName === \"IDS_GOODSIN\") {\n        if (this.state.selectedRecord[\"nnoofpackages\"] <= 0) {\n          return toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_ENTERTHEPACKAGEGREATERTHANZERO\"\n          }));\n        }\n\n        let postParam = undefined;\n        let dataState = undefined;\n        let inputData = [];\n        inputData[\"goodsin\"] = {};\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let fromDate = obj.fromDate;\n        let toDate = obj.toDate;\n        inputData[\"fromDate\"] = fromDate;\n        inputData[\"toDate\"] = toDate;\n\n        if (this.props.Login.operation === \"update\") {\n          postParam = {\n            inputListName: \"GoodsIn\",\n            selectedObject: \"selectedGoodsIn\",\n            primaryKeyField: \"ngoodsincode\"\n          };\n          postParam[\"primaryKeyValue\"] = this.props.Login.masterData.selectedGoodsIn.ngoodsincode;\n          inputData[\"goodsin\"][\"ngoodsincode\"] = this.props.Login.masterData.selectedGoodsIn.ngoodsincode;\n        }\n\n        inputData[\"goodsin\"][\"nclientcatcode\"] = this.state.selectedRecord[\"nclientcatcode\"] ? this.state.selectedRecord[\"nclientcatcode\"].value : -1;\n        inputData[\"goodsin\"][\"nclientcode\"] = this.state.selectedRecord[\"nclientcode\"] ? this.state.selectedRecord[\"nclientcode\"].value : -1;\n        inputData[\"goodsin\"][\"nprojecttypecode\"] = this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"].value : -1;\n        inputData[\"goodsin\"][\"nprojectmastercode\"] = this.state.selectedRecord[\"nprojectmastercode\"] ? this.state.selectedRecord[\"nprojectmastercode\"].value : -1;\n        inputData[\"goodsin\"][\"ncouriercode\"] = this.state.selectedRecord[\"ncouriercode\"] ? this.state.selectedRecord[\"ncouriercode\"].value : -1;\n        inputData[\"goodsin\"][\"nnoofpackages\"] = this.state.selectedRecord[\"nnoofpackages\"];\n        inputData[\"goodsin\"][\"noutofhours\"] = this.state.selectedRecord[\"noutofhours\"] ? this.state.selectedRecord[\"noutofhours\"] : transactionStatus.NO;\n        inputData[\"goodsin\"][\"sconsignmentno\"] = this.state.selectedRecord[\"sconsignmentno\"] ? this.state.selectedRecord[\"sconsignmentno\"] : \"\";\n        inputData[\"goodsin\"][\"ssecurityrefno\"] = this.state.selectedRecord[\"ssecurityrefno\"] ? this.state.selectedRecord[\"ssecurityrefno\"] : \"\";\n        inputData[\"goodsin\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] ? this.state.selectedRecord[\"scomments\"] : \"\";\n        inputData[\"goodsin\"][\"dgoodsindatetime\"] = formatInputDate(this.state.selectedRecord[\"dgoodsindatetime\"], false); //inputData[\"goodsin\"][\"ntzgoodsindatetime\"] = this.state.selectedRecord[\"ntimezonecode\"] ? this.state.selectedRecord[\"ntimezonecode\"].value : 1;\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"GoodsIn\",\n          displayName: this.props.Login.inputParam.displayName,\n          inputData: inputData,\n          selectedId: this.state.selectedRecord[\"ngoodsincode\"],\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          dataState,\n          searchRef: this.searchRef,\n          postParam: postParam\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openModal: true,\n              screenName: \"IDS_GOODSIN\",\n              operation: this.props.Login.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_GOODSINSAMPLE\" && this.props.Login.operation === \"create\") {\n        this.insertGoodsInSample();\n      } else if (this.props.Login.screenName === \"IDS_GOODSINSAMPLE\" && this.props.Login.operation === \"import\") {\n        this.importGoodsInSample();\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteGoodsIn(\"delete\", deleteId));\n    };\n\n    this.DeleteGoodsIn = (operation, ncontrolCode) => {\n      let inputData = [];\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let fromDate = obj.fromDate;\n      let toDate = obj.toDate;\n      inputData[\"fromDate\"] = fromDate;\n      inputData[\"toDate\"] = toDate;\n      inputData[\"goodsin\"] = this.props.Login.masterData.selectedGoodsIn;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"GoodsIn\",\n        selectedObject: \"selectedGoodsIn\",\n        primaryKeyField: \"ngoodsincode\",\n        primaryKeyValue: this.props.Login.masterData.selectedGoodsIn.ngoodsincode,\n        fetchUrl: \"goodsin/getActiveGoodsInById\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"GoodsIn\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_GOODSIN\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.receiveGoodsIn = (operation, ncontrolCode) => {\n      let inputData = [];\n      inputData[\"goodsin\"] = this.props.Login.masterData.selectedGoodsIn;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"GoodsIn\",\n        selectedObject: \"selectedGoodsIn\",\n        primaryKeyField: \"ngoodsincode\",\n        primaryKeyValue: this.props.Login.masterData.selectedGoodsIn.ngoodsincode,\n        fetchUrl: \"goodsin/getActiveGoodsInById\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"GoodsIn\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"receive\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_GOODSIN\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.approveGoodsIn = (operation, ncontrolCode) => {\n      let inputData = [];\n      inputData[\"goodsin\"] = this.props.Login.masterData.selectedGoodsIn;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"GoodsIn\",\n        selectedObject: \"selectedGoodsIn\",\n        primaryKeyField: \"ngoodsincode\",\n        primaryKeyValue: this.props.Login.masterData.selectedGoodsIn.ngoodsincode,\n        fetchUrl: \"goodsin/getActiveGoodsInById\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"GoodsIn\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"approve\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_GOODSIN\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.openSampleGoodsIn = () => {\n      const addSampleId = this.state.controlMap.has(\"AddSampleGoodsIn\") ? this.state.controlMap.get(\"AddSampleGoodsIn\").ncontrolcode : -1;\n      const Status = this.props.Login.masterData.selectedGoodsIn.ntransactionstatus;\n\n      if (Status === transactionStatus.APPROVED) {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECEIVERECORD\"\n        }));\n      } else {\n        this.addSampleGoodsIn(\"IDS_GOODSINSAMPLE\", \"create\", this.props.Login.masterData, this.state.selectedRecord, this.props.Login.userInfo, addSampleId);\n      }\n    };\n\n    this.addSampleGoodsIn = (ScreenName, operation, masterData, selectedRecord, userInfo, controlCode, importData) => {\n      let data = [];\n      const withoutCombocomponent = [];\n      let mandatorySampleFields = [];\n      const Layout = this.props.Login.masterData.DesignTemplateMapping && this.props.Login.masterData.DesignTemplateMapping[0].jsondata;\n\n      if (Layout !== undefined && Layout !== null) {\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.hasOwnProperty(\"children\")) {\n                component.children.map(componentrow => {\n                  if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\" || componentrow.inputtype === \"frontendsearchfilter\") {\n                    data.push(componentrow);\n                  } else {\n                    withoutCombocomponent.push(componentrow);\n                  }\n\n                  if (componentrow.mandatory === true) {\n                    mandatorySampleFields.push({\n                      \"mandatory\": true,\n                      \"idsName\": componentrow.label,\n                      \"dataField\": componentrow.label,\n                      \"mandatoryLabel\": componentrow.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                      \"controlType\": componentrow.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                    });\n                  }\n                });\n              } else {\n                component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\" || component.inputtype === \"frontendsearchfilter\" ? data.push(component) : withoutCombocomponent.push(component);\n\n                if (component.mandatory === true) {\n                  mandatorySampleFields.push({\n                    \"mandatory\": true,\n                    \"idsName\": component.label,\n                    \"dataField\": component.label,\n                    \"mandatoryLabel\": component.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                    \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                  });\n                }\n              }\n            });\n            this.setState({\n              mandatorySampleFields: mandatorySampleFields\n            });\n          });\n        });\n        const comboComponents = data;\n        let childColumnList = {};\n        data.map(columnList => {\n          const val = comboChild(data, columnList, childColumnList, true);\n          data = val.data;\n          childColumnList = val.childColumnList;\n          return null;\n        });\n        const mapOfFilterRegData = {\n          nsampletypecode: parseInt(SampleType.GOODSIN)\n        };\n        this.props.getPreviewTemplate(masterData, userInfo, controlCode, data, selectedRecord, childColumnList, comboComponents, withoutCombocomponent, true, true, mapOfFilterRegData, false, operation, ScreenName, importData);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_CONFIGUREGOODSINTEMPLATE\"\n        }));\n      }\n    };\n\n    this.ImportFile = () => {\n      const Status = this.props.Login.masterData.selectedGoodsIn.ntransactionstatus;\n      let updateInfo = {};\n\n      if (Status === transactionStatus.APPROVED) {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECEIVERECORD\"\n        }));\n      } else {\n        updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openModal: true,\n            operation: \"import\",\n            screenName: \"IDS_GOODSINSAMPLE\"\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onDropSampleFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\"\n      });\n    };\n\n    this.DeleteGoodsInSample = deleteParam => {\n      let inputData = [];\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let fromDate = obj.fromDate;\n      let toDate = obj.toDate;\n      inputData[\"fromDate\"] = fromDate;\n      inputData[\"toDate\"] = toDate;\n      inputData[\"ngoodsincode\"] = deleteParam.selectedRecord.ngoodsincode;\n      inputData[\"ngoodsinsamplecode\"] = deleteParam.selectedRecord.ngoodsinsamplecode;\n      inputData[\"ndesigntemplatemappingcode\"] = deleteParam.selectedRecord.ndesigntemplatemappingcode;\n      inputData[\"ntransactionstatus\"] = this.props.Login.masterData.selectedGoodsIn.ntransactionstatus;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"GoodsIn\",\n        selectedObject: \"selectedGoodsIn\",\n        primaryKeyField: \"ngoodsincode\",\n        primaryKeyValue: this.props.Login.masterData.selectedGoodsIn.ngoodsincode,\n        fetchUrl: \"goodsin/getActiveGoodsInById\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"GoodsInSample\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_GOODSINSAMPLE\",\n            operation: deleteParam.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.insertGoodsInSample = () => {\n      let Map = {};\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let fromDate = obj.fromDate;\n      let toDate = obj.toDate;\n      Map[\"fromDate\"] = fromDate;\n      Map[\"toDate\"] = toDate;\n      Map[\"ngoodsincode\"] = this.props.Login.masterData.selectedGoodsIn.ngoodsincode;\n      Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.DesignTemplateMapping[0].ndesigntemplatemappingcode;\n      const param = this.goodsInSample(this.props.Login.masterData, this.state.selectedRecord, this.props.Login.masterData.DesignTemplateMapping[0].jsondata, this.props.Login.userInfo, this.props.Login.defaultTimeZone, 'create', this.props.Login.comboComponents);\n      Map[\"GoodsInSample\"] = param.GoodsInSample;\n      Map[\"DateList\"] = param.dateList;\n      Map[\"userinfo\"] = this.props.Login.userInfo;\n      Map[\"combinationunique\"] = this.state.DynamicCombinationUnique;\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"GoodsInSample\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: Map,\n        selectedId: this.state.selectedRecord[\"ngoodsinsamplecode\"],\n        operation: 'create',\n        searchRef: this.searchRef\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_GOODSIN\"\n            }),\n            operation: 'create'\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.goodsInSample = (masterData, selectedRecord, templateList, userInfo, defaulttimeZone, operation, comboComponents) => {\n      let GoodsInSample = {};\n      let dateList = [];\n      GoodsInSample[\"ngoodsincode\"] = masterData.selectedGoodsIn.ngoodsincode;\n      GoodsInSample[\"ndesigntemplatemappingcode\"] = masterData.DesignTemplateMapping[0].ndesigntemplatemappingcode;\n      GoodsInSample[\"nunitcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Unit')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Unit')]['label']].value : -1;\n      GoodsInSample[\"nquantity\"] = selectedRecord[\"Quantity\"];\n      GoodsInSample[\"sexternalsampleid\"] = selectedRecord[\"External Sample Id\"];\n      GoodsInSample[\"scomments\"] = selectedRecord[\"Comments\"];\n      GoodsInSample[\"jsondata\"] = {};\n      GoodsInSample[\"jsonuidata\"] = {};\n      templateList && templateList.map(row => {\n        return row.children.map(column => {\n          return column.children.map(component => {\n            if (component.hasOwnProperty(\"children\")) {\n              return component.children.map(componentrow => {\n                if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"predefineddropdown\") {\n                  if (componentrow.inputtype === \"predefineddropdown\") {\n                    GoodsInSample[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                      value: selectedRecord[componentrow.label].value,\n                      label: selectedRecord[componentrow.label].label\n                    } : -1;\n                    GoodsInSample[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n                  } else {\n                    GoodsInSample[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                      value: selectedRecord[componentrow.label].value,\n                      label: selectedRecord[componentrow.label].label,\n                      pkey: componentrow.valuemember,\n                      nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                      source: componentrow.source,\n                      [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ? selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].vale\n                    } : -1;\n                    GoodsInSample[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n                  }\n                } else if (componentrow.inputtype === \"date\") {\n                  if (componentrow.mandatory) {\n                    GoodsInSample[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                    GoodsInSample[\"jsonuidata\"][componentrow.label] = GoodsInSample[\"jsondata\"][componentrow.label];\n                  } else {\n                    GoodsInSample[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                    GoodsInSample[\"jsonuidata\"][componentrow.label] = GoodsInSample[\"jsondata\"][componentrow.label];\n                  }\n\n                  if (componentrow.timezone) {\n                    GoodsInSample[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                      value: selectedRecord[`tz${componentrow.label}`].value,\n                      label: selectedRecord[`tz${componentrow.label}`].label\n                    } : defaulttimeZone ? defaulttimeZone : -1;\n                    GoodsInSample[\"jsonuidata\"][`tz${componentrow.label}`] = GoodsInSample[\"jsondata\"][`tz${componentrow.label}`];\n                  }\n\n                  dateList.push(componentrow.label);\n                } else {\n                  GoodsInSample[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                  GoodsInSample[\"jsonuidata\"][componentrow.label] = GoodsInSample[\"jsondata\"][componentrow.label];\n                }\n              });\n              return GoodsInSample;\n            } else {\n              if (component.inputtype === \"combo\" || component.inputtype === \"predefineddropdown\") {\n                if (component.inputtype === \"predefineddropdown\") {\n                  GoodsInSample[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                    value: selectedRecord[component.label].value,\n                    label: selectedRecord[component.label].label\n                  } : -1;\n                  GoodsInSample[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n                } else {\n                  GoodsInSample[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                    value: selectedRecord[component.label].value,\n                    label: selectedRecord[component.label].label,\n                    pkey: component.valuemember,\n                    nquerybuildertablecode: component.nquerybuildertablecode,\n                    source: component.source,\n                    [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ? selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].vale\n                  } : -1;\n                  GoodsInSample[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n                }\n              } else if (component.inputtype === \"date\") {\n                if (component.mandatory) {\n                  console.log(typeof selectedRecord[component.label] === \"object\");\n                  GoodsInSample[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n                  GoodsInSample[\"jsonuidata\"][component.label] = GoodsInSample[\"jsondata\"][component.label];\n                } else {\n                  GoodsInSample[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n                  GoodsInSample[\"jsonuidata\"][component.label] = GoodsInSample[\"jsondata\"][component.label];\n                }\n\n                if (component.timezone) {\n                  GoodsInSample[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                    value: selectedRecord[`tz${component.label}`].value,\n                    label: selectedRecord[`tz${component.label}`].label\n                  } : defaulttimeZone ? defaulttimeZone : -1;\n                  GoodsInSample[\"jsonuidata\"][`tz${component.label}`] = GoodsInSample[\"jsondata\"][`tz${component.label}`];\n                }\n\n                dateList.push(component.label);\n              } else {\n                GoodsInSample[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n                GoodsInSample[\"jsonuidata\"][component.label] = GoodsInSample[\"jsondata\"][component.label];\n              }\n\n              return GoodsInSample;\n            }\n          });\n        });\n      });\n      const param = {\n        GoodsInSample,\n        dateList\n      };\n      return param;\n    };\n\n    this.importGoodsInSample = () => {\n      const formData = new FormData();\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.stemplatefilename;\n      let comboComponents = [];\n      let data = [];\n      const withoutCombocomponent = [];\n      let mandatory = [];\n      let mandatoryImportFields = {};\n\n      if (acceptedFiles && acceptedFiles.length === 1) {\n        acceptedFiles.forEach((file, index) => {\n          formData.append(\"uploadedFile\", file);\n        });\n        const dateList = [];\n        this.state.DynamicDateField.map(x => {\n          dateList.push(x['2']);\n        });\n        const Layout = this.props.Login.masterData.DesignTemplateMapping && this.props.Login.masterData.DesignTemplateMapping[0].jsondata;\n\n        if (Layout !== undefined) {\n          Layout.map(row => {\n            row.children.map(column => {\n              column.children.map(component => {\n                if (component.hasOwnProperty(\"children\")) {\n                  component.children.map(componentrow => {\n                    if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\" || componentrow.inputtype === \"frontendsearchfilter\") {\n                      data.push(componentrow);\n                    } else {\n                      withoutCombocomponent.push(componentrow);\n                    }\n\n                    if (componentrow.mandatory === true) {\n                      mandatory.push({\n                        \"mandatory\": true,\n                        \"idsName\": componentrow.label,\n                        \"dataField\": componentrow.label,\n                        \"mandatoryLabel\": componentrow.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                        \"controlType\": componentrow.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                      });\n                    }\n                  });\n                } else {\n                  component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\" || component.inputtype === \"frontendsearchfilter\" ? data.push(component) : withoutCombocomponent.push(component);\n\n                  if (component.mandatory === true) {\n                    mandatory.push({\n                      \"mandatory\": true,\n                      \"idsName\": component.label,\n                      \"dataField\": component.label,\n                      \"mandatoryLabel\": component.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                      \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                    });\n                  }\n                }\n              });\n            });\n          });\n          comboComponents = data;\n        }\n\n        mandatory.map(x => {\n          mandatoryImportFields[x.dataField] = x.mandatory;\n        });\n        formData.append('mandatoryFields', Lims_JSON_stringify(JSON.stringify(mandatoryImportFields), false));\n        formData.append('comboComponents', Lims_JSON_stringify(JSON.stringify(comboComponents), false));\n        formData.append('dateconstraints', Lims_JSON_stringify(JSON.stringify(this.state.DynamicDateConstraints), false));\n        formData.append('datelist', Lims_JSON_stringify(JSON.stringify(dateList), false));\n        formData.append('combinationunique', Lims_JSON_stringify(JSON.stringify(this.state.DynamicCombinationUnique), false));\n        formData.append('ndesigntemplatemappingcode', this.props.Login.masterData.ndesigntemplatemappingcode);\n        formData.append(\"ngoodsincode\", this.props.Login.masterData.selectedGoodsIn.ngoodsincode);\n        formData.append(\"ntransactionstatus\", this.props.Login.masterData.selectedGoodsIn.ntransactionstatus);\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"GoodsInSample\",\n          displayName: this.props.Login.inputParam.displayName,\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: this.props.Login.operation\n        };\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n\n        if (esignNeeded) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openModal: true,\n              screenName: this.props.intl.formatMessage({\n                id: \"IDS_GOODSINSAMPLE\"\n              }),\n              operation: this.props.Login.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_PLEASESELECTTHEFILE\"\n        }));\n      }\n    };\n\n    this.insertGoodsInChecklist = () => {\n      let inputData = [];\n      inputData[\"ngoodsincode\"] = this.state.selectedRecord.ngoodsincode;\n      inputData[\"ndesigntemplatemappingcode\"] = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"GoodsInChecklist\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: inputData,\n        operation: this.props.Login.operation,\n        selectedRecord: this.state.selectedRecord\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            openTemplateModal: true,\n            screenName: \"IDS_GOODSINCHECKLIST\",\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.onSaveGoodsInCheckList(inputParam);\n      }\n    };\n\n    this.searchRef = React.createRef();\n    this.formRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.state = {\n      dataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      sampleGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      filterGoodsInParam: {},\n      operation: \"\",\n      firstPane: 0,\n      paneHeight: 0,\n      secondPaneHeight: 0,\n      tabPane: 0,\n      skip: 0,\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      splitChangeWidthPercentage: 28.6,\n      goodsinSearchField: [],\n      propertyPopupWidth: \"60\",\n      data: [],\n      mandatorySampleFields: []\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.multilingualMsg\n      }));\n      props.Login.multilingualMsg = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height - 50\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Rendering the component only if \n    // passed props value is changed\n    if (nextState.data.length > 0 && nextState.data === this.state.data) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realfromDate, this.props.Login.masterData.realtoDate, this.props.Login.userInfo);\n    let fromDate = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n    let toDate = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n    const addId = this.state.controlMap.has(\"AddGoodsIn\") ? this.state.controlMap.get(\"AddGoodsIn\").ncontrolcode : -1;\n    const editId = this.state.controlMap.has(\"EditGoodsIn\") ? this.state.controlMap.get(\"EditGoodsIn\").ncontrolcode : -1;\n    const deleteId = this.state.controlMap.has(\"DeleteGoodsIn\") ? this.state.controlMap.get(\"DeleteGoodsIn\").ncontrolcode : -1;\n    const receiveId = this.state.controlMap.has(\"ReceiveGoodsIn\") ? this.state.controlMap.get(\"ReceiveGoodsIn\").ncontrolcode : -1;\n    const approveId = this.state.controlMap.has(\"ApproveGoodsIn\") ? this.state.controlMap.get(\"ApproveGoodsIn\").ncontrolcode : -1;\n    const checklistId = this.state.controlMap.has(\"ChecklistGoodsIn\") ? this.state.controlMap.get(\"ChecklistGoodsIn\").ncontrolcode : -1;\n    const downloadGoodsIn = this.state.controlMap.has(\"DownloadGoodsIn\") ? this.state.controlMap.get(\"DownloadGoodsIn\").ncontrolcode : -1;\n    const deleteSampleId = this.state.controlMap.has(\"DeleteSampleGoodsIn\") ? this.state.controlMap.get(\"DeleteSampleGoodsIn\").ncontrolcode : -1;\n    const goodsinAddParam = {\n      screenName: \"IDS_GOODSIN\",\n      operation: \"create\",\n      primaryKeyField: \"ngoodsincode\",\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: addId\n    };\n    const goodsinEditParam = {\n      screenName: \"IDS_GOODSIN\",\n      operation: \"update\",\n      primaryKeyField: \"ngoodsincode\",\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editId,\n      masterData: this.props.Login.masterData\n    };\n    const goodsinDeleteSampleParam = {\n      screenName: \"IDS_GOODSINSAMPLE\",\n      methodUrl: \"GoodsIn\",\n      operation: \"delete\",\n      ncontrolCode: deleteSampleId\n    };\n    const filterParam = {\n      inputListName: \"GoodsIn\",\n      selectedObject: \"selectedGoodsIn\",\n      primaryKeyField: \"ngoodsincode\",\n      fetchUrl: \"goodsin/getActiveGoodsInById\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: [\"sgoodsinid1\", \"sclientname\", \"sprojectname\", \"scouriername\", \"nnoofpackages\", \"sconsignmentno\", \"sgoodsindatetime\", \"ssecurityrefno\", \"scomments\", \"stransdisplaystatus\"]\n    };\n    const viewInfoFields = [];\n    viewInfoFields.push({\n      \"fieldName\": \"sclientcatname\",\n      \"label\": \"IDS_CLIENTCATEGORY\"\n    }, {\n      \"fieldName\": \"sclientname\",\n      \"label\": \"IDS_CLIENT\"\n    }, {\n      \"fieldName\": \"sprojecttypename\",\n      \"label\": \"IDS_PROJECTTYPE\"\n    }, {\n      \"fieldName\": \"sprojectname\",\n      \"label\": \"IDS_PROJECT\"\n    }, {\n      \"fieldName\": \"scouriername\",\n      \"label\": \"IDS_COURIERCARRIER\"\n    }, {\n      \"fieldName\": \"nnoofpackages\",\n      \"label\": \"IDS_NOOFPACKAGES\"\n    }, {\n      \"fieldName\": \"sconsignmentno\",\n      \"label\": \"IDS_CONSIGNMENTNO\"\n    }, {\n      \"fieldName\": \"sgoodsindatetime\",\n      \"label\": \"IDS_GOODSINDATE\"\n    }, {\n      \"fieldName\": \"sviewstatus\",\n      \"label\": \"IDS_OUTOFHOURS\"\n    }, {\n      \"fieldName\": \"ssecurityrefno\",\n      \"label\": \"IDS_SECURITYREFNO\"\n    }, {\n      \"fieldName\": \"scomments\",\n      \"label\": \"IDS_COMMENTS\"\n    });\n    let breadCrumbData = [];\n    breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }];\n    let mandatoryFields = [];\n\n    if (this.props.Login.screenName === \"IDS_GOODSIN\") {\n      mandatoryFields.push({\n        \"idsName\": \"IDS_CLIENTCATEGORY\",\n        \"dataField\": \"nclientcatcode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_CLIENT\",\n        \"dataField\": \"nclientcode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_NOOFPACKAGES\",\n        \"dataField\": \"nnoofpackages\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_GOODSINDATE\",\n        \"dataField\": \"dgoodsindatetime\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      });\n\n      if (this.props.Login.userInfo.istimezoneshow === transactionStatus.YES) {\n        mandatoryFields.push({\n          \"idsName\": \"IDS_TIMEZONE\",\n          \"dataField\": \"ntzgoodsindate\",\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        });\n      }\n\n      if (this.state.selectedRecord[\"noutofhours\"] === transactionStatus.YES) {\n        mandatoryFields.push({\n          \"idsName\": \"IDS_SECURITYREFNO\",\n          \"dataField\": \"ssecurityrefno\",\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        });\n      }\n    }\n\n    let userStatusCSS = \"\";\n    let activeIconCSS = \"fa fa-check\";\n\n    if (this.props.Login.masterData.selectedGoodsIn && this.props.Login.masterData.selectedGoodsIn.ntransactionstatus === transactionStatus.DRAFT) {\n      userStatusCSS = \"outline-secondary\";\n      activeIconCSS = \"\";\n    } else if (this.props.Login.masterData.selectedGoodsIn && this.props.Login.masterData.selectedGoodsIn.ntransactionstatus === transactionStatus.RECEIVED) {\n      userStatusCSS = \"outline-success\";\n    } else {\n      userStatusCSS = \"outline-Final\";\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      className: \"toolbar-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.setState({\n        sidebarview: !this.state.sidebarview\n      }),\n      className: \"sidebar-view-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }, !this.state.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"IDS_GOODSIN\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.GoodsIn //masterList={this.props.Login.masterData.searchedData}\n      ,\n      getMasterDetail: GoodsIn => this.props.getGoodsInDetail(GoodsIn, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedGoodsIn,\n      primaryKeyField: \"ngoodsincode\",\n      mainField: \"sgoodsinid1\",\n      firstField: \"sclientcatname\",\n      secondField: \"sclientname\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: true,\n      openModal: () => this.props.getGoodsInComboService(goodsinAddParam),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_GOODSINFILTER\": /*#__PURE__*/React.createElement(GoodsInFilter, {\n          fromDate: fromDate,\n          toDate: toDate,\n          handleFilterDateChange: this.handleFilterDateChange,\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 45\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '8' : \"10\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 37\n      }\n    }, this.props.Login.masterData.selectedGoodsIn && this.props.Login.masterData.GoodsIn && this.props.Login.masterData.GoodsIn.length > 0 && this.props.Login.masterData.selectedGoodsIn ? /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 49\n      }\n    }, this.props.Login.masterData.selectedGoodsIn.nnoofpackages), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: activeIconCSS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 65\n      }\n    }), this.props.Login.masterData.selectedGoodsIn.stransdisplaystatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      onClick: e => this.props.getGoodsInComboService(goodsinEditParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(receiveId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RECEIVE\"\n      }),\n      onClick: () => this.receiveGoodsIn(\"receive\", receiveId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(GoodsReceivedIcon, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      name: \"goodsreceivedicon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(approveId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }),\n      onClick: () => this.approveGoodsIn(\"approve\", approveId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"#\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_VIEWINFO\"\n      }),\n      onClick: () => this.props.viewInformation(this.props.Login.masterData.selectedGoodsIn.ngoodsincode, this.props.Login.userInfo, this.props.Login.masterData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(checklistId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_CHECKLIST\"\n      }),\n      onClick: () => this.props.checkListGoodsIn(this.props.Login.masterData, this.props.Login.masterData.selectedGoodsIn, this.state.Checklist, checklistId, this.props.Login.userInfo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faListAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(downloadGoodsIn) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DOWNLOADFILE\"\n      }),\n      onClick: () => this.props.downloadGoodsIn(this.props.Login.masterData, this.props.Login.masterData.selectedGoodsIn, this.props.Login.userInfo, REPORTTYPE.CONTROLBASED, downloadGoodsIn),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCloudDownloadAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 61\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"ngoodsinsamplecode\",\n      data: this.props.Login.masterData.GoodsInSample || [],\n      dataResult: process(this.props.Login.masterData.GoodsInSample || [], this.state.sampleGridDataState),\n      dataState: this.state.sampleGridDataState,\n      dataStateChange: this.sampleInfoDataStateChange,\n      extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n      detailedFieldList: this.gridfillingColumn(this.state.DynamicGridMoreField) || [],\n      exportFieldList: this.gridfillingColumn(this.state.DynamicExportItem) || [],\n      userInfo: this.props.Login.userInfo,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam //editParam={goodsinSampleEditParam}\n      //fetchRecord={this.editSampleGoodsIn}\n      ,\n      deleteRecord: this.DeleteGoodsInSample,\n      deleteParam: goodsinDeleteSampleParam,\n      methodUrl: \"SampleGoodsIn\",\n      pageable: true,\n      isComponent: false,\n      hasDynamicColSize: true,\n      isActionRequired: true,\n      isToolBarRequired: true,\n      isAddRequired: true,\n      addRecord: this.openSampleGoodsIn,\n      isRefreshRequired: false,\n      isImportRequired: true,\n      isDownloadPDFRequired: false,\n      isDownloadExcelRequired: false,\n      import: this.ImportFile,\n      scrollable: 'scrollable',\n      gridHeight: '600px',\n      expandField: \"expanded\",\n      screenName: \"Goods In Sample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 53\n      }\n    }))) : \"\")))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      noSave: this.props.Login.operation === \"view\" ? true : false,\n      mandatoryFields: this.props.Login.screenName === \"IDS_GOODSINSAMPLE\" && this.props.Login.operation === \"create\" ? this.state.mandatorySampleFields : mandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_GOODSIN\" && (this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") ? /*#__PURE__*/React.createElement(AddGoodsIn, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        formatMessage: this.props.intl.formatMessage,\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        ClientCategory: this.props.Login.ClientCategory,\n        Client: this.props.Login.Client,\n        ProjectType: this.props.Login.ProjectType,\n        Courier: this.props.Login.Courier,\n        Project: this.props.Login.Project,\n        TimeZone: this.props.Login.TimeZone,\n        selectedRecord: this.state.selectedRecord || {},\n        currentTime: this.props.Login.currentTime || [],\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_GOODSIN\" && this.props.Login.operation === \"view\" ? /*#__PURE__*/React.createElement(GoodsInView, {\n        userInfo: this.props.Login.userInfo,\n        selectedRecordView: this.props.Login.masterData.selectedRecordView,\n        viewInfoFields: viewInfoFields || [],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_GOODSINSAMPLE\" && this.props.Login.operation === \"create\" ? /*#__PURE__*/React.createElement(DynamicSlideout, {\n        selectedRecord: this.props.Login.selectedRecord,\n        templateData: this.props.Login.masterData.DesignTemplateMapping && this.props.Login.masterData.DesignTemplateMapping[0].jsondata,\n        handleDateChange: this.handleDateChange,\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputChange: this.onNumericInputOnChange,\n        comboData: this.props.Login.comboData,\n        onComboChange: this.onDynamicComboChange,\n        onDropFile: this.onDropFile,\n        deleteAttachment: this.deleteAttachment,\n        onNumericBlur: this.onNumericBlur,\n        userInfo: this.props.Login.userInfo,\n        timeZoneList: this.props.Login.timeZoneList,\n        defaultTimeZone: this.props.Login.defaultTimeZone,\n        Login: this.props.Login,\n        addMasterRecord: this.addMasterRecord,\n        editMasterRecord: this.editMasterRecord,\n        userRoleControlRights: this.props.Login.userRoleControlRights,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 37\n        }\n      }) : this.props.Login.screenName === \"IDS_GOODSINSAMPLE\" && this.props.Login.operation === \"import\" ? /*#__PURE__*/React.createElement(AddFile, {\n        selectedRecord: this.state.selectedRecord || {},\n        onDrop: this.onDropSampleFile,\n        deleteAttachment: this.deleteAttachment,\n        actionType: this.state.actionType,\n        operation: this.props.Login.operation,\n        screenName: this.props.Login.screenName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 33\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 21\n      }\n    }) : this.props.Login.screenName === \"IDS_GOODSINCHECKLIST\" && this.props.Login.operation === \"checklist\" ? /*#__PURE__*/React.createElement(GoodsInChecklist, {\n      templateData: this.props.Login.masterData.ChecklistData,\n      needSaveButton: this.props.Login.masterData.selectedGoodsIn.ntransactionstatus === transactionStatus.RECEIVED ? true : false,\n      formRef: this.formRef,\n      onTemplateInputChange: this.onTemplateInputChange,\n      handleClose: this.closeModal,\n      onTemplateComboChange: this.onTemplateComboChange,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.insertGoodsInChecklist,\n      Login: this.props.Login,\n      viewScreen: this.props.Login.openTemplateModal,\n      selectedGoodsIn: this.props.Login.masterData.selectedGoodsIn,\n      selectedRecord: this.state.selectedRecord || [],\n      onTemplateDateChange: this.onTemplateDateChange,\n      needValidation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  gridfillingColumn(data) {\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] || \"-\",\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\",\n        \"dataType\": [option[designProperties.LISTITEM]]\n      };\n    });\n    return temparray;\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      selectedRecord,\n      skip,\n      take,\n      masterData,\n      sampleGridDataState,\n      DynamicGridItem,\n      DynamicGridMoreField,\n      DynamicExportItem,\n      DynamicDateField,\n      DynamicTemplateField,\n      DynamicDateConstraints,\n      DynamicCombinationUnique,\n      Checklist\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      bool = true;\n      skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\n      take = this.props.Login.take || take;\n    }\n\n    if (this.props.Login.sampleGridDataState && this.props.Login.sampleGridDataState !== previousProps.Login.sampleGridDataState) {\n      sampleGridDataState = this.props.Login.sampleGridDataState;\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata && this.props.Login.masterData.DynamicDesign.jsondata.value);\n\n      if (dynamicColumn !== null) {\n        DynamicGridItem = dynamicColumn.griditem ? dynamicColumn.griditem : [];\n        DynamicGridMoreField = dynamicColumn.gridmoreitem ? dynamicColumn.gridmoreitem : [];\n        DynamicExportItem = dynamicColumn.exportFields ? dynamicColumn.exportFields : [];\n        DynamicDateField = dynamicColumn.datefields ? dynamicColumn.datefields : [];\n        DynamicTemplateField = dynamicColumn.templatefields ? dynamicColumn.templatefields : [];\n        DynamicDateConstraints = dynamicColumn.dateconstraints ? dynamicColumn.dateconstraints : [];\n        DynamicCombinationUnique = dynamicColumn.combinationunique ? dynamicColumn.combinationunique : [];\n        Checklist = dynamicColumn.checklist ? dynamicColumn.checklist : [];\n      }\n    }\n\n    if (bool) {\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        selectedRecord,\n        skip,\n        take,\n        masterData,\n        sampleGridDataState,\n        DynamicGridItem,\n        DynamicGridMoreField,\n        DynamicExportItem,\n        DynamicDateField,\n        DynamicTemplateField,\n        DynamicDateConstraints,\n        DynamicCombinationUnique,\n        Checklist\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  getGoodsInFilterSubmit,\n  validateEsignCredential,\n  getGoodsInComboService,\n  getGoodsInDetail,\n  getClient,\n  getProjectType,\n  getProject,\n  filterColumnData,\n  getPreviewTemplate,\n  viewInformation,\n  checkListGoodsIn,\n  downloadGoodsIn,\n  onSaveGoodsInCheckList,\n  validateEsignGoodsIn\n})(injectIntl(GoodsIn));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/goodsin/GoodsIn.jsx"],"names":["React","connect","injectIntl","FormattedMessage","BreadcrumbComponent","callService","crudMaster","updateStore","getGoodsInFilterSubmit","validateEsignCredential","getGoodsInComboService","getGoodsInDetail","getClient","getProjectType","getProject","filterColumnData","getPreviewTemplate","viewInformation","checkListGoodsIn","downloadGoodsIn","onSaveGoodsInCheckList","validateEsignGoodsIn","toast","convertDateValuetoString","rearrangeDateFormat","getControlMap","showEsign","formatInputDate","comboChild","convertDateTimetoStringDBFormat","onDropAttachFileList","deleteAttachmentDropZone","Lims_JSON_stringify","ListWrapper","DEFAULT_RETURN","Col","Row","Card","Nav","FormGroup","FormLabel","GoodsInFilter","ListMaster","AddGoodsIn","Esign","SlideOutModal","SampleType","designProperties","transactionStatus","ConfirmMessage","ContentPanel","ReadOnlyText","FontAwesomeIcon","faPencilAlt","faTrashAlt","faThumbsUp","faListAlt","faCloudDownloadAlt","faEye","DynamicSlideout","DataGrid","process","AddFile","GoodsInView","GoodsInChecklist","templateChangeHandler","REPORTTYPE","mapStateToProps","state","Login","GoodsIn","Component","constructor","props","openFilter","showFilter","updateInfo","typeName","data","closeFilter","handleFilterDateChange","dateName","dateValue","masterData","setState","handleDateChange","selectedRecord","onTemplateInputChange","event","control","onTemplateComboChange","comboData","onTemplateDateChange","dateData","onFilterSubmit","obj","fromDate","toDate","userInfo","realfromDate","realtoDate","inputData","userinfo","inputParam","reloadData","searchRef","current","value","closeModal","loadEsign","openModal","screenName","operation","openTemplateModal","selectedId","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","screenData","onInputOnChange","target","type","name","checked","onComboChange","fieldName","nclientcatcode","nclientcode","nprojecttypecode","onDynamicComboChange","customName","comboName","valuemember","nquerybuildertablecode","source","onNumericInputOnChange","onNumericBlur","max","parseFloat","precision","parseInt","min","sampleInfoDataStateChange","dataResult","GoodsInSample","dataState","sampleGridDataState","onSaveClick","saveType","formRef","warn","intl","formatMessage","id","postParam","undefined","inputListName","selectedObject","primaryKeyField","selectedGoodsIn","ngoodsincode","NO","classUrl","methodUrl","displayName","userRoleControlRights","nformcode","ncontrolCode","insertGoodsInSample","importGoodsInSample","ConfirmDelete","deleteId","confirmMessage","confirm","DeleteGoodsIn","primaryKeyValue","fetchUrl","fecthInputObject","receiveGoodsIn","approveGoodsIn","openSampleGoodsIn","addSampleId","controlMap","has","get","ncontrolcode","Status","ntransactionstatus","APPROVED","info","addSampleGoodsIn","ScreenName","controlCode","importData","withoutCombocomponent","mandatorySampleFields","Layout","DesignTemplateMapping","jsondata","map","row","children","column","component","hasOwnProperty","componentrow","inputtype","push","mandatory","comboComponents","childColumnList","columnList","val","mapOfFilterRegData","nsampletypecode","GOODSIN","ImportFile","onDropSampleFile","attachedFiles","maxSize","actionType","deleteAttachment","file","DeleteGoodsInSample","deleteParam","ngoodsinsamplecode","ndesigntemplatemappingcode","Map","param","goodsInSample","defaultTimeZone","dateList","DynamicCombinationUnique","templateList","defaulttimeZone","findIndex","x","pkey","table","item","vale","Date","loadcurrentdate","timezone","console","log","formData","FormData","acceptedFiles","stemplatefilename","mandatoryImportFields","length","forEach","index","append","DynamicDateField","dataField","JSON","stringify","DynamicDateConstraints","isFileupload","esignNeeded","insertGoodsInChecklist","createRef","skip","take","settings","masterStatus","error","filterGoodsInParam","firstPane","paneHeight","secondPaneHeight","tabPane","splitChangeWidthPercentage","goodsinSearchField","propertyPopupWidth","getDerivedStateFromProps","multilingualMsg","componentDidMount","parentHeight","height","clientHeight","shouldComponentUpdate","nextProps","nextState","render","addId","editId","receiveId","approveId","checklistId","deleteSampleId","goodsinAddParam","goodsinEditParam","goodsinDeleteSampleParam","filterParam","searchFieldList","viewInfoFields","breadCrumbData","breadCrumbFrom","breadCrumbto","mandatoryFields","istimezoneshow","YES","userStatusCSS","activeIconCSS","DRAFT","RECEIVED","sidebarview","searchedData","nnoofpackages","stransdisplaystatus","indexOf","e","Checklist","CONTROLBASED","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","DynamicExportItem","ClientCategory","Client","ProjectType","Courier","Project","TimeZone","currentTime","selectedRecordView","onDropFile","timeZoneList","addMasterRecord","editMasterRecord","ChecklistData","temparray","option","LABEL","slanguagetypecode","VALUE","LISTITEM","componentDidUpdate","previousProps","DynamicTemplateField","bool","Object","values","DynamicDesign","dynamicColumn","parse","griditem","gridmoreitem","exportFields","datefields","templatefields","dateconstraints","combinationunique","checklist"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl,FormattedMessage } from 'react-intl';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { callService,crudMaster,updateStore,getGoodsInFilterSubmit,validateEsignCredential,getGoodsInComboService,getGoodsInDetail,getClient,getProjectType,getProject,filterColumnData,getPreviewTemplate,viewInformation,checkListGoodsIn,downloadGoodsIn,onSaveGoodsInCheckList,validateEsignGoodsIn  } from '../../actions';\r\nimport { toast } from 'react-toastify';\r\nimport { convertDateValuetoString, rearrangeDateFormat, getControlMap,showEsign,formatInputDate,comboChild,convertDateTimetoStringDBFormat,onDropAttachFileList,deleteAttachmentDropZone,Lims_JSON_stringify } from '../../components/CommonScript';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {  Col, Row, Card, Nav,FormGroup,FormLabel } from 'react-bootstrap';\r\nimport GoodsInFilter from './GoodsInFilter';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport AddGoodsIn  from './AddGoodsIn';\r\nimport Esign from '../audittrail/Esign';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { SampleType, designProperties,transactionStatus } from '../../components/Enumeration';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { ContentPanel,ReadOnlyText } from '../../components/App.styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt,faThumbsUp,faListAlt,faCloudDownloadAlt, faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { ReactComponent as GoodsReceivedIcon } from '../../assets/image/goods-received.svg';\r\nimport AddFile from './AddFile';\r\nimport GoodsInView from './GoodsInView';\r\nimport GoodsInChecklist from './GoodsInChecklist';\r\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\r\nimport { REPORTTYPE } from '../../components/Enumeration';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\nclass GoodsIn extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchRef = React.createRef();    \r\n        this.formRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.state = {\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            sampleGridDataState : {  skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            filterGoodsInParam: {},\r\n            operation: \"\",           \r\n            firstPane: 0,\r\n            paneHeight: 0,\r\n            secondPaneHeight: 0,\r\n            tabPane: 0,          \r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],           \r\n            splitChangeWidthPercentage: 28.6,\r\n            goodsinSearchField: [],           \r\n            propertyPopupWidth: \"60\",\r\n            data: [],\r\n            mandatorySampleFields:[]\r\n        \r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // Rendering the component only if \r\n        // passed props value is changed\r\n        if (nextState.data.length > 0 && nextState.data === this.state.data) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realfromDate, this.props.Login.masterData.realtoDate, this.props.Login.userInfo);\r\n\r\n        let fromDate=this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\r\n        let toDate=this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\r\n\r\n        const addId = this.state.controlMap.has(\"AddGoodsIn\") ? this.state.controlMap.get(\"AddGoodsIn\").ncontrolcode : -1;\r\n        const editId = this.state.controlMap.has(\"EditGoodsIn\") ? this.state.controlMap.get(\"EditGoodsIn\").ncontrolcode : -1;\r\n        const deleteId = this.state.controlMap.has(\"DeleteGoodsIn\") ? this.state.controlMap.get(\"DeleteGoodsIn\").ncontrolcode : -1;\r\n        const receiveId = this.state.controlMap.has(\"ReceiveGoodsIn\") ? this.state.controlMap.get(\"ReceiveGoodsIn\").ncontrolcode : -1;\r\n        const approveId = this.state.controlMap.has(\"ApproveGoodsIn\") ? this.state.controlMap.get(\"ApproveGoodsIn\").ncontrolcode : -1;\r\n        const checklistId = this.state.controlMap.has(\"ChecklistGoodsIn\") ? this.state.controlMap.get(\"ChecklistGoodsIn\").ncontrolcode : -1;\r\n        const downloadGoodsIn = this.state.controlMap.has(\"DownloadGoodsIn\") ? this.state.controlMap.get(\"DownloadGoodsIn\").ncontrolcode : -1; \r\n        const deleteSampleId = this.state.controlMap.has(\"DeleteSampleGoodsIn\") ? this.state.controlMap.get(\"DeleteSampleGoodsIn\").ncontrolcode : -1; \r\n \r\n\r\n        const goodsinAddParam = {\r\n            screenName: \"IDS_GOODSIN\", operation: \"create\", primaryKeyField: \"ngoodsincode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: addId\r\n        };\r\n\r\n        const goodsinEditParam = {\r\n            screenName: \"IDS_GOODSIN\", operation: \"update\", primaryKeyField: \"ngoodsincode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: editId,masterData:this.props.Login.masterData\r\n            \r\n        };\r\n\r\n        const goodsinDeleteSampleParam = { \r\n            screenName: \"IDS_GOODSINSAMPLE\", methodUrl: \"GoodsIn\", operation: \"delete\", ncontrolCode: deleteSampleId };        \r\n\r\n        const filterParam = {\r\n            inputListName: \"GoodsIn\", selectedObject: \"selectedGoodsIn\", primaryKeyField: \"ngoodsincode\",\r\n            fetchUrl: \"goodsin/getActiveGoodsInById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"sgoodsinid1\",\"sclientname\", \"sprojectname\", \"scouriername\",\"nnoofpackages\",\"sconsignmentno\",\"sgoodsindatetime\",\"ssecurityrefno\",\"scomments\" ,\"stransdisplaystatus\"]\r\n        };\r\n\r\n        const viewInfoFields=[];\r\n        viewInfoFields.push(\r\n            { \"fieldName\": \"sclientcatname\", \"label\": \"IDS_CLIENTCATEGORY\"},\r\n            { \"fieldName\": \"sclientname\", \"label\": \"IDS_CLIENT\"},\r\n            { \"fieldName\": \"sprojecttypename\", \"label\": \"IDS_PROJECTTYPE\"},\r\n            { \"fieldName\": \"sprojectname\", \"label\": \"IDS_PROJECT\"},\r\n            { \"fieldName\": \"scouriername\", \"label\": \"IDS_COURIERCARRIER\"},\r\n            { \"fieldName\": \"nnoofpackages\", \"label\": \"IDS_NOOFPACKAGES\"},\r\n            { \"fieldName\": \"sconsignmentno\", \"label\": \"IDS_CONSIGNMENTNO\"},\r\n            { \"fieldName\": \"sgoodsindatetime\", \"label\": \"IDS_GOODSINDATE\"},\r\n            { \"fieldName\": \"sviewstatus\", \"label\": \"IDS_OUTOFHOURS\"},\r\n            { \"fieldName\": \"ssecurityrefno\", \"label\": \"IDS_SECURITYREFNO\"},\r\n            { \"fieldName\": \"scomments\", \"label\": \"IDS_COMMENTS\"}\r\n        )                        \r\n                                           \r\n\r\n        let breadCrumbData = [];\r\n        breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            },\r\n            {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            }\r\n        ]; \r\n\r\n        let mandatoryFields = [];\r\n            if(this.props.Login.screenName===\"IDS_GOODSIN\"){\r\n                mandatoryFields.push(\r\n                    { \"idsName\": \"IDS_CLIENTCATEGORY\", \"dataField\": \"nclientcatcode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_CLIENT\", \"dataField\": \"nclientcode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_NOOFPACKAGES\", \"dataField\": \"nnoofpackages\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                    { \"idsName\": \"IDS_GOODSINDATE\", \"dataField\": \"dgoodsindatetime\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n    \r\n                )\r\n    \r\n                if(this.props.Login.userInfo.istimezoneshow === transactionStatus.YES){\r\n                    mandatoryFields.push({ \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"ntzgoodsindate\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" });\r\n                }\r\n    \r\n                if (this.state.selectedRecord[\"noutofhours\"] === transactionStatus.YES) {\r\n                    mandatoryFields.push({ \"idsName\": \"IDS_SECURITYREFNO\", \"dataField\": \"ssecurityrefno\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"});\r\n                }\r\n            }\r\n           \r\n\r\n            let userStatusCSS = \"\";\r\n            let activeIconCSS = \"fa fa-check\";\r\n            if (this.props.Login.masterData.selectedGoodsIn && this.props.Login.masterData.selectedGoodsIn.ntransactionstatus === transactionStatus.DRAFT) {\r\n                userStatusCSS = \"outline-secondary\";\r\n                activeIconCSS = \"\";\r\n            }\r\n            else if (this.props.Login.masterData.selectedGoodsIn && this.props.Login.masterData.selectedGoodsIn.ntransactionstatus === transactionStatus.RECEIVED) {\r\n                userStatusCSS = \"outline-success\";\r\n            }\r\n            else {\r\n                userStatusCSS = \"outline-Final\";\r\n            }\r\n   \r\n\r\n        \r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                    <Row noGutters={true} className=\"toolbar-top\">\r\n                        <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n                            <span onClick= {()=>this.setState({sidebarview:!this.state.sidebarview})} className='sidebar-view-btn'>\r\n                                {!this.state.sidebarview ?\r\n                                    <i class=\"fa fa-less-than\"></i> :\r\n                                    <i class=\"fa fa-greater-than\"></i> \r\n                                }\r\n                            </span>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"IDS_GOODSIN\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.GoodsIn}\r\n                                //masterList={this.props.Login.masterData.searchedData}\r\n                                getMasterDetail={(GoodsIn) => this.props.getGoodsInDetail(GoodsIn, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedGoodsIn}\r\n                                primaryKeyField=\"ngoodsincode\"\r\n                                mainField=\"sgoodsinid1\"\r\n                                firstField=\"sclientcatname\"\r\n                                secondField=\"sclientname\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={true}\r\n                                openModal={() => this.props.getGoodsInComboService(goodsinAddParam)}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_GOODSINFILTER\":\r\n                                            <GoodsInFilter\r\n                                                fromDate={fromDate}\r\n                                                toDate={toDate}\r\n                                                handleFilterDateChange={this.handleFilterDateChange}\r\n                                                userInfo={this.props.Login.userInfo}\r\n\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        {this.props.Login.masterData.selectedGoodsIn && this.props.Login.masterData.GoodsIn && this.props.Login.masterData.GoodsIn.length > 0 && this.props.Login.masterData.selectedGoodsIn ?\r\n                                            <Card className=\"border-0\">\r\n                                                <Card.Header>\r\n                                                <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedGoodsIn.nnoofpackages}</Card.Title>\r\n                                                <Card.Subtitle>\r\n                                                    <div className=\"d-flex product-category\">\r\n                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                            <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                <i className={activeIconCSS}></i>\r\n                                                                {this.props.Login.masterData.selectedGoodsIn.stransdisplaystatus}\r\n                                                            </span>\r\n                                                        </h2>\r\n                                                        <div className=\"d-inline \">\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            onClick={(e) => this.props.getGoodsInComboService(goodsinEditParam)} >\r\n                                                            <FontAwesomeIcon icon={faPencilAlt} title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"#\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />                                                            \r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"#\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(receiveId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RECEIVE\" })}\r\n                                                            onClick={() => this.receiveGoodsIn(\"receive\",receiveId)}>\r\n                                                            <GoodsReceivedIcon className=\"custom_icons\" width=\"20\" height=\"20\"\r\n                                                                            name=\"goodsreceivedicon\"/>                                                                                                                       \r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"#\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                            onClick={() => this.approveGoodsIn(\"approve\",approveId)}>\r\n                                                            <FontAwesomeIcon icon={faThumbsUp} />                                                            \r\n                                                        </Nav.Link> \r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"#\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWINFO\" })}\r\n                                                            onClick={() => this.props.viewInformation(this.props.Login.masterData.selectedGoodsIn.ngoodsincode,this.props.Login.userInfo,this.props.Login.masterData)}>\r\n                                                            <FontAwesomeIcon icon={faEye} />                                                            \r\n                                                        </Nav.Link> \r\n\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"#\"\r\n                                                             hidden={this.state.userRoleControlRights.indexOf(checklistId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_CHECKLIST\" })}\r\n                                                            onClick={() => this.props.checkListGoodsIn(this.props.Login.masterData,this.props.Login.masterData.selectedGoodsIn,this.state.Checklist,checklistId,this.props.Login.userInfo)}>\r\n                                                            <FontAwesomeIcon icon={faListAlt} />                                                            \r\n                                                        </Nav.Link> \r\n\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"#\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadGoodsIn) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFILE\" })}\r\n                                                            onClick={() => this.props.downloadGoodsIn(this.props.Login.masterData,this.props.Login.masterData.selectedGoodsIn,this.props.Login.userInfo,REPORTTYPE.CONTROLBASED,downloadGoodsIn)}>\r\n                                                            <FontAwesomeIcon icon={faCloudDownloadAlt} />                                                            \r\n                                                        </Nav.Link> \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Card.Subtitle>\r\n                                                </Card.Header>\r\n                                                <Card.Body>                                           \r\n                                                    <DataGrid\r\n                                                        primaryKeyField={\"ngoodsinsamplecode\"}\r\n                                                        data={this.props.Login.masterData.GoodsInSample ||[]}\r\n                                                        dataResult={process(this.props.Login.masterData.GoodsInSample ||[], this.state.sampleGridDataState)}\r\n                                                        dataState={this.state.sampleGridDataState}\r\n                                                        dataStateChange={this.sampleInfoDataStateChange}\r\n                                                        extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                        detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []} \r\n                                                        exportFieldList={this.gridfillingColumn(this.state.DynamicExportItem) || []} \r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        controlMap={this.state.controlMap}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        inputParam={this.props.Login.inputParam}\r\n                                                        //editParam={goodsinSampleEditParam}\r\n                                                        //fetchRecord={this.editSampleGoodsIn}\r\n                                                        deleteRecord = {this.DeleteGoodsInSample}\r\n                                                        deleteParam={goodsinDeleteSampleParam}\r\n                                                        methodUrl ={\"SampleGoodsIn\"}\r\n                                                        pageable={true}\r\n                                                        isComponent={false}\r\n                                                        hasDynamicColSize={true}\r\n                                                        isActionRequired={true}\r\n                                                        isToolBarRequired={true}\r\n                                                        isAddRequired={true}\r\n                                                        addRecord={this.openSampleGoodsIn}\r\n                                                        isRefreshRequired ={false}\r\n                                                        isImportRequired={true}\r\n                                                        isDownloadPDFRequired={false}\r\n                                                        isDownloadExcelRequired={false}\r\n                                                        import={this.ImportFile}\r\n                                                        scrollable={'scrollable'}\r\n                                                        gridHeight={'600px'}\r\n                                                        expandField=\"expanded\"\r\n                                                        screenName =\"Goods In Sample\"\r\n                                                    />\r\n\r\n                       \r\n\r\n                                                </Card.Body>\r\n\r\n                                            </Card>\r\n                                        :\"\"}\r\n                                    </ContentPanel>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>   \r\n\r\n                    </Row>\r\n                </ListWrapper>  \r\n                { this.props.Login.openModal ?\r\n                    <SlideOutModal \r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        noSave={this.props.Login.operation === \"view\" ? true : false}\r\n                        mandatoryFields={this.props.Login.screenName ===\"IDS_GOODSINSAMPLE\" && this.props.Login.operation ===\"create\" ? this.state.mandatorySampleFields :  mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ? (\r\n                            <Esign \r\n                            operation={this.props.Login.operation}\r\n                            formatMessage={this.props.intl.formatMessage}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                        />\r\n                        ) : this.props.Login.screenName ===  \"IDS_GOODSIN\"  && (this.props.Login.operation ===  \"create\" || this.props.Login.operation === \"update\") ? (\r\n                            <AddGoodsIn\r\n                                onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                handleDateChange ={this.handleDateChange}\r\n                                onComboChange={this.onComboChange}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                ClientCategory ={this.props.Login.ClientCategory}\r\n                                Client={this.props.Login.Client}\r\n                                ProjectType={this.props.Login.ProjectType}\r\n                                Courier={this.props.Login.Courier}\r\n                                Project={this.props.Login.Project}\r\n                                TimeZone={this.props.Login.TimeZone}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                currentTime={this.props.Login.currentTime || []}\r\n                                userInfo={this.props.Login.userInfo}\r\n    \r\n                            />\r\n                        ) : this.props.Login.screenName === \"IDS_GOODSIN\" && this.props.Login.operation ===\"view\" ? (\r\n                            <GoodsInView\r\n                                userInfo={this.props.Login.userInfo}\r\n                                selectedRecordView={this.props.Login.masterData.selectedRecordView}\r\n                                viewInfoFields={viewInfoFields|| []}\r\n                            />  \r\n\r\n                        ): this.props.Login.screenName === \"IDS_GOODSINSAMPLE\" && this.props.Login.operation ===\"create\" ? (                                \r\n                                    <DynamicSlideout\r\n                                        selectedRecord={this.props.Login.selectedRecord}\r\n                                        templateData={this.props.Login.masterData.DesignTemplateMapping && this.props.Login.masterData.DesignTemplateMapping [0].jsondata}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onNumericInputChange={this.onNumericInputOnChange}\r\n                                        comboData={this.props.Login.comboData}\r\n                                        onComboChange={this.onDynamicComboChange}\r\n                                        onDropFile={this.onDropFile}\r\n                                        deleteAttachment={this.deleteAttachment}\r\n                                        onNumericBlur={this.onNumericBlur}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        timeZoneList={this.props.Login.timeZoneList}\r\n                                        defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                        Login={this.props.Login}\r\n                                        addMasterRecord={this.addMasterRecord}\r\n                                        editMasterRecord={this.editMasterRecord}\r\n                                        userRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                    ></DynamicSlideout>  \r\n                                                    \r\n                        ): this.props.Login.screenName ===\"IDS_GOODSINSAMPLE\" && this.props.Login.operation ===\"import\" ? (\r\n                                <AddFile\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onDrop={this.onDropSampleFile}\r\n                                    deleteAttachment={this.deleteAttachment}\r\n                                    actionType={this.state.actionType}\r\n                                    operation={this.props.Login.operation}    \r\n                                    screenName={this.props.Login.screenName}\r\n                               \r\n                                />\r\n                        ):( \"\" )\r\n                        \r\n                        \r\n                        }\r\n                    />\r\n                : \r\n                this.props.Login.screenName === \"IDS_GOODSINCHECKLIST\" && this.props.Login.operation ===\"checklist\" ? (\r\n                    <GoodsInChecklist\r\n                        templateData={this.props.Login.masterData.ChecklistData}\r\n                        needSaveButton={this.props.Login.masterData.selectedGoodsIn.ntransactionstatus===transactionStatus.RECEIVED ? true:false}\r\n                        formRef={this.formRef}\r\n                        onTemplateInputChange={this.onTemplateInputChange}\r\n                        handleClose={this.closeModal}\r\n                        onTemplateComboChange={this.onTemplateComboChange}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.insertGoodsInChecklist}\r\n                        Login={this.props.Login}\r\n                        viewScreen={this.props.Login.openTemplateModal}\r\n                        selectedGoodsIn ={this.props.Login.masterData.selectedGoodsIn}\r\n                        selectedRecord={this.state.selectedRecord || []}\r\n                        onTemplateDateChange={this.onTemplateDateChange}\r\n                        needValidation={true}\r\n                    /> \r\n                ) :(\"\")\r\n                } \r\n                \r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData[dateName] = dateValue;         \r\n        this.setState ({masterData});\r\n\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onTemplateInputChange = (event, control) => {\r\n        let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onTemplateComboChange = (comboData, control) => {\r\n        let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onTemplateDateChange = (dateData, control) => {\r\n        let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onFilterSubmit = () => {         \r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n        let realfromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\r\n        let realtoDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\r\n        let masterData = { ...this.props.Login.masterData, realfromDate, realtoDate};\r\n        let inputData ={\r\n            fromDate: obj.fromDate,\r\n            toDate : obj.toDate,\r\n            userinfo: this.props.Login.userInfo,\r\n\r\n        }       \r\n        let inputParam = {\r\n            masterData,\r\n            inputData\r\n        }\r\n        this.props.getGoodsInFilterSubmit(inputParam);\r\n\r\n        \r\n\r\n    }\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n        let realfromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\r\n        let realtoDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\r\n        let masterData = { ...this.props.Login.masterData, realfromDate, realtoDate};\r\n        let inputData ={\r\n            fromDate: obj.fromDate,\r\n            toDate : obj.toDate,\r\n            userinfo: this.props.Login.userInfo,\r\n\r\n        }       \r\n        let inputParam = {\r\n            masterData,\r\n            inputData\r\n        }\r\n        this.props.getGoodsInFilterSubmit(inputParam);\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let screenName = this.props.Login.screenName;\r\n        let operation = this.props.Login.operation;\r\n        let openTemplateModal = this.props.Login.openTemplateModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"receive\" ||this.props.Login.operation === \"approve\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openTemplateModal =false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                if(this.props.Login.operation === \"checklist\"){\r\n                    openModal = false;\r\n                }\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            openTemplateModal =false;\r\n            selectedRecord = {};\r\n            screenName =\"\";\r\n            operation =\"\";\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal,openTemplateModal, loadEsign, selectedRecord, selectedId: null ,screenName,operation}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if(this.props.Login.operation === \"checklist\"){\r\n            this.props.validateEsignGoodsIn(inputParam, \"openModal\");\r\n\r\n        }else {\r\n            this.props.validateEsignCredential(inputParam, \"openModal\");\r\n        }\r\n        \r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            }else if(event.target.name === \"noutofhours\"){\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 1 : 2;\r\n            }\r\n        } \r\n        else {\r\n                if (event.target.value !== \"\") {\r\n                    selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n           \r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if(fieldName === \"nclientcatcode\"){\r\n            selectedRecord[\"nclientcatcode\"] = comboData;\r\n            this.props.getClient(this.state.selectedRecord.nclientcatcode.value,this.props.Login.masterData, this.props.Login.userInfo, selectedRecord);\r\n        }else if(fieldName === \"nclientcode\"){\r\n            selectedRecord[\"nclientcode\"] = comboData;\r\n            this.props.getProjectType(this.state.selectedRecord.nclientcatcode.value,this.state.selectedRecord.nclientcode.value,this.props.Login.masterData, this.props.Login.userInfo, selectedRecord);\r\n        }else if(fieldName === \"nprojecttypecode\"){\r\n            selectedRecord[\"nprojecttypecode\"] = comboData;\r\n            if(comboData !==null){\r\n                this.props.getProject(this.state.selectedRecord.nclientcatcode.value,this.state.selectedRecord.nclientcode.value,this.state.selectedRecord.nprojecttypecode.value,this.props.Login.masterData, this.props.Login.userInfo, selectedRecord);\r\n            }else {\r\n                delete selectedRecord[\"nprojecttypecode\"];\r\n                delete selectedRecord[\"nprojectmastercode\"];\r\n                this.setState({ selectedRecord });\r\n            }\r\n        }else if(fieldName === \"nprojectmastercode\"){\r\n            selectedRecord[\"nprojectmastercode\"] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }else if(fieldName === \"ncouriercode\"){\r\n            selectedRecord[\"ncouriercode\"] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n    onDynamicComboChange = (comboData, control, customName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let comboName = customName || control.label;\r\n        if (comboData) {\r\n            \r\n            comboData[\"item\"] = {\r\n                ...comboData[\"item\"], \"pkey\": control.valuemember,\r\n                \"nquerybuildertablecode\": control.nquerybuildertablecode, source: control.source\r\n            };\r\n            selectedRecord[comboName] = comboData;\r\n        } else {\r\n            selectedRecord[comboName] = [];\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }   \r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onNumericBlur = (control) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        if (selectedRecord[control.label]) {\r\n            if (control.max) {\r\n                if (!(selectedRecord[control.label] < parseFloat(control.max))) {\r\n                    selectedRecord[control.label] = control.precision ? parseFloat(control.max) : parseInt(control.max)\r\n                }\r\n            }\r\n            if (control.min) {\r\n                if (!(selectedRecord[control.label] > parseFloat(control.min))) {\r\n                    selectedRecord[control.label] = control.precision ? parseFloat(control.min) : parseInt(control.min)\r\n                }\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    sampleInfoDataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.GoodsInSample,event.dataState),\r\n            sampleGridDataState: event.dataState\r\n        });\r\n      \r\n    }\r\n\r\n\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] || \"-\", \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\", \"dataType\": [option[designProperties.LISTITEM]] };\r\n        });\r\n        return temparray;\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        if(this.props.Login.screenName ===  \"IDS_GOODSIN\"){\r\n            if(this.state.selectedRecord[\"nnoofpackages\"]<=0){\r\n                return (toast.warn(this.props.intl.formatMessage({ id: \"IDS_ENTERTHEPACKAGEGREATERTHANZERO\" })));\r\n            }\r\n    \r\n            let postParam = undefined;\r\n            let dataState = undefined;\r\n            let inputData = [];\r\n            inputData[\"goodsin\"] = {};\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    \r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n            let fromDate = obj.fromDate;\r\n            let toDate = obj.toDate;\r\n            inputData[\"fromDate\"] = fromDate;\r\n            inputData[\"toDate\"] = toDate;\r\n    \r\n            if (this.props.Login.operation === \"update\") {\r\n                postParam = {\r\n                    inputListName: \"GoodsIn\",\r\n                    selectedObject: \"selectedGoodsIn\",\r\n                    primaryKeyField: \"ngoodsincode\",\r\n                };\r\n    \r\n                postParam[\"primaryKeyValue\"] = this.props.Login.masterData.selectedGoodsIn.ngoodsincode;\r\n                inputData[\"goodsin\"][\"ngoodsincode\"]= this.props.Login.masterData.selectedGoodsIn.ngoodsincode;\r\n            }\r\n            inputData[\"goodsin\"][\"nclientcatcode\"] = this.state.selectedRecord[\"nclientcatcode\"] ? this.state.selectedRecord[\"nclientcatcode\"].value : -1;              \r\n            inputData[\"goodsin\"][\"nclientcode\"] = this.state.selectedRecord[\"nclientcode\"] ? this.state.selectedRecord[\"nclientcode\"].value : -1;\r\n            inputData[\"goodsin\"][\"nprojecttypecode\"] = this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"].value : -1;\r\n            inputData[\"goodsin\"][\"nprojectmastercode\"] = this.state.selectedRecord[\"nprojectmastercode\"] ? this.state.selectedRecord[\"nprojectmastercode\"].value : -1;\r\n            inputData[\"goodsin\"][\"ncouriercode\"] = this.state.selectedRecord[\"ncouriercode\"] ? this.state.selectedRecord[\"ncouriercode\"].value :-1;\r\n            inputData[\"goodsin\"][\"nnoofpackages\"] = this.state.selectedRecord[\"nnoofpackages\"];\r\n            inputData[\"goodsin\"][\"noutofhours\"] = this.state.selectedRecord[\"noutofhours\"] ? this.state.selectedRecord[\"noutofhours\"] :transactionStatus.NO;\r\n            inputData[\"goodsin\"][\"sconsignmentno\"] = this.state.selectedRecord[\"sconsignmentno\"] ? this.state.selectedRecord[\"sconsignmentno\"] : \"\";\r\n            inputData[\"goodsin\"][\"ssecurityrefno\"] = this.state.selectedRecord[\"ssecurityrefno\"] ? this.state.selectedRecord[\"ssecurityrefno\"] : \"\";\r\n            inputData[\"goodsin\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] ? this.state.selectedRecord[\"scomments\"] : \"\";\r\n            inputData[\"goodsin\"][\"dgoodsindatetime\"] =  formatInputDate(this.state.selectedRecord[\"dgoodsindatetime\"], false);\r\n                //inputData[\"goodsin\"][\"ntzgoodsindatetime\"] = this.state.selectedRecord[\"ntimezonecode\"] ? this.state.selectedRecord[\"ntimezonecode\"].value : 1;\r\n    \r\n    \r\n            \r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"GoodsIn\",\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                selectedId: this.state.selectedRecord[\"ngoodsincode\"],\r\n                operation: this.props.Login.operation, saveType, formRef, dataState,\r\n                searchRef: this.searchRef,\r\n                postParam:postParam\r\n                    \r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true, screenName:  \"IDS_GOODSIN\",\r\n                        operation: this.props.Login.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n        }else if(this.props.Login.screenName === \"IDS_GOODSINSAMPLE\" && this.props.Login.operation ===\"create\"){\r\n            this.insertGoodsInSample();             \r\n        }else if(this.props.Login.screenName ===\"IDS_GOODSINSAMPLE\" && this.props.Login.operation === \"import\"){\r\n            this.importGoodsInSample();\r\n        }      \r\n    }\r\n   \r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.DeleteGoodsIn(\"delete\",deleteId));\r\n    }\r\n\r\n    DeleteGoodsIn= (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        inputData[\"fromDate\"] = fromDate;\r\n        inputData[\"toDate\"] = toDate;\r\n\r\n\r\n        inputData[\"goodsin\"] = this.props.Login.masterData.selectedGoodsIn;  \r\n        inputData[\"userinfo\"]  = this.props.Login.userInfo;   \r\n        const postParam = {\r\n            inputListName: \"GoodsIn\", selectedObject: \"selectedGoodsIn\",\r\n            primaryKeyField: \"ngoodsincode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedGoodsIn.ngoodsincode,\r\n            fetchUrl: \"goodsin/getActiveGoodsInById\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"GoodsIn\", \r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"IDS_GOODSIN\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n    receiveGoodsIn= (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        inputData[\"goodsin\"] = this.props.Login.masterData.selectedGoodsIn;  \r\n        inputData[\"userinfo\"]  = this.props.Login.userInfo;   \r\n        const postParam = {\r\n            inputListName: \"GoodsIn\", selectedObject: \"selectedGoodsIn\",\r\n            primaryKeyField: \"ngoodsincode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedGoodsIn.ngoodsincode,\r\n            fetchUrl: \"goodsin/getActiveGoodsInById\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"GoodsIn\", \r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"receive\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"IDS_GOODSIN\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    approveGoodsIn= (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        inputData[\"goodsin\"] = this.props.Login.masterData.selectedGoodsIn;  \r\n        inputData[\"userinfo\"]  = this.props.Login.userInfo;   \r\n        const postParam = {\r\n            inputListName: \"GoodsIn\", selectedObject: \"selectedGoodsIn\",\r\n            primaryKeyField: \"ngoodsincode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedGoodsIn.ngoodsincode,\r\n            fetchUrl: \"goodsin/getActiveGoodsInById\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"GoodsIn\", \r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"approve\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"IDS_GOODSIN\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n     openSampleGoodsIn = () => {\r\n        const addSampleId = this.state.controlMap.has(\"AddSampleGoodsIn\") ? this.state.controlMap.get(\"AddSampleGoodsIn\").ncontrolcode : -1;\r\n        const Status = this.props.Login.masterData.selectedGoodsIn.ntransactionstatus;\r\n        if(Status === transactionStatus.APPROVED) {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECEIVERECORD\" }));\r\n        }else {\r\n            this.addSampleGoodsIn(\"IDS_GOODSINSAMPLE\", \"create\", this.props.Login.masterData,this.state.selectedRecord,this.props.Login.userInfo,addSampleId);\r\n        }\r\n\r\n     }\r\n\r\n     \r\n\r\n    addSampleGoodsIn = (ScreenName, operation, masterData,selectedRecord, userInfo, controlCode,importData) => {\r\n\r\n            let data = [];\r\n            const withoutCombocomponent = [];\r\n            let mandatorySampleFields = [];\r\n            const Layout = this.props.Login.masterData.DesignTemplateMapping\r\n                && this.props.Login.masterData.DesignTemplateMapping[0].jsondata\r\n            if (Layout !== undefined && Layout !==null) {\r\n                Layout.map(row => {\r\n                    row.children.map(column => {\r\n                        column.children.map(component => {\r\n                            if(component.hasOwnProperty(\"children\")) {\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\"\r\n                                        || componentrow.inputtype === \"frontendsearchfilter\") {\r\n                                        data.push(componentrow)\r\n                                    } else {\r\n                                        withoutCombocomponent.push(componentrow)\r\n                                    }\r\n                                    if(componentrow.mandatory=== true){\r\n                                        mandatorySampleFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": componentrow.label,\r\n                                            \"dataField\": componentrow.label,\r\n                                            \"mandatoryLabel\": componentrow.inputtype === \"combo\" ?\r\n                                                \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                            \"controlType\": componentrow.inputtype === \"combo\" ?\r\n                                                \"selectbox\" : \"textbox\"\r\n                                        })\r\n                                    }\r\n                                })\r\n                            }else {\r\n                                component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\"\r\n                                  || component.inputtype === \"frontendsearchfilter\" ?\r\n                                     data.push(component) : withoutCombocomponent.push(component)\r\n                                    if(component.mandatory ===true){\r\n                                        mandatorySampleFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": component.label,\r\n                                            \"dataField\": component.label,\r\n                                            \"mandatoryLabel\": component.inputtype === \"combo\" ?\r\n                                                \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                            \"controlType\": component.inputtype === \"combo\" ?\r\n                                                \"selectbox\" : \"textbox\"\r\n                                        })\r\n                                    }\r\n\r\n                            }\r\n                        })\r\n                        this.setState({mandatorySampleFields:mandatorySampleFields});  \r\n                    })   \r\n\r\n                })\r\n                const comboComponents = data\r\n                let childColumnList = {};\r\n                data.map(columnList => {\r\n                    const val = comboChild(data, columnList, childColumnList, true);\r\n                    data = val.data;\r\n                    childColumnList = val.childColumnList\r\n                    return null;\r\n                })\r\n                const mapOfFilterRegData = {\r\n                    nsampletypecode: parseInt(SampleType.GOODSIN),\r\n\r\n                }  \r\n         \r\n                this.props.getPreviewTemplate(masterData, userInfo, controlCode,\r\n                    data, selectedRecord, childColumnList,comboComponents, withoutCombocomponent, true, true,\r\n                    mapOfFilterRegData, false, operation, ScreenName, importData)                \r\n            } else  {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_CONFIGUREGOODSINTEMPLATE\" }));\r\n            }\r\n        \r\n    }\r\n\r\n    ImportFile = () => {\r\n        const Status = this.props.Login.masterData.selectedGoodsIn.ntransactionstatus;\r\n        let updateInfo ={};\r\n        if(Status === transactionStatus.APPROVED ){\r\n             toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECEIVERECORD\" }));\r\n        }else {\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openModal:true,\r\n                    operation: \"import\",\r\n                    screenName : \"IDS_GOODSINSAMPLE\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);       \r\n        }\r\n\r\n    }\r\n    \r\n    onDropSampleFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(\r\n            selectedRecord[fieldName],attachedFiles,maxSize);\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    };\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName],file);\r\n\r\n        this.setState({selectedRecord,actionType: \"delete\"});\r\n    };\r\n\r\n    // editSampleGoodsIn = (goodsinSampleEditParam) => {\r\n    //     let data = [];\r\n    //     const withoutCombocomponent = []\r\n    //     const Layout = this.props.Login.masterData.DesignTemplateMapping\r\n    //                     && this.props.Login.masterData.DesignTemplateMapping[0].jsondata\r\n    //     if (Layout !== undefined) {\r\n    //         Layout.map(row => {\r\n    //             return row.children.map(column => {\r\n    //                 return column.children.map(component => {\r\n    //                     return component.hasOwnProperty(\"children\") ?\r\n    //                         component.children.map(componentrow => {\r\n    //                             if (componentrow.inputtype === \"combo\") {\r\n    //                                 data.push(componentrow)\r\n    //                             } else {\r\n    //                                 withoutCombocomponent.push(componentrow)\r\n    //                             }\r\n\r\n    //                             return null;\r\n    //                         })\r\n    //                         : component.inputtype === \"combo\" ?\r\n    //                             data.push(component) : withoutCombocomponent.push(component)\r\n    //                 })\r\n    //             })\r\n    //         })\r\n    //         const comboComponents = data\r\n    //         let childColumnList = {};\r\n    //         data.map(columnList => {\r\n    //             const val = comboChild(data, columnList, childColumnList, true);\r\n    //             data = val.data;\r\n    //             childColumnList = val.childColumnList\r\n    //             return null;\r\n    //         })\r\n\r\n    //         this.props.getEditGoodsInSampleService(goodsinSampleEditParam,data, this.state.selectedRecord, childColumnList,\r\n    //             comboComponents, withoutCombocomponent)\r\n    //     } else {\r\n    //         toast.info(\"Configure the  template\")\r\n    //     }\r\n\r\n    // }\r\n\r\n    DeleteGoodsInSample= (deleteParam) => {\r\n        let inputData = [];\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        inputData[\"fromDate\"] = fromDate;\r\n        inputData[\"toDate\"] = toDate;\r\n\r\n        inputData[\"ngoodsincode\"] =deleteParam.selectedRecord.ngoodsincode;\r\n        inputData[\"ngoodsinsamplecode\"] =deleteParam.selectedRecord.ngoodsinsamplecode;\r\n        inputData[\"ndesigntemplatemappingcode\"] =deleteParam.selectedRecord.ndesigntemplatemappingcode;\r\n        inputData[\"ntransactionstatus\"] =this.props.Login.masterData.selectedGoodsIn.ntransactionstatus;\r\n        inputData[\"userinfo\"]  = this.props.Login.userInfo;   \r\n        const postParam = {\r\n            inputListName: \"GoodsIn\", selectedObject: \"selectedGoodsIn\",\r\n            primaryKeyField: \"ngoodsincode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedGoodsIn.ngoodsincode,\r\n            fetchUrl: \"goodsin/getActiveGoodsInById\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"GoodsInSample\", \r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"IDS_GOODSINSAMPLE\", operation:deleteParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n    insertGoodsInSample= () => {\r\n        let Map ={};\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        Map[\"fromDate\"] = fromDate;\r\n        Map[\"toDate\"] = toDate;\r\n\r\n        Map[\"ngoodsincode\"] =this.props.Login.masterData.selectedGoodsIn.ngoodsincode;  \r\n        Map[\"ndesigntemplatemappingcode\"] =this.props.Login.masterData.DesignTemplateMapping[0].ndesigntemplatemappingcode;\r\n        const param =  this.goodsInSample(this.props.Login.masterData,this.state.selectedRecord,\r\n            this.props.Login.masterData.DesignTemplateMapping [0].jsondata,\r\n            this.props.Login.userInfo,this.props.Login.defaultTimeZone, 'create',this.props.Login.comboComponents);  \r\n        Map[\"GoodsInSample\"] = param.GoodsInSample;\r\n        Map[\"DateList\"] = param.dateList;\r\n        Map[\"userinfo\"] = this.props.Login.userInfo;\r\n        Map[\"combinationunique\"] = this.state.DynamicCombinationUnique;\r\n\r\n \r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"GoodsInSample\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: Map,\r\n            selectedId: this.state.selectedRecord[\"ngoodsinsamplecode\"],\r\n            operation: 'create',\r\n            searchRef: this.searchRef\r\n                \r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_GOODSIN\"}),\r\n                    operation: 'create'\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n\r\n\r\n\r\n    }\r\n    \r\n    goodsInSample = (masterData,selectedRecord,templateList,userInfo,defaulttimeZone,operation,comboComponents) => {\r\n        let GoodsInSample = {};\r\n        let dateList = [];\r\n        GoodsInSample[\"ngoodsincode\"] = masterData.selectedGoodsIn.ngoodsincode;  \r\n        GoodsInSample[\"ndesigntemplatemappingcode\"] =masterData.DesignTemplateMapping[0].ndesigntemplatemappingcode;\r\n    \r\n    \r\n        GoodsInSample[\"nunitcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Unit')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Unit')]['label']].value : -1;\r\n        GoodsInSample[\"nquantity\"] = selectedRecord[\"Quantity\"];\r\n        GoodsInSample[\"sexternalsampleid\"] = selectedRecord[\"External Sample Id\"];\r\n        GoodsInSample[\"scomments\"] = selectedRecord[\"Comments\"];\r\n      \r\n        GoodsInSample[\"jsondata\"] = {};\r\n        GoodsInSample[\"jsonuidata\"] = {};\r\n\r\n\r\n        templateList && templateList.map(row => {\r\n            return row.children.map(column => {\r\n                return column.children.map(component => {\r\n                    if (component.hasOwnProperty(\"children\")) {\r\n                        return component.children.map(componentrow => {\r\n                            if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"predefineddropdown\") {\r\n                                if (componentrow.inputtype === \"predefineddropdown\") {\r\n                                    GoodsInSample[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                        {\r\n                                            value: selectedRecord[componentrow.label].value,\r\n                                            label: selectedRecord[componentrow.label].label\r\n                                           \r\n    \r\n                                        } : -1\r\n                                    GoodsInSample[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n    \r\n                                } else {\r\n                                    GoodsInSample[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                        {\r\n                                            value: selectedRecord[componentrow.label].value,\r\n                                            label: selectedRecord[componentrow.label].label,\r\n                                            pkey: componentrow.valuemember,\r\n                                            nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                            source: componentrow.source,\r\n                                            [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ?\r\n                                                selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                                    selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                                :\r\n                                                selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                                    selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                                        : selectedRecord[componentrow.label].vale\r\n    \r\n                                        } : -1\r\n                                    GoodsInSample[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n    \r\n                                }\r\n                            }\r\n                            else if (componentrow.inputtype === \"date\") {\r\n                                if (componentrow.mandatory) {\r\n                                    GoodsInSample[\"jsondata\"][componentrow.label] = (typeof selectedRecord[componentrow.label] === \"object\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                        (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\";\r\n    \r\n                                    GoodsInSample[\"jsonuidata\"][componentrow.label] = GoodsInSample[\"jsondata\"][componentrow.label]\r\n                                } else {\r\n                                    GoodsInSample[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                        typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                            typeof selectedRecord[componentrow.label] === \"number\" ?\r\n                                                convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                    new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n    \r\n                                                : selectedRecord[componentrow.label] ?\r\n                                                    selectedRecord[componentrow.label] : \"\" :\r\n                                        selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ?\r\n                                                convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                    new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n    \r\n                                                : selectedRecord[componentrow.label] ?\r\n                                                    selectedRecord[componentrow.label]\r\n                                                    : \"\" : \"\";\r\n    \r\n                                    GoodsInSample[\"jsonuidata\"][componentrow.label] = GoodsInSample[\"jsondata\"][componentrow.label]\r\n                                }\r\n                                if (componentrow.timezone) {\r\n                                    GoodsInSample[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                        { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                        defaulttimeZone ? defaulttimeZone : -1\r\n    \r\n                                    GoodsInSample[\"jsonuidata\"][`tz${componentrow.label}`] = GoodsInSample[\"jsondata\"][`tz${componentrow.label}`]\r\n                                }\r\n                                dateList.push(componentrow.label)\r\n                            }\r\n    \r\n                            else {\r\n                                GoodsInSample[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                    selectedRecord[componentrow.label] : \"\"\r\n    \r\n                                GoodsInSample[\"jsonuidata\"][componentrow.label] = GoodsInSample[\"jsondata\"][componentrow.label]\r\n                            }\r\n                        })\r\n                        return GoodsInSample;\r\n    \r\n                    }\r\n                    else {\r\n                        if (component.inputtype === \"combo\" || component.inputtype === \"predefineddropdown\") {\r\n                            if (component.inputtype === \"predefineddropdown\") {\r\n                                GoodsInSample[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                    {\r\n                                        value: selectedRecord[component.label].value,\r\n                                        label: selectedRecord[component.label].label,\r\n                                       \r\n    \r\n                                    } : -1\r\n                                GoodsInSample[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\r\n    \r\n                            } else {\r\n                                GoodsInSample[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                    {\r\n                                        value: selectedRecord[component.label].value,\r\n                                        label: selectedRecord[component.label].label,\r\n                                        pkey: component.valuemember,\r\n                                        nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                        source: component.source,\r\n                                        [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ?\r\n                                            selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                                selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                            :\r\n                                            selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                                selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                                    : selectedRecord[component.label].vale\r\n    \r\n                                    } : -1\r\n                                    GoodsInSample[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\r\n    \r\n                            }                            \r\n                        }\r\n                        else if (component.inputtype === \"date\") {\r\n                            if (component.mandatory) {\r\n                                console.log(typeof selectedRecord[component.label] === \"object\")\r\n                                GoodsInSample[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n    \r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[component.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo) :\r\n                                        selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\";\r\n    \r\n                                GoodsInSample[\"jsonuidata\"][component.label] = GoodsInSample[\"jsondata\"][component.label]\r\n                            } else {\r\n                                GoodsInSample[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                    typeof selectedRecord[component.label] === \"object\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : new Date(), userInfo) :\r\n                                        typeof selectedRecord[component.label] === \"number\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                                new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n    \r\n                                            : selectedRecord[component.label] ?\r\n                                                selectedRecord[component.label] : \"\" :\r\n                                    selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                        : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" : \"\";\r\n    \r\n                                GoodsInSample[\"jsonuidata\"][component.label] = GoodsInSample[\"jsondata\"][component.label]\r\n                            }\r\n                            if (component.timezone) {\r\n                                GoodsInSample[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                    { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                    defaulttimeZone ? defaulttimeZone : -1\r\n    \r\n                                GoodsInSample[\"jsonuidata\"][`tz${component.label}`] = GoodsInSample[\"jsondata\"][`tz${component.label}`]\r\n                            }\r\n                            dateList.push(component.label)\r\n                        }\r\n                        else {\r\n                            GoodsInSample[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                selectedRecord[component.label] : \"\"\r\n    \r\n                            GoodsInSample[\"jsonuidata\"][component.label] = GoodsInSample[\"jsondata\"][component.label]\r\n                        }\r\n                        return GoodsInSample;\r\n                    }\r\n                }\r\n                )\r\n            })\r\n        })\r\n        const param = { GoodsInSample, dateList }\r\n        return param;\r\n\r\n    }\r\n\r\n    importGoodsInSample =() => {\r\n\r\n        const formData = new FormData();\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.stemplatefilename;\r\n        let comboComponents=[];\r\n        let data = [];\r\n        const withoutCombocomponent = [];\r\n        let mandatory =[];\r\n        let mandatoryImportFields={};    \r\n\r\n\r\n        if(acceptedFiles && acceptedFiles.length ===1){\r\n            acceptedFiles.forEach((file, index) => {\r\n                formData.append(\"uploadedFile\", file);\r\n            });\r\n            const dateList = [];\r\n            this.state.DynamicDateField.map(x=> {\r\n                dateList.push(x['2'])\r\n            });\r\n\r\n           \r\n        const Layout = this.props.Login.masterData.DesignTemplateMapping && this.props.Login.masterData.DesignTemplateMapping[0].jsondata\r\n        if (Layout !== undefined) {\r\n            Layout.map(row => {\r\n                row.children.map(column => {\r\n                    column.children.map(component => {\r\n                        if(component.hasOwnProperty(\"children\")) {\r\n                            component.children.map(componentrow => {\r\n                                if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\"\r\n                                    || componentrow.inputtype === \"frontendsearchfilter\") {\r\n                                    data.push(componentrow)\r\n                                } else {\r\n                                    withoutCombocomponent.push(componentrow)\r\n                                }\r\n                                if(componentrow.mandatory=== true){\r\n                                    mandatory.push({\r\n                                        \"mandatory\": true,\r\n                                        \"idsName\": componentrow.label,\r\n                                        \"dataField\": componentrow.label,\r\n                                        \"mandatoryLabel\": componentrow.inputtype === \"combo\" ?\r\n                                            \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                        \"controlType\": componentrow.inputtype === \"combo\" ?\r\n                                            \"selectbox\" : \"textbox\"\r\n                                    })\r\n                                }\r\n                            })\r\n                        }else {\r\n                            component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\"\r\n                              || component.inputtype === \"frontendsearchfilter\" ?\r\n                                 data.push(component) : withoutCombocomponent.push(component)\r\n                                if(component.mandatory ===true){\r\n                                    mandatory.push({\r\n                                        \"mandatory\": true,\r\n                                        \"idsName\": component.label,\r\n                                        \"dataField\": component.label,\r\n                                        \"mandatoryLabel\": component.inputtype === \"combo\" ?\r\n                                            \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                        \"controlType\": component.inputtype === \"combo\" ?\r\n                                            \"selectbox\" : \"textbox\"\r\n                                    })\r\n                                }\r\n\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            comboComponents = data\r\n        }      \r\n        mandatory.map(x=>{\r\n            mandatoryImportFields[x.dataField]=x.mandatory;\r\n\r\n          })\r\n\r\n            formData.append('mandatoryFields',Lims_JSON_stringify(JSON.stringify(mandatoryImportFields),false))\r\n            formData.append('comboComponents', Lims_JSON_stringify(JSON.stringify(comboComponents), false))\r\n            formData.append('dateconstraints', Lims_JSON_stringify(JSON.stringify(this.state.DynamicDateConstraints), false))\r\n            formData.append('datelist', Lims_JSON_stringify(JSON.stringify(dateList), false))\r\n            formData.append('combinationunique', Lims_JSON_stringify(JSON.stringify(this.state.DynamicCombinationUnique), false))\r\n            formData.append('ndesigntemplatemappingcode', this.props.Login.masterData.ndesigntemplatemappingcode)\r\n            formData.append(\"ngoodsincode\",this.props.Login.masterData.selectedGoodsIn.ngoodsincode)\r\n            formData.append(\"ntransactionstatus\",this.props.Login.masterData.selectedGoodsIn.ntransactionstatus)\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"GoodsInSample\",\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: this.props.Login.operation,\r\n\r\n            }\r\n\r\n            const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n            if (esignNeeded) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_GOODSINSAMPLE\" }),\r\n                        operation: this.props.Login.operation,\r\n                    },\r\n\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }                                                                                                                                                                                                                \r\n\r\n        }else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASESELECTTHEFILE\" }))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    insertGoodsInChecklist = () => {\r\n        let inputData = [];     \r\n        inputData[\"ngoodsincode\"] =this.state.selectedRecord.ngoodsincode;\r\n        inputData[\"ndesigntemplatemappingcode\"]  = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\r\n        inputData[\"userinfo\"]  = this.props.Login.userInfo;   \r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"GoodsInChecklist\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation, \r\n            selectedRecord:this.state.selectedRecord\r\n                \r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,openTemplateModal:true, screenName:  \"IDS_GOODSINCHECKLIST\",\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }        \r\n        else {\r\n            this.props.onSaveGoodsInCheckList(inputParam);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,selectedRecord,skip, take,masterData,sampleGridDataState,\r\n            DynamicGridItem,DynamicGridMoreField,DynamicExportItem,DynamicDateField,DynamicTemplateField,DynamicDateConstraints,DynamicCombinationUnique,Checklist } = this.state;\r\n        let bool = false;\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }     \r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {     \r\n\r\n            bool = true;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take   \r\n        }\r\n\r\n        if (this.props.Login.sampleGridDataState && this.props.Login.sampleGridDataState !== previousProps.Login.sampleGridDataState) {\r\n            sampleGridDataState = this.props.Login.sampleGridDataState;\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata && this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            if(dynamicColumn !== null){\r\n                DynamicGridItem = dynamicColumn.griditem ? dynamicColumn.griditem : [];\r\n                DynamicGridMoreField = dynamicColumn.gridmoreitem ? dynamicColumn.gridmoreitem : [];\r\n                DynamicExportItem = dynamicColumn.exportFields ? dynamicColumn.exportFields : [];\r\n                DynamicDateField = dynamicColumn.datefields ? dynamicColumn.datefields : [];\r\n                DynamicTemplateField = dynamicColumn.templatefields ? dynamicColumn.templatefields : [];\r\n                DynamicDateConstraints = dynamicColumn.dateconstraints ? dynamicColumn.dateconstraints : [];\r\n                DynamicCombinationUnique = dynamicColumn.combinationunique ?  dynamicColumn.combinationunique : [] ;  \r\n                Checklist = dynamicColumn.checklist ? dynamicColumn.checklist : [] ;             \r\n            }\r\n            \r\n\r\n        }    \r\n\r\n        \r\n        if (bool) {\r\n            this.setState({\r\n                userRoleControlRights, controlMap,selectedRecord,skip, take,masterData,sampleGridDataState,\r\n                DynamicGridItem,DynamicGridMoreField,DynamicExportItem, DynamicDateField,DynamicTemplateField ,DynamicDateConstraints,DynamicCombinationUnique,Checklist\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore,getGoodsInFilterSubmit,validateEsignCredential,getGoodsInComboService ,getGoodsInDetail,getClient,getProjectType,getProject,filterColumnData,getPreviewTemplate,viewInformation,checkListGoodsIn,downloadGoodsIn,onSaveGoodsInCheckList,validateEsignGoodsIn\r\n    \r\n})(injectIntl(GoodsIn))"]},"metadata":{},"sourceType":"module"}