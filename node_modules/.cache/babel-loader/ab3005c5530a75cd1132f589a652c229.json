{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\Instrument.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Nav, FormGroup, FormLabel, Modal } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { FormattedMessage } from \"react-intl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { injectIntl } from \"react-intl\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, getInstrumentCombo, getInstrumentDetail, getSectionUsers, getAvailableInstData, changeInstrumentCategoryFilter, filterColumnData, getTabDetails, getDataForAddEditValidation, addInstrumentFile, getDataForAddEditCalibration, getDataForAddEditMaintenance, OpenDate, CloseDate } from \"../../actions\";\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { attachmentType, transactionStatus } from \"../../components/Enumeration\";\nimport AddInstrument from \"../../pages/instrumentmanagement/AddInstrument\";\nimport AddInstrumentSection from \"../../pages/instrumentmanagement/AddInstrumentSection\";\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\"; //import SlideOutModal from '../../components/SlideOutModal';\n\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport CustomTab from \"../../components/custom-tabs/custom-tabs.component\";\nimport Esign from \"../audittrail/Esign\";\nimport { showEsign, getControlMap, constructOptionList, formatInputDate, onDropAttachFileList, create_UUID, deleteAttachmentDropZone } from \"../../components/CommonScript\"; // import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\n\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\nimport InstrumentSectionTab from \"./InstrumentSectionTab\";\nimport { process } from \"@progress/kendo-data-query\"; // import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\nimport InstrumentCategoryFilter from \"./InstrumentCategoryFilter\";\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\nimport { Affix } from \"rsuite\";\nimport ReactTooltip from \"react-tooltip\";\nimport InstrumentValidationTab from \"./InstrumentValidationTab\";\nimport AddInstrumentValidation from \"../../pages/instrumentmanagement/AddInstrumentValidation\";\nimport AddInstrumentFile from \"../../pages/instrumentmanagement/AddInstrumentFile\";\nimport InstrumentCalibrationTab from \"./InstrumentCalibrationTab\";\nimport AddInstrumentCalibration from \"./AddInstrumentCalibration\";\nimport ModalShow from \"../../components/ModalShow\";\nimport FormInput from \"../../components/form-input/form-input.component\";\nimport AddOpenDate from \"./AddOpenDate\";\nimport AddCloseDate from \"./AddCloseDate\";\nimport InstrumentMaintenanceTab from \"./InstrumentMaintenanceTab\";\nimport AddInstrumentMaintenance from \"./AddInstrumentMaintenance\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Instrument extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveModalClick = () => {\n      let inputData = [];\n      let inputParam = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n        inputData[\"instrumentcalibration\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n          ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n          ncalibrationstatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n          sopenreason: this.state.selectedRecord.sopenreason !== null ? this.state.selectedRecord.sopenreason : \"\",\n          sclosereason: this.state.selectedRecord.sclosereason !== null ? this.state.selectedRecord.sclosereason : \"\"\n        };\n\n        if (this.state.selectedRecord[\"dopendate\"]) {\n          inputData[\"instrumentcalibration\"][\"dopendate\"] = formatInputDate(this.state.selectedRecord[\"dopendate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dclosedate\"]) {\n          inputData[\"instrumentcalibration\"][\"dclosedate\"] = formatInputDate(this.state.selectedRecord[\"dclosedate\"], false);\n        }\n\n        inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentCalibration\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          searchRef: this.searchRef,\n          modalShow: false\n        };\n      } else {\n        inputData[\"instrumentmaintenance\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n          ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n          nmaintenancestatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n          sopenreason: this.state.selectedRecord.sopenreason !== null ? this.state.selectedRecord.sopenreason : \"\",\n          sclosereason: this.state.selectedRecord.sclosereason !== null ? this.state.selectedRecord.sclosereason : \"\"\n        };\n\n        if (this.state.selectedRecord[\"dopendate\"]) {\n          inputData[\"instrumentmaintenance\"][\"dopendate\"] = formatInputDate(this.state.selectedRecord[\"dopendate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dclosedate\"]) {\n          inputData[\"instrumentmaintenance\"][\"dclosedate\"] = formatInputDate(this.state.selectedRecord[\"dclosedate\"], false);\n        }\n\n        inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentMaintenance\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          searchRef: this.searchRef\n        };\n      }\n\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            }\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"modalShow\");\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let instSection = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\n        let postParam = undefined;\n        let fieldList = [\"ninstrumentcode\", \"ninstrumentcatcode\", \"nsuppliercode\", \"nservicecode\", \"nmanufcode\", \"nusercode\", \"sinstrumentid\", \"sinstrumentname\", \"smodelnumber\", \"spono\", //\"stzmanufdate\",\"stzpodate\",\"stzreceivedate\",\"stzinstallationdate\",\"stzexpirydate\",\n        //\"dmanufacdate\",\"dpodate\", \"dreceiveddate\", \"dinstallationdate\",\"dexpirydate\",\n        \"nwindowsperiodminus\", \"nwindowsperiodplus\", \"nwindowsperiodminusunit\", \"nwindowsperiodplusunit\", \"sserialno\", \"sremarks\", \"ndefaultstatus\", \"nsitecode\", \"nstatus\"];\n        inputData[\"instrument\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode\n        };\n\n        if (this.props.Login.operation === \"update\") {\n          postParam = {\n            inputListName: \"Instrument\",\n            selectedObject: \"selectedInstrument\",\n            primaryKeyField: \"ninstrumentcode\"\n          };\n          inputData[\"instrument\"][\"smanufacdate\"] = this.state.selectedRecord[\"dmanufacdate\"] ? this.state.selectedRecord[\"dmanufacdate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"spodate\"] = this.state.selectedRecord[\"dpodate\"] ? this.state.selectedRecord[\"dpodate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sreceiveddate\"] = this.state.selectedRecord[\"dreceiveddate\"] ? this.state.selectedRecord[\"dreceiveddate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sinstallationdate\"] = this.state.selectedRecord[\"dinstallationdate\"] ? this.state.selectedRecord[\"dinstallationdate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sexpirydate\"] = this.state.selectedRecord[\"dexpirydate\"] ? this.state.selectedRecord[\"dexpirydate\"] : transactionStatus.NA;\n          fieldList.map(item => {\n            return inputData[\"instrument\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\n          });\n        } else {\n          inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"];\n          inputData[\"instrument\"][\"nsectioncode\"] = this.state.selectedRecord[\"nsectioncode\"] ? this.state.selectedRecord[\"nsectioncode\"].value : transactionStatus.NA; // inputData[\"instrumentsection\"]=this.props.Login.userInfo.nusercode;\n          // inputData[\"instrumentsection\"][\"ninstrumentcode\"]=this.state.selectedRecord[\"ninstrumentcode\"]?this.state.selectedRecord[\"ninstrumentcode\"]:\"\";\n          // inputData[\"instrumentsection\"][\"nsectioncode\"]=this.state.selectedRecord[\"nsectioncode\"]?this.state.selectedRecord[\"nsectioncode\"]:\"\";\n\n          fieldList.map(item => {\n            return inputData[\"instrument\"][item] = this.state.selectedRecord[item];\n          });\n        }\n\n        inputData[\"instrument\"][\"ninstrumentcatcode\"] = this.state.selectedRecord[\"ninstrumentcatcode\"] ? this.state.selectedRecord[\"ninstrumentcatcode\"].value : transactionStatus.NA;\n        inputData[\"instrument\"][\"nmanufcode\"] = this.state.selectedRecord[\"nmanufcode\"] ? this.state.selectedRecord[\"nmanufcode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nsuppliercode\"] = this.state.selectedRecord[\"nsuppliercode\"] ? this.state.selectedRecord[\"nsuppliercode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nservicecode\"] = this.state.selectedRecord[\"nservicecode\"] ? this.state.selectedRecord[\"nservicecode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\"ntranscode\"] ? this.state.selectedRecord[\"ntranscode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nwindowsperiodplus\"] = this.state.selectedRecord[\"nwindowsperiodplus\"] ? this.state.selectedRecord[\"nwindowsperiodplus\"] : 0;\n        inputData[\"instrument\"][\"nwindowsperiodminus\"] = this.state.selectedRecord[\"nwindowsperiodminus\"] ? this.state.selectedRecord[\"nwindowsperiodminus\"] : 0;\n        inputData[\"instrument\"][\"nwindowsperiodminusunit\"] = this.state.selectedRecord[\"nwindowsperiodminusunit\"] ? this.state.selectedRecord[\"nwindowsperiodminusunit\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nwindowsperiodplusunit\"] = this.state.selectedRecord[\"nwindowsperiodplusunit\"] ? this.state.selectedRecord[\"nwindowsperiodplusunit\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzmanufdate\"] = this.state.selectedRecord[\"ntzmanufdate\"] ? this.state.selectedRecord[\"ntzmanufdate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzmanufdate\"] = this.state.selectedRecord[\"ntzmanufdate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzpodate\"] = this.state.selectedRecord[\"ntzpodate\"] ? this.state.selectedRecord[\"ntzpodate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzpodate\"] = this.state.selectedRecord[\"ntzpodate\"] ? this.state.selectedRecord[\"ntzpodate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzreceivedate\"] = this.state.selectedRecord[\"ntzreceivedate\"] ? this.state.selectedRecord[\"ntzreceivedate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzreceivedate\"] = this.state.selectedRecord[\"ntzreceivedate\"] ? this.state.selectedRecord[\"ntzreceivedate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzinstallationdate\"] = this.state.selectedRecord[\"ntzinstallationdate\"] ? this.state.selectedRecord[\"ntzinstallationdate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzinstallationdate\"] = this.state.selectedRecord[\"ntzinstallationdate\"] ? this.state.selectedRecord[\"ntzinstallationdate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzexpirydate\"] = this.state.selectedRecord[\"ntzexpirydate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzexpirydate\"] = this.state.selectedRecord[\"ntzexpirydate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].label : transactionStatus.NA;\n\n        if (this.state.selectedRecord[\"dpodate\"]) {\n          inputData[\"instrument\"][\"dpodate\"] = formatInputDate(this.state.selectedRecord[\"dpodate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dreceiveddate\"]) {\n          inputData[\"instrument\"][\"dreceiveddate\"] = formatInputDate(this.state.selectedRecord[\"dreceiveddate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dinstallationdate\"]) {\n          inputData[\"instrument\"][\"dinstallationdate\"] = formatInputDate(this.state.selectedRecord[\"dinstallationdate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dexpirydate\"]) {\n          inputData[\"instrument\"][\"dexpirydate\"] = formatInputDate(this.state.selectedRecord[\"dexpirydate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dmanufacdate\"]) {\n          inputData[\"instrument\"][\"dmanufacdate\"] = formatInputDate(this.state.selectedRecord[\"dmanufacdate\"], false);\n        }\n\n        inputData[\"instrument\"][\"nusercode\"] = this.props.Login.userInfo.nusercode;\n\n        if (this.state.selectedRecord[\"nsectionusercode\"] !== undefined) {\n          if (this.state.selectedRecord[\"nusercode\"] !== undefined) {\n            this.state.selectedRecord[\"nusercode\"].map(item => {\n              return instSection.push({\n                nusercode: item.value // nsitecode:this.props.Login.masterData.SelectedOrgSite.nsitecode\n\n              });\n            });\n            inputData[\"instrumentsection\"] = instSection;\n          }\n        }\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Instrument\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_SECTION\") {\n        inputData[\"instrumentsection\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode\n        };\n        inputData[\"instrumentsection\"][\"nsectioncode\"] = this.state.selectedRecord[\"nsectioncode\"] ? this.state.selectedRecord[\"nsectioncode\"].value : transactionStatus.NA;\n        inputData[\"instrumentsection\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value : transactionStatus.NA;\n        inputData[\"instrumentsection\"][\"ninstrumentcode\"] = this.props.Login.instItem[\"ninstrumentcode\"];\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Section\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\n        if (this.props.Login.operation === \"update\") {\n          inputData[\"instrumentvalidation\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentvalidationcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode,\n            nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\n            nvalidationstatus: this.state.selectedRecord.ntranscode.value,\n            dvalidationdate: formatInputDate(this.state.selectedRecord[\"dvalidationdate\"], false),\n            sremark: this.state.selectedRecord.sremark !== null ? this.state.selectedRecord.sremark : \"\",\n            ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"] ? this.state.selectedRecord[\"ntzvalidationdate\"].value : \"-1\"\n          };\n        } else {\n          inputData[\"instrumentvalidation\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\n            nvalidationstatus: this.state.selectedRecord.ntranscode.item.ntranscode,\n            ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"] ? this.state.selectedRecord[\"ntzvalidationdate\"].value : \"-1\",\n            sremark: this.state.selectedRecord.sremark !== null ? this.state.selectedRecord.sremark : \"\"\n          };\n        }\n\n        if (this.state.selectedRecord[\"dvalidationdate\"]) {\n          inputData[\"instrumentvalidation\"][\"dvalidationdate\"] = formatInputDate(this.state.selectedRecord[\"dvalidationdate\"], false);\n        }\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentValidation\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\n        const inputParam = this.onSaveInstrumentFile(saveType, formRef);\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n        if (this.props.Login.operation === \"create\") inputData[\"instrumentcalibration\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          nopenusercode: -1,\n          ncloseusercode: -1,\n          ncalibrationstatus: this.state.selectedRecord.ntranscode.item.ntranscode,\n          dlastcalibrationdate: formatInputDate(this.state.selectedRecord[\"dlastcalibrationdate\"], false),\n          //    \"dlastcalibrationdate\":formatInputDate(this.props.Login.masterData.selectedInstrumentCalibration.dlastcalibrationdate,false),\n          dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n          ntzlastcalibrationdate: this.state.selectedRecord[\"ntzlastcalibrationdate\"] ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value : \"-1\",\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\"\n        };else {\n          inputData[\"instrumentcalibration\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n            ncalibrationstatus: this.state.selectedRecord.ntranscode.value,\n            dlastcalibrationdate: formatInputDate(this.state.selectedRecord[\"dlastcalibrationdate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            ntzlastcalibrationdate: this.state.selectedRecord[\"ntzlastcalibrationdate\"] ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value : \"-1\",\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\"\n          };\n        }\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentCalibration\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\") {\n        const inputParam = this.onSaveInstrumentCalibrationFile(saveType, formRef);\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\n        if (this.props.Login.operation === \"create\") inputData[\"instrumentmaintenance\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          nopenusercode: -1,\n          ncloseusercode: -1,\n          nmaintenancestatus: this.state.selectedRecord.ntranscode.item.ntranscode,\n          dlastmaintenancedate: formatInputDate(this.state.selectedRecord[\"dlastmaintenancedate\"], false),\n          dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n          ntzlastmaintenancedate: this.state.selectedRecord[\"ntzlastmaintenancedate\"] ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value : \"-1\",\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\"\n        };else {\n          inputData[\"instrumentmaintenance\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n            nmaintenancestatus: this.state.selectedRecord.ntranscode.value,\n            dlastmaintenancedate: formatInputDate(this.state.selectedRecord[\"dlastmaintenancedate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\",\n            ntzlastmaintenancedate: this.state.selectedRecord[\"ntzlastmaintenancedate\"] ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value : \"-1\"\n          };\n        }\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentMaintenance\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\n        const inputParam = this.onSaveInstrumentMaintenanceFile(saveType, formRef);\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          userinfo: { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n\n      if (this.props.Login.Action === \"OPENDATE\") {\n        this.props.validateEsignCredential(inputParam, \"modalShow\");\n      } else if (this.props.Login.Action === \"Edit\") {\n        this.props.validateEsignCredential(inputParam, \"openModal\");\n      } else if (this.props.Login.Action === \"Delete\") {\n        this.props.validateEsignCredential(inputParam, \"openModal\");\n      } else if (this.props.Login.Action === \"Add\") {\n        this.props.validateEsignCredential(inputParam, \"openModal\");\n      } else if (this.props.Login.Action === \"Closedate\") {\n        this.props.validateEsignCredential(inputParam, \"modalShow\");\n      } else {\n        this.props.validateEsignCredential(inputParam, \"openModal\");\n      }\n    };\n\n    this.defaultRecord = defaultParam => {\n      const methodUrl = defaultParam.methodUrl;\n      let dataItem = defaultParam.selectedRecord;\n      dataItem[\"ndefaultstatus\"] = transactionStatus.YES;\n      let dataState = undefined;\n\n      if (defaultParam.screenName === \"IDS_SECTION\") {\n        dataState = this.state.sectionDataState;\n      }\n\n      const inputParam = {\n        inputData: {\n          [methodUrl]: dataItem,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"instrument\",\n        operation: \"setDefault\",\n        methodUrl: methodUrl,\n        dataState\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, defaultParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openChildModal: true,\n            screenName: \"Test\",\n            operation: defaultParam.operation,\n            selectedRecord: {}\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\n      }\n    };\n\n    this.onSwitchChange = (item, key, methodUrl) => {\n      let dataItem = item;\n      dataItem[\"ndefaultstatus\"] = 3;\n      const inputParam = {\n        inputData: {\n          [key]: dataItem,\n          userinfo: this.props.userInfo\n        },\n        classUrl: \"testmaster\",\n        operation: \"setDefault\",\n        methodUrl: methodUrl\n      };\n      this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\", {});\n    };\n\n    this.deleteTabFileRecord = deleteParam => {\n      let inputData = [];\n      const screenName = deleteParam.screenName;\n\n      if (screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentFile\"] = {\n          ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\n          ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode\n        };\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentValidationFile\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: deleteParam.operation,\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: deleteParam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentFile\"] = {\n          ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\n          ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode\n        };\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentCalibrationFile\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: deleteParam.operation,\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: deleteParam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentFile\"] = {\n          ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\n          ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode\n        };\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentMaintenanceFile\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: deleteParam.operation,\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: deleteParam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.DeleteInstrument = (operation, ncontrolCode) => {\n      let inputData = [];\n\n      if (operation.screenName === \"IDS_SECTION\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"instrumentsection\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode\n        };\n        inputData[\"instrumentsection\"][\"ninstrumentsectioncode\"] = operation.selectedRecord.ninstrumentsectioncode;\n        inputData[\"instrumentsection\"][\"ninstrumentcode\"] = operation.selectedRecord.ninstrumentcode;\n        inputData[\"instrumentsection\"][\"ndefaultstatus\"] = operation.selectedRecord.ndefaultstatus;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"Section\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\",\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: operation.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (ncontrolCode === 530) {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentFile\"] = {\n          ninstrumentfilecode: this.props.Login.masterData.ValidationFileData.ninstrumentfilecode\n        };\n        inputData[\"InstrumentFile\"] = {\n          ninstrument: this.props.Login.masterData.ValidationFileData.ninstrumentfilecode\n        };\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentValidationFile\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\",\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (operation.screenName === \"IDS_INSTRUMENTVALIDATION\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentValidation\"] = {\n          ninstrumentvalidationcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode\n        };\n        inputData[\"InstrumentValidation\"][\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentValidation\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\",\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (operation.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n        inputData[\"InstrumentCalibration\"] = {\n          ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode\n        };\n        inputData[\"InstrumentCalibration\"][\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n        inputData[\"nFlag\"] = operation.nFlag;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentCalibration\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\"\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (operation.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentMaintenance\"] = {\n          ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode\n        };\n        inputData[\"InstrumentMaintenance\"][\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentMaintenance\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\",\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        inputData[\"instrument\"] = this.props.Login.masterData.selectedInstrument;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const postParam = {\n          inputListName: \"Instrument\",\n          selectedObject: \"selectedInstrument\",\n          primaryKeyField: \"ninstrumentcode\",\n          primaryKeyValue: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          methodUrl: \"Instrument\",\n          postParam,\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: operation.operation\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: operation.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\" //fileToDelete:file.name\n\n      });\n    };\n\n    this.onSaveInstrumentFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = 1;\n      let isFileEdited = transactionStatus.NO;\n      let instrumentFileArray = [];\n      let instrumentFile = {\n        ninstrumentfilecode: selectedRecord.ninstrumentfilecode ? selectedRecord.ninstrumentfilecode : 0,\n        nstatus: transactionStatus.ACTIVE\n      };\n      const formData = new FormData(); //  if (nattachmenttypecode === attachmentType.FTP) {\n\n      if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n        acceptedFiles.forEach((file, index) => {\n          const tempData = Object.assign({}, instrumentFile);\n          const splittedFileName = file.name.split(\".\");\n          const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\n          const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split(\".\") : \"\";\n          const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split(\".\")[ssystemfilename.length - 1] : \"\";\n          const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ninstrumentfilecode && selectedRecord.ninstrumentfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + \".\" + filesystemfileext : create_UUID() + \".\" + fileExtension : \"\";\n          tempData[\"sfilename\"] = file.name;\n          tempData[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n          tempData[\"nlinkcode\"] = transactionStatus.NA;\n          tempData[\"ssystemfilename\"] = uniquefilename;\n          tempData[\"nfilesize\"] = file.size;\n          tempData[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n          tempData[\"nattachmenttypecode\"] = 1;\n          tempData[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\n          tempData[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\n          formData.append(\"uploadedFile\" + index, file);\n          formData.append(\"uniquefilename\" + index, uniquefilename);\n          instrumentFileArray.push(tempData);\n        });\n        formData.append(\"filecount\", acceptedFiles.length);\n        isFileEdited = transactionStatus.YES;\n      } else {\n        instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\n        instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n        instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\n        instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\n        instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n        instrumentFile[\"nattachmenttypecode\"] = 1;\n        instrumentFile[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\n        instrumentFileArray.push(instrumentFile);\n      } //  }\n      // else {\n      //     testFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n      //     testFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\n      //     testFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n      //     testFile[\"ssystemfilename\"] = \"\";\n      //     testFile[\"nfilesize\"] = 0;\n      //     testFileArray.push(testFile);\n      // }\n\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray)); // formData.append(\"userinfo\", JSON.stringify(this.props.userInfo));\n\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        // operation: \"create\",\n        classUrl: \"instrument\",\n        saveType,\n        formRef,\n        methodUrl: \"InstrumentFile\"\n      };\n      return inputParam;\n    };\n\n    this.onSaveInstrumentCalibrationFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = 1;\n      let isFileEdited = transactionStatus.NO;\n      let instrumentFileArray = [];\n      let instrumentFile = {\n        ninstrumentfilecode: selectedRecord.ninstrumentfilecode ? selectedRecord.ninstrumentfilecode : 0,\n        nstatus: transactionStatus.ACTIVE\n      };\n      const formData = new FormData();\n\n      if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n        acceptedFiles.forEach((file, index) => {\n          const tempData = Object.assign({}, instrumentFile);\n          const splittedFileName = file.name.split(\".\");\n          const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\n          const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split(\".\") : \"\";\n          const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split(\".\")[ssystemfilename.length - 1] : \"\";\n          const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ninstrumentfilecode && selectedRecord.ninstrumentfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + \".\" + filesystemfileext : create_UUID() + \".\" + fileExtension : \"\";\n          tempData[\"sfilename\"] = file.name;\n          tempData[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n          tempData[\"nlinkcode\"] = transactionStatus.NA;\n          tempData[\"ssystemfilename\"] = uniquefilename;\n          tempData[\"nfilesize\"] = file.size;\n          tempData[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n          tempData[\"nattachmenttypecode\"] = 1;\n          tempData[\"ninstrumentlogtypecode\"] = 2;\n          tempData[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\n          formData.append(\"uploadedFile\" + index, file);\n          formData.append(\"uniquefilename\" + index, uniquefilename);\n          instrumentFileArray.push(tempData);\n        });\n        formData.append(\"filecount\", acceptedFiles.length);\n        isFileEdited = transactionStatus.YES;\n      } else {\n        instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\n        instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n        instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\n        instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\n        instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n        instrumentFile[\"nattachmenttypecode\"] = 1;\n        instrumentFile[\"ninstrumentlogtypecode\"] = 2;\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\n        instrumentFileArray.push(instrumentFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"instrument\",\n        saveType,\n        formRef,\n        methodUrl: \"InstrumentCalibrationFile\"\n      };\n      return inputParam;\n    };\n\n    this.onSaveInstrumentMaintenanceFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = 1;\n      let isFileEdited = transactionStatus.NO;\n      let instrumentFileArray = [];\n      let instrumentFile = {\n        ninstrumentfilecode: selectedRecord.ninstrumentfilecode ? selectedRecord.ninstrumentfilecode : 0,\n        nstatus: transactionStatus.ACTIVE\n      };\n      const formData = new FormData();\n\n      if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n        acceptedFiles.forEach((file, index) => {\n          const tempData = Object.assign({}, instrumentFile);\n          const splittedFileName = file.name.split(\".\");\n          const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\n          const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split(\".\") : \"\";\n          const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split(\".\")[ssystemfilename.length - 1] : \"\";\n          const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ninstrumentfilecode && selectedRecord.ninstrumentfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + \".\" + filesystemfileext : create_UUID() + \".\" + fileExtension : \"\";\n          tempData[\"sfilename\"] = file.name;\n          tempData[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n          tempData[\"nlinkcode\"] = transactionStatus.NA;\n          tempData[\"ssystemfilename\"] = uniquefilename;\n          tempData[\"nfilesize\"] = file.size;\n          tempData[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n          tempData[\"nattachmenttypecode\"] = 1;\n          tempData[\"ninstrumentlogtypecode\"] = 2;\n          tempData[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\n          formData.append(\"uploadedFile\" + index, file);\n          formData.append(\"uniquefilename\" + index, uniquefilename);\n          instrumentFileArray.push(tempData);\n        });\n        formData.append(\"filecount\", acceptedFiles.length);\n        isFileEdited = transactionStatus.YES;\n      } else {\n        instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\n        instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n        instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\n        instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\n        instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n        instrumentFile[\"nattachmenttypecode\"] = 1;\n        instrumentFile[\"ninstrumentlogtypecode\"] = 2;\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\n        instrumentFileArray.push(instrumentFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"instrument\",\n        saveType,\n        formRef,\n        methodUrl: \"InstrumentMaintenanceFile\"\n      };\n      return inputParam;\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropTestFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.Login.masterData[\"selectedSection\"], event.dataState),\n        sectionDataState: event.dataState\n      });\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      const deleteSecId = this.state.controlMap.has(\"DeleteSection\") && this.state.controlMap.get(\"DeleteSection\").ncontrolcode;\n      const defaultSecId = this.state.controlMap.has(\"DefaultSection\") && this.state.controlMap.get(\"DefaultSection\").ncontrolcode;\n      tabMap.set(\"IDS_SECTION\", /*#__PURE__*/React.createElement(InstrumentSectionTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights //dataResult={this.state.dataResult}\n        //dataResult={process(this.props.Login.masterData[\"selectedSection\"], (this.props.Login.screenName === undefined || this.props.Login.screenName === \"IDS_SECTION\") ? this.state.sectionDataState : { skip: 0, take: 10 })}\n        // dataState={this.state.sectionDataState}\n        //dataStateChange={this.dataStateChange}\n        ,\n        dataState: this.props.Login.dataState,\n        masterData: this.props.Login.masterData[\"selectedSection\"] || [],\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        deleteRecord: this.DeleteInstrument,\n        deleteSecId: deleteSecId,\n        defaultSecId: defaultSecId,\n        defaultRecord: this.defaultRecord,\n        getAvailableInstData: this.props.getAvailableInstData,\n        InstrumentSection: this.props.Login.masterData.selectedSection || [],\n        screenName: \"IDS_SECTION\",\n        selectedRecord: this.state.selectedRecord,\n        settings: this.props.Login.settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2503,\n          columnNumber: 7\n        }\n      }));\n      tabMap.set(\"IDS_INSTRUMENTVALIDATION\", /*#__PURE__*/React.createElement(InstrumentValidationTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        FileData: this.props.Login.masterData.ValidationFileData,\n        InstrumentValidation: this.props.Login.masterData.InstrumentValidation,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getDataForAddEditValidation: this.props.getDataForAddEditValidation,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        deleteRecord: this.DeleteInstrument,\n        deleteTabFileRecord: this.deleteTabFileRecord,\n        getTabDetails: this.props.getTabDetails,\n        addInstrumentFile: this.props.addInstrumentFile,\n        deleteAction: this.props.deleteAction,\n        ConfirmDelete: this.ConfirmDelete,\n        getDataForEdit: this.props.getDataForEdit,\n        addfilecllick: this.addInstrumentFile,\n        screenName: \"IDS_INSTRUMENTVALIDATION\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2528,\n          columnNumber: 7\n        }\n      }));\n      tabMap.set(\"IDS_INSTRUMENTCALIBRATION\", /*#__PURE__*/React.createElement(InstrumentCalibrationTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        FileData: this.props.Login.masterData.CalibrationFileData,\n        InstrumentCalibration: this.props.Login.masterData.InstrumentCalibration,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getDataForAddEditCalibration: this.props.getDataForAddEditCalibration,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        deleteRecord: this.DeleteInstrument,\n        deleteTabFileRecord: this.deleteTabFileRecord,\n        getTabDetails: this.props.getTabDetails,\n        addInstrumentFile: this.props.addInstrumentFile,\n        addfilecllick: this.addInstrumentCalibrationFile,\n        deleteAction: this.props.deleteAction,\n        ConfirmDelete: this.ConfirmDelete,\n        addOpenDate: this.props.addOpenDate,\n        OpenDate: this.props.OpenDate,\n        CloseDate: this.props.CloseDate,\n        screenName: \"IDS_INSTRUMENTCALIBRATION\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2552,\n          columnNumber: 7\n        }\n      }));\n      tabMap.set(\"IDS_INSTRUMENTMAINTENANCE\", /*#__PURE__*/React.createElement(InstrumentMaintenanceTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        FileData: this.props.Login.masterData.MaintenanceFileData,\n        InstrumentMaintenance: this.props.Login.masterData.InstrumentMaintenance,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getDataForAddEditMaintenance: this.props.getDataForAddEditMaintenance,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        deleteRecord: this.DeleteInstrument,\n        deleteTabFileRecord: this.deleteTabFileRecord,\n        getTabDetails: this.props.getTabDetails,\n        addInstrumentFile: this.props.addInstrumentFile,\n        addfilecllick: this.addInstrumentMaintenanceFile,\n        deleteAction: this.props.deleteAction,\n        ConfirmDelete: this.ConfirmDelete,\n        addOpenDate: this.props.addOpenDate,\n        OpenDate: this.props.OpenDate,\n        CloseDate: this.props.CloseDate,\n        screenName: \"IDS_INSTRUMENTMAINTENANCE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2580,\n          columnNumber: 7\n        }\n      }));\n      return tabMap;\n    };\n\n    this.ConfirmDelete = (operation, deleteId) => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteInstrument(operation, deleteId, operation.screenName ? operation.screenName : \"IDS_INSTRUMENT\"));\n    };\n\n    this.addInstrumentFile = (ncontrolCode, screenName) => {\n      let inputData = [];\n      let openModal = this.props.Login.openModal;\n      let operation = \"create\";\n      screenName = this.props.Login.screenName;\n      screenName = \"IDS_INSTRUMENTVALIDATIONFILE\";\n      openModal = true;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          screenName,\n          inputData,\n          operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.addInstrumentCalibrationFile = (ncontrolCode, screenName) => {\n      let inputData = [];\n      let openModal = this.props.Login.openModal;\n      let operation = \"create\";\n      screenName = this.props.Login.screenName;\n      screenName = \"IDS_INSTRUMENTCALIBRATIONFILE\";\n      openModal = true;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          screenName,\n          inputData,\n          operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.addInstrumentMaintenanceFile = (ncontrolCode, screenName) => {\n      let inputData = [];\n      let openModal = this.props.Login.openModal;\n      let operation = \"create\";\n      screenName = this.props.Login.screenName;\n      screenName = \"IDS_INSTRUMENTMAINTENANCEFILE\";\n      openModal = true;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          screenName,\n          inputData,\n          operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.nfilterInstrumentCategory.value) {\n        let inputParam = {\n          inputData: {\n            ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\n            userinfo: this.props.Login.userInfo,\n            nfilterInstrumentCategory: this.state.nfilterInstrumentCategory\n          },\n          classUrl: \"instrument\",\n          methodUrl: \"InsByInstrumentCat\"\n        };\n        this.props.changeInstrumentCategoryFilter(inputParam, this.props.Login.masterData.filterInstrumentCategory);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName, caseNo) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n\n        switch (caseNo) {\n          case 1:\n            selectedRecord[fieldName] = comboData;\n            this.setState({\n              selectedRecord\n            });\n            break;\n\n          case 2:\n            selectedRecord[fieldName] = comboData;\n            selectedRecord[\"nsectionusercode\"] = comboData.value; // this.setState({ selectedRecord });\n            // selectedRecord[fieldName] = comboData;\n            // this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"create\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, this.state.selectedRecord.nsectioncode);\n\n            this.props.getSectionUsers(this.state.selectedRecord.nsectionusercode, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\n            break;\n\n          case 3:\n            let nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\n            nfilterInstrumentCategory = comboData;\n            this.searchRef.current.value = \"\";\n            this.setState({\n              nfilterInstrumentCategory\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        } // data: {openModal, loadEsign, selectedRecord}\n\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      if (this.state.nfilterInstrumentCategory.value) {\n        let inputParam = {\n          inputData: {\n            ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\n            userinfo: this.props.Login.userInfo,\n            nfilterInstrumentCategory: this.state.nfilterInstrumentCategory\n          },\n          classUrl: \"instrument\",\n          methodUrl: \"InsByInstrumentCat\"\n        };\n        this.props.changeInstrumentCategoryFilter(inputParam, this.props.Login.masterData.filterInstrumentCategory);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\"\n        }));\n      }\n    };\n\n    const sectionDataState = {\n      skip: 0,\n      take: 10\n    };\n    this.state = {\n      selectedRecord: {},\n      error: \"\",\n      userRoleControlRights: [],\n      selectedInstrument: undefined,\n      controlMap: new Map(),\n      Instrument: [],\n      sectionDataState\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sinstrumentname\"];\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\n        toast.warn(props.Login.masterStatus);\n        props.Login.masterStatus = \"\";\n      }\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    console.log('master main', this.props.Login.masterData);\n    let mandatoryFields = [];\n\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTCATEGORY\",\n        dataField: \"ninstrumentcatcode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTID\",\n        dataField: \"sinstrumentid\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTNAME\",\n        dataField: \"sinstrumentname\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_SUPPLIER\",\n        dataField: \"nsuppliercode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_SERVICEBY\",\n        dataField: \"nservicecode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_SERIALNO\",\n        dataField: \"sserialno\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTSTATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      } // { \"mandatory\": true, \"idsName\": \"IDS_INCHARGE\", \"dataField\": \"susername\" }\n      );\n\n      if (this.state.selectedRecord[\"nsectioncode\"]) {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_INCHARGE\",\n          dataField: \"nusercode\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n    } else if (this.props.Login.screenName === \"IDS_SECTION\") mandatoryFields.push({\n      mandatory: true,\n      idsName: \"IDS_SECTION\",\n      dataField: \"nsectioncode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_INCHARGE\",\n      dataField: \"nusercode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    });else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" || this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" || this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\n      mandatoryFields.push({\n        idsName: \"IDS_FILE\",\n        dataField: \"sfilename\",\n        mandatory: true,\n        mandatoryLabel: \"IDS_CHOOSE\",\n        controlType: \"file\"\n      });\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } // let userStatusCSS = \"\";\n    // let activeIconCSS = \"fa fa-check\";\n    // if (this.props.Login.masterData.selectedInstrument && this.props.Login.masterData.selectedInstrument.sdefaultstatus === transactionStatus.YES) {\n    //     userStatusCSS = \"outline-success\";\n    // }\n    // else{\n    //     userStatusCSS = \"outline-danger\";\n    // }\n\n\n    const addId = this.state.controlMap.has(\"AddInstrument\") && this.state.controlMap.get(\"AddInstrument\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditInstrument\") && this.state.controlMap.get(\"EditInstrument\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteInstrument\") && this.state.controlMap.get(\"DeleteInstrument\").ncontrolcode; // const editParam = { screenName:\"Instrument\", operation:\"update\", primaryKeyName:\"ninstrumentcode\", masterData:this.props.Login.masterData, userInfo:this.props.Login.userInfo,\n    // ncontrolcode:editId, inputListName :\"Instrument\", selectedObject : \"SelectedInstrument\"};\n\n    const {\n      selectedInstrument\n    } = this.props.Login.masterData;\n    const filterParam = {\n      inputListName: \"Instrument\",\n      selectedObject: \"selectedInstrument\",\n      primaryKeyField: \"ninstrumentcode\",\n      fetchUrl: \"instrument/getInstrument\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1534,\n        columnNumber: 9\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1536,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1537,\n        columnNumber: 15\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1542,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1543,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Instrument\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Instrument,\n      getMasterDetail: Instrument => this.props.getInstrumentDetail(Instrument, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedInstrument,\n      primaryKeyField: \"ninstrumentcode\",\n      mainField: \"sinstrumentname\",\n      firstField: \"sinstrumentid\",\n      secondField: \"sinstrumentcatname\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights //searchListName=\"searchedInstrument\"\n      ,\n      searchRef: this.searchRef // filterParam={filterParam}\n      ,\n      addId: addId,\n      hidePaging: true,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"create\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, addId),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        IDS_INSTRUMENTCATEGORYFILTER: /*#__PURE__*/React.createElement(InstrumentCategoryFilter, {\n          filterInstrumentCategory: this.state.filterInstrumentCategory || [],\n          nfilterInstrumentCategory: this.state.nfilterInstrumentCategory || {},\n          onComboChange: this.onComboChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1593,\n            columnNumber: 23\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1544,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1607,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1608,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1609,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1610,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1611,\n        columnNumber: 21\n      }\n    }, this.props.Login.masterData.selectedInstrument ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1615,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1616,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1621,\n        columnNumber: 29\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1627,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1628,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1629,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1638,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\" // onClick = {()=>this.props.(editParam)}\n      ,\n      onClick: e => this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"update\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1639,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1663,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteInstrument\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete({\n        operation: \"delete\",\n        screenName: \"IDS_INSTRUMENT\"\n      }, deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1665,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1687,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1704,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1705,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1706,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1707,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1708,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTNAME\",\n      message: \"Instrumentname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1709,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1714,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1722,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1723,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1724,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTID\",\n      message: \"Instrument Id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1725,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1730,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentid))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1739,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1740,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1741,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DEFAULTSTATUS\",\n      message: \"Default Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1742,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1747,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sdefaultstatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1756,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1757,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1758,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MODELNO\",\n      message: \"Modelno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1759,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1764,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.smodelnumber === null || this.props.Login.masterData.selectedInstrument.smodelnumber.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.smodelnumber))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1778,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1779,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1780,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PONO\",\n      message: \"PO No.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1781,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1786,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.spono === null || this.props.Login.masterData.selectedInstrument.spono.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.spono))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1805,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1806,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1807,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MANUFACTURERDATE\",\n      message: \"ManufactureDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1808,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1813,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.smanufacdate === null || this.props.Login.masterData.selectedInstrument.smanufacdate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.smanufacdate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1827,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1828,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1829,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PODATE\",\n      message: \"PoDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1830,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1835,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.dpodate === null || this.props.Login.masterData.selectedInstrument.dpodate === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.spodate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1847,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1848,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1849,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_RECEIVEDDATE\",\n      message: \"ReceiveDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1850,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1855,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sreceiveddate === null || this.props.Login.masterData.selectedInstrument.sreceiveddate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sreceiveddate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1869,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1870,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1871,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTALLATIONDATE\",\n      message: \"InstallationDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1872,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1877,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstallationdate === null || this.props.Login.masterData.selectedInstrument.sinstallationdate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sinstallationdate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1891,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1892,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1893,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXPIRYDATE\",\n      message: \"ExpiryDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1894,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1899,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sexpirydate === null || this.props.Login.masterData.selectedInstrument.sexpirydate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sexpirydate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1913,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1914,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1915,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SERIALNO\",\n      message: \"Serialno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1916,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1921,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sserialno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1930,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1931,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1932,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTSTATUS\",\n      message: \"Instrumentstatus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1933,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1939,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sactivestatus === null || this.props.Login.masterData.selectedInstrument.sactivestatus.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sactivestatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1953,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1954,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1955,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REMARKS\",\n      message: \"Remarks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1956,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1961,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sremarks === null || this.props.Login.masterData.selectedInstrument.sremarks.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sremarks)))), selectedInstrument && /*#__PURE__*/React.createElement(CustomTab, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1974,\n        columnNumber: 31\n      }\n    }))) : \"\"))))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2007,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENT\" ? /*#__PURE__*/React.createElement(AddInstrument, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        InstrumentCategory: this.props.Login.InstrumentCategory,\n        Supplier: this.props.Login.Supplier,\n        Manufacturer: this.props.Login.Manufacturer,\n        InstrumentStatus: this.props.Login.InstrumentStatus,\n        handleDateChange: this.handleDateChange,\n        Lab: this.props.Login.Lab,\n        Period: this.props.Login.Period,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        SectionUsers: this.props.Login.Users,\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        defaultValue: this.props.Login.edqmManufacturer,\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        expiryDate: this.props.Login.expiryDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2014,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_SECTION\" ? /*#__PURE__*/React.createElement(AddInstrumentSection, {\n        selectedRecord: this.state.selectedRecord || {},\n        Lab: this.props.Login.Lab,\n        Users: this.props.Login.Users // SectionUsers={this.props.Login.SectionUsers}\n        ,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2036,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\" ? /*#__PURE__*/React.createElement(AddInstrumentValidation, {\n        selectedRecord: this.state.selectedRecord || {},\n        ValidationStatus: this.props.Login.ValidationStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        userInfo: this.props.Login.userInfo,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2044,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" ? /*#__PURE__*/React.createElement(AddInstrumentFile, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropTestFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        maxSize: 20,\n        maxFiles: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2059,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\" ? /*#__PURE__*/React.createElement(AddInstrumentCalibration, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        CalibrationStatus: this.props.Login.CalibrationStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        userInfo: this.props.Login.userInfo,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2070,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" ? /*#__PURE__*/React.createElement(AddInstrumentFile, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropTestFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        maxSize: 20,\n        maxFiles: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2085,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\" ? /*#__PURE__*/React.createElement(AddInstrumentMaintenance, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        MaintenanceStatus: this.props.Login.MaintenanceStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        userInfo: this.props.Login.userInfo,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2096,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\" ? /*#__PURE__*/React.createElement(AddInstrumentFile, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropTestFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        maxSize: 20,\n        maxFiles: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2111,\n          columnNumber: 17\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1992,\n        columnNumber: 11\n      }\n    }), this.props.Login.modalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n      modalShow: this.props.Login.modalShow,\n      closeModal: this.closeModalShow,\n      onSaveClick: this.onSaveModalClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      esign: this.props.Login.loadEsign,\n      modalTitle: this.props.Login.modalTitle,\n      modalBody: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2141,\n          columnNumber: 17\n        }\n      }) : this.props.Login.modalTitle === \"IDS_OPENDATE\" ? /*#__PURE__*/React.createElement(AddOpenDate, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        Status: this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\" ? this.props.Login.CalibrationStatus : this.props.Login.MaintenanceStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        userInfo: this.props.Login.userInfo,\n        esign: this.props.Login.loadEsign,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2148,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(AddCloseDate, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        Status: this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\" ? this.props.Login.CalibrationStatus : this.props.Login.MaintenanceStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2163,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2128,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      selectedRecord,\n      userRoleControlRights,\n      controlMap,\n      filterData,\n      nfilterInstrumentCategory,\n      filterInstrumentCategory\n    } = this.state;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      updateState = true;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode); // this.setState({ userRoleControlRights, controlMap });\n\n      updateState = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\n\n      if (this.props.Login.masterData.SelectedInsCat && this.props.Login.masterData.SelectedInsCat !== previousProps.Login.masterData.SelectedInsCat) {\n        nfilterInstrumentCategory = {\n          label: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname,\n          value: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\n          item: this.props.Login.masterData.SelectedInsCat\n        };\n      }\n\n      filterData = this.generateBreadCrumData(); // this.setState({ filterData, nfilterInstrumentCategory });\n\n      updateState = true;\n    }\n\n    if (this.props.Login.masterData.filterInstrumentCategory !== previousProps.Login.masterData.filterInstrumentCategory) {\n      const insCategoryMap = constructOptionList(this.props.Login.masterData.filterInstrumentCategory || [], \"ninstrumentcatcode\", \"sinstrumentcatname\", \"ntestcategorycode\", \"ascending\", false);\n      filterInstrumentCategory = insCategoryMap.get(\"OptionList\");\n\n      if (insCategoryMap.get(\"DefaultValue\")) {\n        nfilterInstrumentCategory = insCategoryMap.get(\"DefaultValue\");\n      } else if (filterInstrumentCategory && filterInstrumentCategory.length > 0) {\n        nfilterInstrumentCategory = filterInstrumentCategory[0];\n      } // this.setState({ nfilterInstrumentCategory, filterInstrumentCategory });\n\n\n      updateState = true;\n    }\n\n    if (updateState) {\n      this.setState({\n        // dataResult: process(this.props.Login.masterData[\"selectedSection\"]||[], this.state.sectionDataState),\n        selectedRecord,\n        userRoleControlRights,\n        controlMap,\n        filterData,\n        nfilterInstrumentCategory,\n        filterInstrumentCategory\n      });\n    }\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.filterInstrumentCategory) {\n      breadCrumbData.push({\n        label: \"IDS_INSTRUMENTCATEGORY\",\n        value: this.props.Login.masterData.SelectedInsCat ? this.props.Login.masterData.SelectedInsCat.sinstrumentcatname : \"NA\"\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  getInstrumentDetail,\n  filterColumnData,\n  getInstrumentCombo,\n  updateStore,\n  validateEsignCredential,\n  getSectionUsers,\n  getAvailableInstData,\n  changeInstrumentCategoryFilter,\n  getTabDetails,\n  getDataForAddEditValidation,\n  addInstrumentFile,\n  getDataForAddEditCalibration,\n  getDataForAddEditMaintenance,\n  OpenDate,\n  CloseDate\n})(injectIntl(Instrument));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/instrumentmanagement/Instrument.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","Modal","connect","toast","FormattedMessage","FontAwesomeIcon","faPencilAlt","faTrashAlt","injectIntl","callService","crudMaster","validateEsignCredential","updateStore","getInstrumentCombo","getInstrumentDetail","getSectionUsers","getAvailableInstData","changeInstrumentCategoryFilter","filterColumnData","getTabDetails","getDataForAddEditValidation","addInstrumentFile","getDataForAddEditCalibration","getDataForAddEditMaintenance","OpenDate","CloseDate","ListMaster","attachmentType","transactionStatus","AddInstrument","AddInstrumentSection","DEFAULT_RETURN","SlideOutModal","CustomTab","Esign","showEsign","getControlMap","constructOptionList","formatInputDate","onDropAttachFileList","create_UUID","deleteAttachmentDropZone","ReadOnlyText","ContentPanel","InstrumentSectionTab","process","ConfirmMessage","InstrumentCategoryFilter","BreadcrumbComponent","Affix","ReactTooltip","InstrumentValidationTab","AddInstrumentValidation","AddInstrumentFile","InstrumentCalibrationTab","AddInstrumentCalibration","ModalShow","FormInput","AddOpenDate","AddCloseDate","InstrumentMaintenanceTab","AddInstrumentMaintenance","mapStateToProps","state","Login","Instrument","constructor","props","handleDateChange","dateName","dateValue","selectedRecord","setState","onInputOnChange","event","target","type","name","checked","value","onSaveModalClick","inputData","inputParam","userInfo","screenName","ninstrumentcode","masterData","selectedInstrument","ntzopendate","ntzclosedate","ninstrumentcalibrationcode","selectedInstrumentCalibration","ncalibrationstatus","ntranscode","sopenreason","sclosereason","classUrl","methodUrl","operation","searchRef","modalShow","ninstrumentmaintenancecode","selectedInstrumentMaintenance","nmaintenancestatus","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","onSaveClick","saveType","formRef","instSection","postParam","undefined","fieldList","nsitecode","nmastersitecode","inputListName","selectedObject","primaryKeyField","NA","map","item","label","nusercode","push","instItem","ninstrumentvalidationcode","selectedInstrumentValidation","nvalidationstatus","dvalidationdate","sremark","ntzvalidationdate","onSaveInstrumentFile","nopenusercode","ncloseusercode","dlastcalibrationdate","dduedate","ntzlastcalibrationdate","ntzduedate","onSaveInstrumentCalibrationFile","dlastmaintenancedate","ntzlastmaintenancedate","onSaveInstrumentMaintenanceFile","onNumericInputOnChange","validateEsign","userinfo","sreason","password","Action","defaultRecord","defaultParam","dataItem","YES","dataState","sectionDataState","openChildModal","onSwitchChange","key","deleteTabFileRecord","deleteParam","ninstrumentfilecode","ninstrumentlogcode","openModal","DeleteInstrument","ninstrumentsectioncode","ndefaultstatus","ValidationFileData","ninstrument","nFlag","primaryKeyValue","fetchUrl","fecthInputObject","deleteAttachment","file","fieldName","actionType","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","NO","instrumentFileArray","instrumentFile","nstatus","ACTIVE","formData","FormData","Array","isArray","length","forEach","index","tempData","Object","assign","splittedFileName","split","fileExtension","ssystemfilename","filesystemfileext","uniquefilename","FTP","sfiledesc","trim","size","append","nfilesize","JSON","stringify","isFileupload","onTabChange","tabProps","onDropTestFile","attachedFiles","maxSize","dataStateChange","dataResult","tabDetail","tabMap","Map","deleteSecId","controlMap","has","get","ncontrolcode","defaultSecId","set","selectedSection","settings","InstrumentValidation","deleteAction","ConfirmDelete","getDataForEdit","CalibrationFileData","InstrumentCalibration","addInstrumentCalibrationFile","addOpenDate","MaintenanceFileData","InstrumentMaintenance","addInstrumentMaintenanceFile","deleteId","confirmMessage","confirm","intl","formatMessage","id","reloadData","current","nfilterInstrumentCategory","ninstrumentcatcode","filterInstrumentCategory","warn","onComboChange","comboData","caseNo","nsectionusercode","closeModal","selectedId","closeModalShow","openFilter","showFilter","closeFilter","onFilterSubmit","skip","take","error","createRef","searchFieldList","getDerivedStateFromProps","masterStatus","errorCode","render","console","log","mandatoryFields","mandatory","idsName","dataField","mandatoryLabel","controlType","modalTitle","addId","editId","filterParam","breadCrumbData","filterData","searchedData","IDS_INSTRUMENTCATEGORYFILTER","sinstrumentname","indexOf","e","sinstrumentid","sdefaultstatus","smodelnumber","spono","smanufacdate","dpodate","spodate","sreceiveddate","sinstallationdate","sexpirydate","sserialno","sactivestatus","sremarks","InstrumentCategory","Supplier","Manufacturer","InstrumentStatus","Lab","Period","TimeZoneList","Users","edqmManufacturer","currentTime","expiryDate","ValidationStatus","CalibrationStatus","MaintenanceStatus","componentDidUpdate","previousProps","updateState","values","SelectedInsCat","sinstrumentcatname","generateBreadCrumData","insCategoryMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,KAPF,QAQO,iBARP;AASA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,mCAAxC;AAEA,SAASC,UAAT,QAA2B,YAA3B;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,uBAHF,EAIEC,WAJF,EAKEC,kBALF,EAMEC,mBANF,EAOEC,eAPF,EAQEC,oBARF,EASEC,8BATF,EAUEC,gBAVF,EAWEC,aAXF,EAYEC,2BAZF,EAaEC,iBAbF,EAcEC,4BAdF,EAeEC,4BAfF,EAgBEC,QAhBF,EAiBEC,SAjBF,QAkBO,eAlBP;AAoBA,OAAOC,UAAP,MAAuB,oDAAvB;AACA,SACEC,cADF,EAEEC,iBAFF,QAGO,8BAHP;AAIA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAOC,oBAAP,MAAiC,uDAAjC;AACA,SAASC,cAAT,QAA+B,0BAA/B,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAOC,SAAP,MAAsB,oDAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,mBAHF,EAIEC,eAJF,EAKEC,oBALF,EAMEC,WANF,EAOEC,wBAPF,QAQO,+BARP,C,CASA;;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,6BAA3C;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,OAAT,QAAwB,4BAAxB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,0DAA3B;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAOC,uBAAP,MAAoC,0DAApC;AACA,OAAOC,iBAAP,MAA8B,oDAA9B;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,GAAP;AACD,CAFD;;AAIA,MAAMC,UAAN,SAAyBvE,SAAzB,CAAmC;AACjCwE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,gBAjBmB,GAiBA,CAACC,QAAD,EAAWC,SAAX,KAAyB;AAC1C,YAAM;AAAEC,QAAAA;AAAF,UAAqB,KAAKR,KAAhC;AACAQ,MAAAA,cAAc,CAACF,QAAD,CAAd,GAA2BC,SAA3B;AACA,WAAKE,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KArBkB;;AAAA,SAuBnBE,eAvBmB,GAuBAC,KAAD,IAAW;AAC3B,YAAMH,cAAc,GAAG,KAAKR,KAAL,CAAWQ,cAAX,IAA6B,EAApD;;AACA,UAAIG,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,UAA1B,EAAsC;AACpCL,QAAAA,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaE,IAAd,CAAd,GAAoCH,KAAK,CAACC,MAAN,CAAaG,OAAb,KAAyB,IAAzB,GAAgC,CAAhC,GAAoC,CAAxE;AACD,OAFD,MAEO;AACLP,QAAAA,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaE,IAAd,CAAd,GAAoCH,KAAK,CAACC,MAAN,CAAaI,KAAjD;AACD;;AACD,WAAKP,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KA/BkB;;AAAA,SAgCnBS,gBAhCmB,GAgCA,MAAM;AACvB,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,UAAU,GAAG,EAAjB;AACAD,MAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKd,KAAL,CAAWH,KAAX,CAAiBmB,QAAzC;;AACA,UAAI,KAAKhB,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,2BAApC,EAAiE;AAC/DH,QAAAA,SAAS,CAAC,uBAAD,CAAT,GAAqC;AACnCI,UAAAA,eAAe,EACb,KAAKlB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CF,eAFd;AAGnCG,UAAAA,WAAW,EAAE,KAAKzB,KAAL,CAAWQ,cAAX,CAA0B,aAA1B,IACT,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,aAA1B,EAAyCQ,KADhC,GAET,IAL+B;AAMnCU,UAAAA,YAAY,EAAE,KAAK1B,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,IACV,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,EAA0CQ,KADhC,GAEV,IAR+B;AASnCW,UAAAA,0BAA0B,EACxB,KAAKvB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BK,6BAA5B,CACGD,0BAX8B;AAYnCE,UAAAA,kBAAkB,EAChB,KAAK7B,KAAL,CAAWQ,cAAX,CAA0BsB,UAA1B,CAAqC,MAArC,EAA6CA,UAbZ;AAcnCC,UAAAA,WAAW,EACT,KAAK/B,KAAL,CAAWQ,cAAX,CAA0BuB,WAA1B,KAA0C,IAA1C,GACI,KAAK/B,KAAL,CAAWQ,cAAX,CAA0BuB,WAD9B,GAEI,EAjB6B;AAkBnCC,UAAAA,YAAY,EACV,KAAKhC,KAAL,CAAWQ,cAAX,CAA0BwB,YAA1B,KAA2C,IAA3C,GACI,KAAKhC,KAAL,CAAWQ,cAAX,CAA0BwB,YAD9B,GAEI;AArB6B,SAArC;;AAwBA,YAAI,KAAKhC,KAAL,CAAWQ,cAAX,CAA0B,WAA1B,CAAJ,EAA4C;AAC1CU,UAAAA,SAAS,CAAC,uBAAD,CAAT,CAAmC,WAAnC,IAAkD3C,eAAe,CAC/D,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,WAA1B,CAD+D,EAE/D,KAF+D,CAAjE;AAID;;AACD,YAAI,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,CAAJ,EAA6C;AAC3CU,UAAAA,SAAS,CAAC,uBAAD,CAAT,CAAmC,YAAnC,IAAmD3C,eAAe,CAChE,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,CADgE,EAEhE,KAFgE,CAAlE;AAID;;AACDW,QAAAA,UAAU,GAAG;AACXc,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QAD3B;AAEXC,UAAAA,SAAS,EAAE,uBAFA;AAGXhB,UAAAA,SAAS,EAAEA,SAHA;AAIXiB,UAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWH,KAAX,CAAiBkC,SAJjB;AAKXC,UAAAA,SAAS,EAAE,KAAKA,SALL;AAMXC,UAAAA,SAAS,EAAE;AANA,SAAb;AAQD,OA7CD,MA6CO;AACLnB,QAAAA,SAAS,CAAC,uBAAD,CAAT,GAAqC;AACnCI,UAAAA,eAAe,EACb,KAAKlB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CF,eAFd;AAGnCG,UAAAA,WAAW,EAAE,KAAKzB,KAAL,CAAWQ,cAAX,CAA0B,aAA1B,IACT,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,aAA1B,EAAyCQ,KADhC,GAET,IAL+B;AAMnCU,UAAAA,YAAY,EAAE,KAAK1B,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,IACV,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,EAA0CQ,KADhC,GAEV,IAR+B;AASnCsB,UAAAA,0BAA0B,EACxB,KAAKlC,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BgB,6BAA5B,CACGD,0BAX8B;AAYnCE,UAAAA,kBAAkB,EAChB,KAAKxC,KAAL,CAAWQ,cAAX,CAA0BsB,UAA1B,CAAqC,MAArC,EAA6CA,UAbZ;AAcnCC,UAAAA,WAAW,EACT,KAAK/B,KAAL,CAAWQ,cAAX,CAA0BuB,WAA1B,KAA0C,IAA1C,GACI,KAAK/B,KAAL,CAAWQ,cAAX,CAA0BuB,WAD9B,GAEI,EAjB6B;AAkBnCC,UAAAA,YAAY,EACV,KAAKhC,KAAL,CAAWQ,cAAX,CAA0BwB,YAA1B,KAA2C,IAA3C,GACI,KAAKhC,KAAL,CAAWQ,cAAX,CAA0BwB,YAD9B,GAEI;AArB6B,SAArC;;AAwBA,YAAI,KAAKhC,KAAL,CAAWQ,cAAX,CAA0B,WAA1B,CAAJ,EAA4C;AAC1CU,UAAAA,SAAS,CAAC,uBAAD,CAAT,CAAmC,WAAnC,IAAkD3C,eAAe,CAC/D,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,WAA1B,CAD+D,EAE/D,KAF+D,CAAjE;AAID;;AACD,YAAI,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,CAAJ,EAA6C;AAC3CU,UAAAA,SAAS,CAAC,uBAAD,CAAT,CAAmC,YAAnC,IAAmD3C,eAAe,CAChE,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,CADgE,EAEhE,KAFgE,CAAlE;AAID;;AACDW,QAAAA,UAAU,GAAG;AACXc,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QAD3B;AAEXC,UAAAA,SAAS,EAAE,uBAFA;AAGXhB,UAAAA,SAAS,EAAEA,SAHA;AAIXiB,UAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWH,KAAX,CAAiBkC,SAJjB;AAKXC,UAAAA,SAAS,EAAE,KAAKA;AALL,SAAb;AAOD;;AAED,YAAMb,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,UACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGP,KAAKtC,KAAL,CAAWH,KAAX,CAAiB0C,YAHV,CADX,EAME;AACA,cAAMC,UAAU,GAAG;AACjBC,UAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,UAAAA,IAAI,EAAE;AACJC,YAAAA,SAAS,EAAE,IADP;AAEJC,YAAAA,UAAU,EAAE;AAAE7B,cAAAA,UAAF;AAAcI,cAAAA;AAAd;AAFR;AAFW,SAAnB;AAOA,aAAKnB,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,OAfD,MAeO;AACL,aAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,KAlJkB;;AAAA,SAoJnB0B,WApJmB,GAoJL,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACnC,UAAIjC,SAAS,GAAG,EAAhB;AACA,UAAIkC,WAAW,GAAG,EAAlB;AACAlC,MAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKd,KAAL,CAAWH,KAAX,CAAiBmB,QAAzC;;AACA,UAAI,KAAKhB,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,gBAApC,EAAsD;AACpD,YAAIgC,SAAS,GAAGC,SAAhB;AACA,YAAIC,SAAS,GAAG,CACd,iBADc,EAEd,oBAFc,EAGd,eAHc,EAId,cAJc,EAKd,YALc,EAMd,WANc,EAOd,eAPc,EAQd,iBARc,EASd,cATc,EAUd,OAVc,EAWd;AACA;AACA,6BAbc,EAcd,oBAdc,EAed,yBAfc,EAgBd,wBAhBc,EAiBd,WAjBc,EAkBd,UAlBc,EAmBd,gBAnBc,EAoBd,WApBc,EAqBd,SArBc,CAAhB;AAwBArC,QAAAA,SAAS,CAAC,YAAD,CAAT,GAA0B;AACxBsC,UAAAA,SAAS,EAAE,KAAKpD,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BqC;AADb,SAA1B;;AAIA,YAAI,KAAKrD,KAAL,CAAWH,KAAX,CAAiBkC,SAAjB,KAA+B,QAAnC,EAA6C;AAC3CkB,UAAAA,SAAS,GAAG;AACVK,YAAAA,aAAa,EAAE,YADL;AAEVC,YAAAA,cAAc,EAAE,oBAFN;AAGVC,YAAAA,eAAe,EAAE;AAHP,WAAZ;AAMA1C,UAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,cAAxB,IAA0C,KAAKlB,KAAL,CAAWQ,cAAX,CACxC,cADwC,IAGtC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,CAHsC,GAItC3C,iBAAiB,CAACgG,EAJtB;AAKA3C,UAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,SAAxB,IAAqC,KAAKlB,KAAL,CAAWQ,cAAX,CACnC,SADmC,IAGjC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,SAA1B,CAHiC,GAIjC3C,iBAAiB,CAACgG,EAJtB;AAKA3C,UAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,eAAxB,IAA2C,KAAKlB,KAAL,CAAWQ,cAAX,CACzC,eADyC,IAGvC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,eAA1B,CAHuC,GAIvC3C,iBAAiB,CAACgG,EAJtB;AAKA3C,UAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,mBAAxB,IAA+C,KAAKlB,KAAL,CAC5CQ,cAD4C,CAC7B,mBAD6B,IAE3C,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,mBAA1B,CAF2C,GAG3C3C,iBAAiB,CAACgG,EAHtB;AAIA3C,UAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,aAAxB,IAAyC,KAAKlB,KAAL,CAAWQ,cAAX,CACvC,aADuC,IAGrC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,aAA1B,CAHqC,GAIrC3C,iBAAiB,CAACgG,EAJtB;AAKAN,UAAAA,SAAS,CAACO,GAAV,CAAeC,IAAD,IAAU;AACtB,mBAAQ7C,SAAS,CAAC,YAAD,CAAT,CAAwB6C,IAAxB,IAAgC,KAAK/D,KAAL,CAAWQ,cAAX,CACtCuD,IADsC,IAGpC,KAAK/D,KAAL,CAAWQ,cAAX,CAA0BuD,IAA1B,CAHoC,GAIpC,EAJJ;AAKD,WAND;AAOD,SAtCD,MAsCO;AACL7C,UAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,mBAAxB,IACE,KAAKlB,KAAL,CAAWQ,cAAX,CAA0B,oBAA1B,CADF;AAEAU,UAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,cAAxB,IAA0C,KAAKlB,KAAL,CAAWQ,cAAX,CACxC,cADwC,IAGtC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,EAA0CQ,KAHJ,GAItCnD,iBAAiB,CAACgG,EAJtB,CAHK,CAQL;AACA;AACA;;AACAN,UAAAA,SAAS,CAACO,GAAV,CAAeC,IAAD,IAAU;AACtB,mBAAQ7C,SAAS,CAAC,YAAD,CAAT,CAAwB6C,IAAxB,IACN,KAAK/D,KAAL,CAAWQ,cAAX,CAA0BuD,IAA1B,CADF;AAED,WAHD;AAID;;AAED7C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,oBAAxB,IAAgD,KAAKlB,KAAL,CAAWQ,cAAX,CAC9C,oBAD8C,IAG5C,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,oBAA1B,EAAgDQ,KAHJ,GAI5CnD,iBAAiB,CAACgG,EAJtB;AAKA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,YAAxB,IAAwC,KAAKlB,KAAL,CAAWQ,cAAX,CACtC,YADsC,IAGpC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,EAAwCQ,KAAxC,IAAiDnD,iBAAiB,CAACgG,EAH/B,GAIpChG,iBAAiB,CAACgG,EAJtB;AAKA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,eAAxB,IAA2C,KAAKlB,KAAL,CAAWQ,cAAX,CACzC,eADyC,IAGvC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,eAA1B,EAA2CQ,KAA3C,IACAnD,iBAAiB,CAACgG,EAJqB,GAKvChG,iBAAiB,CAACgG,EALtB;AAMA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,cAAxB,IAA0C,KAAKlB,KAAL,CAAWQ,cAAX,CACxC,cADwC,IAGtC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,EAA0CQ,KAA1C,IACAnD,iBAAiB,CAACgG,EAJoB,GAKtChG,iBAAiB,CAACgG,EALtB;AAMA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,mBAAxB,IAA+C,KAAKlB,KAAL,CAAWQ,cAAX,CAC7C,YAD6C,IAG3C,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,EAAwCQ,KAAxC,IAAiDnD,iBAAiB,CAACgG,EAHxB,GAI3ChG,iBAAiB,CAACgG,EAJtB;AAKA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,oBAAxB,IAAgD,KAAKlB,KAAL,CAAWQ,cAAX,CAC9C,oBAD8C,IAG5C,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,oBAA1B,CAH4C,GAI5C,CAJJ;AAKAU,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,qBAAxB,IAAiD,KAAKlB,KAAL,CAC9CQ,cAD8C,CAC/B,qBAD+B,IAE7C,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,qBAA1B,CAF6C,GAG7C,CAHJ;AAIAU,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,yBAAxB,IAAqD,KAAKlB,KAAL,CAClDQ,cADkD,CACnC,yBADmC,IAEjD,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,yBAA1B,EAAqDQ,KAArD,IACAnD,iBAAiB,CAACgG,EAH+B,GAIjDhG,iBAAiB,CAACgG,EAJtB;AAKA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,wBAAxB,IAAoD,KAAKlB,KAAL,CACjDQ,cADiD,CAClC,wBADkC,IAEhD,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,wBAA1B,EAAoDQ,KAApD,IACAnD,iBAAiB,CAACgG,EAH8B,GAIhDhG,iBAAiB,CAACgG,EAJtB;AAKA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,cAAxB,IAA0C,KAAKlB,KAAL,CAAWQ,cAAX,CACxC,cADwC,IAGtC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,EAA0CQ,KAA1C,IACAnD,iBAAiB,CAACgG,EAJoB,GAKtChG,iBAAiB,CAACgG,EALtB;AAMA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,cAAxB,IAA0C,KAAKlB,KAAL,CAAWQ,cAAX,CACxC,cADwC,IAGtC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,eAA1B,EAA2CwD,KAHL,GAItCnG,iBAAiB,CAACgG,EAJtB;AAKA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,WAAxB,IAAuC,KAAKlB,KAAL,CAAWQ,cAAX,CACrC,WADqC,IAGnC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,WAA1B,EAAuCQ,KAAvC,IAAgDnD,iBAAiB,CAACgG,EAH/B,GAInChG,iBAAiB,CAACgG,EAJtB;AAKA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,WAAxB,IAAuC,KAAKlB,KAAL,CAAWQ,cAAX,CACrC,WADqC,IAGnC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,WAA1B,EAAuCwD,KAHJ,GAInCnG,iBAAiB,CAACgG,EAJtB;AAKA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,gBAAxB,IAA4C,KAAKlB,KAAL,CAAWQ,cAAX,CAC1C,gBAD0C,IAGxC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,gBAA1B,EAA4CQ,KAA5C,IACAnD,iBAAiB,CAACgG,EAJsB,GAKxChG,iBAAiB,CAACgG,EALtB;AAMA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,gBAAxB,IAA4C,KAAKlB,KAAL,CAAWQ,cAAX,CAC1C,gBAD0C,IAGxC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,gBAA1B,EAA4CwD,KAHJ,GAIxCnG,iBAAiB,CAACgG,EAJtB;AAKA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,qBAAxB,IAAiD,KAAKlB,KAAL,CAC9CQ,cAD8C,CAC/B,qBAD+B,IAE7C,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,qBAA1B,EAAiDQ,KAAjD,IACAnD,iBAAiB,CAACgG,EAH2B,GAI7ChG,iBAAiB,CAACgG,EAJtB;AAKA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,qBAAxB,IAAiD,KAAKlB,KAAL,CAC9CQ,cAD8C,CAC/B,qBAD+B,IAE7C,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,qBAA1B,EAAiDwD,KAFJ,GAG7CnG,iBAAiB,CAACgG,EAHtB;AAIA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,eAAxB,IAA2C,KAAKlB,KAAL,CAAWQ,cAAX,CACzC,eADyC,IAGvC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,eAA1B,EAA2CQ,KAA3C,IACAnD,iBAAiB,CAACgG,EAJqB,GAKvChG,iBAAiB,CAACgG,EALtB;AAMA3C,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,eAAxB,IAA2C,KAAKlB,KAAL,CAAWQ,cAAX,CACzC,eADyC,IAGvC,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,eAA1B,EAA2CwD,KAHJ,GAIvCnG,iBAAiB,CAACgG,EAJtB;;AAMA,YAAI,KAAK7D,KAAL,CAAWQ,cAAX,CAA0B,SAA1B,CAAJ,EAA0C;AACxCU,UAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,SAAxB,IAAqC3C,eAAe,CAClD,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,SAA1B,CADkD,EAElD,KAFkD,CAApD;AAID;;AACD,YAAI,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,eAA1B,CAAJ,EAAgD;AAC9CU,UAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,eAAxB,IAA2C3C,eAAe,CACxD,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,eAA1B,CADwD,EAExD,KAFwD,CAA1D;AAID;;AACD,YAAI,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,mBAA1B,CAAJ,EAAoD;AAClDU,UAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,mBAAxB,IAA+C3C,eAAe,CAC5D,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,mBAA1B,CAD4D,EAE5D,KAF4D,CAA9D;AAID;;AACD,YAAI,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,aAA1B,CAAJ,EAA8C;AAC5CU,UAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,aAAxB,IAAyC3C,eAAe,CACtD,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,aAA1B,CADsD,EAEtD,KAFsD,CAAxD;AAID;;AACD,YAAI,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,CAAJ,EAA+C;AAC7CU,UAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,cAAxB,IAA0C3C,eAAe,CACvD,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,CADuD,EAEvD,KAFuD,CAAzD;AAID;;AAEDU,QAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB,WAAxB,IACE,KAAKd,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0B6C,SAD5B;;AAGA,YAAI,KAAKjE,KAAL,CAAWQ,cAAX,CAA0B,kBAA1B,MAAkD8C,SAAtD,EAAiE;AAC/D,cAAI,KAAKtD,KAAL,CAAWQ,cAAX,CAA0B,WAA1B,MAA2C8C,SAA/C,EAA0D;AACxD,iBAAKtD,KAAL,CAAWQ,cAAX,CAA0B,WAA1B,EAAuCsD,GAAvC,CAA4CC,IAAD,IAAU;AACnD,qBAAOX,WAAW,CAACc,IAAZ,CAAiB;AACtBD,gBAAAA,SAAS,EAAEF,IAAI,CAAC/C,KADM,CAEtB;;AAFsB,eAAjB,CAAP;AAID,aALD;AAMAE,YAAAA,SAAS,CAAC,mBAAD,CAAT,GAAiCkC,WAAjC;AACD;AACF;;AAED,cAAMjC,UAAU,GAAG;AACjBc,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QADrB;AAEjBC,UAAAA,SAAS,EAAE,YAFM;AAGjBhB,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWH,KAAX,CAAiBkC,SAJX;AAKjBe,UAAAA,QALiB;AAMjBC,UAAAA,OANiB;AAOjBE,UAAAA,SAPiB;AAQjBjB,UAAAA,SAAS,EAAE,KAAKA;AARC,SAAnB;AAUA,cAAMb,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGP,KAAKtC,KAAL,CAAWH,KAAX,CAAiB0C,YAHV,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJ2B,cAAAA;AAHI;AAFW,WAAnB;AAQA,eAAK9C,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAhBD,MAgBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OApQD,MAoQO,IAAI,KAAKnB,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,aAApC,EAAmD;AACxDH,QAAAA,SAAS,CAAC,mBAAD,CAAT,GAAiC;AAC/BsC,UAAAA,SAAS,EAAE,KAAKpD,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BqC;AADN,SAAjC;AAGAvC,QAAAA,SAAS,CAAC,mBAAD,CAAT,CAA+B,cAA/B,IAAiD,KAAKlB,KAAL,CAC9CQ,cAD8C,CAC/B,cAD+B,IAE7C,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,EAA0CQ,KAFG,GAG7CnD,iBAAiB,CAACgG,EAHtB;AAIA3C,QAAAA,SAAS,CAAC,mBAAD,CAAT,CAA+B,WAA/B,IAA8C,KAAKlB,KAAL,CAAWQ,cAAX,CAC5C,WAD4C,IAG1C,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,WAA1B,EAAuCQ,KAHG,GAI1CnD,iBAAiB,CAACgG,EAJtB;AAKA3C,QAAAA,SAAS,CAAC,mBAAD,CAAT,CAA+B,iBAA/B,IACE,KAAKd,KAAL,CAAWH,KAAX,CAAiBkE,QAAjB,CAA0B,iBAA1B,CADF;AAGA,cAAMhD,UAAU,GAAG;AACjBc,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QADrB;AAEjBC,UAAAA,SAAS,EAAE,SAFM;AAGjBhB,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWH,KAAX,CAAiBkC,SAJX;AAKjBe,UAAAA,QALiB;AAMjBC,UAAAA,OANiB;AAOjBf,UAAAA,SAAS,EAAE,KAAKA;AAPC,SAAnB;AAUA,cAAMb,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGP,KAAKtC,KAAL,CAAWH,KAAX,CAAiB0C,YAHV,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJ2B,cAAAA;AAHI;AAFW,WAAnB;AAQA,eAAK9C,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAhBD,MAgBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OA9CM,MA8CA,IAAI,KAAKnB,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,0BAApC,EAAgE;AACrE,YAAI,KAAKjB,KAAL,CAAWH,KAAX,CAAiBkC,SAAjB,KAA+B,QAAnC,EAA6C;AAC3CjB,UAAAA,SAAS,CAAC,sBAAD,CAAT,GAAoC;AAClCI,YAAAA,eAAe,EACb,KAAKlB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CF,eAFf;AAGlC8C,YAAAA,yBAAyB,EACvB,KAAKhE,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B8C,4BAA5B,CACGD,yBAL6B;AAMlCH,YAAAA,SAAS,EAAE,KAAK7D,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CyC,SANxB;AAOlCK,YAAAA,iBAAiB,EAAE,KAAKtE,KAAL,CAAWQ,cAAX,CAA0BsB,UAA1B,CAAqCd,KAPtB;AAQlCuD,YAAAA,eAAe,EAAEhG,eAAe,CAC9B,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,iBAA1B,CAD8B,EAE9B,KAF8B,CARE;AAYlCgE,YAAAA,OAAO,EACL,KAAKxE,KAAL,CAAWQ,cAAX,CAA0BgE,OAA1B,KAAsC,IAAtC,GACI,KAAKxE,KAAL,CAAWQ,cAAX,CAA0BgE,OAD9B,GAEI,EAf4B;AAgBlCC,YAAAA,iBAAiB,EAAE,KAAKzE,KAAL,CAAWQ,cAAX,CAA0B,mBAA1B,IACf,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,mBAA1B,EAA+CQ,KADhC,GAEf;AAlB8B,WAApC;AAoBD,SArBD,MAqBO;AACLE,UAAAA,SAAS,CAAC,sBAAD,CAAT,GAAoC;AAClCI,YAAAA,eAAe,EACb,KAAKlB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CF,eAFf;AAGlC2C,YAAAA,SAAS,EAAE,KAAK7D,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CyC,SAHxB;AAIlCK,YAAAA,iBAAiB,EACf,KAAKtE,KAAL,CAAWQ,cAAX,CAA0BsB,UAA1B,CAAqCiC,IAArC,CAA0CjC,UALV;AAMlC2C,YAAAA,iBAAiB,EAAE,KAAKzE,KAAL,CAAWQ,cAAX,CAA0B,mBAA1B,IACf,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,mBAA1B,EAA+CQ,KADhC,GAEf,IAR8B;AAUlCwD,YAAAA,OAAO,EACL,KAAKxE,KAAL,CAAWQ,cAAX,CAA0BgE,OAA1B,KAAsC,IAAtC,GACI,KAAKxE,KAAL,CAAWQ,cAAX,CAA0BgE,OAD9B,GAEI;AAb4B,WAApC;AAeD;;AACD,YAAI,KAAKxE,KAAL,CAAWQ,cAAX,CAA0B,iBAA1B,CAAJ,EAAkD;AAChDU,UAAAA,SAAS,CAAC,sBAAD,CAAT,CAAkC,iBAAlC,IAAuD3C,eAAe,CACpE,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,iBAA1B,CADoE,EAEpE,KAFoE,CAAtE;AAID;;AAED,cAAMW,UAAU,GAAG;AACjBc,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QADrB;AAEjBC,UAAAA,SAAS,EAAE,sBAFM;AAGjBhB,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWH,KAAX,CAAiBkC,SAJX;AAKjBe,UAAAA,QALiB;AAMjBC,UAAAA,OANiB;AAOjBf,UAAAA,SAAS,EAAE,KAAKA;AAPC,SAAnB;AAUA,cAAMb,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGP,KAAKtC,KAAL,CAAWH,KAAX,CAAiB0C,YAHV,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJ2B,cAAAA;AAHI;AAFW,WAAnB;AAQA,eAAK9C,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAhBD,MAgBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OA5EM,MA4EA,IAAI,KAAKnB,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,8BAApC,EAAoE;AACzE,cAAMF,UAAU,GAAG,KAAKuD,oBAAL,CAA0BxB,QAA1B,EAAoCC,OAApC,CAAnB;AACA,cAAM5B,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGP,KAAKtC,KAAL,CAAWH,KAAX,CAAiB0C,YAHV,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJ2B,cAAAA;AAHI;AAFW,WAAnB;AAQA,eAAK9C,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAhBD,MAgBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OAtBM,MAsBA,IAAI,KAAKnB,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,2BAApC,EAAiE;AACtE,YAAI,KAAKjB,KAAL,CAAWH,KAAX,CAAiBkC,SAAjB,KAA+B,QAAnC,EACEjB,SAAS,CAAC,uBAAD,CAAT,GAAqC;AACnCI,UAAAA,eAAe,EACb,KAAKlB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CF,eAFd;AAGnCqD,UAAAA,aAAa,EAAE,CAAC,CAHmB;AAInCC,UAAAA,cAAc,EAAE,CAAC,CAJkB;AAKnC/C,UAAAA,kBAAkB,EAChB,KAAK7B,KAAL,CAAWQ,cAAX,CAA0BsB,UAA1B,CAAqCiC,IAArC,CAA0CjC,UANT;AAOnC+C,UAAAA,oBAAoB,EAAEtG,eAAe,CACnC,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,sBAA1B,CADmC,EAEnC,KAFmC,CAPF;AAWnC;AAEAsE,UAAAA,QAAQ,EAAEvG,eAAe,CACvB,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,UAA1B,CADuB,EAEvB,KAFuB,CAbU;AAiBnCiB,UAAAA,WAAW,EAAE,KAAKzB,KAAL,CAAWQ,cAAX,CAA0B,aAA1B,IACT,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,aAA1B,EAAyCQ,KADhC,GAET,IAnB+B;AAoBnCU,UAAAA,YAAY,EAAE,KAAK1B,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,IACV,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,EAA0CQ,KADhC,GAEV,IAtB+B;AAuBnC+D,UAAAA,sBAAsB,EAAE,KAAK/E,KAAL,CAAWQ,cAAX,CACtB,wBADsB,IAGpB,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,wBAA1B,EAAoDQ,KAHhC,GAIpB,IA3B+B;AA4BnCgE,UAAAA,UAAU,EAAE,KAAKhF,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,IACR,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,EAAwCQ,KADhC,GAER;AA9B+B,SAArC,CADF,KAiCK;AACHE,UAAAA,SAAS,CAAC,uBAAD,CAAT,GAAqC;AACnCI,YAAAA,eAAe,EACb,KAAKlB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CF,eAFd;AAGnCK,YAAAA,0BAA0B,EACxB,KAAKvB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BK,6BAA5B,CACGD,0BAL8B;AAMnCE,YAAAA,kBAAkB,EAAE,KAAK7B,KAAL,CAAWQ,cAAX,CAA0BsB,UAA1B,CAAqCd,KANtB;AAOnC6D,YAAAA,oBAAoB,EAAEtG,eAAe,CACnC,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,sBAA1B,CADmC,EAEnC,KAFmC,CAPF;AAWnCsE,YAAAA,QAAQ,EAAEvG,eAAe,CACvB,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,UAA1B,CADuB,EAEvB,KAFuB,CAXU;AAenCuE,YAAAA,sBAAsB,EAAE,KAAK/E,KAAL,CAAWQ,cAAX,CACtB,wBADsB,IAGpB,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,wBAA1B,EAAoDQ,KAHhC,GAIpB,IAnB+B;AAoBnCgE,YAAAA,UAAU,EAAE,KAAKhF,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,IACR,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,EAAwCQ,KADhC,GAER;AAtB+B,WAArC;AAwBD;AACD,cAAMG,UAAU,GAAG;AACjBc,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QADrB;AAEjBC,UAAAA,SAAS,EAAE,uBAFM;AAGjBhB,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWH,KAAX,CAAiBkC,SAJX;AAKjBe,UAAAA,QALiB;AAMjBC,UAAAA,OANiB;AAOjBf,UAAAA,SAAS,EAAE,KAAKA;AAPC,SAAnB;AAUA,cAAMb,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGP,KAAKtC,KAAL,CAAWH,KAAX,CAAiB0C,YAHV,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJ2B,cAAAA;AAHI;AAFW,WAAnB;AAQA,eAAK9C,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAhBD,MAgBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OA1FM,MA0FA,IACL,KAAKnB,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,+BAD3B,EAEL;AACA,cAAMF,UAAU,GAAG,KAAK8D,+BAAL,CACjB/B,QADiB,EAEjBC,OAFiB,CAAnB;AAIA,cAAM5B,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGP,KAAKtC,KAAL,CAAWH,KAAX,CAAiB0C,YAHV,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJ2B,cAAAA;AAHI;AAFW,WAAnB;AAQA,eAAK9C,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAhBD,MAgBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OA3BM,MA2BA,IAAI,KAAKnB,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,2BAApC,EAAiE;AACtE,YAAI,KAAKjB,KAAL,CAAWH,KAAX,CAAiBkC,SAAjB,KAA+B,QAAnC,EACEjB,SAAS,CAAC,uBAAD,CAAT,GAAqC;AACnCI,UAAAA,eAAe,EACb,KAAKlB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CF,eAFd;AAGnCqD,UAAAA,aAAa,EAAE,CAAC,CAHmB;AAInCC,UAAAA,cAAc,EAAE,CAAC,CAJkB;AAKnCpC,UAAAA,kBAAkB,EAChB,KAAKxC,KAAL,CAAWQ,cAAX,CAA0BsB,UAA1B,CAAqCiC,IAArC,CAA0CjC,UANT;AAOnCoD,UAAAA,oBAAoB,EAAE3G,eAAe,CACnC,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,sBAA1B,CADmC,EAEnC,KAFmC,CAPF;AAWnCsE,UAAAA,QAAQ,EAAEvG,eAAe,CACvB,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,UAA1B,CADuB,EAEvB,KAFuB,CAXU;AAenCiB,UAAAA,WAAW,EAAE,KAAKzB,KAAL,CAAWQ,cAAX,CAA0B,aAA1B,IACT,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,aAA1B,EAAyCQ,KADhC,GAET,IAjB+B;AAkBnCU,UAAAA,YAAY,EAAE,KAAK1B,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,IACV,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,EAA0CQ,KADhC,GAEV,IApB+B;AAqBnCmE,UAAAA,sBAAsB,EAAE,KAAKnF,KAAL,CAAWQ,cAAX,CACtB,wBADsB,IAGpB,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,wBAA1B,EAAoDQ,KAHhC,GAIpB,IAzB+B;AA0BnCgE,UAAAA,UAAU,EAAE,KAAKhF,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,IACR,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,EAAwCQ,KADhC,GAER;AA5B+B,SAArC,CADF,KA+BK;AACHE,UAAAA,SAAS,CAAC,uBAAD,CAAT,GAAqC;AACnCI,YAAAA,eAAe,EACb,KAAKlB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CF,eAFd;AAGnCgB,YAAAA,0BAA0B,EACxB,KAAKlC,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BgB,6BAA5B,CACGD,0BAL8B;AAMnCE,YAAAA,kBAAkB,EAAE,KAAKxC,KAAL,CAAWQ,cAAX,CAA0BsB,UAA1B,CAAqCd,KANtB;AAOnCkE,YAAAA,oBAAoB,EAAE3G,eAAe,CACnC,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,sBAA1B,CADmC,EAEnC,KAFmC,CAPF;AAWnCsE,YAAAA,QAAQ,EAAEvG,eAAe,CACvB,KAAKyB,KAAL,CAAWQ,cAAX,CAA0B,UAA1B,CADuB,EAEvB,KAFuB,CAXU;AAenCwE,YAAAA,UAAU,EAAE,KAAKhF,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,IACR,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,YAA1B,EAAwCQ,KADhC,GAER,IAjB+B;AAkBnCmE,YAAAA,sBAAsB,EAAE,KAAKnF,KAAL,CAAWQ,cAAX,CACtB,wBADsB,IAGpB,KAAKR,KAAL,CAAWQ,cAAX,CAA0B,wBAA1B,EAAoDQ,KAHhC,GAIpB;AAtB+B,WAArC;AAwBD;AACD,cAAMG,UAAU,GAAG;AACjBc,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QADrB;AAEjBC,UAAAA,SAAS,EAAE,uBAFM;AAGjBhB,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWH,KAAX,CAAiBkC,SAJX;AAKjBe,UAAAA,QALiB;AAMjBC,UAAAA,OANiB;AAOjBf,UAAAA,SAAS,EAAE,KAAKA;AAPC,SAAnB;AAUA,cAAMb,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGP,KAAKtC,KAAL,CAAWH,KAAX,CAAiB0C,YAHV,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJ2B,cAAAA;AAHI;AAFW,WAAnB;AAQA,eAAK9C,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAhBD,MAgBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OAxFM,MAwFA,IACL,KAAKnB,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,+BAD3B,EAEL;AACA,cAAMF,UAAU,GAAG,KAAKiE,+BAAL,CACjBlC,QADiB,EAEjBC,OAFiB,CAAnB;AAIA,cAAM5B,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGP,KAAKtC,KAAL,CAAWH,KAAX,CAAiB0C,YAHV,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJ2B,cAAAA;AAHI;AAFW,WAAnB;AAQA,eAAK9C,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAhBD,MAgBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF;AACF,KArxBkB;;AAAA,SAuxBnB8D,sBAvxBmB,GAuxBM,CAACrE,KAAD,EAAQF,IAAR,KAAiB;AACxC,YAAMN,cAAc,GAAG,KAAKR,KAAL,CAAWQ,cAAX,IAA6B,EAApD;AACAA,MAAAA,cAAc,CAACM,IAAD,CAAd,GAAuBE,KAAvB;AACA,WAAKP,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KA3xBkB;;AAAA,SA8yBnB8E,aA9yBmB,GA8yBH,MAAM;AACpB,YAAMnE,UAAU,GAAG;AACjBD,QAAAA,SAAS,EAAE;AACTqE,UAAAA,QAAQ,EAAE,EACR,GAAG,KAAKnF,KAAL,CAAWH,KAAX,CAAiBmB,QADZ;AAERoE,YAAAA,OAAO,EAAE,KAAKxF,KAAL,CAAWQ,cAAX,CAA0B,eAA1B;AAFD,WADD;AAKTiF,UAAAA,QAAQ,EAAE,KAAKzF,KAAL,CAAWQ,cAAX,CAA0B,eAA1B;AALD,SADM;AAQjBwC,QAAAA,UAAU,EAAE,KAAK5C,KAAL,CAAWH,KAAX,CAAiB+C;AARZ,OAAnB;;AAUA,UAAI,KAAK5C,KAAL,CAAWH,KAAX,CAAiByF,MAAjB,KAA4B,UAAhC,EAA4C;AAC1C,aAAKtF,KAAL,CAAWxD,uBAAX,CAAmCuE,UAAnC,EAA+C,WAA/C;AACD,OAFD,MAEO,IAAI,KAAKf,KAAL,CAAWH,KAAX,CAAiByF,MAAjB,KAA4B,MAAhC,EAAwC;AAC7C,aAAKtF,KAAL,CAAWxD,uBAAX,CAAmCuE,UAAnC,EAA+C,WAA/C;AACD,OAFM,MAEA,IAAI,KAAKf,KAAL,CAAWH,KAAX,CAAiByF,MAAjB,KAA4B,QAAhC,EAA0C;AAC/C,aAAKtF,KAAL,CAAWxD,uBAAX,CAAmCuE,UAAnC,EAA+C,WAA/C;AACD,OAFM,MAEA,IAAI,KAAKf,KAAL,CAAWH,KAAX,CAAiByF,MAAjB,KAA4B,KAAhC,EAAuC;AAC5C,aAAKtF,KAAL,CAAWxD,uBAAX,CAAmCuE,UAAnC,EAA+C,WAA/C;AACD,OAFM,MAEA,IAAI,KAAKf,KAAL,CAAWH,KAAX,CAAiByF,MAAjB,KAA4B,WAAhC,EAA6C;AAClD,aAAKtF,KAAL,CAAWxD,uBAAX,CAAmCuE,UAAnC,EAA+C,WAA/C;AACD,OAFM,MAEA;AACL,aAAKf,KAAL,CAAWxD,uBAAX,CAAmCuE,UAAnC,EAA+C,WAA/C;AACD;AACF,KAt0BkB;;AAAA,SAw0BnBwE,aAx0BmB,GAw0BFC,YAAD,IAAkB;AAChC,YAAM1D,SAAS,GAAG0D,YAAY,CAAC1D,SAA/B;AACA,UAAI2D,QAAQ,GAAGD,YAAY,CAACpF,cAA5B;AACAqF,MAAAA,QAAQ,CAAC,gBAAD,CAAR,GAA6BhI,iBAAiB,CAACiI,GAA/C;AACA,UAAIC,SAAS,GAAGzC,SAAhB;;AACA,UAAIsC,YAAY,CAACvE,UAAb,KAA4B,aAAhC,EAA+C;AAC7C0E,QAAAA,SAAS,GAAG,KAAK/F,KAAL,CAAWgG,gBAAvB;AACD;;AACD,YAAM7E,UAAU,GAAG;AACjBD,QAAAA,SAAS,EAAE;AACT,WAACgB,SAAD,GAAa2D,QADJ;AAETN,UAAAA,QAAQ,EAAE,KAAKnF,KAAL,CAAWH,KAAX,CAAiBmB;AAFlB,SADM;AAKjBa,QAAAA,QAAQ,EAAE,YALO;AAMjBE,QAAAA,SAAS,EAAE,YANM;AAOjBD,QAAAA,SAAS,EAAEA,SAPM;AAQjB6D,QAAAA;AARiB,OAAnB;AAUA,YAAMxE,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AAEA,UACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGPkD,YAAY,CAACjD,YAHN,CADX,EAME;AACA,cAAMC,UAAU,GAAG;AACjBC,UAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,UAAAA,IAAI,EAAE;AACJC,YAAAA,SAAS,EAAE,IADP;AAEJC,YAAAA,UAAU,EAAE;AAAE7B,cAAAA,UAAF;AAAcI,cAAAA;AAAd,aAFR;AAGJ0E,YAAAA,cAAc,EAAE,IAHZ;AAIJ5E,YAAAA,UAAU,EAAE,MAJR;AAKJc,YAAAA,SAAS,EAAEyD,YAAY,CAACzD,SALpB;AAMJ3B,YAAAA,cAAc,EAAE;AANZ;AAFW,SAAnB;AAWA,aAAKJ,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,OAnBD,MAmBO;AACL,aAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,gBAA9C,EAAgE,EAAhE;AACD;AACF,KAl3BkB;;AAAA,SAo3BnB2E,cAp3BmB,GAo3BF,CAACnC,IAAD,EAAOoC,GAAP,EAAYjE,SAAZ,KAA0B;AACzC,UAAI2D,QAAQ,GAAG9B,IAAf;AACA8B,MAAAA,QAAQ,CAAC,gBAAD,CAAR,GAA6B,CAA7B;AACA,YAAM1E,UAAU,GAAG;AACjBD,QAAAA,SAAS,EAAE;AACT,WAACiF,GAAD,GAAON,QADE;AAETN,UAAAA,QAAQ,EAAE,KAAKnF,KAAL,CAAWgB;AAFZ,SADM;AAKjBa,QAAAA,QAAQ,EAAE,YALO;AAMjBE,QAAAA,SAAS,EAAE,YANM;AAOjBD,QAAAA,SAAS,EAAEA;AAPM,OAAnB;AASA,WAAK9B,KAAL,CAAWzD,UAAX,CACEwE,UADF,EAEE,KAAKf,KAAL,CAAWmB,UAFb,EAGE,gBAHF,EAIE,EAJF;AAMD,KAt4BkB;;AAAA,SAw4BnB6E,mBAx4BmB,GAw4BIC,WAAD,IAAiB;AACrC,UAAInF,SAAS,GAAG,EAAhB;AACA,YAAMG,UAAU,GAAGgF,WAAW,CAAChF,UAA/B;;AACA,UAAIA,UAAU,KAAK,8BAAnB,EAAmD;AACjD,cAAM0E,SAAS,GAAG,KAAK/F,KAAL,CAAWgG,gBAA7B;AACA9E,QAAAA,SAAS,CAAC,gBAAD,CAAT,GAA8B;AAC5BoF,UAAAA,mBAAmB,EAAED,WAAW,CAAC7F,cAAZ,CAA2B8F,mBADpB;AAE5BC,UAAAA,kBAAkB,EAChB,KAAKnG,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B8C,4BAA5B,CACGD;AAJuB,SAA9B;AAMAlD,QAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKd,KAAL,CAAWH,KAAX,CAAiBmB,QAAzC;AACA,cAAMD,UAAU,GAAG;AACjBe,UAAAA,SAAS,EAAE,0BADM;AAEjBD,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QAFrB;AAGjBf,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAEkE,WAAW,CAAClE,SAJN;AAKjB4D,UAAAA,SAAS,EAAEA;AALM,SAAnB;AAOA,cAAMxE,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGP2D,WAAW,CAAC1D,YAHL,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJiF,cAAAA,SAAS,EAAE,IAHP;AAIJnF,cAAAA,UAAU,EAAE,YAJR;AAKJc,cAAAA,SAAS,EAAEkE,WAAW,CAAClE;AALnB;AAFW,WAAnB;AAUA,eAAK/B,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAlBD,MAkBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OAtCD,MAsCO,IAAIF,UAAU,KAAK,+BAAnB,EAAoD;AACzD,cAAM0E,SAAS,GAAG,KAAK/F,KAAL,CAAWgG,gBAA7B;AACA9E,QAAAA,SAAS,CAAC,gBAAD,CAAT,GAA8B;AAC5BoF,UAAAA,mBAAmB,EAAED,WAAW,CAAC7F,cAAZ,CAA2B8F,mBADpB;AAE5BC,UAAAA,kBAAkB,EAChB,KAAKnG,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BK,6BAA5B,CACGD;AAJuB,SAA9B;AAMAT,QAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKd,KAAL,CAAWH,KAAX,CAAiBmB,QAAzC;AACA,cAAMD,UAAU,GAAG;AACjBe,UAAAA,SAAS,EAAE,2BADM;AAEjBD,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QAFrB;AAGjBf,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAEkE,WAAW,CAAClE,SAJN;AAKjB4D,UAAAA,SAAS,EAAEA;AALM,SAAnB;AAOA,cAAMxE,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGP2D,WAAW,CAAC1D,YAHL,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJiF,cAAAA,SAAS,EAAE,IAHP;AAIJnF,cAAAA,UAAU,EAAE,YAJR;AAKJc,cAAAA,SAAS,EAAEkE,WAAW,CAAClE;AALnB;AAFW,WAAnB;AAUA,eAAK/B,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAlBD,MAkBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OAtCM,MAsCA,IAAIF,UAAU,KAAK,+BAAnB,EAAoD;AACzD,cAAM0E,SAAS,GAAG,KAAK/F,KAAL,CAAWgG,gBAA7B;AACA9E,QAAAA,SAAS,CAAC,gBAAD,CAAT,GAA8B;AAC5BoF,UAAAA,mBAAmB,EAAED,WAAW,CAAC7F,cAAZ,CAA2B8F,mBADpB;AAE5BC,UAAAA,kBAAkB,EAChB,KAAKnG,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BgB,6BAA5B,CACGD;AAJuB,SAA9B;AAMApB,QAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKd,KAAL,CAAWH,KAAX,CAAiBmB,QAAzC;AACA,cAAMD,UAAU,GAAG;AACjBe,UAAAA,SAAS,EAAE,2BADM;AAEjBD,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QAFrB;AAGjBf,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAEkE,WAAW,CAAClE,SAJN;AAKjB4D,UAAAA,SAAS,EAAEA;AALM,SAAnB;AAOA,cAAMxE,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGP2D,WAAW,CAAC1D,YAHL,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJiF,cAAAA,SAAS,EAAE,IAHP;AAIJnF,cAAAA,UAAU,EAAE,YAJR;AAKJc,cAAAA,SAAS,EAAEkE,WAAW,CAAClE;AALnB;AAFW,WAAnB;AAUA,eAAK/B,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAlBD,MAkBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF;AACF,KA9/BkB;;AAAA,SAggCnBkF,gBAhgCmB,GAggCA,CAACtE,SAAD,EAAYQ,YAAZ,KAA6B;AAC9C,UAAIzB,SAAS,GAAG,EAAhB;;AACA,UAAIiB,SAAS,CAACd,UAAV,KAAyB,aAA7B,EAA4C;AAC1C,cAAM0E,SAAS,GAAG,KAAK/F,KAAL,CAAWgG,gBAA7B;AACA9E,QAAAA,SAAS,CAAC,mBAAD,CAAT,GAAiC;AAC/BsC,UAAAA,SAAS,EAAE,KAAKpD,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BqC;AADN,SAAjC;AAGAvC,QAAAA,SAAS,CAAC,mBAAD,CAAT,CAA+B,wBAA/B,IACEiB,SAAS,CAAC3B,cAAV,CAAyBkG,sBAD3B;AAEAxF,QAAAA,SAAS,CAAC,mBAAD,CAAT,CAA+B,iBAA/B,IACEiB,SAAS,CAAC3B,cAAV,CAAyBc,eAD3B;AAEAJ,QAAAA,SAAS,CAAC,mBAAD,CAAT,CAA+B,gBAA/B,IACEiB,SAAS,CAAC3B,cAAV,CAAyBmG,cAD3B;AAGAzF,QAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKd,KAAL,CAAWH,KAAX,CAAiBmB,QAAzC;AACA,cAAMD,UAAU,GAAG;AACjBe,UAAAA,SAAS,EAAE,SADM;AAEjBD,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QAFrB;AAGjBf,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAE,QAJM;AAKjB4D,UAAAA,SAAS,EAAEA;AALM,SAAnB;AAOA,cAAMxE,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGPC,YAHO,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJiF,cAAAA,SAAS,EAAE,IAHP;AAIJnF,cAAAA,UAAU,EAAE,YAJR;AAKJc,cAAAA,SAAS,EAAEA,SAAS,CAACA;AALjB;AAFW,WAAnB;AAUA,eAAK/B,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAlBD,MAkBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OA1CD,MA0CO,IAAIoB,YAAY,KAAK,GAArB,EAA0B;AAC/B,cAAMoD,SAAS,GAAG,KAAK/F,KAAL,CAAWgG,gBAA7B;AACA9E,QAAAA,SAAS,CAAC,gBAAD,CAAT,GAA8B;AAC5BoF,UAAAA,mBAAmB,EACjB,KAAKlG,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BqF,kBAA5B,CAA+CN;AAFrB,SAA9B;AAIApF,QAAAA,SAAS,CAAC,gBAAD,CAAT,GAA8B;AAC5B2F,UAAAA,WAAW,EACT,KAAKzG,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BqF,kBAA5B,CAA+CN;AAFrB,SAA9B;AAKApF,QAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKd,KAAL,CAAWH,KAAX,CAAiBmB,QAAzC;AACA,cAAMD,UAAU,GAAG;AACjBe,UAAAA,SAAS,EAAE,0BADM;AAEjBD,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QAFrB;AAGjBf,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAE,QAJM;AAKjB4D,UAAAA,SAAS,EAAEA;AALM,SAAnB;AAOA,cAAMxE,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGPC,YAHO,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJiF,cAAAA,SAAS,EAAE,IAHP;AAIJnF,cAAAA,UAAU,EAAE,YAJR;AAKJc,cAAAA;AALI;AAFW,WAAnB;AAUA,eAAK/B,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAlBD,MAkBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OAzCM,MAyCA,IAAIY,SAAS,CAACd,UAAV,KAAyB,0BAA7B,EAAyD;AAC9D,cAAM0E,SAAS,GAAG,KAAK/F,KAAL,CAAWgG,gBAA7B;AACA9E,QAAAA,SAAS,CAAC,sBAAD,CAAT,GAAoC;AAClCkD,UAAAA,yBAAyB,EACvB,KAAKhE,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B8C,4BAA5B,CACGD;AAH6B,SAApC;AAKAlD,QAAAA,SAAS,CAAC,sBAAD,CAAT,CAAkC,iBAAlC,IACE,KAAKd,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B8C,4BAA5B,CAAyD/C,eAD3D;AAGAJ,QAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKd,KAAL,CAAWH,KAAX,CAAiBmB,QAAzC;AACA,cAAMD,UAAU,GAAG;AACjBe,UAAAA,SAAS,EAAE,sBADM;AAEjBD,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QAFrB;AAGjBf,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAE,QAJM;AAKjB4D,UAAAA,SAAS,EAAEA;AALM,SAAnB;AAOA,cAAMxE,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGPC,YAHO,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJiF,cAAAA,SAAS,EAAE,IAHP;AAIJnF,cAAAA,UAAU,EAAE,YAJR;AAKJc,cAAAA;AALI;AAFW,WAAnB;AAUA,eAAK/B,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAlBD,MAkBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OAxCM,MAwCA,IAAIY,SAAS,CAACd,UAAV,KAAyB,2BAA7B,EAA0D;AAC/DH,QAAAA,SAAS,CAAC,uBAAD,CAAT,GAAqC;AACnCS,UAAAA,0BAA0B,EACxB,KAAKvB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BK,6BAA5B,CACGD;AAH8B,SAArC;AAKAT,QAAAA,SAAS,CAAC,uBAAD,CAAT,CAAmC,iBAAnC,IACE,KAAKd,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BK,6BAA5B,CAA0DN,eAD5D;AAEAJ,QAAAA,SAAS,CAAC,OAAD,CAAT,GAAqBiB,SAAS,CAAC2E,KAA/B;AAEA5F,QAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKd,KAAL,CAAWH,KAAX,CAAiBmB,QAAzC;AACA,cAAMD,UAAU,GAAG;AACjBe,UAAAA,SAAS,EAAE,uBADM;AAEjBD,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QAFrB;AAGjBf,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAE;AAJM,SAAnB;AAMA,cAAMZ,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGPC,YAHO,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJiF,cAAAA,SAAS,EAAE,IAHP;AAIJnF,cAAAA,UAAU,EAAE,YAJR;AAKJc,cAAAA;AALI;AAFW,WAAnB;AAUA,eAAK/B,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAlBD,MAkBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OAvCM,MAuCA,IAAIY,SAAS,CAACd,UAAV,KAAyB,2BAA7B,EAA0D;AAC/D,cAAM0E,SAAS,GAAG,KAAK/F,KAAL,CAAWgG,gBAA7B;AACA9E,QAAAA,SAAS,CAAC,uBAAD,CAAT,GAAqC;AACnCoB,UAAAA,0BAA0B,EACxB,KAAKlC,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BgB,6BAA5B,CACGD;AAH8B,SAArC;AAKApB,QAAAA,SAAS,CAAC,uBAAD,CAAT,CAAmC,iBAAnC,IACE,KAAKd,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BgB,6BAA5B,CAA0DjB,eAD5D;AAGAJ,QAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKd,KAAL,CAAWH,KAAX,CAAiBmB,QAAzC;AACA,cAAMD,UAAU,GAAG;AACjBe,UAAAA,SAAS,EAAE,uBADM;AAEjBD,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QAFrB;AAGjBf,UAAAA,SAAS,EAAEA,SAHM;AAIjBiB,UAAAA,SAAS,EAAE,QAJM;AAKjB4D,UAAAA,SAAS,EAAEA;AALM,SAAnB;AAOA,cAAMxE,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGPC,YAHO,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJiF,cAAAA,SAAS,EAAE,IAHP;AAIJnF,cAAAA,UAAU,EAAE,YAJR;AAKJc,cAAAA;AALI;AAFW,WAAnB;AAUA,eAAK/B,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAlBD,MAkBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF,OAxCM,MAwCA;AACLL,QAAAA,SAAS,CAAC,YAAD,CAAT,GAA0B,KAAKd,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAAtD;AACAN,QAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKd,KAAL,CAAWH,KAAX,CAAiBmB,QAAzC;AAEA,cAAMiC,SAAS,GAAG;AAChBK,UAAAA,aAAa,EAAE,YADC;AAEhBC,UAAAA,cAAc,EAAE,oBAFA;AAGhBC,UAAAA,eAAe,EAAE,iBAHD;AAIhBmD,UAAAA,eAAe,EACb,KAAK3G,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CF,eALjC;AAMhB0F,UAAAA,QAAQ,EAAE,uDANM;AAOhBC,UAAAA,gBAAgB,EAAE;AAAE1B,YAAAA,QAAQ,EAAE,KAAKnF,KAAL,CAAWH,KAAX,CAAiBmB;AAA7B;AAPF,SAAlB;AAUA,cAAMD,UAAU,GAAG;AACjBe,UAAAA,SAAS,EAAE,YADM;AAEjBmB,UAAAA,SAFiB;AAGjBpB,UAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWH,KAAX,CAAiBkB,UAAjB,CAA4Bc,QAHrB;AAIjBf,UAAAA,SAAS,EAAEA,SAJM;AAKjBiB,UAAAA,SAAS,EAAEA,SAAS,CAACA;AALJ,SAAnB;AAOA,cAAMZ,UAAU,GAAG,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAApC;;AACA,YACEnD,SAAS,CACP,KAAKgC,KAAL,CAAWH,KAAX,CAAiBwC,qBADV,EAEP,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFnB,EAGPC,YAHO,CADX,EAME;AACA,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,IADP;AAEJC,cAAAA,UAAU,EAAE;AAAE7B,gBAAAA,UAAF;AAAcI,gBAAAA;AAAd,eAFR;AAGJiF,cAAAA,SAAS,EAAE,IAHP;AAIJnF,cAAAA,UAAU,EAAE,YAJR;AAKJc,cAAAA,SAAS,EAAEA,SAAS,CAACA;AALjB;AAFW,WAAnB;AAUA,eAAK/B,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,SAlBD,MAkBO;AACL,eAAKxC,KAAL,CAAWzD,UAAX,CAAsBwE,UAAtB,EAAkCI,UAAlC,EAA8C,WAA9C;AACD;AACF;AACF,KAxvCkB;;AAAA,SA0vCnB2F,gBA1vCmB,GA0vCA,CAACvG,KAAD,EAAQwG,IAAR,EAAcC,SAAd,KAA4B;AAC7C,UAAI5G,cAAc,GAAG,KAAKR,KAAL,CAAWQ,cAAX,IAA6B,EAAlD;AACAA,MAAAA,cAAc,CAAC4G,SAAD,CAAd,GAA4B1I,wBAAwB,CAClD8B,cAAc,CAAC4G,SAAD,CADoC,EAElDD,IAFkD,CAApD;AAKA,WAAK1G,QAAL,CAAc;AACZD,QAAAA,cADY;AAEZ6G,QAAAA,UAAU,EAAE,QAFA,CAEU;;AAFV,OAAd;AAID,KArwCkB;;AAAA,SAojEnB3C,oBApjEmB,GAojEI,CAACxB,QAAD,EAAWC,OAAX,KAAuB;AAC5C,YAAM3C,cAAc,GAAG,KAAKR,KAAL,CAAWQ,cAAlC;AACA,YAAM8G,aAAa,GAAG9G,cAAc,CAAC+G,SAArC;AACA,YAAMC,mBAAmB,GAAG,CAA5B;AAEA,UAAIC,YAAY,GAAG5J,iBAAiB,CAAC6J,EAArC;AACA,UAAIC,mBAAmB,GAAG,EAA1B;AACA,UAAIC,cAAc,GAAG;AACnBtB,QAAAA,mBAAmB,EAAE9F,cAAc,CAAC8F,mBAAf,GACjB9F,cAAc,CAAC8F,mBADE,GAEjB,CAHe;AAInBuB,QAAAA,OAAO,EAAEhK,iBAAiB,CAACiK;AAJR,OAArB;AAMA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAb4C,CAc5C;;AACA,UACEV,aAAa,IACbW,KAAK,CAACC,OAAN,CAAcZ,aAAd,CADA,IAEAA,aAAa,CAACa,MAAd,GAAuB,CAHzB,EAIE;AACAb,QAAAA,aAAa,CAACc,OAAd,CAAsB,CAACjB,IAAD,EAAOkB,KAAP,KAAiB;AACrC,gBAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,cAAlB,CAAjB;AACA,gBAAMa,gBAAgB,GAAGtB,IAAI,CAACrG,IAAL,CAAU4H,KAAV,CAAgB,GAAhB,CAAzB;AACA,gBAAMC,aAAa,GAAGxB,IAAI,CAACrG,IAAL,CAAU4H,KAAV,CAAgB,GAAhB,EAAqBD,gBAAgB,CAACN,MAAjB,GAA0B,CAA/C,CAAtB;AACA,gBAAMS,eAAe,GAAGpI,cAAc,CAACoI,eAAf,GACpBpI,cAAc,CAACoI,eAAf,CAA+BF,KAA/B,CAAqC,GAArC,CADoB,GAEpB,EAFJ;AAGA,gBAAMG,iBAAiB,GAAGrI,cAAc,CAACoI,eAAf,GACtBzB,IAAI,CAACrG,IAAL,CAAU4H,KAAV,CAAgB,GAAhB,EAAqBE,eAAe,CAACT,MAAhB,GAAyB,CAA9C,CADsB,GAEtB,EAFJ;AAGA,gBAAMW,cAAc,GAClBtB,mBAAmB,KAAK5J,cAAc,CAACmL,GAAvC,GACIvI,cAAc,CAAC8F,mBAAf,IACA9F,cAAc,CAAC8F,mBAAf,GAAqC,CADrC,IAEA9F,cAAc,CAACoI,eAAf,KAAmC,EAFnC,GAGEA,eAAe,CAAC,CAAD,CAAf,GAAqB,GAArB,GAA2BC,iBAH7B,GAIEpK,WAAW,KAAK,GAAhB,GAAsBkK,aAL5B,GAMI,EAPN;AAQAL,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBnB,IAAI,CAACrG,IAA7B;AACAwH,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwB9H,cAAc,CAACwI,SAAf,GACpBxI,cAAc,CAACwI,SAAf,CAAyBC,IAAzB,EADoB,GAEpB,EAFJ;AAGAX,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBzK,iBAAiB,CAACgG,EAA1C;AACAyE,UAAAA,QAAQ,CAAC,iBAAD,CAAR,GAA8BQ,cAA9B;AACAR,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBnB,IAAI,CAAC+B,IAA7B;AACAZ,UAAAA,QAAQ,CAAC,iBAAD,CAAR,GACE,KAAKlI,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B8C,4BAA5B,CAAyD/C,eAD3D;AAEAgH,UAAAA,QAAQ,CAAC,qBAAD,CAAR,GAAkC,CAAlC;AACAA,UAAAA,QAAQ,CAAC,wBAAD,CAAR,GAAqCzK,iBAAiB,CAACiK,MAAvD;AACAQ,UAAAA,QAAQ,CAAC,oBAAD,CAAR,GACE,KAAKlI,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B8C,4BAA5B,CAAyDD,yBAD3D;AAGA2D,UAAAA,QAAQ,CAACoB,MAAT,CAAgB,iBAAiBd,KAAjC,EAAwClB,IAAxC;AACAY,UAAAA,QAAQ,CAACoB,MAAT,CAAgB,mBAAmBd,KAAnC,EAA0CS,cAA1C;AACAnB,UAAAA,mBAAmB,CAACzD,IAApB,CAAyBoE,QAAzB;AACD,SAnCD;AAoCAP,QAAAA,QAAQ,CAACoB,MAAT,CAAgB,WAAhB,EAA6B7B,aAAa,CAACa,MAA3C;AACAV,QAAAA,YAAY,GAAG5J,iBAAiB,CAACiI,GAAjC;AACD,OA3CD,MA2CO;AACL8B,QAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BpH,cAAc,CAAC+G,SAA7C;AACAK,QAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BpH,cAAc,CAACwI,SAAf,GAC1BxI,cAAc,CAACwI,SAAf,CAAyBC,IAAzB,EAD0B,GAE1B,EAFJ;AAGArB,QAAAA,cAAc,CAAC,WAAD,CAAd,GAA8B/J,iBAAiB,CAACgG,EAAhD;AACA+D,QAAAA,cAAc,CAAC,iBAAD,CAAd,GAAoCpH,cAAc,CAACoI,eAAnD;AACAhB,QAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BpH,cAAc,CAAC4I,SAA7C;AACAxB,QAAAA,cAAc,CAAC,iBAAD,CAAd,GACE,KAAKxH,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B8C,4BAA5B,CAAyD/C,eAD3D;AAEAsG,QAAAA,cAAc,CAAC,qBAAD,CAAd,GAAwC,CAAxC;AACAA,QAAAA,cAAc,CAAC,wBAAD,CAAd,GAA2C/J,iBAAiB,CAACiK,MAA7D;AACAF,QAAAA,cAAc,CAAC,oBAAD,CAAd,GACE,KAAKxH,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B8C,4BAA5B,CAAyDD,yBAD3D;AAGAuD,QAAAA,mBAAmB,CAACzD,IAApB,CAAyB0D,cAAzB;AACD,OA1E2C,CA2E5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAG,MAAAA,QAAQ,CAACoB,MAAT,CAAgB,cAAhB,EAAgC1B,YAAhC;AACAM,MAAAA,QAAQ,CAACoB,MAAT,CAAgB,gBAAhB,EAAkCE,IAAI,CAACC,SAAL,CAAe3B,mBAAf,CAAlC,EArF4C,CAsF5C;;AACA,YAAMxG,UAAU,GAAG;AACjBD,QAAAA,SAAS,EAAE;AAAEqE,UAAAA,QAAQ,EAAE,KAAKnF,KAAL,CAAWH,KAAX,CAAiBmB;AAA7B,SADM;AAEjB2G,QAAAA,QAAQ,EAAEA,QAFO;AAGjBwB,QAAAA,YAAY,EAAE,IAHG;AAIjBpH,QAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWH,KAAX,CAAiBkC,SAJX;AAMjB;AACAF,QAAAA,QAAQ,EAAE,YAPO;AAQjBiB,QAAAA,QARiB;AASjBC,QAAAA,OATiB;AAUjBjB,QAAAA,SAAS,EAAE;AAVM,OAAnB;AAYA,aAAOf,UAAP;AACD,KAxpEkB;;AAAA,SAypEnB8D,+BAzpEmB,GAypEe,CAAC/B,QAAD,EAAWC,OAAX,KAAuB;AACvD,YAAM3C,cAAc,GAAG,KAAKR,KAAL,CAAWQ,cAAlC;AACA,YAAM8G,aAAa,GAAG9G,cAAc,CAAC+G,SAArC;AACA,YAAMC,mBAAmB,GAAG,CAA5B;AAEA,UAAIC,YAAY,GAAG5J,iBAAiB,CAAC6J,EAArC;AACA,UAAIC,mBAAmB,GAAG,EAA1B;AACA,UAAIC,cAAc,GAAG;AACnBtB,QAAAA,mBAAmB,EAAE9F,cAAc,CAAC8F,mBAAf,GACjB9F,cAAc,CAAC8F,mBADE,GAEjB,CAHe;AAInBuB,QAAAA,OAAO,EAAEhK,iBAAiB,CAACiK;AAJR,OAArB;AAMA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,UACEV,aAAa,IACbW,KAAK,CAACC,OAAN,CAAcZ,aAAd,CADA,IAEAA,aAAa,CAACa,MAAd,GAAuB,CAHzB,EAIE;AACAb,QAAAA,aAAa,CAACc,OAAd,CAAsB,CAACjB,IAAD,EAAOkB,KAAP,KAAiB;AACrC,gBAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,cAAlB,CAAjB;AACA,gBAAMa,gBAAgB,GAAGtB,IAAI,CAACrG,IAAL,CAAU4H,KAAV,CAAgB,GAAhB,CAAzB;AACA,gBAAMC,aAAa,GAAGxB,IAAI,CAACrG,IAAL,CAAU4H,KAAV,CAAgB,GAAhB,EAAqBD,gBAAgB,CAACN,MAAjB,GAA0B,CAA/C,CAAtB;AACA,gBAAMS,eAAe,GAAGpI,cAAc,CAACoI,eAAf,GACpBpI,cAAc,CAACoI,eAAf,CAA+BF,KAA/B,CAAqC,GAArC,CADoB,GAEpB,EAFJ;AAGA,gBAAMG,iBAAiB,GAAGrI,cAAc,CAACoI,eAAf,GACtBzB,IAAI,CAACrG,IAAL,CAAU4H,KAAV,CAAgB,GAAhB,EAAqBE,eAAe,CAACT,MAAhB,GAAyB,CAA9C,CADsB,GAEtB,EAFJ;AAGA,gBAAMW,cAAc,GAClBtB,mBAAmB,KAAK5J,cAAc,CAACmL,GAAvC,GACIvI,cAAc,CAAC8F,mBAAf,IACA9F,cAAc,CAAC8F,mBAAf,GAAqC,CADrC,IAEA9F,cAAc,CAACoI,eAAf,KAAmC,EAFnC,GAGEA,eAAe,CAAC,CAAD,CAAf,GAAqB,GAArB,GAA2BC,iBAH7B,GAIEpK,WAAW,KAAK,GAAhB,GAAsBkK,aAL5B,GAMI,EAPN;AAQAL,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBnB,IAAI,CAACrG,IAA7B;AACAwH,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwB9H,cAAc,CAACwI,SAAf,GACpBxI,cAAc,CAACwI,SAAf,CAAyBC,IAAzB,EADoB,GAEpB,EAFJ;AAGAX,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBzK,iBAAiB,CAACgG,EAA1C;AACAyE,UAAAA,QAAQ,CAAC,iBAAD,CAAR,GAA8BQ,cAA9B;AACAR,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBnB,IAAI,CAAC+B,IAA7B;AACAZ,UAAAA,QAAQ,CAAC,iBAAD,CAAR,GACE,KAAKlI,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BK,6BAA5B,CAA0DN,eAD5D;AAEAgH,UAAAA,QAAQ,CAAC,qBAAD,CAAR,GAAkC,CAAlC;AACAA,UAAAA,QAAQ,CAAC,wBAAD,CAAR,GAAqC,CAArC;AACAA,UAAAA,QAAQ,CAAC,oBAAD,CAAR,GACE,KAAKlI,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BK,6BAA5B,CAA0DD,0BAD5D;AAGAoG,UAAAA,QAAQ,CAACoB,MAAT,CAAgB,iBAAiBd,KAAjC,EAAwClB,IAAxC;AACAY,UAAAA,QAAQ,CAACoB,MAAT,CAAgB,mBAAmBd,KAAnC,EAA0CS,cAA1C;AACAnB,UAAAA,mBAAmB,CAACzD,IAApB,CAAyBoE,QAAzB;AACD,SAnCD;AAoCAP,QAAAA,QAAQ,CAACoB,MAAT,CAAgB,WAAhB,EAA6B7B,aAAa,CAACa,MAA3C;AACAV,QAAAA,YAAY,GAAG5J,iBAAiB,CAACiI,GAAjC;AACD,OA3CD,MA2CO;AACL8B,QAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BpH,cAAc,CAAC+G,SAA7C;AACAK,QAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BpH,cAAc,CAACwI,SAAf,GAC1BxI,cAAc,CAACwI,SAAf,CAAyBC,IAAzB,EAD0B,GAE1B,EAFJ;AAGArB,QAAAA,cAAc,CAAC,WAAD,CAAd,GAA8B/J,iBAAiB,CAACgG,EAAhD;AACA+D,QAAAA,cAAc,CAAC,iBAAD,CAAd,GAAoCpH,cAAc,CAACoI,eAAnD;AACAhB,QAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BpH,cAAc,CAAC4I,SAA7C;AACAxB,QAAAA,cAAc,CAAC,iBAAD,CAAd,GACE,KAAKxH,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BK,6BAA5B,CAA0DN,eAD5D;AAEAsG,QAAAA,cAAc,CAAC,qBAAD,CAAd,GAAwC,CAAxC;AACAA,QAAAA,cAAc,CAAC,wBAAD,CAAd,GAA2C,CAA3C;AACAA,QAAAA,cAAc,CAAC,oBAAD,CAAd,GACE,KAAKxH,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BK,6BAA5B,CAA0DD,0BAD5D;AAGAgG,QAAAA,mBAAmB,CAACzD,IAApB,CAAyB0D,cAAzB;AACD;;AAEDG,MAAAA,QAAQ,CAACoB,MAAT,CAAgB,cAAhB,EAAgC1B,YAAhC;AACAM,MAAAA,QAAQ,CAACoB,MAAT,CAAgB,gBAAhB,EAAkCE,IAAI,CAACC,SAAL,CAAe3B,mBAAf,CAAlC;AACA,YAAMxG,UAAU,GAAG;AACjBD,QAAAA,SAAS,EAAE;AAAEqE,UAAAA,QAAQ,EAAE,KAAKnF,KAAL,CAAWH,KAAX,CAAiBmB;AAA7B,SADM;AAEjB2G,QAAAA,QAAQ,EAAEA,QAFO;AAGjBwB,QAAAA,YAAY,EAAE,IAHG;AAIjBpH,QAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWH,KAAX,CAAiBkC,SAJX;AAKjBF,QAAAA,QAAQ,EAAE,YALO;AAMjBiB,QAAAA,QANiB;AAOjBC,QAAAA,OAPiB;AAQjBjB,QAAAA,SAAS,EAAE;AARM,OAAnB;AAUA,aAAOf,UAAP;AACD,KAjvEkB;;AAAA,SAkvEnBiE,+BAlvEmB,GAkvEe,CAAClC,QAAD,EAAWC,OAAX,KAAuB;AACvD,YAAM3C,cAAc,GAAG,KAAKR,KAAL,CAAWQ,cAAlC;AACA,YAAM8G,aAAa,GAAG9G,cAAc,CAAC+G,SAArC;AACA,YAAMC,mBAAmB,GAAG,CAA5B;AAEA,UAAIC,YAAY,GAAG5J,iBAAiB,CAAC6J,EAArC;AACA,UAAIC,mBAAmB,GAAG,EAA1B;AACA,UAAIC,cAAc,GAAG;AACnBtB,QAAAA,mBAAmB,EAAE9F,cAAc,CAAC8F,mBAAf,GACjB9F,cAAc,CAAC8F,mBADE,GAEjB,CAHe;AAInBuB,QAAAA,OAAO,EAAEhK,iBAAiB,CAACiK;AAJR,OAArB;AAMA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,UACEV,aAAa,IACbW,KAAK,CAACC,OAAN,CAAcZ,aAAd,CADA,IAEAA,aAAa,CAACa,MAAd,GAAuB,CAHzB,EAIE;AACAb,QAAAA,aAAa,CAACc,OAAd,CAAsB,CAACjB,IAAD,EAAOkB,KAAP,KAAiB;AACrC,gBAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,cAAlB,CAAjB;AACA,gBAAMa,gBAAgB,GAAGtB,IAAI,CAACrG,IAAL,CAAU4H,KAAV,CAAgB,GAAhB,CAAzB;AACA,gBAAMC,aAAa,GAAGxB,IAAI,CAACrG,IAAL,CAAU4H,KAAV,CAAgB,GAAhB,EAAqBD,gBAAgB,CAACN,MAAjB,GAA0B,CAA/C,CAAtB;AACA,gBAAMS,eAAe,GAAGpI,cAAc,CAACoI,eAAf,GACpBpI,cAAc,CAACoI,eAAf,CAA+BF,KAA/B,CAAqC,GAArC,CADoB,GAEpB,EAFJ;AAGA,gBAAMG,iBAAiB,GAAGrI,cAAc,CAACoI,eAAf,GACtBzB,IAAI,CAACrG,IAAL,CAAU4H,KAAV,CAAgB,GAAhB,EAAqBE,eAAe,CAACT,MAAhB,GAAyB,CAA9C,CADsB,GAEtB,EAFJ;AAGA,gBAAMW,cAAc,GAClBtB,mBAAmB,KAAK5J,cAAc,CAACmL,GAAvC,GACIvI,cAAc,CAAC8F,mBAAf,IACA9F,cAAc,CAAC8F,mBAAf,GAAqC,CADrC,IAEA9F,cAAc,CAACoI,eAAf,KAAmC,EAFnC,GAGEA,eAAe,CAAC,CAAD,CAAf,GAAqB,GAArB,GAA2BC,iBAH7B,GAIEpK,WAAW,KAAK,GAAhB,GAAsBkK,aAL5B,GAMI,EAPN;AAQAL,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBnB,IAAI,CAACrG,IAA7B;AACAwH,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwB9H,cAAc,CAACwI,SAAf,GACpBxI,cAAc,CAACwI,SAAf,CAAyBC,IAAzB,EADoB,GAEpB,EAFJ;AAGAX,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBzK,iBAAiB,CAACgG,EAA1C;AACAyE,UAAAA,QAAQ,CAAC,iBAAD,CAAR,GAA8BQ,cAA9B;AACAR,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBnB,IAAI,CAAC+B,IAA7B;AACAZ,UAAAA,QAAQ,CAAC,iBAAD,CAAR,GACE,KAAKlI,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BgB,6BAA5B,CAA0DjB,eAD5D;AAEAgH,UAAAA,QAAQ,CAAC,qBAAD,CAAR,GAAkC,CAAlC;AACAA,UAAAA,QAAQ,CAAC,wBAAD,CAAR,GAAqC,CAArC;AACAA,UAAAA,QAAQ,CAAC,oBAAD,CAAR,GACE,KAAKlI,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BgB,6BAA5B,CAA0DD,0BAD5D;AAGAyF,UAAAA,QAAQ,CAACoB,MAAT,CAAgB,iBAAiBd,KAAjC,EAAwClB,IAAxC;AACAY,UAAAA,QAAQ,CAACoB,MAAT,CAAgB,mBAAmBd,KAAnC,EAA0CS,cAA1C;AACAnB,UAAAA,mBAAmB,CAACzD,IAApB,CAAyBoE,QAAzB;AACD,SAnCD;AAoCAP,QAAAA,QAAQ,CAACoB,MAAT,CAAgB,WAAhB,EAA6B7B,aAAa,CAACa,MAA3C;AACAV,QAAAA,YAAY,GAAG5J,iBAAiB,CAACiI,GAAjC;AACD,OA3CD,MA2CO;AACL8B,QAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BpH,cAAc,CAAC+G,SAA7C;AACAK,QAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BpH,cAAc,CAACwI,SAAf,GAC1BxI,cAAc,CAACwI,SAAf,CAAyBC,IAAzB,EAD0B,GAE1B,EAFJ;AAGArB,QAAAA,cAAc,CAAC,WAAD,CAAd,GAA8B/J,iBAAiB,CAACgG,EAAhD;AACA+D,QAAAA,cAAc,CAAC,iBAAD,CAAd,GAAoCpH,cAAc,CAACoI,eAAnD;AACAhB,QAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BpH,cAAc,CAAC4I,SAA7C;AACAxB,QAAAA,cAAc,CAAC,iBAAD,CAAd,GACE,KAAKxH,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BgB,6BAA5B,CAA0DjB,eAD5D;AAEAsG,QAAAA,cAAc,CAAC,qBAAD,CAAd,GAAwC,CAAxC;AACAA,QAAAA,cAAc,CAAC,wBAAD,CAAd,GAA2C,CAA3C;AACAA,QAAAA,cAAc,CAAC,oBAAD,CAAd,GACE,KAAKxH,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BgB,6BAA5B,CAA0DD,0BAD5D;AAGAqF,QAAAA,mBAAmB,CAACzD,IAApB,CAAyB0D,cAAzB;AACD;;AAEDG,MAAAA,QAAQ,CAACoB,MAAT,CAAgB,cAAhB,EAAgC1B,YAAhC;AACAM,MAAAA,QAAQ,CAACoB,MAAT,CAAgB,gBAAhB,EAAkCE,IAAI,CAACC,SAAL,CAAe3B,mBAAf,CAAlC;AACA,YAAMxG,UAAU,GAAG;AACjBD,QAAAA,SAAS,EAAE;AAAEqE,UAAAA,QAAQ,EAAE,KAAKnF,KAAL,CAAWH,KAAX,CAAiBmB;AAA7B,SADM;AAEjB2G,QAAAA,QAAQ,EAAEA,QAFO;AAGjBwB,QAAAA,YAAY,EAAE,IAHG;AAIjBpH,QAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWH,KAAX,CAAiBkC,SAJX;AAKjBF,QAAAA,QAAQ,EAAE,YALO;AAMjBiB,QAAAA,QANiB;AAOjBC,QAAAA,OAPiB;AAQjBjB,QAAAA,SAAS,EAAE;AARM,OAAnB;AAUA,aAAOf,UAAP;AACD,KA10EkB;;AAAA,SA20EnBqI,WA30EmB,GA20EJC,QAAD,IAAc;AAC1B,YAAMpI,UAAU,GAAGoI,QAAQ,CAACpI,UAA5B;AACA,YAAMuB,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,QAAAA,IAAI,EAAE;AAAEzB,UAAAA;AAAF;AAFW,OAAnB;AAIA,WAAKjB,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,KAl1EkB;;AAAA,SAo1EnB8G,cAp1EmB,GAo1EF,CAACC,aAAD,EAAgBvC,SAAhB,EAA2BwC,OAA3B,KAAuC;AACtD,UAAIpJ,cAAc,GAAG,KAAKR,KAAL,CAAWQ,cAAX,IAA6B,EAAlD;AACAA,MAAAA,cAAc,CAAC4G,SAAD,CAAd,GAA4B5I,oBAAoB,CAC9CgC,cAAc,CAAC4G,SAAD,CADgC,EAE9CuC,aAF8C,EAG9CC,OAH8C,CAAhD;AAKA,WAAKnJ,QAAL,CAAc;AAAED,QAAAA,cAAF;AAAkB6G,QAAAA,UAAU,EAAE;AAA9B,OAAd;AACD,KA51EkB;;AAAA,SA61EnBwC,eA71EmB,GA61EAlJ,KAAD,IAAW;AAC3B,WAAKF,QAAL,CAAc;AACZqJ,QAAAA,UAAU,EAAEhL,OAAO,CACjB,KAAKsB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B,iBAA5B,CADiB,EAEjBZ,KAAK,CAACoF,SAFW,CADP;AAKZC,QAAAA,gBAAgB,EAAErF,KAAK,CAACoF;AALZ,OAAd;AAOD,KAr2EkB;;AAAA,SAu2EnBgE,SAv2EmB,GAu2EP,MAAM;AAChB,YAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;AACA,YAAMC,WAAW,GACf,KAAKlK,KAAL,CAAWmK,UAAX,CAAsBC,GAAtB,CAA0B,eAA1B,KACA,KAAKpK,KAAL,CAAWmK,UAAX,CAAsBE,GAAtB,CAA0B,eAA1B,EAA2CC,YAF7C;AAGA,YAAMC,YAAY,GAChB,KAAKvK,KAAL,CAAWmK,UAAX,CAAsBC,GAAtB,CAA0B,gBAA1B,KACA,KAAKpK,KAAL,CAAWmK,UAAX,CAAsBE,GAAtB,CAA0B,gBAA1B,EAA4CC,YAF9C;AAGAN,MAAAA,MAAM,CAACQ,GAAP,CACE,aADF,eAEE,oBAAC,oBAAD;AACE,QAAA,UAAU,EAAE,KAAKxK,KAAL,CAAWmK,UADzB;AAEE,QAAA,qBAAqB,EAAE,KAAKnK,KAAL,CAAWyC,qBAFpC,CAGE;AACA;AACA;AACA;AANF;AAOE,QAAA,SAAS,EAAE,KAAKrC,KAAL,CAAWH,KAAX,CAAiB8F,SAP9B;AAQE,QAAA,UAAU,EAAE,KAAK3F,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B,iBAA5B,KAAkD,EARhE;AASE,QAAA,kBAAkB,EAAE,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBATlD;AAUE,QAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWH,KAAX,CAAiBmB,QAV7B;AAWE,QAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWH,KAAX,CAAiBkB,UAX/B;AAYE,QAAA,YAAY,EAAE,KAAKsF,gBAZrB;AAaE,QAAA,WAAW,EAAEyD,WAbf;AAcE,QAAA,YAAY,EAAEK,YAdhB;AAeE,QAAA,aAAa,EAAE,KAAK5E,aAftB;AAgBE,QAAA,oBAAoB,EAAE,KAAKvF,KAAL,CAAWnD,oBAhBnC;AAiBE,QAAA,iBAAiB,EAAE,KAAKmD,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BkJ,eAA5B,IAA+C,EAjBpE;AAkBE,QAAA,UAAU,EAAC,aAlBb;AAmBE,QAAA,cAAc,EAAE,KAAKzK,KAAL,CAAWQ,cAnB7B;AAoBE,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWH,KAAX,CAAiByK,QApB7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AAyBAV,MAAAA,MAAM,CAACQ,GAAP,CACE,0BADF,eAEE,oBAAC,uBAAD;AACE,QAAA,UAAU,EAAE,KAAKxK,KAAL,CAAWmK,UADzB;AAEE,QAAA,qBAAqB,EAAE,KAAKnK,KAAL,CAAWyC,qBAFpC;AAGE,QAAA,kBAAkB,EAAE,KAAKrC,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAHlD;AAIE,QAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BqF,kBAJxC;AAKE,QAAA,oBAAoB,EAAE,KAAKxG,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BoJ,oBALpD;AAME,QAAA,UAAU,EAAE,KAAKvK,KAAL,CAAWH,KAAX,CAAiBsB,UAN/B;AAOE,QAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWH,KAAX,CAAiBmB,QAP7B;AAQE,QAAA,2BAA2B,EAAE,KAAKhB,KAAL,CAAW/C,2BAR1C;AASE,QAAA,UAAU,EAAE,KAAK+C,KAAL,CAAWe,UATzB;AAUE,QAAA,cAAc,EAAE,KAAKnB,KAAL,CAAWQ,cAV7B;AAWE,QAAA,YAAY,EAAE,KAAKiG,gBAXrB;AAYE,QAAA,mBAAmB,EAAE,KAAKL,mBAZ5B;AAaE,QAAA,aAAa,EAAE,KAAKhG,KAAL,CAAWhD,aAb5B;AAcE,QAAA,iBAAiB,EAAE,KAAKgD,KAAL,CAAW9C,iBAdhC;AAeE,QAAA,YAAY,EAAE,KAAK8C,KAAL,CAAWwK,YAf3B;AAgBE,QAAA,aAAa,EAAE,KAAKC,aAhBtB;AAiBE,QAAA,cAAc,EAAE,KAAKzK,KAAL,CAAW0K,cAjB7B;AAkBE,QAAA,aAAa,EAAE,KAAKxN,iBAlBtB;AAmBE,QAAA,UAAU,EAAC,0BAnBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AAwBA0M,MAAAA,MAAM,CAACQ,GAAP,CACE,2BADF,eAEE,oBAAC,wBAAD;AACE,QAAA,UAAU,EAAE,KAAKxK,KAAL,CAAWmK,UADzB;AAEE,QAAA,qBAAqB,EAAE,KAAKnK,KAAL,CAAWyC,qBAFpC;AAGE,QAAA,kBAAkB,EAAE,KAAKrC,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAHlD;AAIE,QAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BwJ,mBAJxC;AAKE,QAAA,qBAAqB,EACnB,KAAK3K,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4ByJ,qBANhC;AAQE,QAAA,UAAU,EAAE,KAAK5K,KAAL,CAAWH,KAAX,CAAiBsB,UAR/B;AASE,QAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWH,KAAX,CAAiBmB,QAT7B;AAUE,QAAA,4BAA4B,EAAE,KAAKhB,KAAL,CAAW7C,4BAV3C;AAWE,QAAA,UAAU,EAAE,KAAK6C,KAAL,CAAWe,UAXzB;AAYE,QAAA,cAAc,EAAE,KAAKnB,KAAL,CAAWQ,cAZ7B;AAaE,QAAA,YAAY,EAAE,KAAKiG,gBAbrB;AAcE,QAAA,mBAAmB,EAAE,KAAKL,mBAd5B;AAeE,QAAA,aAAa,EAAE,KAAKhG,KAAL,CAAWhD,aAf5B;AAgBE,QAAA,iBAAiB,EAAE,KAAKgD,KAAL,CAAW9C,iBAhBhC;AAiBE,QAAA,aAAa,EAAE,KAAK2N,4BAjBtB;AAkBE,QAAA,YAAY,EAAE,KAAK7K,KAAL,CAAWwK,YAlB3B;AAmBE,QAAA,aAAa,EAAE,KAAKC,aAnBtB;AAoBE,QAAA,WAAW,EAAE,KAAKzK,KAAL,CAAW8K,WApB1B;AAqBE,QAAA,QAAQ,EAAE,KAAK9K,KAAL,CAAW3C,QArBvB;AAsBE,QAAA,SAAS,EAAE,KAAK2C,KAAL,CAAW1C,SAtBxB;AAuBE,QAAA,UAAU,EAAC,2BAvBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AA4BAsM,MAAAA,MAAM,CAACQ,GAAP,CACE,2BADF,eAEE,oBAAC,wBAAD;AACE,QAAA,UAAU,EAAE,KAAKxK,KAAL,CAAWmK,UADzB;AAEE,QAAA,qBAAqB,EAAE,KAAKnK,KAAL,CAAWyC,qBAFpC;AAGE,QAAA,kBAAkB,EAAE,KAAKrC,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAHlD;AAIE,QAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B4J,mBAJxC;AAKE,QAAA,qBAAqB,EACnB,KAAK/K,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B6J,qBANhC;AAQE,QAAA,UAAU,EAAE,KAAKhL,KAAL,CAAWH,KAAX,CAAiBsB,UAR/B;AASE,QAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWH,KAAX,CAAiBmB,QAT7B;AAUE,QAAA,4BAA4B,EAAE,KAAKhB,KAAL,CAAW5C,4BAV3C;AAWE,QAAA,UAAU,EAAE,KAAK4C,KAAL,CAAWe,UAXzB;AAYE,QAAA,cAAc,EAAE,KAAKnB,KAAL,CAAWQ,cAZ7B;AAaE,QAAA,YAAY,EAAE,KAAKiG,gBAbrB;AAcE,QAAA,mBAAmB,EAAE,KAAKL,mBAd5B;AAeE,QAAA,aAAa,EAAE,KAAKhG,KAAL,CAAWhD,aAf5B;AAgBE,QAAA,iBAAiB,EAAE,KAAKgD,KAAL,CAAW9C,iBAhBhC;AAiBE,QAAA,aAAa,EAAE,KAAK+N,4BAjBtB;AAkBE,QAAA,YAAY,EAAE,KAAKjL,KAAL,CAAWwK,YAlB3B;AAmBE,QAAA,aAAa,EAAE,KAAKC,aAnBtB;AAoBE,QAAA,WAAW,EAAE,KAAKzK,KAAL,CAAW8K,WApB1B;AAqBE,QAAA,QAAQ,EAAE,KAAK9K,KAAL,CAAW3C,QArBvB;AAsBE,QAAA,SAAS,EAAE,KAAK2C,KAAL,CAAW1C,SAtBxB;AAuBE,QAAA,UAAU,EAAC,2BAvBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AA6BA,aAAOsM,MAAP;AACD,KA19EkB;;AAAA,SA49EnBa,aA59EmB,GA49EH,CAAC1I,SAAD,EAAYmJ,QAAZ,KAAyB;AACvC,WAAKC,cAAL,CAAoBC,OAApB,CACE,eADF,EAEE,KAAKpL,KAAL,CAAWqL,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFF,EAGE,KAAKvL,KAAL,CAAWqL,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAHF,EAIE,KAAKvL,KAAL,CAAWqL,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAJF,EAKE,KAAKvL,KAAL,CAAWqL,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CALF,EAME,MACE,KAAKlF,gBAAL,CACEtE,SADF,EAEEmJ,QAFF,EAGEnJ,SAAS,CAACd,UAAV,GAAuBc,SAAS,CAACd,UAAjC,GAA8C,gBAHhD,CAPJ;AAaD,KA1+EkB;;AAAA,SA2+EnB/D,iBA3+EmB,GA2+EC,CAACqF,YAAD,EAAetB,UAAf,KAA8B;AAChD,UAAIH,SAAS,GAAG,EAAhB;AACA,UAAIsF,SAAS,GAAG,KAAKpG,KAAL,CAAWH,KAAX,CAAiBuG,SAAjC;AACA,UAAIrE,SAAS,GAAG,QAAhB;AACAd,MAAAA,UAAU,GAAG,KAAKjB,KAAL,CAAWH,KAAX,CAAiBoB,UAA9B;AACAA,MAAAA,UAAU,GAAG,8BAAb;AACAmF,MAAAA,SAAS,GAAG,IAAZ;AACA,YAAM5D,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,QAAAA,IAAI,EAAE;AAAE0D,UAAAA,SAAF;AAAanF,UAAAA,UAAb;AAAyBH,UAAAA,SAAzB;AAAoCiB,UAAAA;AAApC;AAFW,OAAnB;AAIA,WAAK/B,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,KAv/EkB;;AAAA,SAy/EnBqI,4BAz/EmB,GAy/EY,CAACtI,YAAD,EAAetB,UAAf,KAA8B;AAC3D,UAAIH,SAAS,GAAG,EAAhB;AACA,UAAIsF,SAAS,GAAG,KAAKpG,KAAL,CAAWH,KAAX,CAAiBuG,SAAjC;AACA,UAAIrE,SAAS,GAAG,QAAhB;AACAd,MAAAA,UAAU,GAAG,KAAKjB,KAAL,CAAWH,KAAX,CAAiBoB,UAA9B;AACAA,MAAAA,UAAU,GAAG,+BAAb;AACAmF,MAAAA,SAAS,GAAG,IAAZ;AACA,YAAM5D,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,QAAAA,IAAI,EAAE;AAAE0D,UAAAA,SAAF;AAAanF,UAAAA,UAAb;AAAyBH,UAAAA,SAAzB;AAAoCiB,UAAAA;AAApC;AAFW,OAAnB;AAIA,WAAK/B,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,KArgFkB;;AAAA,SAsgFnByI,4BAtgFmB,GAsgFY,CAAC1I,YAAD,EAAetB,UAAf,KAA8B;AAC3D,UAAIH,SAAS,GAAG,EAAhB;AACA,UAAIsF,SAAS,GAAG,KAAKpG,KAAL,CAAWH,KAAX,CAAiBuG,SAAjC;AACA,UAAIrE,SAAS,GAAG,QAAhB;AACAd,MAAAA,UAAU,GAAG,KAAKjB,KAAL,CAAWH,KAAX,CAAiBoB,UAA9B;AACAA,MAAAA,UAAU,GAAG,+BAAb;AACAmF,MAAAA,SAAS,GAAG,IAAZ;AACA,YAAM5D,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,QAAAA,IAAI,EAAE;AAAE0D,UAAAA,SAAF;AAAanF,UAAAA,UAAb;AAAyBH,UAAAA,SAAzB;AAAoCiB,UAAAA;AAApC;AAFW,OAAnB;AAIA,WAAK/B,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,KAlhFkB;;AAAA,SAohFnBgJ,UAphFmB,GAohFN,MAAM;AACjB,WAAKxJ,SAAL,CAAeyJ,OAAf,CAAuB7K,KAAvB,GAA+B,EAA/B;;AACA,UAAI,KAAKhB,KAAL,CAAW8L,yBAAX,CAAqC9K,KAAzC,EAAgD;AAC9C,YAAIG,UAAU,GAAG;AACfD,UAAAA,SAAS,EAAE;AACT6K,YAAAA,kBAAkB,EAAE,KAAK/L,KAAL,CAAW8L,yBAAX,CAAqC9K,KADhD;AAETuE,YAAAA,QAAQ,EAAE,KAAKnF,KAAL,CAAWH,KAAX,CAAiBmB,QAFlB;AAGT0K,YAAAA,yBAAyB,EAAE,KAAK9L,KAAL,CAAW8L;AAH7B,WADI;AAMf7J,UAAAA,QAAQ,EAAE,YANK;AAOfC,UAAAA,SAAS,EAAE;AAPI,SAAjB;AASA,aAAK9B,KAAL,CAAWlD,8BAAX,CACEiE,UADF,EAEE,KAAKf,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4ByK,wBAF9B;AAID,OAdD,MAcO;AACL5P,QAAAA,KAAK,CAAC6P,IAAN,CACE,KAAK7L,KAAL,CAAWqL,IAAX,CAAgBC,aAAhB,CAA8B;AAC5BC,UAAAA,EAAE,EAAE;AADwB,SAA9B,CADF;AAKD;AACF,KA3iFkB;;AAAA,SA6iFnBO,aA7iFmB,GA6iFH,CAACC,SAAD,EAAY/E,SAAZ,EAAuBgF,MAAvB,KAAkC;AAChD,UAAID,SAAS,KAAK,IAAlB,EAAwB;AACtB,cAAM3L,cAAc,GAAG,KAAKR,KAAL,CAAWQ,cAAX,IAA6B,EAApD;;AACA,gBAAQ4L,MAAR;AACE,eAAK,CAAL;AACE5L,YAAAA,cAAc,CAAC4G,SAAD,CAAd,GAA4B+E,SAA5B;AACA,iBAAK1L,QAAL,CAAc;AAAED,cAAAA;AAAF,aAAd;AACA;;AACF,eAAK,CAAL;AACEA,YAAAA,cAAc,CAAC4G,SAAD,CAAd,GAA4B+E,SAA5B;AACA3L,YAAAA,cAAc,CAAC,kBAAD,CAAd,GAAqC2L,SAAS,CAACnL,KAA/C,CAFF,CAGE;AACA;AACA;;AACA,iBAAKZ,KAAL,CAAWpD,eAAX,CACE,KAAKgD,KAAL,CAAWQ,cAAX,CAA0B6L,gBAD5B,EAEE,KAAKjM,KAAL,CAAWH,KAAX,CAAiBmB,QAFnB,EAGEZ,cAHF,EAIE,KAAKJ,KAAL,CAAWH,KAAX,CAAiBoB,UAJnB;AAMA;;AACF,eAAK,CAAL;AACE,gBAAIyK,yBAAyB,GAC3B,KAAK9L,KAAL,CAAW8L,yBAAX,IAAwC,EAD1C;AAEAA,YAAAA,yBAAyB,GAAGK,SAA5B;AACA,iBAAK/J,SAAL,CAAeyJ,OAAf,CAAuB7K,KAAvB,GAA+B,EAA/B;AACA,iBAAKP,QAAL,CAAc;AAAEqL,cAAAA;AAAF,aAAd;AACA;;AACF;AACE;AA1BJ;AA4BD;AACF,KA7kFkB;;AAAA,SA+kFnBQ,UA/kFmB,GA+kFN,MAAM;AACjB,UAAIvJ,SAAS,GAAG,KAAK3C,KAAL,CAAWH,KAAX,CAAiB8C,SAAjC;AACA,UAAIyD,SAAS,GAAG,KAAKpG,KAAL,CAAWH,KAAX,CAAiBuG,SAAjC;AACA,UAAIhG,cAAc,GAAG,KAAKJ,KAAL,CAAWH,KAAX,CAAiBO,cAAtC;;AACA,UAAI,KAAKJ,KAAL,CAAWH,KAAX,CAAiB8C,SAArB,EAAgC;AAC9B,YAAI,KAAK3C,KAAL,CAAWH,KAAX,CAAiBkC,SAAjB,KAA+B,QAAnC,EAA6C;AAC3CY,UAAAA,SAAS,GAAG,KAAZ;AACAyD,UAAAA,SAAS,GAAG,KAAZ;AACAhG,UAAAA,cAAc,GAAG,EAAjB;AACD,SAJD,MAIO;AACLuC,UAAAA,SAAS,GAAG,KAAZ;AACD;AACF,OARD,MAQO;AACLyD,QAAAA,SAAS,GAAG,KAAZ;AACAhG,QAAAA,cAAc,GAAG,EAAjB;AACD;;AAED,YAAMoC,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,QAAAA,IAAI,EAAE;AAAE0D,UAAAA,SAAF;AAAazD,UAAAA,SAAb;AAAwBvC,UAAAA,cAAxB;AAAwC+L,UAAAA,UAAU,EAAE;AAApD,SAFW,CAGjB;;AAHiB,OAAnB;AAKA,WAAKnM,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,KAtmFkB;;AAAA,SAumFnB4J,cAvmFmB,GAumFF,MAAM;AACrB,UAAIzJ,SAAS,GAAG,KAAK3C,KAAL,CAAWH,KAAX,CAAiB8C,SAAjC;AAEA,UAAIV,SAAS,GAAG,KAAKjC,KAAL,CAAWH,KAAX,CAAiBoC,SAAjC;AACA,UAAI7B,cAAc,GAAG,KAAKJ,KAAL,CAAWH,KAAX,CAAiBO,cAAtC;;AACA,UAAI,KAAKJ,KAAL,CAAWH,KAAX,CAAiB8C,SAArB,EAAgC;AAC9BA,QAAAA,SAAS,GAAG,KAAZ;AACD,OAFD,MAEO;AACLV,QAAAA,SAAS,GAAG,KAAZ;AACA7B,QAAAA,cAAc,GAAG,EAAjB;AACD;;AAED,YAAMoC,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,QAAAA,IAAI,EAAE;AAAET,UAAAA,SAAF;AAAa7B,UAAAA,cAAb;AAA6B+L,UAAAA,UAAU,EAAE,IAAzC;AAA+CxJ,UAAAA;AAA/C;AAFW,OAAnB;AAIA,WAAK3C,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,KAxnFkB;;AAAA,SAquFnB6J,UAruFmB,GAquFN,MAAM;AACjB,UAAIC,UAAU,GAAG,CAAC,KAAKtM,KAAL,CAAWH,KAAX,CAAiByM,UAAnC;AACA,YAAM9J,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,QAAAA,IAAI,EAAE;AAAE4J,UAAAA;AAAF;AAFW,OAAnB;AAIA,WAAKtM,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,KA5uFkB;;AAAA,SA8uFnB+J,WA9uFmB,GA8uFL,MAAM;AAClB,YAAM/J,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE7E,cADO;AAEjB8E,QAAAA,IAAI,EAAE;AAAE4J,UAAAA,UAAU,EAAE;AAAd;AAFW,OAAnB;AAIA,WAAKtM,KAAL,CAAWvD,WAAX,CAAuB+F,UAAvB;AACD,KApvFkB;;AAAA,SAsvFnBgK,cAtvFmB,GAsvFF,MAAM;AACrB,UAAI,KAAK5M,KAAL,CAAW8L,yBAAX,CAAqC9K,KAAzC,EAAgD;AAC9C,YAAIG,UAAU,GAAG;AACfD,UAAAA,SAAS,EAAE;AACT6K,YAAAA,kBAAkB,EAAE,KAAK/L,KAAL,CAAW8L,yBAAX,CAAqC9K,KADhD;AAETuE,YAAAA,QAAQ,EAAE,KAAKnF,KAAL,CAAWH,KAAX,CAAiBmB,QAFlB;AAGT0K,YAAAA,yBAAyB,EAAE,KAAK9L,KAAL,CAAW8L;AAH7B,WADI;AAMf7J,UAAAA,QAAQ,EAAE,YANK;AAOfC,UAAAA,SAAS,EAAE;AAPI,SAAjB;AASA,aAAK9B,KAAL,CAAWlD,8BAAX,CACEiE,UADF,EAEE,KAAKf,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4ByK,wBAF9B;AAID,OAdD,MAcO;AACL5P,QAAAA,KAAK,CAAC6P,IAAN,CACE,KAAK7L,KAAL,CAAWqL,IAAX,CAAgBC,aAAhB,CAA8B;AAC5BC,UAAAA,EAAE,EAAE;AADwB,SAA9B,CADF;AAKD;AACF,KA5wFkB;;AAEjB,UAAM3F,gBAAgB,GAAG;AAAE6G,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,IAAI,EAAE;AAAjB,KAAzB;AACA,SAAK9M,KAAL,GAAa;AACXQ,MAAAA,cAAc,EAAE,EADL;AAEXuM,MAAAA,KAAK,EAAE,EAFI;AAGXtK,MAAAA,qBAAqB,EAAE,EAHZ;AAIXjB,MAAAA,kBAAkB,EAAE8B,SAJT;AAKX6G,MAAAA,UAAU,EAAE,IAAIF,GAAJ,EALD;AAMX/J,MAAAA,UAAU,EAAE,EAND;AAOX8F,MAAAA;AAPW,KAAb;AASA,SAAK5D,SAAL,GAAiB1G,KAAK,CAACsR,SAAN,EAAjB;AACA,SAAKC,eAAL,GAAuB,CAAC,iBAAD,CAAvB;AACA,SAAK1B,cAAL,GAAsB,IAAIxM,cAAJ,EAAtB;AACD;;AA8wB8B,SAAxBmO,wBAAwB,CAAC9M,KAAD,EAAQJ,KAAR,EAAe;AAC5C,QAAII,KAAK,CAACH,KAAN,CAAYkN,YAAZ,KAA6B,EAAjC,EAAqC;AACnC,UAAI/M,KAAK,CAACH,KAAN,CAAYmN,SAAZ,KAA0B,GAA1B,IAAiChN,KAAK,CAACH,KAAN,CAAYmN,SAAZ,KAA0B,GAA/D,EAAoE;AAClEhR,QAAAA,KAAK,CAAC6P,IAAN,CAAW7L,KAAK,CAACH,KAAN,CAAYkN,YAAvB;AACA/M,QAAAA,KAAK,CAACH,KAAN,CAAYkN,YAAZ,GAA2B,EAA3B;AACD;AACF;;AACD,QAAI/M,KAAK,CAACH,KAAN,CAAY8M,KAAZ,KAAsB/M,KAAK,CAAC+M,KAAhC,EAAuC;AACrC3Q,MAAAA,KAAK,CAAC2Q,KAAN,CAAY3M,KAAK,CAACH,KAAN,CAAY8M,KAAxB;AACA3M,MAAAA,KAAK,CAACH,KAAN,CAAY8M,KAAZ,GAAoB,EAApB;AACD;;AACD,QAAI3M,KAAK,CAACH,KAAN,CAAYO,cAAZ,KAA+B8C,SAAnC,EAA8C;AAC5C,aAAO;AAAE9C,QAAAA,cAAc,EAAE;AAAlB,OAAP;AACD;;AACD,WAAO,IAAP;AACD;;AA2dD6M,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,KAAKnN,KAAL,CAAWH,KAAX,CAAiBsB,UAA3C;AACA,QAAIiM,eAAe,GAAG,EAAtB;;AACA,QAAI,KAAKpN,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,gBAApC,EAAsD;AACpDmM,MAAAA,eAAe,CAACtJ,IAAhB,CACE;AACEuJ,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,OAAO,EAAE,wBAFX;AAGEC,QAAAA,SAAS,EAAE,oBAHb;AAIEC,QAAAA,cAAc,EAAE,YAJlB;AAKEC,QAAAA,WAAW,EAAE;AALf,OADF,EAQE;AACEJ,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,OAAO,EAAE,kBAFX;AAGEC,QAAAA,SAAS,EAAE,eAHb;AAIEC,QAAAA,cAAc,EAAE,WAJlB;AAKEC,QAAAA,WAAW,EAAE;AALf,OARF,EAeE;AACEJ,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,OAAO,EAAE,oBAFX;AAGEC,QAAAA,SAAS,EAAE,iBAHb;AAIEC,QAAAA,cAAc,EAAE,WAJlB;AAKEC,QAAAA,WAAW,EAAE;AALf,OAfF,EAsBE;AACEJ,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,OAAO,EAAE,cAFX;AAGEC,QAAAA,SAAS,EAAE,eAHb;AAIEC,QAAAA,cAAc,EAAE,YAJlB;AAKEC,QAAAA,WAAW,EAAE;AALf,OAtBF,EA6BE;AACEJ,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,OAAO,EAAE,eAFX;AAGEC,QAAAA,SAAS,EAAE,cAHb;AAIEC,QAAAA,cAAc,EAAE,YAJlB;AAKEC,QAAAA,WAAW,EAAE;AALf,OA7BF,EAoCE;AACEJ,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,OAAO,EAAE,cAFX;AAGEC,QAAAA,SAAS,EAAE,WAHb;AAIEC,QAAAA,cAAc,EAAE,WAJlB;AAKEC,QAAAA,WAAW,EAAE;AALf,OApCF,EA2CE;AACEJ,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,OAAO,EAAE,sBAFX;AAGEC,QAAAA,SAAS,EAAE,YAHb;AAIEC,QAAAA,cAAc,EAAE,YAJlB;AAKEC,QAAAA,WAAW,EAAE;AALf,OA3CF,CAkDE;AAlDF;;AAoDA,UAAI,KAAK7N,KAAL,CAAWQ,cAAX,CAA0B,cAA1B,CAAJ,EAA+C;AAC7CgN,QAAAA,eAAe,CAACtJ,IAAhB,CAAqB;AACnBuJ,UAAAA,SAAS,EAAE,IADQ;AAEnBC,UAAAA,OAAO,EAAE,cAFU;AAGnBC,UAAAA,SAAS,EAAE,WAHQ;AAInBC,UAAAA,cAAc,EAAE,YAJG;AAKnBC,UAAAA,WAAW,EAAE;AALM,SAArB;AAOD;AACF,KA9DD,MA8DO,IAAI,KAAKzN,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,aAApC,EACLmM,eAAe,CAACtJ,IAAhB,CACE;AACEuJ,MAAAA,SAAS,EAAE,IADb;AAEEC,MAAAA,OAAO,EAAE,aAFX;AAGEC,MAAAA,SAAS,EAAE,cAHb;AAIEC,MAAAA,cAAc,EAAE,YAJlB;AAKEC,MAAAA,WAAW,EAAE;AALf,KADF,EAQE;AACEJ,MAAAA,SAAS,EAAE,IADb;AAEEC,MAAAA,OAAO,EAAE,cAFX;AAGEC,MAAAA,SAAS,EAAE,WAHb;AAIEC,MAAAA,cAAc,EAAE,YAJlB;AAKEC,MAAAA,WAAW,EAAE;AALf,KARF,EADK,KAiBF,IAAI,KAAKzN,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,0BAApC,EAAgE;AACnEmM,MAAAA,eAAe,CAACtJ,IAAhB,CAAqB;AACnBuJ,QAAAA,SAAS,EAAE,IADQ;AAEnBC,QAAAA,OAAO,EAAE,YAFU;AAGnBC,QAAAA,SAAS,EAAE,YAHQ;AAInBC,QAAAA,cAAc,EAAE,YAJG;AAKnBC,QAAAA,WAAW,EAAE;AALM,OAArB;AAOD,KARI,MAQE,IACL,KAAKzN,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,8BAAhC,IACA,KAAKjB,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,+BADhC,IAEA,KAAKjB,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,+BAH3B,EAIL;AACAmM,MAAAA,eAAe,CAACtJ,IAAhB,CAAqB;AACnBwJ,QAAAA,OAAO,EAAE,UADU;AAEnBC,QAAAA,SAAS,EAAE,WAFQ;AAGnBF,QAAAA,SAAS,EAAE,IAHQ;AAInBG,QAAAA,cAAc,EAAE,YAJG;AAKnBC,QAAAA,WAAW,EAAE;AALM,OAArB;AAOD,KAZM,MAYA,IAAI,KAAKzN,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,2BAApC,EAAiE;AACtEmM,MAAAA,eAAe,CAACtJ,IAAhB,CAAqB;AACnBuJ,QAAAA,SAAS,EAAE,IADQ;AAEnBC,QAAAA,OAAO,EAAE,YAFU;AAGnBC,QAAAA,SAAS,EAAE,YAHQ;AAInBC,QAAAA,cAAc,EAAE,YAJG;AAKnBC,QAAAA,WAAW,EAAE;AALM,OAArB;AAOD,KARM,MAQA,IAAI,KAAKzN,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,2BAApC,EAAiE;AACtEmM,MAAAA,eAAe,CAACtJ,IAAhB,CAAqB;AACnBuJ,QAAAA,SAAS,EAAE,IADQ;AAEnBC,QAAAA,OAAO,EAAE,YAFU;AAGnBC,QAAAA,SAAS,EAAE,YAHQ;AAInBC,QAAAA,cAAc,EAAE,YAJG;AAKnBC,QAAAA,WAAW,EAAE;AALM,OAArB;AAOD,KARM,MAQA,IAAI,KAAKzN,KAAL,CAAWH,KAAX,CAAiB6N,UAAjB,KAAgC,cAApC,EAAoD;AACzDN,MAAAA,eAAe,CAACtJ,IAAhB,CAAqB;AACnBuJ,QAAAA,SAAS,EAAE,IADQ;AAEnBC,QAAAA,OAAO,EAAE,YAFU;AAGnBC,QAAAA,SAAS,EAAE,YAHQ;AAInBC,QAAAA,cAAc,EAAE,YAJG;AAKnBC,QAAAA,WAAW,EAAE;AALM,OAArB;AAOD,KA9HM,CAgIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,UAAME,KAAK,GACT,KAAK/N,KAAL,CAAWmK,UAAX,CAAsBC,GAAtB,CAA0B,eAA1B,KACA,KAAKpK,KAAL,CAAWmK,UAAX,CAAsBE,GAAtB,CAA0B,eAA1B,EAA2CC,YAF7C;AAGA,UAAM0D,MAAM,GACV,KAAKhO,KAAL,CAAWmK,UAAX,CAAsBC,GAAtB,CAA0B,gBAA1B,KACA,KAAKpK,KAAL,CAAWmK,UAAX,CAAsBE,GAAtB,CAA0B,gBAA1B,EAA4CC,YAF9C;AAGA,UAAMgB,QAAQ,GACZ,KAAKtL,KAAL,CAAWmK,UAAX,CAAsBC,GAAtB,CAA0B,kBAA1B,KACA,KAAKpK,KAAL,CAAWmK,UAAX,CAAsBE,GAAtB,CAA0B,kBAA1B,EAA8CC,YAFhD,CA/IO,CAkJP;AACA;;AACA,UAAM;AAAE9I,MAAAA;AAAF,QAAyB,KAAKpB,KAAL,CAAWH,KAAX,CAAiBsB,UAAhD;AACA,UAAM0M,WAAW,GAAG;AAClBvK,MAAAA,aAAa,EAAE,YADG;AAElBC,MAAAA,cAAc,EAAE,oBAFE;AAGlBC,MAAAA,eAAe,EAAE,iBAHC;AAIlBoD,MAAAA,QAAQ,EAAE,0BAJQ;AAKlBC,MAAAA,gBAAgB,EAAE;AAAE1B,QAAAA,QAAQ,EAAE,KAAKnF,KAAL,CAAWH,KAAX,CAAiBmB;AAA7B,OALA;AAMlBG,MAAAA,UAAU,EAAE,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UANX;AAOlB0L,MAAAA,eAAe,EAAE,KAAKA;AAPJ,KAApB;AASA,UAAMiB,cAAc,GAAG,KAAKlO,KAAL,CAAWmO,UAAX,IAAyB,EAAhD;AACA,wBACE,uDACE;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,cAAc,CAAC/F,MAAf,GAAwB,CAAxB,gBACC,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,mBAAD;AAAqB,MAAA,cAAc,EAAE+F,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAKC,EANJ,eAQE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,aAAa,EAAE,KAAK9N,KAAL,CAAWqL,IAAX,CAAgBC,aADjC;AAEE,MAAA,UAAU,EAAE,YAFd;AAGE,MAAA,UAAU,EAAE,KAAKtL,KAAL,CAAWH,KAAX,CAAiBsB,UAH/B;AAIE,MAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWH,KAAX,CAAiBmB,QAJ7B;AAKE,MAAA,UAAU,EACR,KAAKhB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4B6M,YAA5B,IACA,KAAKhO,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BrB,UAPhC;AASE,MAAA,eAAe,EAAGA,UAAD,IACf,KAAKE,KAAL,CAAWrD,mBAAX,CACEmD,UADF,EAEE,KAAKE,KAAL,CAAWH,KAAX,CAAiBmB,QAFnB,EAGE,KAAKhB,KAAL,CAAWH,KAAX,CAAiBsB,UAHnB,CAVJ;AAgBE,MAAA,cAAc,EAAE,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAhB9C;AAiBE,MAAA,eAAe,EAAC,iBAjBlB;AAkBE,MAAA,SAAS,EAAC,iBAlBZ;AAmBE,MAAA,UAAU,EAAC,eAnBb;AAoBE,MAAA,WAAW,EAAC,oBApBd;AAqBE,MAAA,UAAU,EAAC,KArBb;AAsBE,MAAA,gBAAgB,EAAE,KAAKpB,KAAL,CAAWjD,gBAtB/B;AAuBE,MAAA,WAAW,EAAE8Q,WAvBf;AAwBE,MAAA,qBAAqB,EAAE,KAAKjO,KAAL,CAAWyC,qBAxBpC,CAyBE;AAzBF;AA0BE,MAAA,SAAS,EAAE,KAAKL,SA1BlB,CA2BE;AA3BF;AA4BE,MAAA,KAAK,EAAE2L,KA5BT;AA6BE,MAAA,UAAU,EAAE,IA7Bd;AA8BE,MAAA,UAAU,EAAE,KAAKnC,UA9BnB;AA+BE,MAAA,SAAS,EAAE,MACT,KAAKxL,KAAL,CAAWtD,kBAAX,CACE,gBADF,EAEE,QAFF,EAGE,iBAHF,EAIE,KAAKsD,KAAL,CAAWH,KAAX,CAAiBsB,UAJnB,EAKE,KAAKnB,KAAL,CAAWH,KAAX,CAAiBmB,QALnB,EAME2M,KANF,CAhCJ;AAyCE,MAAA,UAAU,EAAE,KAAKtB,UAzCnB;AA0CE,MAAA,WAAW,EAAE,KAAKE,WA1CpB;AA2CE,MAAA,cAAc,EAAE,KAAKC,cA3CvB;AA4CE,MAAA,cAAc,EAAE,IA5ClB;AA6CE,MAAA,UAAU,EAAE,KAAKxM,KAAL,CAAWH,KAAX,CAAiByM,UA7C/B;AA8CE,MAAA,eAAe,EAAE,CACf;AACE2B,QAAAA,4BAA4B,eAC1B,oBAAC,wBAAD;AACE,UAAA,wBAAwB,EACtB,KAAKrO,KAAL,CAAWgM,wBAAX,IAAuC,EAF3C;AAIE,UAAA,yBAAyB,EACvB,KAAKhM,KAAL,CAAW8L,yBAAX,IAAwC,EAL5C;AAOE,UAAA,aAAa,EAAE,KAAKI,aAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,OADe,CA9CnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAiEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAK9L,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,gBACC,uDACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,cAAc,EAAC,OAFjB;AAGE,MAAA,EAAE,EAAC,mBAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKpB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CACG8M,eAHP,CANF,eAYE,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD,CAAK,IAAL;AACE,MAAA,IAAI,EAAC,gBADP;AAEE,kBAAU,KAAKlO,KAAL,CAAWqL,IAAX,CAAgBC,aAAhB,CAA8B;AACtCC,QAAAA,EAAE,EAAE;AADkC,OAA9B,CAFZ;AAKE,kBAAS,mBALX;AAME,MAAA,MAAM,EACJ,KAAK3L,KAAL,CAAWyC,qBAAX,CAAiC8L,OAAjC,CACEP,MADF,MAEM,CAAC,CATX;AAWE,MAAA,SAAS,EAAC,kCAXZ,CAYE;AAZF;AAaE,MAAA,OAAO,EAAGQ,CAAD,IACP,KAAKpO,KAAL,CAAWtD,kBAAX,CACE,gBADF,EAEE,QAFF,EAGE,iBAHF,EAIE,KAAKsD,KAAL,CAAWH,KAAX,CAAiBsB,UAJnB,EAKE,KAAKnB,KAAL,CAAWH,KAAX,CAAiBmB,QALnB,EAME4M,MANF,CAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAwBE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEzR,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,CADF,eA2BE,oBAAC,GAAD,CAAK,IAAL;AACE,MAAA,IAAI,EAAC,kBADP;AAEE,MAAA,SAAS,EAAC,oDAFZ;AAGE,kBAAU,KAAK6D,KAAL,CAAWqL,IAAX,CAAgBC,aAAhB,CAA8B;AACtCC,QAAAA,EAAE,EAAE;AADkC,OAA9B,CAHZ;AAME,kBAAS,mBANX;AAOE,MAAA,MAAM,EACJ,KAAK3L,KAAL,CAAWyC,qBAAX,CAAiC8L,OAAjC,CACEjD,QADF,MAEM,CAAC,CAVX;AAYE,MAAA,OAAO,EAAE,MACP,KAAKT,aAAL,CACE;AACE1I,QAAAA,SAAS,EAAE,QADb;AAEEd,QAAAA,UAAU,EAAE;AAFd,OADF,EAKEiK,QALF,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAsBE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE9O,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,CA3BF,CAVF,CADF,CAZF,CADF,eA0FE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,oBADL;AAEE,MAAA,OAAO,EAAC,gBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAK4D,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsB8M,eAH1B,CAPF,CADF,CADF,eAiBE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,kBADL;AAEE,MAAA,OAAO,EAAC,eAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKlO,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsBiN,aAH1B,CAPF,CADF,CAjBF,eAkCE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,OAAO,EAAC,gBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKrO,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsBkN,cAH1B,CAPF,CADF,CAlCF,eAmDE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,OAAO,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtO,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACEC,kBADF,CACqBmN,YADrB,KAEC,IAFD,IAGD,KAAKvO,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsBmN,YADtB,CAEGxG,MAFH,KAEc,CALb,GAMG,GANH,GAOG,KAAK/H,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsBmN,YAT5B,CAPF,CADF,CAnDF,eAyEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,OAAO,EAAC,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKvO,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACEC,kBADF,CACqBoN,KADrB,KAC+B,IAD/B,IAED,KAAKxO,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsBoN,KADtB,CAC4BzG,MAD5B,KACuC,CAHtC,GAIG,GAJH,GAKG,KAAK/H,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsBoN,KAP5B,CAPF,CADF,CAzEF,eAoGE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,sBADL;AAEE,MAAA,OAAO,EAAC,iBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKxO,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACEC,kBADF,CACqBqN,YADrB,KAEC,IAFD,IAGD,KAAKzO,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsBqN,YADtB,CAEG1G,MAFH,KAEc,CALb,GAMG,GANH,GAOG,KAAK/H,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsBqN,YAT5B,CAPF,CADF,CApGF,eA0HE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,OAAO,EAAC,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKzO,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACEC,kBADF,CACqBsN,OADrB,KACiC,IADjC,IAED,KAAK1O,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsBsN,OADtB,KACkC,CAHjC,GAIG,GAJH,GAKG,KAAK1O,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsBuN,OAP5B,CAPF,CADF,CA1HF,eA8IE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,kBADL;AAEE,MAAA,OAAO,EAAC,aAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK3O,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACEC,kBADF,CACqBwN,aADrB,KAEC,IAFD,IAGD,KAAK5O,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsBwN,aADtB,CAEG7G,MAFH,KAEc,CALb,GAMG,GANH,GAOG,KAAK/H,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsBwN,aAT5B,CAPF,CADF,CA9IF,eAoKE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,sBADL;AAEE,MAAA,OAAO,EAAC,kBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK5O,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACEC,kBADF,CACqByN,iBADrB,KAEC,IAFD,IAGD,KAAK7O,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsByN,iBADtB,CAEG9G,MAFH,KAEc,CALb,GAMG,GANH,GAOG,KAAK/H,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsByN,iBAT5B,CAPF,CADF,CApKF,eA0LE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,OAAO,EAAC,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK7O,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACEC,kBADF,CACqB0N,WADrB,KAEC,IAFD,IAGD,KAAK9O,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsB0N,WADtB,CACkC/G,MADlC,KAEE,CALD,GAMG,GANH,GAOG,KAAK/H,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsB0N,WAT5B,CAPF,CADF,CA1LF,eAgNE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAK9O,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsB2N,SAH1B,CAPF,CADF,CAhNF,eAiOE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,sBADL;AAEE,MAAA,OAAO,EAAC,kBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK/O,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACEC,kBADF,CACqB4N,aADrB,KAEC,IAFD,IAGD,KAAKhP,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsB4N,aADtB,CAEGjH,MAFH,KAEc,CALb,GAMG,GANH,GAOG,KAAK/H,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsB4N,aAT5B,CARF,CADF,CAjOF,eAwPE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,OAAO,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhP,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACEC,kBADF,CACqB6N,QADrB,KACkC,IADlC,IAED,KAAKjP,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsB6N,QADtB,CAC+BlH,MAD/B,KAC0C,CAHzC,GAIG,GAJH,GAKG,KAAK/H,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CACGC,kBADH,CACsB6N,QAP5B,CAPF,CADF,CAxPF,CADF,EA6QG7N,kBAAkB,iBACjB,oBAAC,SAAD;AACE,MAAA,SAAS,EAAE,KAAKuI,SAAL,EADb;AAEE,MAAA,WAAW,EAAE,KAAKP,WAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9QJ,CA1FF,CADD,GAiXC,EAnXJ,CADF,CADF,CADF,CADF,CAjEF,CARF,CADF,EA0cG,KAAKpJ,KAAL,CAAWH,KAAX,CAAiBuG,SAAjB,iBACC,oBAAC,aAAD;AACE,MAAA,IAAI,EAAE,KAAKpG,KAAL,CAAWH,KAAX,CAAiBuG,SADzB;AAEE,MAAA,UAAU,EAAE,KAAK8F,UAFnB;AAGE,MAAA,SAAS,EAAE,KAAKlM,KAAL,CAAWH,KAAX,CAAiBkC,SAH9B;AAIE,MAAA,UAAU,EAAE,KAAK/B,KAAL,CAAWH,KAAX,CAAiBkB,UAJ/B;AAKE,MAAA,UAAU,EAAE,KAAKf,KAAL,CAAWH,KAAX,CAAiBoB,UAL/B;AAME,MAAA,WAAW,EAAE,KAAK4B,WANpB;AAOE,MAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWH,KAAX,CAAiB8C,SAP1B;AAQE,MAAA,aAAa,EAAE,KAAKuC,aARtB;AASE,MAAA,YAAY,EAAE,KAAKlF,KAAL,CAAWH,KAAX,CAAiBkN,YATjC;AAUE,MAAA,eAAe,EAAEK,eAVnB;AAWE,MAAA,WAAW,EAAE,KAAKpN,KAAL,CAAWvD,WAX1B;AAYE,MAAA,cAAc,EAAE,KAAKmD,KAAL,CAAWQ,cAAX,IAA6B,EAZ/C;AAaE,MAAA,YAAY,EACV,KAAKJ,KAAL,CAAWH,KAAX,CAAiB8C,SAAjB,gBACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAE,KAAK3C,KAAL,CAAWH,KAAX,CAAiBkC,SAD9B;AAEE,QAAA,eAAe,EAAE,KAAKzB,eAFxB;AAGE,QAAA,UAAU,EAAE,KAAKN,KAAL,CAAWH,KAAX,CAAiBkB,UAH/B;AAIE,QAAA,cAAc,EAAE,KAAKnB,KAAL,CAAWQ,cAAX,IAA6B,EAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAOI,KAAKJ,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,gBAAhC,gBACF,oBAAC,aAAD;AACE,QAAA,sBAAsB,EAAE,KAAKgE,sBAD/B;AAEE,QAAA,cAAc,EAAE,KAAKjF,KAAL,CAAWH,KAAX,CAAiBO,cAAjB,IAAmC,EAFrD;AAGE,QAAA,eAAe,EAAE,KAAKE,eAHxB;AAIE,QAAA,aAAa,EAAE,KAAKwL,aAJtB;AAKE,QAAA,kBAAkB,EAAE,KAAK9L,KAAL,CAAWH,KAAX,CAAiBqP,kBALvC;AAME,QAAA,QAAQ,EAAE,KAAKlP,KAAL,CAAWH,KAAX,CAAiBsP,QAN7B;AAOE,QAAA,YAAY,EAAE,KAAKnP,KAAL,CAAWH,KAAX,CAAiBuP,YAPjC;AAQE,QAAA,gBAAgB,EAAE,KAAKpP,KAAL,CAAWH,KAAX,CAAiBwP,gBARrC;AASE,QAAA,gBAAgB,EAAE,KAAKpP,gBATzB;AAUE,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWH,KAAX,CAAiByP,GAVxB;AAWE,QAAA,MAAM,EAAE,KAAKtP,KAAL,CAAWH,KAAX,CAAiB0P,MAX3B;AAYE,QAAA,YAAY,EAAE,KAAKvP,KAAL,CAAWH,KAAX,CAAiB2P,YAZjC;AAaE,QAAA,YAAY,EAAE,KAAKxP,KAAL,CAAWH,KAAX,CAAiB4P,KAbjC;AAcE,QAAA,SAAS,EAAE,KAAKzP,KAAL,CAAWH,KAAX,CAAiBkC,SAd9B;AAeE,QAAA,UAAU,EAAE,KAAK/B,KAAL,CAAWe,UAfzB;AAgBE,QAAA,YAAY,EAAE,KAAKf,KAAL,CAAWH,KAAX,CAAiB6P,gBAhBjC;AAiBE,QAAA,QAAQ,EAAE,KAAK1P,KAAL,CAAWH,KAAX,CAAiBmB,QAjB7B;AAkBE,QAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWH,KAAX,CAAiB8P,WAlBhC;AAmBE,QAAA,UAAU,EAAE,KAAK3P,KAAL,CAAWH,KAAX,CAAiB+P,UAnB/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,GAsBA,KAAK5P,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,aAAhC,gBACF,oBAAC,oBAAD;AACE,QAAA,cAAc,EAAE,KAAKrB,KAAL,CAAWQ,cAAX,IAA6B,EAD/C;AAEE,QAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWH,KAAX,CAAiByP,GAFxB;AAGE,QAAA,KAAK,EAAE,KAAKtP,KAAL,CAAWH,KAAX,CAAiB4P,KAH1B,CAIE;AAJF;AAKE,QAAA,aAAa,EAAE,KAAK3D,aALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,GAQA,KAAK9L,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,0BAAhC,gBACF,oBAAC,uBAAD;AACE,QAAA,cAAc,EAAE,KAAKrB,KAAL,CAAWQ,cAAX,IAA6B,EAD/C;AAEE,QAAA,gBAAgB,EAAE,KAAKJ,KAAL,CAAWH,KAAX,CAAiBgQ,gBAFrC;AAGE,QAAA,YAAY,EAAE,KAAK7P,KAAL,CAAWH,KAAX,CAAiB2P,YAHjC;AAIE,QAAA,YAAY,EACV,KAAKxP,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CiN,aALnD;AAOE,QAAA,eAAe,EAAE,KAAK/N,eAPxB;AAQE,QAAA,WAAW,EAAE,KAAKN,KAAL,CAAWH,KAAX,CAAiB8P,WARhC;AASE,QAAA,QAAQ,EAAE,KAAK3P,KAAL,CAAWH,KAAX,CAAiBmB,QAT7B;AAUE,QAAA,gBAAgB,EAAE,KAAKf,gBAVzB;AAWE,QAAA,aAAa,EAAE,KAAK6L,aAXtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,GAcA,KAAK9L,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KACF,8BADE,gBAEF,oBAAC,iBAAD;AACE,QAAA,cAAc,EAAE,KAAKjB,KAAL,CAAWH,KAAX,CAAiBO,cAAjB,IAAmC,EADrD;AAEE,QAAA,eAAe,EAAE,KAAKE,eAFxB;AAGE,QAAA,MAAM,EAAE,KAAKgJ,cAHf;AAIE,QAAA,KAAK,EAAE,KAAKtJ,KAAL,CAAWqL,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAJT;AAKE,QAAA,gBAAgB,EAAE,KAAKzE,gBALzB;AAME,QAAA,OAAO,EAAE,EANX;AAOE,QAAA,QAAQ,EAAE,CAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFE,GAWA,KAAK9G,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KACF,2BADE,gBAEF,oBAAC,wBAAD;AACE,QAAA,cAAc,EAAE,KAAKjB,KAAL,CAAWH,KAAX,CAAiBO,cAAjB,IAAmC,EADrD;AAEE,QAAA,iBAAiB,EAAE,KAAKJ,KAAL,CAAWH,KAAX,CAAiBiQ,iBAFtC;AAGE,QAAA,YAAY,EAAE,KAAK9P,KAAL,CAAWH,KAAX,CAAiB2P,YAHjC;AAIE,QAAA,YAAY,EACV,KAAKxP,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CiN,aALnD;AAOE,QAAA,eAAe,EAAE,KAAK/N,eAPxB;AAQE,QAAA,WAAW,EAAE,KAAKN,KAAL,CAAWH,KAAX,CAAiB8P,WARhC;AASE,QAAA,QAAQ,EAAE,KAAK3P,KAAL,CAAWH,KAAX,CAAiBmB,QAT7B;AAUE,QAAA,gBAAgB,EAAE,KAAKf,gBAVzB;AAWE,QAAA,aAAa,EAAE,KAAK6L,aAXtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFE,GAeA,KAAK9L,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KACF,+BADE,gBAEF,oBAAC,iBAAD;AACE,QAAA,cAAc,EAAE,KAAKjB,KAAL,CAAWH,KAAX,CAAiBO,cAAjB,IAAmC,EADrD;AAEE,QAAA,eAAe,EAAE,KAAKE,eAFxB;AAGE,QAAA,MAAM,EAAE,KAAKgJ,cAHf;AAIE,QAAA,KAAK,EAAE,KAAKtJ,KAAL,CAAWqL,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAJT;AAKE,QAAA,gBAAgB,EAAE,KAAKzE,gBALzB;AAME,QAAA,OAAO,EAAE,EANX;AAOE,QAAA,QAAQ,EAAE,CAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFE,GAWA,KAAK9G,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KACF,2BADE,gBAEF,oBAAC,wBAAD;AACE,QAAA,cAAc,EAAE,KAAKjB,KAAL,CAAWH,KAAX,CAAiBO,cAAjB,IAAmC,EADrD;AAEE,QAAA,iBAAiB,EAAE,KAAKJ,KAAL,CAAWH,KAAX,CAAiBkQ,iBAFtC;AAGE,QAAA,YAAY,EAAE,KAAK/P,KAAL,CAAWH,KAAX,CAAiB2P,YAHjC;AAIE,QAAA,YAAY,EACV,KAAKxP,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BC,kBAA5B,CAA+CiN,aALnD;AAOE,QAAA,eAAe,EAAE,KAAK/N,eAPxB;AAQE,QAAA,WAAW,EAAE,KAAKN,KAAL,CAAWH,KAAX,CAAiB8P,WARhC;AASE,QAAA,QAAQ,EAAE,KAAK3P,KAAL,CAAWH,KAAX,CAAiBmB,QAT7B;AAUE,QAAA,gBAAgB,EAAE,KAAKf,gBAVzB;AAWE,QAAA,aAAa,EAAE,KAAK6L,aAXtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFE,GAeA,KAAK9L,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KACF,+BADE,gBAEF,oBAAC,iBAAD;AACE,QAAA,cAAc,EAAE,KAAKjB,KAAL,CAAWH,KAAX,CAAiBO,cAAjB,IAAmC,EADrD;AAEE,QAAA,eAAe,EAAE,KAAKE,eAFxB;AAGE,QAAA,MAAM,EAAE,KAAKgJ,cAHf;AAIE,QAAA,KAAK,EAAE,KAAKtJ,KAAL,CAAWqL,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAJT;AAKE,QAAA,gBAAgB,EAAE,KAAKzE,gBALzB;AAME,QAAA,OAAO,EAAE,EANX;AAOE,QAAA,QAAQ,EAAE,CAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFE,GAYF,EAjIN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3cJ,EAklBG,KAAK9G,KAAL,CAAWH,KAAX,CAAiBoC,SAAjB,gBACC,oBAAC,SAAD;AACE,MAAA,SAAS,EAAE,KAAKjC,KAAL,CAAWH,KAAX,CAAiBoC,SAD9B;AAEE,MAAA,UAAU,EAAE,KAAKmK,cAFnB;AAGE,MAAA,WAAW,EAAE,KAAKvL,gBAHpB;AAIE,MAAA,aAAa,EAAE,KAAKqE,aAJtB;AAKE,MAAA,YAAY,EAAE,KAAKlF,KAAL,CAAWH,KAAX,CAAiBkN,YALjC;AAME,MAAA,eAAe,EAAEK,eANnB;AAOE,MAAA,WAAW,EAAE,KAAKpN,KAAL,CAAWvD,WAP1B;AAQE,MAAA,cAAc,EAAE,KAAKmD,KAAL,CAAWQ,cAAX,IAA6B,EAR/C;AASE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWH,KAAX,CAAiB8C,SAT1B;AAUE,MAAA,UAAU,EAAE,KAAK3C,KAAL,CAAWH,KAAX,CAAiB6N,UAV/B;AAWE,MAAA,SAAS,EACP,KAAK1N,KAAL,CAAWH,KAAX,CAAiB8C,SAAjB,gBACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAE,KAAK3C,KAAL,CAAWH,KAAX,CAAiBkC,SAD9B;AAEE,QAAA,eAAe,EAAE,KAAKzB,eAFxB;AAGE,QAAA,UAAU,EAAE,KAAKN,KAAL,CAAWH,KAAX,CAAiBkB,UAH/B;AAIE,QAAA,cAAc,EAAE,KAAKnB,KAAL,CAAWQ,cAAX,IAA6B,EAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAOI,KAAKJ,KAAL,CAAWH,KAAX,CAAiB6N,UAAjB,KAAgC,cAAhC,gBACF,oBAAC,WAAD;AACE,QAAA,cAAc,EAAE,KAAK1N,KAAL,CAAWH,KAAX,CAAiBO,cAAjB,IAAmC,EADrD;AAEE,QAAA,MAAM,EACJ,KAAKJ,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,2BAAhC,GACI,KAAKjB,KAAL,CAAWH,KAAX,CAAiBiQ,iBADrB,GAEI,KAAK9P,KAAL,CAAWH,KAAX,CAAiBkQ,iBALzB;AAOE,QAAA,YAAY,EAAE,KAAK/P,KAAL,CAAWH,KAAX,CAAiB2P,YAPjC;AAQE,QAAA,eAAe,EAAE,KAAKlP,eARxB;AASE,QAAA,gBAAgB,EAAE,KAAKL,gBATzB;AAUE,QAAA,aAAa,EAAE,KAAK6L,aAVtB;AAWE,QAAA,QAAQ,EAAE,KAAK9L,KAAL,CAAWH,KAAX,CAAiBmB,QAX7B;AAYE,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWH,KAAX,CAAiB8C,SAZ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,gBAgBF,oBAAC,YAAD;AACE,QAAA,cAAc,EAAE,KAAK3C,KAAL,CAAWH,KAAX,CAAiBO,cAAjB,IAAmC,EADrD;AAEE,QAAA,MAAM,EACJ,KAAKJ,KAAL,CAAWH,KAAX,CAAiBoB,UAAjB,KAAgC,2BAAhC,GACI,KAAKjB,KAAL,CAAWH,KAAX,CAAiBiQ,iBADrB,GAEI,KAAK9P,KAAL,CAAWH,KAAX,CAAiBkQ,iBALzB;AAOE,QAAA,YAAY,EAAE,KAAK/P,KAAL,CAAWH,KAAX,CAAiB2P,YAPjC;AAQE,QAAA,eAAe,EAAE,KAAKlP,eARxB;AASE,QAAA,gBAAgB,EAAE,KAAKL,gBATzB;AAUE,QAAA,aAAa,EAAE,KAAK6L,aAVtB;AAWE,QAAA,QAAQ,EAAE,KAAK9L,KAAL,CAAWH,KAAX,CAAiBmB,QAX7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnCN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAqDC,EAvoBJ,CADF;AA4oBD;;AAwkBDgP,EAAAA,kBAAkB,CAACC,aAAD,EAAgB;AAChC,QAAIC,WAAW,GAAG,KAAlB;AACA,QAAI;AACF9P,MAAAA,cADE;AAEFiC,MAAAA,qBAFE;AAGF0H,MAAAA,UAHE;AAIFgE,MAAAA,UAJE;AAKFrC,MAAAA,yBALE;AAMFE,MAAAA;AANE,QAOA,KAAKhM,KAPT;;AAQA,QACE,KAAKI,KAAL,CAAWH,KAAX,CAAiBO,cAAjB,KAAoC6P,aAAa,CAACpQ,KAAd,CAAoBO,cAD1D,EAEE;AACAA,MAAAA,cAAc,GAAG,KAAKJ,KAAL,CAAWH,KAAX,CAAiBO,cAAlC;AACA8P,MAAAA,WAAW,GAAG,IAAd;AACD;;AACD,QACE,KAAKlQ,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAA1B,KACA2N,aAAa,CAACpQ,KAAd,CAAoBmB,QAApB,CAA6BsB,SAF/B,EAGE;AACAD,MAAAA,qBAAqB,GAAG,EAAxB;;AACA,UAAI,KAAKrC,KAAL,CAAWH,KAAX,CAAiBwC,qBAArB,EAA4C;AAC1C,aAAKrC,KAAL,CAAWH,KAAX,CAAiBwC,qBAAjB,CACE,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAD5B,KAGE6F,MAAM,CAACgI,MAAP,CACE,KAAKnQ,KAAL,CAAWH,KAAX,CAAiBwC,qBAAjB,CACE,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAD5B,CADF,EAIEoB,GAJF,CAIOC,IAAD,IAAUtB,qBAAqB,CAACyB,IAAtB,CAA2BH,IAAI,CAACuG,YAAhC,CAJhB,CAHF;AAQD;;AACDH,MAAAA,UAAU,GAAG9L,aAAa,CACxB,KAAK+B,KAAL,CAAWH,KAAX,CAAiBwC,qBADO,EAExB,KAAKrC,KAAL,CAAWH,KAAX,CAAiBmB,QAAjB,CAA0BsB,SAFF,CAA1B,CAZA,CAgBA;;AACA4N,MAAAA,WAAW,GAAG,IAAd;AACD;;AACD,QAAI,KAAKlQ,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,KAAgC8O,aAAa,CAACpQ,KAAd,CAAoBsB,UAAxD,EAAoE;AAClEuK,MAAAA,yBAAyB,GAAG,KAAK9L,KAAL,CAAW8L,yBAAX,IAAwC,EAApE;;AACA,UACE,KAAK1L,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BiP,cAA5B,IACA,KAAKpQ,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BiP,cAA5B,KACEH,aAAa,CAACpQ,KAAd,CAAoBsB,UAApB,CAA+BiP,cAHnC,EAIE;AACA1E,QAAAA,yBAAyB,GAAG;AAC1B9H,UAAAA,KAAK,EAAE,KAAK5D,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BiP,cAA5B,CAA2CC,kBADxB;AAE1BzP,UAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BiP,cAA5B,CAA2CzE,kBAFxB;AAG1BhI,UAAAA,IAAI,EAAE,KAAK3D,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BiP;AAHR,SAA5B;AAKD;;AACDrC,MAAAA,UAAU,GAAG,KAAKuC,qBAAL,EAAb,CAbkE,CAclE;;AACAJ,MAAAA,WAAW,GAAG,IAAd;AACD;;AACD,QACE,KAAKlQ,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4ByK,wBAA5B,KACAqE,aAAa,CAACpQ,KAAd,CAAoBsB,UAApB,CAA+ByK,wBAFjC,EAGE;AACA,YAAM2E,cAAc,GAAGrS,mBAAmB,CACxC,KAAK8B,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4ByK,wBAA5B,IAAwD,EADhB,EAExC,oBAFwC,EAGxC,oBAHwC,EAIxC,mBAJwC,EAKxC,WALwC,EAMxC,KANwC,CAA1C;AAQAA,MAAAA,wBAAwB,GAAG2E,cAAc,CAACtG,GAAf,CAAmB,YAAnB,CAA3B;;AACA,UAAIsG,cAAc,CAACtG,GAAf,CAAmB,cAAnB,CAAJ,EAAwC;AACtCyB,QAAAA,yBAAyB,GAAG6E,cAAc,CAACtG,GAAf,CAAmB,cAAnB,CAA5B;AACD,OAFD,MAEO,IACL2B,wBAAwB,IACxBA,wBAAwB,CAAC7D,MAAzB,GAAkC,CAF7B,EAGL;AACA2D,QAAAA,yBAAyB,GAAGE,wBAAwB,CAAC,CAAD,CAApD;AACD,OAjBD,CAkBA;;;AACAsE,MAAAA,WAAW,GAAG,IAAd;AACD;;AACD,QAAIA,WAAJ,EAAiB;AACf,WAAK7P,QAAL,CAAc;AACZ;AACAD,QAAAA,cAFY;AAGZiC,QAAAA,qBAHY;AAIZ0H,QAAAA,UAJY;AAKZgE,QAAAA,UALY;AAMZrC,QAAAA,yBANY;AAOZE,QAAAA;AAPY,OAAd;AASD;AACF;;AACD0E,EAAAA,qBAAqB,GAAG;AACtB,UAAMxC,cAAc,GAAG,EAAvB;;AACA,QACE,KAAK9N,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,IACA,KAAKnB,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4ByK,wBAF9B,EAGE;AACAkC,MAAAA,cAAc,CAAChK,IAAf,CAAoB;AAClBF,QAAAA,KAAK,EAAE,wBADW;AAElBhD,QAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BiP,cAA5B,GACH,KAAKpQ,KAAL,CAAWH,KAAX,CAAiBsB,UAAjB,CAA4BiP,cAA5B,CAA2CC,kBADxC,GAEH;AAJc,OAApB;AAMD;;AACD,WAAOvC,cAAP;AACD;;AApuFgC;;AAgxFnC,eAAe/R,OAAO,CAAC4D,eAAD,EAAkB;AACtCrD,EAAAA,WADsC;AAEtCC,EAAAA,UAFsC;AAGtCI,EAAAA,mBAHsC;AAItCI,EAAAA,gBAJsC;AAKtCL,EAAAA,kBALsC;AAMtCD,EAAAA,WANsC;AAOtCD,EAAAA,uBAPsC;AAQtCI,EAAAA,eARsC;AAStCC,EAAAA,oBATsC;AAUtCC,EAAAA,8BAVsC;AAWtCE,EAAAA,aAXsC;AAYtCC,EAAAA,2BAZsC;AAatCC,EAAAA,iBAbsC;AActCC,EAAAA,4BAdsC;AAetCC,EAAAA,4BAfsC;AAgBtCC,EAAAA,QAhBsC;AAiBtCC,EAAAA;AAjBsC,CAAlB,CAAP,CAkBZjB,UAAU,CAACyD,UAAD,CAlBE,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Nav,\r\n  FormGroup,\r\n  FormLabel,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { injectIntl } from \"react-intl\";\r\nimport {\r\n  callService,\r\n  crudMaster,\r\n  validateEsignCredential,\r\n  updateStore,\r\n  getInstrumentCombo,\r\n  getInstrumentDetail,\r\n  getSectionUsers,\r\n  getAvailableInstData,\r\n  changeInstrumentCategoryFilter,\r\n  filterColumnData,\r\n  getTabDetails,\r\n  getDataForAddEditValidation,\r\n  addInstrumentFile,\r\n  getDataForAddEditCalibration,\r\n  getDataForAddEditMaintenance,\r\n  OpenDate,\r\n  CloseDate,\r\n} from \"../../actions\";\r\n\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport {\r\n  attachmentType,\r\n  transactionStatus,\r\n} from \"../../components/Enumeration\";\r\nimport AddInstrument from \"../../pages/instrumentmanagement/AddInstrument\";\r\nimport AddInstrumentSection from \"../../pages/instrumentmanagement/AddInstrumentSection\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\n//import SlideOutModal from '../../components/SlideOutModal';\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\nimport CustomTab from \"../../components/custom-tabs/custom-tabs.component\";\r\nimport Esign from \"../audittrail/Esign\";\r\nimport {\r\n  showEsign,\r\n  getControlMap,\r\n  constructOptionList,\r\n  formatInputDate,\r\n  onDropAttachFileList,\r\n  create_UUID,\r\n  deleteAttachmentDropZone,\r\n} from \"../../components/CommonScript\";\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport InstrumentSectionTab from \"./InstrumentSectionTab\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\nimport InstrumentCategoryFilter from \"./InstrumentCategoryFilter\";\r\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\r\nimport { Affix } from \"rsuite\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport InstrumentValidationTab from \"./InstrumentValidationTab\";\r\nimport AddInstrumentValidation from \"../../pages/instrumentmanagement/AddInstrumentValidation\";\r\nimport AddInstrumentFile from \"../../pages/instrumentmanagement/AddInstrumentFile\";\r\nimport InstrumentCalibrationTab from \"./InstrumentCalibrationTab\";\r\nimport AddInstrumentCalibration from \"./AddInstrumentCalibration\";\r\nimport ModalShow from \"../../components/ModalShow\";\r\nimport FormInput from \"../../components/form-input/form-input.component\";\r\nimport AddOpenDate from \"./AddOpenDate\";\r\nimport AddCloseDate from \"./AddCloseDate\";\r\nimport InstrumentMaintenanceTab from \"./InstrumentMaintenanceTab\";\r\nimport AddInstrumentMaintenance from \"./AddInstrumentMaintenance\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\n\r\nclass Instrument extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const sectionDataState = { skip: 0, take: 10 };\r\n    this.state = {\r\n      selectedRecord: {},\r\n      error: \"\",\r\n      userRoleControlRights: [],\r\n      selectedInstrument: undefined,\r\n      controlMap: new Map(),\r\n      Instrument: [],\r\n      sectionDataState,\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.searchFieldList = [\"sinstrumentname\"];\r\n    this.confirmMessage = new ConfirmMessage();\r\n  }\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  onInputOnChange = (event) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if (event.target.type === \"checkbox\") {\r\n      selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n    } else {\r\n      selectedRecord[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({ selectedRecord });\r\n  };\r\n  onSaveModalClick = () => {\r\n    let inputData = [];\r\n    let inputParam = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      inputData[\"instrumentcalibration\"] = {\r\n        ninstrumentcode:\r\n          this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n          ? this.state.selectedRecord[\"ntzopendate\"].value\r\n          : \"-1\",\r\n        ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n          ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n          : \"-1\",\r\n        ninstrumentcalibrationcode:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ninstrumentcalibrationcode,\r\n        ncalibrationstatus:\r\n          this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n        sopenreason:\r\n          this.state.selectedRecord.sopenreason !== null\r\n            ? this.state.selectedRecord.sopenreason\r\n            : \"\",\r\n        sclosereason:\r\n          this.state.selectedRecord.sclosereason !== null\r\n            ? this.state.selectedRecord.sclosereason\r\n            : \"\",\r\n      };\r\n\r\n      if (this.state.selectedRecord[\"dopendate\"]) {\r\n        inputData[\"instrumentcalibration\"][\"dopendate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dopendate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dclosedate\"]) {\r\n        inputData[\"instrumentcalibration\"][\"dclosedate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dclosedate\"],\r\n          false\r\n        );\r\n      }\r\n      inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentCalibration\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        searchRef: this.searchRef,\r\n        modalShow: false,\r\n      };\r\n    } else {\r\n      inputData[\"instrumentmaintenance\"] = {\r\n        ninstrumentcode:\r\n          this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n          ? this.state.selectedRecord[\"ntzopendate\"].value\r\n          : \"-1\",\r\n        ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n          ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n          : \"-1\",\r\n        ninstrumentmaintenancecode:\r\n          this.props.Login.masterData.selectedInstrumentMaintenance\r\n            .ninstrumentmaintenancecode,\r\n        nmaintenancestatus:\r\n          this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n        sopenreason:\r\n          this.state.selectedRecord.sopenreason !== null\r\n            ? this.state.selectedRecord.sopenreason\r\n            : \"\",\r\n        sclosereason:\r\n          this.state.selectedRecord.sclosereason !== null\r\n            ? this.state.selectedRecord.sclosereason\r\n            : \"\",\r\n      };\r\n\r\n      if (this.state.selectedRecord[\"dopendate\"]) {\r\n        inputData[\"instrumentmaintenance\"][\"dopendate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dopendate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dclosedate\"]) {\r\n        inputData[\"instrumentmaintenance\"][\"dclosedate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dclosedate\"],\r\n          false\r\n        );\r\n      }\r\n      inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentMaintenance\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        searchRef: this.searchRef,\r\n      };\r\n    }\r\n\r\n    const masterData = this.props.Login.masterData;\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        this.props.Login.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"modalShow\");\r\n    }\r\n  };\r\n\r\n  onSaveClick = (saveType, formRef) => {\r\n    let inputData = [];\r\n    let instSection = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\r\n      let postParam = undefined;\r\n      let fieldList = [\r\n        \"ninstrumentcode\",\r\n        \"ninstrumentcatcode\",\r\n        \"nsuppliercode\",\r\n        \"nservicecode\",\r\n        \"nmanufcode\",\r\n        \"nusercode\",\r\n        \"sinstrumentid\",\r\n        \"sinstrumentname\",\r\n        \"smodelnumber\",\r\n        \"spono\",\r\n        //\"stzmanufdate\",\"stzpodate\",\"stzreceivedate\",\"stzinstallationdate\",\"stzexpirydate\",\r\n        //\"dmanufacdate\",\"dpodate\", \"dreceiveddate\", \"dinstallationdate\",\"dexpirydate\",\r\n        \"nwindowsperiodminus\",\r\n        \"nwindowsperiodplus\",\r\n        \"nwindowsperiodminusunit\",\r\n        \"nwindowsperiodplusunit\",\r\n        \"sserialno\",\r\n        \"sremarks\",\r\n        \"ndefaultstatus\",\r\n        \"nsitecode\",\r\n        \"nstatus\",\r\n      ];\r\n\r\n      inputData[\"instrument\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n\r\n      if (this.props.Login.operation === \"update\") {\r\n        postParam = {\r\n          inputListName: \"Instrument\",\r\n          selectedObject: \"selectedInstrument\",\r\n          primaryKeyField: \"ninstrumentcode\",\r\n        };\r\n\r\n        inputData[\"instrument\"][\"smanufacdate\"] = this.state.selectedRecord[\r\n          \"dmanufacdate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dmanufacdate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"spodate\"] = this.state.selectedRecord[\r\n          \"dpodate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dpodate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"sreceiveddate\"] = this.state.selectedRecord[\r\n          \"dreceiveddate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dreceiveddate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"sinstallationdate\"] = this.state\r\n          .selectedRecord[\"dinstallationdate\"]\r\n          ? this.state.selectedRecord[\"dinstallationdate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"sexpirydate\"] = this.state.selectedRecord[\r\n          \"dexpirydate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dexpirydate\"]\r\n          : transactionStatus.NA;\r\n        fieldList.map((item) => {\r\n          return (inputData[\"instrument\"][item] = this.state.selectedRecord[\r\n            item\r\n          ]\r\n            ? this.state.selectedRecord[item]\r\n            : \"\");\r\n        });\r\n      } else {\r\n        inputData[\"instrument\"][\"ninstrumentstatus\"] =\r\n          this.state.selectedRecord[\"ntransactionstatus\"];\r\n        inputData[\"instrument\"][\"nsectioncode\"] = this.state.selectedRecord[\r\n          \"nsectioncode\"\r\n        ]\r\n          ? this.state.selectedRecord[\"nsectioncode\"].value\r\n          : transactionStatus.NA;\r\n        // inputData[\"instrumentsection\"]=this.props.Login.userInfo.nusercode;\r\n        // inputData[\"instrumentsection\"][\"ninstrumentcode\"]=this.state.selectedRecord[\"ninstrumentcode\"]?this.state.selectedRecord[\"ninstrumentcode\"]:\"\";\r\n        // inputData[\"instrumentsection\"][\"nsectioncode\"]=this.state.selectedRecord[\"nsectioncode\"]?this.state.selectedRecord[\"nsectioncode\"]:\"\";\r\n        fieldList.map((item) => {\r\n          return (inputData[\"instrument\"][item] =\r\n            this.state.selectedRecord[item]);\r\n        });\r\n      }\r\n\r\n      inputData[\"instrument\"][\"ninstrumentcatcode\"] = this.state.selectedRecord[\r\n        \"ninstrumentcatcode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ninstrumentcatcode\"].value\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nmanufcode\"] = this.state.selectedRecord[\r\n        \"nmanufcode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nmanufcode\"].value || transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nsuppliercode\"] = this.state.selectedRecord[\r\n        \"nsuppliercode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nsuppliercode\"].value ||\r\n          transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nservicecode\"] = this.state.selectedRecord[\r\n        \"nservicecode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nservicecode\"].value ||\r\n          transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\r\n        \"ntranscode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntranscode\"].value || transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nwindowsperiodplus\"] = this.state.selectedRecord[\r\n        \"nwindowsperiodplus\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nwindowsperiodplus\"]\r\n        : 0;\r\n      inputData[\"instrument\"][\"nwindowsperiodminus\"] = this.state\r\n        .selectedRecord[\"nwindowsperiodminus\"]\r\n        ? this.state.selectedRecord[\"nwindowsperiodminus\"]\r\n        : 0;\r\n      inputData[\"instrument\"][\"nwindowsperiodminusunit\"] = this.state\r\n        .selectedRecord[\"nwindowsperiodminusunit\"]\r\n        ? this.state.selectedRecord[\"nwindowsperiodminusunit\"].value ||\r\n          transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nwindowsperiodplusunit\"] = this.state\r\n        .selectedRecord[\"nwindowsperiodplusunit\"]\r\n        ? this.state.selectedRecord[\"nwindowsperiodplusunit\"].value ||\r\n          transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzmanufdate\"] = this.state.selectedRecord[\r\n        \"ntzmanufdate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzmanufdate\"].value ||\r\n          transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzmanufdate\"] = this.state.selectedRecord[\r\n        \"ntzmanufdate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzexpirydate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzpodate\"] = this.state.selectedRecord[\r\n        \"ntzpodate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzpodate\"].value || transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzpodate\"] = this.state.selectedRecord[\r\n        \"ntzpodate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzpodate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzreceivedate\"] = this.state.selectedRecord[\r\n        \"ntzreceivedate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzreceivedate\"].value ||\r\n          transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzreceivedate\"] = this.state.selectedRecord[\r\n        \"ntzreceivedate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzreceivedate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzinstallationdate\"] = this.state\r\n        .selectedRecord[\"ntzinstallationdate\"]\r\n        ? this.state.selectedRecord[\"ntzinstallationdate\"].value ||\r\n          transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzinstallationdate\"] = this.state\r\n        .selectedRecord[\"ntzinstallationdate\"]\r\n        ? this.state.selectedRecord[\"ntzinstallationdate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzexpirydate\"] = this.state.selectedRecord[\r\n        \"ntzexpirydate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzexpirydate\"].value ||\r\n          transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzexpirydate\"] = this.state.selectedRecord[\r\n        \"ntzexpirydate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzexpirydate\"].label\r\n        : transactionStatus.NA;\r\n\r\n      if (this.state.selectedRecord[\"dpodate\"]) {\r\n        inputData[\"instrument\"][\"dpodate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dpodate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dreceiveddate\"]) {\r\n        inputData[\"instrument\"][\"dreceiveddate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dreceiveddate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dinstallationdate\"]) {\r\n        inputData[\"instrument\"][\"dinstallationdate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dinstallationdate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dexpirydate\"]) {\r\n        inputData[\"instrument\"][\"dexpirydate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dexpirydate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dmanufacdate\"]) {\r\n        inputData[\"instrument\"][\"dmanufacdate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dmanufacdate\"],\r\n          false\r\n        );\r\n      }\r\n\r\n      inputData[\"instrument\"][\"nusercode\"] =\r\n        this.props.Login.userInfo.nusercode;\r\n\r\n      if (this.state.selectedRecord[\"nsectionusercode\"] !== undefined) {\r\n        if (this.state.selectedRecord[\"nusercode\"] !== undefined) {\r\n          this.state.selectedRecord[\"nusercode\"].map((item) => {\r\n            return instSection.push({\r\n              nusercode: item.value,\r\n              // nsitecode:this.props.Login.masterData.SelectedOrgSite.nsitecode\r\n            });\r\n          });\r\n          inputData[\"instrumentsection\"] = instSection;\r\n        }\r\n      }\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"Instrument\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        postParam,\r\n        searchRef: this.searchRef,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_SECTION\") {\r\n      inputData[\"instrumentsection\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n      inputData[\"instrumentsection\"][\"nsectioncode\"] = this.state\r\n        .selectedRecord[\"nsectioncode\"]\r\n        ? this.state.selectedRecord[\"nsectioncode\"].value\r\n        : transactionStatus.NA;\r\n      inputData[\"instrumentsection\"][\"nusercode\"] = this.state.selectedRecord[\r\n        \"nusercode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nusercode\"].value\r\n        : transactionStatus.NA;\r\n      inputData[\"instrumentsection\"][\"ninstrumentcode\"] =\r\n        this.props.Login.instItem[\"ninstrumentcode\"];\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"Section\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\r\n      if (this.props.Login.operation === \"update\") {\r\n        inputData[\"instrumentvalidation\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          ninstrumentvalidationcode:\r\n            this.props.Login.masterData.selectedInstrumentValidation\r\n              .ninstrumentvalidationcode,\r\n          nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\r\n          nvalidationstatus: this.state.selectedRecord.ntranscode.value,\r\n          dvalidationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dvalidationdate\"],\r\n            false\r\n          ),\r\n          sremark:\r\n            this.state.selectedRecord.sremark !== null\r\n              ? this.state.selectedRecord.sremark\r\n              : \"\",\r\n          ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"]\r\n            ? this.state.selectedRecord[\"ntzvalidationdate\"].value\r\n            : \"-1\",\r\n        };\r\n      } else {\r\n        inputData[\"instrumentvalidation\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\r\n          nvalidationstatus:\r\n            this.state.selectedRecord.ntranscode.item.ntranscode,\r\n          ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"]\r\n            ? this.state.selectedRecord[\"ntzvalidationdate\"].value\r\n            : \"-1\",\r\n\r\n          sremark:\r\n            this.state.selectedRecord.sremark !== null\r\n              ? this.state.selectedRecord.sremark\r\n              : \"\",\r\n        };\r\n      }\r\n      if (this.state.selectedRecord[\"dvalidationdate\"]) {\r\n        inputData[\"instrumentvalidation\"][\"dvalidationdate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dvalidationdate\"],\r\n          false\r\n        );\r\n      }\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentValidation\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\r\n      const inputParam = this.onSaveInstrumentFile(saveType, formRef);\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      if (this.props.Login.operation === \"create\")\r\n        inputData[\"instrumentcalibration\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          nopenusercode: -1,\r\n          ncloseusercode: -1,\r\n          ncalibrationstatus:\r\n            this.state.selectedRecord.ntranscode.item.ntranscode,\r\n          dlastcalibrationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastcalibrationdate\"],\r\n            false\r\n          ),\r\n          //    \"dlastcalibrationdate\":formatInputDate(this.props.Login.masterData.selectedInstrumentCalibration.dlastcalibrationdate,false),\r\n\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n            ? this.state.selectedRecord[\"ntzopendate\"].value\r\n            : \"-1\",\r\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          ntzlastcalibrationdate: this.state.selectedRecord[\r\n            \"ntzlastcalibrationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value\r\n            : \"-1\",\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n        };\r\n      else {\r\n        inputData[\"instrumentcalibration\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          ninstrumentcalibrationcode:\r\n            this.props.Login.masterData.selectedInstrumentCalibration\r\n              .ninstrumentcalibrationcode,\r\n          ncalibrationstatus: this.state.selectedRecord.ntranscode.value,\r\n          dlastcalibrationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastcalibrationdate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzlastcalibrationdate: this.state.selectedRecord[\r\n            \"ntzlastcalibrationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value\r\n            : \"-1\",\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n        };\r\n      }\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentCalibration\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\"\r\n    ) {\r\n      const inputParam = this.onSaveInstrumentCalibrationFile(\r\n        saveType,\r\n        formRef\r\n      );\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\r\n      if (this.props.Login.operation === \"create\")\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          nopenusercode: -1,\r\n          ncloseusercode: -1,\r\n          nmaintenancestatus:\r\n            this.state.selectedRecord.ntranscode.item.ntranscode,\r\n          dlastmaintenancedate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastmaintenancedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n            ? this.state.selectedRecord[\"ntzopendate\"].value\r\n            : \"-1\",\r\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          ntzlastmaintenancedate: this.state.selectedRecord[\r\n            \"ntzlastmaintenancedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value\r\n            : \"-1\",\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n        };\r\n      else {\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          ninstrumentmaintenancecode:\r\n            this.props.Login.masterData.selectedInstrumentMaintenance\r\n              .ninstrumentmaintenancecode,\r\n          nmaintenancestatus: this.state.selectedRecord.ntranscode.value,\r\n          dlastmaintenancedate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastmaintenancedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n          ntzlastmaintenancedate: this.state.selectedRecord[\r\n            \"ntzlastmaintenancedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value\r\n            : \"-1\",\r\n        };\r\n      }\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentMaintenance\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\"\r\n    ) {\r\n      const inputParam = this.onSaveInstrumentMaintenanceFile(\r\n        saveType,\r\n        formRef\r\n      );\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n  };\r\n\r\n  onNumericInputOnChange = (value, name) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[name] = value;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.Login.masterStatus !== \"\") {\r\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n        toast.warn(props.Login.masterStatus);\r\n        props.Login.masterStatus = \"\";\r\n      }\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n      toast.error(props.Login.error);\r\n      props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n      return { selectedRecord: {} };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateEsign = () => {\r\n    const inputParam = {\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedRecord[\"esigncomments\"],\r\n        },\r\n        password: this.state.selectedRecord[\"esignpassword\"],\r\n      },\r\n      screenData: this.props.Login.screenData,\r\n    };\r\n    if (this.props.Login.Action === \"OPENDATE\") {\r\n      this.props.validateEsignCredential(inputParam, \"modalShow\");\r\n    } else if (this.props.Login.Action === \"Edit\") {\r\n      this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    } else if (this.props.Login.Action === \"Delete\") {\r\n      this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    } else if (this.props.Login.Action === \"Add\") {\r\n      this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    } else if (this.props.Login.Action === \"Closedate\") {\r\n      this.props.validateEsignCredential(inputParam, \"modalShow\");\r\n    } else {\r\n      this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n  };\r\n\r\n  defaultRecord = (defaultParam) => {\r\n    const methodUrl = defaultParam.methodUrl;\r\n    let dataItem = defaultParam.selectedRecord;\r\n    dataItem[\"ndefaultstatus\"] = transactionStatus.YES;\r\n    let dataState = undefined;\r\n    if (defaultParam.screenName === \"IDS_SECTION\") {\r\n      dataState = this.state.sectionDataState;\r\n    }\r\n    const inputParam = {\r\n      inputData: {\r\n        [methodUrl]: dataItem,\r\n        userinfo: this.props.Login.userInfo,\r\n      },\r\n      classUrl: \"instrument\",\r\n      operation: \"setDefault\",\r\n      methodUrl: methodUrl,\r\n      dataState,\r\n    };\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        defaultParam.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openChildModal: true,\r\n          screenName: \"Test\",\r\n          operation: defaultParam.operation,\r\n          selectedRecord: {},\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n    }\r\n  };\r\n\r\n  onSwitchChange = (item, key, methodUrl) => {\r\n    let dataItem = item;\r\n    dataItem[\"ndefaultstatus\"] = 3;\r\n    const inputParam = {\r\n      inputData: {\r\n        [key]: dataItem,\r\n        userinfo: this.props.userInfo,\r\n      },\r\n      classUrl: \"testmaster\",\r\n      operation: \"setDefault\",\r\n      methodUrl: methodUrl,\r\n    };\r\n    this.props.crudMaster(\r\n      inputParam,\r\n      this.props.masterData,\r\n      \"openChildModal\",\r\n      {}\r\n    );\r\n  };\r\n\r\n  deleteTabFileRecord = (deleteParam) => {\r\n    let inputData = [];\r\n    const screenName = deleteParam.screenName;\r\n    if (screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentFile\"] = {\r\n        ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\r\n        ninstrumentlogcode:\r\n          this.props.Login.masterData.selectedInstrumentValidation\r\n            .ninstrumentvalidationcode,\r\n      };\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentValidationFile\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: deleteParam.operation,\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          deleteParam.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: deleteParam.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentFile\"] = {\r\n        ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\r\n        ninstrumentlogcode:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ninstrumentcalibrationcode,\r\n      };\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentCalibrationFile\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: deleteParam.operation,\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          deleteParam.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: deleteParam.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentFile\"] = {\r\n        ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\r\n        ninstrumentlogcode:\r\n          this.props.Login.masterData.selectedInstrumentMaintenance\r\n            .ninstrumentmaintenancecode,\r\n      };\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentMaintenanceFile\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: deleteParam.operation,\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          deleteParam.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: deleteParam.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n  };\r\n\r\n  DeleteInstrument = (operation, ncontrolCode) => {\r\n    let inputData = [];\r\n    if (operation.screenName === \"IDS_SECTION\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"instrumentsection\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n      inputData[\"instrumentsection\"][\"ninstrumentsectioncode\"] =\r\n        operation.selectedRecord.ninstrumentsectioncode;\r\n      inputData[\"instrumentsection\"][\"ninstrumentcode\"] =\r\n        operation.selectedRecord.ninstrumentcode;\r\n      inputData[\"instrumentsection\"][\"ndefaultstatus\"] =\r\n        operation.selectedRecord.ndefaultstatus;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"Section\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: operation.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (ncontrolCode === 530) {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentFile\"] = {\r\n        ninstrumentfilecode:\r\n          this.props.Login.masterData.ValidationFileData.ninstrumentfilecode,\r\n      };\r\n      inputData[\"InstrumentFile\"] = {\r\n        ninstrument:\r\n          this.props.Login.masterData.ValidationFileData.ninstrumentfilecode,\r\n      };\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentValidationFile\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (operation.screenName === \"IDS_INSTRUMENTVALIDATION\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentValidation\"] = {\r\n        ninstrumentvalidationcode:\r\n          this.props.Login.masterData.selectedInstrumentValidation\r\n            .ninstrumentvalidationcode,\r\n      };\r\n      inputData[\"InstrumentValidation\"][\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentValidation\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (operation.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      inputData[\"InstrumentCalibration\"] = {\r\n        ninstrumentcalibrationcode:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ninstrumentcalibrationcode,\r\n      };\r\n      inputData[\"InstrumentCalibration\"][\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n      inputData[\"nFlag\"] = operation.nFlag;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentCalibration\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (operation.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentMaintenance\"] = {\r\n        ninstrumentmaintenancecode:\r\n          this.props.Login.masterData.selectedInstrumentMaintenance\r\n            .ninstrumentmaintenancecode,\r\n      };\r\n      inputData[\"InstrumentMaintenance\"][\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentMaintenance\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else {\r\n      inputData[\"instrument\"] = this.props.Login.masterData.selectedInstrument;\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n      const postParam = {\r\n        inputListName: \"Instrument\",\r\n        selectedObject: \"selectedInstrument\",\r\n        primaryKeyField: \"ninstrumentcode\",\r\n        primaryKeyValue:\r\n          this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\",\r\n        fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      };\r\n\r\n      const inputParam = {\r\n        methodUrl: \"Instrument\",\r\n        postParam,\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: operation.operation,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: operation.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteAttachment = (event, file, fieldName) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = deleteAttachmentDropZone(\r\n      selectedRecord[fieldName],\r\n      file\r\n    );\r\n\r\n    this.setState({\r\n      selectedRecord,\r\n      actionType: \"delete\", //fileToDelete:file.name\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log('master main',this.props.Login.masterData)\r\n    let mandatoryFields = [];\r\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\r\n      mandatoryFields.push(\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTCATEGORY\",\r\n          dataField: \"ninstrumentcatcode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTID\",\r\n          dataField: \"sinstrumentid\",\r\n          mandatoryLabel: \"IDS_ENTER\",\r\n          controlType: \"textbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTNAME\",\r\n          dataField: \"sinstrumentname\",\r\n          mandatoryLabel: \"IDS_ENTER\",\r\n          controlType: \"textbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SUPPLIER\",\r\n          dataField: \"nsuppliercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SERVICEBY\",\r\n          dataField: \"nservicecode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SERIALNO\",\r\n          dataField: \"sserialno\",\r\n          mandatoryLabel: \"IDS_ENTER\",\r\n          controlType: \"textbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTSTATUS\",\r\n          dataField: \"ntranscode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        }\r\n        // { \"mandatory\": true, \"idsName\": \"IDS_INCHARGE\", \"dataField\": \"susername\" }\r\n      );\r\n      if (this.state.selectedRecord[\"nsectioncode\"]) {\r\n        mandatoryFields.push({\r\n          mandatory: true,\r\n          idsName: \"IDS_INCHARGE\",\r\n          dataField: \"nusercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        });\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_SECTION\")\r\n      mandatoryFields.push(\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SECTION\",\r\n          dataField: \"nsectioncode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INCHARGE\",\r\n          dataField: \"nusercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        }\r\n      );\r\n    else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    } else if (\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" ||\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" ||\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\"\r\n    ) {\r\n      mandatoryFields.push({\r\n        idsName: \"IDS_FILE\",\r\n        dataField: \"sfilename\",\r\n        mandatory: true,\r\n        mandatoryLabel: \"IDS_CHOOSE\",\r\n        controlType: \"file\",\r\n      });\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    } else if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    }\r\n\r\n    // let userStatusCSS = \"\";\r\n    // let activeIconCSS = \"fa fa-check\";\r\n    // if (this.props.Login.masterData.selectedInstrument && this.props.Login.masterData.selectedInstrument.sdefaultstatus === transactionStatus.YES) {\r\n    //     userStatusCSS = \"outline-success\";\r\n    // }\r\n    // else{\r\n    //     userStatusCSS = \"outline-danger\";\r\n    // }\r\n\r\n    const addId =\r\n      this.state.controlMap.has(\"AddInstrument\") &&\r\n      this.state.controlMap.get(\"AddInstrument\").ncontrolcode;\r\n    const editId =\r\n      this.state.controlMap.has(\"EditInstrument\") &&\r\n      this.state.controlMap.get(\"EditInstrument\").ncontrolcode;\r\n    const deleteId =\r\n      this.state.controlMap.has(\"DeleteInstrument\") &&\r\n      this.state.controlMap.get(\"DeleteInstrument\").ncontrolcode;\r\n    // const editParam = { screenName:\"Instrument\", operation:\"update\", primaryKeyName:\"ninstrumentcode\", masterData:this.props.Login.masterData, userInfo:this.props.Login.userInfo,\r\n    // ncontrolcode:editId, inputListName :\"Instrument\", selectedObject : \"SelectedInstrument\"};\r\n    const { selectedInstrument } = this.props.Login.masterData;\r\n    const filterParam = {\r\n      inputListName: \"Instrument\",\r\n      selectedObject: \"selectedInstrument\",\r\n      primaryKeyField: \"ninstrumentcode\",\r\n      fetchUrl: \"instrument/getInstrument\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n    const breadCrumbData = this.state.filterData || [];\r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n          {breadCrumbData.length > 0 ? (\r\n            <Affix top={53}>\r\n              <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n            </Affix>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Row noGutters={true}>\r\n            <Col md={4}>\r\n              <ListMaster\r\n                formatMessage={this.props.intl.formatMessage}\r\n                screenName={\"Instrument\"}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={\r\n                  this.props.Login.masterData.searchedData ||\r\n                  this.props.Login.masterData.Instrument\r\n                }\r\n                getMasterDetail={(Instrument) =>\r\n                  this.props.getInstrumentDetail(\r\n                    Instrument,\r\n                    this.props.Login.userInfo,\r\n                    this.props.Login.masterData\r\n                  )\r\n                }\r\n                selectedMaster={this.props.Login.masterData.selectedInstrument}\r\n                primaryKeyField=\"ninstrumentcode\"\r\n                mainField=\"sinstrumentname\"\r\n                firstField=\"sinstrumentid\"\r\n                secondField=\"sinstrumentcatname\"\r\n                isIDSField=\"Yes\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                //searchListName=\"searchedInstrument\"\r\n                searchRef={this.searchRef}\r\n                // filterParam={filterParam}\r\n                addId={addId}\r\n                hidePaging={true}\r\n                reloadData={this.reloadData}\r\n                openModal={() =>\r\n                  this.props.getInstrumentCombo(\r\n                    \"IDS_INSTRUMENT\",\r\n                    \"create\",\r\n                    \"ninstrumentcode\",\r\n                    this.props.Login.masterData,\r\n                    this.props.Login.userInfo,\r\n                    addId\r\n                  )\r\n                }\r\n                openFilter={this.openFilter}\r\n                closeFilter={this.closeFilter}\r\n                onFilterSubmit={this.onFilterSubmit}\r\n                showFilterIcon={true}\r\n                showFilter={this.props.Login.showFilter}\r\n                filterComponent={[\r\n                  {\r\n                    IDS_INSTRUMENTCATEGORYFILTER: (\r\n                      <InstrumentCategoryFilter\r\n                        filterInstrumentCategory={\r\n                          this.state.filterInstrumentCategory || []\r\n                        }\r\n                        nfilterInstrumentCategory={\r\n                          this.state.nfilterInstrumentCategory || {}\r\n                        }\r\n                        onComboChange={this.onComboChange}\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n            </Col>\r\n            <Col md={8}>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <ContentPanel className=\"panel-main-content\">\r\n                    <Card className=\"border-0\">\r\n                      {/* {this.props.Login.masterData.Users && this.props.Login.masterData.Users.length > 0 &&  */}\r\n                      {this.props.Login.masterData.selectedInstrument ? (\r\n                        <>\r\n                          <Card.Header>\r\n                            <ReactTooltip\r\n                              place=\"bottom\"\r\n                              globalEventOff=\"click\"\r\n                              id=\"tooltip_list_wrap\"\r\n                            />\r\n                            <Card.Title className=\"product-title-main\">\r\n                              {\r\n                                this.props.Login.masterData.selectedInstrument\r\n                                  .sinstrumentname\r\n                              }\r\n                            </Card.Title>\r\n                            <Card.Subtitle>\r\n                              <div className=\"d-flex product-category\">\r\n                                <h2 className=\"product-title-sub flex-grow-1\">\r\n                                  {/* <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                        {activeIconCSS !== \"\" ? <i class={activeIconCSS}></i> : \"\"}\r\n                                                                        {this.props.Login.masterData.selectedInstrument.sdefaultstatus} \r\n                                                                        {/* <FormattedMessage id= {this.props.Login.masterData.selectedManufacturer.sactivestatus}/> */}\r\n\r\n                                  {/* </span>  */}\r\n                                </h2>\r\n                                {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                <div className=\"d-inline\">\r\n                                  <Nav.Link\r\n                                    name=\"editInstrument\"\r\n                                    data-tip={this.props.intl.formatMessage({\r\n                                      id: \"IDS_EDIT\",\r\n                                    })}\r\n                                    data-for=\"tooltip_list_wrap\"\r\n                                    hidden={\r\n                                      this.state.userRoleControlRights.indexOf(\r\n                                        editId\r\n                                      ) === -1\r\n                                    }\r\n                                    className=\"btn btn-circle outline-grey mr-2\"\r\n                                    // onClick = {()=>this.props.(editParam)}\r\n                                    onClick={(e) =>\r\n                                      this.props.getInstrumentCombo(\r\n                                        \"IDS_INSTRUMENT\",\r\n                                        \"update\",\r\n                                        \"ninstrumentcode\",\r\n                                        this.props.Login.masterData,\r\n                                        this.props.Login.userInfo,\r\n                                        editId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                  </Nav.Link>\r\n                                  <Nav.Link\r\n                                    name=\"deleteInstrument\"\r\n                                    className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                    data-tip={this.props.intl.formatMessage({\r\n                                      id: \"IDS_DELETE\",\r\n                                    })}\r\n                                    data-for=\"tooltip_list_wrap\"\r\n                                    hidden={\r\n                                      this.state.userRoleControlRights.indexOf(\r\n                                        deleteId\r\n                                      ) === -1\r\n                                    }\r\n                                    onClick={() =>\r\n                                      this.ConfirmDelete(\r\n                                        {\r\n                                          operation: \"delete\",\r\n                                          screenName: \"IDS_INSTRUMENT\",\r\n                                        },\r\n                                        deleteId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                    {/* <ConfirmDialog\r\n                                                                                name=\"deleteMessage\"\r\n                                                                                message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                                doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                                doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                                icon={faTrashAlt}\r\n                                                                                //title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                                //hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                                handleClickDelete={() => this.DeleteInstrument(\"delete\", deleteId, \"IDS_INSTRUMENT\")}\r\n                                                                            /> */}\r\n                                  </Nav.Link>\r\n                                </div>\r\n                                {/* </Tooltip> */}\r\n                              </div>\r\n                            </Card.Subtitle>\r\n                          </Card.Header>\r\n                          <Card.Body>\r\n                            <Row>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTNAME\"\r\n                                      message=\"Instrumentname\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sinstrumentname\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTID\"\r\n                                      message=\"Instrument Id\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sinstrumentid\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_DEFAULTSTATUS\"\r\n                                      message=\"Default Status\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sdefaultstatus\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_MODELNO\"\r\n                                      message=\"Modelno\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.smodelnumber ===\r\n                                      null ||\r\n                                    this.props.Login.masterData\r\n                                      .selectedInstrument.smodelnumber\r\n                                      .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                          .selectedInstrument.smodelnumber}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_PONO\"\r\n                                      message=\"PO No.\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.spono === null ||\r\n                                    this.props.Login.masterData\r\n                                      .selectedInstrument.spono.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                          .selectedInstrument.spono}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              {/* <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id=\"IDS_DESCRIPTION\" message=\"Description\" /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedInstrument.sdescription}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col> */}\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_MANUFACTURERDATE\"\r\n                                      message=\"ManufactureDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.smanufacdate ===\r\n                                      null ||\r\n                                    this.props.Login.masterData\r\n                                      .selectedInstrument.smanufacdate\r\n                                      .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                          .selectedInstrument.smanufacdate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_PODATE\"\r\n                                      message=\"PoDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.dpodate === null ||\r\n                                    this.props.Login.masterData\r\n                                      .selectedInstrument.dpodate === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                          .selectedInstrument.spodate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_RECEIVEDDATE\"\r\n                                      message=\"ReceiveDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sreceiveddate ===\r\n                                      null ||\r\n                                    this.props.Login.masterData\r\n                                      .selectedInstrument.sreceiveddate\r\n                                      .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                          .selectedInstrument.sreceiveddate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTALLATIONDATE\"\r\n                                      message=\"InstallationDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sinstallationdate ===\r\n                                      null ||\r\n                                    this.props.Login.masterData\r\n                                      .selectedInstrument.sinstallationdate\r\n                                      .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                          .selectedInstrument.sinstallationdate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_EXPIRYDATE\"\r\n                                      message=\"ExpiryDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sexpirydate ===\r\n                                      null ||\r\n                                    this.props.Login.masterData\r\n                                      .selectedInstrument.sexpirydate.length ===\r\n                                      0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                          .selectedInstrument.sexpirydate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_SERIALNO\"\r\n                                      message=\"Serialno\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sserialno\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTSTATUS\"\r\n                                      message=\"Instrumentstatus\"\r\n                                    />\r\n                                  </FormLabel>\r\n\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sactivestatus ===\r\n                                      null ||\r\n                                    this.props.Login.masterData\r\n                                      .selectedInstrument.sactivestatus\r\n                                      .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                          .selectedInstrument.sactivestatus}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_REMARKS\"\r\n                                      message=\"Remarks\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sremarks === null ||\r\n                                    this.props.Login.masterData\r\n                                      .selectedInstrument.sremarks.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                          .selectedInstrument.sremarks}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            {selectedInstrument && (\r\n                              <CustomTab\r\n                                tabDetail={this.tabDetail()}\r\n                                onTabChange={this.onTabChange}\r\n                              />\r\n                            )}\r\n                          </Card.Body>\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Card>\r\n                  </ContentPanel>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {this.props.Login.openModal && (\r\n          <SlideOutModal\r\n            show={this.props.Login.openModal}\r\n            closeModal={this.closeModal}\r\n            operation={this.props.Login.operation}\r\n            inputParam={this.props.Login.inputParam}\r\n            screenName={this.props.Login.screenName}\r\n            onSaveClick={this.onSaveClick}\r\n            esign={this.props.Login.loadEsign}\r\n            validateEsign={this.validateEsign}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            mandatoryFields={mandatoryFields}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            addComponent={\r\n              this.props.Login.loadEsign ? (\r\n                <Esign\r\n                  operation={this.props.Login.operation}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  inputParam={this.props.Login.inputParam}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_INSTRUMENT\" ? (\r\n                <AddInstrument\r\n                  onNumericInputOnChange={this.onNumericInputOnChange}\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onComboChange={this.onComboChange}\r\n                  InstrumentCategory={this.props.Login.InstrumentCategory}\r\n                  Supplier={this.props.Login.Supplier}\r\n                  Manufacturer={this.props.Login.Manufacturer}\r\n                  InstrumentStatus={this.props.Login.InstrumentStatus}\r\n                  handleDateChange={this.handleDateChange}\r\n                  Lab={this.props.Login.Lab}\r\n                  Period={this.props.Login.Period}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  SectionUsers={this.props.Login.Users}\r\n                  operation={this.props.Login.operation}\r\n                  inputParam={this.props.inputParam}\r\n                  defaultValue={this.props.Login.edqmManufacturer}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  expiryDate={this.props.Login.expiryDate}\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_SECTION\" ? (\r\n                <AddInstrumentSection\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  Lab={this.props.Login.Lab}\r\n                  Users={this.props.Login.Users}\r\n                  // SectionUsers={this.props.Login.SectionUsers}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\" ? (\r\n                <AddInstrumentValidation\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  ValidationStatus={this.props.Login.ValidationStatus}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  instrumentid={\r\n                    this.props.Login.masterData.selectedInstrument.sinstrumentid\r\n                  }\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTVALIDATIONFILE\" ? (\r\n                <AddInstrumentFile\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onDrop={this.onDropTestFile}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTCALIBRATION\" ? (\r\n                <AddInstrumentCalibration\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  CalibrationStatus={this.props.Login.CalibrationStatus}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  instrumentid={\r\n                    this.props.Login.masterData.selectedInstrument.sinstrumentid\r\n                  }\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTCALIBRATIONFILE\" ? (\r\n                <AddInstrumentFile\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onDrop={this.onDropTestFile}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTMAINTENANCE\" ? (\r\n                <AddInstrumentMaintenance\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  MaintenanceStatus={this.props.Login.MaintenanceStatus}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  instrumentid={\r\n                    this.props.Login.masterData.selectedInstrument.sinstrumentid\r\n                  }\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTMAINTENANCEFILE\" ? (\r\n                <AddInstrumentFile\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onDrop={this.onDropTestFile}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n          />\r\n        )}\r\n\r\n        {this.props.Login.modalShow ? (\r\n          <ModalShow\r\n            modalShow={this.props.Login.modalShow}\r\n            closeModal={this.closeModalShow}\r\n            onSaveClick={this.onSaveModalClick}\r\n            validateEsign={this.validateEsign}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            mandatoryFields={mandatoryFields}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            esign={this.props.Login.loadEsign}\r\n            modalTitle={this.props.Login.modalTitle}\r\n            modalBody={\r\n              this.props.Login.loadEsign ? (\r\n                <Esign\r\n                  operation={this.props.Login.operation}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  inputParam={this.props.Login.inputParam}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                />\r\n              ) : this.props.Login.modalTitle === \"IDS_OPENDATE\" ? (\r\n                <AddOpenDate\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  Status={\r\n                    this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\"\r\n                      ? this.props.Login.CalibrationStatus\r\n                      : this.props.Login.MaintenanceStatus\r\n                  }\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  esign={this.props.Login.loadEsign}\r\n                />\r\n              ) : (\r\n                <AddCloseDate\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  Status={\r\n                    this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\"\r\n                      ? this.props.Login.CalibrationStatus\r\n                      : this.props.Login.MaintenanceStatus\r\n                  }\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                  userInfo={this.props.Login.userInfo}\r\n                />\r\n              )\r\n            }\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  onSaveInstrumentFile = (saveType, formRef) => {\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = 1;\r\n\r\n    let isFileEdited = transactionStatus.NO;\r\n    let instrumentFileArray = [];\r\n    let instrumentFile = {\r\n      ninstrumentfilecode: selectedRecord.ninstrumentfilecode\r\n        ? selectedRecord.ninstrumentfilecode\r\n        : 0,\r\n      nstatus: transactionStatus.ACTIVE,\r\n    };\r\n    const formData = new FormData();\r\n    //  if (nattachmenttypecode === attachmentType.FTP) {\r\n    if (\r\n      acceptedFiles &&\r\n      Array.isArray(acceptedFiles) &&\r\n      acceptedFiles.length > 0\r\n    ) {\r\n      acceptedFiles.forEach((file, index) => {\r\n        const tempData = Object.assign({}, instrumentFile);\r\n        const splittedFileName = file.name.split(\".\");\r\n        const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\r\n        const ssystemfilename = selectedRecord.ssystemfilename\r\n          ? selectedRecord.ssystemfilename.split(\".\")\r\n          : \"\";\r\n        const filesystemfileext = selectedRecord.ssystemfilename\r\n          ? file.name.split(\".\")[ssystemfilename.length - 1]\r\n          : \"\";\r\n        const uniquefilename =\r\n          nattachmenttypecode === attachmentType.FTP\r\n            ? selectedRecord.ninstrumentfilecode &&\r\n              selectedRecord.ninstrumentfilecode > 0 &&\r\n              selectedRecord.ssystemfilename !== \"\"\r\n              ? ssystemfilename[0] + \".\" + filesystemfileext\r\n              : create_UUID() + \".\" + fileExtension\r\n            : \"\";\r\n        tempData[\"sfilename\"] = file.name;\r\n        tempData[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n          ? selectedRecord.sfiledesc.trim()\r\n          : \"\";\r\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"nfilesize\"] = file.size;\r\n        tempData[\"ninstrumentcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n        tempData[\"nattachmenttypecode\"] = 1;\r\n        tempData[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\r\n        tempData[\"ninstrumentlogcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        instrumentFileArray.push(tempData);\r\n      });\r\n      formData.append(\"filecount\", acceptedFiles.length);\r\n      isFileEdited = transactionStatus.YES;\r\n    } else {\r\n      instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\r\n      instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n        ? selectedRecord.sfiledesc.trim()\r\n        : \"\";\r\n      instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\r\n      instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n      instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n      instrumentFile[\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n      instrumentFile[\"nattachmenttypecode\"] = 1;\r\n      instrumentFile[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\r\n      instrumentFile[\"ninstrumentlogcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\r\n\r\n      instrumentFileArray.push(instrumentFile);\r\n    }\r\n    //  }\r\n    // else {\r\n    //     testFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n    //     testFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\r\n    //     testFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n    //     testFile[\"ssystemfilename\"] = \"\";\r\n    //     testFile[\"nfilesize\"] = 0;\r\n    //     testFileArray.push(testFile);\r\n    // }\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\r\n    // formData.append(\"userinfo\", JSON.stringify(this.props.userInfo));\r\n    const inputParam = {\r\n      inputData: { userinfo: this.props.Login.userInfo },\r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n\r\n      // operation: \"create\",\r\n      classUrl: \"instrument\",\r\n      saveType,\r\n      formRef,\r\n      methodUrl: \"InstrumentFile\",\r\n    };\r\n    return inputParam;\r\n  };\r\n  onSaveInstrumentCalibrationFile = (saveType, formRef) => {\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = 1;\r\n\r\n    let isFileEdited = transactionStatus.NO;\r\n    let instrumentFileArray = [];\r\n    let instrumentFile = {\r\n      ninstrumentfilecode: selectedRecord.ninstrumentfilecode\r\n        ? selectedRecord.ninstrumentfilecode\r\n        : 0,\r\n      nstatus: transactionStatus.ACTIVE,\r\n    };\r\n    const formData = new FormData();\r\n    if (\r\n      acceptedFiles &&\r\n      Array.isArray(acceptedFiles) &&\r\n      acceptedFiles.length > 0\r\n    ) {\r\n      acceptedFiles.forEach((file, index) => {\r\n        const tempData = Object.assign({}, instrumentFile);\r\n        const splittedFileName = file.name.split(\".\");\r\n        const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\r\n        const ssystemfilename = selectedRecord.ssystemfilename\r\n          ? selectedRecord.ssystemfilename.split(\".\")\r\n          : \"\";\r\n        const filesystemfileext = selectedRecord.ssystemfilename\r\n          ? file.name.split(\".\")[ssystemfilename.length - 1]\r\n          : \"\";\r\n        const uniquefilename =\r\n          nattachmenttypecode === attachmentType.FTP\r\n            ? selectedRecord.ninstrumentfilecode &&\r\n              selectedRecord.ninstrumentfilecode > 0 &&\r\n              selectedRecord.ssystemfilename !== \"\"\r\n              ? ssystemfilename[0] + \".\" + filesystemfileext\r\n              : create_UUID() + \".\" + fileExtension\r\n            : \"\";\r\n        tempData[\"sfilename\"] = file.name;\r\n        tempData[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n          ? selectedRecord.sfiledesc.trim()\r\n          : \"\";\r\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"nfilesize\"] = file.size;\r\n        tempData[\"ninstrumentcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n        tempData[\"nattachmenttypecode\"] = 1;\r\n        tempData[\"ninstrumentlogtypecode\"] = 2;\r\n        tempData[\"ninstrumentlogcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        instrumentFileArray.push(tempData);\r\n      });\r\n      formData.append(\"filecount\", acceptedFiles.length);\r\n      isFileEdited = transactionStatus.YES;\r\n    } else {\r\n      instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\r\n      instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n        ? selectedRecord.sfiledesc.trim()\r\n        : \"\";\r\n      instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\r\n      instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n      instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n      instrumentFile[\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n      instrumentFile[\"nattachmenttypecode\"] = 1;\r\n      instrumentFile[\"ninstrumentlogtypecode\"] = 2;\r\n      instrumentFile[\"ninstrumentlogcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\r\n\r\n      instrumentFileArray.push(instrumentFile);\r\n    }\r\n\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\r\n    const inputParam = {\r\n      inputData: { userinfo: this.props.Login.userInfo },\r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n      classUrl: \"instrument\",\r\n      saveType,\r\n      formRef,\r\n      methodUrl: \"InstrumentCalibrationFile\",\r\n    };\r\n    return inputParam;\r\n  };\r\n  onSaveInstrumentMaintenanceFile = (saveType, formRef) => {\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = 1;\r\n\r\n    let isFileEdited = transactionStatus.NO;\r\n    let instrumentFileArray = [];\r\n    let instrumentFile = {\r\n      ninstrumentfilecode: selectedRecord.ninstrumentfilecode\r\n        ? selectedRecord.ninstrumentfilecode\r\n        : 0,\r\n      nstatus: transactionStatus.ACTIVE,\r\n    };\r\n    const formData = new FormData();\r\n    if (\r\n      acceptedFiles &&\r\n      Array.isArray(acceptedFiles) &&\r\n      acceptedFiles.length > 0\r\n    ) {\r\n      acceptedFiles.forEach((file, index) => {\r\n        const tempData = Object.assign({}, instrumentFile);\r\n        const splittedFileName = file.name.split(\".\");\r\n        const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\r\n        const ssystemfilename = selectedRecord.ssystemfilename\r\n          ? selectedRecord.ssystemfilename.split(\".\")\r\n          : \"\";\r\n        const filesystemfileext = selectedRecord.ssystemfilename\r\n          ? file.name.split(\".\")[ssystemfilename.length - 1]\r\n          : \"\";\r\n        const uniquefilename =\r\n          nattachmenttypecode === attachmentType.FTP\r\n            ? selectedRecord.ninstrumentfilecode &&\r\n              selectedRecord.ninstrumentfilecode > 0 &&\r\n              selectedRecord.ssystemfilename !== \"\"\r\n              ? ssystemfilename[0] + \".\" + filesystemfileext\r\n              : create_UUID() + \".\" + fileExtension\r\n            : \"\";\r\n        tempData[\"sfilename\"] = file.name;\r\n        tempData[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n          ? selectedRecord.sfiledesc.trim()\r\n          : \"\";\r\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"nfilesize\"] = file.size;\r\n        tempData[\"ninstrumentcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n        tempData[\"nattachmenttypecode\"] = 1;\r\n        tempData[\"ninstrumentlogtypecode\"] = 2;\r\n        tempData[\"ninstrumentlogcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        instrumentFileArray.push(tempData);\r\n      });\r\n      formData.append(\"filecount\", acceptedFiles.length);\r\n      isFileEdited = transactionStatus.YES;\r\n    } else {\r\n      instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\r\n      instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n        ? selectedRecord.sfiledesc.trim()\r\n        : \"\";\r\n      instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\r\n      instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n      instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n      instrumentFile[\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n      instrumentFile[\"nattachmenttypecode\"] = 1;\r\n      instrumentFile[\"ninstrumentlogtypecode\"] = 2;\r\n      instrumentFile[\"ninstrumentlogcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\r\n\r\n      instrumentFileArray.push(instrumentFile);\r\n    }\r\n\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\r\n    const inputParam = {\r\n      inputData: { userinfo: this.props.Login.userInfo },\r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n      classUrl: \"instrument\",\r\n      saveType,\r\n      formRef,\r\n      methodUrl: \"InstrumentMaintenanceFile\",\r\n    };\r\n    return inputParam;\r\n  };\r\n  onTabChange = (tabProps) => {\r\n    const screenName = tabProps.screenName;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { screenName },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onDropTestFile = (attachedFiles, fieldName, maxSize) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = onDropAttachFileList(\r\n      selectedRecord[fieldName],\r\n      attachedFiles,\r\n      maxSize\r\n    );\r\n    this.setState({ selectedRecord, actionType: \"new\" });\r\n  };\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(\r\n        this.props.Login.masterData[\"selectedSection\"],\r\n        event.dataState\r\n      ),\r\n      sectionDataState: event.dataState,\r\n    });\r\n  };\r\n\r\n  tabDetail = () => {\r\n    const tabMap = new Map();\r\n    const deleteSecId =\r\n      this.state.controlMap.has(\"DeleteSection\") &&\r\n      this.state.controlMap.get(\"DeleteSection\").ncontrolcode;\r\n    const defaultSecId =\r\n      this.state.controlMap.has(\"DefaultSection\") &&\r\n      this.state.controlMap.get(\"DefaultSection\").ncontrolcode;\r\n    tabMap.set(\r\n      \"IDS_SECTION\",\r\n      <InstrumentSectionTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        //dataResult={this.state.dataResult}\r\n        //dataResult={process(this.props.Login.masterData[\"selectedSection\"], (this.props.Login.screenName === undefined || this.props.Login.screenName === \"IDS_SECTION\") ? this.state.sectionDataState : { skip: 0, take: 10 })}\r\n        // dataState={this.state.sectionDataState}\r\n        //dataStateChange={this.dataStateChange}\r\n        dataState={this.props.Login.dataState}\r\n        masterData={this.props.Login.masterData[\"selectedSection\"] || []}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        userInfo={this.props.Login.userInfo}\r\n        inputParam={this.props.Login.inputParam}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteSecId={deleteSecId}\r\n        defaultSecId={defaultSecId}\r\n        defaultRecord={this.defaultRecord}\r\n        getAvailableInstData={this.props.getAvailableInstData}\r\n        InstrumentSection={this.props.Login.masterData.selectedSection || []}\r\n        screenName=\"IDS_SECTION\"\r\n        selectedRecord={this.state.selectedRecord}\r\n        settings={this.props.Login.settings}\r\n      />\r\n    );\r\n    tabMap.set(\r\n      \"IDS_INSTRUMENTVALIDATION\",\r\n      <InstrumentValidationTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        FileData={this.props.Login.masterData.ValidationFileData}\r\n        InstrumentValidation={this.props.Login.masterData.InstrumentValidation}\r\n        masterData={this.props.Login.masterData}\r\n        userInfo={this.props.Login.userInfo}\r\n        getDataForAddEditValidation={this.props.getDataForAddEditValidation}\r\n        inputParam={this.props.inputParam}\r\n        selectedRecord={this.state.selectedRecord}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteTabFileRecord={this.deleteTabFileRecord}\r\n        getTabDetails={this.props.getTabDetails}\r\n        addInstrumentFile={this.props.addInstrumentFile}\r\n        deleteAction={this.props.deleteAction}\r\n        ConfirmDelete={this.ConfirmDelete}\r\n        getDataForEdit={this.props.getDataForEdit}\r\n        addfilecllick={this.addInstrumentFile}\r\n        screenName=\"IDS_INSTRUMENTVALIDATION\"\r\n      />\r\n    );\r\n    tabMap.set(\r\n      \"IDS_INSTRUMENTCALIBRATION\",\r\n      <InstrumentCalibrationTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        FileData={this.props.Login.masterData.CalibrationFileData}\r\n        InstrumentCalibration={\r\n          this.props.Login.masterData.InstrumentCalibration\r\n        }\r\n        masterData={this.props.Login.masterData}\r\n        userInfo={this.props.Login.userInfo}\r\n        getDataForAddEditCalibration={this.props.getDataForAddEditCalibration}\r\n        inputParam={this.props.inputParam}\r\n        selectedRecord={this.state.selectedRecord}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteTabFileRecord={this.deleteTabFileRecord}\r\n        getTabDetails={this.props.getTabDetails}\r\n        addInstrumentFile={this.props.addInstrumentFile}\r\n        addfilecllick={this.addInstrumentCalibrationFile}\r\n        deleteAction={this.props.deleteAction}\r\n        ConfirmDelete={this.ConfirmDelete}\r\n        addOpenDate={this.props.addOpenDate}\r\n        OpenDate={this.props.OpenDate}\r\n        CloseDate={this.props.CloseDate}\r\n        screenName=\"IDS_INSTRUMENTCALIBRATION\"\r\n      />\r\n    );\r\n    tabMap.set(\r\n      \"IDS_INSTRUMENTMAINTENANCE\",\r\n      <InstrumentMaintenanceTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        FileData={this.props.Login.masterData.MaintenanceFileData}\r\n        InstrumentMaintenance={\r\n          this.props.Login.masterData.InstrumentMaintenance\r\n        }\r\n        masterData={this.props.Login.masterData}\r\n        userInfo={this.props.Login.userInfo}\r\n        getDataForAddEditMaintenance={this.props.getDataForAddEditMaintenance}\r\n        inputParam={this.props.inputParam}\r\n        selectedRecord={this.state.selectedRecord}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteTabFileRecord={this.deleteTabFileRecord}\r\n        getTabDetails={this.props.getTabDetails}\r\n        addInstrumentFile={this.props.addInstrumentFile}\r\n        addfilecllick={this.addInstrumentMaintenanceFile}\r\n        deleteAction={this.props.deleteAction}\r\n        ConfirmDelete={this.ConfirmDelete}\r\n        addOpenDate={this.props.addOpenDate}\r\n        OpenDate={this.props.OpenDate}\r\n        CloseDate={this.props.CloseDate}\r\n        screenName=\"IDS_INSTRUMENTMAINTENANCE\"\r\n      />\r\n    );\r\n\r\n    return tabMap;\r\n  };\r\n\r\n  ConfirmDelete = (operation, deleteId) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.DeleteInstrument(\r\n          operation,\r\n          deleteId,\r\n          operation.screenName ? operation.screenName : \"IDS_INSTRUMENT\"\r\n        )\r\n    );\r\n  };\r\n  addInstrumentFile = (ncontrolCode, screenName) => {\r\n    let inputData = [];\r\n    let openModal = this.props.Login.openModal;\r\n    let operation = \"create\";\r\n    screenName = this.props.Login.screenName;\r\n    screenName = \"IDS_INSTRUMENTVALIDATIONFILE\";\r\n    openModal = true;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, screenName, inputData, operation },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  addInstrumentCalibrationFile = (ncontrolCode, screenName) => {\r\n    let inputData = [];\r\n    let openModal = this.props.Login.openModal;\r\n    let operation = \"create\";\r\n    screenName = this.props.Login.screenName;\r\n    screenName = \"IDS_INSTRUMENTCALIBRATIONFILE\";\r\n    openModal = true;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, screenName, inputData, operation },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n  addInstrumentMaintenanceFile = (ncontrolCode, screenName) => {\r\n    let inputData = [];\r\n    let openModal = this.props.Login.openModal;\r\n    let operation = \"create\";\r\n    screenName = this.props.Login.screenName;\r\n    screenName = \"IDS_INSTRUMENTMAINTENANCEFILE\";\r\n    openModal = true;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, screenName, inputData, operation },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  reloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n    if (this.state.nfilterInstrumentCategory.value) {\r\n      let inputParam = {\r\n        inputData: {\r\n          ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\r\n          userinfo: this.props.Login.userInfo,\r\n          nfilterInstrumentCategory: this.state.nfilterInstrumentCategory,\r\n        },\r\n        classUrl: \"instrument\",\r\n        methodUrl: \"InsByInstrumentCat\",\r\n      };\r\n      this.props.changeInstrumentCategoryFilter(\r\n        inputParam,\r\n        this.props.Login.masterData.filterInstrumentCategory\r\n      );\r\n    } else {\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  onComboChange = (comboData, fieldName, caseNo) => {\r\n    if (comboData !== null) {\r\n      const selectedRecord = this.state.selectedRecord || {};\r\n      switch (caseNo) {\r\n        case 1:\r\n          selectedRecord[fieldName] = comboData;\r\n          this.setState({ selectedRecord });\r\n          break;\r\n        case 2:\r\n          selectedRecord[fieldName] = comboData;\r\n          selectedRecord[\"nsectionusercode\"] = comboData.value;\r\n          // this.setState({ selectedRecord });\r\n          // selectedRecord[fieldName] = comboData;\r\n          // this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"create\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, this.state.selectedRecord.nsectioncode);\r\n          this.props.getSectionUsers(\r\n            this.state.selectedRecord.nsectionusercode,\r\n            this.props.Login.userInfo,\r\n            selectedRecord,\r\n            this.props.Login.screenName\r\n          );\r\n          break;\r\n        case 3:\r\n          let nfilterInstrumentCategory =\r\n            this.state.nfilterInstrumentCategory || {};\r\n          nfilterInstrumentCategory = comboData;\r\n          this.searchRef.current.value = \"\";\r\n          this.setState({ nfilterInstrumentCategory });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n      if (this.props.Login.operation === \"delete\") {\r\n        loadEsign = false;\r\n        openModal = false;\r\n        selectedRecord = {};\r\n      } else {\r\n        loadEsign = false;\r\n      }\r\n    } else {\r\n      openModal = false;\r\n      selectedRecord = {};\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, loadEsign, selectedRecord, selectedId: null },\r\n      // data: {openModal, loadEsign, selectedRecord}\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n  closeModalShow = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n\r\n    let modalShow = this.props.Login.modalShow;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n      loadEsign = false;\r\n    } else {\r\n      modalShow = false;\r\n      selectedRecord = {};\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { modalShow, selectedRecord, selectedId: null, loadEsign },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  componentDidUpdate(previousProps) {\r\n    let updateState = false;\r\n    let {\r\n      selectedRecord,\r\n      userRoleControlRights,\r\n      controlMap,\r\n      filterData,\r\n      nfilterInstrumentCategory,\r\n      filterInstrumentCategory,\r\n    } = this.state;\r\n    if (\r\n      this.props.Login.selectedRecord !== previousProps.Login.selectedRecord\r\n    ) {\r\n      selectedRecord = this.props.Login.selectedRecord;\r\n      updateState = true;\r\n    }\r\n    if (\r\n      this.props.Login.userInfo.nformcode !==\r\n      previousProps.Login.userInfo.nformcode\r\n    ) {\r\n      userRoleControlRights = [];\r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[\r\n          this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n              this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      // this.setState({ userRoleControlRights, controlMap });\r\n      updateState = true;\r\n    }\r\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n      nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\r\n      if (\r\n        this.props.Login.masterData.SelectedInsCat &&\r\n        this.props.Login.masterData.SelectedInsCat !==\r\n          previousProps.Login.masterData.SelectedInsCat\r\n      ) {\r\n        nfilterInstrumentCategory = {\r\n          label: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname,\r\n          value: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\r\n          item: this.props.Login.masterData.SelectedInsCat,\r\n        };\r\n      }\r\n      filterData = this.generateBreadCrumData();\r\n      // this.setState({ filterData, nfilterInstrumentCategory });\r\n      updateState = true;\r\n    }\r\n    if (\r\n      this.props.Login.masterData.filterInstrumentCategory !==\r\n      previousProps.Login.masterData.filterInstrumentCategory\r\n    ) {\r\n      const insCategoryMap = constructOptionList(\r\n        this.props.Login.masterData.filterInstrumentCategory || [],\r\n        \"ninstrumentcatcode\",\r\n        \"sinstrumentcatname\",\r\n        \"ntestcategorycode\",\r\n        \"ascending\",\r\n        false\r\n      );\r\n      filterInstrumentCategory = insCategoryMap.get(\"OptionList\");\r\n      if (insCategoryMap.get(\"DefaultValue\")) {\r\n        nfilterInstrumentCategory = insCategoryMap.get(\"DefaultValue\");\r\n      } else if (\r\n        filterInstrumentCategory &&\r\n        filterInstrumentCategory.length > 0\r\n      ) {\r\n        nfilterInstrumentCategory = filterInstrumentCategory[0];\r\n      }\r\n      // this.setState({ nfilterInstrumentCategory, filterInstrumentCategory });\r\n      updateState = true;\r\n    }\r\n    if (updateState) {\r\n      this.setState({\r\n        // dataResult: process(this.props.Login.masterData[\"selectedSection\"]||[], this.state.sectionDataState),\r\n        selectedRecord,\r\n        userRoleControlRights,\r\n        controlMap,\r\n        filterData,\r\n        nfilterInstrumentCategory,\r\n        filterInstrumentCategory,\r\n      });\r\n    }\r\n  }\r\n  generateBreadCrumData() {\r\n    const breadCrumbData = [];\r\n    if (\r\n      this.props.Login.masterData &&\r\n      this.props.Login.masterData.filterInstrumentCategory\r\n    ) {\r\n      breadCrumbData.push({\r\n        label: \"IDS_INSTRUMENTCATEGORY\",\r\n        value: this.props.Login.masterData.SelectedInsCat\r\n          ? this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\r\n          : \"NA\",\r\n      });\r\n    }\r\n    return breadCrumbData;\r\n  }\r\n\r\n  openFilter = () => {\r\n    let showFilter = !this.props.Login.showFilter;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  closeFilter = () => {\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter: false },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onFilterSubmit = () => {\r\n    if (this.state.nfilterInstrumentCategory.value) {\r\n      let inputParam = {\r\n        inputData: {\r\n          ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\r\n          userinfo: this.props.Login.userInfo,\r\n          nfilterInstrumentCategory: this.state.nfilterInstrumentCategory,\r\n        },\r\n        classUrl: \"instrument\",\r\n        methodUrl: \"InsByInstrumentCat\",\r\n      };\r\n      this.props.changeInstrumentCategoryFilter(\r\n        inputParam,\r\n        this.props.Login.masterData.filterInstrumentCategory\r\n      );\r\n    } else {\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  getInstrumentDetail,\r\n  filterColumnData,\r\n  getInstrumentCombo,\r\n  updateStore,\r\n  validateEsignCredential,\r\n  getSectionUsers,\r\n  getAvailableInstData,\r\n  changeInstrumentCategoryFilter,\r\n  getTabDetails,\r\n  getDataForAddEditValidation,\r\n  addInstrumentFile,\r\n  getDataForAddEditCalibration,\r\n  getDataForAddEditMaintenance,\r\n  OpenDate,\r\n  CloseDate,\r\n})(injectIntl(Instrument));\r\n"]},"metadata":{},"sourceType":"module"}