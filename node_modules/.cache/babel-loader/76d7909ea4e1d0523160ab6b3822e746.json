{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{DEFAULT_RETURN,UPDATE_LANGUAGE,REQUEST_INIT}from'./LoginTypes';import rsapi from\"../rsapi\";import{intl}from'../components/App';import{toast}from'react-toastify';import{constructjsonOptionList,constructOptionList,rearrangeDateFormat}from'../components/CommonScript';import{getHomeDashBoard}from'./DashBoardTypeAction';import{getListStaticDashBoard}from'./StaticDashBoardAction';import{getListAlert}from'./AlertViewAction';import{getRandomColor}from'../components/header/headerutils';import{loadMessages,LocalizationProvider}from'@progress/kendo-react-intl';import messages_ru from'../assets/translations/ru.json';import messages_tg from'../assets/translations/tg.json';import messages_en from'../assets/translations/en.json';import messages_de from'../assets/translations/de.json';var messages={'en-US':messages_en,'ko-KR':messages_de,'ru-RU':messages_ru,'tg-TG':messages_tg};export var initRequest=function initRequest(loading){return{type:REQUEST_INIT,payload:loading};};export var navPage=function navPage(data){return function(dispatch){dispatch({type:DEFAULT_RETURN,payload:{navigation:data}});};};export var changeLanguage=function changeLanguage(language,selectedRecord,loginType){return function(dispatch){var loginTypeMap=constructjsonOptionList(loginType||[],\"nlogintypecode\",\"sdisplayname\",false,false,true,undefined,'jsondata',true,language);dispatch({type:UPDATE_LANGUAGE,payload:_defineProperty({language:language,selectedRecord:selectedRecord,loginTypeList:loginTypeMap.get(\"OptionList\")},\"selectedRecord\",_objectSpread(_objectSpread({},selectedRecord),{},{nlogintypecode:loginTypeMap.get(\"DefaultValue\")?loginTypeMap.get(\"DefaultValue\"):\"\"}))});};};export var clickOnLoginButton=function clickOnLoginButton(inputData,languageList){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputData.url,inputData).then(function(response){var returnStr=response.data[\"rtn\"];if(returnStr.toUpperCase()===\"SUCCESS\"){var responseData=response.data;var PassFlag=responseData.PassFlag;languageList&&languageList.map(function(x){loadMessages(messages[inputData.slanguagetypecode],inputData.slanguagetypecode);});dispatch({type:DEFAULT_RETURN,payload:{openCPModal:response.data.PassFlag===6||PassFlag===55?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:PassFlag===6?\"IDS_CREATEPASSWORD\":PassFlag===55?\"IDS_CHANGEPASSWORD\":\"\",PassFlag:PassFlag,userInfo:{nlogintypecode:inputData.nlogintypecode}}});if(responseData.PassFlag!==6&&responseData.PassFlag!==55){var inputParam={userInfo:responseData.UserInfo,menuDesign:responseData.MenuDesign,navigation:inputData.navigation,userRoleControlRights:responseData.UserRoleControlRights,userFormControlProperties:responseData.UserFormControlproperties,transactionValidation:responseData.TransactionValidation,displayName:\"\",userMultiRole:responseData.UserMultiRole,settings:responseData.Settings,sdmselnsettings:responseData.SDMSELNSettings,deputyUser:response.data.DeputyUser,deputyUserRole:response.data.DeputyUserRole,isDeputyLogin:false,loading:false,userImagePath:responseData.UserImagePath,//profileColor: \"#002699\",\nprofileColor:responseData.UserImagePath===\"\"?getRandomColor([240,360],[90,100],[0,95],[1,1]):\"#ff0000\",idleneed:true};dispatch({type:DEFAULT_RETURN,payload:inputParam});dispatch(getListStaticDashBoard(responseData.UserInfo,1));// dispatch(getHomeDashBoard(responseData.UserInfo, 0, false));\ndispatch(getListAlert(responseData.UserInfo,true));if(responseData.PasswordAlertDay){toast.info(intl.formatMessage({id:\"IDS_PASSWORDEXPIRY\"})+\" \"+responseData.PasswordAlertDay+\" \"+intl.formatMessage({id:\"IDS_DAY\"}));}}}else{toast.warn(intl.formatMessage({id:returnStr}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var submitChangeRole=function submitChangeRole(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getuserscreenrightsmenu\",inputParam).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{userInfo:response.data.UserInfo,menuDesign:response.data.MenuDesign,userRoleControlRights:response.data.UserRoleControlRights,userMultiRole:response.data.UserMultiRole,deputyUser:response.data.DeputyUser,deputyUserRole:response.data.DeputyUserRole,loading:false,masterData:[],displayName:\"\",navigation:\"home\",inputParam:{},openRoleBox:false}});dispatch(getListStaticDashBoard(response.data.UserInfo,1));dispatch(getHomeDashBoard(response.data.UserInfo,0,false));dispatch(getListAlert(response.data.UserInfo));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var updateStore=function updateStore(updateInfo){return function(dispatch){if(updateInfo.data.loadEsign===true){dispatch(initRequest(true));rsapi.post(\"/timezone/getLocalTimeByZone\",{\"userinfo\":updateInfo.data.screenData.inputParam.inputData.userinfo}).then(function(response){dispatch({type:updateInfo.typeName,payload:_objectSpread(_objectSpread({serverTime:rearrangeDateFormat(updateInfo.data.screenData.inputParam.inputData.userinfo,response.data)},updateInfo.data),{},{masterStatus:\"\",errorCode:undefined,loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{dispatch({type:updateInfo.typeName,payload:_objectSpread(_objectSpread({},updateInfo.data),{},{masterStatus:\"\",errorCode:undefined})});}};};export var getChangeUserRole=function getChangeUserRole(userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getchangerole\",{\"userinfo\":userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},response.data),{},{loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getLoginDetails=function getLoginDetails(){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getloginInfo\",{}).then(function(response){// let loginType = [];\n// response.data.LoginType.map(type => {\n//     loginType\n// })\nvar languageMap=constructOptionList(response.data.Language||[],\"slanguagetypecode\",\"slanguagename\",false,false,true);var defaultLanguage=languageMap.get(\"DefaultValue\")?languageMap.get(\"DefaultValue\"):undefined;var languageCode=defaultLanguage?defaultLanguage.value:\"en-US\";var loginTypeMap=constructjsonOptionList(response.data.LoginType||[],\"nlogintypecode\",\"sdisplayname\",false,false,true,undefined,'jsondata',true,languageCode);dispatch({type:DEFAULT_RETURN,payload:{loginTypes:response.data.LoginType,loginTypeList:loginTypeMap.get(\"OptionList\"),languageList:languageMap.get(\"OptionList\"),selectedRecord:{nlogintypecode:loginTypeMap.get(\"DefaultValue\")?loginTypeMap.get(\"DefaultValue\"):\"\",nlanguagecode:defaultLanguage||\"\"},language:defaultLanguage.value,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getUserSiteAndRole=function getUserSiteAndRole(inputParam,selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getloginvalidation\",_objectSpread({},inputParam)).then(function(response){var roleMap=constructOptionList(response.data.UserMultiRole||[],\"nusermultirolecode\",\"suserrolename\",false,false,true,\"ndefaultrole\");var siteMap=constructOptionList(response.data.Site||[],\"nusersitecode\",\"ssitename\",false,false,true,\"ndefaultsite\");var loggeInLoginTypeCode=response.data.Users.nlogintypecode;var logintypecode=inputParam.logintype.filter(function(x){return x.value===loggeInLoginTypeCode;});if(inputParam.logintype.length>0&&logintypecode.length===0){logintypecode=inputParam.logintype;loggeInLoginTypeCode=logintypecode[0].value;}dispatch({type:DEFAULT_RETURN,payload:{loginUserRole:roleMap.get(\"OptionList\"),loginUserSite:siteMap.get(\"OptionList\"),selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\",nusersitecode:siteMap.get(\"DefaultValue\")?siteMap.get(\"DefaultValue\"):siteMap.get(\"OptionList\")?siteMap.get(\"OptionList\")[0]:\"\",nusercode:response.data.Users.nusercode,nlogintypecode:logintypecode?logintypecode[0]:\"\"}),openCPModal:response.data.PassFlag===6?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:\"IDS_CREATEPASSWORD\",loading:false,PassFlag:response.data.PassFlag,createPwdRecord:{},userInfo:{nlogintypecode:loggeInLoginTypeCode}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loginUserRole:[],loginUserSite:[],selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusermultirolecode:\"\",nusersitecode:\"\"})}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var createPassword=function createPassword(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/createnewpassword\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:false,loading:false,createPwdRecord:{}}});toast.success(intl.formatMessage({id:\"IDS_PASSWORDCREATEDSUCCESSFULLY\"}));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var changepassword=function changepassword(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/changepassword\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:false,loading:false,createPwdRecord:{},navigation:\"login\"}});toast.success(intl.formatMessage({id:\"IDS_PASSWORDCHANGEDSUCCESSFULLY\"}));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getPassWordPolicy=function getPassWordPolicy(nuserrolecode){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getPassWordPolicy\",{nuserrolecode:nuserrolecode}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:true,loading:false,createPwdRecord:{},screenName:\"IDS_CHANGEPASSWORD\",passwordPolicy:response.data.PasswordPolicy}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var changeOwner=function changeOwner(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/changeOwner\",_objectSpread({},inputData)).then(function(response){var responseData=response.data;var inputParam={userInfo:responseData.UserInfo,menuDesign:responseData.MenuDesign,userRoleControlRights:responseData.UserRoleControlRights,userFormControlProperties:responseData.UserFormControlproperties,transactionValidation:responseData.TransactionValidation,displayName:\"\",userMultiRole:responseData.UserMultiRole,isDeputyLogin:true,// settings: responseData.Settings,\n// deputyUser: response.data.DeputyUser,\n// deputyUserRole: response.data.DeputyUserRole,\nloading:false,masterData:[],navigation:\"home\",inputParam:{},openRoleBox:false,userImagePath:responseData.UserImagePath,profileColor:responseData.UserImagePath===\"\"?getRandomColor([240,360],[90,100],[0,95],[1,1]):\"#ff0000\",idleneed:true};dispatch({type:DEFAULT_RETURN,payload:inputParam});dispatch(getListStaticDashBoard(response.data.UserInfo,1));dispatch(getHomeDashBoard(response.data.UserInfo,0,false));dispatch(getListAlert(response.data.UserInfo));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var logOutAuditAction=function logOutAuditAction(inputData,languageList){return function(dispatch){dispatch(initRequest(true));rsapi.post('login/insertAuditAction',_objectSpread(_objectSpread({},inputData),{},{nFlag:2})).then(function(response){languageList&&languageList.map(function(x){loadMessages({},x.slanguagetypecode);});dispatch(navPage(\"login\"));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var elnLoginAction=function elnLoginAction(inputParam,serverUrl,uiUrl){return function(dispatch){dispatch(initRequest(true));rsapi.post(serverUrl,_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(response!==null&&response.data.objResponse!==null){if(response.data.objResponse.status){if(uiUrl){var user=response;var elnURL=uiUrl+\"#\"+user.data.username+\"$\"+user.data.password;window.open(elnURL,'_blank');}else{toast.info(intl.FormattedMessage({id:\"IDS_ELNUIURLNOTAVAILABLE\"}));}}else{toast.info(response.data.objResponse.information);}// if(!$(\"#appsdetails\").is(\":hidden\")){\n//     $('#appsdetails').addClass(\"dp-none\");\n// }\n};}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var sdmsLoginAction=function sdmsLoginAction(inputParam,serverUrl,sdmsUIUrl){return function(dispatch){dispatch(initRequest(true));rsapi.post(serverUrl,_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(response!==null&&response.data.status){if(response.data.status){var sdmsURL=sdmsUIUrl+\"?un=\"+response.data.username+\"&pd=\"+response.data.password+\"&sc=\"+inputParam.sSiteCode;window.open(sdmsURL,'_blank');}else{toast.info(response.Message);}}else{toast.info(intl.FormattedMessage({id:\"IDS_CHECKSYNCSERVICE\"}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var getUsersiteRole=function getUsersiteRole(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post('login/changeSite',{\"usersSite\":inputParam.selectedRecord.nusersitecode.item}).then(function(response){var roleMap=constructOptionList(response.data.UserMultiRole||[],\"nusermultirolecode\",\"suserrolename\",false,false,true,\"ndefaultrole\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,loginUserRole:roleMap.get(\"OptionList\"),selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\"})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var checkPassword=function checkPassword(inputParam,selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getlogintypevalidation\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusercode:response.data.Users.nusercode}),userInfo:{nlogintypecode:inputParam.nlogintypecode},openCPModal:response.data.PassFlag===6?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:\"IDS_CREATEPASSWORD\",loading:false,PassFlag:response.data.PassFlag,createPwdRecord:{}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/LoginAction.js"],"names":["DEFAULT_RETURN","UPDATE_LANGUAGE","REQUEST_INIT","rsapi","intl","toast","constructjsonOptionList","constructOptionList","rearrangeDateFormat","getHomeDashBoard","getListStaticDashBoard","getListAlert","getRandomColor","loadMessages","LocalizationProvider","messages_ru","messages_tg","messages_en","messages_de","messages","initRequest","loading","type","payload","navPage","data","dispatch","navigation","changeLanguage","language","selectedRecord","loginType","loginTypeMap","undefined","loginTypeList","get","nlogintypecode","clickOnLoginButton","inputData","languageList","post","url","then","response","returnStr","toUpperCase","responseData","PassFlag","map","x","slanguagetypecode","openCPModal","passwordPolicy","PasswordPolicy","screenName","userInfo","inputParam","UserInfo","menuDesign","MenuDesign","userRoleControlRights","UserRoleControlRights","userFormControlProperties","UserFormControlproperties","transactionValidation","TransactionValidation","displayName","userMultiRole","UserMultiRole","settings","Settings","sdmselnsettings","SDMSELNSettings","deputyUser","DeputyUser","deputyUserRole","DeputyUserRole","isDeputyLogin","userImagePath","UserImagePath","profileColor","idleneed","PasswordAlertDay","info","formatMessage","id","warn","catch","error","status","message","submitChangeRole","masterData","openRoleBox","updateStore","updateInfo","loadEsign","screenData","userinfo","typeName","serverTime","masterStatus","errorCode","getChangeUserRole","getLoginDetails","languageMap","Language","defaultLanguage","languageCode","value","LoginType","loginTypes","nlanguagecode","getUserSiteAndRole","roleMap","siteMap","Site","loggeInLoginTypeCode","Users","logintypecode","logintype","filter","length","loginUserRole","loginUserSite","nusermultirolecode","nusersitecode","nusercode","createPwdRecord","createPassword","success","changepassword","getPassWordPolicy","nuserrolecode","changeOwner","logOutAuditAction","nFlag","elnLoginAction","serverUrl","uiUrl","objResponse","user","elnURL","username","password","window","open","FormattedMessage","information","sdmsLoginAction","sdmsUIUrl","sdmsURL","sSiteCode","Message","getUsersiteRole","item","checkPassword"],"mappings":"qUAAA,OACIA,cADJ,CAEIC,eAFJ,CAGIC,YAHJ,KAIO,cAJP,CAKA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,OACIC,IADJ,KAEO,mBAFP,CAGA,OACIC,KADJ,KAEO,gBAFP,CAGA,OACIC,uBADJ,CAEIC,mBAFJ,CAEyBC,mBAFzB,KAGO,4BAHP,CAIA,OACIC,gBADJ,KAEO,uBAFP,CAGA,OACIC,sBADJ,KAEO,yBAFP,CAGA,OACIC,YADJ,KAEO,mBAFP,CAGA,OACIC,cADJ,KAEO,kCAFP,CAIA,OAASC,YAAT,CAAuBC,oBAAvB,KAAmD,4BAAnD,CAEA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,CACb,QAASF,WADI,CAEb,QAASC,WAFI,CAGb,QAASH,WAHI,CAIb,QAASC,WAJI,CAAjB,CAQA,MAAO,IAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,CAAa,CACpC,MAAO,CACHC,IAAI,CAAEpB,YADH,CAEHqB,OAAO,CAAEF,OAFN,CAAP,CAIH,CALM,CAOP,MAAO,IAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,QAAU,UAAAC,QAAQ,CAAI,CACzCA,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLI,UAAU,CAAEF,IADP,CAFJ,CAAD,CAAR,CAMH,CAPsB,EAAhB,CASP,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,QAAD,CAAWC,cAAX,CAA2BC,SAA3B,QAAyC,UAACL,QAAD,CAAc,CACjF,GAAMM,CAAAA,YAAY,CAAG1B,uBAAuB,CAACyB,SAAS,EAAI,EAAd,CAAkB,gBAAlB,CACxC,cADwC,CACxB,KADwB,CACjB,KADiB,CACV,IADU,CACJE,SADI,CACO,UADP,CACmB,IADnB,CACyBJ,QADzB,CAA5C,CAEAH,QAAQ,CAAC,CACLJ,IAAI,CAAErB,eADD,CAELsB,OAAO,kBACHM,QAAQ,CAARA,QADG,CAEHC,cAAc,CAAdA,cAFG,CAGHI,aAAa,CAAEF,YAAY,CAACG,GAAb,CAAiB,YAAjB,CAHZ,kDAKIL,cALJ,MAMCM,cAAc,CAAEJ,YAAY,CAACG,GAAb,CAAiB,cAAjB,EAAmCH,YAAY,CAACG,GAAb,CAAiB,cAAjB,CAAnC,CAAsE,EANvF,GAFF,CAAD,CAAR,CAYH,CAf6B,EAAvB,CAiBP,MAAO,IAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,SAAD,CAAYC,YAAZ,CAA6B,CAC3D,MAAO,UAACb,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAWF,SAAS,CAACG,GAArB,CAA0BH,SAA1B,EACKI,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAMC,CAAAA,SAAS,CAAGD,QAAQ,CAAClB,IAAT,CAAc,KAAd,CAAlB,CACA,GAAImB,SAAS,CAACC,WAAV,KAA4B,SAAhC,CAA2C,CACvC,GAAMC,CAAAA,YAAY,CAAGH,QAAQ,CAAClB,IAA9B,CACA,GAAMsB,CAAAA,QAAQ,CAAGD,YAAY,CAACC,QAA9B,CAEAR,YAAY,EACRA,YAAY,CAACS,GAAb,CAAiB,SAAAC,CAAC,CAAI,CAClBpC,YAAY,CAACM,QAAQ,CAACmB,SAAS,CAACY,iBAAX,CAAT,CAAwCZ,SAAS,CAACY,iBAAlD,CAAZ,CACH,CAFD,CADJ,CAKAxB,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACL4B,WAAW,CAAER,QAAQ,CAAClB,IAAT,CAAcsB,QAAd,GAA2B,CAA3B,EAAgCA,QAAQ,GAAK,EAA7C,CAAkD,IAAlD,CAAyD,KADjE,CAELK,cAAc,CAAET,QAAQ,CAAClB,IAAT,CAAc4B,cAFzB,CAGLC,UAAU,CAAEP,QAAQ,GAAK,CAAb,CAAiB,oBAAjB,CAAwCA,QAAQ,GAAK,EAAb,CAAkB,oBAAlB,CAAyC,EAHxF,CAILA,QAAQ,CAARA,QAJK,CAKLQ,QAAQ,CAAE,CACNnB,cAAc,CAAEE,SAAS,CAACF,cADpB,CALL,CAFJ,CAAD,CAAR,CAYA,GAAIU,YAAY,CAACC,QAAb,GAA0B,CAA1B,EAA+BD,YAAY,CAACC,QAAb,GAA0B,EAA7D,CAAiE,CAC7D,GAAMS,CAAAA,UAAU,CAAG,CACfD,QAAQ,CAAET,YAAY,CAACW,QADR,CAEfC,UAAU,CAAEZ,YAAY,CAACa,UAFV,CAGfhC,UAAU,CAAEW,SAAS,CAACX,UAHP,CAIfiC,qBAAqB,CAAEd,YAAY,CAACe,qBAJrB,CAKfC,yBAAyB,CAAEhB,YAAY,CAACiB,yBALzB,CAMfC,qBAAqB,CAAElB,YAAY,CAACmB,qBANrB,CAOfC,WAAW,CAAE,EAPE,CAQfC,aAAa,CAAErB,YAAY,CAACsB,aARb,CASfC,QAAQ,CAAEvB,YAAY,CAACwB,QATR,CAUfC,eAAe,CAAEzB,YAAY,CAAC0B,eAVf,CAWfC,UAAU,CAAE9B,QAAQ,CAAClB,IAAT,CAAciD,UAXX,CAYfC,cAAc,CAAEhC,QAAQ,CAAClB,IAAT,CAAcmD,cAZf,CAafC,aAAa,CAAE,KAbA,CAcfxD,OAAO,CAAE,KAdM,CAefyD,aAAa,CAAEhC,YAAY,CAACiC,aAfb,CAgBf;AACAC,YAAY,CAAElC,YAAY,CAACiC,aAAb,GAA+B,EAA/B,CAAoCnE,cAAc,CAAC,CAAC,GAAD,CAAM,GAAN,CAAD,CAAa,CAAC,EAAD,CAAK,GAAL,CAAb,CAAwB,CAAC,CAAD,CAAI,EAAJ,CAAxB,CAAiC,CAAC,CAAD,CAAI,CAAJ,CAAjC,CAAlD,CAA6F,SAjB5F,CAkBfqE,QAAQ,CAAE,IAlBK,CAAnB,CAoBAvD,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAEiC,UAFJ,CAAD,CAAR,CAKA9B,QAAQ,CAAChB,sBAAsB,CAACoC,YAAY,CAACW,QAAd,CAAwB,CAAxB,CAAvB,CAAR,CACA;AACA/B,QAAQ,CAACf,YAAY,CAACmC,YAAY,CAACW,QAAd,CAAwB,IAAxB,CAAb,CAAR,CACA,GAAIX,YAAY,CAACoC,gBAAjB,CAAmC,CAC/B7E,KAAK,CAAC8E,IAAN,CAAW/E,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAE,oBADsB,CAAnB,EAEN,GAFM,CAEAvC,YAAY,CAACoC,gBAFb,CAEgC,GAFhC,CAEsC9E,IAAI,CAACgF,aAAL,CAAmB,CAChEC,EAAE,CAAE,SAD4D,CAAnB,CAFjD,EAKH,CACJ,CACJ,CA1DD,IA0DO,CACHhF,KAAK,CAACiF,IAAN,CAAWlF,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAEzC,SADsB,CAAnB,CAAX,EAGH,CACJ,CAlEL,EAmEK2C,KAnEL,CAmEW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAImE,KAAK,CAAC7C,QAAN,CAAe8C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpF,KAAK,CAACmF,KAAN,CAAYpF,IAAI,CAACgF,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHrF,KAAK,CAACiF,IAAN,CAAWlF,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC7C,QAAN,CAAelB,IADO,CAAnB,CAAX,EAGH,CACJ,CAnFL,EAoFH,CAtFD,CAuFH,CAxFM,CA0FP,MAAO,IAAMkE,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACnC,UAAD,CAAgB,CAC5C,MAAO,UAAC9B,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAW,gCAAX,CAA6CgB,UAA7C,EACKd,IADL,CACU,SAAAC,QAAQ,CAAI,CACdjB,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLgC,QAAQ,CAAEZ,QAAQ,CAAClB,IAAT,CAAcgC,QADnB,CAELC,UAAU,CAAEf,QAAQ,CAAClB,IAAT,CAAckC,UAFrB,CAGLC,qBAAqB,CAAEjB,QAAQ,CAAClB,IAAT,CAAcoC,qBAHhC,CAILM,aAAa,CAAExB,QAAQ,CAAClB,IAAT,CAAc2C,aAJxB,CAKLK,UAAU,CAAE9B,QAAQ,CAAClB,IAAT,CAAciD,UALrB,CAMLC,cAAc,CAAEhC,QAAQ,CAAClB,IAAT,CAAcmD,cANzB,CAOLvD,OAAO,CAAE,KAPJ,CAQLuE,UAAU,CAAE,EARP,CASL1B,WAAW,CAAE,EATR,CAULvC,UAAU,CAAE,MAVP,CAWL6B,UAAU,CAAE,EAXP,CAYLqC,WAAW,CAAE,KAZR,CAFJ,CAAD,CAAR,CAiBAnE,QAAQ,CAAChB,sBAAsB,CAACiC,QAAQ,CAAClB,IAAT,CAAcgC,QAAf,CAAyB,CAAzB,CAAvB,CAAR,CACA/B,QAAQ,CAACjB,gBAAgB,CAACkC,QAAQ,CAAClB,IAAT,CAAcgC,QAAf,CAAyB,CAAzB,CAA4B,KAA5B,CAAjB,CAAR,CACA/B,QAAQ,CAACf,YAAY,CAACgC,QAAQ,CAAClB,IAAT,CAAcgC,QAAf,CAAb,CAAR,CACH,CAtBL,EAuBK8B,KAvBL,CAuBW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAImE,KAAK,CAAC7C,QAAN,CAAe8C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpF,KAAK,CAACmF,KAAN,CAAYpF,IAAI,CAACgF,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHrF,KAAK,CAACiF,IAAN,CAAWlF,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC7C,QAAN,CAAelB,IADO,CAAnB,CAAX,EAGH,CACJ,CAvCL,EAwCH,CA1CD,CA2CH,CA5CM,CA8CP,MAAO,IAAMqE,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,UAAD,QAAgB,UAAArE,QAAQ,CAAI,CACnD,GAAIqE,UAAU,CAACtE,IAAX,CAAgBuE,SAAhB,GAA8B,IAAlC,CAAwC,CACpCtE,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAW,8BAAX,CAA2C,CACvC,WAAYuD,UAAU,CAACtE,IAAX,CAAgBwE,UAAhB,CAA2BzC,UAA3B,CAAsClB,SAAtC,CAAgD4D,QADrB,CAA3C,EAGKxD,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdjB,QAAQ,CAAC,CACLJ,IAAI,CAAEyE,UAAU,CAACI,QADZ,CAEL5E,OAAO,8BACH6E,UAAU,CAAE5F,mBAAmB,CAACuF,UAAU,CAACtE,IAAX,CAAgBwE,UAAhB,CAA2BzC,UAA3B,CAAsClB,SAAtC,CAAgD4D,QAAjD,CAA2DvD,QAAQ,CAAClB,IAApE,CAD5B,EAEAsE,UAAU,CAACtE,IAFX,MAGH4E,YAAY,CAAE,EAHX,CAIHC,SAAS,CAAErE,SAJR,CAKHZ,OAAO,CAAE,KALN,EAFF,CAAD,CAAR,CAUH,CAdL,EAeKkE,KAfL,CAeW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAImE,KAAK,CAAC7C,QAAN,CAAe8C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpF,KAAK,CAACmF,KAAN,CAAYpF,IAAI,CAACgF,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHrF,KAAK,CAACiF,IAAN,CAAWlF,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC7C,QAAN,CAAelB,IADO,CAAnB,CAAX,EAGH,CACJ,CA/BL,EAgCH,CAlCD,IAkCO,CACHC,QAAQ,CAAC,CACLJ,IAAI,CAAEyE,UAAU,CAACI,QADZ,CAEL5E,OAAO,gCACAwE,UAAU,CAACtE,IADX,MAEH4E,YAAY,CAAE,EAFX,CAGHC,SAAS,CAAErE,SAHR,EAFF,CAAD,CAAR,CAQH,CACJ,CA7C0B,EAApB,CA+CP,MAAO,IAAMsE,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAChD,QAAD,CAAc,CAC3C,MAAO,UAAC7B,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAW,sBAAX,CAAmC,CAC/B,WAAYe,QADmB,CAAnC,EAGKb,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdjB,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,gCACAoB,QAAQ,CAAClB,IADT,MAEHJ,OAAO,CAAE,KAFN,EAFF,CAAD,CAAR,CAOH,CAXL,EAYKkE,KAZL,CAYW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAImE,KAAK,CAAC7C,QAAN,CAAe8C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpF,KAAK,CAACmF,KAAN,CAAYpF,IAAI,CAACgF,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHrF,KAAK,CAACiF,IAAN,CAAWlF,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC7C,QAAN,CAAelB,IADO,CAAnB,CAAX,EAGH,CACJ,CA5BL,EA6BH,CA/BD,CAgCH,CAjCM,CAmCP,MAAO,IAAM+E,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACjC,MAAO,UAAC9E,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAW,qBAAX,CAAkC,EAAlC,EACKE,IADL,CACU,SAAAC,QAAQ,CAAI,CACd;AACA;AACA;AACA;AACA,GAAM8D,CAAAA,WAAW,CAAGlG,mBAAmB,CAACoC,QAAQ,CAAClB,IAAT,CAAciF,QAAd,EAA0B,EAA3B,CAA+B,mBAA/B,CAAoD,eAApD,CAAqE,KAArE,CAA4E,KAA5E,CAAmF,IAAnF,CAAvC,CACA,GAAIC,CAAAA,eAAe,CAAGF,WAAW,CAACtE,GAAZ,CAAgB,cAAhB,EAAkCsE,WAAW,CAACtE,GAAZ,CAAgB,cAAhB,CAAlC,CAAoEF,SAA1F,CACA,GAAI2E,CAAAA,YAAY,CAAGD,eAAe,CAAGA,eAAe,CAACE,KAAnB,CAA2B,OAA7D,CACA,GAAM7E,CAAAA,YAAY,CAAG1B,uBAAuB,CAACqC,QAAQ,CAAClB,IAAT,CAAcqF,SAAd,EAA2B,EAA5B,CAAgC,gBAAhC,CAAkD,cAAlD,CAAkE,KAAlE,CAAyE,KAAzE,CAAgF,IAAhF,CAAsF7E,SAAtF,CAAiG,UAAjG,CAA6G,IAA7G,CAAmH2E,YAAnH,CAA5C,CAEAlF,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLwF,UAAU,CAAEpE,QAAQ,CAAClB,IAAT,CAAcqF,SADrB,CAEL5E,aAAa,CAAEF,YAAY,CAACG,GAAb,CAAiB,YAAjB,CAFV,CAGLI,YAAY,CAAEkE,WAAW,CAACtE,GAAZ,CAAgB,YAAhB,CAHT,CAILL,cAAc,CAAE,CACZM,cAAc,CAAEJ,YAAY,CAACG,GAAb,CAAiB,cAAjB,EAAmCH,YAAY,CAACG,GAAb,CAAiB,cAAjB,CAAnC,CAAsE,EAD1E,CAEZ6E,aAAa,CAAEL,eAAe,EAAI,EAFtB,CAJX,CAQL9E,QAAQ,CAAE8E,eAAe,CAACE,KARrB,CASLxF,OAAO,CAAE,KATJ,CAFJ,CAAD,CAAR,CAcH,CAzBL,EA0BKkE,KA1BL,CA0BW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAImE,KAAK,CAAC7C,QAAN,CAAe8C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpF,KAAK,CAACmF,KAAN,CAAYpF,IAAI,CAACgF,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHrF,KAAK,CAACiF,IAAN,CAAWlF,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC7C,QAAN,CAAelB,IADO,CAAnB,CAAX,EAGH,CACJ,CA1CL,EA2CH,CA7CD,CA8CH,CA/CM,CAiDP,MAAO,IAAMwF,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACzD,UAAD,CAAa1B,cAAb,CAAgC,CAC9D,MAAO,UAACJ,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAW,2BAAX,kBACOgB,UADP,GAGKd,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACd,GAAMuE,CAAAA,OAAO,CAAG3G,mBAAmB,CAACoC,QAAQ,CAAClB,IAAT,CAAc2C,aAAd,EAA+B,EAAhC,CAAoC,oBAApC,CAA0D,eAA1D,CAA2E,KAA3E,CAAkF,KAAlF,CAAyF,IAAzF,CAA+F,cAA/F,CAAnC,CACA,GAAM+C,CAAAA,OAAO,CAAG5G,mBAAmB,CAACoC,QAAQ,CAAClB,IAAT,CAAc2F,IAAd,EAAsB,EAAvB,CAA2B,eAA3B,CAA4C,WAA5C,CAAyD,KAAzD,CAAgE,KAAhE,CAAuE,IAAvE,CAA6E,cAA7E,CAAnC,CACA,GAAIC,CAAAA,oBAAoB,CAAG1E,QAAQ,CAAClB,IAAT,CAAc6F,KAAd,CAAoBlF,cAA/C,CACA,GAAImF,CAAAA,aAAa,CAAG/D,UAAU,CAACgE,SAAX,CAAqBC,MAArB,CAA4B,SAAAxE,CAAC,QAAIA,CAAAA,CAAC,CAAC4D,KAAF,GAAYQ,oBAAhB,EAA7B,CAApB,CACA,GAAI7D,UAAU,CAACgE,SAAX,CAAqBE,MAArB,CAA8B,CAA9B,EAAmCH,aAAa,CAACG,MAAd,GAAyB,CAAhE,CAAmE,CAC/DH,aAAa,CAAG/D,UAAU,CAACgE,SAA3B,CACAH,oBAAoB,CAAGE,aAAa,CAAC,CAAD,CAAb,CAAiBV,KAAxC,CACH,CACDnF,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLoG,aAAa,CAAET,OAAO,CAAC/E,GAAR,CAAY,YAAZ,CADV,CAELyF,aAAa,CAAET,OAAO,CAAChF,GAAR,CAAY,YAAZ,CAFV,CAGLL,cAAc,gCACPA,cADO,MAEV+F,kBAAkB,CAAEX,OAAO,CAAC/E,GAAR,CAAY,cAAZ,EAChB+E,OAAO,CAAC/E,GAAR,CAAY,cAAZ,CADgB,CACc+E,OAAO,CAAC/E,GAAR,CAAY,YAAZ,EAA4B+E,OAAO,CAAC/E,GAAR,CAAY,YAAZ,EAA0B,CAA1B,CAA5B,CAA2D,EAHnF,CAIV2F,aAAa,CAAEX,OAAO,CAAChF,GAAR,CAAY,cAAZ,EACXgF,OAAO,CAAChF,GAAR,CAAY,cAAZ,CADW,CACmBgF,OAAO,CAAChF,GAAR,CAAY,YAAZ,EAA4BgF,OAAO,CAAChF,GAAR,CAAY,YAAZ,EAA0B,CAA1B,CAA5B,CAA2D,EALnF,CAMV4F,SAAS,CAAEpF,QAAQ,CAAClB,IAAT,CAAc6F,KAAd,CAAoBS,SANrB,CAOV3F,cAAc,CAAEmF,aAAa,CAAGA,aAAa,CAAC,CAAD,CAAhB,CAAsB,EAPzC,EAHT,CAYLpE,WAAW,CAAER,QAAQ,CAAClB,IAAT,CAAcsB,QAAd,GAA2B,CAA3B,CAA+B,IAA/B,CAAsC,KAZ9C,CAaLK,cAAc,CAAET,QAAQ,CAAClB,IAAT,CAAc4B,cAbzB,CAcLC,UAAU,CAAE,oBAdP,CAeLjC,OAAO,CAAE,KAfJ,CAgBL0B,QAAQ,CAAEJ,QAAQ,CAAClB,IAAT,CAAcsB,QAhBnB,CAiBLiF,eAAe,CAAE,EAjBZ,CAkBLzE,QAAQ,CAAE,CACNnB,cAAc,CAAEiF,oBADV,CAlBL,CAFJ,CAAD,CAAR,CAyBH,CArCL,EAsCK9B,KAtCL,CAsCW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAELsG,aAAa,CAAE,EAFV,CAGLC,aAAa,CAAE,EAHV,CAIL9F,cAAc,gCACPA,cADO,MAEV+F,kBAAkB,CAAE,EAFV,CAGVC,aAAa,CAAE,EAHL,EAJT,CAFJ,CAAD,CAAR,CAaA,GAAItC,KAAK,CAAC7C,QAAN,CAAe8C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpF,KAAK,CAACmF,KAAN,CAAYpF,IAAI,CAACgF,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHrF,KAAK,CAACiF,IAAN,CAAWlF,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC7C,QAAN,CAAelB,IADO,CAAnB,CAAX,EAGH,CACJ,CA7DL,EA8DH,CAhED,CAiEH,CAlEM,CAoEP,MAAO,IAAMwG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACzE,UAAD,CAAgB,CAC1C,MAAO,UAAC9B,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAW,0BAAX,kBACOgB,UADP,GAGKd,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdjB,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACL4B,WAAW,CAAE,KADR,CAEL9B,OAAO,CAAE,KAFJ,CAGL2G,eAAe,CAAE,EAHZ,CAFJ,CAAD,CAAR,CAQA3H,KAAK,CAAC6H,OAAN,CAAc9H,IAAI,CAACgF,aAAL,CAAmB,CAC7BC,EAAE,CAAE,iCADyB,CAAnB,CAAd,EAGH,CAfL,EAgBKE,KAhBL,CAgBW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAImE,KAAK,CAAC7C,QAAN,CAAe8C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpF,KAAK,CAACmF,KAAN,CAAYpF,IAAI,CAACgF,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHrF,KAAK,CAACiF,IAAN,CAAWlF,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC7C,QAAN,CAAelB,IADO,CAAnB,CAAX,EAGH,CACJ,CAhCL,EAiCH,CAnCD,CAoCH,CArCM,CAuCP,MAAO,IAAM0G,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAC3E,UAAD,CAAgB,CAC1C,MAAO,UAAC9B,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAW,uBAAX,kBACOgB,UADP,GAGKd,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdjB,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACL4B,WAAW,CAAE,KADR,CAEL9B,OAAO,CAAE,KAFJ,CAGL2G,eAAe,CAAE,EAHZ,CAILrG,UAAU,CAAE,OAJP,CAFJ,CAAD,CAAR,CASAtB,KAAK,CAAC6H,OAAN,CAAc9H,IAAI,CAACgF,aAAL,CAAmB,CAC7BC,EAAE,CAAE,iCADyB,CAAnB,CAAd,EAGH,CAhBL,EAiBKE,KAjBL,CAiBW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAImE,KAAK,CAAC7C,QAAN,CAAe8C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpF,KAAK,CAACmF,KAAN,CAAYpF,IAAI,CAACgF,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHrF,KAAK,CAACiF,IAAN,CAAWlF,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC7C,QAAN,CAAelB,IADO,CAAnB,CAAX,EAGH,CACJ,CAjCL,EAkCH,CApCD,CAqCH,CAtCM,CAwCP,MAAO,IAAM2G,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,aAAD,CAAmB,CAChD,MAAO,UAAC3G,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAW,0BAAX,CAAuC,CACnC6F,aAAa,CAAbA,aADmC,CAAvC,EAGK3F,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdjB,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACL4B,WAAW,CAAE,IADR,CAEL9B,OAAO,CAAE,KAFJ,CAGL2G,eAAe,CAAE,EAHZ,CAIL1E,UAAU,CAAE,oBAJP,CAKLF,cAAc,CAAET,QAAQ,CAAClB,IAAT,CAAc4B,cALzB,CAFJ,CAAD,CAAR,CAUH,CAdL,EAeKkC,KAfL,CAeW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAImE,KAAK,CAAC7C,QAAN,CAAe8C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpF,KAAK,CAACmF,KAAN,CAAYpF,IAAI,CAACgF,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHrF,KAAK,CAACiF,IAAN,CAAWlF,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC7C,QAAN,CAAelB,IADO,CAAnB,CAAX,EAGH,CACJ,CA/BL,EAgCH,CAlCD,CAmCH,CApCM,CAsCP,MAAO,IAAM6G,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAChG,SAAD,CAAe,CACtC,MAAO,UAACZ,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAW,oBAAX,kBACOF,SADP,GAGKI,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACd,GAAMG,CAAAA,YAAY,CAAGH,QAAQ,CAAClB,IAA9B,CACA,GAAM+B,CAAAA,UAAU,CAAG,CACfD,QAAQ,CAAET,YAAY,CAACW,QADR,CAEfC,UAAU,CAAEZ,YAAY,CAACa,UAFV,CAGfC,qBAAqB,CAAEd,YAAY,CAACe,qBAHrB,CAIfC,yBAAyB,CAAEhB,YAAY,CAACiB,yBAJzB,CAKfC,qBAAqB,CAAElB,YAAY,CAACmB,qBALrB,CAMfC,WAAW,CAAE,EANE,CAOfC,aAAa,CAAErB,YAAY,CAACsB,aAPb,CAQfS,aAAa,CAAE,IARA,CASf;AACA;AACA;AACAxD,OAAO,CAAE,KAZM,CAafuE,UAAU,CAAE,EAbG,CAcfjE,UAAU,CAAE,MAdG,CAef6B,UAAU,CAAE,EAfG,CAgBfqC,WAAW,CAAE,KAhBE,CAiBff,aAAa,CAAEhC,YAAY,CAACiC,aAjBb,CAkBfC,YAAY,CAAElC,YAAY,CAACiC,aAAb,GAA+B,EAA/B,CAAoCnE,cAAc,CAAC,CAAC,GAAD,CAAM,GAAN,CAAD,CAAa,CAAC,EAAD,CAAK,GAAL,CAAb,CAAwB,CAAC,CAAD,CAAI,EAAJ,CAAxB,CAAiC,CAAC,CAAD,CAAI,CAAJ,CAAjC,CAAlD,CAA6F,SAlB5F,CAmBfqE,QAAQ,CAAE,IAnBK,CAAnB,CAqBAvD,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAEiC,UAFJ,CAAD,CAAR,CAIA9B,QAAQ,CAAChB,sBAAsB,CAACiC,QAAQ,CAAClB,IAAT,CAAcgC,QAAf,CAAyB,CAAzB,CAAvB,CAAR,CACA/B,QAAQ,CAACjB,gBAAgB,CAACkC,QAAQ,CAAClB,IAAT,CAAcgC,QAAf,CAAyB,CAAzB,CAA4B,KAA5B,CAAjB,CAAR,CACA/B,QAAQ,CAACf,YAAY,CAACgC,QAAQ,CAAClB,IAAT,CAAcgC,QAAf,CAAb,CAAR,CACH,CAjCL,EAkCK8B,KAlCL,CAkCW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAImE,KAAK,CAAC7C,QAAN,CAAe8C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpF,KAAK,CAACmF,KAAN,CAAYpF,IAAI,CAACgF,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHrF,KAAK,CAACiF,IAAN,CAAWlF,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC7C,QAAN,CAAelB,IADO,CAAnB,CAAX,EAGH,CACJ,CAlDL,EAmDH,CArDD,CAsDH,CAvDM,CAyDP,MAAO,IAAM8G,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACjG,SAAD,CAAWC,YAAX,CAA4B,CACzD,MAAO,UAACb,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAW,yBAAX,gCACOF,SADP,MAEIkG,KAAK,CAAE,CAFX,IAIK9F,IAJL,CAIU,SAAAC,QAAQ,CAAI,CACdJ,YAAY,EACZA,YAAY,CAACS,GAAb,CAAiB,SAAAC,CAAC,CAAI,CAClBpC,YAAY,CAAC,EAAD,CAAKoC,CAAC,CAACC,iBAAP,CAAZ,CACH,CAFD,CADA,CAIAxB,QAAQ,CAACF,OAAO,CAAC,OAAD,CAAR,CAAR,CACH,CAVL,EAWK+D,KAXL,CAWW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAImE,KAAK,CAAC7C,QAAN,CAAe8C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpF,KAAK,CAACmF,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAEO,CACHrF,KAAK,CAACiF,IAAN,CAAWE,KAAK,CAAC7C,QAAN,CAAelB,IAA1B,EACH,CACJ,CAvBL,EAwBH,CA1BD,CA2BH,CA5BM,CA8BP,MAAO,IAAMgH,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACjF,UAAD,CAAakF,SAAb,CAAwBC,KAAxB,CAAkC,CAC5D,MAAO,UAACjH,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAWkG,SAAX,kBACOlF,UADP,GAGKd,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdjB,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIsB,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAAClB,IAAT,CAAcmH,WAAd,GAA8B,IAAvD,CAA6D,CACzD,GAAIjG,QAAQ,CAAClB,IAAT,CAAcmH,WAAd,CAA0BnD,MAA9B,CAAsC,CAClC,GAAIkD,KAAJ,CAAW,CACP,GAAIE,CAAAA,IAAI,CAAGlG,QAAX,CACA,GAAImG,CAAAA,MAAM,CAAGH,KAAK,CAAG,GAAR,CAAcE,IAAI,CAACpH,IAAL,CAAUsH,QAAxB,CAAmC,GAAnC,CAAyCF,IAAI,CAACpH,IAAL,CAAUuH,QAAhE,CACAC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAoB,QAApB,EACH,CAJD,IAIO,CACHzI,KAAK,CAAC8E,IAAN,CAAW/E,IAAI,CAAC+I,gBAAL,CAAsB,CAC7B9D,EAAE,CAAE,0BADyB,CAAtB,CAAX,EAGH,CACJ,CAVD,IAUO,CACHhF,KAAK,CAAC8E,IAAN,CAAWxC,QAAQ,CAAClB,IAAT,CAAcmH,WAAd,CAA0BQ,WAArC,EACH,CACD;AACA;AACA;AACH,EAEJ,CA7BL,EA8BK7D,KA9BL,CA8BW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMAhB,KAAK,CAACmF,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAtCL,EAuCH,CAzCD,CA0CH,CA3CM,CA6CP,MAAO,IAAM2D,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAC7F,UAAD,CAAakF,SAAb,CAAwBY,SAAxB,CAAsC,CACjE,MAAO,UAAC5H,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAWkG,SAAX,kBACOlF,UADP,GAGKd,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdjB,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIsB,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAAClB,IAAT,CAAcgE,MAAvC,CAA+C,CAC3C,GAAI9C,QAAQ,CAAClB,IAAT,CAAcgE,MAAlB,CAA0B,CACtB,GAAM8D,CAAAA,OAAO,CAAGD,SAAS,CAAG,MAAZ,CAAqB3G,QAAQ,CAAClB,IAAT,CAAcsH,QAAnC,CAA8C,MAA9C,CAAuDpG,QAAQ,CAAClB,IAAT,CAAcuH,QAArE,CAAgF,MAAhF,CAAyFxF,UAAU,CAACgG,SAApH,CACAP,MAAM,CAACC,IAAP,CAAYK,OAAZ,CAAqB,QAArB,EACH,CAHD,IAGO,CACHlJ,KAAK,CAAC8E,IAAN,CAAWxC,QAAQ,CAAC8G,OAApB,EACH,CACJ,CAPD,IAOO,CACHpJ,KAAK,CAAC8E,IAAN,CAAW/E,IAAI,CAAC+I,gBAAL,CAAsB,CAC7B9D,EAAE,CAAE,sBADyB,CAAtB,CAAX,EAGH,CACJ,CAtBL,EAuBKE,KAvBL,CAuBW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMAhB,KAAK,CAACmF,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CA/BL,EAgCH,CAlCD,CAmCH,CApCM,CAuCP,MAAO,IAAMgE,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAClG,UAAD,CAAgB,CAC3C,MAAO,UAAC9B,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAW,kBAAX,CAA+B,CAC3B,YAAagB,UAAU,CAAC1B,cAAX,CAA0BgG,aAA1B,CAAwC6B,IAD1B,CAA/B,EAGKjH,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACd,GAAMuE,CAAAA,OAAO,CAAG3G,mBAAmB,CAACoC,QAAQ,CAAClB,IAAT,CAAc2C,aAAd,EAA+B,EAAhC,CAAoC,oBAApC,CAA0D,eAA1D,CAA2E,KAA3E,CAAkF,KAAlF,CAAyF,IAAzF,CAA+F,cAA/F,CAAnC,CAEA1C,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAELsG,aAAa,CAAET,OAAO,CAAC/E,GAAR,CAAY,YAAZ,CAFV,CAGLL,cAAc,gCACP0B,UAAU,CAAC1B,cADJ,MAEV+F,kBAAkB,CAAEX,OAAO,CAAC/E,GAAR,CAAY,cAAZ,EAChB+E,OAAO,CAAC/E,GAAR,CAAY,cAAZ,CADgB,CACc+E,OAAO,CAAC/E,GAAR,CAAY,YAAZ,EAA4B+E,OAAO,CAAC/E,GAAR,CAAY,YAAZ,EAA0B,CAA1B,CAA5B,CAA2D,EAHnF,EAHT,CAFJ,CAAD,CAAR,CAcH,CApBL,EAqBKoD,KArBL,CAqBW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMAhB,KAAK,CAACmF,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CA7BL,EA8BH,CAhCD,CAiCH,CAlCM,CAoCP,MAAO,IAAMkE,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACpG,UAAD,CAAa1B,cAAb,CAAgC,CACzD,MAAO,UAACJ,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAjB,KAAK,CAACqC,IAAN,CAAW,+BAAX,kBACOgB,UADP,GAGKd,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdjB,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLO,cAAc,gCACPA,cADO,MAEViG,SAAS,CAAEpF,QAAQ,CAAClB,IAAT,CAAc6F,KAAd,CAAoBS,SAFrB,EADT,CAKLxE,QAAQ,CAAE,CACNnB,cAAc,CAAEoB,UAAU,CAACpB,cADrB,CALL,CAQLe,WAAW,CAAER,QAAQ,CAAClB,IAAT,CAAcsB,QAAd,GAA2B,CAA3B,CAA+B,IAA/B,CAAsC,KAR9C,CASLK,cAAc,CAAET,QAAQ,CAAClB,IAAT,CAAc4B,cATzB,CAULC,UAAU,CAAE,oBAVP,CAWLjC,OAAO,CAAE,KAXJ,CAYL0B,QAAQ,CAAEJ,QAAQ,CAAClB,IAAT,CAAcsB,QAZnB,CAaLiF,eAAe,CAAE,EAbZ,CAFJ,CAAD,CAAR,CAkBH,CAtBL,EAuBKzC,KAvBL,CAuBW,SAAAC,KAAK,CAAI,CACZ9D,QAAQ,CAAC,CACLJ,IAAI,CAAEtB,cADD,CAELuB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAImE,KAAK,CAAC7C,QAAN,CAAe8C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BpF,KAAK,CAACmF,KAAN,CAAYpF,IAAI,CAACgF,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACHrF,KAAK,CAACiF,IAAN,CAAWlF,IAAI,CAACgF,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC7C,QAAN,CAAelB,IADO,CAAnB,CAAX,EAGH,CACJ,CAvCL,EAwCH,CA1CD,CA2CH,CA5CM","sourcesContent":["import {\r\n    DEFAULT_RETURN,\r\n    UPDATE_LANGUAGE,\r\n    REQUEST_INIT\r\n} from './LoginTypes';\r\nimport rsapi from \"../rsapi\";\r\nimport {\r\n    intl\r\n} from '../components/App';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    constructjsonOptionList,\r\n    constructOptionList, rearrangeDateFormat\r\n} from '../components/CommonScript';\r\nimport {\r\n    getHomeDashBoard\r\n} from './DashBoardTypeAction';\r\nimport {\r\n    getListStaticDashBoard\r\n} from './StaticDashBoardAction';\r\nimport {\r\n    getListAlert\r\n} from './AlertViewAction'\r\nimport {\r\n    getRandomColor\r\n} from '../components/header/headerutils';\r\n\r\nimport { loadMessages, LocalizationProvider } from '@progress/kendo-react-intl';\r\n\r\nimport messages_ru from '../assets/translations/ru.json';\r\nimport messages_tg from '../assets/translations/tg.json';\r\nimport messages_en from '../assets/translations/en.json';\r\nimport messages_de from '../assets/translations/de.json';\r\n\r\nconst messages = {\r\n    'en-US': messages_en,\r\n    'ko-KR': messages_de,\r\n    'ru-RU': messages_ru,\r\n    'tg-TG': messages_tg\r\n}\r\n\r\n\r\nexport const initRequest = (loading) => {\r\n    return {\r\n        type: REQUEST_INIT,\r\n        payload: loading\r\n    }\r\n}\r\n\r\nexport const navPage = (data) => dispatch => {\r\n    dispatch({\r\n        type: DEFAULT_RETURN,\r\n        payload: {\r\n            navigation: data\r\n        }\r\n    });\r\n}\r\n\r\nexport const changeLanguage = (language, selectedRecord, loginType) => (dispatch) => {\r\n    const loginTypeMap = constructjsonOptionList(loginType || [], \"nlogintypecode\",\r\n        \"sdisplayname\", false, false, true, undefined, 'jsondata', true, language);\r\n    dispatch({\r\n        type: UPDATE_LANGUAGE,\r\n        payload: {\r\n            language,\r\n            selectedRecord,\r\n            loginTypeList: loginTypeMap.get(\"OptionList\"),\r\n            selectedRecord: {\r\n                ...selectedRecord,\r\n                nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\"\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const clickOnLoginButton = (inputData, languageList) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputData.url, inputData)\r\n            .then(response => {\r\n                const returnStr = response.data[\"rtn\"];\r\n                if (returnStr.toUpperCase() === \"SUCCESS\") {\r\n                    const responseData = response.data;\r\n                    const PassFlag = responseData.PassFlag;\r\n\r\n                    languageList &&\r\n                        languageList.map(x => {\r\n                            loadMessages(messages[inputData.slanguagetypecode], inputData.slanguagetypecode);\r\n                        })\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openCPModal: response.data.PassFlag === 6 || PassFlag === 55 ? true : false,\r\n                            passwordPolicy: response.data.PasswordPolicy,\r\n                            screenName: PassFlag === 6 ? \"IDS_CREATEPASSWORD\" : PassFlag === 55 ? \"IDS_CHANGEPASSWORD\" : \"\",\r\n                            PassFlag,\r\n                            userInfo: {\r\n                                nlogintypecode: inputData.nlogintypecode\r\n                            }\r\n                        }\r\n                    });\r\n                    if (responseData.PassFlag !== 6 && responseData.PassFlag !== 55) {\r\n                        const inputParam = {\r\n                            userInfo: responseData.UserInfo,\r\n                            menuDesign: responseData.MenuDesign,\r\n                            navigation: inputData.navigation,\r\n                            userRoleControlRights: responseData.UserRoleControlRights,\r\n                            userFormControlProperties: responseData.UserFormControlproperties,\r\n                            transactionValidation: responseData.TransactionValidation,\r\n                            displayName: \"\",\r\n                            userMultiRole: responseData.UserMultiRole,\r\n                            settings: responseData.Settings,\r\n                            sdmselnsettings: responseData.SDMSELNSettings,\r\n                            deputyUser: response.data.DeputyUser,\r\n                            deputyUserRole: response.data.DeputyUserRole,\r\n                            isDeputyLogin: false,\r\n                            loading: false,\r\n                            userImagePath: responseData.UserImagePath,\r\n                            //profileColor: \"#002699\",\r\n                            profileColor: responseData.UserImagePath === \"\" ? getRandomColor([240, 360], [90, 100], [0, 95], [1, 1]) : \"#ff0000\",\r\n                            idleneed: true\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: inputParam\r\n                        });\r\n\r\n                        dispatch(getListStaticDashBoard(responseData.UserInfo, 1));\r\n                        // dispatch(getHomeDashBoard(responseData.UserInfo, 0, false));\r\n                        dispatch(getListAlert(responseData.UserInfo, true));\r\n                        if (responseData.PasswordAlertDay) {\r\n                            toast.info(intl.formatMessage({\r\n                                id: \"IDS_PASSWORDEXPIRY\"\r\n                            }) + \" \" + responseData.PasswordAlertDay + \" \" + intl.formatMessage({\r\n                                id: \"IDS_DAY\"\r\n                            }))\r\n                        }\r\n                    }\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: returnStr\r\n                    }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const submitChangeRole = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getuserscreenrightsmenu\", inputParam)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        userInfo: response.data.UserInfo,\r\n                        menuDesign: response.data.MenuDesign,\r\n                        userRoleControlRights: response.data.UserRoleControlRights,\r\n                        userMultiRole: response.data.UserMultiRole,\r\n                        deputyUser: response.data.DeputyUser,\r\n                        deputyUserRole: response.data.DeputyUserRole,\r\n                        loading: false,\r\n                        masterData: [],\r\n                        displayName: \"\",\r\n                        navigation: \"home\",\r\n                        inputParam: {},\r\n                        openRoleBox: false\r\n                    }\r\n                });\r\n                dispatch(getListStaticDashBoard(response.data.UserInfo, 1));\r\n                dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\r\n                dispatch(getListAlert(response.data.UserInfo));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const updateStore = (updateInfo) => dispatch => {\r\n    if (updateInfo.data.loadEsign === true) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/timezone/getLocalTimeByZone\", {\r\n            \"userinfo\": updateInfo.data.screenData.inputParam.inputData.userinfo\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: updateInfo.typeName,\r\n                    payload: {\r\n                        serverTime: rearrangeDateFormat(updateInfo.data.screenData.inputParam.inputData.userinfo, response.data),\r\n                        ...updateInfo.data,\r\n                        masterStatus: \"\",\r\n                        errorCode: undefined,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    } else {\r\n        dispatch({\r\n            type: updateInfo.typeName,\r\n            payload: {\r\n                ...updateInfo.data,\r\n                masterStatus: \"\",\r\n                errorCode: undefined\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const getChangeUserRole = (userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getchangerole\", {\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ...response.data,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getLoginDetails = () => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getloginInfo\", {})\r\n            .then(response => {\r\n                // let loginType = [];\r\n                // response.data.LoginType.map(type => {\r\n                //     loginType\r\n                // })\r\n                const languageMap = constructOptionList(response.data.Language || [], \"slanguagetypecode\", \"slanguagename\", false, false, true);\r\n                let defaultLanguage = languageMap.get(\"DefaultValue\") ? languageMap.get(\"DefaultValue\") : undefined;\r\n                let languageCode = defaultLanguage ? defaultLanguage.value : \"en-US\";\r\n                const loginTypeMap = constructjsonOptionList(response.data.LoginType || [], \"nlogintypecode\", \"sdisplayname\", false, false, true, undefined, 'jsondata', true, languageCode);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loginTypes: response.data.LoginType,\r\n                        loginTypeList: loginTypeMap.get(\"OptionList\"),\r\n                        languageList: languageMap.get(\"OptionList\"),\r\n                        selectedRecord: {\r\n                            nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\",\r\n                            nlanguagecode: defaultLanguage || \"\"\r\n                        },\r\n                        language: defaultLanguage.value,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getUserSiteAndRole = (inputParam, selectedRecord) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getloginvalidation\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                const roleMap = constructOptionList(response.data.UserMultiRole || [], \"nusermultirolecode\", \"suserrolename\", false, false, true, \"ndefaultrole\");\r\n                const siteMap = constructOptionList(response.data.Site || [], \"nusersitecode\", \"ssitename\", false, false, true, \"ndefaultsite\");\r\n                let loggeInLoginTypeCode = response.data.Users.nlogintypecode;\r\n                let logintypecode = inputParam.logintype.filter(x => x.value === loggeInLoginTypeCode);\r\n                if (inputParam.logintype.length > 0 && logintypecode.length === 0) {\r\n                    logintypecode = inputParam.logintype;\r\n                    loggeInLoginTypeCode = logintypecode[0].value;\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loginUserRole: roleMap.get(\"OptionList\"),\r\n                        loginUserSite: siteMap.get(\"OptionList\"),\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\",\r\n                            nusersitecode: siteMap.get(\"DefaultValue\") ?\r\n                                siteMap.get(\"DefaultValue\") : siteMap.get(\"OptionList\") ? siteMap.get(\"OptionList\")[0] : \"\",\r\n                            nusercode: response.data.Users.nusercode,\r\n                            nlogintypecode: logintypecode ? logintypecode[0] : \"\"\r\n                        },\r\n                        openCPModal: response.data.PassFlag === 6 ? true : false,\r\n                        passwordPolicy: response.data.PasswordPolicy,\r\n                        screenName: \"IDS_CREATEPASSWORD\",\r\n                        loading: false,\r\n                        PassFlag: response.data.PassFlag,\r\n                        createPwdRecord: {},\r\n                        userInfo: {\r\n                            nlogintypecode: loggeInLoginTypeCode\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loginUserRole: [],\r\n                        loginUserSite: [],\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusermultirolecode: \"\",\r\n                            nusersitecode: \"\"\r\n                        }\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const createPassword = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/createnewpassword\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: false,\r\n                        loading: false,\r\n                        createPwdRecord: {}\r\n                    }\r\n                });\r\n                toast.success(intl.formatMessage({\r\n                    id: \"IDS_PASSWORDCREATEDSUCCESSFULLY\"\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const changepassword = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/changepassword\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: false,\r\n                        loading: false,\r\n                        createPwdRecord: {},\r\n                        navigation: \"login\"\r\n                    }\r\n                });\r\n                toast.success(intl.formatMessage({\r\n                    id: \"IDS_PASSWORDCHANGEDSUCCESSFULLY\"\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getPassWordPolicy = (nuserrolecode) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getPassWordPolicy\", {\r\n            nuserrolecode\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: true,\r\n                        loading: false,\r\n                        createPwdRecord: {},\r\n                        screenName: \"IDS_CHANGEPASSWORD\",\r\n                        passwordPolicy: response.data.PasswordPolicy\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const changeOwner = (inputData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/changeOwner\", {\r\n            ...inputData\r\n        })\r\n            .then(response => {\r\n                const responseData = response.data;\r\n                const inputParam = {\r\n                    userInfo: responseData.UserInfo,\r\n                    menuDesign: responseData.MenuDesign,\r\n                    userRoleControlRights: responseData.UserRoleControlRights,\r\n                    userFormControlProperties: responseData.UserFormControlproperties,\r\n                    transactionValidation: responseData.TransactionValidation,\r\n                    displayName: \"\",\r\n                    userMultiRole: responseData.UserMultiRole,\r\n                    isDeputyLogin: true,\r\n                    // settings: responseData.Settings,\r\n                    // deputyUser: response.data.DeputyUser,\r\n                    // deputyUserRole: response.data.DeputyUserRole,\r\n                    loading: false,\r\n                    masterData: [],\r\n                    navigation: \"home\",\r\n                    inputParam: {},\r\n                    openRoleBox: false,\r\n                    userImagePath: responseData.UserImagePath,\r\n                    profileColor: responseData.UserImagePath === \"\" ? getRandomColor([240, 360], [90, 100], [0, 95], [1, 1]) : \"#ff0000\",\r\n                    idleneed: true\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: inputParam\r\n                });\r\n                dispatch(getListStaticDashBoard(response.data.UserInfo, 1));\r\n                dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\r\n                dispatch(getListAlert(response.data.UserInfo));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const logOutAuditAction = (inputData,languageList) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('login/insertAuditAction', {\r\n            ...inputData,\r\n            nFlag: 2\r\n        })\r\n            .then(response => {\r\n                languageList &&\r\n                languageList.map(x => {\r\n                    loadMessages({}, x.slanguagetypecode);\r\n                })\r\n                dispatch(navPage(\"login\"))\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const elnLoginAction = (inputParam, serverUrl, uiUrl) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(serverUrl, {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (response !== null && response.data.objResponse !== null) {\r\n                    if (response.data.objResponse.status) {\r\n                        if (uiUrl) {\r\n                            let user = response;\r\n                            let elnURL = uiUrl + \"#\" + user.data.username + \"$\" + user.data.password;\r\n                            window.open(elnURL, '_blank');\r\n                        } else {\r\n                            toast.info(intl.FormattedMessage({\r\n                                id: \"IDS_ELNUIURLNOTAVAILABLE\"\r\n                            }))\r\n                        }\r\n                    } else {\r\n                        toast.info(response.data.objResponse.information);\r\n                    }\r\n                    // if(!$(\"#appsdetails\").is(\":hidden\")){\r\n                    //     $('#appsdetails').addClass(\"dp-none\");\r\n                    // }\r\n                };\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const sdmsLoginAction = (inputParam, serverUrl, sdmsUIUrl) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(serverUrl, {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (response !== null && response.data.status) {\r\n                    if (response.data.status) {\r\n                        const sdmsURL = sdmsUIUrl + \"?un=\" + response.data.username + \"&pd=\" + response.data.password + \"&sc=\" + inputParam.sSiteCode;\r\n                        window.open(sdmsURL, '_blank');\r\n                    } else {\r\n                        toast.info(response.Message);\r\n                    }\r\n                } else {\r\n                    toast.info(intl.FormattedMessage({\r\n                        id: \"IDS_CHECKSYNCSERVICE\"\r\n                    }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const getUsersiteRole = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('login/changeSite', {\r\n            \"usersSite\": inputParam.selectedRecord.nusersitecode.item\r\n        })\r\n            .then(response => {\r\n                const roleMap = constructOptionList(response.data.UserMultiRole || [], \"nusermultirolecode\", \"suserrolename\", false, false, true, \"ndefaultrole\");\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loginUserRole: roleMap.get(\"OptionList\"),\r\n                        selectedRecord: {\r\n                            ...inputParam.selectedRecord,\r\n                            nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\"\r\n\r\n\r\n                        },\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const checkPassword = (inputParam, selectedRecord) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getlogintypevalidation\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusercode: response.data.Users.nusercode\r\n                        },\r\n                        userInfo: {\r\n                            nlogintypecode: inputParam.nlogintypecode\r\n                        },\r\n                        openCPModal: response.data.PassFlag === 6 ? true : false,\r\n                        passwordPolicy: response.data.PasswordPolicy,\r\n                        screenName: \"IDS_CREATEPASSWORD\",\r\n                        loading: false,\r\n                        PassFlag: response.data.PassFlag,\r\n                        createPwdRecord: {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}