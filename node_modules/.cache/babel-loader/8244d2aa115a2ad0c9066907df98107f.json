{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\TestContainerTypeTab.jsx\";\nimport React from 'react';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Nav, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormattedMessage } from 'react-intl';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst TestContainerTypeTab = props => {\n  const addContainerTypeId = props.controlMap.has(\"AddTestContainerType\") && props.controlMap.get(\"AddTestContainerType\").ncontrolcode;\n  const testContinerTypeColumnList = [{\n    \"idsName\": \"IDS_CONTAINERTYPE\",\n    \"dataField\": \"scontainertype\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_QUANTITY\",\n    \"dataField\": \"nquantity\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_UNIT\",\n    \"dataField\": \"sunitname\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_SETASDEFAULT\",\n    \"dataField\": \"stransdisplaystatus\",\n    \"width\": \"100px\",\n    \"componentName\": \"switch\",\n    //ALPD-3510\n    \"switchFieldName\": \"ndefaultstatus\",\n    \"switchStatus\": transactionStatus.YES,\n    \"needRights\": true,\n    \"controlName\": \"DefaultTestContainerType\"\n  }];\n  const methodUrl = \"TestContainerType\"; // const editId = props.inputParam && props.controlMap.has(\"Edit\".concat(props.inputParam.methodUrl))\n  //                     && props.controlMap.get(\"Edit\".concat(props.inputParam.methodUrl)).ncontrolcode;\n\n  const editParam = {\n    screenName: \"IDS_CONTAINERTYPE\",\n    operation: \"update\",\n    primaryKeyField: \"ntestcontainertypecode\",\n    inputParam: props.inputParam,\n    userInfo: props.userInfo // ,  ncontrolCode:editId\n\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions-stripe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    name: \"addcontainertype\",\n    className: \"add-txt-btn\",\n    hidden: props.userRoleControlRights.indexOf(addContainerTypeId) === -1 // onClick={()=>props.getAvailableData(props.selectedTest, \"getAvailableContainerType\", \n    //     \"containertype\", \"IDS_CONTAINERTYPE\", props.userInfo, addContainerTypeId)}>\n    ,\n    onClick: () => props.addContainerType(\"create\", props.selectedTest, props.userInfo, addContainerTypeId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }), \" \", \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_CONTAINERTYPE\",\n    defaultMessage: \"Container Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    key: \"testcontainertypekey\",\n    primaryKeyField: \"ntestcontainertypecode\",\n    data: props.TestContainerType || [],\n    dataResult: props.dataResult,\n    dataState: props.dataState,\n    dataStateChange: props.dataStateChange,\n    extractedColumnList: testContinerTypeColumnList,\n    controlMap: props.controlMap,\n    userRoleControlRights: props.userRoleControlRights,\n    inputParam: props.inputParam,\n    userInfo: props.userInfo,\n    deleteRecord: props.deleteRecord,\n    pageable: true,\n    scrollable: 'scrollable',\n    gridHeight: '450px',\n    isActionRequired: true,\n    deleteParam: {\n      operation: \"delete\",\n      methodUrl\n    },\n    methodUrl: methodUrl,\n    fetchRecord: props.getActiveTestContainerTypeById,\n    editParam: editParam,\n    hideColumnFilter: false,\n    onSwitchChange: props.defaultRecord,\n    switchParam: {\n      operation: \"Default\",\n      methodUrl\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default TestContainerTypeTab;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/testmanagement/TestContainerTypeTab.jsx"],"names":["React","faPlus","Nav","Row","Col","FontAwesomeIcon","FormattedMessage","DataGrid","transactionStatus","TestContainerTypeTab","props","addContainerTypeId","controlMap","has","get","ncontrolcode","testContinerTypeColumnList","YES","methodUrl","editParam","screenName","operation","primaryKeyField","inputParam","userInfo","userRoleControlRights","indexOf","addContainerType","selectedTest","TestContainerType","dataResult","dataState","dataStateChange","deleteRecord","getActiveTestContainerTypeById","defaultRecord"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst TestContainerTypeTab = (props) => {\r\n    const addContainerTypeId = props.controlMap.has(\"AddTestContainerType\") && props.controlMap.get(\"AddTestContainerType\").ncontrolcode;\r\n    const testContinerTypeColumnList = [\r\n        {\"idsName\":\"IDS_CONTAINERTYPE\",\"dataField\":\"scontainertype\",\"width\":\"200px\"},\r\n        {\"idsName\":\"IDS_QUANTITY\",\"dataField\":\"nquantity\",\"width\":\"200px\"},\r\n\r\n        {\"idsName\":\"IDS_UNIT\",\"dataField\":\"sunitname\",\"width\":\"200px\"},\r\n        {\"idsName\":\"IDS_SETASDEFAULT\",\"dataField\":\"stransdisplaystatus\",\"width\":\"100px\", \"componentName\": \"switch\", \r\n        //ALPD-3510\r\n        \"switchFieldName\": \"ndefaultstatus\", \"switchStatus\": transactionStatus.YES, \"needRights\": true, \"controlName\": \"DefaultTestContainerType\"}\r\n\r\n    ];    \r\n    const methodUrl = \"TestContainerType\";\r\n    // const editId = props.inputParam && props.controlMap.has(\"Edit\".concat(props.inputParam.methodUrl))\r\n    //                     && props.controlMap.get(\"Edit\".concat(props.inputParam.methodUrl)).ncontrolcode;\r\n    const editParam = {screenName:\"IDS_CONTAINERTYPE\" , operation:\"update\", \r\n    primaryKeyField:\"ntestcontainertypecode\", inputParam:props.inputParam,  userInfo:props.userInfo\r\n   // ,  ncontrolCode:editId\r\n};\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Nav.Link name=\"addcontainertype\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addContainerTypeId) === -1}\r\n                        // onClick={()=>props.getAvailableData(props.selectedTest, \"getAvailableContainerType\", \r\n                        //     \"containertype\", \"IDS_CONTAINERTYPE\", props.userInfo, addContainerTypeId)}>\r\n                        onClick={() => props.addContainerType(\"create\", props.selectedTest, props.userInfo, addContainerTypeId)}>\r\n                        <FontAwesomeIcon icon={faPlus} /> {\" \"}\r\n                        <FormattedMessage id=\"IDS_CONTAINERTYPE\" defaultMessage=\"Container Type\" />\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n                    <DataGrid\r\n                        key=\"testcontainertypekey\"\r\n                        primaryKeyField=\"ntestcontainertypecode\"\r\n                        data={props.TestContainerType || []}\r\n                        dataResult={props.dataResult}\r\n                        dataState={props.dataState}\r\n                        dataStateChange={props.dataStateChange}\r\n                        extractedColumnList={testContinerTypeColumnList}\r\n                        controlMap={ props.controlMap }\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        inputParam={props.inputParam}\r\n                        userInfo={props.userInfo}\r\n                        deleteRecord={props.deleteRecord}\r\n                        pageable={true}\r\n                        scrollable={'scrollable'}\r\n                        gridHeight={'450px'}\r\n                        isActionRequired={true}\r\n                        deleteParam={{operation:\"delete\", methodUrl}}\r\n                        methodUrl={methodUrl}\r\n                        fetchRecord = {props.getActiveTestContainerTypeById}\r\n                        editParam={editParam}\r\n                        hideColumnFilter={false}\r\n                        onSwitchChange={props.defaultRecord}\r\n                        switchParam={{operation:\"Default\", methodUrl}}\r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TestContainerTypeTab;"]},"metadata":{},"sourceType":"module"}