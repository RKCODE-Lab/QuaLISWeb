{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import{transactionStatus,attachmentType,reportTypeEnum}from'../../../components/Enumeration';import CustomSwitch from'../../../components/custom-switch/custom-switch.component';import DropZone from'../../../components/dropzone/dropzone.component';import FormTextarea from'../../../components/form-textarea/form-textarea.component';import FormInput from'../../../components/form-input/form-input.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import ReactSelectAddEdit from'../../../components/react-select-add-edit/react-select-add-edit-component';var AddReportMaster=function AddReportMaster(props){console.log(\"propsiin reportmaster:\",props.selectedRecord);var isReportTypeDisabled=false;if(props.operation===\"update\"){isReportTypeDisabled=true;}else{if(props.filterReportType&&props.filterReportType.nreporttypecode!==0){isReportTypeDisabled=true;}}return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nreporttypecode\",formLabel:props.intl.formatMessage({id:\"IDS_REPORTTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.reportTypeList||[],value:props.selectedRecord[\"nreporttypecode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true//isDisabled={props.operation === \"update\"}\n,isDisabled:isReportTypeDisabled,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nreporttypecode\");}}),props.selectedRecord[\"nreporttypecode\"]&&props.selectedRecord[\"nreporttypecode\"]['item'].isneedregtype===transactionStatus.YES?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nregtypecode\",formLabel:props.intl.formatMessage({id:\"IDS_REGTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.regTypeList||[]//options={ props.selectedRecord[\"nreporttypecode\"]['item'].nreporttypecode === reportTypeEnum.SAMPLE?props.regType:props.regTypeList || []}\n,value:props.selectedRecord[\"nregtypecode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nregtypecode\");}})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nregsubtypecode\",formLabel:props.intl.formatMessage({id:\"IDS_REGSUBTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.regSubTypeList||[],value:props.selectedRecord[\"nregsubtypecode\"]||\"\",isMandatory:true,isMulti:false,isClearable:true,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nregsubtypecode\");}})),props.selectedRecord[\"nreporttypecode\"]['item'].isneedsection===transactionStatus.YES?/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsectioncode\",formLabel:props.intl.formatMessage({id:\"IDS_LAB\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.sectionList||[],value:props.selectedRecord[\"nsectioncode\"]||\"\",isMandatory:false,isMulti:false,isClearable:true,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nsectioncode\");}})):\"\"):\"\",props.selectedRecord[\"nreporttypecode\"]&&props.selectedRecord[\"nreporttypecode\"].value!==reportTypeEnum.MIS&&props.selectedRecord[\"nreporttypecode\"].value!==reportTypeEnum.SCREENWISE?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ncoareporttypecode\",formLabel:props.intl.formatMessage({id:\"IDS_REPORTSUBTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.coaReportTypeList||[],value:props.selectedRecord[\"ncoareporttypecode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"ncoareporttypecode\");}})):\"\",props.selectedRecord[\"nreporttypecode\"]&&props.selectedRecord[\"nreporttypecode\"].value===reportTypeEnum.SCREENWISE?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nformcode\",formLabel:props.intl.formatMessage({id:\"IDS_SCREENNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.controlScreen||[],value:props.selectedRecord[\"nformcode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nformcode\");}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ncontrolcode\",formLabel:props.intl.formatMessage({id:\"IDS_CONTROLNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.controlButton||[],value:props.selectedRecord[\"ncontrolcode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"ncontrolcode\");}})):\"\",props.selectedRecord[\"nreporttypecode\"]&&props.selectedRecord[\"nreporttypecode\"].value===reportTypeEnum.MIS?/*#__PURE__*/React.createElement(ReactSelectAddEdit,{name:\"nreportmodulecode\",label:props.intl.formatMessage({id:\"IDS_MODULENAME\"}),className:\"color-select\",classNamePrefix:\"react-select\",optionId:\"nreportmodulecode\",optionValue:\"sdisplayname\",options:props.reportModuleList||[],isMandatory:true,getValue:function getValue(value){return props.onComboChange(value,\"nreportmodulecode\");},value:props.selectedRecord[\"nreportmodulecode\"]?props.selectedRecord[\"nreportmodulecode\"]:\"\"// defaultValue={props.selectedRecord? props.selectedRecord[\"sparametername\"]:\"\"}\n}):\"\",props.selectedRecord[\"nreporttypecode\"]&&(props.selectedRecord[\"nreporttypecode\"].value===reportTypeEnum.BATCH||props.selectedRecord[\"nreporttypecode\"].value===reportTypeEnum.SAMPLE)?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ncertificatetypecode\",formLabel:props.intl.formatMessage({id:\"IDS_CERTIFICATETYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.certificateTypeList||[],value:props.selectedRecord[\"ncertificatetypecode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"ncertificatetypecode\");}})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_REPORTBATCHTYPE\"}),name:\"sbatchdisplayname\",type:\"text\",placeholder:props.intl.formatMessage({id:\"IDS_REPORTBATCHTYPE\"}),value:props.selectedRecord?props.selectedRecord[\"sbatchdisplayname\"]:\"\",isMandatory:false,required:false,readOnly:true,onChange:function onChange(event){return props.onInputOnChange(event);}}))):\"\",/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_REPORTNAME\"}),name:\"sreportname\",type:\"text\",placeholder:props.intl.formatMessage({id:\"IDS_REPORTNAME\"}),value:props.selectedRecord?props.selectedRecord[\"sreportname\"]:\"\",isMandatory:true,required:true,maxLength:100,readOnly:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"sdescription\",label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord[\"sdescription\"]||\"\",rows:\"2\",isMandatory:false,required:false,maxLength:255,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ntransactionstatus\",type:\"switch\",label:props.intl.formatMessage({id:\"IDS_ISACTIVE\"}),placeholder:props.intl.formatMessage({id:\"IDS_ISACTIVE\"}),value:props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.ACTIVE?true:false,isMandatory:false,required:false,checked:props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.ACTIVE?true:false,onChange:function onChange(event){return props.onInputOnChange(event);}}),props.operation===\"create\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(CustomSwitch,{name:\"nisplsqlquery\",type:\"switch\",label:props.intl.formatMessage({id:\"IDS_ISPLSQLQUERY\"}),placeholder:props.intl.formatMessage({id:\"IDS_ISPLSQLQUERY\"}),value:props.selectedRecord[\"nisplsqlquery\"]===transactionStatus.YES?true:false,isMandatory:false,required:false,checked:props.selectedRecord[\"nisplsqlquery\"]===transactionStatus.YES?true:false,onChange:function onChange(event){return props.onInputOnChange(event);}}),Object.keys(props.selectedRecord).length>0&&/*#__PURE__*/React.createElement(DropZone,{label:props.intl.formatMessage({id:\"IDS_FILE\"}),maxFiles:1,accept:\".jrxml\",minSize:0,maxSize:10,fileNameLength:150,onDrop:function onDrop(event){return props.onDropImage(event,\"sfilename\",1);},multiple:false,isMandatory:true,editFiles:props.selectedRecord?props.selectedRecord:{},attachmentTypeCode:props.operation===\"update\"?attachmentType.OTHERS:\"\",fileName:\"sfilename\",deleteAttachment:props.deleteFile,actionType:props.actionType})):\"\"));};export default injectIntl(AddReportMaster);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/reports/reportsconfig/AddReportMaster.js"],"names":["React","Row","Col","injectIntl","transactionStatus","attachmentType","reportTypeEnum","CustomSwitch","DropZone","FormTextarea","FormInput","FormSelectSearch","ReactSelectAddEdit","AddReportMaster","props","console","log","selectedRecord","isReportTypeDisabled","operation","filterReportType","nreporttypecode","intl","formatMessage","id","reportTypeList","event","onComboChange","isneedregtype","YES","regTypeList","reportVersionStatus","APPROVED","regSubTypeList","isneedsection","sectionList","value","MIS","SCREENWISE","coaReportTypeList","controlScreen","controlButton","reportModuleList","BATCH","SAMPLE","certificateTypeList","onInputOnChange","ACTIVE","Object","keys","length","onDropImage","OTHERS","deleteFile","actionType"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport {injectIntl } from 'react-intl';\r\nimport {transactionStatus, attachmentType, reportTypeEnum} from '../../../components/Enumeration';\r\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\r\nimport DropZone from '../../../components/dropzone/dropzone.component';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport ReactSelectAddEdit from '../../../components/react-select-add-edit/react-select-add-edit-component'\r\n\r\nconst AddReportMaster = (props) => {\r\n        console.log(\"propsiin reportmaster:\", props.selectedRecord)\r\n        let isReportTypeDisabled = false;\r\n        if (props.operation === \"update\"){\r\n                isReportTypeDisabled = true;\r\n        }\r\n        else{\r\n                if (props.filterReportType && props.filterReportType.nreporttypecode !== 0){\r\n                        isReportTypeDisabled = true;                        \r\n                }\r\n        }\r\n        return(\r\n                <Row>\r\n                    <Col md={12}>\r\n                            <FormSelectSearch\r\n                                    name={\"nreporttypecode\"}\r\n                                    formLabel={ props.intl.formatMessage({ id:\"IDS_REPORTTYPE\"})}                              \r\n                                    placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                               \r\n                                    options={ props.reportTypeList || []}\r\n                                    value = { props.selectedRecord[\"nreporttypecode\"] || \"\"}\r\n                                    isMandatory={true}\r\n                                    isMulti={false}\r\n                                    isClearable={false}\r\n                                    isSearchable={true}                                \r\n                                    //isDisabled={props.operation === \"update\"}\r\n                                    isDisabled = {isReportTypeDisabled}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange = {(event)=> props.onComboChange(event, \"nreporttypecode\")}                               \r\n                            />                                      \r\n                    {props.selectedRecord[\"nreporttypecode\"] &&\r\n                            props.selectedRecord[\"nreporttypecode\"]['item'].isneedregtype === transactionStatus.YES ?\r\n                        <Row>\r\n                        <Col md={6}>\r\n                                <FormSelectSearch\r\n                                        name={\"nregtypecode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_REGTYPE\"})}                              \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})} \r\n                                        options={ props.regTypeList || []}                                  \r\n                                        //options={ props.selectedRecord[\"nreporttypecode\"]['item'].nreporttypecode === reportTypeEnum.SAMPLE?props.regType:props.regTypeList || []}\r\n                                        value = { props.selectedRecord[\"nregtypecode\"] || \"\"}\r\n                                        isMandatory={true }\r\n                                        isMulti={false}\r\n                                        isClearable={false}\r\n                                        isSearchable={true}                                \r\n                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, \"nregtypecode\")}                               \r\n                                /> \r\n                           \r\n                        </Col> \r\n                   \r\n                        <Col md={6}>\r\n\r\n                                <FormSelectSearch\r\n                                        name={\"nregsubtypecode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_REGSUBTYPE\"})}                              \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                   \r\n                                        options={ props.regSubTypeList || []}\r\n                                        value = { props.selectedRecord[\"nregsubtypecode\"] || \"\"}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isClearable={true}\r\n                                        isSearchable={true}                                \r\n                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, \"nregsubtypecode\")}                               \r\n                                /> \r\n                           \r\n                        </Col> \r\n                        \r\n                        {props.selectedRecord[\"nreporttypecode\"]['item'].isneedsection === transactionStatus.YES ? \r\n                        <Col md={6}>\r\n                                <FormSelectSearch\r\n                                        name={\"nsectioncode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_LAB\"})}                              \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                    \r\n                                        options={ props.sectionList || []}\r\n                                        value = { props.selectedRecord[\"nsectioncode\"] || \"\"}\r\n                                        isMandatory={false}\r\n                                        isMulti={false}\r\n                                        isClearable={true}\r\n                                        isSearchable={true}                                \r\n                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, \"nsectioncode\")}                               \r\n                                        /> \r\n                           \r\n                        </Col>:\"\"}\r\n                        </Row>\r\n                :\"\"}\r\n                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                            props.selectedRecord[\"nreporttypecode\"].value !== reportTypeEnum.MIS\r\n                                && props.selectedRecord[\"nreporttypecode\"].value !== reportTypeEnum.SCREENWISE? <>\r\n\r\n                                <FormSelectSearch\r\n                                        name={\"ncoareporttypecode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_REPORTSUBTYPE\"})}                              \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                \r\n                                        options={ props.coaReportTypeList || []}\r\n                                        value = { props.selectedRecord[\"ncoareporttypecode\"] || \"\"}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isClearable={false}\r\n                                        isSearchable={true}                                \r\n                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, \"ncoareporttypecode\")}                               \r\n                                /> \r\n\r\n                        {/* {props.selectedRecord[\"nreporttypecode\"] &&\r\n                            props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SAMPLE?\r\n                                <FormSelectSearch\r\n                                        name={\"nreportdecisiontypecode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_DECISIONTYPE\"})}                              \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                 \r\n                                        options={ props.decisionTypeList || []}\r\n                                        value = { props.selectedRecord[\"nreportdecisiontypecode\"] || \"\"}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isClearable={false}\r\n                                        isSearchable={true}                                \r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, \"nreportdecisiontypecode\")}                               \r\n                                /> \r\n                           :\"\"} */}\r\n                        </> :\"\"}\r\n\r\n\r\n                        { props.selectedRecord[\"nreporttypecode\"] &&\r\n                            props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SCREENWISE?\r\n                                <><FormSelectSearch\r\n                                        name={\"nformcode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_SCREENNAME\"})}                              \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                    \r\n                                        options={ props.controlScreen || []}\r\n                                        value = { props.selectedRecord[\"nformcode\"] || \"\"}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isClearable={false}\r\n                                        isSearchable={true}                                \r\n                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, \"nformcode\")}                               \r\n                                /> \r\n                                <FormSelectSearch\r\n                                        name={\"ncontrolcode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_CONTROLNAME\"})}                              \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                    \r\n                                        options={ props.controlButton || []}\r\n                                        value = { props.selectedRecord[\"ncontrolcode\"] || \"\"}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isClearable={false}\r\n                                        isSearchable={true}                                \r\n                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, \"ncontrolcode\")}                               \r\n                                /> \r\n                               </>\r\n                           :\"\"}\r\n                       \r\n                                    \r\n                    {props.selectedRecord[\"nreporttypecode\"] &&\r\n                            props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.MIS ?                                       \r\n                                 \r\n                                <ReactSelectAddEdit\r\n                                                name=\"nreportmodulecode\"\r\n                                                label={props.intl.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                                                className=\"color-select\"\r\n                                                classNamePrefix=\"react-select\"\r\n                                                optionId=\"nreportmodulecode\"\r\n                                                optionValue=\"sdisplayname\"\r\n                                                options={props.reportModuleList || []}\r\n                                                isMandatory={true}\r\n                                                getValue={value => props.onComboChange(value, \"nreportmodulecode\")}\r\n                                                value={props.selectedRecord[\"nreportmodulecode\"]? props.selectedRecord[\"nreportmodulecode\"]: \"\" }\r\n                                                // defaultValue={props.selectedRecord? props.selectedRecord[\"sparametername\"]:\"\"}\r\n                                        />\r\n                                :\"\"}\r\n\r\n                        { props.selectedRecord[\"nreporttypecode\"] &&\r\n                            (props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.BATCH\r\n                            || props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SAMPLE) ?\r\n                            <Row>\r\n                                <Col md={6}>                                       \r\n                                        <FormSelectSearch\r\n                                                name={\"ncertificatetypecode\"}\r\n                                                formLabel={ props.intl.formatMessage({ id:\"IDS_CERTIFICATETYPE\"})}                              \r\n                                                placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                    \r\n                                                options={ props.certificateTypeList || []}\r\n                                                value = { props.selectedRecord[\"ncertificatetypecode\"] || \"\"}\r\n                                                isMandatory={true}\r\n                                                isMulti={false}\r\n                                                isClearable={false}\r\n                                                isSearchable={true}                                \r\n                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                closeMenuOnSelect={true}\r\n                                                onChange = {(event)=> props.onComboChange(event, \"ncertificatetypecode\")}                               \r\n                                        />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                        <FormInput\r\n                                                label={props.intl.formatMessage({ id:\"IDS_REPORTBATCHTYPE\"})}\r\n                                                name={\"sbatchdisplayname\"}\r\n                                                type=\"text\"\r\n                                                placeholder={props.intl.formatMessage({ id:\"IDS_REPORTBATCHTYPE\"})}\r\n                                                value ={props.selectedRecord ? props.selectedRecord[\"sbatchdisplayname\"] : \"\"}\r\n                                                isMandatory = {false}\r\n                                                required={false}\r\n                                                readOnly={true}\r\n                                                onChange={(event)=> props.onInputOnChange(event)}\r\n                                        />\r\n                                </Col>\r\n                        </Row>\r\n                       \r\n                                 :\"\"}\r\n                   \r\n                          <FormInput\r\n                                label={props.intl.formatMessage({ id:\"IDS_REPORTNAME\"})}\r\n                                name={\"sreportname\"}\r\n                                type=\"text\"\r\n                                placeholder={props.intl.formatMessage({ id:\"IDS_REPORTNAME\"})}\r\n                                value ={props.selectedRecord ? props.selectedRecord[\"sreportname\"] : \"\"}\r\n                                isMandatory = {true}\r\n                                required={true}\r\n                                maxLength={100}\r\n                                readOnly={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                onChange={(event)=> props.onInputOnChange(event)}\r\n                         />\r\n\r\n                       <FormTextarea\r\n                            name={\"sdescription\"}\r\n                            label={ props.intl.formatMessage({ id:\"IDS_DESCRIPTION\"})}                    \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_DESCRIPTION\"})}\r\n                            value ={ props.selectedRecord[\"sdescription\"] || \"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={255}\r\n                            isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                            onChange={(event)=> props.onInputOnChange(event)}\r\n                           />\r\n         \r\n                        <CustomSwitch\r\n                                name={\"ntransactionstatus\"}\r\n                                type=\"switch\"\r\n                                label={ props.intl.formatMessage({ id:\"IDS_ISACTIVE\"})}\r\n                                placeholder={ props.intl.formatMessage({ id:\"IDS_ISACTIVE\"})}                            \r\n                                value ={ props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true :false }  \r\n                                isMandatory={false}                       \r\n                                required={false}\r\n                                checked={ props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true :false}\r\n                                onChange={(event)=> props.onInputOnChange(event)}\r\n                                />\r\n                   {props.operation === \"create\" ? <>\r\n                   \r\n                                <CustomSwitch\r\n                                name={\"nisplsqlquery\"}\r\n                                type=\"switch\"\r\n                                label={ props.intl.formatMessage({ id:\"IDS_ISPLSQLQUERY\"})}\r\n                                placeholder={ props.intl.formatMessage({ id:\"IDS_ISPLSQLQUERY\"})}                            \r\n                                value ={ props.selectedRecord[\"nisplsqlquery\"] === transactionStatus.YES ? true :false }  \r\n                                isMandatory={false}                       \r\n                                required={false}\r\n                                checked={ props.selectedRecord[\"nisplsqlquery\"] === transactionStatus.YES ? true :false}\r\n                                onChange={(event)=> props.onInputOnChange(event)}\r\n                                />\r\n                    \r\n                        {Object.keys(props.selectedRecord).length >0 &&\r\n                              \r\n                                        <DropZone \r\n                                        label={ props.intl.formatMessage({ id:\"IDS_FILE\"})} \r\n                                        maxFiles={1}\r\n                                        accept=\".jrxml\"\r\n                                        minSize={0}\r\n                                        maxSize={10}\r\n                                        fileNameLength={150}\r\n                                        onDrop={(event)=>props.onDropImage(event, \"sfilename\",1)}\r\n                                        multiple={false}\r\n                                        isMandatory={true}\r\n                                        editFiles={props.selectedRecord ? props.selectedRecord :{}}\r\n                                        attachmentTypeCode={props.operation===\"update\"? attachmentType.OTHERS:\"\"}            \r\n                                        fileName=\"sfilename\"\r\n                                        deleteAttachment={props.deleteFile}\r\n                                        actionType={props.actionType}\r\n                                        />\r\n                               \r\n                                } \r\n                        </> \r\n                        :\"\"}\r\n                    </Col>\r\n                </Row>\r\n            )   \r\n}\r\n\r\nexport default injectIntl(AddReportMaster);"]},"metadata":{},"sourceType":"module"}