{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\dashboard\\\\QueryBuilderParamter.js\";\nimport { faGripVertical, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { BuilderBorder, ContionalButton, DeleteRule } from './Sqlbuilder.styled';\nimport '../../assets/styles/querybuilder.css';\nimport { ColumnType } from '../../components/Enumeration';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport { stringOperatorData, conditionalOperatorData, numericOperatorData, joinConditionData, aggregateFunction, orderByList } from './QueryBuilderData';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormCheckbox from '../../components/form-checkbox/form-checkbox.component';\nimport DataGrid from '../../components/data-grid/data-grid.component';\n\nconst QueryBuilderParamter = props => {\n  function createRules() {\n    let design = [];\n    props.comboData.sdefaultvalue.map((dataItem, index) => {\n      design.push( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, dataItem.items.columntype === ColumnType.TEXTINPUT ? /*#__PURE__*/React.createElement(React.Fragment, null, dataItem.symbolObject.items.isInputVisible ? /*#__PURE__*/React.createElement(React.Fragment, null, dataItem.items.needmasterdata ? /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: dataItem.items.displayname[\"en-US\"],\n        isSearchable: true,\n        name: `$p` + (index + 1),\n        showOption: true,\n        options: props.viewMasterData[index] || [],\n        optionId: dataItem.items.valuemember,\n        optionValue: \"sdisplayname\",\n        value: dataItem.value || \"\",\n        isMulti: dataItem.symbolObject.items.ismulti,\n        onChange: value => props.onParamComboChange(value, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 49\n        }\n      })) : /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        label: dataItem.items.displayname[\"en-US\"],\n        name: `$p` + (index + 1),\n        type: \"text\",\n        onChange: event => props.onParamInputChange(event, 3, index, dataItem),\n        value: dataItem.symbolObject.items.symbolType === 4 ? dataItem.showInputValue : dataItem.value,\n        maxLength: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 49\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, null)) : dataItem.items.columntype === ColumnType.NUMERICINPUT ? /*#__PURE__*/React.createElement(React.Fragment, null, dataItem.symbolObject.items.isInputVisible === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        label: dataItem.symbolObject.items.symbolType === 5 ? props.intl.formatMessage({\n          id: \"IDS_FROM\"\n        }) : \"\",\n        name: `$p` + (index + 1),\n        type: \"text\",\n        required: false,\n        isMandatory: false,\n        value: dataItem.value,\n        onChange: event => props.onParamInputChange(event, 2, index, dataItem),\n        maxLength: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 49\n        }\n      })), dataItem.symbolObject.items.symbolType === 5 ? /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        label: props.intl.formatMessage({\n          id: \"IDS_TO\"\n        }),\n        name: `$p` + (index + 1),\n        type: \"text\",\n        required: false,\n        isMandatory: false,\n        value: dataItem.value,\n        onChange: event => props.onParamInputChange(event, 2, index, dataItem),\n        maxLength: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 57\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null)) : dataItem.items.columntype === ColumnType.COMBO ? /*#__PURE__*/React.createElement(React.Fragment, null, dataItem.symbolObject.items.isInputVisible === true ? /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: dataItem.items.displayname[\"en-US\"],\n        isSearchable: true,\n        name: `$p` + (index + 1),\n        placeholder: \"\",\n        showOption: true,\n        options: props.viewMasterData && props.viewMasterData[index] || [],\n        optionId: dataItem.items.sforeigncolumnname,\n        optionValue: \"sdisplayname\",\n        value: dataItem.value,\n        onChange: value => props.onParamComboChange(value, index),\n        isMulti: dataItem.symbolObject.items.ismulti,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 49\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null)) : dataItem.items.columntype === ColumnType.DATATIME || dataItem.items.columntype === ColumnType.DATE ? /*#__PURE__*/React.createElement(React.Fragment, null, dataItem.symbolObject.items.isInputVisible === true && dataItem.symbolObject.items.symbolType === 5 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(DateTimePicker, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        label: props.comboData.sdefaultvalue[index - 1].symbolObject.items.symbolType === 5 ? props.intl.formatMessage({\n          id: \"IDS_TO\"\n        }) : props.intl.formatMessage({\n          id: \"IDS_FROM\"\n        }),\n        name: `$p` + (index + 1),\n        className: \"form-control\",\n        placeholderText: \"Select date..\",\n        selected: dataItem.value // dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\n        // dateFormat={\"dd-MM-yyyy\"}\n        ,\n        isClearable: false,\n        showTimeInput: dataItem.items.columntype === ColumnType.DATATIME ? true : false,\n        onChange: date => props.onParamComboChange(date, index),\n        value: dataItem.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 57\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, null), dataItem.symbolObject.items.isInputVisible === true && dataItem.symbolObject.items.symbolType === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(DateTimePicker, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        label: dataItem.items.displayname[\"en-US\"],\n        name: `$p` + (index + 1),\n        className: \"form-control\",\n        placeholderText: \"Select date..\",\n        selected: dataItem.value // dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\n        // dateFormat={\"dd-MM-yyyy\"}\n        ,\n        isClearable: false,\n        showTimeInput: dataItem.items.columntype === ColumnType.DATATIME ? true : false,\n        onChange: date => props.onParamComboChange(date, index),\n        value: dataItem.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 57\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null))));\n    });\n    return design;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createRules());\n};\n\nexport default injectIntl(QueryBuilderParamter);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/dashboard/QueryBuilderParamter.js"],"names":["faGripVertical","faTrashAlt","FontAwesomeIcon","React","Button","Card","Col","Form","Row","FormattedMessage","injectIntl","FormSelectSearch","FormInput","BuilderBorder","ContionalButton","DeleteRule","ColumnType","FormTextarea","stringOperatorData","conditionalOperatorData","numericOperatorData","joinConditionData","aggregateFunction","orderByList","CustomSwitch","DateTimePicker","FormCheckbox","DataGrid","QueryBuilderParamter","props","createRules","design","comboData","sdefaultvalue","map","dataItem","index","push","items","columntype","TEXTINPUT","symbolObject","isInputVisible","needmasterdata","displayname","viewMasterData","valuemember","value","ismulti","onParamComboChange","event","onParamInputChange","symbolType","showInputValue","NUMERICINPUT","intl","formatMessage","id","COMBO","sforeigncolumnname","DATATIME","DATE","date"],"mappings":"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","sourcesContent":["import { faGripVertical, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { BuilderBorder, ContionalButton, DeleteRule } from './Sqlbuilder.styled';\r\nimport '../../assets/styles/querybuilder.css';\r\nimport { ColumnType } from '../../components/Enumeration';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { stringOperatorData, conditionalOperatorData, numericOperatorData, joinConditionData, aggregateFunction, orderByList } from './QueryBuilderData';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormCheckbox from '../../components/form-checkbox/form-checkbox.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\n\r\n\r\nconst QueryBuilderParamter = (props) => {\r\n\r\n\r\n    function createRules() {\r\n        let design = [];\r\n        props.comboData.sdefaultvalue.map((dataItem, index) => {\r\n            design.push(\r\n                <>\r\n                    <Row className=\"mt-3\">\r\n                        {dataItem.items.columntype === ColumnType.TEXTINPUT ?\r\n                            <>\r\n                                {dataItem.symbolObject.items.isInputVisible ?\r\n                                    <>\r\n                                        {dataItem.items.needmasterdata ?\r\n\r\n                                            <Col md={12}>\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    formLabel={dataItem.items.displayname[\"en-US\"]}\r\n                                                    isSearchable={true}\r\n                                                    name={`$p` + (index + 1)}\r\n                                                    showOption={true}\r\n                                                    options={props.viewMasterData[index] || []}\r\n                                                    optionId={dataItem.items.valuemember}\r\n                                                    optionValue={\"sdisplayname\"}\r\n                                                    value={dataItem.value || \"\"}\r\n                                                    isMulti={dataItem.symbolObject.items.ismulti}\r\n                                                    onChange={value => props.onParamComboChange(value, index)}\r\n                                                ></FormSelectSearch>\r\n                                            </Col> :\r\n                                            <Col md={12}>\r\n                                                <FormInput\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    label={dataItem.items.displayname[\"en-US\"]}\r\n                                                    name={`$p` + (index + 1)}\r\n                                                    type=\"text\"\r\n                                                    onChange={(event) => props.onParamInputChange(event, 3, index, dataItem)}\r\n                                                    value={dataItem.symbolObject.items.symbolType === 4 ? dataItem.showInputValue : dataItem.value}\r\n                                                    maxLength={100}\r\n                                                />\r\n                                            </Col>\r\n\r\n                                        }\r\n                                    </>\r\n                                    : <></>\r\n                                }\r\n\r\n                            </> : dataItem.items.columntype === ColumnType.NUMERICINPUT ?\r\n                                <>\r\n                                    {dataItem.symbolObject.items.isInputVisible === true ?\r\n                                        <>\r\n                                            <Col md={12}>\r\n                                                <FormInput\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    label={dataItem.symbolObject.items.symbolType === 5 ? props.intl.formatMessage({ id: \"IDS_FROM\" }) : \"\"}\r\n                                                    name={`$p` + (index + 1)}\r\n                                                    type=\"text\"\r\n                                                    required={false}\r\n                                                    isMandatory={false}\r\n                                                    value={dataItem.value}\r\n                                                    onChange={(event) => props.onParamInputChange(event, 2, index, dataItem)}\r\n                                                    maxLength={10}\r\n                                                />\r\n                                            </Col>\r\n                                            {dataItem.symbolObject.items.symbolType === 5 ?\r\n                                                (\r\n                                                    <Col md={12}>\r\n                                                        <FormInput\r\n                                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                                            label={props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                                            name={`$p` + (index + 1)}\r\n                                                            type=\"text\"\r\n                                                            required={false}\r\n                                                            isMandatory={false}\r\n                                                            value={dataItem.value}\r\n                                                            onChange={(event) => props.onParamInputChange(event, 2, index, dataItem)}\r\n                                                            maxLength={10}\r\n                                                        />\r\n                                                    </Col>\r\n                                                ) : <></>\r\n\r\n                                            }\r\n                                        </>\r\n                                        : <></>\r\n                                    }\r\n\r\n                                </> : dataItem.items.columntype === ColumnType.COMBO ?\r\n                                    <>\r\n                                        {dataItem.symbolObject.items.isInputVisible === true ?\r\n                                            <Col md={12}>\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    formLabel={dataItem.items.displayname[\"en-US\"]}\r\n                                                    isSearchable={true}\r\n                                                    name={`$p` + (index + 1)}\r\n                                                    placeholder=\"\"\r\n                                                    showOption={true}\r\n                                                    options={props.viewMasterData && props.viewMasterData[index] || []}\r\n                                                    optionId={dataItem.items.sforeigncolumnname}\r\n                                                    optionValue='sdisplayname'\r\n                                                    value={dataItem.value}\r\n                                                    onChange={value => props.onParamComboChange(value, index)}\r\n                                                    isMulti={dataItem.symbolObject.items.ismulti}\r\n                                                >\r\n                                                </FormSelectSearch>\r\n                                            </Col> : <></>\r\n                                        }\r\n                                    </> : dataItem.items.columntype === ColumnType.DATATIME\r\n                                        || dataItem.items.columntype === ColumnType.DATE ?\r\n                                        <>\r\n                                            {dataItem.symbolObject.items.isInputVisible === true && dataItem.symbolObject.items.symbolType === 5 ?\r\n                                                <>\r\n                                                    <Col md={12}>\r\n                                                        <DateTimePicker\r\n                                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                                            label={props.comboData.sdefaultvalue[index - 1].symbolObject.items.symbolType === 5 ? props.intl.formatMessage({ id: \"IDS_TO\" }) : props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                                                            name={`$p` + (index + 1)}\r\n                                                            className='form-control'\r\n                                                            placeholderText=\"Select date..\"\r\n                                                            selected={dataItem.value}\r\n                                                            // dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\r\n                                                            // dateFormat={\"dd-MM-yyyy\"}\r\n                                                            isClearable={false}\r\n                                                            showTimeInput={dataItem.items.columntype === ColumnType.DATATIME ? true : false}\r\n                                                            onChange={date => props.onParamComboChange(date, index)}\r\n                                                            value={dataItem.value}\r\n                                                        />\r\n                                                    </Col>\r\n                                                    {/* {dataItem.symbolObject.items.symbolType === 5 ?\r\n                                                        (\r\n                                                            <Col md={12}>\r\n                                                                <DateTimePicker\r\n                                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                    label={props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                                                    name={`$p` + (index + 1)}\r\n                                                                    className='form-control'\r\n                                                                    placeholderText=\"Select date..\"\r\n                                                                    selected={new Date(dataItem.value)}\r\n                                                                    // dateFormat={\"dd-MM-yyyy\"}\r\n                                                                    // dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\r\n                                                                    isClearable={false}\r\n                                                                    showTimeInput={dataItem.items.columntype === ColumnType.DATATIME ? true : false}\r\n                                                                    // onChange={date => props.handleFilterDateChange(`dateinputtwo`, date, groupIndex, index)}\r\n                                                                    value={new Date(dataItem.value)}\r\n                                                                />\r\n                                                            </Col>\r\n                                                        ) : <></>\r\n                                                    } */}\r\n                                                </>\r\n                                                : <></>\r\n                                            }\r\n                                            {dataItem.symbolObject.items.isInputVisible === true && dataItem.symbolObject.items.symbolType === 1 ?\r\n                                                <>\r\n                                                    <Col md={12}>\r\n                                                        <DateTimePicker\r\n                                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                                            label={dataItem.items.displayname[\"en-US\"]}\r\n                                                            name={`$p` + (index + 1)}\r\n                                                            className='form-control'\r\n                                                            placeholderText=\"Select date..\"\r\n                                                            selected={dataItem.value}\r\n                                                            // dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\r\n                                                            // dateFormat={\"dd-MM-yyyy\"}\r\n                                                            isClearable={false}\r\n                                                            showTimeInput={dataItem.items.columntype === ColumnType.DATATIME ? true : false}\r\n                                                            onChange={date => props.onParamComboChange(date, index)}\r\n                                                            value={dataItem.value}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </>\r\n                                                : <></>\r\n                                            }\r\n                                        </>\r\n                                        : <></>\r\n                        }\r\n                    </Row>\r\n                </>\r\n            )\r\n        });\r\n        return design;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {createRules()}\r\n        </>\r\n    )\r\n}\r\nexport default (injectIntl(QueryBuilderParamter));"]},"metadata":{},"sourceType":"module"}