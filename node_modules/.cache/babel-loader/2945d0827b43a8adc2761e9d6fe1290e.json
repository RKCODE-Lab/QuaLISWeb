{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{showUnderDevelopment,callService,crudMaster,updateStore,getSampleTypeChange,getRegTypeChange,getRegSubTypeChange,getAttachmentCombo,viewAttachment,getCommentsCombo,filterTransactionList,validateEsignCredential,ReloadData,getSampleChildTabDetail,getTestChildTabDetailRegistration,getTestByComponentChange,getPreviewTemplate,getChildValues,getRegistrationSample,getRegistrationsubSampleDetail,getRegistrationTestDetail,acceptRegistration,addMoreTest,createRegistrationTest,getEditRegistrationComboService,cancelTestAction,cancelSampleAction,addsubSampleRegistration,saveSubSample,getEditSubSampleComboService,onUpdateSubSampleRegistration,cancelSubSampleAction,preregRecordToQuarantine,componentTest}from'../../actions';import{Button,Card,Col,Nav,Row}from'react-bootstrap';import{toast}from'react-toastify';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{formatInputDate,getControlMap,listDataFromDynamicArray,showEsign,sortData,constructOptionList,onDropAttachFileList,deleteAttachmentDropZone,checkCancelAndReject,convertDateTimetoString,comboChild}from'../../components/CommonScript';import RegistrationFilter from'./RegistrationFilter';import Esign from'../audittrail/Esign';import{injectIntl}from'react-intl';import{ProductList}from'../product/product.styled';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import SplitterLayout from\"react-splitter-layout\";import AddTest from'./AddTest';import{designProperties,RegistrationSubType,RegistrationType,transactionStatus}from'../../components/Enumeration';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import ScrollBar from'react-perfect-scrollbar';import{ListWrapper}from'../../components/client-group.styles';import TransactionListMasterJson from'../../components/TransactionListMasterJson';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faEye,faPencilAlt,faPlus,faSync}from'@fortawesome/free-solid-svg-icons';import{ContentPanel}from'../../components/App.styles';import SampleInfoView from'../approval/SampleInfoView';import CustomTabs from'../../components/custom-tabs/custom-tabs.component';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import AddPrinter from'./AddPrinter';import SampleGridTab from'./SampleGridTab';import AddFile from'./AddFile';import Attachments from'../attachmentscomments/attachments/Attachments';import Comments from'../attachmentscomments/comments/Comments';import{onSaveTestComments}from'../attachmentscomments/comments/CommentFunctions';import{onSaveSampleAttachment,onSaveTestAttachment}from'../attachmentscomments/attachments/AttachmentFunctions';import{ReactComponent as Quarantine}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Quarantine.svg\";import{ReactComponent as Register}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/register.svg\";import{ReactComponent as Reject}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reject.svg\";import{getSameRecordFromTwoArrays,convertDateValuetoString,rearrangeDateFormat}from'../../components/CommonScript';import RegistrationResultTab from'./RegistrationResultTab';import PortalModal from'../../PortalModal';import PreRegisterSlideOutModal from'./PreRegisterSlideOutModal';import PerfectScrollbar from'react-perfect-scrollbar';import{checkTestPresent,getRegistrationSubSample}from'./RegistrationValidation';import AddSubSample from'./AddSubSample';var Registration=/*#__PURE__*/function(_Component){_inherits(Registration,_Component);var _super=_createSuper(Registration);function Registration(_props){var _this$state4;var _this;_classCallCheck(this,Registration);_this=_super.call(this,_props);_this.onReload=function(){// let RealFromDate = new Date(this.props.Login.masterData.RealFromDate)\n// let RealToDate = new Date(this.props.Login.masterData.RealToDate)\nvar obj=convertDateValuetoString(_this.props.Login.masterData.RealFromDate,_this.props.Login.masterData.RealToDate,_this.props.Login.userInfo);var RealFromDate=obj.fromDate;var RealToDate=obj.toDate;var RealSampleTypeValue=_this.props.Login.masterData.RealSampleTypeValue&&_this.props.Login.masterData.RealSampleTypeValue;var RealRegTypeValue=_this.props.Login.masterData.RealRegTypeValue&&_this.props.Login.masterData.RealRegTypeValue;var RealRegSubTypeValue=_this.props.Login.masterData.RealRegSubTypeValue&&_this.props.Login.masterData.RealRegSubTypeValue;var RealFilterStatusValue=_this.props.Login.masterData.RealFilterStatusValue&&_this.props.Login.masterData.RealFilterStatusValue;var activeSampleTab=_this.props.Login.activeSampleTab;var activeTestTab=_this.props.Login.activeTestTab;var SampleTypeValue=RealSampleTypeValue;var RegTypeValue=RealRegTypeValue;var RegSubTypeValue=RealRegSubTypeValue;var FilterStatusValue=RealFilterStatusValue;// let FromDate = this.props.Login.masterData.FromDate\n// let ToDate = this.props.Login.masterData.ToDate\nvar FromDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterData.FromDate);var ToDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterData.ToDate);var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{RealSampleTypeValue:RealSampleTypeValue,RealRegTypeValue:RealRegTypeValue,RealRegSubTypeValue:RealRegSubTypeValue,FromDate:FromDate,ToDate:ToDate,RealFilterStatusValue:RealFilterStatusValue,RealFromDate:RealFromDate,RealToDate:RealToDate,SampleTypeValue:SampleTypeValue,RegTypeValue:RegTypeValue,RegSubTypeValue:RegSubTypeValue,FilterStatusValue:FilterStatusValue});var inputData={npreregno:\"\",nsampletypecode:_this.props.Login.masterData.RealSampleTypeValue&&_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.RealRegTypeValue&&_this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.RealRegSubTypeValue&&_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,nfilterstatus:_this.props.Login.masterData.RealFilterStatusValue&&_this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus,userinfo:_this.props.Login.userInfo,activeSampleTab:activeSampleTab,activeTestTab:activeTestTab,flag:1,ndesigntemplatemappingcode:_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,nneedsubsample:_this.props.Login.masterData&&_this.props.Login.masterData.nneedsubsample,checkBoxOperation:3};if(inputData.nsampletypecode){// let obj = this.covertDatetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate)\ninputData['FromDate']=obj.fromDate;inputData['ToDate']=obj.toDate;var inputParam={masterData:masterData,inputData:inputData,searchSubSampleRef:_this.searchSubSampleRef,searchSampleRef:_this.searchSampleRef,searchTestRef:_this.searchTestRef,selectedFilter:_this.state.selectedFilter};_this.props.ReloadData(inputParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.onFilterSubmit=function(){var RealFromDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.state.selectedFilter.fromdate||_this.props.Login.masterData.FromDate);var RealToDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.state.selectedFilter.todate||_this.props.Login.masterData.ToDate);var RealSampleTypeValue=_this.props.Login.masterData.SampleTypeValue&&_this.props.Login.masterData.SampleTypeValue;var RealRegTypeValue=_this.props.Login.masterData.RegTypeValue&&_this.props.Login.masterData.RegTypeValue;var RealRegSubTypeValue=_this.props.Login.masterData.RegSubTypeValue&&_this.props.Login.masterData.RegSubTypeValue;var RealFilterStatusValue=_this.props.Login.masterData.FilterStatusValue&&_this.props.Login.masterData.FilterStatusValue;var activeSampleTab=_this.props.Login.activeSampleTab;if(_this.props.Login.masterData.RegTypeValue&&_this.props.Login.masterData.RegTypeValue.nregtypecode!==RegistrationType.PLASMA_POOL){activeSampleTab=\"IDS_SAMPLEATTACHMENTS\";}var activeTestTab=_this.props.Login.activeTestTab;var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{RealSampleTypeValue:RealSampleTypeValue,RealRegTypeValue:RealRegTypeValue,RealRegSubTypeValue:RealRegSubTypeValue,RealFilterStatusValue:RealFilterStatusValue,RealFromDate:RealFromDate,RealToDate:RealToDate});var inputData={npreregno:\"\",nsampletypecode:_this.props.Login.masterData.SampleTypeValue&&_this.props.Login.masterData.SampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.RegTypeValue&&_this.props.Login.masterData.RegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.RegSubTypeValue&&_this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,nfilterstatus:_this.props.Login.masterData.FilterStatusValue&&_this.props.Login.masterData.FilterStatusValue.ntransactionstatus,userinfo:_this.props.Login.userInfo,activeSampleTab:activeSampleTab,activeTestTab:activeTestTab,ndesigntemplatemappingcode:_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,nneedsubsample:_this.props.Login.masterData&&_this.props.Login.masterData.nneedsubsample,checkBoxOperation:3};if(inputData.nsampletypecode){if(inputData.ndesigntemplatemappingcode){var obj=convertDateValuetoString(_this.state.selectedFilter.fromdate||_this.props.Login.masterData.FromDate,_this.state.selectedFilter.todate||_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);inputData['FromDate']=obj.fromDate;inputData['ToDate']=obj.toDate;var selectedFilter={};selectedFilter[\"fromdate\"]=RealFromDate;selectedFilter[\"todate\"]=RealToDate;var inputParam={masterData:masterData,inputData:inputData,searchSubSampleRef:_this.searchSubSampleRef,searchSampleRef:_this.searchSampleRef,searchTestRef:_this.searchTestRef,selectedFilter:selectedFilter};_this.props.getRegistrationSample(inputParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSCONFIGREGISTRATIONTEMPLATE\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.verticalPaneSizeChange=function(val){_this.setState({initialVerticalWidth:val-150});};_this.handleDateSubSampleChange=function(dateValue,dateName){var selectedRecord=_this.state.selectedRecord;selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.onComponentChange=function(comboData,fieldName,nneedsubsample){if(comboData!==null){//  if (!nneedsubsample) {\nvar selectedRecord=_this.state.selectedRecord||{};if(fieldName==='ntzdreceivedate'){selectedRecord[\"ntzdreceivedate\"]=comboData;_this.setState({selectedRecord:selectedRecord});}else{// const oldspecsampletypecode = selectComponent.nspecsampletypecode\n// if (oldspecsampletypecode !== comboData.item.nspecsampletypecode) {\n//     //selectComponent[\"nneedservice\"] = true;\n// }\nselectedRecord[fieldName]=comboData;selectedRecord[\"Sample Name\"]=comboData.label;selectedRecord[\"nspecsampletypecode\"]=comboData.item.nspecsampletypecode;selectedRecord[\"ntestgrouptestcode\"]=[];_this.props.componentTest(selectedRecord,true,_this.state.specBasedComponent,_this.props.Login.Conponent);}// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         selectComponent\n//     }\n// }\n// this.props.updateStore(updateInfo);\n// } else {\n//     const selectComponent = this.state.selectComponent || {};\n//     selectComponent[fieldName] = comboData;\n//     // selectComponent[\"nspecsampletypecode\"] = comboData.item.nspecsampletypecode ?  comboData.item.nspecsampletypecode : -1;\n//     this.setState({ selectComponent })\n// }\n}};_this.onInputOnSubSampleChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name==='timeonly'){selectedRecord['dateonly']=false;}if(event.target.name==='dateonly'){selectedRecord['timeonly']=false;}selectedRecord[event.target.name]=event.target.checked;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboSubSampleChange=function(comboData,control,customName){var parentList=[];var childComboList=[];var childColumnList={};var comboName=customName||control.label;var selectedRecord=_this.state.selectedRecord||{};var inputParem={child:control.child,source:control.source,primarykeyField:control.valuemember,value:comboData.value,item:comboData.item,label:comboName,nameofdefaultcomp:control.name};if(comboData){selectedRecord[comboName]=comboData;}else{selectedRecord[comboName]=[];}if(control.child&&control.child.length>0){childComboList=getSameRecordFromTwoArrays(_this.state.regSubSamplecomboComponents,control.child,\"label\");childColumnList={};childComboList.map(function(columnList){var val=comboChild(_this.state.regSubSamplecomboComponents,columnList,childColumnList,false);childColumnList=val.childColumnList;});parentList=getSameRecordFromTwoArrays(_this.state.regSubSamplewithoutCombocomponent,control.child,\"label\");_this.props.getChildValues(inputParem,_this.props.Login.userInfo,selectedRecord,_this.props.Login.regSubSamplecomboData,childComboList,childColumnList,_this.state.regSubSamplewithoutCombocomponent,[].concat(_toConsumableArray(childComboList),_toConsumableArray(parentList)));}else{_this.setState({selectedRecord:selectedRecord});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { selectedRecord }\n// }\n// this.props.updateStore(updateInfo);\n}};_this.onNumericInputSubSampleChange=function(value,name){var selectedRecord=_this.state.selectedRecord;selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onSaveSubSampleClick=function(saveType,formRef){var operation=_this.props.Login.operation;if(operation==='create'){var objSubSample=_this.state.selectedRecord;var defaulttimezone=_this.props.Login.defaulttimezone;var userInfo=_this.props.Login.userInfo;var _saveSubSample={};var sampleList=[];if(_this.props.Login.masterData.searchedSample!==undefined){sampleList=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedSample,_this.props.Login.masterData.RegistrationGetSample.slice(_this.state.subsampleskip,_this.state.subsampleskip+_this.state.subsampletake),\"npreregno\");}else{sampleList=_this.props.Login.masterData.RegistrationGetSample&&_this.props.Login.masterData.RegistrationGetSample.slice(_this.state.subsampleskip,_this.state.subsampleskip+_this.state.subsampletake);}sampleList=getSameRecordFromTwoArrays(_this.props.Login.masterData.selectedSample,sampleList,'npreregno');var findSampleAlloSpec=_toConsumableArray(new Set(sampleList.map(function(item){return item.nallottedspeccode;})));if(_this.state.specBasedComponent){_saveSubSample[\"nspecsampletypecode\"]=objSubSample[\"nspecsampletypecode\"]?objSubSample[\"nspecsampletypecode\"]:-1;_saveSubSample[\"ncomponentcode\"]=objSubSample[\"ncomponentcode\"]?objSubSample[\"ncomponentcode\"].value:-1;}else{var findSampleSpec=_toConsumableArray(new Set(sampleList.map(function(item){return item.nspecsampletypecode;})));_saveSubSample[\"nspecsampletypecode\"]=findSampleSpec[0]?findSampleSpec[0]:-1;}_saveSubSample[\"jsondata\"]={};var dateList=[];_this.props.Login.masterData.SubSampleTemplate&&_this.props.Login.masterData.SubSampleTemplate.jsondata.map(function(row){row.children.map(function(column){column.children.map(function(component){if(component.hasOwnProperty(\"children\")){var componentrowlabel='';var componentrowvalue='';component.children.map(function(componentrow){if(componentrow.inputtype===\"combo\"){_saveSubSample[\"jsondata\"][componentrow.label]=objSubSample[componentrow.label]?{value:objSubSample[componentrow.label].value,label:objSubSample[componentrow.label].label}:-1;if(componentrow.mandatory||objSubSample[componentrow.label]){componentrowlabel=componentrowlabel+'&'+componentrow.label;componentrowvalue=componentrowvalue+' '+objSubSample[componentrow.label].label;}}else if(componentrow.inputtype===\"date\"){if(componentrow.mandatory){_saveSubSample[\"jsondata\"][componentrow.label]=convertDateTimetoString(objSubSample[componentrow.label]?objSubSample[componentrow.label]:new Date(),userInfo);}else{_saveSubSample[\"jsondata\"][componentrow.label]=componentrow.loadcurrentdate?convertDateTimetoString(objSubSample[componentrow.label]?objSubSample[componentrow.label]:new Date(),userInfo):objSubSample[componentrow.label]?convertDateTimetoString(objSubSample[componentrow.label]?objSubSample[componentrow.label]:new Date(),userInfo):\"\";}if(componentrow.timezone){_saveSubSample[\"jsondata\"][\"tz\".concat(componentrow.label)]=objSubSample[\"tz\".concat(componentrow.label)]?{value:objSubSample[\"tz\".concat(componentrow.label)].value,label:objSubSample[\"tz\".concat(componentrow.label)].label}:defaulttimezone?defaulttimezone:-1;}dateList.push(componentrow.label);}else{_saveSubSample[\"jsondata\"][componentrow.label]=objSubSample[componentrow.label]?objSubSample[componentrow.label]:\"\";if(objSubSample[componentrow.label]){componentrowlabel=componentrowlabel+'&'+objSubSample.label;componentrowvalue=componentrowvalue+' '+objSubSample[componentrow.label];}}});_saveSubSample[\"jsondata\"][componentrowlabel.substring(1)]=componentrowvalue;}else{if(component.inputtype===\"combo\"){_saveSubSample[\"jsondata\"][component.label]=objSubSample[component.label]?{value:objSubSample[component.label].value,label:objSubSample[component.label].label}:-1;}else if(component.inputtype===\"date\"){if(component.mandatory){_saveSubSample[\"jsondata\"][component.label]=convertDateTimetoString(objSubSample[component.label]?objSubSample[component.label]:new Date(),userInfo);}else{_saveSubSample[\"jsondata\"][component.label]=component.loadcurrentdate?convertDateTimetoString(objSubSample[component.label]?objSubSample[component.label]:new Date(),userInfo):objSubSample[component.label]?convertDateTimetoString(objSubSample[component.label]?objSubSample[component.label]:new Date(),userInfo):\"\";}if(component.timezone){_saveSubSample[\"jsondata\"][\"tz\".concat(component.label)]=objSubSample[\"tz\".concat(component.label)]?{value:objSubSample[\"tz\".concat(component.label)].value,label:objSubSample[\"tz\".concat(component.label)].label}:defaulttimezone?defaulttimezone:-1;}dateList.push(component.label);}else{_saveSubSample[\"jsondata\"][component.label]=objSubSample[component.label]?objSubSample[component.label]:\"\";}}});});});_saveSubSample[\"nallottedspeccode\"]=findSampleAlloSpec[0]?findSampleAlloSpec[0]:-1;// Component.unshift(saveSubSample);\nvar selectedTestData=objSubSample[\"ntestgrouptestcode\"];var selectedTestArray=[];selectedTestData&&selectedTestData.map(function(item){return selectedTestArray.push(item.item);});// const Test = this.props.Login.Test || [];\n// const ArrayTest = Test[saveComponent.slno] ? Test[saveComponent.slno] : [];\n//Test[saveComponent.slno] = [...ArrayTest, ...selectedTestArray]\nvar map={};map['RegistrationSample']=_saveSubSample;map['subsampleDateList']=dateList;map['testgrouptest']=selectedTestArray;map['npreregno']=sampleList.map(function(item){return item.npreregno;}).join(\",\");map['userinfo']=userInfo;map['checkBoxOperation']=3;map['ntype']=3;map[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;map[\"nneedsubsample\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedsubsample;map[\"checkBoxOperation\"]=3;map[\"masterData\"]=_this.props.Login.masterData;map[\"activeTestTab\"]=_this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\";map[\"activeSampleTab\"]=_this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\";var inputParam={inputData:map,postParamList:_this.postParamList};_this.props.saveSubSample(inputParam);}else{_this.onUpdateSubSampleRegistration(saveType,formRef,operation);}};_this.mandatoryList=function(prereg,printer,file,childtest,regSubSample){var mandatory=[];if(file){mandatory=[{\"mandatory\":true,\"idsName\":\"IDS_IMPORTFILE\",\"dataField\":\"sfilename\",\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"}];}else if(printer){mandatory=[{\"mandatory\":true,\"idsName\":\"IDS_PRINTER\",\"dataField\":\"sprintername\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];}else if(regSubSample){_this.props.Login.masterData.SubSampleTemplate&&_this.props.Login.masterData.SubSampleTemplate.jsondata.map(function(row){row.children.map(function(column){column.children.map(function(component){return component.hasOwnProperty(\"children\")?component.children.map(function(componentrow){if(componentrow.mandatory===true){mandatory.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"mandatoryLabel\":componentrow.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":componentrow.inputtype===\"combo\"?\"selectbox\":\"textbox\"});}}):component.mandatory===true?mandatory.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"mandatoryLabel\":component.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":component.inputtype===\"combo\"?\"selectbox\":\"textbox\"}):\"\";});});});}else if(childtest){mandatory=[{\"mandatory\":true,\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"ntestgrouptestcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];}return mandatory;};_this.deleteAttachment=function(event,file,fieldName){var selectedFile=_this.state.selectedFile||{};selectedFile[fieldName]=deleteAttachmentDropZone(selectedFile[fieldName],file);_this.setState({selectedFile:selectedFile,actionType:\"delete\"//fileToDelete:file.name \n});};_this.onSaveChildTestClick=function(saveType,formRef){var masterData=_this.props.Login.masterData;var selectedSubsample=getSameRecordFromTwoArrays(masterData.selectedSubSample,masterData.RegistrationGetSample.slice(_this.state.skip,_this.state.skip+_this.state.take),\"npreregno\");var selectedSample=getSameRecordFromTwoArrays(masterData.selectedSample,masterData.RegistrationGetSample.slice(_this.state.skip,_this.state.skip+_this.state.take),\"npreregno\");//  selectedSubsample =masterData.selectedSubSample.slice(this.state.skip, (this.state.skip + this.state.take));\nvar ntransactionsamplecode=selectedSubsample.map(function(x){return x.ntransactionsamplecode;}).join(\",\");var obj=convertDateValuetoString(_this.props.Login.masterData.RealFromDate,_this.props.Login.masterData.RealToDate,_this.props.Login.userInfo);var inputData={TestGroupTest:_this.state.selectedRecord.ntestgrouptestcode.map(function(value){return value.item;}),RegistrationSample:selectedSubsample.map(function(x){return x.ntransactionsamplecode;}),ntransactionsamplecode:ntransactionsamplecode,userinfo:_this.props.Login.userInfo,nregtypecode:masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:masterData.RealRegSubTypeValue.nregsubtypecode,nsampletypecode:masterData.RealSampleTypeValue.nsampletypecode,ntype:3,nfilterstatus:_this.props.Login.masterData.FilterStatusValue.ntransactionstatus,npreregno:selectedSample&&selectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),// ntransactionsamplecode: selectedSubsample &&\n// selectedSubsample.map(sample => sample.ntransactionsamplecode).join(\",\"),\nFromDate:obj.fromDate,ToDate:obj.toDate,ndesigntemplatemappingcode:_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,activeTestTab:_this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSampleTab:_this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\"};var inputParam={inputData:inputData,classUrl:\"registration\",operation:_this.props.Login.operation,methodUrl:\"Test\",responseKeyList:[{\"responseKey\":\"selectedSample\",\"masterDataKey\":\"RegistrationGetSample\",\"primaryKey\":\"npreregno\",\"dataAction\":\"update\"},{\"responseKey\":\"selectedSubSample\",\"masterDataKey\":\"RegistrationGetSubSample\",\"primaryKey\":\"ntransactionsamplecode\",\"dataAction\":\"update\"},{\"responseKey\":\"selectedTest\",\"masterDataKey\":\"RegistrationGetTest\",\"primaryKey\":\"ntransactiontestcode\",\"dataAction\":\"add\"}],saveType:saveType,formRef:formRef,postParamList:_this.postParamList};if(showEsign(_this.state.controlMap,_this.props.Login.userInfo.nformcode,_this.props.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.createRegistrationTest(inputParam,masterData,\"openModal\");}};_this.getRegistrationComboService=function(ScreenName,operation,primaryKeyField,masterData,userInfo,editId){var data=[];var withoutCombocomponent=[];var Layout=_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.jsondata;if(Layout!==undefined){Layout.map(function(row){row.children.map(function(column){column.children.map(function(component){return component.hasOwnProperty(\"children\")?component.children.map(function(componentrow){if(componentrow.inputtype===\"combo\"){data.push(componentrow);}else{withoutCombocomponent.push(componentrow);}}):component.inputtype===\"combo\"?data.push(component):withoutCombocomponent.push(component);});});});var comboComponents=data;var childColumnList={};data.map(function(columnList){var val=_this.comboChild(data,columnList,childColumnList,true);data=val.data;childColumnList=val.childColumnList;});var mapOfFilterRegData={nsampletypecode:parseInt(_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode)};_this.props.getPreviewTemplate(masterData,userInfo,editId,data,_this.state.selectedRecord,childColumnList,comboComponents,withoutCombocomponent,true,false,mapOfFilterRegData,false,\"create\",_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename);}else{toast.info(\"Configure the preregister template for this registrationtype\");}};_this.comboChild=function(data,columnList,childColumnList,slice){var retunObj={};// if (data.findIndex(x => x.label === columnList.label) !== -1) {\nif(!childColumnList.hasOwnProperty(columnList.label)){if(childColumnList[columnList.label]===undefined){if(columnList.hasOwnProperty(\"child\")){var childList=[];columnList.child.map(function(childData){var index=data.findIndex(function(x){return x.label===childData.label;});if(index!==-1){childList.push(data[index]);if(slice){data=[].concat(_toConsumableArray(data.slice(0,index)),_toConsumableArray(data.slice(index+1)));}}});childColumnList[columnList.label]=childList;if(childList.length>0){childList.map(function(y){if(y.hasOwnProperty(\"child\")){var val=_this.comboChild(data,y,childColumnList,slice);retunObj[\"data\"]=val.data;retunObj[\"childColumnList\"]=val.childColumnList;}else{retunObj[\"data\"]=data;retunObj[\"childColumnList\"]=childColumnList;}});}else{retunObj[\"data\"]=data;retunObj[\"childColumnList\"]=childColumnList;}}else{retunObj[\"data\"]=data;retunObj[\"childColumnList\"]=childColumnList;}}else{retunObj[\"data\"]=data;retunObj[\"childColumnList\"]=childColumnList;}}else{retunObj[\"data\"]=data;retunObj[\"childColumnList\"]=childColumnList;}return retunObj;};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});setTimeout(function(){_this._scrollBarRef.updateScroll();});};_this.handleTestPageChange=function(e){_this.setState({testskip:e.skip,testtake:e.take});};_this.handleSubSamplePageChange=function(e){_this.setState({subsampleskip:e.skip,subsampletake:e.take});};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.onFilterChange=function(event,labelname){var masterData=_this.props.Login.masterData;masterData=_objectSpread(_objectSpread({},masterData),{},_defineProperty({},labelname,_objectSpread({},event.item)));var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:masterData}};_this.props.updateStore(updateInfo);};_this.onSampleTabChange=function(tabProps){var activeSampleTab=tabProps.screenName;if(activeSampleTab!==_this.props.Login.activeSampleTab){var inputData={masterData:_this.props.Login.masterData,selectedSample:_this.props.Login.masterData.selectedSample,npreregno:_this.props.Login.masterData.selectedSample?_this.props.Login.masterData.selectedSample.map(function(item){return item.npreregno;}).join(\",\"):\"-1\",userinfo:_this.props.Login.userInfo,screenName:activeSampleTab,activeSampleTab:activeSampleTab};_this.props.getSampleChildTabDetail(inputData);}};_this.onSubSampleTabChange=function(tabProps){var activeSampleTab=tabProps.screenName;if(activeSampleTab!==_this.props.Login.activeSampleTab){var inputData={masterData:_this.props.Login.masterData,selectedSample:_this.props.Login.masterData.selectedSample,npreregno:_this.props.Login.masterData.selectedSample?_this.props.Login.masterData.selectedSample.map(function(item){return item.npreregno;}).join(\",\"):\"-1\",userinfo:_this.props.Login.userInfo,screenName:activeSampleTab,activeSampleTab:activeSampleTab};_this.props.getSubSampleChildTabDetail(inputData);}};_this.ontestTabChange=function(tabProps){var activeTestTab=tabProps.screenName;if(activeTestTab!==_this.props.Login.activeTestTab){if(_this.props.Login.masterData.selectedTest&&_this.props.Login.masterData.selectedTest.length>0){var inputData={masterData:_this.props.Login.masterData,selectedTest:_this.props.Login.masterData.selectedTest,ntransactiontestcode:_this.props.Login.masterData.selectedTest?String(_this.props.Login.masterData.selectedTest.map(function(item){return item.ntransactiontestcode;}).join(\",\")):\"-1\",npreregno:_this.props.Login.masterData.selectedSample?_this.props.Login.masterData.selectedSample.map(function(item){return item.npreregno;}).join(\",\"):\"-1\",userinfo:_this.props.Login.userInfo,activeTestTab:activeTestTab,screenName:activeTestTab,resultDataState:_this.state.resultDataState,testCommentDataState:_this.state.testCommentDataState,testAttachmentDataState:_this.state.testAttachmentDataState};_this.props.getTestChildTabDetailRegistration(inputData,true);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTEST\"}));}}};_this.onDropComponentFile=function(attachedFiles,fieldName,maxSize){var selectedFile=_this.state.selectedFile||{};selectedFile[fieldName]=onDropAttachFileList(selectedFile[fieldName],attachedFiles,maxSize);_this.setState({selectedFile:selectedFile,actionType:\"new\"});};_this.handleFilterDateChange=function(dateName,dateValue){var selectedFilter=_this.state.selectedFilter;if(dateValue===null){dateValue=new Date();}selectedFilter[dateName]=dateValue;_this.setState({selectedFilter:selectedFilter});};_this.onUpdateRegistrationConfirm=function(){_this.showAlert();_this.onUpdateRegistration(_this.props.Login.regEditParam.saveType,_this.props.Login.regEditParam.formRef,_this.props.Login.regEditParam.operation,2);};_this.confirmAlert=function(){if(_this.state.showConfirmAlert){if(_this.props.Login.regDateEditConfirmMessage){_this.confirmMessage.confirm(\"Warning\",\"Warning\",_this.props.Login.regDateEditConfirmMessage,_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.onUpdateRegistrationConfirm();},undefined,function(){return _this.showAlert();});}else{_this.confirmMessage.confirm(\"Warning\",\"Warning\",_this.props.Login.booleanFlag,\"ok\",\"Cancel\",function(){return _this.insertRegistration(false);},undefined,function(){return _this.showAlert();});}}};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.showAlert=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showConfirmAlert:false}};_this.props.updateStore(updateInfo);};_this.AddFile=function(){var selectedRecord=_this.state.selectedRecord;var RealRegTypeValue=_this.props.Login.masterData.RealRegTypeValue;var booleanmanuf=true;if(RealRegTypeValue===RegistrationType.PLASMA_POOL){booleanmanuf=selectedRecord[\"nmanufcode\"]>0&&selectedRecord[\"nmanufcode\"]!==undefined?true:false;}if(booleanmanuf){if(_this.state.selectedRecord.nallottedspeccode!==undefined){var updateInfo={typeName:DEFAULT_RETURN,data:{loadFile:true,ChildscreenName:\"File\",childoperation:\"Import\",parentPopUpSize:\"lg\",selectedFile:undefined}};_this.props.updateStore(updateInfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTMANUFACTURER\"}));}};_this.onNumericInputChange=function(value,name){var selectComponent=_this.state.selectComponent||{};if(name!==\"nnoofcontainer\"&&(value===0||value===0.0)){selectComponent[name]='';_this.setState({selectComponent:selectComponent});}else{selectComponent[name]=value;_this.setState({selectComponent:selectComponent});}};_this.onSampleTypeChange=function(event,fieldName,labelname){if(event!==null){var _Map={};_Map[\"nsampletypecode\"]=parseInt(event.value);_Map['userinfo']=_this.props.Login.userInfo;_this.props.getSampleTypeChange(_Map,_this.props.Login.masterData,event,labelname);}};_this.ConfirmComponent=function(props){_this.confirmMessage.confirm(\"confirmation\",\"Confirmation!\",\"Do You Want to Override the Existing Components ?\",\"ok\",\"cancel\",function(){return _this.getComponentfromJava(props);});};_this.onRegTypeChange=function(event,fieldName,labelname){if(event!==null){var _Map2={};_Map2[\"nregtypecode\"]=parseInt(event.value);_Map2['userinfo']=_this.props.Login.userInfo;_this.props.getRegTypeChange(_Map2,_this.props.Login.masterData,event,labelname);}};_this.acceptRegistration=function(registerId,skip,take){var sampleList=[];if(_this.props.Login.masterData.searchedSample!==undefined){sampleList=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedSample,_this.props.Login.masterData.RegistrationGetSample.slice(skip,skip+take),\"npreregno\");}else{sampleList=_this.props.Login.masterData.RegistrationGetSample&&_this.props.Login.masterData.RegistrationGetSample.slice(skip,skip+take);}// let sampleList = this.props.Login.masterData.searchedSample || [...this.props.Login.masterData.RegistrationGetSample].splice(skip, skip + take);\nvar acceptList=getSameRecordFromTwoArrays(sampleList||[],_this.props.Login.masterData.selectedSample,\"npreregno\");if(acceptList&&acceptList.length>0){if(acceptList.every(_this.checkPreregisterAndQuarentine)){if(_this.props.Login.masterData.selectedTest.length>0){if(checkTestPresent(_this.props.Login.masterData.RegistrationGetTest,acceptList)){var _Map3={};_Map3[\"fromdate\"]=\"\";_Map3[\"todate\"]=\"\";_Map3[\"nsampletypecode\"]=_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;_Map3[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map3[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;_Map3[\"nfilterstatus\"]=-1;_Map3[\"npreregno\"]=acceptList&&acceptList.map(function(sample){return sample.npreregno;}).join(\",\");// Map[\"npreregno\"] = this.props.Login.masterData.selectedSample &&\n//     this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\");\n_Map3[\"registrationsample\"]=_this.props.Login.masterData.selectedSubSample;_Map3[\"registrationtest\"]=_this.props.Login.masterData.selectedTest;_Map3[\"ntransactionsamplecode\"]=_this.props.Login.masterData.selectedSubSample.map(function(x){return x.ntransactionsamplecode;}).join(\",\");_Map3[\"ntransactiontestcode\"]=_this.props.Login.masterData.selectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\");;_Map3[\"userinfo\"]=_this.props.Login.userInfo;_Map3[\"nflag\"]=2;_Map3[\"ntype\"]=3;_Map3[\"activeSampleTab\"]=_this.props.Login.activeSampleTab;_Map3[\"activeTestTab\"]=_this.props.Login.activeTestTab;_Map3[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;_Map3[\"nneedsubsample\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedsubsample;_Map3[\"checkBoxOperation\"]=3;_Map3[\"stransactiontestcode\"]=_this.props.Login.masterData.selectedTest.map(function(sample){return sample.ntransactiontestcode;}).join(\",\");var inputParam={inputData:_Map3,postParamList:_this.postParamList,action:'accept'};_this.confirmMessage.confirm(_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_ACCEPTREGISTRATION\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.acceptRegistrationConfirm(inputParam,registerId);});}else{var _Map4={};_Map4[\"fromdate\"]=\"\";_Map4[\"todate\"]=\"\";_Map4[\"nsampletypecode\"]=_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;_Map4[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map4[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;_Map4[\"nfilterstatus\"]=-1;_Map4[\"npreregno\"]=acceptList&&acceptList.map(function(sample){return sample.npreregno;}).join(\",\");// Map[\"npreregno\"] = this.props.Login.masterData.selectedSample &&\n//     this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\");\n_Map4[\"registrationsample\"]=_this.props.Login.masterData.selectedSubSample;_Map4[\"registrationtest\"]=_this.props.Login.masterData.selectedTest;_Map4[\"userinfo\"]=_this.props.Login.userInfo;_Map4[\"nflag\"]=2;_Map4[\"ntype\"]=1;_Map4[\"activeSampleTab\"]=_this.props.Login.activeSampleTab;_Map4[\"activeTestTab\"]=_this.props.Login.activeTestTab;_Map4[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;_Map4[\"nneedsubsample\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedsubsample;_Map4[\"checkBoxOperation\"]=3;_Map4[\"stransactiontestcode\"]=_this.props.Login.masterData.selectedTest.map(function(sample){return sample.ntransactiontestcode;}).join(\",\");var _inputParam={inputData:_Map4,postParamList:_this.postParamList,action:'accept'};_this.confirmMessage.confirm(\"Confirmation\",\"Confirmation!\",\"Samples With atleast One Preregister Test Will Only Accept.Do You Want Accept?\",\"OK\",\"Cancel\",function(){return _this.acceptRegistrationConfirm(_inputParam,registerId);});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_ADDTESTTOREGISTERSAMPLES\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTPREREGQUARANTINESAMPLES\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTPREREGQUARANTINESAMPLES\"}));}};_this.acceptRegistrationConfirm=function(inputParam,registerId){if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,registerId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,parentPopUpSize:'lg',screenName:_this.props.Login.screenName,operation:'accept'}};_this.props.updateStore(updateInfo);}else{_this.props.acceptRegistration(inputParam,_this.props.Login.masterData);}};_this.selectQuarantine=function(quarantineId,skip,take){var sampleList=_this.props.Login.masterData.searchedSample||(_this.props.Login.masterData.RegistrationGetSample?_toConsumableArray(_this.props.Login.masterData.RegistrationGetSample).splice(skip,skip+take):[]);var quarentineList=getSameRecordFromTwoArrays(sampleList,_this.props.Login.masterData.selectedSample,\"npreregno\");if(quarentineList&&quarentineList.length>0){if(quarentineList.every(_this.checkPreregisterRecordQuarantine)){// let ntransactionstatus = this.props.Login.masterData.selectedSample &&\n//     this.props.Login.masterData.selectedSample.map(transactionStatus => transactionStatus.ntransactionstatus).join(\",\");\n//if (ntransactionstatus === transactionStatus.PREREGISTER) {\nvar _Map5={};_Map5[\"fromdate\"]=\"\";_Map5[\"todate\"]=\"\";_Map5[\"nsampletypecode\"]=_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;_Map5[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map5[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;_Map5[\"nfilterstatus\"]=-1;_Map5[\"npreregno\"]=quarentineList&&quarentineList.map(function(sample){return sample.npreregno;}).join(\",\");_Map5[\"registrationsample\"]=_this.props.Login.masterData.selectedSubSample;_Map5[\"registrationtest\"]=_this.props.Login.masterData.selectedTest;_Map5[\"userinfo\"]=_this.props.Login.userInfo;_Map5[\"nflag\"]=2;_Map5[\"ntype\"]=1;_Map5[\"activeTestTab\"]=_this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\";_Map5[\"activeSampleTab\"]=_this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\";_Map5[\"withoutgetparameter\"]=3;_Map5[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;_Map5[\"nneedsubsample\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedsubsample;_Map5[\"checkBoxOperation\"]=3;_Map5[\"checkBoxOperation\"]=3;_Map5[\"stransactiontestcode\"]=_this.props.Login.masterData.selectedTest.map(function(sample){return sample.ntransactiontestcode;}).join(\",\");_Map5[\"ntransactionstatus\"]=quarentineList&&quarentineList.map(function(transactionStatus){return transactionStatus.ntransactionstatus;}).join(\",\");//Map[\"ninsertpreregno\"] = quarantineSample.quarantineSample.npreregno;\nvar inputParam={inputData:_Map5,postParamList:_this.postParamList,action:'quarantine'};//console.log(\"inputParam, quarantine:\", inputParam);\nif(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,quarantineId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,parentPopUpSize:'lg',screenName:_this.props.Login.screenName,operation:'quarantine'}};_this.props.updateStore(updateInfo);}else{_this.props.preregRecordToQuarantine(inputParam,_this.props.Login.masterData);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTPREREGISTERSAMPLES\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTPREREGISTERSAMPLES\"}));}};_this.onRegSubTypeChange=function(event,fieldName,labelname){if(event!==null){var _Map6={};_Map6['nregtypecode']=_this.props.Login.masterData.RegTypeValue.nregtypecode;_Map6[\"nregsubtypecode\"]=parseInt(event.value);_Map6['userinfo']=_this.props.Login.userInfo;_this.props.getRegSubTypeChange(_Map6,_this.props.Login.masterData,event,labelname);}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?3:4;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){// if (comboData !== null) {\nvar selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});// }\n};_this.PrinterChange=function(comboData,fieldName){var selectedPrinterData=_this.state.selectedPrinterData||{};selectedPrinterData[fieldName]=comboData;_this.setState({selectedPrinterData:selectedPrinterData});};_this.closeChildModal=function(){var loadRegSubSample=_this.props.Login.loadRegSubSample;var loadFile=_this.props.Login.loadFile;var showSaveContinue=_this.props.Login.showSaveContinue;var screenName=_this.props.Login.screenName;var loadChildTest=_this.props.Login.loadChildTest;var openModal=_this.props.Login.openModal;var selectedRecord=_this.state.selectedRecord;if(_this.props.Login.loadFile){loadFile=false;screenName=_this.props.Login.PopUpLabel;}else if(_this.props.Login.loadChildTest){loadChildTest=false;openModal=false;selectedRecord={};}else if(_this.props.Login.loadRegSubSample){loadRegSubSample=false;openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{loadRegSubSample:loadRegSubSample,screenName:screenName,showSaveContinue:showSaveContinue,loadFile:loadFile,loadChildTest:loadChildTest,openModal:openModal,parentPopUpSize:\"xl\",selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var loadPreregister=_this.props.Login.loadPreregister;var openChildModal=_this.props.Login.openChildModal;var parentPopUpSize=_this.props.Login.pare;var screenName=_this.props.Login.screenName;var loadPrinter=_this.props.Login.loadPrinter;var openPortal=_this.props.Login.openPortal;var Component=_this.props.Login.Component;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"accept\"||_this.props.Login.operation===\"cancel\"||_this.props.Login.operation===\"quarantine\"){loadEsign=false;openModal=false;openChildModal=false;loadPreregister=false;var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:loadEsign,openModal:openModal,openChildModal:openChildModal,loadPreregister:loadPreregister}};_this.props.updateStore(updateInfo);}else{loadEsign=false;if(loadPreregister){parentPopUpSize='xl';}var _updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:loadEsign,parentPopUpSize:parentPopUpSize}};_this.props.updateStore(_updateInfo);}}else{openModal=false;loadPrinter=false;loadPreregister=false;selectedRecord={};openPortal=false;var _updateInfo2={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadPreregister:loadPreregister,selectedRecord:selectedRecord,screenName:screenName,insertSourcePreregno:undefined,loadPrinter:loadPrinter,openPortal:openPortal,Component:Component}};_this.props.updateStore(_updateInfo2);}};_this.onSaveClick=function(saveType,formRef){var operation=_this.props.Login.operation;if(operation===\"update\"){_this.onUpdateRegistration(saveType,formRef,operation);}};_this.onSavePrinterClick=function(){var insertlist=[];//this.state.selectedPrinterData.sprintername && this.state.selectedPrinterData.sprintername.map(source=>insertlist.push({npreregno:this.props.Login.insertSourcePreregno,sprintername:source.value}))\nvar inputParam={classUrl:'barcode',methodUrl:'Barcode',displayName:_this.props.Login.inputParam.displayName,inputData:{npreregno:_this.props.Login.insertPrinterPreregno,sprintername:_this.state.selectedPrinterData.sprintername?_this.state.selectedPrinterData.sprintername.value:'',insertlist:insertlist,npreregno1:_this.props.Login.masterData.selectedSample.map(function(x){return x.npreregno;}).join(\",\"),userinfo:_this.props.Login.userInfo,ncontrolcode:_this.props.Login.ncontrolcode},operation:'printer',// dataState:this.state.sourceDataState,\n// activeSampleTab:\"IDS_SOURCE\",\naction:'printer'};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:'printer'}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.onSaveFileClick=function(saveType,formRef){var selectedFile=_this.state.selectedFile;var selectedRecord=_this.state.selectedRecord;var acceptedFiles=selectedFile.sfilename;var formData=new FormData();// if(nattachmenttypecode === attachmentType.FTP) {\nif(acceptedFiles&&acceptedFiles.length>0){acceptedFiles.forEach(function(file,index){formData.append(\"uploadedFile\"+index,file);});formData.append(\"filecount\",acceptedFiles.length);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTANYONEFILETOSUBMIT\"}));}formData.append(\"userinfo\",JSON.stringify(_this.props.Login.userInfo));formData.append(\"nstudyplan\",JSON.stringify(selectedRecord.nallottedspeccode.value));formData.append(\"testrequired\",JSON.stringify(selectedRecord.ntransactionstatus===3?true:false));formData.append(\"ntemplatemanipulationcode\",JSON.stringify(selectedRecord.ntemplatemanipulationcode));formData.append(\"nregtypecode\",JSON.stringify(_this.props.Login.masterData.RealRegTypeValue.nregtypecode));formData.append(\"nregsubtypecode\",JSON.stringify(_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode));_this.props.ImportFile(formData,_this.confirmMessage,_this.props.Login);};_this.sampleInfoDataStateChange=function(event){_this.setState({sampleGridDataState:event.dataState});};_this.dataStateChange=function(event){switch(_this.props.Login.activeSampleTab){case\"IDS_SOURCE\":_this.setState({sourceDataState:event.dataState});break;default:_this.setState({sourceDataState:event.dataState});break;}};_this.testdataStateChange=function(event){switch(_this.props.Login.activeSampleTab){case\"IDS_TEST\":_this.setState({popUptestDataState:event.dataState});break;case\"IDS_TESTCOMMENTS\":_this.setState({testCommentDataState:event.dataState});break;case\"IDS_TESTATTACHMENTS\":_this.setState({testAttachmentDataState:event.dataState});break;default:_this.setState({popUptestDataState:event.dataState});break;}};_this.testStateChange=function(event){_this.setState({testDataState:event.dataState});};_this.sampleTabDetail=function(){var npreregno=_this.props.Login.masterData.selectedSample?_this.props.Login.masterData.selectedSample.map(function(sample){return sample.npreregno;}).join(\",\"):\"-1\";var tabMap=new Map();var sampleList=_this.props.Login.masterData.RegistrationGetSample||[];var _this$state=_this.state,sampleskip=_this$state.sampleskip,sampletake=_this$state.sampletake;sampleList=sampleList.slice(sampleskip,sampleskip+sampletake);var selectedSampleList=getSameRecordFromTwoArrays(sampleList,_this.props.Login.masterData.selectedSample,\"npreregno\");tabMap.set(\"IDS_ATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{screenName:\"IDS_SAMPLEATTACHMENTS\",onSaveClick:_this.onAttachmentSaveClick,selectedMaster:\"selectedSample\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,attachments:_this.props.Login.masterData.RegistrationAttachment||[],deleteRecord:_this.props.deleteAttachment,masterList:_this.props.Login.masterData.selectedSample,masterAlertStatus:\"IDS_SELECTSAMPLETOADDATTACHMENT\",fetchRecord:_this.props.getAttachmentCombo,viewFile:_this.props.viewAttachment,addName:\"AddSampleAttachment\",editName:\"EditSampleAttachment\",deleteName:\"DeleteSampleAttachment\",viewName:\"ViewSampleAttachment\",methodUrl:\"SampleAttachment\",skip:_this.props.Login.inputParam?_this.props.Login.inputParam.attachmentskip||0:0,take:_this.props.Login.inputParam?_this.props.Login.inputParam.attachmenttake||10:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,deleteParam:{methodUrl:\"SampleAttachment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights},editParam:{methodUrl:\"SampleAttachment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,masterList:_this.props.Login.masterData.RegistrationGetSample||[]},selectedListName:\"IDS_SAMPLE\",displayName:\"sarno\"}));tabMap.set(\"IDS_SAMPLECOMMENTS\",/*#__PURE__*/React.createElement(Comments,{screenName:\"IDS_SAMPLECOMMENTS\",onSaveClick:_this.onCommentsSaveClick,selectedMaster:\"selectedSample\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,Comments:_this.props.Login.masterData.RegistrationSampleComment||[],fetchRecord:_this.props.getCommentsCombo,addName:\"AddSampleComment\",editName:\"EditSampleComment\",deleteName:\"DeleteSampleComment\",methodUrl:\"SampleComment\",isTestComment:false,masterList:selectedSampleList,masterAlertStatus:\"IDS_SELECTTESTTOADDCOMMENTS\",primaryKeyField:\"nsamplecommentcode\",dataState:_this.state.testCommentDataState,dataStateChange:_this.testDataStateChange,deleteParam:{methodUrl:\"SampleComment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_SAMPLECOMMENTS\"},editParam:{methodUrl:\"SampleComment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_SAMPLECOMMENTS\",operation:\"update\",masterList:_this.props.Login.masterData.RegistrationGetSample||[],ncontrolCode:_this.state.controlMap.has(\"EditSampleComment\")&&_this.state.controlMap.get(\"EditSampleComment\").ncontrolcode},selectedListName:\"IDS_SAMPLES\",displayName:\"sarno\"}));return tabMap;};_this.subsampleTabDetail=function(){var npreregno=_this.props.Login.masterData.selectedSample?_this.props.Login.masterData.selectedSample.map(function(sample){return sample.npreregno;}).join(\",\"):\"-1\";var ntransactionsamplecode=_this.props.Login.masterData.selectedSubSample?_this.props.Login.masterData.selectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\"):\"-1\";var sampleList=_this.props.Login.masterData.RegistrationGetSample||[];var _this$state2=_this.state,sampleskip=_this$state2.sampleskip,sampletake=_this$state2.sampletake;sampleList=sampleList.slice(sampleskip,sampleskip+sampletake);var selectedSampleList=getSameRecordFromTwoArrays(sampleList,_this.props.Login.masterData.selectedSample,\"npreregno\");var tabMap=new Map();tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{screenName:\"IDS_SAMPLEATTACHMENTS\",onSaveClick:_this.onAttachmentSaveClick,selectedMaster:\"selectedSample\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,attachments:_this.props.Login.masterData.RegistrationAttachment||[],deleteRecord:_this.props.deleteAttachment,masterList:_this.props.Login.masterData.selectedSample,masterAlertStatus:\"IDS_SELECTSAMPLETOADDATTACHMENT\",fetchRecord:_this.props.getAttachmentCombo,viewFile:_this.props.viewAttachment,addName:\"AddSampleAttachment\",editName:\"EditSampleAttachment\",deleteName:\"DeleteSampleAttachment\",viewName:\"ViewSampleAttachment\",methodUrl:\"SampleAttachment\",skip:_this.props.Login.inputParam?_this.props.Login.inputParam.attachmentskip||0:0,take:_this.props.Login.inputParam?_this.props.Login.inputParam.attachmenttake||10:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,deleteParam:{methodUrl:\"SubSampleAttachment\",npreregno:npreregno,ntransactionsamplecode:ntransactionsamplecode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights},editParam:{methodUrl:\"SubSampleAttachment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,masterList:_this.props.Login.masterData.RegistrationGetSample||[]},selectedListName:\"IDS_SAMPLE\",displayName:\"sarno\"}));tabMap.set(\"IDS_SAMPLECOMMENTS\",/*#__PURE__*/React.createElement(Comments,{screenName:\"IDS_SAMPLECOMMENTS\",onSaveClick:_this.onCommentsSaveClick,selectedMaster:\"selectedSample\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,Comments:_this.props.Login.masterData.RegistrationSampleComment||[],fetchRecord:_this.props.getCommentsCombo,addName:\"AddSampleComment\",editName:\"EditSampleComment\",deleteName:\"DeleteSampleComment\",methodUrl:\"SampleComment\",isTestComment:false,masterList:selectedSampleList,masterAlertStatus:\"IDS_SELECTTESTTOADDCOMMENTS\",primaryKeyField:\"nsamplecommentcode\",dataState:_this.state.testCommentDataState,dataStateChange:_this.testDataStateChange,deleteParam:{methodUrl:\"SampleComment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_SAMPLECOMMENTS\"},editParam:{methodUrl:\"SampleComment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_SAMPLECOMMENTS\",operation:\"update\",masterList:_this.props.Login.masterData.RegistrationGetSample||[],ncontrolCode:_this.state.controlMap.has(\"EditSampleComment\")&&_this.state.controlMap.get(\"EditSampleComment\").ncontrolcode},selectedListName:\"IDS_SAMPLES\",displayName:\"sarno\"}));return tabMap;};_this.testTabDetail=function(){var testTabMap=new Map();var testList=_this.props.Login.masterData.RegistrationGetTest||[];var _this$state3=_this.state,testskip=_this$state3.testskip,testtake=_this$state3.testtake;testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.selectedTest,\"ntransactiontestcode\");// const cancelId = this.state.controlMap.has(\"CancelTest\") && this.state.controlMap.get(\"CancelTest\").ncontrolcode;\nvar ntransactiontestcode=_this.props.Login.masterData.selectedTest?_this.props.Login.masterData.selectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\";testTabMap.set(\"IDS_PARAMETERRESULTS\",/*#__PURE__*/React.createElement(RegistrationResultTab,{userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,dataState:_this.state.resultDataState,dataStateChange:_this.testDataStateChange,screenName:\"IDS_PARAMETERRESULTS\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights}));testTabMap.set(\"IDS_TESTATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{screenName:\"IDS_TESTATTACHMENTS\",selectedMaster:\"selectedTest\",onSaveClick:_this.onAttachmentSaveClick,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,masterList:selectedTestList,masterAlertStatus:\"IDS_SELECTTESTTOADDATTACHEMENT\",attachments:_this.props.Login.masterData.RegistrationTestAttachment||[],deleteRecord:_this.props.deleteAttachment,fetchRecord:_this.props.getAttachmentCombo,addName:\"AddTestAttachment\",editName:\"EditTestAttachment\",deleteName:\"DeleteTestAttachment\",viewName:\"ViewTestAttachment\",methodUrl:\"TestAttachment\",dataState:_this.state.testAttachmentDataState,dataStateChange:_this.testDataStateChange,deleteParam:{methodUrl:\"TestAttachment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTATTACHMENTS\"},editParam:{methodUrl:\"TestAttachment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTATTACHMENTS\",masterList:_this.props.Login.masterData.selectedTest},selectedListName:\"IDS_TESTS\",displayName:\"stestsynonym\"}));testTabMap.set(\"IDS_TESTCOMMENTS\",/*#__PURE__*/React.createElement(Comments,{screenName:\"IDS_TESTCOMMENTS\",onSaveClick:_this.onCommentsSaveClick,selectedMaster:\"selectedTest\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,Comments:_this.props.Login.masterData.RegistrationTestComment||[],fetchRecord:_this.props.getCommentsCombo,addName:\"AddTestComment\",editName:\"EditTestComment\",deleteName:\"DeleteTestComment\",methodUrl:\"TestComment\",isTestComment:false,masterList:selectedTestList,masterAlertStatus:\"IDS_SELECTTESTTOADDCOMMENTS\",primaryKeyField:\"ntestcommentcode\",dataState:_this.state.testCommentDataState,dataStateChange:_this.testDataStateChange,deleteParam:{methodUrl:\"TestComment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTCOMMENTS\"},editParam:{methodUrl:\"TestComment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTCOMMENTS\",operation:\"update\",masterList:_this.props.Login.masterData.RegistrationGetSample||[],ncontrolCode:_this.state.controlMap.has(\"EditTestComment\")&&_this.state.controlMap.get(\"EditTestComment\").ncontrolcode},selectedListName:\"IDS_TESTS\",displayName:\"stestsynonym\"}));return testTabMap;};_this.getCommentsCombo=function(event){if(_this.props.Login.selectedTest&&_this.props.Login.selectedTest.length>0){var _this$props;(_this$props=_this.props).getCommentsCombo.apply(_this$props,_toConsumableArray(event));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTESTTOADDCOMMENTS\"}));}};_this.testDataStateChange=function(event){switch(_this.props.Login.activeTestTab){case\"IDS_PARAMETERRESULTS\":_this.setState({resultDataState:event.dataState});break;case\"IDS_TEST\":_this.setState({testDataState:event.dataState});break;case\"IDS_TESTCOMMENTS\":_this.setState({testCommentDataState:event.dataState});break;case\"IDS_TESTATTACHMENTS\":_this.setState({testAttachmentDataState:event.dataState});break;default:_this.setState({resultDataState:event.dataState});break;}};_this.onCommentsSaveClick=function(saveType,formRef,selectedRecord){var masterData=_this.props.Login.masterData;var inputData={};var inputParam={};inputData[\"userinfo\"]=_this.props.Login.userInfo;var testList=[];if(_this.props.Login.masterData.searchedTest!==undefined){testList=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedTest,_this.props.Login.masterData.RegistrationGetTest.slice(_this.state.testskip,_this.state.testskip+_this.state.testtake),\"npreregno\");}else{testList=_this.props.Login.masterData.RegistrationGetTest.slice(_this.state.testskip,_this.state.testskip+_this.state.testtake);}var acceptList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.selectedTest,\"ntransactiontestcode\");// let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\nif(_this.props.Login.screenName===\"IDS_TESTCOMMENTS\"){var saveParam={userInfo:_this.props.Login.userInfo,isTestComment:_this.props.isTestComment,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,ntransactiontestcode:_this.props.Login.masterData.selectedTest?_this.props.Login.masterData.selectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\"};inputParam=onSaveTestComments(saveParam,acceptList);}if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:_this.props.Login.operation,screenName:_this.props.Login.screenName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openCommentModal\");}};_this.onAttachmentSaveClick=function(saveType,formRef,selectedRecord){var masterData=_this.props.Login.masterData;var inputData={};var inputParam={};var acceptList=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var sampleList=[];if(_this.props.Login.masterData.searchedTest!==undefined){sampleList=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedSample,_this.props.Login.masterData.RegistrationGetSample.slice(_this.state.skip,_this.state.skip+_this.state.take),\"npreregno\");}else{sampleList=_this.props.Login.masterData.RegistrationGetSample.slice(_this.state.skip,_this.state.skip+_this.state.take);}if(_this.props.Login.operation===\"update\"){acceptList.push(selectedRecord);}else{acceptList=getSameRecordFromTwoArrays(sampleList,_this.props.Login.masterData.selectedSample,\"npreregno\");}if(_this.props.Login.screenName===\"IDS_SAMPLEATTACHMENTS\"){var saveParam={userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,selectedMaster:_this.props.selectedMaster,npreregno:_this.props.Login.masterData.selectedSample?_this.props.Login.masterData.selectedSample.map(function(x){return x.npreregno;}).join(\",\"):\"-1\"};inputParam=onSaveSampleAttachment(saveParam,acceptList);}else if(_this.props.Login.screenName===\"IDS_TESTATTACHMENTS\"){var _saveParam={userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,selectedMaster:_this.props.selectedMaster,ntransactiontestcode:_this.props.Login.masterData.selectedTest?_this.props.Login.masterData.selectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\"};inputParam=onSaveTestAttachment(_saveParam,_this.props.Login.masterData.selectedTest);}if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:_this.props.Login.operation,screenName:_this.props.Login.screenName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openAttachmentModal\");}};_this.cancelSubSampleRecord=function(controlcode,skip,take){var testList=_this.props.Login.masterData.searchedSubSample||(_this.props.Login.masterData.RegistrationGetSubSample?_toConsumableArray(_this.props.Login.masterData.RegistrationGetSubSample).splice(skip,skip+take):[]);var acceptList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.selectedSubSample,\"ntransactionsamplecode\");if(acceptList&&acceptList.length>0){// console.log(\"Success:\", dataitem);\nif(_this.transValidation(_this.props.Login.transactionValidation,controlcode,acceptList)){var _Map7={};_Map7['npreregno']=acceptList.map(function(x){return x.npreregno;}).join(\",\");_Map7['ntransactiontestcode']=_this.props.Login.masterData.selectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\");// Map['ntransactionstatus'] = dataitem.ntransactionstatus;\n// Map[\"ntransactionsamplecode\"] = acceptList.map(x => x.ntransactionsamplecode).join(\",\");\n//  Map[\"ninserttransactionsamplecode\"] = dataitem.ntransactionsamplecode\n_Map7[\"userinfo\"]=_this.props.Login.userInfo;_Map7[\"ncontrolcode\"]=controlcode;_Map7[\"nsampletypecode\"]=_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;_Map7[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map7[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;_Map7[\"nflag\"]=2;_Map7[\"ntype\"]=3;// Map[\"withoutgetparameter\"] = 3;\n_Map7[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map7[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;_Map7[\"nfilterstatus\"]=_this.props.Login.masterData.FilterStatusValue.ntransactionstatus;_Map7[\"npreregno\"]=acceptList&&acceptList.map(function(sample){return sample.npreregno;}).join(\",\");_Map7[\"ntransactionsamplecode\"]=acceptList&&acceptList.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\");_Map7[\"registrationsample\"]=_this.props.Login.masterData.selectedSample;_Map7[\"registrationSubSample\"]=_this.props.Login.masterData.selectedSubSample;_Map7[\"registrationTest\"]=_this.props.Login.masterData.selectedTest;_Map7[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;_Map7[\"nneedsubsample\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedsubsample;_Map7[\"checkBoxOperation\"]=3;_Map7[\"activeTestTab\"]=_this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\";_Map7[\"activeSampleTab\"]=_this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\";var inputParam={inputData:_Map7,postParamList:_this.postParamList,action:'cancelSample'};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,controlcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,parentPopUpSize:'lg',screenName:_this.props.Login.screenName,operation:'cancel'}};_this.props.updateStore(updateInfo);}else{_this.props.cancelSubSampleAction(inputParam,_this.props.Login.masterData);}}else{var value=_this.props.Login.transactionValidation[controlcode]&&_this.props.Login.transactionValidation[controlcode].map(function(sample){return _this.props.intl.formatMessage({id:sample.stransdisplaystatus});}).join(\"/\");//toast.warn(\"Select\" + \" \" + value + \" to Cancel/Reject Test\");\ntoast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECT\"})+value+_this.props.intl.formatMessage({id:\"IDS_TOCANCELREJECTTEST\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTESTTOCANCELREJECT\"}));}};_this.cancelRecord=function(controlcode,skip,take){var testList=_this.props.Login.masterData.searchedTest||(_this.props.Login.masterData.RegistrationGetTest?_toConsumableArray(_this.props.Login.masterData.RegistrationGetTest).splice(skip,skip+take):[]);var acceptList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.selectedTest,\"ntransactiontestcode\");if(acceptList&&acceptList.length>0){// console.log(\"Success:\", dataitem);\nif(_this.transValidation(_this.props.Login.transactionValidation,controlcode,acceptList)){var _Map8={};_Map8['ninsertpreregno']=acceptList.map(function(x){return x.npreregno;}).join(\",\");// Map['ntransactionstatus'] = dataitem.ntransactionstatus;\n_Map8[\"ntransactiontestcode\"]=acceptList.map(function(x){return x.ntransactiontestcode;}).join(\",\");//  Map[\"ninserttransactionsamplecode\"] = dataitem.ntransactionsamplecode\n_Map8[\"userinfo\"]=_this.props.Login.userInfo;_Map8[\"ncontrolcode\"]=controlcode;_Map8[\"nsampletypecode\"]=_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;_Map8[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map8[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;_Map8[\"nflag\"]=2;_Map8[\"ntype\"]=3;_Map8[\"withoutgetparameter\"]=3;_Map8[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map8[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;_Map8[\"nfilterstatus\"]=_this.props.Login.masterData.FilterStatusValue.ntransactionstatus;_Map8[\"npreregno\"]=acceptList&&acceptList.map(function(sample){return sample.npreregno;}).join(\",\");_Map8[\"ntransactionsamplecode\"]=acceptList&&acceptList.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\");_Map8[\"registrationsample\"]=_this.props.Login.masterData.selectedSample;_Map8[\"registrationSubSample\"]=_this.props.Login.masterData.selectedSubSample;_Map8[\"registrationTest\"]=_this.props.Login.masterData.selectedTest;_Map8[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;_Map8[\"nneedsubsample\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedsubsample;var inputParam={inputData:_Map8,postParamList:_this.postParamList,action:'cancelTest'};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,controlcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,parentPopUpSize:'lg',screenName:_this.props.Login.screenName,operation:'cancel'}};_this.props.updateStore(updateInfo);}else{_this.props.cancelTestAction(inputParam,_this.props.Login.masterData);}}else{var value=_this.props.Login.transactionValidation[controlcode]&&_this.props.Login.transactionValidation[controlcode].map(function(sample){return _this.props.intl.formatMessage({id:sample.stransdisplaystatus});}).join(\"/\");//toast.warn(\"Select\" + \" \" + value + \" to Cancel/Reject Test\");\ntoast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECT\"})+value+_this.props.intl.formatMessage({id:\"IDS_TOCANCELREJECTTEST\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTESTTOCANCELREJECT\"}));}};_this.addSubSample=function(controlcode,skip,take){var Map={};var sampleList=[];if(_this.props.Login.masterData.searchedSample!==undefined){sampleList=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedSample,_this.props.Login.masterData.RegistrationGetSample.slice(skip,skip+take),\"npreregno\");}else{sampleList=_this.props.Login.masterData.RegistrationGetSample&&_this.props.Login.masterData.RegistrationGetSample.slice(skip,skip+take);}var addSubSampleList=getSameRecordFromTwoArrays(sampleList||[],_this.props.Login.masterData.selectedSample,\"npreregno\");if(addSubSampleList&&addSubSampleList.length>0){var findTransactionStatus=_toConsumableArray(new Set(addSubSampleList.map(function(item){return item.ntransactionstatus;})));if(findTransactionStatus.length===1){if(findTransactionStatus[0]===transactionStatus.PREREGISTER){//   const findApprovalVersion = [...new Set(addSubSampleList.map(item => item.napprovalversioncode))];\n//   if (findApprovalVersion.length === 1) {\nvar findSampleSpec=_toConsumableArray(new Set(addSubSampleList.map(function(item){return item.nallottedspeccode;})));var findSampleSpectemplate=_toConsumableArray(new Set(addSubSampleList.map(function(item){return item.ntemplatemanipulationcode;})));//const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\nif(findSampleSpec.length===1)//&& findComponent.length === 1 \n{var data=[];var regSubSamplewithoutCombocomponent=[];var Layout=_this.props.Login.masterData.SubSampleTemplate&&_this.props.Login.masterData.SubSampleTemplate.jsondata;if(Layout!==undefined){Layout.map(function(row){row.children.map(function(column){column.children.map(function(component){return component.hasOwnProperty(\"children\")?component.children.map(function(componentrow){if(componentrow.inputtype===\"combo\"){data.push(componentrow);}else{regSubSamplewithoutCombocomponent.push(componentrow);}}):component.inputtype===\"combo\"?data.push(component):regSubSamplewithoutCombocomponent.push(component);});});});var regSubSamplecomboComponents=data;var regchildColumnList={};data.map(function(columnList){var val=comboChild(data,columnList,regchildColumnList,true);data=val.data;regchildColumnList=val.childColumnList;});//const Map={}\n// const findSamplentemplatemanipulationcode = [...new Set(addSubSampleList.map(item => item.ntemplatemanipulationcode))];\n// Map[\"ntemplatemanipulationcode\"] = findSamplentemplatemanipulationcode[0];\nMap[\"nallottedspeccode\"]=findSampleSpec[0];Map[\"ntemplatemanipulationcode\"]=findSampleSpectemplate[0];Map[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"nneedsubsample\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedsubsample;Map[\"npreregno\"]=addSubSampleList&&addSubSampleList.map(function(sample){return sample.npreregno;}).join(\",\");Map[\"registrationsample\"]=addSubSampleList;_this.props.addsubSampleRegistration(_this.props.Login.masterData,_this.props.Login.userInfo,data,_this.state.selectedRecord,regchildColumnList,regSubSamplecomboComponents,regSubSamplewithoutCombocomponent,Map,controlcode,_this.state.specBasedComponent);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLEASECONFIGURETHESUBSAMPLETEMPLATE\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}// } else {\n//    toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\" }));\n// }\n}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTPREREGISTERSAMPLETOADDSUBSAMPLE\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLETOSUBSAMPLE\"}));}};_this.handleEditDateChange=function(dateName,dateValue){var selectComponent=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}selectComponent[dateName]=dateValue;_this.setState({selectedRecord:selectComponent});};_this.onNumericInputEditChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};if(name!==\"nnoofcontainer\"&&(value===0||value===0.0)){selectedRecord[name]='';_this.setState({selectedRecord:selectedRecord});}else{selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});}};_this.cancelSampleRecords=function(controlcode,skip,take){var Map={};var sampleList=[];if(_this.props.Login.masterData.searchedSample!==undefined){sampleList=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedSample,_this.props.Login.masterData.RegistrationGetSample.slice(skip,skip+take),\"npreregno\");}else{sampleList=_this.props.Login.masterData.RegistrationGetSample&&_this.props.Login.masterData.RegistrationGetSample.slice(skip,skip+take);}// let sampleList = this.props.Login.masterData.searchedSample || [...this.props.Login.masterData.RegistrationGetSample].splice(skip, skip + take);\n// sampleList = sampleList.splice(skip, skip + take);\nvar cancelRejectSamplesList=getSameRecordFromTwoArrays(sampleList||[],_this.props.Login.masterData.selectedSample,\"npreregno\");if(cancelRejectSamplesList&&cancelRejectSamplesList.length>0){if(_this.transValidation(_this.props.Login.transactionValidation,controlcode,cancelRejectSamplesList)){//Map['ninsertpreregno']=dataitem.cancelSample.npreregno;\nMap['ntransactionstatus']=cancelRejectSamplesList&&cancelRejectSamplesList.map(function(transactionstatus){return transactionstatus.ntransactionstatus;}).join(\",\");//Map[\"ntransactiontestcode\"]=dataitem.ntransactiontestcode;\n//Map[\"ninserttransactionsamplecode\"]=dataitem.ntransactionsamplecode\nMap[\"userinfo\"]=_this.props.Login.userInfo;Map[\"ncontrolcode\"]=controlcode;Map[\"nsampletypecode\"]=_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;Map[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;Map[\"nflag\"]=2;Map[\"ntype\"]=3;Map[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;Map[\"nneedsubsample\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedsubsample;Map[\"checkBoxOperation\"]=3;Map[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;Map[\"nfilterstatus\"]=-1;Map[\"npreregno\"]=cancelRejectSamplesList&&cancelRejectSamplesList.map(function(sample){return sample.npreregno;}).join(\",\");Map[\"ntransactionsamplecode\"]=_this.props.Login.masterData.selectedSubSample&&_this.props.Login.masterData.selectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\");Map[\"ntransactiontestcode\"]=_this.props.Login.masterData.selectedTest&&_this.props.Login.masterData.selectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\");Map[\"registrationsample\"]=cancelRejectSamplesList;Map[\"registrationtest\"]=_this.props.Login.masterData.selectedSubSample;Map[\"transactionValidation\"]=_this.props.Login.transactionValidation;Map[\"withoutgetparameter\"]=3;Map[\"activeTestTab\"]=_this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\";Map[\"activeSampleTab\"]=_this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\";var inputParam={inputData:Map,postParamList:_this.postParamList,action:'cancelSample'};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,controlcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,parentPopUpSize:'lg',screenName:_this.props.Login.screenName,operation:'cancel'}};_this.props.updateStore(updateInfo);}else{_this.props.cancelSampleAction(inputParam,_this.props.Login.masterData);}}else{var value=_this.props.Login.transactionValidation[controlcode]&&_this.props.Login.transactionValidation[controlcode].map(function(sample){return _this.props.intl.formatMessage({id:sample.stransdisplaystatus});}).join(\"/\");//toast.warn(\"Select\" + \" \" + value + \" to Cancel/Reject Sample\");\ntoast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECT\"})+value+_this.props.intl.formatMessage({id:\"IDS_TOCANCELREJECTSAMPLE\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLETOCANCELREJECT\"}));}};_this.transValidation=function(transactionValidation,ncontrolcode,selectedSample){//  const transList=transactionValidation?Object.keys(transactionValidation):[];\n//  const index=transList.findIndex(x=>x.ncontrolcode===ncontrolcode);\n//let check=true;\n//  let validate=false;\nvar ntransstatus=[];var translist=transactionValidation[ncontrolcode];if(translist){transactionValidation[ncontrolcode]&&transactionValidation[ncontrolcode].map(function(sam){return ntransstatus.push(sam.ntransactionstatus);});var selectdata=selectedSample?selectedSample:[];var check=selectdata.map(function(sam1){return ntransstatus.includes(sam1.ntransactionstatus);});if(check.includes(false)){return false;}else{return true;}}else{return true;}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignforRegistration(inputParam,\"openModal\");};_this.editRegistration=function(inputParam){var data=[];var withoutCombocomponent=[];var Layout=_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.jsondata;if(Layout!==undefined){Layout.map(function(row){row.children.map(function(column){column.children.map(function(component){return component.hasOwnProperty(\"children\")?component.children.map(function(componentrow){if(componentrow.inputtype===\"combo\"){data.push(componentrow);}else{withoutCombocomponent.push(componentrow);}}):component.inputtype===\"combo\"?data.push(component):withoutCombocomponent.push(component);});});});var comboComponents=data;var childColumnList={};data.map(function(columnList){var val=_this.comboChild(data,columnList,childColumnList,true);data=val.data;childColumnList=val.childColumnList;});_this.props.getEditRegistrationComboService(inputParam,data,_this.state.selectedRecord,childColumnList,comboComponents,withoutCombocomponent);}else{toast.info(\"Configure the preregister template for this registrationtype\");}};_this.editSubSampleRegistration=function(inputParam){var data=[];var regSubSamplewithoutCombocomponent=[];var Layout=_this.props.Login.masterData.SubSampleTemplate&&_this.props.Login.masterData.SubSampleTemplate.jsondata;if(Layout!==undefined){Layout.map(function(row){row.children.map(function(column){column.children.map(function(component){return component.hasOwnProperty(\"children\")?component.children.map(function(componentrow){if(componentrow.inputtype===\"combo\"){data.push(componentrow);}else{regSubSamplewithoutCombocomponent.push(componentrow);}}):component.inputtype===\"combo\"?data.push(component):regSubSamplewithoutCombocomponent.push(component);});});});var regSubSamplecomboComponents=data;var regSubSamplechildColumnList={};data.map(function(columnList){var val=_this.comboChild(data,columnList,regSubSamplechildColumnList,true);data=val.data;regSubSamplechildColumnList=val.childColumnList;});_this.props.getEditSubSampleComboService(inputParam,data,_this.state.selectedRecord,regSubSamplechildColumnList,regSubSamplecomboComponents,regSubSamplewithoutCombocomponent,_this.state.specBasedComponent);}else{toast.info(\"Configure the sub sample template for this registrationtype\");}};_this.searchSampleRef=React.createRef();_this.searchSubSampleRef=React.createRef();_this.searchTestRef=React.createRef();_this.PrevoiusLoginData=undefined;_this.breadCrumbData=[];//  this.sampleeditable=this.props.Login.masterData.DynamicDesign&& JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\n_this.state=(_this$state4={layout:1,openModal:false,masterStatus:\"\",error:\"\",selectedRecord:{},operation:\"\",screenName:\"Product\",userRoleControlRights:[],controlMap:new Map(),showAccordian:true,showSaveContinue:false,filterCollection:[],selectedFilter:{},breadCrumb:[],showTest:true,showSample:false,showSubSample:false},_defineProperty(_this$state4,\"showSubSample\",false),_defineProperty(_this$state4,\"SingleItem\",[]),_defineProperty(_this$state4,\"sampleSearchFied\",[]),_defineProperty(_this$state4,\"subsampleSearchFied\",[]),_defineProperty(_this$state4,\"testSearchFied\",[]),_defineProperty(_this$state4,\"showConfirmAlert\",false),_defineProperty(_this$state4,\"dataState\",{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5}),_defineProperty(_this$state4,\"DynamicSampleColumns\",[]),_defineProperty(_this$state4,\"sampleGridDataState\",{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5}),_defineProperty(_this$state4,\"testDataState\",{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'npreregno'}]}),_defineProperty(_this$state4,\"testCommentDataState\",{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'groupingField'}]}),_defineProperty(_this$state4,\"testAttachmentDataState\",{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'groupingField'}]}),_defineProperty(_this$state4,\"sampleCommentsDataState\",{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'groupingField'}]}),_defineProperty(_this$state4,\"resultDataState\",{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]}),_defineProperty(_this$state4,\"historyDataState\",{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'},{field:'stestsynonym'}]}),_defineProperty(_this$state4,\"selectedPrinterData\",{}),_defineProperty(_this$state4,\"grandparentheight\",'150vh'),_defineProperty(_this$state4,\"transactionValidation\",[]),_defineProperty(_this$state4,\"skip\",0),_defineProperty(_this$state4,\"take\",_this.props.Login.settings&&parseInt(_this.props.Login.settings[3])),_defineProperty(_this$state4,\"testskip\",0),_defineProperty(_this$state4,\"splitChangeWidthPercentage\",28.6),_defineProperty(_this$state4,\"testtake\",_this.props.Login.settings&&_this.props.Login.settings[12]?_this.props.Login.settings[12]:10),_defineProperty(_this$state4,\"subsampleskip\",0),_defineProperty(_this$state4,\"subsampletake\",_this.props.Login.settings&&_this.props.Login.settings[12]?_this.props.Login.settings[12]:10),_defineProperty(_this$state4,\"comboComponents\",[]),_defineProperty(_this$state4,\"withoutCombocomponent\",[]),_defineProperty(_this$state4,\"childColumnList\",[]),_defineProperty(_this$state4,\"columnList\",[]),_defineProperty(_this$state4,\"regSubSamplecomboComponents\",[]),_defineProperty(_this$state4,\"regSubSamplewithoutCombocomponent\",[]),_defineProperty(_this$state4,\"regparentSubSampleColumnList\",[]),_defineProperty(_this$state4,\"DynamicSampleColumns\",[]),_defineProperty(_this$state4,\"DynamicSubSampleColumns\",[]),_defineProperty(_this$state4,\"DynamicTestColumns\",[]),_defineProperty(_this$state4,\"DynamicGridItem\",[]),_defineProperty(_this$state4,\"DynamicGridMoreField\",[]),_defineProperty(_this$state4,\"SingleItem\",[]),_defineProperty(_this$state4,\"testMoreField\",[]),_defineProperty(_this$state4,\"testListColumns\",[]),_defineProperty(_this$state4,\"SubSampleDynamicGridItem\",[]),_defineProperty(_this$state4,\"SubSampleDynamicGridMoreField\",[]),_defineProperty(_this$state4,\"SubSampleSingleItem\",[]),_defineProperty(_this$state4,\"cancelId\",-1),_defineProperty(_this$state4,\"preRegisterId\",-1),_defineProperty(_this$state4,\"registerId\",-1),_defineProperty(_this$state4,\"editSampleId\",-1),_defineProperty(_this$state4,\"quarantineId\",-1),_defineProperty(_this$state4,\"addTestId\",-1),_defineProperty(_this$state4,\"printBarcodeId\",-1),_defineProperty(_this$state4,\"cancelSampleId\",-1),_defineProperty(_this$state4,\"addSubSampleId\",-1),_defineProperty(_this$state4,\"editSubSampleId\",-1),_defineProperty(_this$state4,\"cancelSubSampleId\",-1),_defineProperty(_this$state4,\"stateSampleType\",[]),_defineProperty(_this$state4,\"stateRegistrationType\",[]),_defineProperty(_this$state4,\"stateRegistrationSubType\",[]),_defineProperty(_this$state4,\"stateFilterStatus\",[]),_defineProperty(_this$state4,\"testGetParam\",{}),_defineProperty(_this$state4,\"testChildGetParam\",{}),_defineProperty(_this$state4,\"subSampleGetParam\",{}),_defineProperty(_this$state4,\"filterSampleParam\",{}),_defineProperty(_this$state4,\"filterTestParam\",{}),_defineProperty(_this$state4,\"editRegParam\",{}),_defineProperty(_this$state4,\"editSubSampleRegParam\",{}),_defineProperty(_this$state4,\"addTestParam\",{}),_defineProperty(_this$state4,\"sampleSearchField\",[]),_defineProperty(_this$state4,\"subsampleSearchField\",[]),_defineProperty(_this$state4,\"testSearchField\",[]),_defineProperty(_this$state4,\"filterSubSampleParam\",{}),_defineProperty(_this$state4,\"specBasedComponent\",_this.props.Login.settings&&_this.props.Login.settings[18]?_this.props.Login.settings[18]===\"true\"?true:false:false),_this$state4);// this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\nreturn _this;}_createClass(Registration,[{key:\"getActiveTestURL\",value:function getActiveTestURL(){var url=\"resultentrybysample/getTestbasedParameter\";switch(this.props.Login.activeTestKey){case\"IDS_PARAMETERRESULTS\"://url = \"resultentrybysample/getTestbasedParameter\";\nurl=\"registration/getregistrationparameter\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";break;default:url=\"registration/getregistrationparameter\";// url = \"resultentrybysample/getTestbasedParameter\";\nbreak;}return url;}},{key:\"gridViewChange\",value:function gridViewChange(layout){this.setState({layout:layout});}},{key:\"render\",value:function render(){var _this2=this;this.fromDate=this.state.selectedFilter[\"fromdate\"]!==\"\"&&this.state.selectedFilter[\"fromdate\"]!==undefined?this.state.selectedFilter[\"fromdate\"]:this.props.Login.masterData.FromDate;this.toDate=this.state.selectedFilter[\"todate\"]!==\"\"&&this.state.selectedFilter[\"todate\"]!==undefined?this.state.selectedFilter[\"todate\"]:this.props.Login.masterData.ToDate;var sampleList=this.props.Login.masterData.RegistrationGetSample?sortData(this.props.Login.masterData.RegistrationGetSample):[];var subSampleList=this.props.Login.masterData.RegistrationGetSubSample?this.props.Login.masterData.RegistrationGetSubSample:[];var testList=this.props.Login.masterData.RegistrationGetTest?this.props.Login.masterData.RegistrationGetTest:[];//\n// let testGetParam = {\n//     masterData: this.props.Login.masterData,\n//     userinfo: this.props.Login.userInfo,\n//     ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n//     nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n//     nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n//     nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n//     activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\n//     activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n//     npreregno: this.props.Login.masterData.selectedSample &&\n//         this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\"),\n//     sfromdate: this.props.Login.masterData.RealFromDate,\n//     stodate: this.props.Login.masterData.RealToDate,\n//     searchTestRef: this.searchTestRef,\n//     testskip: this.state.testskip,\n//     subsampleskip: this.state.subsampleskip,\n//     resultDataState: this.state.resultDataState,\n//     ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\n// }\n// let testChildGetParam = {\n//     masterData: this.props.Login.masterData,\n//     userinfo: this.props.Login.userInfo,\n//     ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n//     nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n//     nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n//     nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n//     activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\n//     activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n//     npreregno: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\"),\n//     ntransactionsamplecode: this.props.Login.masterData.selectedSubSample &&\n//         this.props.Login.masterData.selectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n//     sfromdate: this.props.Login.masterData.RealFromDate,\n//     stodate: this.props.Login.masterData.RealToDate,\n//     resultDataState: this.state.resultDataState,\n//     testCommentDataState: this.state.testCommentDataState,\n//     ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\n// }\nthis.confirmMessage=new ConfirmMessage();// let subSampleGetParam = {\n//     masterData: this.props.Login.masterData,\n//     ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n//     userinfo: this.props.Login.userInfo,\n//     nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n//     nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n//     nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n//     activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\n//     activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n//     testskip: this.state.testskip,\n//     subsampleskip: this.state.subsampleskip,\n//     searchTestRef: this.searchTestRef,\n//     resultDataState: this.state.resultDataState,\n//     testCommentDataState: this.state.testCommentDataState,\n//     sampleGridDataState: this.state.sampleGridDataState,\n//     ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\n//         && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\n//     nneedsubsample: this.props.Login.masterData\n//         && this.props.Login.masterData.nneedsubsample\n// }\n// let sampleSearchField = [\"sarno\", \"sproductname\", \"sproductcatname\", \"seprotocolname\", \"stransdisplaystatus\"\n//     , \"sstorageconditionname\", \"sdecisionstatus\", \"scomponentname\", \"splasmafilenumber\", \"sversion\", \"sbulkvolume\", \"sregsubtypename\", \"smanuflotno\"\n//     , \"sregtypename\", \"sspecname\", \"saddress1\", \"sclientname\", \"smanufsitename\", \"sproductcertificatename\", \"smanufname\", \"sstoragelocationname\"];\n// const filterSampleParam = {\n//     inputListName: \"RegistrationGetSample\",\n//     selectedObject: \"selectedSample\",\n//     primaryKeyField: \"npreregno\",\n//     fetchUrl: \"registration/getRegistrationSubSample\",\n//     childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\n//     fecthInputObject: {\n//         nflag: 2,\n//         ntype: 2,\n//         masterData: this.props.Login.masterData,\n//         ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n//         userinfo: this.props.Login.userInfo,\n//         nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n//         nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n//         nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n//         activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\n//         activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n//     },\n//     masterData: this.props.Login.masterData,\n//     searchFieldList: sampleSearchField,\n//     changeList: [\n//         \"RegistrationGetSubSample\", \"RegistrationGetTest\", \"RegistrationTestAttachment\",\n//         \"RegistrationTestComment\", \"RegistrationAttachment\", \"selectedSample\", \"selectedSubSample\",\n//         \"selectedTest\", \"RegistrationParameter\"\n//     ]\n// };\n// let filterTestParam = {\n//     inputListName: \"RegistrationGetTest\",\n//     selectedObject: \"selectedTest\",\n//     primaryKeyField: \"ntransactiontestcode\",\n//     fetchUrl: this.getActiveTestURL(),\n//     fecthInputObject: {\n//         ntransactiontestcode: this.props.Login.masterData && this.props.Login.masterData.selectedTest && this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\n//         userinfo: this.props.Login.userInfo\n//     },\n//     masterData: this.props.Login.masterData,\n//     searchFieldList: [\"sarno\", \"stestsynonym\", \"ssectionname\", \"ssamplearno\",\n//         \"sinstrumentcatname\", \"stransdisplaystatus\", \"smethodname\", \"ssourcename\", \"scomponentname\", \"stestname\"],\n//     changeList: [\"RegistrationTestComment\", \"RegistrationParameter\"]\n// }\nthis.postParamList=[{filteredListName:\"searchedSample\",clearFilter:\"no\",searchRef:this.searchSampleRef,primaryKeyField:\"npreregno\",fetchUrl:\"registration/getRegistrationSubSample\",fecthInputObject:_objectSpread(_objectSpread({},this.state.subSampleGetParam),{},{testskip:this.state.testskip,subsampleskip:this.state.subsampleskip,searchSubSampleRef:this.searchSubSampleRef,searchTestRef:this.searchTestRef,resultDataState:this.state.resultDataState,testCommentDataState:this.state.testCommentDataState,testAttachmentDataState:this.state.testAttachmentDataState,sampleGridDataState:this.state.sampleGridDataState}),childRefs:[{ref:this.searchSubSampleRef,childFilteredListName:\"searchedSubSample\"},{ref:this.searchTestRef,childFilteredListName:\"searchedTest\"}],selectedObject:\"selectedSample\",inputListName:\"AP_SAMPLE\",updatedListname:\"selectedSample\",unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\"]},{filteredListName:\"searchedSubSample\",clearFilter:\"no\",searchRef:this.searchSubSampleRef,primaryKeyField:\"ntransactionsamplecode\",fetchUrl:\"registration/getRegistrationTestSample\",fecthInputObject:_objectSpread(_objectSpread({},this.state.testGetParam),{},{testskip:this.state.testskip,subsampleskip:this.state.subsampleskip,searchSubSampleRef:this.searchSubSampleRef,searchTestRef:this.searchTestRef,resultDataState:this.state.resultDataState,testCommentDataState:this.state.testCommentDataState,testAttachmentDataState:this.state.testAttachmentDataState,sampleGridDataState:this.state.sampleGridDataState}),childRefs:[{ref:this.searchTestRef,childFilteredListName:\"searchedTest\"}],selectedObject:\"selectedSubSample\",inputListName:\"AP_SUBSAMPLE\",updatedListname:\"selectedSubSample\",unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\"]},{filteredListName:\"searchedTest\",updatedListname:\"selectedTest\",clearFilter:\"no\",searchRef:this.searchTestRef,primaryKeyField:\"ntransactiontestcode\",fetchUrl:\"approval/getApprovalTest\",fecthInputObject:_objectSpread(_objectSpread({},this.state.testGetParam),{},{searchTestRef:this.searchTestRef,testskip:this.state.testskip,subsampleskip:this.state.subsampleskip,resultDataState:this.state.resultDataState}),selectedObject:\"selectedTest\",inputListName:\"RegistrationGetTest\",unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\"]}];// let editRegParam = {\n//     nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n//     userinfo: this.props.Login.userInfo,\n//     nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n//     nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n//     nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n//     sfromdate: this.props.Login.masterData.RealFromDate,\n//     stodate: this.props.Login.masterData.RealToDate,\n//     ncontrolCode: this.state.editSampleId,\n//     ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\n//         && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\n//     nneedsubsample: this.props.Login.masterData\n//         && this.props.Login.masterData.nneedsubsample\n// }\n// let editSubSampleRegParam = {\n//     nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\n//     userinfo: this.props.Login.userInfo,\n//     nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\n//     nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\n//     nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\n//     sfromdate: this.props.Login.masterData.RealFromDate,\n//     stodate: this.props.Login.masterData.RealToDate,\n//     ncontrolCode: this.state.editSampleId,\n//     ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\n//         && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\n//     nneedsubsample: this.props.Login.masterData\n//         && this.props.Login.masterData.nneedsubsample\n// }\n// const addTestParam = {\n//     selectedsample: this.props.Login.masterData.selectedSample,\n//     selectedsubsample: this.props.Login.masterData.selectedSubSample,\n//     skip: this.state.skip, take: (this.state.skip + this.state.take),\n//     userinfo: this.props.Login.userInfo,\n//     sampleList: this.props.Login.masterData.RegistrationGetSample,\n//     snspecsampletypecode: this.props.Login.masterData.selectedSubSample &&\n//         [...new Set(this.props.Login.masterData.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\")\n// };\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-4 screen-height-window\"},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData}),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height\"},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",primaryIndex:1,percentage:true,secondaryInitialSize:this.state.splitChangeWidthPercentage,onSecondaryPaneSizeChange:this.paneSizeChange,primaryMinSize:40,secondaryMinSize:20},this.state.layout==1?/*#__PURE__*/React.createElement(TransactionListMasterJson// paneHeight={this.state.firstPane}\n,{splitChangeWidthPercentage:this.state.splitChangeWidthPercentage,masterList:this.props.Login.masterData.searchedSample||sampleList,selectedMaster:this.props.Login.masterData.selectedSample,primaryKeyField:\"npreregno\",filterColumnData:this.props.filterTransactionList,getMasterDetail:this.props.getRegistrationsubSampleDetail,inputParam:_objectSpread(_objectSpread({},this.state.subSampleGetParam),{},{searchTestRef:this.searchTestRef,searchSubSampleRef:this.searchSubSampleRef,testskip:this.state.testskip,subsampleskip:this.state.subsampleskip,resultDataState:this.state.resultDataState}),selectionList:this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus===transactionStatus.ALL?this.props.Login.masterData.FilterStatus:[],selectionColorField:\"scolorhexcode\",mainField:\"sarno\",showStatusLink:true,showStatusName:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",selectedListName:\"selectedSample\",searchListName:\"searchedSample\",searchRef:this.searchSampleRef,objectName:\"sample\",listName:\"IDS_SAMPLE\",selectionField:\"ntransactionstatus\",selectionFieldName:\"stransdisplaystatus\",showFilter:this.props.Login.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,subFields:this.state.DynamicSampleColumns,jsonField:'jsondata',jsonDesignFields:true,needMultiSelect:true,filterParam:_objectSpread(_objectSpread({},this.state.filterSampleParam),{},{childRefs:[{ref:this.searchSubSampleRef,childFilteredListName:\"searchedSubSample\"},{ref:this.searchTestRef,childFilteredListName:\"searchedTest\"}]}),subFieldsLabel:false,handlePageChange:this.handlePageChange,skip:this.state.skip,take:this.state.take,splitModeClass:this.state.splitChangeWidthPercentage&&this.state.splitChangeWidthPercentage>50?'split-mode':this.state.splitChangeWidthPercentage>40?'split-md':'',childTabsKey:[\"RegistrationAttachment\",\"RegistrationGetSubSample\",\"RegistrationGetTest\"]//, \"RegistrationParameter\"\"RegistrationTestComment\"\n,actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_EDIT\"}),controlname:\"faPencilAlt\",objectName:\"mastertoedit\",hidden:this.state.userRoleControlRights.indexOf(this.state.editSampleId)===-1,onClick:this.editRegistration,inputData:{primaryKeyName:\"npreregno\",operation:\"update\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,editRegParam:_objectSpread(_objectSpread({},this.state.editRegParam),{},{ncontrolCode:this.state.editSampleId})}},{title:this.props.intl.formatMessage({id:\"IDS_PRINTBARCODE\"}),controlname:\"faPrint\",objectName:\"sample\",hidden:this.state.userRoleControlRights.indexOf(this.state.printBarcodeId)===-1,onClick:this.props.getPrinterComboService,inputData:{primaryKeyName:\"npreregno\",operation:\"print\",ncontrolcode:this.state.printBarcodeId,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,editRegParam:_objectSpread(_objectSpread({},this.state.editRegParam),{},{ncontrolCode:this.state.editSampleId})}}],needFilter:true,commonActions:/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right icon-group-wrap\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue ml-2\",role:\"button\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REGISTER\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(this.state.preRegisterId)===-1,onClick:function onClick(){return _this2.getRegistrationComboService(\"Registration\",\"create\",\"npreregno\",_this2.props.Login.masterData,_this2.props.Login.userInfo,_this2.state.preRegisterId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ACCEPT\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(this.state.registerId)===-1,onClick:function onClick(){return _this2.acceptRegistration(_this2.state.registerId,_this2.state.skip,_this2.state.take);}},/*#__PURE__*/React.createElement(Register,{className:\"custom_icons\",width:\"15\",height:\"15\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_QUARANTINE\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(this.state.quarantineId)===-1,onClick:function onClick(){return _this2.selectQuarantine(_this2.state.quarantineId,_this2.state.skip,_this2.state.take);}},/*#__PURE__*/React.createElement(Quarantine,{className:\"custom_icons\",width:\"15\",height:\"15\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CANCELREJECTSAMPLE\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(this.state.cancelSampleId)===-1,onClick:function onClick(){return _this2.cancelSampleRecords(_this2.state.cancelSampleId,_this2.state.skip,_this2.state.take);}},/*#__PURE__*/React.createElement(Reject,{className:\"custom_icons\",width:\"20\",height:\"20\"})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"}),\"data-for\":\"tooltip-common-wrap\",onClick:function onClick(){return _this2.onReload();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}}))),filterComponent:[{\"Sample Filter\":/*#__PURE__*/React.createElement(RegistrationFilter,{SampleType:this.state.stateSampleType||[],RegistrationType:this.state.stateRegistrationType||[],RegistrationSubType:this.state.stateRegistrationSubType||[],userInfo:this.props.Login.userInfo||{},SampleTypeValue:this.props.Login.masterData.SampleTypeValue||{},RegTypeValue:this.props.Login.masterData.RegTypeValue||{},RegSubTypeValue:this.props.Login.masterData.RegSubTypeValue||{},FilterStatusValue:this.props.Login.masterData.FilterStatusValue||{},FilterStatus:this.state.stateFilterStatus||[],FromDate:this.fromDate?rearrangeDateFormat(this.props.Login.userInfo,this.fromDate):new Date(),ToDate:this.toDate?rearrangeDateFormat(this.props.Login.userInfo,this.toDate):new Date(),onSampleTypeChange:this.onSampleTypeChange,onRegTypeChange:this.onRegTypeChange,onRegSubTypeChange:this.onRegSubTypeChange,handleFilterDateChange:this.handleFilterDateChange,onFilterChange:this.onFilterChange})}]}):this.state.layout==2?/*#__PURE__*/React.createElement(TransactionListMasterJson,{paneHeight:this.state.initialVerticalWidth// splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\n,masterList:this.props.Login.masterData.searchedSubSample||subSampleList,selectedMaster:this.props.Login.masterData.selectedSubSample,primaryKeyField:\"ntransactionsamplecode\",getMasterDetail:this.props.getRegistrationTestDetail,inputParam:_objectSpread(_objectSpread({},this.state.testGetParam),{},{searchTestRef:this.searchTestRef,testskip:this.state.testskip,subsampleskip:this.state.subsampleskip,resultDataState:this.state.resultDataState}),additionalParam:['napprovalversioncode'],showStatusLink:true,showStatusName:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",mainField:\"ssamplearno\",selectedListName:\"selectedSubSample\",objectName:\"subsample\",listName:\"IDS_SUBSAMPLE\",jsonField:'jsondata',jsonDesignFields:true,needValidation:true,validationKey:\"napprovalversioncode\",validationFailMsg:\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",subFields:this.state.DynamicSubSampleColumns,searchRef:this.searchSubSampleRef,skip:this.state.subsampleskip,take:this.state.subsampletake,selectionField:\"ntransactionstatus\",selectionFieldName:\"stransdisplaystatus\",needMultiSelect:true,selectionColorField:\"scolorhexcode\",subFieldsLabel:false,handlePageChange:this.handleSubSamplePageChange,selectionList:this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus===transactionStatus.ALL?this.props.Login.masterData.FilterStatus:[],childTabsKey:[\"RegistrationAttachment\",\"RegistrationGetTest\"],actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_EDIT\"}),controlname:\"faPencilAlt\",objectName:\"mastertoedit\",hidden:this.state.userRoleControlRights.indexOf(this.state.editSubSampleId)===-1,onClick:this.editSubSampleRegistration,inputData:{primaryKeyName:\"ntransactionsamplecode\",operation:\"update\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,editSubSampleRegParam:_objectSpread(_objectSpread({},this.state.editSubSampleRegParam),{},{ncontrolCode:this.state.editSampleId})}}],needFilter:false,commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex justify-content-end icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"adddeputy\",className:\"btn btn-circle outline-grey ml-2\"//title={\"Add Test\"}\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADDSUBSAMPLE\"}),hidden:this.state.userRoleControlRights.indexOf(this.state.addSubSampleId)===-1,onClick:function onClick(){return _this2.addSubSample(_this2.state.addSubSampleId,_this2.state.subsampleskip,_this2.state.subsampletake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\"//title={\"Cancel/Reject Test\"}\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),hidden:this.state.userRoleControlRights.indexOf(this.state.cancelSubSampleId)===-1,onClick:function onClick(){return _this2.cancelSubSampleRecord(_this2.state.cancelSubSampleId,_this2.state.subsampleskip,_this2.state.subsampletake);}},/*#__PURE__*/React.createElement(Reject,{className:\"custom_icons\",width:\"15\",height:\"15\"}))))}):this.state.layout==3?/*#__PURE__*/React.createElement(TransactionListMasterJson,{paneHeight:this.state.initialVerticalWidth,masterList:this.props.Login.masterData.searchedTest||testList,selectedMaster:this.props.Login.masterData.selectedTest,primaryKeyField:\"ntransactiontestcode\",getMasterDetail:this.props.getTestChildTabDetailRegistration,inputParam:_objectSpread(_objectSpread({},this.state.testChildGetParam),{},{resultDataState:this.state.resultDataState,testCommentDataState:this.state.testCommentDataState,testAttachmentDataState:this.state.testAttachmentDataState}),additionalParam:[],mainField:\"stestsynonym\",selectedListName:\"selectedTest\",objectName:\"test\",listName:\"IDS_TEST\",jsonField:'jsondata',pageSize:this.props.Login.settings&&this.props.Login.settings[13].split(\",\").map(function(setting){return parseInt(setting);}),showStatusLink:true,subFieldsLabel:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",needMultiSelect:true,subFields:this.state.testListColumns||[],moreField:this.state.testMoreField,needValidation:false,showStatusName:true,needFilter:false,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedTest\",searchRef:this.searchTestRef,filterParam:this.state.filterTestParam,selectionField:\"ntransactionstatus\",selectionFieldName:\"stransdisplaystatus\"// childTabsKey={[\"RegistrationTestComment\"]}\n,childTabsKey:[\"RegistrationParameter\",\"RegistrationTestComment\",\"RegistrationTestAttachment\"],handlePageChange:this.handleTestPageChange,buttonCount:5,skip:this.state.testskip,take:this.state.testtake,showMoreResetList:true,showMoreResetListName:\"RegistrationGetSample\",selectionList:this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus===transactionStatus.ALL?this.props.Login.masterData.FilterStatus:[],selectionColorField:\"scolorhexcode\"// selectionList=\n// actionIcons={\n//     [{ title: \"EditTest\", controlname: \"faPencilAlt\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\n//     { title: \"Add Intrument\", controlname: \"faMicroscope\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedInstrumentId) === -1, onClick: this.addREInstrument, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedInstrumentId } },\n//     { title: \"Add Material\", controlname: \"faFlask\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedMaterailId) === -1 },\n//     { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }]\n// }\n,commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex justify-content-end icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"adddeputy\",className:\"btn btn-circle outline-grey ml-2\"//title={\"Add Test\"}\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADDTEST\"}),hidden:this.state.userRoleControlRights.indexOf(this.state.addTestId)===-1,onClick:function onClick(){return _this2.props.addMoreTest(_objectSpread(_objectSpread({},_this2.state.addTestParam),{},{skip:_this2.state.skip,take:_this2.state.skip+_this2.state.take}),_this2.state.addTestId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\"//title={\"Cancel/Reject Test\"}\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CANCELREJECTTEST\"}),hidden:this.state.userRoleControlRights.indexOf(this.state.cancelId)===-1,onClick:function onClick(){return _this2.cancelRecord(_this2.state.cancelId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(Reject,{className:\"custom_icons\",width:\"15\",height:\"15\"}))))}):\"\",/*#__PURE__*/React.createElement(PerfectScrollbar,null,this.state.layout==1?/*#__PURE__*/React.createElement(SplitterLayout,{customClassName:\"detailed-inner\",vertical:true,borderColor:\"#999\",primaryIndex:1,onSecondaryPaneSizeChange:this.verticalPaneSizeChange,secondaryInitialSize:400},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:this.state.showTest===true?{display:\"block\",background:\"#FFFF\"}:{display:\"none\",background:\"#FFFF\"}},/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",primaryIndex:1,percentage:true,secondaryInitialSize:this.state.splitChangeWidthPercentage,onSecondaryPaneSizeChange:this.paneSizeChange,primaryMinSize:40,secondaryMinSize:30},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},\"Sub Sample\"))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(TransactionListMasterJson,{paneHeight:this.state.initialVerticalWidth// splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\n,masterList:this.props.Login.masterData.searchedSubSample||subSampleList,selectedMaster:this.props.Login.masterData.selectedSubSample,primaryKeyField:\"ntransactionsamplecode\",getMasterDetail:this.props.getRegistrationTestDetail,inputParam:_objectSpread(_objectSpread({},this.state.testGetParam),{},{searchTestRef:this.searchTestRef,searchSubSampleRef:this.searchSubSampleRef,testskip:this.state.testskip,subsampleskip:this.state.subsampleskip,resultDataState:this.state.resultDataState}),filterColumnData:this.props.filterTransactionList,searchListName:\"searchedSubSample\",searchRef:this.searchSubSampleRef,filterParam:_objectSpread(_objectSpread({},this.state.filterSubSampleParam),{},{childRefs:[{ref:this.searchTestRef,childFilteredListName:\"searchedTest\"}]}),additionalParam:['napprovalversioncode'],showStatusLink:true,showStatusName:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",mainField:\"ssamplearno\",selectedListName:\"selectedSubSample\",objectName:\"subsample\",listName:\"IDS_SUBSAMPLE\",jsonField:'jsondata',jsonDesignFields:true,needValidation:true,validationKey:\"napprovalversioncode\",validationFailMsg:\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",subFields:this.state.DynamicSubSampleColumns,skip:this.state.subsampleskip,take:this.state.subsampletake,selectionField:\"ntransactionstatus\",selectionFieldName:\"stransdisplaystatus\",needMultiSelect:true,selectionColorField:\"scolorhexcode\",subFieldsLabel:false,handlePageChange:this.handleSubSamplePageChange,selectionList:this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus===transactionStatus.ALL?this.props.Login.masterData.FilterStatus:[],childTabsKey:[\"RegistrationAttachment\",\"RegistrationGetTest\"],actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_EDIT\"}),controlname:\"faPencilAlt\",objectName:\"mastertoedit\",hidden:this.state.userRoleControlRights.indexOf(this.state.editSubSampleId)===-1,onClick:this.editSubSampleRegistration,inputData:{primaryKeyName:\"ntransactionsamplecode\",operation:\"update\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,editSubSampleRegParam:_objectSpread(_objectSpread({},this.state.editSubSampleRegParam),{},{ncontrolCode:this.state.editSampleId})}}],needFilter:false,commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex justify-content-end icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"adddeputy\",className:\"btn btn-circle outline-grey ml-2\"//title={\"Add Test\"}\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADDSUBSAMPLE\"}),hidden:this.state.userRoleControlRights.indexOf(this.state.addSubSampleId)===-1,onClick:function onClick(){return _this2.addSubSample(_this2.state.addSubSampleId,_this2.state.subsampleskip,_this2.state.subsampletake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\"//title={\"Cancel/Reject Test\"}\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),hidden:this.state.userRoleControlRights.indexOf(this.state.cancelSubSampleId)===-1,onClick:function onClick(){return _this2.cancelSubSampleRecord(_this2.state.cancelSubSampleId,_this2.state.subsampleskip,_this2.state.subsampletake);}},/*#__PURE__*/React.createElement(Reject,{className:\"custom_icons\",width:\"15\",height:\"15\"}))))}))),/*#__PURE__*/React.createElement(ContentPanel,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary btn-padd-custom\",style:{float:\"right\"},onClick:function onClick(){return _this2.showSample();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(TransactionListMasterJson,{paneHeight:this.state.initialVerticalWidth,masterList:this.props.Login.masterData.searchedTest||testList,selectedMaster:this.props.Login.masterData.selectedTest,primaryKeyField:\"ntransactiontestcode\",getMasterDetail:this.props.getTestChildTabDetailRegistration,inputParam:_objectSpread(_objectSpread({},this.state.testChildGetParam),{},{resultDataState:this.state.resultDataState,testCommentDataState:this.state.testCommentDataState,testAttachmentDataState:this.state.testAttachmentDataState}),additionalParam:[],mainField:\"stestsynonym\",selectedListName:\"selectedTest\",objectName:\"test\",listName:\"IDS_TEST\",jsonField:'jsondata',pageSize:this.props.Login.settings&&this.props.Login.settings[13].split(\",\").map(function(setting){return parseInt(setting);}),showStatusLink:true,subFieldsLabel:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",needMultiSelect:true,subFields:this.state.testListColumns||[],moreField:this.state.testMoreField,needValidation:false,showStatusName:true,needFilter:false,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedTest\",searchRef:this.searchTestRef,filterParam:this.state.filterTestParam,selectionField:\"ntransactionstatus\",selectionFieldName:\"stransdisplaystatus\"// childTabsKey={[\"RegistrationTestComment\"]}\n,childTabsKey:[\"RegistrationParameter\",\"RegistrationTestComment\",\"RegistrationTestAttachment\"],handlePageChange:this.handleTestPageChange,buttonCount:5,skip:this.state.testskip,take:this.state.testtake,showMoreResetList:true,showMoreResetListName:\"RegistrationGetSample\",selectionList:this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus===transactionStatus.ALL?this.props.Login.masterData.FilterStatus:[],selectionColorField:\"scolorhexcode\"// selectionList=\n// actionIcons={\n//     [{ title: \"EditTest\", controlname: \"faPencilAlt\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\n//     { title: \"Add Intrument\", controlname: \"faMicroscope\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedInstrumentId) === -1, onClick: this.addREInstrument, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedInstrumentId } },\n//     { title: \"Add Material\", controlname: \"faFlask\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedMaterailId) === -1 },\n//     { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }]\n// }\n,commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex justify-content-end icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"adddeputy\",className:\"btn btn-circle outline-grey ml-2\"//title={\"Add Test\"}\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADDTEST\"}),hidden:this.state.userRoleControlRights.indexOf(this.state.addTestId)===-1,onClick:function onClick(){return _this2.props.addMoreTest(_objectSpread(_objectSpread({},_this2.state.addTestParam),{},{skip:_this2.state.skip,take:_this2.state.skip+_this2.state.take}),_this2.state.addTestId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\"//title={\"Cancel/Reject Test\"}\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CANCELREJECTTEST\"}),hidden:this.state.userRoleControlRights.indexOf(this.state.cancelId)===-1,onClick:function onClick(){return _this2.cancelRecord(_this2.state.cancelId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(Reject,{className:\"custom_icons\",width:\"15\",height:\"15\"}))))})))))),/*#__PURE__*/React.createElement(ContentPanel,{style:this.state.showSample===true?{display:\"block\"}:{display:\"none\"}},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,{className:\"p-0\"},/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary btn-padd-custom\",style:{\"float\":\"right\",\"margin-right\":\"6px\"},onClick:function onClick(){return _this2.showTest();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\" \",this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:this.state.initialVerticalWidth}},this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.length===1?/*#__PURE__*/React.createElement(SampleInfoView,{data:this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.length>0?this.props.Login.masterData.selectedSample[this.props.Login.masterData.selectedSample.length-1]:{},SingleItem:this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample?this.state.SingleItem:[],screenName:\"IDS_SAMPLEINFO\",userInfo:this.props.Login.userInfo}):/*#__PURE__*/React.createElement(SampleGridTab,{userInfo:this.props.Login.masterData.userInfo||{},GridData:this.props.Login.masterData.selectedSample||[],masterData:this.props.Login.masterData,inputParam:this.props.Login.inputParam,dataState:this.state.sampleGridDataState,dataStateChange:this.sampleInfoDataStateChange,extractedColumnList:this.gridfillingColumn(this.state.DynamicGridItem)||[],detailedFieldList:this.gridfillingColumn(this.state.DynamicGridMoreField)||[],primaryKeyField:\"npreregno\",expandField:\"expanded\",screenName:\"IDS_SAMPLEINFO\",jsonField:\"jsondata\"}))))))))))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:\"calc(110vh - \"+(+this.state.initialVerticalWidth+100)+\"px)\"}},this.state.showSample?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:this.props.Login.activeSampleTab?this.props.Login.activeSampleTab==='IDS_SAMPLEATTACHMENTS'?'IDS_ATTACHMENTS':this.props.Login.activeSampleTab:'IDS_ATTACHMENTS',tabDetail:this.sampleTabDetail(),onTabChange:this.onSampleTabChange}):this.state.showTest?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:this.props.Login.activeTestTab?this.props.Login.activeTestTab==='IDS_TESTCOMMENTS'?'IDS_TESTCOMMENTS':this.props.Login.activeTestTab:'IDS_PARAMETERRESULTS',tabDetail:this.testTabDetail(),onTabChange:this.ontestTabChange})// <Card>\n/* <Card.Header style={{ \"borderBottom\": \"0px\", \"padding-top\": \"1px\" }}>\r\n                                                                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                                                                            <h4 className=\"card-title\">Parameter Results</h4>\r\n                                                                        </span>\r\n                                                                    </Card.Header> */ // </Card>\n// : this.state.showSubSample ?\n//     <CustomTabs activeKey={this.props.Login.activeSampleTab ? this.props.Login.activeSampleTab === 'IDS_SAMPLEATTACHMENTS' ? 'IDS_ATTACHMENTS' : this.props.Login.activeSampleTab : 'IDS_ATTACHMENTS'}\n//         tabDetail={this.subsampleTabDetail()}\n//         onTabChange={this.onSubSampleTabChange} />\n//     : \"\"}\n:\"\")))):this.state.layout==2?/*#__PURE__*/React.createElement(ScrollBar,{ref:function ref(_ref){_this2._scrollBarRef=_ref;}},/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card_group\"},/*#__PURE__*/React.createElement(SplitterLayout,{customClassName:\"detailed-inner\",vertical:true,borderColor:\"#999\",primaryIndex:1,secondaryInitialSize:400,onSecondaryPaneSizeChange:this.verticalPaneSizeChange},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ContentPanel,{style:this.state.showTest===true?{display:\"block\",background:\"#FFFF\"}:{display:\"none\",background:\"#FFFF\"}},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(Row,{className:\"no-gutters\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary btn-padd-custom\",style:{float:\"right\"},onClick:function onClick(){return _this2.showTestAndSample();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(TransactionListMasterJson,{paneHeight:this.state.initialVerticalWidth,masterList:this.props.Login.masterData.searchedTest||testList,selectedMaster:this.props.Login.masterData.selectedTest,primaryKeyField:\"ntransactiontestcode\",getMasterDetail:this.props.getTestChildTabDetailRegistration,inputParam:_objectSpread(_objectSpread({},this.state.testChildGetParam),{},{resultDataState:this.state.resultDataState,testCommentDataState:this.state.testCommentDataState,testAttachmentDataState:this.state.testAttachmentDataState}),additionalParam:[],mainField:\"stestsynonym\",selectedListName:\"selectedTest\",objectName:\"test\",listName:\"IDS_TEST\",jsonField:'jsondata',pageSize:this.props.Login.settings&&this.props.Login.settings[13].split(\",\").map(function(setting){return parseInt(setting);}),showStatusLink:true,subFieldsLabel:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",needMultiSelect:true,subFields:this.state.testListColumns||[],moreField:this.state.testMoreField,needValidation:false,showStatusName:true,needFilter:false,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedTest\",searchRef:this.searchTestRef,filterParam:this.state.filterTestParam,selectionField:\"ntransactionstatus\",selectionFieldName:\"stransdisplaystatus\"// childTabsKey={[\"RegistrationTestComment\"]}\n,childTabsKey:[\"RegistrationParameter\",\"RegistrationTestComment\"],handlePageChange:this.handleTestPageChange,buttonCount:5,skip:this.state.testskip,take:this.state.testtake,showMoreResetList:true,showMoreResetListName:\"RegistrationGetSample\",selectionList:this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus===transactionStatus.ALL?this.props.Login.masterData.FilterStatus:[],selectionColorField:\"scolorhexcode\"// selectionList=\n// actionIcons={\n//     [{ title: \"EditTest\", controlname: \"faPencilAlt\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\n//     { title: \"Add Intrument\", controlname: \"faMicroscope\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedInstrumentId) === -1, onClick: this.addREInstrument, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedInstrumentId } },\n//     { title: \"Add Material\", controlname: \"faFlask\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedMaterailId) === -1 },\n//     { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }]\n// }\n,commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex justify-content-end icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"adddeputy\",className:\"btn btn-circle outline-grey ml-2\"//title={\"Add Test\"}\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADDTEST\"}),hidden:this.state.userRoleControlRights.indexOf(this.state.addTestId)===-1,onClick:function onClick(){return _this2.props.addMoreTest(_objectSpread(_objectSpread({},_this2.state.addTestParam),{},{skip:_this2.state.skip,take:_this2.state.skip+_this2.state.take}),_this2.state.addTestId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\"//title={\"Cancel/Reject Test\"}\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CANCELREJECTTEST\"}),hidden:this.state.userRoleControlRights.indexOf(this.state.cancelId)===-1,onClick:function onClick(){return _this2.cancelRecord(_this2.state.cancelId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(Reject,{className:\"custom_icons\",width:\"15\",height:\"15\"}))))})))))))),/*#__PURE__*/React.createElement(ContentPanel,{style:this.state.showSample===true?{display:\"block\"}:{display:\"none\"}},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(Card,{className:\"p-0\"},/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary btn-padd-custom\",style:{float:\"right\"},onClick:function onClick(){return _this2.showTestAndSample();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\" \",this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:this.state.initialVerticalWidth}},this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.length===1?/*#__PURE__*/React.createElement(SampleInfoView,{data:this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.length>0?this.props.Login.masterData.selectedSample[this.props.Login.masterData.selectedSample.length-1]:{},SingleItem:this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample?this.state.SingleItem:[],screenName:\"IDS_SAMPLEINFO\",userInfo:this.props.Login.userInfo}):/*#__PURE__*/React.createElement(SampleGridTab,{userInfo:this.props.Login.masterData.userInfo||{},GridData:this.props.Login.masterData.selectedSample||[],masterData:this.props.Login.masterData,inputParam:this.props.Login.inputParam,dataState:this.state.sampleGridDataState,dataStateChange:this.sampleInfoDataStateChange,extractedColumnList:this.gridfillingColumn(this.state.DynamicGridItem)||[],detailedFieldList:this.gridfillingColumn(this.state.DynamicGridMoreField)||[],primaryKeyField:\"npreregno\",expandField:\"expanded\",screenName:\"IDS_SAMPLEINFO\",jsonField:\"jsondata\"}))))))))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:\"calc(110vh - \"+(+this.state.initialVerticalWidth+100)+\"px)\"}},this.state.showSample?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:this.props.Login.activeSampleTab?this.props.Login.activeSampleTab==='IDS_SAMPLEATTACHMENTS'?'IDS_ATTACHMENTS':this.props.Login.activeSampleTab:'IDS_ATTACHMENTS',tabDetail:this.sampleTabDetail(),onTabChange:this.onSampleTabChange}):this.state.showTest?/*#__PURE__*/ // <CustomTabs activeKey={this.props.Login.activeTestTab ? this.props.Login.activeTestTab === 'IDS_TESTCOMMENTS' ? 'IDS_TESTCOMMENTS' : this.props.Login.activeTestTab : 'IDS_PARAMETERRESULTS'} tabDetail={this.testTabDetail()} onTabChange={this.ontestTabChange} />\nReact.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},\"Parameter Results\"))),/*#__PURE__*/React.createElement(CustomTabs,{activeKey:this.props.Login.activeTestTab?this.props.Login.activeTestTab==='IDS_TESTCOMMENTS'?'IDS_TESTCOMMENTS':this.props.Login.activeTestTab:'IDS_PARAMETERRESULTS',tabDetail:this.testTabDetail(),onTabChange:this.ontestTabChange})):\"\")))))))):this.state.layout==3?/*#__PURE__*/React.createElement(React.Fragment,null,this.state.showSample?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:this.props.Login.activeSampleTab?this.props.Login.activeSampleTab==='IDS_SAMPLEATTACHMENTS'?'IDS_ATTACHMENTS':this.props.Login.activeSampleTab:'IDS_ATTACHMENTS',tabDetail:this.sampleTabDetail(),onTabChange:this.onSampleTabChange}):this.state.showTest?/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},\"Parameter Results\"))),/*#__PURE__*/React.createElement(CustomTabs,{activeKey:this.props.Login.activeTestTab?this.props.Login.activeTestTab==='IDS_TESTCOMMENTS'?'IDS_TESTCOMMENTS':this.props.Login.activeTestTab:'IDS_PARAMETERRESULTS',tabDetail:this.testTabDetail(),onTabChange:this.ontestTabChange})):\"\"):\"\")))))),this.props.Login.openPortal?/*#__PURE__*/React.createElement(PortalModal,null,/*#__PURE__*/React.createElement(PreRegisterSlideOutModal,{postParamList:this.postParamList,PrevoiusLoginData:this.PrevoiusLoginData,closeModal:this.closeModal,operation:\"create\",screenName:\"IDS_REGISTRATION\",onSaveClick:this.onSaveClick,validateEsign:this.validateEsign,updateStore:this.props.updateStore,comboComponents:this.state.comboComponents,withoutCombocomponent:this.state.withoutCombocomponent,userRoleControlRights:this.state.userRoleControlRights,fromDate:this.fromDate,toDate:this.toDate,specBasedComponent:this.state.specBasedComponent,mandatoryFields:[{\"idsName\":\"IDS_PRODUCTCATEGORY\",\"dataField\":\"nproductcatcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_PRODUCTNAME\",\"dataField\":\"sproductname\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}]})):\"\",this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal//|| this.props.Login.loadEsign}\n,closeModal:this.props.Login.loadRegSubSample||this.props.Login.loadFile||this.props.Login.loadChildTest?this.closeChildModal:this.closeModal,size:this.props.Login.parentPopUpSize,loginoperation:this.props.Login.loadPrinter?true:false,buttonLabel:this.props.Login.loadPrinter?\"print\":undefined,operation:this.props.Login.loadComponent||this.props.Login.loadTest||this.props.Login.loadSource||this.props.Login.loadFile?this.props.Login.childoperation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.loadTest||this.props.Login.loadFile?this.props.Login.ChildscreenName:this.props.Login.screenName,esign:this.props.Login.loadEsign,innerPopup:this.props.Login.loadComponent,onSaveClick:this.props.Login.loadRegSubSample?this.onSaveSubSampleClick:this.props.Login.loadFile?this.onSaveFileClick:this.props.Login.loadPrinter?this.onSavePrinterClick:this.props.Login.loadChildTest?this.onSaveChildTestClick:this.onSaveClick,validateEsign:this.validateEsign,showSaveContinue:this.props.Login.showSaveContinue,selectedRecord:!this.props.Login.loadEsign?this.props.Login.loadComponent?this.state.selectComponent:this.props.Login.loadPrinter?this.state.selectedPrinterData:this.props.Login.loadTest?this.state.selectedTestData:this.props.Login.loadFile?this.state.selectedFile:this.props.Login.loadPoolSource?this.state.selectedSourceData:this.state.selectedRecord:this.state.selectedRecord,mandatoryFields:this.mandatoryList(this.props.Login.loadPreregister,this.props.Login.loadPrinter,this.props.Login.loadFile,this.props.Login.loadChildTest,this.props.Login.loadRegSubSample),addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.loadRegSubSample?/*#__PURE__*/React.createElement(AddSubSample,{editfield:this.props.Login.masterData.DynamicDesign&&JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value),Component:this.props.Login.lstComponent||[],selectComponent:this.state.selectedRecord,templateData:this.props.Login.masterData.SubSampleTemplate&&this.props.Login.masterData.SubSampleTemplate.jsondata,userInfo:this.props.Login.userInfo,timeZoneList:this.props.Login.timeZoneList,defaultTimeZone:this.props.Login.defaultTimeZone,handleDateChange:this.handleDateSubSampleChange,onInputOnChange:this.onInputOnSubSampleChange,onNumericInputChange:this.onNumericInputSubSampleChange,comboData:this.props.Login.regSubSamplecomboData,onComboChange:this.onComboSubSampleChange,onComponentChange:this.onComponentChange,TestCombined:this.props.Login.TestCombined||[],TestChange:this.onComboChange,selectedTestData:this.state.selectedRecord,childoperation:this.props.Login.operation,specBasedComponent:this.state.specBasedComponent}):this.props.Login.loadFile?/*#__PURE__*/React.createElement(AddFile,{selectedFile:this.state.selectedFile||{},onInputOnChange:this.onInputOnChange,onDrop:this.onDropComponentFile,deleteAttachment:this.deleteAttachment,actionType:this.state.actionType,maxSize:20,maxFiles:1}):this.props.Login.loadPrinter?/*#__PURE__*/React.createElement(AddPrinter,{printer:this.props.Login.printer,selectedPrinterData:this.state.selectedPrinterData,PrinterChange:this.PrinterChange}):this.props.Login.loadChildTest?/*#__PURE__*/React.createElement(AddTest,{TestCombined:this.props.Login.availableTest,selectedTestData:this.state.selectedRecord,TestChange:this.onComboChange}):\"\"}),this.state.showConfirmAlert?this.confirmAlert():\"\");}},{key:\"showSampleInfo\",value:function showSampleInfo(){this.setState({showSample:true,showTest:false});}},{key:\"showSample\",value:function showSample(){this.setState({showSample:true,showSubSample:false,showTest:false});}},{key:\"showTest\",value:function showTest(){this.setState({showSample:false,showSubSample:false,showTest:true});}},{key:\"showSubSample\",value:function showSubSample(){this.setState({showSample:false,showTest:false,showSubSample:!this.state.showSubSample});}},{key:\"showTestDetails\",value:function showTestDetails(){var updateInfo={typeName:DEFAULT_RETURN,data:{showSample:!this.state.showSample,showTest:!this.state.showTest}};this.props.updateStore(updateInfo);}},{key:\"checkPreregisterAndQuarentine\",value:function checkPreregisterAndQuarentine(sample){return sample.ntransactionstatus===transactionStatus.PREREGISTER||sample.ntransactionstatus===transactionStatus.QUARANTINE;}},{key:\"checkPreregisterRecordQuarantine\",value:function checkPreregisterRecordQuarantine(sample){return sample.ntransactionstatus===transactionStatus.PREREGISTER;}},{key:\"gridfillingColumn\",value:function gridfillingColumn(data){var _this3=this;//  const tempArray = [];\nvar temparray=data&&data.map(function(option){return{\"idsName\":option[designProperties.LABEL][_this3.props.Login.userInfo.slanguagetypecode],\"dataField\":option[designProperties.VALUE],\"width\":\"200px\",\"columnSize\":\"3\"};});return temparray;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.columnList!==previousProps.Login.columnList){this.setState({columnList:this.props.Login.columnList,childColumnList:this.props.Login.childColumnList,withoutCombocomponent:this.props.Login.withoutCombocomponent,comboComponents:this.props.Login.comboComponents});}if(this.props.Login.regparentSubSampleColumnList!==previousProps.Login.regparentSubSampleColumnList){this.setState({regparentSubSampleColumnList:this.props.Login.regparentSubSampleColumnList,regSubSamplecomboComponents:this.props.Login.regSubSamplecomboComponents,regSubSamplewithoutCombocomponent:this.props.Login.regSubSamplewithoutCombocomponent});}if(this.props.Login.showSaveContinue!==previousProps.Login.showSaveContinue){this.setState({showSaveContinue:this.props.Login.showSaveContinue});}if(this.props.Login!==previousProps.Login){this.PrevoiusLoginData=previousProps;}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}else if(this.props.Login.selectedPrinterData!==previousProps.Login.selectedPrinterData){this.setState({selectedPrinterData:this.props.Login.selectedPrinterData});}else if(this.props.Login.loadFile!==previousProps.Login.loadFile&&this.props.Login.loadFile===false){this.setState({selectedFile:undefined});}else if(this.props.Login.selectedFilter!==previousProps.Login.selectedFilter){this.setState({selectedFilter:this.props.Login.selectedFilter});}if(this.props.Login.popUptestDataState&&this.props.Login.popUptestDataState!==previousProps.Login.popUptestDataState){this.setState({popUptestDataState:this.props.Login.popUptestDataState});}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);var cancelId=controlMap.has(\"CancelTest\")?controlMap.get(\"CancelTest\").ncontrolcode:-1;var preRegisterId=controlMap.has(\"AddPreregister\")?controlMap.get(\"AddPreregister\").ncontrolcode:-1;var registerId=controlMap.has(\"RegisterAccept\")?controlMap.get(\"RegisterAccept\").ncontrolcode:-1;var editSampleId=controlMap.has(\"EditSample\")?controlMap.get(\"EditSample\").ncontrolcode:-1;var quarantineId=controlMap.has(\"RegisterQuarantine\")?controlMap.get(\"RegisterQuarantine\").ncontrolcode:-1;var addTestId=controlMap.has(\"AddNewTest\")?controlMap.get(\"AddNewTest\").ncontrolcode:-1;var printBarcodeId=controlMap.has(\"PrintBarcode\")?controlMap.get(\"PrintBarcode\").ncontrolcode:-1;var cancelSampleId=controlMap.has(\"CancelReject\")?controlMap.get(\"CancelReject\").ncontrolcode:-1;var addSubSampleId=controlMap.has(\"AddSubSample\")?controlMap.get(\"AddSubSample\").ncontrolcode:-1;var editSubSampleId=controlMap.has(\"EditSubSample\")?controlMap.get(\"EditSubSample\").ncontrolcode:-1;var cancelSubSampleId=controlMap.has(\"CancelSubSample\")?controlMap.get(\"CancelSubSample\").ncontrolcode:-1;this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,cancelId:cancelId,preRegisterId:preRegisterId,registerId:registerId,editSampleId:editSampleId,quarantineId:quarantineId,addTestId:addTestId,printBarcodeId:printBarcodeId,cancelSampleId:cancelSampleId,addSubSampleId:addSubSampleId,editSubSampleId:editSubSampleId,cancelSubSampleId:cancelSubSampleId});}if(this.props.Login.masterData!==previousProps.Login.masterData){var _this$state5=this.state,skip=_this$state5.skip,take=_this$state5.take,testskip=_this$state5.testskip,testtake=_this$state5.testtake,subsampleskip=_this$state5.subsampleskip,subsampletake=_this$state5.subsampletake,testCommentDataState=_this$state5.testCommentDataState,resultDataState=_this$state5.resultDataState,sampleGridDataState=_this$state5.sampleGridDataState,popUptestDataState=_this$state5.popUptestDataState,DynamicSampleColumns=_this$state5.DynamicSampleColumns,DynamicSubSampleColumns=_this$state5.DynamicSubSampleColumns,DynamicTestColumns=_this$state5.DynamicTestColumns,DynamicGridItem=_this$state5.DynamicGridItem,DynamicGridMoreField=_this$state5.DynamicGridMoreField,SingleItem=_this$state5.SingleItem,testMoreField=_this$state5.testMoreField,testListColumns=_this$state5.testListColumns,SubSampleDynamicGridItem=_this$state5.SubSampleDynamicGridItem,SubSampleDynamicGridMoreField=_this$state5.SubSampleDynamicGridMoreField,SubSampleSingleItem=_this$state5.SubSampleSingleItem,sampleSearchField=_this$state5.sampleSearchField,subsampleSearchField=_this$state5.subsampleSearchField,testSearchField=_this$state5.testSearchField,testAttachmentDataState=_this$state5.testAttachmentDataState,sampleCommentDataState=_this$state5.sampleCommentDataState,specBasedComponent=_this$state5.specBasedComponent;if(this.props.Login.masterData.DynamicDesign&&this.props.Login.masterData.DynamicDesign!==previousProps.Login.masterData.DynamicDesign){var dynamicColumn=JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);DynamicSampleColumns=dynamicColumn.samplelistitem?dynamicColumn.samplelistitem:[];DynamicSubSampleColumns=dynamicColumn.subsamplelistitem?dynamicColumn.subsamplelistitem:[];DynamicTestColumns=dynamicColumn.testlistitem?dynamicColumn.testlistitem:[];DynamicGridItem=dynamicColumn.samplegriditem?dynamicColumn.samplegriditem:[];DynamicGridMoreField=dynamicColumn.samplegridmoreitem?dynamicColumn.samplegridmoreitem:[];SingleItem=dynamicColumn.sampledisplayfields?dynamicColumn.sampledisplayfields:[];SubSampleDynamicGridItem=dynamicColumn.subsamplegriditem?dynamicColumn.subsamplegriditem:[];SubSampleDynamicGridMoreField=dynamicColumn.subsamplegridmoreitem?dynamicColumn.subsamplegridmoreitem:[];SubSampleSingleItem=dynamicColumn.subsampledisplayfields?dynamicColumn.subsampledisplayfields:[];//console.log(\"Subsample\",SubSampleSingleItem)\ntestMoreField=dynamicColumn.testlistmoreitems?dynamicColumn.testlistmoreitems:[];testListColumns=dynamicColumn.testlistitem?dynamicColumn.testlistitem:[];sampleSearchField=dynamicColumn.samplesearchfields?dynamicColumn.samplesearchfields:[];subsampleSearchField=dynamicColumn.subsamplesearchfields?dynamicColumn.subsamplesearchfields:[];testSearchField=dynamicColumn.testsearchfields?dynamicColumn.testsearchfields:[];// specBasedComponent = true;\n}var showSample=this.props.Login.showSample===this.state.showTest||this.state.showSample;var showTest=showSample?false:true;var stateSampleType=this.state.stateSampleType;var stateRegistrationType=this.state.stateRegistrationType;var stateRegistrationSubType=this.state.stateRegistrationSubType;var stateFilterStatus=this.state.stateFilterStatus;if(this.props.Login.masterData.SampleType!==previousProps.Login.masterData.SampleType){var sampleTypeMap=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",\"nsorter\",\"ascending\",false);stateSampleType=sampleTypeMap.get(\"OptionList\");}if(this.props.Login.masterData.RegistrationType!==previousProps.Login.masterData.RegistrationType){var registrationTypeMap=constructOptionList(this.props.Login.masterData.RegistrationType||[],\"nregtypecode\",\"sregtypename\",\"nsorter\",\"ascending\",false);stateRegistrationType=registrationTypeMap.get(\"OptionList\");}if(this.props.Login.masterData.RegistrationSubType!==previousProps.Login.masterData.RegistrationSubType){var registrationSubTypeMap=constructOptionList(this.props.Login.masterData.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",\"nsorter\",\"ascending\",false);stateRegistrationSubType=registrationSubTypeMap.get(\"OptionList\");}if(this.props.Login.masterData.FilterStatus!==previousProps.Login.masterData.FilterStatus){var filterStatusMap=constructOptionList(this.props.Login.masterData.FilterStatus||[],\"ntransactionstatus\",\"stransdisplaystatus\",\"nsorter\",\"ascending\",false);stateFilterStatus=filterStatusMap.get(\"OptionList\");}// const stateSampleType = sampleTypeMap.get(\"OptionList\");\nskip=this.props.Login.skip===undefined?skip:this.props.Login.skip;take=this.props.Login.take||take;testskip=this.props.Login.testskip===undefined?testskip:this.props.Login.testskip;testtake=this.props.Login.testtake||testtake;subsampleskip=this.props.Login.subsampleskip===undefined?subsampleskip:this.props.Login.subsampleskip;subsampletake=this.props.Login.subsampletake||subsampletake;if(this.props.Login.resultDataState&&this.props.Login.resultDataState!==previousProps.Login.resultDataState){resultDataState=this.props.Login.resultDataState;}if(this.props.Login.testCommentDataState&&this.props.Login.testCommentDataState!==previousProps.Login.testCommentDataState){testCommentDataState=this.props.Login.testCommentDataState;}if(this.props.Login.testAttachmentDataState&&this.props.Login.testAttachmentDataState!==previousProps.Login.testAttachmentDataState){testAttachmentDataState=this.props.Login.testAttachmentDataState;}if(this.props.Login.sampleGridDataState&&this.props.Login.sampleGridDataState!==previousProps.Login.sampleGridDataState){sampleGridDataState=this.props.Login.sampleGridDataState;}if(this.props.Login.popUptestDataState&&this.props.Login.popUptestDataState!==previousProps.Login.popUptestDataState){popUptestDataState=this.props.Login.popUptestDataState;}var testGetParam={masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,ntransactionstatus:String(this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),nsampletypecode:this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",npreregno:this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),sfromdate:this.props.Login.masterData.RealFromDate,stodate:this.props.Login.masterData.RealToDate,//searchTestRef: this.searchTestRef,\n// testskip: testskip,\n//subsampleskip: subsampleskip,\n// resultDataState: resultDataState,\nndesigntemplatemappingcode:this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode};var testChildGetParam={masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,ntransactionstatus:String(this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),nsampletypecode:this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",npreregno:this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),ntransactionsamplecode:this.props.Login.masterData.selectedSubSample&&this.props.Login.masterData.selectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\"),sfromdate:this.props.Login.masterData.RealFromDate,stodate:this.props.Login.masterData.RealToDate,// resultDataState: resultDataState,\n// testCommentDataState: testCommentDataState,\nndesigntemplatemappingcode:this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode};var subSampleGetParam={masterData:this.props.Login.masterData,ntransactionstatus:String(this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",// testskip: testskip,\n// subsampleskip: subsampleskip,\n// searchTestRef: this.searchTestRef,\n//resultDataState: resultDataState,\n// testCommentDataState: testCommentDataState,\n//sampleGridDataState: sampleGridDataState,\nndesigntemplatemappingcode:this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,nneedsubsample:this.props.Login.masterData&&this.props.Login.masterData.nneedsubsample};var filterSampleParam={inputListName:\"RegistrationGetSample\",selectedObject:\"selectedSample\",primaryKeyField:\"npreregno\",fetchUrl:\"registration/getRegistrationSubSample\",//childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\nfecthInputObject:{//nflag: 2,\n// ntype: 2,\nmasterData:this.props.Login.masterData,ntransactionstatus:String(this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",ndesigntemplatemappingcode:this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,nneedsubsample:this.props.Login.masterData&&this.props.Login.masterData.nneedsubsample,checkBoxOperation:3},masterData:this.props.Login.masterData,searchFieldList:sampleSearchField,changeList:[\"RegistrationGetSubSample\",\"RegistrationGetTest\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationAttachment\",\"selectedSample\",\"selectedSubSample\",\"selectedTest\",\"RegistrationParameter\"]};var filterSubSampleParam={inputListName:\"RegistrationGetSubSample\",selectedObject:\"selectedSubSample\",primaryKeyField:\"ntransactionsamplecode\",fetchUrl:\"registration/getRegistrationTest\",//childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\nfecthInputObject:{//nflag: 2,\n// ntype: 2,\nmasterData:this.props.Login.masterData,//  ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\nuserinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",ndesigntemplatemappingcode:this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,nneedsubsample:this.props.Login.masterData&&this.props.Login.masterData.nneedsubsample,checkBoxOperation:3,npreregno:this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.map(function(x){return x.npreregno;}).join(\",\")},masterData:this.props.Login.masterData,searchFieldList:subsampleSearchField,changeList:[\"RegistrationGetTest\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationAttachment\",\"selectedSubSample\",\"selectedTest\",\"RegistrationParameter\"]};var filterTestParam={inputListName:\"RegistrationGetTest\",selectedObject:\"selectedTest\",primaryKeyField:\"ntransactiontestcode\",fetchUrl:this.getActiveTestURL(),fecthInputObject:{ntransactiontestcode:this.props.Login.masterData&&this.props.Login.masterData.selectedTest&&this.props.Login.masterData.selectedTest?this.props.Login.masterData.selectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\",userinfo:this.props.Login.userInfo,ndesigntemplatemappingcode:this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,nneedsubsample:this.props.Login.masterData&&this.props.Login.masterData.nneedsubsample,checkBoxOperation:3,activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\"},masterData:this.props.Login.masterData,searchFieldList:testSearchField,changeList:[\"RegistrationTestComment\",\"RegistrationParameter\"]};// let postParamList = [\n//     {\n//         filteredListName: \"searchedSample\",\n//         clearFilter: \"no\",\n//         searchRef: this.searchSampleRef,\n//         primaryKeyField: \"npreregno\",\n//         fetchUrl: \"registration/getRegistrationSubSample\",\n//         fecthInputObject: subSampleGetParam,\n//        // childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\n//         selectedObject: \"selectedSample\",\n//         inputListName: \"AP_SAMPLE\",\n//         updatedListname: \"selectedSample\",\n//         unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\n//             \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\n//             \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\n//     }\n//     , {\n//         filteredListName: \"searchedTest\",\n//         updatedListname: \"selectedTest\",\n//         clearFilter: \"no\",\n//         searchRef: this.searchTestRef,\n//         primaryKeyField: \"ntransactiontestcode\",\n//         fetchUrl: \"approval/getApprovalTest\",\n//         fecthInputObject: testGetParam,\n//         selectedObject: \"selectedTest\",\n//         inputListName: \"RegistrationGetTest\",\n//         unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\n//             \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\n//             \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\n//     }\n// ];\nvar editRegParam={nfilterstatus:String(this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,sfromdate:this.props.Login.masterData.RealFromDate,stodate:this.props.Login.masterData.RealToDate,// ncontrolCode: this.state.editSampleId,\nndesigntemplatemappingcode:this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,nneedsubsample:this.props.Login.masterData&&this.props.Login.masterData.nneedsubsample};var editSubSampleRegParam={nfilterstatus:String(this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,sfromdate:this.props.Login.masterData.RealFromDate,stodate:this.props.Login.masterData.RealToDate,//ncontrolCode: this.state.editSampleId,\nndesigntemplatemappingcode:this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,nneedsubsample:this.props.Login.masterData&&this.props.Login.masterData.nneedsubsample};var addTestParam={selectedsample:this.props.Login.masterData.selectedSample,selectedsubsample:this.props.Login.masterData.selectedSubSample,// skip: skip, take: (skip + take),\nuserinfo:this.props.Login.userInfo,sampleList:this.props.Login.masterData.RegistrationGetSample,snspecsampletypecode:this.props.Login.masterData.selectedSubSample&&_toConsumableArray(new Set(this.props.Login.masterData.selectedSubSample.map(function(x){return x.nspecsampletypecode;}))).join(\",\")};var breadCrumbobj=convertDateValuetoString(this.props.Login.masterData.RealFromDate,this.props.Login.masterData.RealToDate,this.props.Login.userInfo);this.breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":breadCrumbobj.breadCrumbFrom},{\"label\":\"IDS_TO\",\"value\":breadCrumbobj.breadCrumbto},{\"label\":\"IDS_SAMPLETYPE\",\"value\":this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.ssampletypename},{\"label\":\"IDS_REGTYPE\",\"value\":this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.sregtypename},{\"label\":\"IDS_REGSUBTYPE\",\"value\":this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename},{\"label\":\"IDS_FILTERSTATUS\",\"value\":this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.stransdisplaystatus}];this.setState({DynamicSampleColumns:DynamicSampleColumns,DynamicSubSampleColumns:DynamicSubSampleColumns,DynamicTestColumns:DynamicTestColumns,SingleItem:SingleItem,testMoreField:testMoreField,DynamicGridItem:DynamicGridItem,DynamicGridMoreField:DynamicGridMoreField,testListColumns:testListColumns,stateSampleType:stateSampleType,stateRegistrationType:stateRegistrationType,stateRegistrationSubType:stateRegistrationSubType,stateFilterStatus:stateFilterStatus,popUptestDataState:popUptestDataState,showSample:showSample,showTest:showTest,skip:skip,take:take,testskip:testskip,subsampleskip:subsampleskip,subsampletake:subsampletake,testtake:testtake,testCommentDataState:testCommentDataState,testAttachmentDataState:testAttachmentDataState,resultDataState:resultDataState,sampleGridDataState:sampleGridDataState,SubSampleDynamicGridItem:SubSampleDynamicGridItem,SubSampleDynamicGridMoreField:SubSampleDynamicGridMoreField,SubSampleSingleItem:SubSampleSingleItem,testGetParam:testGetParam,testChildGetParam:testChildGetParam,subSampleGetParam:subSampleGetParam,filterSampleParam:filterSampleParam,filterTestParam:filterTestParam,editRegParam:editRegParam,editSubSampleRegParam:editSubSampleRegParam,addTestParam:addTestParam,sampleSearchField:sampleSearchField,subsampleSearchField:subsampleSearchField,testSearchField:testSearchField,filterSubSampleParam:filterSubSampleParam,specBasedComponent:specBasedComponent});}}},{key:\"onUpdateSubSampleRegistration\",value:function onUpdateSubSampleRegistration(saveType,formRef,operation,flag){var inputData={userinfo:this.props.Login.userInfo};var initialParam={nfilterstatus:this.props.Login.masterData.FilterStatusValue.ntransactionstatus,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,fromdate:\"\",todate:\"\",nflag:2,ntype:5,npreregno:String(this.state.selectedRecord.npreregno),ntransactionsamplecode:String(this.state.selectedRecord.ntransactionsamplecode),ndesigntemplatemappingcode:this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,nneedsubsample:this.props.Login.masterData&&this.props.Login.masterData.nneedsubsample,checkBoxOperation:3,activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\"};inputData[\"initialparam\"]=initialParam;// inputData[\"samplebeforeedit\"] = JSON.parse(JSON.stringify(this.props.Login.regRecordToEdit));\n//inputData[\"registration\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\nvar param=getRegistrationSubSample(this.props.Login.masterData,this.state.selectedRecord,this.state.selectedSpec,this.props.Login.masterData.SubSampleTemplate.jsondata,this.props.Login.userInfo,this.props.Login.defaulttimezone,operation);inputData[\"registrationsample\"]=param.sampleRegistration;inputData[\"SubSampleDateList\"]=param.dateList;inputData[\"flag\"]=flag===undefined?1:flag;inputData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;inputData[\"nneedsubsample\"]=this.props.Login.masterData&&this.props.Login.masterData.nneedsubsample;inputData[\"checkBoxOperation\"]=3;inputData[\"activeTestTab\"]=this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\";inputData[\"activeSampleTab\"]=this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\";var inputParam={classUrl:this.props.Login.inputParam.classUrl,methodUrl:\"SubSampleRegistration\",displayName:this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,action:'editSubSample',showConfirmAlert:false,resultDataState:this.state.resultDataState,testCommentDataState:this.state.testCommentDataState,testAttachmentDataState:this.state.testAttachmentDataState// dataState:undefined, selectedId\n};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:this.props.Login.masterData},saveType:saveType,parentPopUpSize:\"lg\"}};this.props.updateStore(updateInfo);}else{//this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\nthis.props.onUpdateSubSampleRegistration(inputParam,this.props.Login.masterData,\"openModal\");}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.showConfirmAlert!==state.showConfirmAlert){return{showConfirmAlert:props.Login.showConfirmAlert};}return null;}}]);return Registration;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,getSampleTypeChange:getSampleTypeChange,getRegTypeChange:getRegTypeChange,getRegSubTypeChange:getRegSubTypeChange,getAttachmentCombo:getAttachmentCombo,viewAttachment:viewAttachment,getCommentsCombo:getCommentsCombo,filterTransactionList:filterTransactionList,validateEsignCredential:validateEsignCredential,getSampleChildTabDetail:getSampleChildTabDetail,getTestChildTabDetailRegistration:getTestChildTabDetailRegistration,ReloadData:ReloadData,showUnderDevelopment:showUnderDevelopment,getPreviewTemplate:getPreviewTemplate,getChildValues:getChildValues,getRegistrationSample:getRegistrationSample,getRegistrationsubSampleDetail:getRegistrationsubSampleDetail,getRegistrationTestDetail:getRegistrationTestDetail,acceptRegistration:acceptRegistration,addMoreTest:addMoreTest,createRegistrationTest:createRegistrationTest,getEditRegistrationComboService:getEditRegistrationComboService,cancelTestAction:cancelTestAction,cancelSampleAction:cancelSampleAction,addsubSampleRegistration:addsubSampleRegistration,saveSubSample:saveSubSample,getEditSubSampleComboService:getEditSubSampleComboService,onUpdateSubSampleRegistration:onUpdateSubSampleRegistration,cancelSubSampleAction:cancelSubSampleAction,preregRecordToQuarantine:preregRecordToQuarantine,componentTest:componentTest})(injectIntl(Registration));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/Registration.jsx"],"names":["React","Component","connect","showUnderDevelopment","callService","crudMaster","updateStore","getSampleTypeChange","getRegTypeChange","getRegSubTypeChange","getAttachmentCombo","viewAttachment","getCommentsCombo","filterTransactionList","validateEsignCredential","ReloadData","getSampleChildTabDetail","getTestChildTabDetailRegistration","getTestByComponentChange","getPreviewTemplate","getChildValues","getRegistrationSample","getRegistrationsubSampleDetail","getRegistrationTestDetail","acceptRegistration","addMoreTest","createRegistrationTest","getEditRegistrationComboService","cancelTestAction","cancelSampleAction","addsubSampleRegistration","saveSubSample","getEditSubSampleComboService","onUpdateSubSampleRegistration","cancelSubSampleAction","preregRecordToQuarantine","componentTest","Button","Card","Col","Nav","Row","toast","SlideOutModal","formatInputDate","getControlMap","listDataFromDynamicArray","showEsign","sortData","constructOptionList","onDropAttachFileList","deleteAttachmentDropZone","checkCancelAndReject","convertDateTimetoString","comboChild","RegistrationFilter","Esign","injectIntl","ProductList","DEFAULT_RETURN","SplitterLayout","AddTest","designProperties","RegistrationSubType","RegistrationType","transactionStatus","BreadcrumbComponent","ScrollBar","ListWrapper","TransactionListMasterJson","FontAwesomeIcon","faEye","faPencilAlt","faPlus","faSync","ContentPanel","SampleInfoView","CustomTabs","ConfirmMessage","AddPrinter","SampleGridTab","AddFile","Attachments","Comments","onSaveTestComments","onSaveSampleAttachment","onSaveTestAttachment","getSameRecordFromTwoArrays","convertDateValuetoString","rearrangeDateFormat","RegistrationResultTab","PortalModal","PreRegisterSlideOutModal","PerfectScrollbar","checkTestPresent","getRegistrationSubSample","AddSubSample","Registration","props","onReload","obj","Login","masterData","RealFromDate","RealToDate","userInfo","fromDate","toDate","RealSampleTypeValue","RealRegTypeValue","RealRegSubTypeValue","RealFilterStatusValue","activeSampleTab","activeTestTab","SampleTypeValue","RegTypeValue","RegSubTypeValue","FilterStatusValue","FromDate","ToDate","inputData","npreregno","nsampletypecode","nregtypecode","nregsubtypecode","nfilterstatus","ntransactionstatus","userinfo","flag","ndesigntemplatemappingcode","registrationTemplate","nneedsubsample","checkBoxOperation","inputParam","searchSubSampleRef","searchSampleRef","searchTestRef","selectedFilter","state","warn","intl","formatMessage","id","onFilterSubmit","fromdate","todate","PLASMA_POOL","paneSizeChange","d","setState","splitChangeWidthPercentage","verticalPaneSizeChange","val","initialVerticalWidth","handleDateSubSampleChange","dateValue","dateName","selectedRecord","onComponentChange","comboData","fieldName","label","item","nspecsampletypecode","specBasedComponent","Conponent","onInputOnSubSampleChange","event","target","type","name","checked","value","onComboSubSampleChange","control","customName","parentList","childComboList","childColumnList","comboName","inputParem","child","source","primarykeyField","valuemember","nameofdefaultcomp","length","regSubSamplecomboComponents","map","columnList","regSubSamplewithoutCombocomponent","regSubSamplecomboData","onNumericInputSubSampleChange","onSaveSubSampleClick","saveType","formRef","operation","objSubSample","defaulttimezone","sampleList","searchedSample","undefined","RegistrationGetSample","slice","subsampleskip","subsampletake","selectedSample","findSampleAlloSpec","Set","nallottedspeccode","findSampleSpec","dateList","SubSampleTemplate","jsondata","row","children","column","component","hasOwnProperty","componentrowlabel","componentrowvalue","componentrow","inputtype","mandatory","Date","loadcurrentdate","timezone","push","substring","selectedTestData","selectedTestArray","join","postParamList","mandatoryList","prereg","printer","file","childtest","regSubSample","deleteAttachment","selectedFile","actionType","onSaveChildTestClick","selectedSubsample","selectedSubSample","skip","take","ntransactionsamplecode","x","TestGroupTest","ntestgrouptestcode","RegistrationSample","ntype","sample","classUrl","methodUrl","responseKeyList","controlMap","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","getRegistrationComboService","ScreenName","primaryKeyField","editId","withoutCombocomponent","Layout","comboComponents","mapOfFilterRegData","parseInt","sregsubtypename","info","retunObj","childList","childData","index","findIndex","y","handlePageChange","e","setTimeout","_scrollBarRef","updateScroll","handleTestPageChange","testskip","testtake","handleSubSamplePageChange","openFilter","showFilter","onFilterChange","labelname","onSampleTabChange","tabProps","screenName","onSubSampleTabChange","getSubSampleChildTabDetail","ontestTabChange","selectedTest","ntransactiontestcode","String","resultDataState","testCommentDataState","testAttachmentDataState","onDropComponentFile","attachedFiles","maxSize","handleFilterDateChange","onUpdateRegistrationConfirm","showAlert","onUpdateRegistration","regEditParam","confirmAlert","showConfirmAlert","regDateEditConfirmMessage","confirmMessage","confirm","booleanFlag","insertRegistration","closeFilter","booleanmanuf","loadFile","ChildscreenName","childoperation","parentPopUpSize","onNumericInputChange","selectComponent","onSampleTypeChange","Map","ConfirmComponent","getComponentfromJava","onRegTypeChange","registerId","acceptList","every","checkPreregisterAndQuarentine","RegistrationGetTest","action","acceptRegistrationConfirm","userRoleControlRights","openModal","selectQuarantine","quarantineId","splice","quarentineList","checkPreregisterRecordQuarantine","onRegSubTypeChange","onInputOnChange","onComboChange","PrinterChange","selectedPrinterData","closeChildModal","loadRegSubSample","showSaveContinue","loadChildTest","PopUpLabel","closeModal","loadPreregister","openChildModal","pare","loadPrinter","openPortal","insertSourcePreregno","onSaveClick","onSavePrinterClick","insertlist","displayName","insertPrinterPreregno","sprintername","npreregno1","ncontrolcode","onSaveFileClick","acceptedFiles","sfilename","formData","FormData","forEach","append","JSON","stringify","ntemplatemanipulationcode","ImportFile","sampleInfoDataStateChange","sampleGridDataState","dataState","dataStateChange","sourceDataState","testdataStateChange","popUptestDataState","testStateChange","testDataState","sampleTabDetail","tabMap","sampleskip","sampletake","selectedSampleList","set","onAttachmentSaveClick","RegistrationAttachment","attachmentskip","attachmenttake","settings","esignRights","masterList","onCommentsSaveClick","RegistrationSampleComment","testDataStateChange","has","get","subsampleTabDetail","testTabDetail","testTabMap","testList","selectedTestList","test","RegistrationTestAttachment","RegistrationTestComment","searchedTest","saveParam","isTestComment","selectedMaster","cancelSubSampleRecord","controlcode","searchedSubSample","RegistrationGetSubSample","transValidation","transactionValidation","stransdisplaystatus","cancelRecord","addSubSample","addSubSampleList","findTransactionStatus","PREREGISTER","findSampleSpectemplate","regchildColumnList","handleEditDateChange","onNumericInputEditChange","cancelSampleRecords","cancelRejectSamplesList","transactionstatus","ntransstatus","translist","sam","selectdata","check","sam1","includes","validateEsign","sreason","password","validateEsignforRegistration","editRegistration","editSubSampleRegistration","regSubSamplechildColumnList","createRef","PrevoiusLoginData","breadCrumbData","layout","masterStatus","error","showAccordian","filterCollection","breadCrumb","showTest","showSample","showSubSample","group","field","url","activeTestKey","subSampleList","filteredListName","clearFilter","searchRef","fetchUrl","fecthInputObject","subSampleGetParam","childRefs","ref","childFilteredListName","selectedObject","inputListName","updatedListname","unchangeList","testGetParam","ALL","FilterStatus","DynamicSampleColumns","filterSampleParam","title","controlname","objectName","hidden","indexOf","editSampleId","onClick","primaryKeyName","editRegParam","printBarcodeId","getPrinterComboService","preRegisterId","cancelSampleId","stateSampleType","stateRegistrationType","stateRegistrationSubType","stateFilterStatus","DynamicSubSampleColumns","editSubSampleId","editSubSampleRegParam","addSubSampleId","cancelSubSampleId","testChildGetParam","split","setting","testListColumns","testMoreField","filterTestParam","addTestId","addTestParam","cancelId","display","background","borderBottom","marginTop","filterSubSampleParam","float","height","SingleItem","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","showTestAndSample","loadComponent","loadTest","loadSource","loadPoolSource","selectedSourceData","DynamicDesign","parse","lstComponent","timeZoneList","defaultTimeZone","TestCombined","availableTest","QUARANTINE","temparray","option","LABEL","slanguagetypecode","VALUE","previousProps","regparentSubSampleColumnList","Object","values","DynamicTestColumns","SubSampleDynamicGridItem","SubSampleDynamicGridMoreField","SubSampleSingleItem","sampleSearchField","subsampleSearchField","testSearchField","sampleCommentDataState","dynamicColumn","samplelistitem","subsamplelistitem","testlistitem","samplegriditem","samplegridmoreitem","sampledisplayfields","subsamplegriditem","subsamplegridmoreitem","subsampledisplayfields","testlistmoreitems","samplesearchfields","subsamplesearchfields","testsearchfields","SampleType","sampleTypeMap","registrationTypeMap","registrationSubTypeMap","filterStatusMap","sfromdate","stodate","searchFieldList","changeList","getActiveTestURL","selectedsample","selectedsubsample","snspecsampletypecode","breadCrumbobj","breadCrumbFrom","breadCrumbto","ssampletypename","sregtypename","initialParam","nflag","param","selectedSpec","sampleRegistration","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    showUnderDevelopment,\r\n    callService, crudMaster, updateStore, getSampleTypeChange, getRegTypeChange,\r\n    getRegSubTypeChange, getAttachmentCombo, viewAttachment, getCommentsCombo,\r\n    filterTransactionList, validateEsignCredential, ReloadData, getSampleChildTabDetail,\r\n    getTestChildTabDetailRegistration, getTestByComponentChange, getPreviewTemplate, getChildValues,\r\n    getRegistrationSample, getRegistrationsubSampleDetail, getRegistrationTestDetail,\r\n    acceptRegistration, addMoreTest, createRegistrationTest, getEditRegistrationComboService,\r\n    cancelTestAction, cancelSampleAction, addsubSampleRegistration, saveSubSample,\r\n    getEditSubSampleComboService, onUpdateSubSampleRegistration, cancelSubSampleAction,\r\n    preregRecordToQuarantine,componentTest\r\n} from '../../actions'\r\nimport { Button, Card, Col, Nav, Row } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { formatInputDate, getControlMap, listDataFromDynamicArray, showEsign, sortData, constructOptionList, onDropAttachFileList, deleteAttachmentDropZone, checkCancelAndReject, convertDateTimetoString, comboChild } from '../../components/CommonScript';\r\nimport RegistrationFilter from './RegistrationFilter';\r\nimport Esign from '../audittrail/Esign';\r\nimport { injectIntl } from 'react-intl';\r\nimport { ProductList } from '../product/product.styled';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport AddTest from './AddTest';\r\nimport { designProperties, RegistrationSubType, RegistrationType, transactionStatus } from '../../components/Enumeration';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport TransactionListMasterJson from '../../components/TransactionListMasterJson';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faPencilAlt, faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport AddPrinter from './AddPrinter';\r\nimport SampleGridTab from './SampleGridTab';\r\nimport AddFile from './AddFile';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions';\r\nimport { onSaveSampleAttachment, onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport { ReactComponent as Quarantine } from '../../assets/image/Quarantine.svg'\r\nimport { ReactComponent as Register } from '../../assets/image/register.svg'\r\nimport { ReactComponent as Reject } from '../../assets/image/reject.svg'\r\nimport { getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript'\r\nimport RegistrationResultTab from './RegistrationResultTab';\r\nimport PortalModal from '../../PortalModal';\r\nimport PreRegisterSlideOutModal from './PreRegisterSlideOutModal';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { checkTestPresent, getRegistrationSubSample } from './RegistrationValidation';\r\nimport AddSubSample from './AddSubSample';\r\n\r\nclass Registration extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.PrevoiusLoginData = undefined;\r\n        this.breadCrumbData = [];\r\n        //  this.sampleeditable=this.props.Login.masterData.DynamicDesign&& JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n        this.state = {\r\n            layout: 1,\r\n            openModal: false,\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            screenName: \"Product\",\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showAccordian: true,\r\n            showSaveContinue: false,\r\n            filterCollection: [],\r\n            selectedFilter: {},\r\n            breadCrumb: [],\r\n            showTest: true,\r\n            showSample: false,\r\n            showSubSample: false,\r\n            showSubSample: false,\r\n            SingleItem: [],\r\n            sampleSearchFied: [],\r\n            subsampleSearchFied: [],\r\n            testSearchFied: [],\r\n            showConfirmAlert: false,\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            DynamicSampleColumns: [],\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'npreregno' }] },\r\n            testCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'groupingField' }] },\r\n            testAttachmentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'groupingField' }] },\r\n            sampleCommentsDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'groupingField' }] },\r\n            resultDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            historyDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }, { field: 'stestsynonym' }] },\r\n            selectedPrinterData: {},\r\n            grandparentheight: '150vh',\r\n            transactionValidation: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            testskip: 0,\r\n            splitChangeWidthPercentage: 28.6,\r\n            testtake: this.props.Login.settings\r\n                && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            subsampleskip: 0,\r\n            subsampletake: this.props.Login.settings\r\n                && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            comboComponents: [],\r\n            withoutCombocomponent: [],\r\n            childColumnList: [],\r\n            columnList: [],\r\n            regSubSamplecomboComponents: [],\r\n            regSubSamplewithoutCombocomponent: [],\r\n            regparentSubSampleColumnList: [],\r\n            DynamicSampleColumns: [],\r\n            DynamicSubSampleColumns: [],\r\n            DynamicTestColumns: [],\r\n            DynamicGridItem: [],\r\n            DynamicGridMoreField: [],\r\n            SingleItem: [],\r\n            testMoreField: [],\r\n            testListColumns: [],\r\n            SubSampleDynamicGridItem: [],\r\n            SubSampleDynamicGridMoreField: [],\r\n            SubSampleSingleItem: [],\r\n            cancelId: -1,\r\n            preRegisterId: -1,\r\n            registerId: -1,\r\n            editSampleId: -1,\r\n            quarantineId: -1,\r\n            addTestId: -1,\r\n            printBarcodeId: -1,\r\n            cancelSampleId: -1,\r\n            addSubSampleId: -1,\r\n            editSubSampleId: -1,\r\n            cancelSubSampleId: -1,\r\n            stateSampleType: [],\r\n            stateRegistrationType: [],\r\n            stateRegistrationSubType: [],\r\n            stateFilterStatus: [],\r\n            testGetParam: {},\r\n            testChildGetParam: {},\r\n            subSampleGetParam: {},\r\n            filterSampleParam: {},\r\n            filterTestParam: {},\r\n            editRegParam: {},\r\n            editSubSampleRegParam: {},\r\n            addTestParam: {},\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            filterSubSampleParam: {},\r\n            specBasedComponent: this.props.Login.settings\r\n            && this.props.Login.settings[18] ? this.props.Login.settings[18]===\"true\"?true:false : false,\r\n\r\n        };\r\n        // this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.showConfirmAlert !== state.showConfirmAlert) {\r\n            return {\r\n                showConfirmAlert: props.Login.showConfirmAlert\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onReload = () => {\r\n\r\n        // let RealFromDate = new Date(this.props.Login.masterData.RealFromDate)\r\n        // let RealToDate = new Date(this.props.Login.masterData.RealToDate)\r\n        const obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\r\n        const RealFromDate = obj.fromDate;\r\n        const RealToDate = obj.toDate;\r\n        let RealSampleTypeValue = this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue\r\n        let RealRegTypeValue = this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue\r\n        let RealRegSubTypeValue = this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue\r\n        let RealFilterStatusValue = this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue\r\n        let activeSampleTab = this.props.Login.activeSampleTab;\r\n        let activeTestTab = this.props.Login.activeTestTab;\r\n\r\n        let SampleTypeValue = RealSampleTypeValue\r\n        let RegTypeValue = RealRegTypeValue\r\n        let RegSubTypeValue = RealRegSubTypeValue\r\n        let FilterStatusValue = RealFilterStatusValue\r\n        // let FromDate = this.props.Login.masterData.FromDate\r\n        // let ToDate = this.props.Login.masterData.ToDate\r\n        const FromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\r\n        const ToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate);\r\n        let masterData = {\r\n            ...this.props.Login.masterData, RealSampleTypeValue, RealRegTypeValue, RealRegSubTypeValue, FromDate, ToDate,\r\n            RealFilterStatusValue, RealFromDate, RealToDate, SampleTypeValue, RegTypeValue, RegSubTypeValue, FilterStatusValue\r\n        }\r\n        let inputData = {\r\n            npreregno: \"\",\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            nfilterstatus: this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus,\r\n            userinfo: this.props.Login.userInfo, activeSampleTab, activeTestTab,\r\n            flag: 1,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n                && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n            nneedsubsample: this.props.Login.masterData\r\n                && this.props.Login.masterData.nneedsubsample,\r\n            checkBoxOperation: 3\r\n        }\r\n        if (inputData.nsampletypecode) {\r\n            // let obj = this.covertDatetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate)\r\n            inputData['FromDate'] = obj.fromDate;\r\n            inputData['ToDate'] = obj.toDate;\r\n\r\n            let inputParam = { masterData, inputData, searchSubSampleRef: this.searchSubSampleRef, searchSampleRef: this.searchSampleRef, searchTestRef: this.searchTestRef, selectedFilter: this.state.selectedFilter }\r\n            this.props.ReloadData(inputParam);\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        const RealFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate);\r\n        const RealToDate = rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter.todate || this.props.Login.masterData.ToDate)\r\n        let RealSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let RealRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let RealRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let RealFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n\r\n        let activeSampleTab = this.props.Login.activeSampleTab;\r\n        if (this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode !== RegistrationType.PLASMA_POOL) {\r\n            activeSampleTab = \"IDS_SAMPLEATTACHMENTS\";\r\n        }\r\n\r\n        let activeTestTab = this.props.Login.activeTestTab;\r\n        let masterData = {\r\n            ...this.props.Login.masterData, RealSampleTypeValue, RealRegTypeValue, RealRegSubTypeValue,\r\n            RealFilterStatusValue, RealFromDate, RealToDate\r\n        }\r\n        let inputData = {\r\n            npreregno: \"\",\r\n            nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            userinfo: this.props.Login.userInfo, activeSampleTab, activeTestTab,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n                && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n            nneedsubsample: this.props.Login.masterData\r\n                && this.props.Login.masterData.nneedsubsample,\r\n            checkBoxOperation: 3\r\n        }\r\n\r\n        if (inputData.nsampletypecode) {\r\n            if (inputData.ndesigntemplatemappingcode) {\r\n                const obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate,\r\n                    this.state.selectedFilter.todate || this.props.Login.masterData.ToDate, this.props.Login.userInfo)\r\n                inputData['FromDate'] = obj.fromDate;\r\n                inputData['ToDate'] = obj.toDate;\r\n                const selectedFilter = {};\r\n                selectedFilter[\"fromdate\"] = RealFromDate;\r\n                selectedFilter[\"todate\"] = RealToDate;\r\n                const inputParam = {\r\n                    masterData, inputData, searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchSampleRef: this.searchSampleRef,\r\n                    searchTestRef: this.searchTestRef, selectedFilter\r\n                }\r\n                this.props.getRegistrationSample(inputParam);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSCONFIGREGISTRATIONTEMPLATE\" }));\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    getActiveTestURL() {\r\n\r\n        let url = \"resultentrybysample/getTestbasedParameter\"\r\n        switch (this.props.Login.activeTestKey) {\r\n\r\n            case \"IDS_PARAMETERRESULTS\":\r\n                //url = \"resultentrybysample/getTestbasedParameter\";\r\n                url = \"registration/getregistrationparameter\";\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\";\r\n                break;\r\n            default:\r\n                url = \"registration/getregistrationparameter\";\r\n                // url = \"resultentrybysample/getTestbasedParameter\";\r\n                break;\r\n        }\r\n        return url;\r\n    }\r\n\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    gridViewChange(layout) {\r\n        this.setState({\r\n            layout: layout\r\n        })\r\n    }\r\n    verticalPaneSizeChange = (val) => {\r\n        this.setState({\r\n            initialVerticalWidth: val - 150\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        this.fromDate = this.state.selectedFilter[\"fromdate\"] !== \"\" && this.state.selectedFilter[\"fromdate\"] !== undefined ? this.state.selectedFilter[\"fromdate\"] : this.props.Login.masterData.FromDate;\r\n        this.toDate = this.state.selectedFilter[\"todate\"] !== \"\" && this.state.selectedFilter[\"todate\"] !== undefined ? this.state.selectedFilter[\"todate\"] : this.props.Login.masterData.ToDate;\r\n        let sampleList = this.props.Login.masterData.RegistrationGetSample ? sortData(this.props.Login.masterData.RegistrationGetSample) : [];\r\n        let subSampleList = this.props.Login.masterData.RegistrationGetSubSample ? this.props.Login.masterData.RegistrationGetSubSample : [];\r\n        let testList = this.props.Login.masterData.RegistrationGetTest ? this.props.Login.masterData.RegistrationGetTest : []; //\r\n\r\n        // let testGetParam = {\r\n        //     masterData: this.props.Login.masterData,\r\n        //     userinfo: this.props.Login.userInfo,\r\n        //     ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n        //     nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n        //     nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n        //     nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n        //     activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n        //     activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n        //     npreregno: this.props.Login.masterData.selectedSample &&\r\n        //         this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\"),\r\n        //     sfromdate: this.props.Login.masterData.RealFromDate,\r\n        //     stodate: this.props.Login.masterData.RealToDate,\r\n        //     searchTestRef: this.searchTestRef,\r\n        //     testskip: this.state.testskip,\r\n        //     subsampleskip: this.state.subsampleskip,\r\n        //     resultDataState: this.state.resultDataState,\r\n        //     ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n        // }\r\n        // let testChildGetParam = {\r\n        //     masterData: this.props.Login.masterData,\r\n        //     userinfo: this.props.Login.userInfo,\r\n        //     ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n        //     nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n        //     nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n        //     nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n        //     activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n        //     activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n        //     npreregno: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\"),\r\n        //     ntransactionsamplecode: this.props.Login.masterData.selectedSubSample &&\r\n        //         this.props.Login.masterData.selectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n        //     sfromdate: this.props.Login.masterData.RealFromDate,\r\n        //     stodate: this.props.Login.masterData.RealToDate,\r\n        //     resultDataState: this.state.resultDataState,\r\n        //     testCommentDataState: this.state.testCommentDataState,\r\n        //     ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n        // }\r\n\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        // let subSampleGetParam = {\r\n        //     masterData: this.props.Login.masterData,\r\n        //     ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n        //     userinfo: this.props.Login.userInfo,\r\n        //     nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n        //     nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n        //     nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n        //     activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n        //     activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n        //     testskip: this.state.testskip,\r\n        //     subsampleskip: this.state.subsampleskip,\r\n        //     searchTestRef: this.searchTestRef,\r\n        //     resultDataState: this.state.resultDataState,\r\n        //     testCommentDataState: this.state.testCommentDataState,\r\n        //     sampleGridDataState: this.state.sampleGridDataState,\r\n        //     ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n        //         && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n        //     nneedsubsample: this.props.Login.masterData\r\n        //         && this.props.Login.masterData.nneedsubsample\r\n        // }\r\n        // let sampleSearchField = [\"sarno\", \"sproductname\", \"sproductcatname\", \"seprotocolname\", \"stransdisplaystatus\"\r\n        //     , \"sstorageconditionname\", \"sdecisionstatus\", \"scomponentname\", \"splasmafilenumber\", \"sversion\", \"sbulkvolume\", \"sregsubtypename\", \"smanuflotno\"\r\n        //     , \"sregtypename\", \"sspecname\", \"saddress1\", \"sclientname\", \"smanufsitename\", \"sproductcertificatename\", \"smanufname\", \"sstoragelocationname\"];\r\n\r\n\r\n        // const filterSampleParam = {\r\n        //     inputListName: \"RegistrationGetSample\",\r\n        //     selectedObject: \"selectedSample\",\r\n        //     primaryKeyField: \"npreregno\",\r\n        //     fetchUrl: \"registration/getRegistrationSubSample\",\r\n        //     childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\r\n        //     fecthInputObject: {\r\n        //         nflag: 2,\r\n        //         ntype: 2,\r\n        //         masterData: this.props.Login.masterData,\r\n        //         ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n        //         userinfo: this.props.Login.userInfo,\r\n        //         nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n        //         nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n        //         nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n        //         activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n        //         activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n        //     },\r\n        //     masterData: this.props.Login.masterData,\r\n        //     searchFieldList: sampleSearchField,\r\n        //     changeList: [\r\n        //         \"RegistrationGetSubSample\", \"RegistrationGetTest\", \"RegistrationTestAttachment\",\r\n        //         \"RegistrationTestComment\", \"RegistrationAttachment\", \"selectedSample\", \"selectedSubSample\",\r\n        //         \"selectedTest\", \"RegistrationParameter\"\r\n        //     ]\r\n        // };\r\n\r\n        // let filterTestParam = {\r\n        //     inputListName: \"RegistrationGetTest\",\r\n        //     selectedObject: \"selectedTest\",\r\n        //     primaryKeyField: \"ntransactiontestcode\",\r\n        //     fetchUrl: this.getActiveTestURL(),\r\n        //     fecthInputObject: {\r\n        //         ntransactiontestcode: this.props.Login.masterData && this.props.Login.masterData.selectedTest && this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n        //         userinfo: this.props.Login.userInfo\r\n        //     },\r\n        //     masterData: this.props.Login.masterData,\r\n        //     searchFieldList: [\"sarno\", \"stestsynonym\", \"ssectionname\", \"ssamplearno\",\r\n        //         \"sinstrumentcatname\", \"stransdisplaystatus\", \"smethodname\", \"ssourcename\", \"scomponentname\", \"stestname\"],\r\n        //     changeList: [\"RegistrationTestComment\", \"RegistrationParameter\"]\r\n\r\n        // }\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"npreregno\",\r\n                fetchUrl: \"registration/getRegistrationSubSample\",\r\n                fecthInputObject: {\r\n                    ...this.state.subSampleGetParam, testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    resultDataState: this.state.resultDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    sampleGridDataState: this.state.sampleGridDataState\r\n                },\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" },\r\n                { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                selectedObject: \"selectedSample\",\r\n                inputListName: \"AP_SAMPLE\",\r\n                updatedListname: \"selectedSample\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            },\r\n            {\r\n                filteredListName: \"searchedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"ntransactionsamplecode\",\r\n                fetchUrl: \"registration/getRegistrationTestSample\",\r\n                fecthInputObject: {\r\n                    ...this.state.testGetParam, testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    resultDataState: this.state.resultDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    sampleGridDataState: this.state.sampleGridDataState\r\n                },\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                selectedObject: \"selectedSubSample\",\r\n                inputListName: \"AP_SUBSAMPLE\",\r\n                updatedListname: \"selectedSubSample\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            },\r\n            {\r\n                filteredListName: \"searchedTest\",\r\n                updatedListname: \"selectedTest\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: \"approval/getApprovalTest\",\r\n                fecthInputObject: {\r\n                    ...this.state.testGetParam,\r\n                    searchTestRef: this.searchTestRef,\r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    resultDataState: this.state.resultDataState\r\n                },\r\n                selectedObject: \"selectedTest\",\r\n                inputListName: \"RegistrationGetTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            }\r\n        ];\r\n\r\n\r\n        // let editRegParam = {\r\n        //     nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n        //     userinfo: this.props.Login.userInfo,\r\n        //     nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n        //     nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n        //     nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n        //     sfromdate: this.props.Login.masterData.RealFromDate,\r\n        //     stodate: this.props.Login.masterData.RealToDate,\r\n        //     ncontrolCode: this.state.editSampleId,\r\n        //     ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n        //         && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n        //     nneedsubsample: this.props.Login.masterData\r\n        //         && this.props.Login.masterData.nneedsubsample\r\n        // }\r\n\r\n        // let editSubSampleRegParam = {\r\n        //     nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n        //     userinfo: this.props.Login.userInfo,\r\n        //     nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n        //     nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n        //     nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n        //     sfromdate: this.props.Login.masterData.RealFromDate,\r\n        //     stodate: this.props.Login.masterData.RealToDate,\r\n        //     ncontrolCode: this.state.editSampleId,\r\n        //     ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n        //         && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n        //     nneedsubsample: this.props.Login.masterData\r\n        //         && this.props.Login.masterData.nneedsubsample\r\n        // }\r\n\r\n        // const addTestParam = {\r\n        //     selectedsample: this.props.Login.masterData.selectedSample,\r\n        //     selectedsubsample: this.props.Login.masterData.selectedSubSample,\r\n        //     skip: this.state.skip, take: (this.state.skip + this.state.take),\r\n        //     userinfo: this.props.Login.userInfo,\r\n        //     sampleList: this.props.Login.masterData.RegistrationGetSample,\r\n        //     snspecsampletypecode: this.props.Login.masterData.selectedSubSample &&\r\n        //         [...new Set(this.props.Login.masterData.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\")\r\n        // };\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} />\r\n                    {/* <div className='btn-list'>\r\n                        <button className={`btn-primary-head ${this.state.layout === 1 ? 'active' : ''} `} onClick={() => this.gridViewChange(1)}>Sample</button>\r\n                        <button className={`btn-primary-head ${this.state.layout === 2 ? 'active' : ''} `} onClick={() => this.gridViewChange(2)}>Sub Sample</button>\r\n                        <button className={`btn-primary-head ${this.state.layout === 3 ? 'active' : ''} `} onClick={() => this.gridViewChange(3)}>Test</button>\r\n                    </div> */}\r\n                    <Row noGutters={true}>\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                            <ListWrapper >\r\n                                {/* className={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 60 ? 'split-mode' : ''} */}\r\n                                <SplitterLayout borderColor=\"#999\"\r\n                                    primaryIndex={1} percentage={true}\r\n                                    secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                    onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                                    primaryMinSize={40}\r\n                                    secondaryMinSize={20}\r\n                                >\r\n                                    {this.state.layout == 1 ?\r\n                                        <TransactionListMasterJson\r\n                                            // paneHeight={this.state.firstPane}\r\n                                            splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                            masterList={this.props.Login.masterData.searchedSample || sampleList}\r\n                                            selectedMaster={this.props.Login.masterData.selectedSample}\r\n                                            primaryKeyField=\"npreregno\"\r\n                                            filterColumnData={this.props.filterTransactionList}\r\n                                            getMasterDetail={this.props.getRegistrationsubSampleDetail}\r\n                                            inputParam={{\r\n                                                ...this.state.subSampleGetParam,\r\n                                                searchTestRef: this.searchTestRef,\r\n                                                searchSubSampleRef: this.searchSubSampleRef,\r\n                                                testskip: this.state.testskip,\r\n                                                subsampleskip: this.state.subsampleskip,\r\n                                                resultDataState: this.state.resultDataState\r\n                                            }}\r\n                                            selectionList={this.props.Login.masterData.RealFilterStatusValue\r\n                                                && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                            selectionColorField=\"scolorhexcode\"\r\n                                            mainField={\"sarno\"}\r\n                                            showStatusLink={true}\r\n                                            showStatusName={true}\r\n                                            statusFieldName=\"stransdisplaystatus\"\r\n                                            statusField=\"ntransactionstatus\"\r\n                                            selectedListName=\"selectedSample\"\r\n                                            searchListName=\"searchedSample\"\r\n                                            searchRef={this.searchSampleRef}\r\n                                            objectName=\"sample\"\r\n                                            listName=\"IDS_SAMPLE\"\r\n                                            selectionField=\"ntransactionstatus\"\r\n                                            selectionFieldName=\"stransdisplaystatus\"\r\n                                            showFilter={this.props.Login.showFilter}\r\n                                            openFilter={this.openFilter}\r\n                                            closeFilter={this.closeFilter}\r\n                                            onFilterSubmit={this.onFilterSubmit}\r\n                                            subFields={this.state.DynamicSampleColumns}\r\n                                            jsonField={'jsondata'}\r\n                                            jsonDesignFields={true}\r\n                                            needMultiSelect={true}\r\n                                            filterParam={{\r\n                                                ...this.state.filterSampleParam,\r\n                                                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" },\r\n                                                { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                                            }}\r\n                                            subFieldsLabel={false}\r\n                                            handlePageChange={this.handlePageChange}\r\n                                            skip={this.state.skip}\r\n                                            take={this.state.take}\r\n                                            splitModeClass={this.state.splitChangeWidthPercentage\r\n                                                && this.state.splitChangeWidthPercentage > 50 ? 'split-mode'\r\n                                                : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                            childTabsKey={[\"RegistrationAttachment\", \"RegistrationGetSubSample\",\r\n                                                \"RegistrationGetTest\"]} //, \"RegistrationParameter\"\"RegistrationTestComment\"\r\n                                            actionIcons={\r\n                                                [\r\n                                                    {\r\n                                                        title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                                        controlname: \"faPencilAlt\",\r\n                                                        objectName: \"mastertoedit\",\r\n                                                        hidden: this.state.userRoleControlRights.indexOf(this.state.editSampleId) === -1,\r\n                                                        onClick: this.editRegistration,\r\n                                                        inputData: {\r\n                                                            primaryKeyName: \"npreregno\",\r\n                                                            operation: \"update\",\r\n                                                            masterData: this.props.Login.masterData,\r\n                                                            userInfo: this.props.Login.userInfo,\r\n                                                            editRegParam: {\r\n                                                                ...this.state.editRegParam,\r\n                                                                ncontrolCode: this.state.editSampleId\r\n                                                            }\r\n                                                        },\r\n                                                    },\r\n                                                    {\r\n                                                        title: this.props.intl.formatMessage({ id: \"IDS_PRINTBARCODE\" }),\r\n                                                        controlname: \"faPrint\",\r\n                                                        objectName: \"sample\",\r\n                                                        hidden: this.state.userRoleControlRights.indexOf(this.state.printBarcodeId) === -1,\r\n                                                        onClick: this.props.getPrinterComboService,\r\n                                                        inputData: {\r\n                                                            primaryKeyName: \"npreregno\",\r\n                                                            operation: \"print\",\r\n                                                            ncontrolcode: this.state.printBarcodeId,\r\n                                                            masterData: this.props.Login.masterData,\r\n                                                            userInfo: this.props.Login.userInfo,\r\n                                                            editRegParam: {\r\n                                                                ...this.state.editRegParam,\r\n                                                                ncontrolCode: this.state.editSampleId\r\n                                                            }\r\n                                                        },\r\n                                                    },\r\n\r\n                                                ]\r\n                                            }\r\n                                            needFilter={true}\r\n                                            commonActions={\r\n\r\n                                                <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                    {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                    <Button className=\"btn btn-icon-rounded btn-circle solid-blue ml-2\" role=\"button\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_REGISTER\" })}\r\n                                                        data-for=\"tooltip-common-wrap\"\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(this.state.preRegisterId) === -1}\r\n                                                        onClick={() => this.getRegistrationComboService(\"Registration\", \"create\", \"npreregno\",\r\n                                                            this.props.Login.masterData, this.props.Login.userInfo, this.state.preRegisterId)}>\r\n                                                        <FontAwesomeIcon icon={faPlus} />\r\n                                                    </Button>\r\n                                                    <Nav.Link\r\n                                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ACCEPT\" })}\r\n                                                        data-for=\"tooltip-common-wrap\"\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(this.state.registerId) === -1}\r\n                                                        onClick={() => this.acceptRegistration(this.state.registerId, this.state.skip, this.state.take)} >\r\n                                                        <Register className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                    </Nav.Link>\r\n                                                    <Nav.Link\r\n                                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_QUARANTINE\" })}\r\n                                                        data-for=\"tooltip-common-wrap\"\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(this.state.quarantineId) === -1}\r\n                                                        onClick={() => this.selectQuarantine(this.state.quarantineId, this.state.skip, this.state.take)} >\r\n                                                        <Quarantine className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                    </Nav.Link>\r\n                                                    <Nav.Link\r\n                                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCELREJECTSAMPLE\" })}\r\n                                                        data-for=\"tooltip-common-wrap\"\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(this.state.cancelSampleId) === -1}\r\n                                                        onClick={() => this.cancelSampleRecords(this.state.cancelSampleId, this.state.skip, this.state.take)}>\r\n                                                        <Reject className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                    </Nav.Link>\r\n                                                    <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                        data-for=\"tooltip-common-wrap\"\r\n                                                        onClick={() => this.onReload()} >\r\n\r\n                                                        <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                    </Button>\r\n                                                </ProductList>\r\n                                            }\r\n                                            filterComponent={[\r\n                                                {\r\n                                                    \"Sample Filter\": <RegistrationFilter\r\n                                                        SampleType={this.state.stateSampleType || []}\r\n                                                        RegistrationType={this.state.stateRegistrationType || []}\r\n                                                        RegistrationSubType={this.state.stateRegistrationSubType || []}\r\n                                                        userInfo={this.props.Login.userInfo || {}}\r\n                                                        SampleTypeValue={this.props.Login.masterData.SampleTypeValue || {}}\r\n                                                        RegTypeValue={this.props.Login.masterData.RegTypeValue || {}}\r\n                                                        RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || {}}\r\n                                                        FilterStatusValue={this.props.Login.masterData.FilterStatusValue || {}}\r\n                                                        FilterStatus={this.state.stateFilterStatus || []}\r\n                                                        FromDate={this.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.fromDate) : new Date()}\r\n                                                        ToDate={this.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.toDate) : new Date()}\r\n                                                        onSampleTypeChange={this.onSampleTypeChange}\r\n                                                        onRegTypeChange={this.onRegTypeChange}\r\n                                                        onRegSubTypeChange={this.onRegSubTypeChange}\r\n                                                        handleFilterDateChange={this.handleFilterDateChange}\r\n                                                        onFilterChange={this.onFilterChange}\r\n                                                    />\r\n                                                }\r\n                                            ]}\r\n\r\n                                        />\r\n                                        : this.state.layout == 2 ?\r\n                                            <TransactionListMasterJson\r\n                                                paneHeight={this.state.initialVerticalWidth}\r\n                                                // splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                                masterList={this.props.Login.masterData.searchedSubSample || subSampleList}\r\n                                                selectedMaster={this.props.Login.masterData.selectedSubSample}\r\n                                                primaryKeyField=\"ntransactionsamplecode\"\r\n                                                getMasterDetail={this.props.getRegistrationTestDetail}\r\n                                                inputParam={{\r\n                                                    ...this.state.testGetParam,\r\n                                                    searchTestRef: this.searchTestRef,\r\n                                                    testskip: this.state.testskip,\r\n                                                    subsampleskip: this.state.subsampleskip,\r\n                                                    resultDataState: this.state.resultDataState\r\n                                                }}\r\n                                                additionalParam={['napprovalversioncode']}\r\n                                                showStatusLink={true}\r\n                                                showStatusName={true}\r\n                                                statusFieldName=\"stransdisplaystatus\"\r\n                                                statusField=\"ntransactionstatus\"\r\n                                                mainField=\"ssamplearno\"\r\n                                                selectedListName=\"selectedSubSample\"\r\n                                                objectName=\"subsample\"\r\n                                                listName=\"IDS_SUBSAMPLE\"\r\n                                                jsonField={'jsondata'}\r\n                                                jsonDesignFields={true}\r\n                                                needValidation={true}\r\n                                                validationKey=\"napprovalversioncode\"\r\n                                                validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                                                subFields={this.state.DynamicSubSampleColumns}\r\n                                                searchRef={this.searchSubSampleRef}\r\n                                                skip={this.state.subsampleskip}\r\n                                                take={this.state.subsampletake}\r\n                                                selectionField=\"ntransactionstatus\"\r\n                                                selectionFieldName=\"stransdisplaystatus\"\r\n                                                needMultiSelect={true}\r\n                                                selectionColorField=\"scolorhexcode\"\r\n                                                subFieldsLabel={false}\r\n                                                handlePageChange={this.handleSubSamplePageChange}\r\n                                                selectionList={this.props.Login.masterData.RealFilterStatusValue\r\n                                                    && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                                childTabsKey={[\"RegistrationAttachment\",\r\n                                                    \"RegistrationGetTest\"]}\r\n                                                actionIcons={\r\n                                                    [\r\n                                                        {\r\n                                                            title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                                            controlname: \"faPencilAlt\",\r\n                                                            objectName: \"mastertoedit\",\r\n                                                            hidden: this.state.userRoleControlRights.indexOf(this.state.editSubSampleId) === -1,\r\n                                                            onClick: this.editSubSampleRegistration,\r\n                                                            inputData: {\r\n                                                                primaryKeyName: \"ntransactionsamplecode\",\r\n                                                                operation: \"update\",\r\n                                                                masterData: this.props.Login.masterData,\r\n                                                                userInfo: this.props.Login.userInfo,\r\n                                                                editSubSampleRegParam: { ...this.state.editSubSampleRegParam, ncontrolCode: this.state.editSampleId }\r\n                                                            },\r\n                                                        }\r\n\r\n\r\n                                                    ]\r\n                                                }\r\n                                                needFilter={false}\r\n                                                commonActions={\r\n                                                    <>\r\n                                                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                        <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                                            {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                            <Nav.Link name=\"adddeputy\" className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //title={\"Add Test\"}\r\n                                                                data-for=\"tooltip-common-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSUBSAMPLE\" })}\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(this.state.addSubSampleId) === -1}\r\n                                                                onClick={() => this.addSubSample(this.state.addSubSampleId, this.state.subsampleskip, this.state.subsampletake)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPlus} />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //title={\"Cancel/Reject Test\"}\r\n                                                                data-for=\"tooltip-common-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(this.state.cancelSubSampleId) === -1}\r\n                                                                onClick={() => this.cancelSubSampleRecord(this.state.cancelSubSampleId, this.state.subsampleskip, this.state.subsampletake)}>\r\n                                                                <Reject className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                            </Nav.Link>\r\n                                                        </ProductList>\r\n                                                        {/* </Tooltip> */}\r\n                                                    </>\r\n                                                }\r\n                                            />\r\n\r\n\r\n                                            : this.state.layout == 3 ?\r\n                                                <TransactionListMasterJson\r\n                                                    paneHeight={this.state.initialVerticalWidth}\r\n                                                    masterList={this.props.Login.masterData.searchedTest || testList}\r\n                                                    selectedMaster={this.props.Login.masterData.selectedTest}\r\n                                                    primaryKeyField=\"ntransactiontestcode\"\r\n                                                    getMasterDetail={this.props.getTestChildTabDetailRegistration}\r\n                                                    inputParam={{\r\n                                                        ...this.state.testChildGetParam, resultDataState: this.state.resultDataState,\r\n                                                        testCommentDataState: this.state.testCommentDataState,\r\n                                                        testAttachmentDataState: this.state.testAttachmentDataState,\r\n                                                    }}\r\n                                                    additionalParam={[]}\r\n                                                    mainField=\"stestsynonym\"\r\n                                                    selectedListName=\"selectedTest\"\r\n                                                    objectName=\"test\"\r\n                                                    listName=\"IDS_TEST\"\r\n                                                    jsonField={'jsondata'}\r\n                                                    pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                                                    showStatusLink={true}\r\n                                                    subFieldsLabel={true}\r\n                                                    statusFieldName=\"stransdisplaystatus\"\r\n                                                    statusField=\"ntransactionstatus\"\r\n                                                    needMultiSelect={true}\r\n                                                    subFields={this.state.testListColumns || []}\r\n                                                    moreField={this.state.testMoreField}\r\n                                                    needValidation={false}\r\n                                                    showStatusName={true}\r\n                                                    needFilter={false}\r\n                                                    filterColumnData={this.props.filterTransactionList}\r\n                                                    searchListName=\"searchedTest\"\r\n                                                    searchRef={this.searchTestRef}\r\n                                                    filterParam={this.state.filterTestParam}\r\n                                                    selectionField=\"ntransactionstatus\"\r\n                                                    selectionFieldName=\"stransdisplaystatus\"\r\n                                                    // childTabsKey={[\"RegistrationTestComment\"]}\r\n                                                    childTabsKey={[\"RegistrationParameter\", \"RegistrationTestComment\", \"RegistrationTestAttachment\"]}\r\n                                                    handlePageChange={this.handleTestPageChange}\r\n                                                    buttonCount={5}\r\n                                                    skip={this.state.testskip}\r\n                                                    take={this.state.testtake}\r\n                                                    showMoreResetList={true}\r\n                                                    showMoreResetListName=\"RegistrationGetSample\"\r\n                                                    selectionList={this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                                    selectionColorField=\"scolorhexcode\"\r\n                                                    // selectionList=\r\n                                                    // actionIcons={\r\n                                                    //     [{ title: \"EditTest\", controlname: \"faPencilAlt\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\r\n                                                    //     { title: \"Add Intrument\", controlname: \"faMicroscope\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedInstrumentId) === -1, onClick: this.addREInstrument, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedInstrumentId } },\r\n                                                    //     { title: \"Add Material\", controlname: \"faFlask\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedMaterailId) === -1 },\r\n                                                    //     { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }]\r\n                                                    // }\r\n                                                    commonActions={\r\n                                                        <>\r\n                                                            {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                            <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                                                {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                                <Nav.Link name=\"adddeputy\" className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                    //title={\"Add Test\"}\r\n                                                                    data-for=\"tooltip-common-wrap\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDTEST\" })}\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(this.state.addTestId) === -1}\r\n                                                                    onClick={() => this.props.addMoreTest({\r\n                                                                        ...this.state.addTestParam,\r\n                                                                        skip: this.state.skip, take: (this.state.skip + this.state.take)\r\n                                                                    }, this.state.addTestId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faPlus} />\r\n                                                                </Nav.Link>\r\n\r\n                                                                <Nav.Link\r\n                                                                    className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                    //title={\"Cancel/Reject Test\"}\r\n                                                                    data-for=\"tooltip-common-wrap\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCELREJECTTEST\" })}\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(this.state.cancelId) === -1}\r\n                                                                    onClick={() => this.cancelRecord(this.state.cancelId, this.state.testskip, this.state.testtake)}>\r\n                                                                    <Reject className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                </Nav.Link>\r\n                                                            </ProductList>\r\n                                                            {/* </Tooltip> */}\r\n                                                        </>\r\n                                                    }\r\n                                                /> : \"\"}\r\n\r\n                                    <PerfectScrollbar>\r\n                                        {this.state.layout == 1 ?\r\n                                            <SplitterLayout\r\n                                                customClassName=\"detailed-inner\"\r\n                                                vertical\r\n                                                borderColor=\"#999\"\r\n                                                primaryIndex={1}\r\n                                                onSecondaryPaneSizeChange={this.verticalPaneSizeChange}\r\n                                                secondaryInitialSize={400}\r\n                                            >\r\n                                                <div>\r\n                                                    <div style={this.state.showTest === true ?\r\n                                                        { display: \"block\", background: \"#FFFF\" } : { display: \"none\", background: \"#FFFF\" }} >\r\n                                                        <SplitterLayout borderColor=\"#999\"\r\n                                                            primaryIndex={1} percentage={true}\r\n                                                            secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                                            onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                                                            primaryMinSize={40}\r\n                                                            secondaryMinSize={30}\r\n                                                        >\r\n                                                            <Card>\r\n                                                                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                    <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                                                                        <h4 className=\"card-title\">Sub Sample</h4>\r\n                                                                    </span>\r\n                                                                </Card.Header>\r\n                                                                <Card.Body className='p-0'>\r\n                                                                    <TransactionListMasterJson\r\n                                                                        paneHeight={this.state.initialVerticalWidth}\r\n                                                                        // splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                                                        masterList={this.props.Login.masterData.searchedSubSample || subSampleList}\r\n                                                                        selectedMaster={this.props.Login.masterData.selectedSubSample}\r\n                                                                        primaryKeyField=\"ntransactionsamplecode\"\r\n                                                                        getMasterDetail={this.props.getRegistrationTestDetail}\r\n                                                                        inputParam={{\r\n                                                                            ...this.state.testGetParam,\r\n                                                                            searchTestRef: this.searchTestRef,\r\n                                                                            searchSubSampleRef: this.searchSubSampleRef,\r\n                                                                            testskip: this.state.testskip,\r\n                                                                            subsampleskip: this.state.subsampleskip,\r\n                                                                            resultDataState: this.state.resultDataState\r\n                                                                        }}\r\n                                                                        filterColumnData={this.props.filterTransactionList}\r\n                                                                        searchListName=\"searchedSubSample\"\r\n                                                                        searchRef={this.searchSubSampleRef}\r\n                                                                        filterParam={{\r\n                                                                            ...this.state.filterSubSampleParam,\r\n                                                                            childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }]\r\n                                                                        }}\r\n                                                                        additionalParam={['napprovalversioncode']}\r\n                                                                        showStatusLink={true}\r\n                                                                        showStatusName={true}\r\n                                                                        statusFieldName=\"stransdisplaystatus\"\r\n                                                                        statusField=\"ntransactionstatus\"\r\n                                                                        mainField=\"ssamplearno\"\r\n                                                                        selectedListName=\"selectedSubSample\"\r\n                                                                        objectName=\"subsample\"\r\n                                                                        listName=\"IDS_SUBSAMPLE\"\r\n                                                                        jsonField={'jsondata'}\r\n                                                                        jsonDesignFields={true}\r\n                                                                        needValidation={true}\r\n                                                                        validationKey=\"napprovalversioncode\"\r\n                                                                        validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                                                                        subFields={this.state.DynamicSubSampleColumns}\r\n                                                                        skip={this.state.subsampleskip}\r\n                                                                        take={this.state.subsampletake}\r\n                                                                        selectionField=\"ntransactionstatus\"\r\n                                                                        selectionFieldName=\"stransdisplaystatus\"\r\n                                                                        needMultiSelect={true}\r\n                                                                        selectionColorField=\"scolorhexcode\"\r\n                                                                        subFieldsLabel={false}\r\n                                                                        handlePageChange={this.handleSubSamplePageChange}\r\n                                                                        selectionList={this.props.Login.masterData.RealFilterStatusValue\r\n                                                                            && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                                                        childTabsKey={[\"RegistrationAttachment\",\r\n                                                                            \"RegistrationGetTest\"]}\r\n                                                                        actionIcons={\r\n                                                                            [\r\n                                                                                {\r\n                                                                                    title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                                                                    controlname: \"faPencilAlt\",\r\n                                                                                    objectName: \"mastertoedit\",\r\n                                                                                    hidden: this.state.userRoleControlRights.indexOf(this.state.editSubSampleId) === -1,\r\n                                                                                    onClick: this.editSubSampleRegistration,\r\n                                                                                    inputData: {\r\n                                                                                        primaryKeyName: \"ntransactionsamplecode\",\r\n                                                                                        operation: \"update\",\r\n                                                                                        masterData: this.props.Login.masterData,\r\n                                                                                        userInfo: this.props.Login.userInfo,\r\n                                                                                        editSubSampleRegParam: { ...this.state.editSubSampleRegParam, ncontrolCode: this.state.editSampleId }\r\n                                                                                    },\r\n                                                                                }\r\n\r\n\r\n                                                                            ]\r\n                                                                        }\r\n                                                                        needFilter={false}\r\n                                                                        commonActions={\r\n                                                                            <>\r\n                                                                                {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                                <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                                                                    {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                                                    <Nav.Link name=\"adddeputy\" className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                                        //title={\"Add Test\"}\r\n                                                                                        data-for=\"tooltip-common-wrap\"\r\n                                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSUBSAMPLE\" })}\r\n                                                                                        hidden={this.state.userRoleControlRights.indexOf(this.state.addSubSampleId) === -1}\r\n                                                                                        onClick={() => this.addSubSample(this.state.addSubSampleId, this.state.subsampleskip, this.state.subsampletake)}\r\n                                                                                    >\r\n                                                                                        <FontAwesomeIcon icon={faPlus} />\r\n                                                                                    </Nav.Link>\r\n                                                                                    <Nav.Link\r\n                                                                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                                        //title={\"Cancel/Reject Test\"}\r\n                                                                                        data-for=\"tooltip-common-wrap\"\r\n                                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                                        hidden={this.state.userRoleControlRights.indexOf(this.state.cancelSubSampleId) === -1}\r\n                                                                                        onClick={() => this.cancelSubSampleRecord(this.state.cancelSubSampleId, this.state.subsampleskip, this.state.subsampletake)}>\r\n                                                                                        <Reject className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                                    </Nav.Link>\r\n                                                                                </ProductList>\r\n                                                                                {/* </Tooltip> */}\r\n                                                                            </>\r\n                                                                        }\r\n                                                                    />\r\n                                                                </Card.Body>\r\n                                                            </Card>\r\n                                                            <ContentPanel>\r\n                                                                <Card>\r\n                                                                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                        <span style={{ display: \"inline-block\" }}>\r\n                                                                            <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                                                                        </span>\r\n                                                                        <button className=\"btn btn-primary btn-padd-custom\" style={{ float: \"right\" }}\r\n                                                                            onClick={() => this.showSample()}\r\n                                                                        >\r\n                                                                            <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                                                            {this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n                                                                        </button>\r\n                                                                        {/* <button className=\"btn btn-primary btn-padd-custom\" style={{ \"float\": \"right\", \"margin-right\": \"6px\" }}\r\n                                                                            onClick={() => this.showSubSample()}\r\n                                                                        >\r\n                                                                            <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                                                            {this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}\r\n                                                                        </button> */}\r\n\r\n                                                                        {/* </div> */}\r\n                                                                    </Card.Header>\r\n                                                                    <Card.Body className='p-0'>\r\n\r\n                                                                        <TransactionListMasterJson\r\n                                                                            paneHeight={this.state.initialVerticalWidth}\r\n                                                                            masterList={this.props.Login.masterData.searchedTest || testList}\r\n                                                                            selectedMaster={this.props.Login.masterData.selectedTest}\r\n                                                                            primaryKeyField=\"ntransactiontestcode\"\r\n                                                                            getMasterDetail={this.props.getTestChildTabDetailRegistration}\r\n                                                                            inputParam={{\r\n                                                                                ...this.state.testChildGetParam, resultDataState: this.state.resultDataState,\r\n                                                                                testCommentDataState: this.state.testCommentDataState,\r\n                                                                                testAttachmentDataState: this.state.testAttachmentDataState,\r\n                                                                            }}\r\n                                                                            additionalParam={[]}\r\n                                                                            mainField=\"stestsynonym\"\r\n                                                                            selectedListName=\"selectedTest\"\r\n                                                                            objectName=\"test\"\r\n                                                                            listName=\"IDS_TEST\"\r\n                                                                            jsonField={'jsondata'}\r\n                                                                            pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                                                                            showStatusLink={true}\r\n                                                                            subFieldsLabel={true}\r\n                                                                            statusFieldName=\"stransdisplaystatus\"\r\n                                                                            statusField=\"ntransactionstatus\"\r\n                                                                            needMultiSelect={true}\r\n                                                                            subFields={this.state.testListColumns || []}\r\n                                                                            moreField={this.state.testMoreField}\r\n                                                                            needValidation={false}\r\n                                                                            showStatusName={true}\r\n                                                                            needFilter={false}\r\n                                                                            filterColumnData={this.props.filterTransactionList}\r\n                                                                            searchListName=\"searchedTest\"\r\n                                                                            searchRef={this.searchTestRef}\r\n                                                                            filterParam={this.state.filterTestParam}\r\n                                                                            selectionField=\"ntransactionstatus\"\r\n                                                                            selectionFieldName=\"stransdisplaystatus\"\r\n                                                                            // childTabsKey={[\"RegistrationTestComment\"]}\r\n                                                                            childTabsKey={[\"RegistrationParameter\", \"RegistrationTestComment\", \"RegistrationTestAttachment\"]}\r\n                                                                            handlePageChange={this.handleTestPageChange}\r\n                                                                            buttonCount={5}\r\n                                                                            skip={this.state.testskip}\r\n                                                                            take={this.state.testtake}\r\n                                                                            showMoreResetList={true}\r\n                                                                            showMoreResetListName=\"RegistrationGetSample\"\r\n                                                                            selectionList={this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                                                            selectionColorField=\"scolorhexcode\"\r\n                                                                            // selectionList=\r\n                                                                            // actionIcons={\r\n                                                                            //     [{ title: \"EditTest\", controlname: \"faPencilAlt\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\r\n                                                                            //     { title: \"Add Intrument\", controlname: \"faMicroscope\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedInstrumentId) === -1, onClick: this.addREInstrument, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedInstrumentId } },\r\n                                                                            //     { title: \"Add Material\", controlname: \"faFlask\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedMaterailId) === -1 },\r\n                                                                            //     { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }]\r\n                                                                            // }\r\n                                                                            commonActions={\r\n                                                                                <>\r\n                                                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                                    <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                                                                        {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                                                        <Nav.Link name=\"adddeputy\" className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                                            //title={\"Add Test\"}\r\n                                                                                            data-for=\"tooltip-common-wrap\"\r\n                                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDTEST\" })}\r\n                                                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.addTestId) === -1}\r\n                                                                                            onClick={() => this.props.addMoreTest({\r\n                                                                                                ...this.state.addTestParam,\r\n                                                                                                skip: this.state.skip, take: (this.state.skip + this.state.take)\r\n                                                                                            }, this.state.addTestId)}\r\n                                                                                        >\r\n                                                                                            <FontAwesomeIcon icon={faPlus} />\r\n                                                                                        </Nav.Link>\r\n\r\n                                                                                        <Nav.Link\r\n                                                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                                            //title={\"Cancel/Reject Test\"}\r\n                                                                                            data-for=\"tooltip-common-wrap\"\r\n                                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCELREJECTTEST\" })}\r\n                                                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.cancelId) === -1}\r\n                                                                                            onClick={() => this.cancelRecord(this.state.cancelId, this.state.testskip, this.state.testtake)}>\r\n                                                                                            <Reject className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                                        </Nav.Link>\r\n                                                                                    </ProductList>\r\n                                                                                    {/* </Tooltip> */}\r\n                                                                                </>\r\n                                                                            }\r\n                                                                        />\r\n                                                                    </Card.Body>\r\n                                                                </Card>\r\n                                                            </ContentPanel>\r\n                                                        </SplitterLayout>\r\n                                                    </div>\r\n                                                    <ContentPanel style={this.state.showSample === true ? { display: \"block\" } : { display: \"none\" }}>\r\n                                                        <Card className=\"border-0\">\r\n                                                            <Card.Body className='p-0'>\r\n                                                                <Row>\r\n                                                                    <Col md={12}>\r\n                                                                        <Card className='p-0'>\r\n                                                                            <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                                <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                                                                    <h4 >{this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}</h4>\r\n                                                                                </span>\r\n                                                                                {/* <button className=\"btn btn-primary btn-padd-custom\" style={{ float: \"right\" }}\r\n                                                                                    onClick={() => this.showSubSample()}\r\n                                                                                >\r\n                                                                                    <FontAwesomeIcon icon={faEye}></FontAwesomeIcon> { }\r\n                                                                                    {this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}\r\n                                                                                </button> */}\r\n                                                                                <button className=\"btn btn-primary btn-padd-custom\" style={{ \"float\": \"right\", \"margin-right\": \"6px\" }}\r\n                                                                                    onClick={() => this.showTest()}\r\n                                                                                >\r\n                                                                                    <FontAwesomeIcon icon={faEye}></FontAwesomeIcon> { }\r\n                                                                                    {this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                                                                </button>\r\n                                                                            </Card.Header>\r\n                                                                            <Card.Body>\r\n                                                                                <PerfectScrollbar>\r\n                                                                                    <div style={{ height: this.state.initialVerticalWidth }}>\r\n                                                                                        {this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length === 1 ?\r\n                                                                                            <SampleInfoView\r\n                                                                                                data={(this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length > 0) ?\r\n                                                                                                    this.props.Login.masterData.selectedSample[this.props.Login.masterData.selectedSample.length - 1] : {}}\r\n                                                                                                SingleItem={this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample ?\r\n                                                                                                    this.state.SingleItem : []}\r\n                                                                                                screenName=\"IDS_SAMPLEINFO\"\r\n                                                                                                userInfo={this.props.Login.userInfo}\r\n\r\n                                                                                            />\r\n\r\n                                                                                            :\r\n                                                                                            <SampleGridTab\r\n                                                                                                userInfo={this.props.Login.masterData.userInfo || {}}\r\n                                                                                                GridData={this.props.Login.masterData.selectedSample || []}\r\n                                                                                                masterData={this.props.Login.masterData}\r\n                                                                                                inputParam={this.props.Login.inputParam}\r\n                                                                                                dataState={this.state.sampleGridDataState}\r\n                                                                                                dataStateChange={this.sampleInfoDataStateChange}\r\n                                                                                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                                detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                                                                                primaryKeyField={\"npreregno\"}\r\n                                                                                                expandField=\"expanded\"\r\n                                                                                                screenName=\"IDS_SAMPLEINFO\"\r\n                                                                                                jsonField={\"jsondata\"}\r\n                                                                                            />\r\n                                                                                        }\r\n                                                                                    </div>\r\n                                                                                </PerfectScrollbar>\r\n                                                                            </Card.Body>\r\n                                                                        </Card>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </Card.Body>\r\n                                                        </Card>\r\n                                                    </ContentPanel>\r\n                                                    {/* <ContentPanel style={this.state.showSubSample === true ? { display: \"block\" } : { display: \"none\" }}>\r\n                                                        <Card className=\"border-0\">\r\n                                                            <Card.Body className='p-0'>\r\n                                                                <Row>\r\n                                                                    <Col md={12}>\r\n                                                                        <Card className='p-0'>\r\n                                                                            <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                                <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                                                                    <h4 >{this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}</h4>\r\n                                                                                </span>\r\n                                                                                <button className=\"btn btn-primary btn-padd-custom\" style={{ float: \"right\" }}\r\n                                                                                    onClick={() => this.showSample()}\r\n                                                                                >\r\n                                                                                    <FontAwesomeIcon icon={faEye}></FontAwesomeIcon> { }\r\n                                                                                    {this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n                                                                                </button>\r\n                                                                                <button className=\"btn btn-primary btn-padd-custom\" style={{ \"float\": \"right\", \"margin-right\": \"6px\" }}\r\n                                                                                    onClick={() => this.showTest()}\r\n                                                                                >\r\n                                                                                    <FontAwesomeIcon icon={faEye}></FontAwesomeIcon> { }\r\n                                                                                    {this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                                                                </button>\r\n                                                                            </Card.Header>\r\n                                                                            <Card.Body>\r\n                                                                                <PerfectScrollbar>\r\n                                                                                    <div style={{ height: this.state.initialVerticalWidth }}>\r\n                                                                                        {this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length === 1 ?\r\n                                                                                            <SampleInfoView\r\n                                                                                                data={(this.props.Login.masterData.selectedSubSample && this.props.Login.masterData.selectedSubSample.length > 0) ?\r\n                                                                                                    this.props.Login.masterData.selectedSubSample[this.props.Login.masterData.selectedSubSample.length - 1] : {}}\r\n                                                                                                SingleItem={this.props.Login.masterData.selectedSubSample && this.props.Login.masterData.selectedSubSample ?\r\n                                                                                                    this.state.SubSampleSingleItem : []}\r\n                                                                                                screenName=\"IDS_SUBSAMPLEINFO\"\r\n                                                                                                userInfo={this.props.Login.userInfo}\r\n\r\n                                                                                            />\r\n\r\n                                                                                            :\r\n                                                                                            <SampleGridTab\r\n                                                                                                userInfo={this.props.Login.masterData.userInfo || {}}\r\n                                                                                                GridData={this.props.Login.masterData.selectedSubSample || []}\r\n                                                                                                masterData={this.props.Login.masterData}\r\n                                                                                                inputParam={this.props.Login.inputParam}\r\n                                                                                                dataState={this.state.sampleGridDataState}\r\n                                                                                                dataStateChange={this.sampleInfoDataStateChange}\r\n                                                                                                extractedColumnList={this.gridfillingColumn(this.state.SubSamDynamicGridItem) || []}\r\n                                                                                                detailedFieldList={this.gridfillingColumn(this.state.SubSamDynamicGridMoreField) || []}\r\n                                                                                                primaryKeyField={\"npreregno\"}\r\n                                                                                                expandField=\"expanded\"\r\n                                                                                                screenName=\"IDS_SUBSAMPLEINFO\"\r\n                                                                                                jsonField={\"jsondata\"}\r\n                                                                                            />\r\n                                                                                        }\r\n                                                                                    </div>\r\n                                                                                </PerfectScrollbar>\r\n                                                                            </Card.Body>\r\n                                                                        </Card>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </Card.Body>\r\n                                                        </Card>\r\n                                                    </ContentPanel> */}\r\n                                                </div>\r\n                                                <div>\r\n                                                    <PerfectScrollbar>\r\n                                                        <div style={{ height: \"calc(110vh - \" + (+this.state.initialVerticalWidth + 100) + \"px)\" }}>\r\n                                                            {this.state.showSample ?\r\n\r\n                                                                <CustomTabs activeKey={this.props.Login.activeSampleTab ? this.props.Login.activeSampleTab === 'IDS_SAMPLEATTACHMENTS' ? 'IDS_ATTACHMENTS' : this.props.Login.activeSampleTab : 'IDS_ATTACHMENTS'}\r\n                                                                    tabDetail={this.sampleTabDetail()} onTabChange={this.onSampleTabChange} /> :\r\n\r\n                                                                this.state.showTest ?\r\n                                                                    <CustomTabs activeKey={this.props.Login.activeTestTab ? this.props.Login.activeTestTab === 'IDS_TESTCOMMENTS' ? 'IDS_TESTCOMMENTS' : this.props.Login.activeTestTab : 'IDS_PARAMETERRESULTS'}\r\n                                                                        tabDetail={this.testTabDetail()}\r\n                                                                        onTabChange={this.ontestTabChange} />\r\n                                                                    // <Card>\r\n                                                                    /* <Card.Header style={{ \"borderBottom\": \"0px\", \"padding-top\": \"1px\" }}>\r\n                                                                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                                                                            <h4 className=\"card-title\">Parameter Results</h4>\r\n                                                                        </span>\r\n                                                                    </Card.Header> */\r\n\r\n                                                                    // </Card>\r\n                                                                    // : this.state.showSubSample ?\r\n                                                                    //     <CustomTabs activeKey={this.props.Login.activeSampleTab ? this.props.Login.activeSampleTab === 'IDS_SAMPLEATTACHMENTS' ? 'IDS_ATTACHMENTS' : this.props.Login.activeSampleTab : 'IDS_ATTACHMENTS'}\r\n                                                                    //         tabDetail={this.subsampleTabDetail()}\r\n                                                                    //         onTabChange={this.onSubSampleTabChange} />\r\n\r\n                                                                    //     : \"\"}\r\n                                                                    : \"\"}\r\n                                                        </div>\r\n                                                    </PerfectScrollbar>\r\n                                                </div>\r\n                                            </SplitterLayout>\r\n                                            :\r\n                                            this.state.layout == 2 ?\r\n                                                <ScrollBar ref={(ref) => { this._scrollBarRef = ref; }}>\r\n                                                    <div className=\"\">\r\n                                                        <>\r\n                                                            <div className=\"card_group\">\r\n                                                                <SplitterLayout\r\n                                                                    customClassName=\"detailed-inner\"\r\n                                                                    vertical\r\n                                                                    borderColor=\"#999\"\r\n                                                                    primaryIndex={1}\r\n                                                                    secondaryInitialSize={400}\r\n                                                                    onSecondaryPaneSizeChange={this.verticalPaneSizeChange}\r\n\r\n                                                                >\r\n                                                                    <div>\r\n                                                                        <ContentPanel style={this.state.showTest === true ? { display: \"block\", background: \"#FFFF\" } : { display: \"none\", background: \"#FFFF\" }} >\r\n                                                                            <Card className=\"border-0\">\r\n                                                                                <Card.Body className='p-0'>\r\n                                                                                    <Row className='no-gutters'>\r\n                                                                                        <Col md={12}>\r\n                                                                                            <Card>\r\n                                                                                                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                                                    <span style={{ display: \"inline-block\" }}>\r\n                                                                                                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                                                                                                    </span>\r\n                                                                                                    <button className=\"btn btn-primary btn-padd-custom\" style={{ float: \"right\" }}\r\n                                                                                                        onClick={() => this.showTestAndSample()}\r\n                                                                                                    >\r\n                                                                                                        <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                                                                                        {this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n                                                                                                    </button>\r\n                                                                                                    {/* </div> */}\r\n                                                                                                </Card.Header>\r\n                                                                                                <Card.Body className='p-0'>\r\n                                                                                                    <TransactionListMasterJson\r\n                                                                                                        paneHeight={this.state.initialVerticalWidth}\r\n                                                                                                        masterList={this.props.Login.masterData.searchedTest || testList}\r\n                                                                                                        selectedMaster={this.props.Login.masterData.selectedTest}\r\n                                                                                                        primaryKeyField=\"ntransactiontestcode\"\r\n                                                                                                        getMasterDetail={this.props.getTestChildTabDetailRegistration}\r\n                                                                                                        inputParam={{\r\n                                                                                                            ...this.state.testChildGetParam,\r\n                                                                                                            resultDataState: this.state.resultDataState,\r\n                                                                                                            testCommentDataState: this.state.testCommentDataState,\r\n                                                                                                            testAttachmentDataState: this.state.testAttachmentDataState,\r\n                                                                                                        }}\r\n                                                                                                        additionalParam={[]}\r\n                                                                                                        mainField=\"stestsynonym\"\r\n                                                                                                        selectedListName=\"selectedTest\"\r\n                                                                                                        objectName=\"test\"\r\n                                                                                                        listName=\"IDS_TEST\"\r\n                                                                                                        jsonField={'jsondata'}\r\n                                                                                                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                                                                                                        showStatusLink={true}\r\n                                                                                                        subFieldsLabel={true}\r\n                                                                                                        statusFieldName=\"stransdisplaystatus\"\r\n                                                                                                        statusField=\"ntransactionstatus\"\r\n                                                                                                        needMultiSelect={true}\r\n                                                                                                        subFields={this.state.testListColumns || []}\r\n                                                                                                        moreField={this.state.testMoreField}\r\n                                                                                                        needValidation={false}\r\n                                                                                                        showStatusName={true}\r\n                                                                                                        needFilter={false}\r\n                                                                                                        filterColumnData={this.props.filterTransactionList}\r\n                                                                                                        searchListName=\"searchedTest\"\r\n                                                                                                        searchRef={this.searchTestRef}\r\n                                                                                                        filterParam={this.state.filterTestParam}\r\n                                                                                                        selectionField=\"ntransactionstatus\"\r\n                                                                                                        selectionFieldName=\"stransdisplaystatus\"\r\n                                                                                                        // childTabsKey={[\"RegistrationTestComment\"]}\r\n                                                                                                        childTabsKey={[\"RegistrationParameter\", \"RegistrationTestComment\"]}\r\n                                                                                                        handlePageChange={this.handleTestPageChange}\r\n                                                                                                        buttonCount={5}\r\n                                                                                                        skip={this.state.testskip}\r\n                                                                                                        take={this.state.testtake}\r\n                                                                                                        showMoreResetList={true}\r\n                                                                                                        showMoreResetListName=\"RegistrationGetSample\"\r\n                                                                                                        selectionList={this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                                                                                        selectionColorField=\"scolorhexcode\"\r\n                                                                                                        // selectionList=\r\n                                                                                                        // actionIcons={\r\n                                                                                                        //     [{ title: \"EditTest\", controlname: \"faPencilAlt\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\r\n                                                                                                        //     { title: \"Add Intrument\", controlname: \"faMicroscope\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedInstrumentId) === -1, onClick: this.addREInstrument, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedInstrumentId } },\r\n                                                                                                        //     { title: \"Add Material\", controlname: \"faFlask\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedMaterailId) === -1 },\r\n                                                                                                        //     { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }]\r\n                                                                                                        // }\r\n                                                                                                        commonActions={\r\n                                                                                                            <>\r\n                                                                                                                {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                                                                <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                                                                                                    {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                                                                                    <Nav.Link name=\"adddeputy\" className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                                                                        //title={\"Add Test\"}\r\n                                                                                                                        data-for=\"tooltip-common-wrap\"\r\n                                                                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDTEST\" })}\r\n                                                                                                                        hidden={this.state.userRoleControlRights.indexOf(this.state.addTestId) === -1}\r\n                                                                                                                        onClick={() => this.props.addMoreTest({\r\n                                                                                                                            ...this.state.addTestParam,\r\n                                                                                                                            skip: this.state.skip, take: (this.state.skip + this.state.take)\r\n                                                                                                                        }, this.state.addTestId)}\r\n                                                                                                                    >\r\n                                                                                                                        <FontAwesomeIcon icon={faPlus} />\r\n                                                                                                                    </Nav.Link>\r\n\r\n                                                                                                                    <Nav.Link\r\n                                                                                                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                                                                        //title={\"Cancel/Reject Test\"}\r\n                                                                                                                        data-for=\"tooltip-common-wrap\"\r\n                                                                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCELREJECTTEST\" })}\r\n                                                                                                                        hidden={this.state.userRoleControlRights.indexOf(this.state.cancelId) === -1}\r\n                                                                                                                        onClick={() => this.cancelRecord(this.state.cancelId, this.state.testskip, this.state.testtake)}>\r\n                                                                                                                        <Reject className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                                                                    </Nav.Link>\r\n                                                                                                                </ProductList>\r\n                                                                                                                {/* </Tooltip> */}\r\n                                                                                                            </>\r\n                                                                                                        }\r\n                                                                                                    />\r\n                                                                                                </Card.Body>\r\n                                                                                            </Card>\r\n                                                                                        </Col>\r\n                                                                                    </Row>\r\n                                                                                </Card.Body>\r\n                                                                            </Card>\r\n                                                                        </ContentPanel>\r\n                                                                        <ContentPanel style={this.state.showSample === true ? { display: \"block\" } : { display: \"none\" }}>\r\n                                                                            <Card className=\"border-0\">\r\n                                                                                <Card.Body className='p-0'>\r\n                                                                                    <Card className='p-0'>\r\n                                                                                        <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                                            <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                                                                                <h4 >{this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}</h4>\r\n                                                                                            </span>\r\n                                                                                            <button className=\"btn btn-primary btn-padd-custom\" style={{ float: \"right\" }}\r\n                                                                                                onClick={() => this.showTestAndSample()}>\r\n                                                                                                <FontAwesomeIcon icon={faEye}></FontAwesomeIcon> { }\r\n                                                                                                {this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                                                                            </button>\r\n                                                                                        </Card.Header>\r\n                                                                                        <Card.Body>\r\n                                                                                            <PerfectScrollbar>\r\n                                                                                                <div style={{ height: this.state.initialVerticalWidth }}>\r\n\r\n                                                                                                    {this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length === 1 ?\r\n                                                                                                        <SampleInfoView\r\n                                                                                                            data={(this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length > 0) ?\r\n                                                                                                                this.props.Login.masterData.selectedSample[this.props.Login.masterData.selectedSample.length - 1] : {}}\r\n                                                                                                            SingleItem={this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample ?\r\n                                                                                                                this.state.SingleItem : []}\r\n                                                                                                            screenName=\"IDS_SAMPLEINFO\"\r\n                                                                                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                                                                                        />\r\n                                                                                                        :\r\n                                                                                                        <SampleGridTab\r\n                                                                                                            userInfo={this.props.Login.masterData.userInfo || {}}\r\n                                                                                                            GridData={this.props.Login.masterData.selectedSample || []}\r\n                                                                                                            masterData={this.props.Login.masterData}\r\n                                                                                                            inputParam={this.props.Login.inputParam}\r\n                                                                                                            dataState={this.state.sampleGridDataState}\r\n                                                                                                            dataStateChange={this.sampleInfoDataStateChange}\r\n                                                                                                            extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                                            detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                                                                                            primaryKeyField={\"npreregno\"}\r\n                                                                                                            expandField=\"expanded\"\r\n                                                                                                            screenName=\"IDS_SAMPLEINFO\"\r\n                                                                                                            jsonField={\"jsondata\"}\r\n                                                                                                        />\r\n                                                                                                    }\r\n                                                                                                </div>\r\n                                                                                            </PerfectScrollbar>\r\n                                                                                        </Card.Body>\r\n                                                                                    </Card>\r\n                                                                                </Card.Body>\r\n                                                                            </Card>\r\n                                                                        </ContentPanel>\r\n                                                                    </div>\r\n                                                                    <div>\r\n                                                                        <PerfectScrollbar>\r\n                                                                            <div style={{ height: \"calc(110vh - \" + (+this.state.initialVerticalWidth + 100) + \"px)\" }}>\r\n                                                                                {this.state.showSample ?\r\n                                                                                    <CustomTabs activeKey={this.props.Login.activeSampleTab ? this.props.Login.activeSampleTab === 'IDS_SAMPLEATTACHMENTS' ? 'IDS_ATTACHMENTS' : this.props.Login.activeSampleTab : 'IDS_ATTACHMENTS'} tabDetail={this.sampleTabDetail()} onTabChange={this.onSampleTabChange} /> :\r\n                                                                                    this.state.showTest ?\r\n                                                                                        // <CustomTabs activeKey={this.props.Login.activeTestTab ? this.props.Login.activeTestTab === 'IDS_TESTCOMMENTS' ? 'IDS_TESTCOMMENTS' : this.props.Login.activeTestTab : 'IDS_PARAMETERRESULTS'} tabDetail={this.testTabDetail()} onTabChange={this.ontestTabChange} />\r\n                                                                                        <Card>\r\n                                                                                            <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                                                <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                                                                                                    <h4 className=\"card-title\">Parameter Results</h4>\r\n                                                                                                </span>\r\n                                                                                            </Card.Header>\r\n                                                                                            <CustomTabs activeKey={this.props.Login.activeTestTab ? this.props.Login.activeTestTab === 'IDS_TESTCOMMENTS' ? 'IDS_TESTCOMMENTS' : this.props.Login.activeTestTab : 'IDS_PARAMETERRESULTS'}\r\n                                                                                                tabDetail={this.testTabDetail()}\r\n                                                                                                onTabChange={this.ontestTabChange} />\r\n                                                                                        </Card>\r\n                                                                                        : \"\"}\r\n                                                                            </div>\r\n                                                                        </PerfectScrollbar>\r\n                                                                    </div>\r\n                                                                </SplitterLayout>\r\n                                                            </div>\r\n                                                        </>\r\n                                                    </div>\r\n                                                </ScrollBar> :\r\n                                                this.state.layout == 3 ?\r\n                                                    <>\r\n                                                        {this.state.showSample ?\r\n\r\n                                                            <CustomTabs activeKey={this.props.Login.activeSampleTab ? this.props.Login.activeSampleTab === 'IDS_SAMPLEATTACHMENTS' ? 'IDS_ATTACHMENTS' : this.props.Login.activeSampleTab : 'IDS_ATTACHMENTS'}\r\n                                                                tabDetail={this.sampleTabDetail()} onTabChange={this.onSampleTabChange} /> :\r\n\r\n                                                            this.state.showTest ?\r\n                                                                <Card>\r\n                                                                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                                                                            <h4 className=\"card-title\">Parameter Results</h4>\r\n                                                                        </span>\r\n                                                                    </Card.Header>\r\n                                                                    <CustomTabs activeKey={this.props.Login.activeTestTab ? this.props.Login.activeTestTab === 'IDS_TESTCOMMENTS' ? 'IDS_TESTCOMMENTS' : this.props.Login.activeTestTab : 'IDS_PARAMETERRESULTS'}\r\n                                                                        tabDetail={this.testTabDetail()}\r\n                                                                        onTabChange={this.ontestTabChange} />\r\n                                                                </Card>\r\n                                                                : \"\"}\r\n                                                    </>\r\n                                                    : \"\"}\r\n                                    </PerfectScrollbar>\r\n                                </SplitterLayout>\r\n                            </ListWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper >\r\n                {\r\n                    this.props.Login.openPortal ?\r\n                        <PortalModal>\r\n                            <PreRegisterSlideOutModal\r\n                                postParamList={this.postParamList}\r\n                                PrevoiusLoginData={this.PrevoiusLoginData}\r\n                                closeModal={this.closeModal}\r\n                                operation={\"create\"}\r\n                                screenName={\"IDS_REGISTRATION\"}\r\n                                onSaveClick={this.onSaveClick}\r\n                                validateEsign={this.validateEsign}\r\n                                updateStore={this.props.updateStore}\r\n                                comboComponents={this.state.comboComponents}\r\n                                withoutCombocomponent={this.state.withoutCombocomponent}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                fromDate={this.fromDate}\r\n                                toDate={this.toDate}\r\n                                specBasedComponent={this.state.specBasedComponent}\r\n                                mandatoryFields={[\r\n                                    { \"idsName\": \"IDS_PRODUCTCATEGORY\", \"dataField\": \"nproductcatcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                                    { \"idsName\": \"IDS_PRODUCTNAME\", \"dataField\": \"sproductname\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }]}\r\n                            />\r\n                        </PortalModal>\r\n                        : \"\"\r\n                }\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        //|| this.props.Login.loadEsign}\r\n                        closeModal={this.props.Login.loadRegSubSample ||\r\n                            this.props.Login.loadFile ||\r\n                            this.props.Login.loadChildTest ? this.closeChildModal : this.closeModal}\r\n                        size={this.props.Login.parentPopUpSize}\r\n                        loginoperation={this.props.Login.loadPrinter ? true : false}\r\n                        buttonLabel={this.props.Login.loadPrinter ? \"print\" : undefined}\r\n                        operation={this.props.Login.loadComponent || this.props.Login.loadTest || this.props.Login.loadSource || this.props.Login.loadFile ? this.props.Login.childoperation : this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.loadTest || this.props.Login.loadFile ?\r\n                            this.props.Login.ChildscreenName : this.props.Login.screenName}\r\n                        esign={this.props.Login.loadEsign}\r\n                        innerPopup={this.props.Login.loadComponent}\r\n                        onSaveClick={this.props.Login.loadRegSubSample ? this.onSaveSubSampleClick : this.props.Login.loadFile ? this.onSaveFileClick :\r\n                            this.props.Login.loadPrinter ? this.onSavePrinterClick :\r\n                                this.props.Login.loadChildTest ? this.onSaveChildTestClick : this.onSaveClick}\r\n                        validateEsign={this.validateEsign}\r\n                        showSaveContinue={this.props.Login.showSaveContinue}\r\n                        selectedRecord={!this.props.Login.loadEsign ? this.props.Login.loadComponent ? this.state.selectComponent : this.props.Login.loadPrinter ? this.state.selectedPrinterData\r\n                            : this.props.Login.loadTest ? this.state.selectedTestData : this.props.Login.loadFile ? this.state.selectedFile\r\n                                : this.props.Login.loadPoolSource ? this.state.selectedSourceData : this.state.selectedRecord : this.state.selectedRecord}\r\n                        mandatoryFields={this.mandatoryList(this.props.Login.loadPreregister,\r\n                            this.props.Login.loadPrinter, this.props.Login.loadFile,\r\n                            this.props.Login.loadChildTest, this.props.Login.loadRegSubSample)}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.loadRegSubSample ?\r\n                                <AddSubSample\r\n                                    editfield={this.props.Login.masterData.DynamicDesign && JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)}\r\n                                    Component={this.props.Login.lstComponent || []}\r\n                                    selectComponent={this.state.selectedRecord}\r\n                                    templateData={this.props.Login.masterData.SubSampleTemplate &&\r\n                                        this.props.Login.masterData.SubSampleTemplate.jsondata}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    timeZoneList={this.props.Login.timeZoneList}\r\n                                    defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                    handleDateChange={this.handleDateSubSampleChange}\r\n                                    onInputOnChange={this.onInputOnSubSampleChange}\r\n                                    onNumericInputChange={this.onNumericInputSubSampleChange}\r\n                                    comboData={this.props.Login.regSubSamplecomboData}\r\n                                    onComboChange={this.onComboSubSampleChange}\r\n                                    onComponentChange={this.onComponentChange}\r\n                                    TestCombined={this.props.Login.TestCombined || []}\r\n                                    TestChange={this.onComboChange}\r\n                                    selectedTestData={this.state.selectedRecord}\r\n                                    childoperation={this.props.Login.operation}\r\n                                    specBasedComponent={this.state.specBasedComponent}\r\n\r\n                                />\r\n                                : this.props.Login.loadFile ? <AddFile\r\n                                    selectedFile={this.state.selectedFile || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onDrop={this.onDropComponentFile}\r\n                                    deleteAttachment={this.deleteAttachment}\r\n                                    actionType={this.state.actionType}\r\n                                    maxSize={20}\r\n                                    maxFiles={1}\r\n                                /> :\r\n                                    this.props.Login.loadPrinter ?\r\n                                        <AddPrinter\r\n                                            printer={this.props.Login.printer}\r\n                                            selectedPrinterData={this.state.selectedPrinterData}\r\n                                            PrinterChange={this.PrinterChange}\r\n                                        /> : this.props.Login.loadChildTest ? <AddTest\r\n                                            TestCombined={this.props.Login.availableTest}\r\n                                            selectedTestData={this.state.selectedRecord}\r\n                                            TestChange={this.onComboChange}\r\n                                        /> : \"\"\r\n                        }\r\n                    />\r\n                }\r\n                {this.state.showConfirmAlert ? this.confirmAlert() : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    handleDateSubSampleChange = (dateValue, dateName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onComponentChange = (comboData, fieldName, nneedsubsample) => {\r\n        if (comboData !== null) {\r\n            //  if (!nneedsubsample) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            if (fieldName === 'ntzdreceivedate') {\r\n                selectedRecord[\"ntzdreceivedate\"] = comboData;\r\n                this.setState({ selectedRecord })\r\n            } else {\r\n                // const oldspecsampletypecode = selectComponent.nspecsampletypecode\r\n                // if (oldspecsampletypecode !== comboData.item.nspecsampletypecode) {\r\n                //     //selectComponent[\"nneedservice\"] = true;\r\n                // }\r\n                selectedRecord[fieldName] = comboData;\r\n                selectedRecord[\"Sample Name\"] = comboData.label;\r\n                selectedRecord[\"nspecsampletypecode\"] = comboData.item.nspecsampletypecode;\r\n                selectedRecord[\"ntestgrouptestcode\"] = [];\r\n\r\n                this.props.componentTest(selectedRecord, true,this.state.specBasedComponent,\r\n                    this.props.Login.Conponent)\r\n            }\r\n\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: {\r\n            //         selectComponent\r\n            //     }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n            // } else {\r\n            //     const selectComponent = this.state.selectComponent || {};\r\n            //     selectComponent[fieldName] = comboData;\r\n            //     // selectComponent[\"nspecsampletypecode\"] = comboData.item.nspecsampletypecode ?  comboData.item.nspecsampletypecode : -1;\r\n            //     this.setState({ selectComponent })\r\n            // }\r\n        }\r\n\r\n    }\r\n    onInputOnSubSampleChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === 'timeonly') {\r\n                selectedRecord['dateonly'] = false;\r\n            }\r\n            if (event.target.name === 'dateonly') {\r\n                selectedRecord['timeonly'] = false;\r\n            }\r\n            selectedRecord[event.target.name] = event.target.checked;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    onComboSubSampleChange = (comboData, control, customName) => {\r\n        let parentList = []\r\n        let childComboList = []\r\n        let childColumnList = {}\r\n\r\n        let comboName = customName || control.label;\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        const inputParem = {\r\n            child: control.child,\r\n            source: control.source,\r\n            primarykeyField: control.valuemember,\r\n            value: comboData.value,\r\n            item: comboData.item,\r\n            label: comboName,\r\n            nameofdefaultcomp: control.name\r\n        }\r\n        if (comboData) {\r\n            selectedRecord[comboName] = comboData;\r\n        } else {\r\n            selectedRecord[comboName] = []\r\n        }\r\n        if (control.child && control.child.length > 0) {\r\n            childComboList = getSameRecordFromTwoArrays(this.state.regSubSamplecomboComponents,\r\n                control.child, \"label\")\r\n            childColumnList = {};\r\n            childComboList.map(columnList => {\r\n                const val = comboChild(this.state.regSubSamplecomboComponents,\r\n                    columnList, childColumnList, false);\r\n                childColumnList = val.childColumnList\r\n            })\r\n\r\n            parentList = getSameRecordFromTwoArrays(this.state.regSubSamplewithoutCombocomponent,\r\n                control.child, \"label\")\r\n\r\n            this.props.getChildValues(inputParem,\r\n                this.props.Login.userInfo, selectedRecord, this.props.Login.regSubSamplecomboData,\r\n                childComboList, childColumnList, this.state.regSubSamplewithoutCombocomponent,\r\n                [...childComboList, ...parentList])\r\n        } else {\r\n            this.setState({ selectedRecord })\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: { selectedRecord }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onNumericInputSubSampleChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onSaveSubSampleClick = (saveType, formRef) => {\r\n        const operation = this.props.Login.operation;\r\n        if (operation === 'create') {\r\n            let objSubSample = this.state.selectedRecord;\r\n            const defaulttimezone = this.props.Login.defaulttimezone;\r\n            const userInfo = this.props.Login.userInfo;\r\n\r\n            let saveSubSample = {};\r\n            let sampleList = [];\r\n            if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake), \"npreregno\");\r\n            } else {\r\n                sampleList = this.props.Login.masterData.RegistrationGetSample && this.props.Login.masterData.RegistrationGetSample.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake);\r\n            }\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.selectedSample, sampleList, 'npreregno')\r\n           \r\n            const findSampleAlloSpec = [...new Set(sampleList.map(item => item.nallottedspeccode))];\r\n            if(this.state.specBasedComponent){\r\n                saveSubSample[\"nspecsampletypecode\"]= objSubSample[\"nspecsampletypecode\"]? objSubSample[\"nspecsampletypecode\"]:-1\r\n                saveSubSample[\"ncomponentcode\"]= objSubSample[\"ncomponentcode\"]? objSubSample[\"ncomponentcode\"].value:-1\r\n            }else{\r\n                const findSampleSpec = [...new Set(sampleList.map(item => item.nspecsampletypecode))];\r\n                saveSubSample[\"nspecsampletypecode\"] = findSampleSpec[0] ? findSampleSpec[0] : -1;\r\n            }\r\n           \r\n            saveSubSample[\"jsondata\"] = {}\r\n            const dateList = []\r\n            this.props.Login.masterData.SubSampleTemplate &&\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n                    row.children.map(column => {\r\n                        column.children.map(component => {\r\n                            if (component.hasOwnProperty(\"children\")) {\r\n                                let componentrowlabel = ''\r\n                                let componentrowvalue = ''\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.inputtype === \"combo\") {\r\n                                        saveSubSample[\"jsondata\"][componentrow.label] = objSubSample[componentrow.label] ?\r\n                                            { value: objSubSample[componentrow.label].value, label: objSubSample[componentrow.label].label } : -1\r\n                                        if (componentrow.mandatory || objSubSample[componentrow.label]) {\r\n                                            componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n                                            componentrowvalue = componentrowvalue + ' ' + objSubSample[componentrow.label].label\r\n                                        }\r\n                                    }\r\n                                    else if (componentrow.inputtype === \"date\") {\r\n                                        if (componentrow.mandatory) {\r\n                                            saveSubSample[\"jsondata\"][componentrow.label] = convertDateTimetoString(objSubSample[componentrow.label] ?\r\n                                                objSubSample[componentrow.label] : new Date(), userInfo);\r\n                                        } else {\r\n                                            saveSubSample[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                                convertDateTimetoString(objSubSample[componentrow.label] ?\r\n                                                    objSubSample[componentrow.label] : new Date(), userInfo) :\r\n                                                objSubSample[componentrow.label] ? convertDateTimetoString(objSubSample[componentrow.label] ?\r\n                                                    objSubSample[componentrow.label] : new Date(), userInfo) : \"\";\r\n                                        }\r\n                                        if (componentrow.timezone) {\r\n                                            saveSubSample[\"jsondata\"][`tz${componentrow.label}`] = objSubSample[`tz${componentrow.label}`] ?\r\n                                                { value: objSubSample[`tz${componentrow.label}`].value, label: objSubSample[`tz${componentrow.label}`].label } :\r\n                                                defaulttimezone ? defaulttimezone : -1\r\n                                        }\r\n                                        dateList.push(componentrow.label)\r\n                                    }\r\n\r\n                                    else {\r\n                                        saveSubSample[\"jsondata\"][componentrow.label] = objSubSample[componentrow.label] ?\r\n                                            objSubSample[componentrow.label] : \"\"\r\n\r\n                                        if (objSubSample[componentrow.label]) {\r\n                                            componentrowlabel = componentrowlabel + '&' + objSubSample.label\r\n                                            componentrowvalue = componentrowvalue + ' ' + objSubSample[componentrow.label]\r\n                                        }\r\n                                    }\r\n                                })\r\n                                saveSubSample[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\r\n                            }\r\n                            else {\r\n                                if (component.inputtype === \"combo\") {\r\n                                    saveSubSample[\"jsondata\"][component.label] = objSubSample[component.label] ?\r\n                                        { value: objSubSample[component.label].value, label: objSubSample[component.label].label } : -1\r\n                                }\r\n                                else if (component.inputtype === \"date\") {\r\n                                    if (component.mandatory) {\r\n                                        saveSubSample[\"jsondata\"][component.label] = convertDateTimetoString(objSubSample[component.label] ?\r\n                                            objSubSample[component.label] : new Date(), userInfo);\r\n                                    } else {\r\n                                        saveSubSample[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                            convertDateTimetoString(objSubSample[component.label] ?\r\n                                                objSubSample[component.label] : new Date(), userInfo) :\r\n                                            objSubSample[component.label] ? convertDateTimetoString(objSubSample[component.label] ?\r\n                                                objSubSample[component.label] : new Date(), userInfo) : \"\";\r\n                                    }\r\n                                    if (component.timezone) {\r\n                                        saveSubSample[\"jsondata\"][`tz${component.label}`] = objSubSample[`tz${component.label}`] ?\r\n                                            { value: objSubSample[`tz${component.label}`].value, label: objSubSample[`tz${component.label}`].label } :\r\n                                            defaulttimezone ? defaulttimezone : -1\r\n                                    }\r\n                                    dateList.push(component.label)\r\n                                }\r\n                                else {\r\n                                    saveSubSample[\"jsondata\"][component.label] = objSubSample[component.label] ?\r\n                                        objSubSample[component.label] : \"\"\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        )\r\n                    })\r\n                })\r\n\r\n            saveSubSample[\"nallottedspeccode\"] = findSampleAlloSpec[0] ? findSampleAlloSpec[0] : -1;\r\n            // Component.unshift(saveSubSample);\r\n\r\n            let selectedTestData = objSubSample[\"ntestgrouptestcode\"];\r\n            const selectedTestArray = [];\r\n            selectedTestData && selectedTestData.map((item) => {\r\n                return selectedTestArray.push(item.item);\r\n            });\r\n\r\n            // const Test = this.props.Login.Test || [];\r\n            // const ArrayTest = Test[saveComponent.slno] ? Test[saveComponent.slno] : [];\r\n            //Test[saveComponent.slno] = [...ArrayTest, ...selectedTestArray]\r\n            const map = {}\r\n            map['RegistrationSample'] = saveSubSample\r\n            map['subsampleDateList'] = dateList\r\n            map['testgrouptest'] = selectedTestArray\r\n            map['npreregno'] = sampleList.map(item => item.npreregno).join(\",\")\r\n            map['userinfo'] = userInfo\r\n            map['checkBoxOperation'] = 3\r\n            map['ntype'] = 3\r\n            map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.registrationTemplate\r\n                && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;\r\n            map[\"nneedsubsample\"] = this.props.Login.masterData && this.props.Login.masterData.nneedsubsample;\r\n            map[\"checkBoxOperation\"] = 3\r\n            map[\"masterData\"] = this.props.Login.masterData\r\n            map[\"activeTestTab\"] = this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\"\r\n            map[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\"\r\n\r\n            const inputParam = {\r\n                inputData: map,\r\n                postParamList: this.postParamList,\r\n            }\r\n\r\n            this.props.saveSubSample(inputParam);\r\n        } else {\r\n            this.onUpdateSubSampleRegistration(saveType, formRef, operation);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    mandatoryList = (prereg, printer, file, childtest, regSubSample) => {\r\n        let mandatory = [];\r\n        if (file) {\r\n            mandatory = [\r\n                { \"mandatory\": true, \"idsName\": \"IDS_IMPORTFILE\", \"dataField\": \"sfilename\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\r\n            ];\r\n        }\r\n        else if (printer) {\r\n            mandatory = [\r\n                { \"mandatory\": true, \"idsName\": \"IDS_PRINTER\", \"dataField\": \"sprintername\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ]\r\n        } else if (regSubSample) {\r\n\r\n            this.props.Login.masterData.SubSampleTemplate &&\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n                    row.children.map(column => {\r\n                        column.children.map(component => {\r\n                            return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                                if (componentrow.mandatory === true) {\r\n                                    mandatory.push({ \"mandatory\": true, \"idsName\": componentrow.label, \"dataField\": componentrow.label, \"mandatoryLabel\": componentrow.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\", \"controlType\": componentrow.inputtype === \"combo\" ? \"selectbox\" : \"textbox\" })\r\n\r\n                                }\r\n                            })\r\n                                : component.mandatory === true ?\r\n                                    mandatory.push({ \"mandatory\": true, \"idsName\": component.label, \"dataField\": component.label, \"mandatoryLabel\": component.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\", \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\" }) : \"\"\r\n                        })\r\n                    })\r\n                })\r\n        }\r\n\r\n        else if (childtest) {\r\n            mandatory = [\r\n                { \"mandatory\": true, \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ];\r\n        }\r\n        return mandatory;\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedFile = this.state.selectedFile || {};\r\n        selectedFile[fieldName] = deleteAttachmentDropZone(selectedFile[fieldName], file)\r\n        this.setState({\r\n            selectedFile, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n    onSaveChildTestClick = (saveType, formRef) => {\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        const selectedSubsample = getSameRecordFromTwoArrays(masterData.selectedSubSample, masterData.RegistrationGetSample.slice(this.state.skip, (this.state.skip + this.state.take)), \"npreregno\");\r\n        const selectedSample = getSameRecordFromTwoArrays(masterData.selectedSample, masterData.RegistrationGetSample.slice(this.state.skip, (this.state.skip + this.state.take)), \"npreregno\");\r\n        //  selectedSubsample =masterData.selectedSubSample.slice(this.state.skip, (this.state.skip + this.state.take));\r\n        const ntransactionsamplecode = selectedSubsample.map(x => x.ntransactionsamplecode).join(\",\");\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate,\r\n            this.props.Login.masterData.RealToDate, this.props.Login.userInfo)\r\n        const inputData = {\r\n            TestGroupTest: this.state.selectedRecord.ntestgrouptestcode.map(value => value.item),\r\n            RegistrationSample: selectedSubsample.map(x => x.ntransactionsamplecode),\r\n            ntransactionsamplecode: ntransactionsamplecode,\r\n            userinfo: this.props.Login.userInfo,\r\n            nregtypecode: masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            nsampletypecode: masterData.RealSampleTypeValue.nsampletypecode,\r\n            ntype: 3,\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            npreregno: selectedSample &&\r\n                selectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            // ntransactionsamplecode: selectedSubsample &&\r\n            // selectedSubsample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            FromDate: obj.fromDate,\r\n            ToDate: obj.toDate,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n                && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\"\r\n        }\r\n\r\n\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"registration\",\r\n            operation: this.props.Login.operation,\r\n            methodUrl: \"Test\",\r\n            responseKeyList: [\r\n                { \"responseKey\": \"selectedSample\", \"masterDataKey\": \"RegistrationGetSample\", \"primaryKey\": \"npreregno\", \"dataAction\": \"update\" },\r\n                { \"responseKey\": \"selectedSubSample\", \"masterDataKey\": \"RegistrationGetSubSample\", \"primaryKey\": \"ntransactionsamplecode\", \"dataAction\": \"update\" },\r\n                { \"responseKey\": \"selectedTest\", \"masterDataKey\": \"RegistrationGetTest\", \"primaryKey\": \"ntransactiontestcode\", \"dataAction\": \"add\" }],\r\n            saveType, formRef,\r\n            postParamList: this.postParamList,\r\n\r\n        }\r\n        if (showEsign(this.state.controlMap, this.props.Login.userInfo.nformcode, this.props.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.createRegistrationTest(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    getRegistrationComboService = (ScreenName, operation,\r\n        primaryKeyField, masterData, userInfo, editId) => {\r\n        let data = [];\r\n        const withoutCombocomponent = []\r\n        const Layout = this.props.Login.masterData.registrationTemplate\r\n            && this.props.Login.masterData.registrationTemplate.jsondata\r\n        if (Layout !== undefined) {\r\n            Layout.map(row => {\r\n                row.children.map(column => {\r\n                    column.children.map(component => {\r\n                        return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                            if (componentrow.inputtype === \"combo\") {\r\n                                data.push(componentrow)\r\n                            } else {\r\n                                withoutCombocomponent.push(componentrow)\r\n                            }\r\n                        })\r\n                            : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component)\r\n                    })\r\n                })\r\n            })\r\n            const comboComponents = data\r\n            let childColumnList = {};\r\n            data.map(columnList => {\r\n                const val = this.comboChild(data, columnList, childColumnList, true);\r\n                data = val.data;\r\n                childColumnList = val.childColumnList\r\n            })\r\n            const mapOfFilterRegData = {\r\n                nsampletypecode: parseInt(this.props.Login.masterData.RealSampleTypeValue.nsampletypecode)\r\n            }\r\n            this.props.getPreviewTemplate(masterData, userInfo, editId,\r\n                data, this.state.selectedRecord, childColumnList,\r\n                comboComponents, withoutCombocomponent, true, false,\r\n                mapOfFilterRegData, false, \"create\", this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename)\r\n        } else {\r\n            toast.info(\"Configure the preregister template for this registrationtype\")\r\n        }\r\n    }\r\n    comboChild = (data, columnList, childColumnList, slice) => {\r\n        let retunObj = {}\r\n        // if (data.findIndex(x => x.label === columnList.label) !== -1) {\r\n        if (!childColumnList.hasOwnProperty(columnList.label)) {\r\n            if (childColumnList[columnList.label] === undefined) {\r\n                if (columnList.hasOwnProperty(\"child\")) {\r\n                    let childList = []\r\n                    columnList.child.map(childData => {\r\n                        const index = data.findIndex(x => x.label === childData.label)\r\n                        if (index !== -1) {\r\n                            childList.push(data[index])\r\n                            if (slice) {\r\n                                data = [...data.slice(0, index), ...data.slice(index + 1)]\r\n                            }\r\n                        }\r\n                    })\r\n                    childColumnList[columnList.label] = childList;\r\n                    if (childList.length > 0) {\r\n                        childList.map(y => {\r\n                            if (y.hasOwnProperty(\"child\")) {\r\n                                const val = this.comboChild(data, y, childColumnList, slice)\r\n                                retunObj[\"data\"] = val.data;\r\n                                retunObj[\"childColumnList\"] = val.childColumnList;\r\n                            } else {\r\n                                retunObj[\"data\"] = data;\r\n                                retunObj[\"childColumnList\"] = childColumnList;\r\n                            }\r\n                        })\r\n                    } else {\r\n                        retunObj[\"data\"] = data;\r\n                        retunObj[\"childColumnList\"] = childColumnList;\r\n                    }\r\n                } else {\r\n                    retunObj[\"data\"] = data;\r\n                    retunObj[\"childColumnList\"] = childColumnList;\r\n                }\r\n            } else {\r\n                retunObj[\"data\"] = data;\r\n                retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n            }\r\n        } else {\r\n            retunObj[\"data\"] = data;\r\n            retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n        }\r\n        return retunObj;\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    handleSubSamplePageChange = e => {\r\n        this.setState({\r\n            subsampleskip: e.skip,\r\n            subsampletake: e.take\r\n        });\r\n    };\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterChange = (event, labelname) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData = {\r\n            ...masterData,\r\n            [labelname]: { ...event.item }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onSampleTabChange = (tabProps) => {\r\n        const activeSampleTab = tabProps.screenName;\r\n        if (activeSampleTab !== this.props.Login.activeSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                selectedSample: this.props.Login.masterData.selectedSample,\r\n                npreregno: this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSampleTab,\r\n                activeSampleTab\r\n            }\r\n            this.props.getSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n    onSubSampleTabChange = (tabProps) => {\r\n        const activeSampleTab = tabProps.screenName;\r\n        if (activeSampleTab !== this.props.Login.activeSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                selectedSample: this.props.Login.masterData.selectedSample,\r\n                npreregno: this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSampleTab,\r\n                activeSampleTab\r\n            }\r\n            this.props.getSubSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n    ontestTabChange = (tabProps) => {\r\n        const activeTestTab = tabProps.screenName;\r\n        if (activeTestTab !== this.props.Login.activeTestTab) {\r\n            if (this.props.Login.masterData.selectedTest && this.props.Login.masterData.selectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedTest: this.props.Login.masterData.selectedTest,\r\n                    ntransactiontestcode: this.props.Login.masterData.selectedTest ?\r\n                        String(this.props.Login.masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                    npreregno: this.props.Login.masterData.selectedSample ?\r\n                        this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestTab,\r\n                    screenName: activeTestTab,\r\n                    resultDataState: this.state.resultDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                }\r\n                this.props.getTestChildTabDetailRegistration(inputData, true)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropComponentFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedFile = this.state.selectedFile || {};\r\n        selectedFile[fieldName] = onDropAttachFileList(selectedFile[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedFile, actionType: \"new\" });\r\n    }\r\n\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n        const { selectedFilter } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedFilter[dateName] = dateValue;\r\n        this.setState({ selectedFilter });\r\n    }\r\n\r\n\r\n    onUpdateRegistrationConfirm = () => {\r\n        this.showAlert();\r\n        this.onUpdateRegistration(this.props.Login.regEditParam.saveType,\r\n            this.props.Login.regEditParam.formRef,\r\n            this.props.Login.regEditParam.operation, 2)\r\n    }\r\n\r\n    confirmAlert = () => {\r\n        if (this.state.showConfirmAlert) {\r\n            if (this.props.Login.regDateEditConfirmMessage) {\r\n                this.confirmMessage.confirm(\"Warning\", \"Warning\",\r\n                    this.props.Login.regDateEditConfirmMessage,\r\n                    this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                    this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                    () => this.onUpdateRegistrationConfirm(),\r\n                    undefined,\r\n                    () => this.showAlert());\r\n            }\r\n            else {\r\n                this.confirmMessage.confirm(\"Warning\", \"Warning\",\r\n                    this.props.Login.booleanFlag, \"ok\", \"Cancel\",\r\n                    () => this.insertRegistration(false), undefined, () => this.showAlert());\r\n            }\r\n        }\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    showAlert = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showConfirmAlert: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    showSampleInfo() {\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n    showSample() {\r\n        this.setState({\r\n            showSample: true, showSubSample: false,\r\n            showTest: false\r\n        })\r\n    }\r\n\r\n    showTest() {\r\n        this.setState({\r\n            showSample: false, showSubSample: false,\r\n            showTest: true\r\n        })\r\n    }\r\n\r\n    showSubSample() {\r\n        this.setState({\r\n            showSample: false, showTest: false,\r\n            showSubSample: !this.state.showSubSample\r\n        })\r\n    }\r\n\r\n    showTestDetails() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showSample: !this.state.showSample, showTest: !this.state.showTest }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    AddFile = () => {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let RealRegTypeValue = this.props.Login.masterData.RealRegTypeValue;\r\n        let booleanmanuf = true;\r\n        if (RealRegTypeValue === RegistrationType.PLASMA_POOL) {\r\n            booleanmanuf = selectedRecord[\"nmanufcode\"] > 0 && selectedRecord[\"nmanufcode\"] !== undefined ? true : false\r\n        }\r\n        if (booleanmanuf) {\r\n            if (this.state.selectedRecord.nallottedspeccode !== undefined) {\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadFile: true,\r\n                        ChildscreenName: \"File\", childoperation: \"Import\",\r\n                        parentPopUpSize: \"lg\", selectedFile: undefined\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTMANUFACTURER\" }));\r\n        }\r\n    }\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        const selectComponent = this.state.selectComponent || {};\r\n        if ((name !== \"nnoofcontainer\") && (value === 0 || value === 0.0)) {\r\n            selectComponent[name] = '';\r\n            this.setState({ selectComponent });\r\n        } else {\r\n            selectComponent[name] = value;\r\n            this.setState({ selectComponent });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onSampleTypeChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map[\"nsampletypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.getSampleTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    ConfirmComponent = (props) => {\r\n        this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to Override the Existing Components ?\",\r\n            \"ok\", \"cancel\", () => this.getComponentfromJava(props));\r\n    }\r\n\r\n    onRegTypeChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map[\"nregtypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.getRegTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n    acceptRegistration = (registerId, skip, take) => {\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n        } else {\r\n            sampleList = this.props.Login.masterData.RegistrationGetSample\r\n                && this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take);\r\n        }\r\n\r\n        // let sampleList = this.props.Login.masterData.searchedSample || [...this.props.Login.masterData.RegistrationGetSample].splice(skip, skip + take);\r\n        let acceptList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"npreregno\");\r\n        if (acceptList && acceptList.length > 0) {\r\n            if (acceptList.every(this.checkPreregisterAndQuarentine)) {\r\n                if (this.props.Login.masterData.selectedTest.length > 0) {\r\n                    if (checkTestPresent(this.props.Login.masterData.RegistrationGetTest, acceptList)) {\r\n                        let Map = {};\r\n                        Map[\"fromdate\"] = \"\";\r\n                        Map[\"todate\"] = \"\";\r\n                        Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n                        Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                        Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                        Map[\"nfilterstatus\"] = -1;\r\n                        Map[\"npreregno\"] = acceptList &&\r\n                            acceptList.map(sample => sample.npreregno).join(\",\");\r\n                        // Map[\"npreregno\"] = this.props.Login.masterData.selectedSample &&\r\n                        //     this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\");\r\n                        Map[\"registrationsample\"] = this.props.Login.masterData.selectedSubSample;\r\n                        Map[\"registrationtest\"] = this.props.Login.masterData.selectedTest;\r\n                        Map[\"ntransactionsamplecode\"] = this.props.Login.masterData.selectedSubSample.map(x => x.ntransactionsamplecode).join(\",\");\r\n                        Map[\"ntransactiontestcode\"] = this.props.Login.masterData.selectedTest.map(x => x.ntransactiontestcode).join(\",\");;\r\n                        Map[\"userinfo\"] = this.props.Login.userInfo;\r\n                        Map[\"nflag\"] = 2;\r\n                        Map[\"ntype\"] = 3;\r\n                        Map[\"activeSampleTab\"] = this.props.Login.activeSampleTab;\r\n                        Map[\"activeTestTab\"] = this.props.Login.activeTestTab;\r\n                        Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.registrationTemplate\r\n                            && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;\r\n                        Map[\"nneedsubsample\"] = this.props.Login.masterData && this.props.Login.masterData.nneedsubsample;\r\n                        Map[\"checkBoxOperation\"] = 3\r\n                        Map[\"stransactiontestcode\"] = this.props.Login.masterData.selectedTest.map(sample => sample.ntransactiontestcode).join(\",\");\r\n                        let inputParam = {\r\n                            inputData: Map,\r\n                            postParamList: this.postParamList,\r\n                            action: 'accept'\r\n                        }\r\n                        this.confirmMessage.confirm(\r\n                            this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_ACCEPTREGISTRATION\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                            () => this.acceptRegistrationConfirm(inputParam, registerId));\r\n                    } else {\r\n                        let Map = {};\r\n                        Map[\"fromdate\"] = \"\";\r\n                        Map[\"todate\"] = \"\";\r\n                        Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n                        Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                        Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                        Map[\"nfilterstatus\"] = -1;\r\n                        Map[\"npreregno\"] = acceptList &&\r\n                            acceptList.map(sample => sample.npreregno).join(\",\");\r\n                        // Map[\"npreregno\"] = this.props.Login.masterData.selectedSample &&\r\n                        //     this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\");\r\n                        Map[\"registrationsample\"] = this.props.Login.masterData.selectedSubSample;\r\n                        Map[\"registrationtest\"] = this.props.Login.masterData.selectedTest;\r\n                        Map[\"userinfo\"] = this.props.Login.userInfo;\r\n                        Map[\"nflag\"] = 2;\r\n                        Map[\"ntype\"] = 1;\r\n                        Map[\"activeSampleTab\"] = this.props.Login.activeSampleTab;\r\n                        Map[\"activeTestTab\"] = this.props.Login.activeTestTab;\r\n                        Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.registrationTemplate\r\n                            && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;\r\n                        Map[\"nneedsubsample\"] = this.props.Login.masterData && this.props.Login.masterData.nneedsubsample;\r\n                        Map[\"checkBoxOperation\"] = 3\r\n                        Map[\"stransactiontestcode\"] = this.props.Login.masterData.selectedTest.map(sample => sample.ntransactiontestcode).join(\",\");\r\n                        let inputParam = {\r\n                            inputData: Map,\r\n                            postParamList: this.postParamList,\r\n                            action: 'accept'\r\n                        }\r\n                        this.confirmMessage.confirm(\"Confirmation\", \"Confirmation!\", \"Samples With atleast One Preregister Test Will Only Accept.Do You Want Accept?\",\r\n                            \"OK\", \"Cancel\", () => this.acceptRegistrationConfirm(inputParam, registerId));\r\n                    }\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_ADDTESTTOREGISTERSAMPLES\" }));\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPREREGQUARANTINESAMPLES\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPREREGQUARANTINESAMPLES\" }));\r\n        }\r\n    }\r\n\r\n    acceptRegistrationConfirm = (inputParam, registerId) => {\r\n        if (showEsign(this.props.Login.userRoleControlRights,\r\n            this.props.Login.userInfo.nformcode, registerId)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    parentPopUpSize: 'lg',\r\n                    screenName: this.props.Login.screenName,\r\n                    operation: 'accept'\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.acceptRegistration(inputParam, this.props.Login.masterData)\r\n        }\r\n\r\n    }\r\n\r\n    selectQuarantine = (quarantineId, skip, take) => {\r\n        let sampleList = this.props.Login.masterData.searchedSample || (this.props.Login.masterData.RegistrationGetSample ? [...this.props.Login.masterData.RegistrationGetSample].splice(skip, skip + take) : []);\r\n        let quarentineList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\r\n\r\n        if (quarentineList && quarentineList.length > 0) {\r\n            if (quarentineList.every(this.checkPreregisterRecordQuarantine)) {\r\n\r\n                // let ntransactionstatus = this.props.Login.masterData.selectedSample &&\r\n                //     this.props.Login.masterData.selectedSample.map(transactionStatus => transactionStatus.ntransactionstatus).join(\",\");\r\n                //if (ntransactionstatus === transactionStatus.PREREGISTER) {\r\n                let Map = {};\r\n                Map[\"fromdate\"] = \"\";\r\n                Map[\"todate\"] = \"\";\r\n                Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n                Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                Map[\"nfilterstatus\"] = -1;\r\n                Map[\"npreregno\"] = quarentineList && quarentineList.map(sample => sample.npreregno).join(\",\");\r\n                Map[\"registrationsample\"] = this.props.Login.masterData.selectedSubSample;\r\n                Map[\"registrationtest\"] = this.props.Login.masterData.selectedTest;\r\n                Map[\"userinfo\"] = this.props.Login.userInfo;\r\n                Map[\"nflag\"] = 2;\r\n                Map[\"ntype\"] = 1;\r\n                Map[\"activeTestTab\"]= this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\";\r\n                Map[\"activeSampleTab\"]= this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n                Map[\"withoutgetparameter\"] = 3;\r\n                Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.registrationTemplate\r\n                    && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;\r\n                Map[\"nneedsubsample\"] = this.props.Login.masterData && this.props.Login.masterData.nneedsubsample;\r\n                Map[\"checkBoxOperation\"] = 3\r\n                Map[\"checkBoxOperation\"] = 3\r\n                Map[\"stransactiontestcode\"] = this.props.Login.masterData.selectedTest.map(sample => sample.ntransactiontestcode).join(\",\");\r\n                Map[\"ntransactionstatus\"] = quarentineList &&\r\n                    quarentineList.map(transactionStatus => transactionStatus.ntransactionstatus).join(\",\");\r\n                //Map[\"ninsertpreregno\"] = quarantineSample.quarantineSample.npreregno;\r\n                let inputParam = {\r\n                    inputData: Map,\r\n                    postParamList: this.postParamList,\r\n                    action: 'quarantine'\r\n                }\r\n                //console.log(\"inputParam, quarantine:\", inputParam);\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, quarantineId)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true,\r\n                            parentPopUpSize: 'lg',\r\n                            screenName: this.props.Login.screenName,\r\n                            operation: 'quarantine'\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.preregRecordToQuarantine(inputParam, this.props.Login.masterData)\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPREREGISTERSAMPLES\" }))\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPREREGISTERSAMPLES\" }))\r\n        }\r\n\r\n    }\r\n\r\n    checkPreregisterAndQuarentine(sample) {\r\n        return (sample.ntransactionstatus === transactionStatus.PREREGISTER || sample.ntransactionstatus === transactionStatus.QUARANTINE)\r\n    }\r\n\r\n    checkPreregisterRecordQuarantine(sample) {\r\n        return (sample.ntransactionstatus === transactionStatus.PREREGISTER)\r\n    }\r\n\r\n    onRegSubTypeChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map['nregtypecode'] = this.props.Login.masterData.RegTypeValue.nregtypecode;\r\n            Map[\"nregsubtypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.getRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        // if (comboData !== null) {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n        // }\r\n    }\r\n\r\n    PrinterChange = (comboData, fieldName) => {\r\n        const selectedPrinterData = this.state.selectedPrinterData || {};\r\n        selectedPrinterData[fieldName] = comboData;\r\n        this.setState({ selectedPrinterData });\r\n    }\r\n\r\n\r\n\r\n    closeChildModal = () => {\r\n        let loadRegSubSample = this.props.Login.loadRegSubSample;\r\n        let loadFile = this.props.Login.loadFile;\r\n        let showSaveContinue = this.props.Login.showSaveContinue;\r\n        let screenName = this.props.Login.screenName;\r\n        let loadChildTest = this.props.Login.loadChildTest;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.state.selectedRecord;\r\n        if (this.props.Login.loadFile) {\r\n            loadFile = false;\r\n            screenName = this.props.Login.PopUpLabel\r\n        } else if (this.props.Login.loadChildTest) {\r\n            loadChildTest = false;\r\n            openModal = false;\r\n            selectedRecord = {}\r\n        }\r\n        else if (this.props.Login.loadRegSubSample) {\r\n            loadRegSubSample = false;\r\n            openModal = false;\r\n            selectedRecord = {}\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadRegSubSample, screenName, showSaveContinue,\r\n                loadFile, loadChildTest,\r\n                openModal,\r\n                parentPopUpSize: \"xl\", selectedRecord\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let loadPreregister = this.props.Login.loadPreregister;\r\n        let openChildModal = this.props.Login.openChildModal;\r\n        let parentPopUpSize = this.props.Login.pare\r\n        let screenName = this.props.Login.screenName;\r\n        let loadPrinter = this.props.Login.loadPrinter;\r\n        let openPortal = this.props.Login.openPortal;\r\n        let Component = this.props.Login.Component\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"accept\" || this.props.Login.operation === \"cancel\" || this.props.Login.operation === \"quarantine\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openChildModal = false\r\n                loadPreregister = false;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { loadEsign, openModal, openChildModal, loadPreregister }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                if (loadPreregister) {\r\n                    parentPopUpSize = 'xl'\r\n                }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { loadEsign, parentPopUpSize }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            loadPrinter = false;\r\n            loadPreregister = false;\r\n            selectedRecord = {};\r\n            openPortal = false;\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openModal, loadPreregister, selectedRecord,\r\n                    screenName, insertSourcePreregno: undefined,\r\n                    loadPrinter, openPortal,\r\n                    Component\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let operation = this.props.Login.operation;\r\n        if (operation === \"update\") {\r\n            this.onUpdateRegistration(saveType, formRef, operation);\r\n        }\r\n    }\r\n\r\n\r\n    onSavePrinterClick = () => {\r\n        let insertlist = [];\r\n        //this.state.selectedPrinterData.sprintername && this.state.selectedPrinterData.sprintername.map(source=>insertlist.push({npreregno:this.props.Login.insertSourcePreregno,sprintername:source.value}))\r\n        const inputParam = {\r\n            classUrl: 'barcode',\r\n            methodUrl: 'Barcode',\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                npreregno: this.props.Login.insertPrinterPreregno,\r\n                sprintername: this.state.selectedPrinterData.sprintername ? this.state.selectedPrinterData.sprintername.value : '',\r\n                insertlist,\r\n                npreregno1: this.props.Login.masterData.selectedSample.map(x => x.npreregno).join(\",\"),\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontrolcode: this.props.Login.ncontrolcode\r\n            },\r\n            operation: 'printer',\r\n            // dataState:this.state.sourceDataState,\r\n            // activeSampleTab:\"IDS_SOURCE\",\r\n            action: 'printer'\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: 'printer'\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    onSaveFileClick = (saveType, formRef) => {\r\n        const selectedFile = this.state.selectedFile;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedFile.sfilename;\r\n        const formData = new FormData();\r\n        // if(nattachmenttypecode === attachmentType.FTP) {\r\n        if (acceptedFiles && acceptedFiles.length > 0) {\r\n            acceptedFiles.forEach((file, index) => {\r\n                formData.append(\"uploadedFile\" + index, file);\r\n            });\r\n            formData.append(\"filecount\", acceptedFiles.length);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONEFILETOSUBMIT\" }));\r\n        }\r\n\r\n        formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n        formData.append(\"nstudyplan\", JSON.stringify(selectedRecord.nallottedspeccode.value));\r\n        formData.append(\"testrequired\", JSON.stringify(selectedRecord.ntransactionstatus === 3 ? true : false));\r\n        formData.append(\"ntemplatemanipulationcode\", JSON.stringify(selectedRecord.ntemplatemanipulationcode));\r\n        formData.append(\"nregtypecode\", JSON.stringify(this.props.Login.masterData.RealRegTypeValue.nregtypecode));\r\n        formData.append(\"nregsubtypecode\", JSON.stringify(this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode));\r\n        this.props.ImportFile(formData, this.confirmMessage, this.props.Login);\r\n    }\r\n\r\n\r\n    sampleInfoDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n            case \"IDS_SOURCE\":\r\n                this.setState({\r\n                    sourceDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sourceDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    testdataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n            case \"IDS_TEST\":\r\n                this.setState({\r\n                    popUptestDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    testAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    popUptestDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    testStateChange = (event) => {\r\n        this.setState({\r\n            testDataState: event.dataState\r\n        });\r\n    }\r\n\r\n\r\n\r\n    sampleTabDetail = () => {\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        const tabMap = new Map();\r\n\r\n        \r\n        let sampleList = this.props.Login.masterData.RegistrationGetSample || [];\r\n        let { sampleskip, sampletake } = this.state\r\n        sampleList = sampleList.slice(sampleskip, sampleskip + sampletake);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\r\n\r\n        tabMap.set(\"IDS_ATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            selectedMaster=\"selectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            masterList={this.props.Login.masterData.selectedSample}\r\n            masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHMENT\"}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            viewFile={this.props.viewAttachment}\r\n            addName={\"AddSampleAttachment\"}\r\n            editName={\"EditSampleAttachment\"}\r\n            deleteName={\"DeleteSampleAttachment\"}\r\n            viewName={\"ViewSampleAttachment\"}\r\n            methodUrl={\"SampleAttachment\"}\r\n            skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n            take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleAttachment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                masterList: this.props.Login.masterData.RegistrationGetSample || []\r\n\r\n            }}\r\n            selectedListName=\"IDS_SAMPLE\"\r\n            displayName=\"sarno\"\r\n        />)\r\n        tabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n        screenName=\"IDS_SAMPLECOMMENTS\"\r\n        onSaveClick={this.onCommentsSaveClick}\r\n        selectedMaster=\"selectedSample\"\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n        fetchRecord={this.props.getCommentsCombo}\r\n        addName={\"AddSampleComment\"}\r\n        editName={\"EditSampleComment\"}\r\n        deleteName={\"DeleteSampleComment\"}\r\n        methodUrl={\"SampleComment\"}\r\n        isTestComment={false}\r\n        masterList={selectedSampleList}\r\n        masterAlertStatus=\"IDS_SELECTTESTTOADDCOMMENTS\"\r\n        primaryKeyField={\"nsamplecommentcode\"}\r\n        dataState={this.state.testCommentDataState}\r\n        dataStateChange={this.testDataStateChange}\r\n        deleteParam={\r\n            {\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n            }\r\n        }\r\n        editParam={{\r\n            methodUrl: \"SampleComment\",\r\n            npreregno,\r\n            userInfo: this.props.Login.userInfo,\r\n            masterData: this.props.Login.masterData,\r\n            esignRights: this.props.Login.userRoleControlRights,\r\n            screenName: \"IDS_SAMPLECOMMENTS\",\r\n            operation: \"update\",\r\n            masterList: this.props.Login.masterData.RegistrationGetSample || [],\r\n            ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n        }}\r\n        selectedListName=\"IDS_SAMPLES\"\r\n        displayName=\"sarno\"\r\n    />)\r\n\r\n        return tabMap;\r\n    }\r\n\r\n    subsampleTabDetail = () => {\r\n        let npreregno = this.props.Login.masterData.selectedSample ?\r\n            this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n         let ntransactionsamplecode = this.props.Login.masterData.selectedSubSample ?\r\n             this.props.Login.masterData.selectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n      \r\n            let sampleList = this.props.Login.masterData.RegistrationGetSample || [];\r\n            let { sampleskip, sampletake } = this.state\r\n            sampleList = sampleList.slice(sampleskip, sampleskip + sampletake);\r\n            let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\r\n\r\n            const tabMap = new Map();\r\n\r\n        tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            selectedMaster=\"selectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            masterList={this.props.Login.masterData.selectedSample}\r\n            masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHMENT\"}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            viewFile={this.props.viewAttachment}\r\n            addName={\"AddSampleAttachment\"}\r\n            editName={\"EditSampleAttachment\"}\r\n            deleteName={\"DeleteSampleAttachment\"}\r\n            viewName={\"ViewSampleAttachment\"}\r\n            methodUrl={\"SampleAttachment\"}\r\n            skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n            take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    npreregno,\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleAttachment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                masterList: this.props.Login.masterData.RegistrationGetSample || []\r\n\r\n            }}\r\n            selectedListName=\"IDS_SAMPLE\"\r\n            displayName=\"sarno\"\r\n        />)\r\n\r\n        tabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n        screenName=\"IDS_SAMPLECOMMENTS\"\r\n        onSaveClick={this.onCommentsSaveClick}\r\n        selectedMaster=\"selectedSample\"\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n        fetchRecord={this.props.getCommentsCombo}\r\n        addName={\"AddSampleComment\"}\r\n        editName={\"EditSampleComment\"}\r\n        deleteName={\"DeleteSampleComment\"}\r\n        methodUrl={\"SampleComment\"}\r\n        isTestComment={false}\r\n        masterList={selectedSampleList}\r\n        masterAlertStatus=\"IDS_SELECTTESTTOADDCOMMENTS\"\r\n        primaryKeyField={\"nsamplecommentcode\"}\r\n        dataState={this.state.testCommentDataState}\r\n        dataStateChange={this.testDataStateChange}\r\n        deleteParam={\r\n            {\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n            }\r\n        }\r\n        editParam={{\r\n            methodUrl: \"SampleComment\",\r\n            npreregno,\r\n            userInfo: this.props.Login.userInfo,\r\n            masterData: this.props.Login.masterData,\r\n            esignRights: this.props.Login.userRoleControlRights,\r\n            screenName: \"IDS_SAMPLECOMMENTS\",\r\n            operation: \"update\",\r\n            masterList: this.props.Login.masterData.RegistrationGetSample || [],\r\n            ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n        }}\r\n        selectedListName=\"IDS_SAMPLES\"\r\n        displayName=\"sarno\"\r\n    />)\r\n\r\n        return tabMap;\r\n    }\r\n\r\n    testTabDetail = () => {\r\n\r\n        const testTabMap = new Map();\r\n        let testList = this.props.Login.masterData.RegistrationGetTest || [];\r\n        let { testskip, testtake } = this.state\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedTest, \"ntransactiontestcode\");\r\n        // const cancelId = this.state.controlMap.has(\"CancelTest\") && this.state.controlMap.get(\"CancelTest\").ncontrolcode;\r\n        let ntransactiontestcode = this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        testTabMap.set(\"IDS_PARAMETERRESULTS\", <RegistrationResultTab\r\n            userInfo={this.props.Login.userInfo}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            dataState={this.state.resultDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            screenName=\"IDS_PARAMETERRESULTS\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n        />)\r\n        testTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_TESTATTACHMENTS\"\r\n            selectedMaster=\"selectedTest\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n            attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            addName={\"AddTestAttachment\"}\r\n            editName={\"EditTestAttachment\"}\r\n            deleteName={\"DeleteTestAttachment\"}\r\n            viewName={\"ViewTestAttachment\"}\r\n            methodUrl={\"TestAttachment\"}\r\n            dataState={this.state.testAttachmentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestAttachment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTATTACHMENTS\",\r\n                masterList: this.props.Login.masterData.selectedTest\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n        />)\r\n        testTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n            screenName=\"IDS_TESTCOMMENTS\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"selectedTest\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddTestComment\"}\r\n            editName={\"EditTestComment\"}\r\n            deleteName={\"DeleteTestComment\"}\r\n            methodUrl={\"TestComment\"}\r\n            isTestComment={false}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus=\"IDS_SELECTTESTTOADDCOMMENTS\"\r\n            primaryKeyField={\"ntestcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestComment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTCOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.RegistrationGetSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n        />)\r\n        return testTabMap;\r\n    }\r\n\r\n    getCommentsCombo = (event) => {\r\n\r\n        if (this.props.Login.selectedTest && this.props.Login.selectedTest.length > 0) {\r\n            this.props.getCommentsCombo(...event);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOADDCOMMENTS\" }))\r\n        }\r\n    }\r\n\r\n    testDataStateChange = (event) => {\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_PARAMETERRESULTS\":\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TEST\":\r\n                this.setState({\r\n                    testDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    testAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let testList = [];\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\r\n        } else {\r\n            testList = this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake);\r\n        }\r\n        let acceptList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedTest, \"ntransactiontestcode\");\r\n        // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\r\n        if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestComments(saveParam, acceptList);\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n        }\r\n    }\r\n\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let acceptList = []\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\r\n        } else {\r\n            sampleList = this.props.Login.masterData.RegistrationGetSample.slice(this.state.skip, this.state.skip + this.state.take);\r\n        }\r\n        if (this.props.Login.operation === \"update\") {\r\n            acceptList.push(selectedRecord);\r\n        }\r\n        else {\r\n            acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\r\n        }\r\n\r\n\r\n        if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                npreregno: this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSampleAttachment(saveParam, acceptList);\r\n        } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestAttachment(saveParam, this.props.Login.masterData.selectedTest);\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n        }\r\n    }\r\n\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n\r\n\r\n    cancelSubSampleRecord = (controlcode, skip, take) => {\r\n        let testList = this.props.Login.masterData.searchedSubSample ||\r\n            (this.props.Login.masterData.RegistrationGetSubSample ?\r\n                [...this.props.Login.masterData.RegistrationGetSubSample].splice(skip, skip + take) : []);\r\n        let acceptList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedSubSample, \"ntransactionsamplecode\");\r\n\r\n        if (acceptList && acceptList.length > 0) {\r\n            // console.log(\"Success:\", dataitem);\r\n            if (this.transValidation(this.props.Login.transactionValidation, controlcode, acceptList)) {\r\n                let Map = {};\r\n                Map['npreregno'] = acceptList.map(x => x.npreregno).join(\",\");\r\n                Map['ntransactiontestcode'] = this.props.Login.masterData.selectedTest.map(x => x.ntransactiontestcode).join(\",\");\r\n                // Map['ntransactionstatus'] = dataitem.ntransactionstatus;\r\n                // Map[\"ntransactionsamplecode\"] = acceptList.map(x => x.ntransactionsamplecode).join(\",\");\r\n                //  Map[\"ninserttransactionsamplecode\"] = dataitem.ntransactionsamplecode\r\n                Map[\"userinfo\"] = this.props.Login.userInfo;\r\n                Map[\"ncontrolcode\"] = controlcode;\r\n                Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n                Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                Map[\"nflag\"] = 2;\r\n                Map[\"ntype\"] = 3;\r\n                // Map[\"withoutgetparameter\"] = 3;\r\n                Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                Map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n                Map[\"npreregno\"] = acceptList &&\r\n                    acceptList.map(sample => sample.npreregno).join(\",\");\r\n                Map[\"ntransactionsamplecode\"] = acceptList &&\r\n                    acceptList.map(sample => sample.ntransactionsamplecode).join(\",\");\r\n                Map[\"registrationsample\"] = this.props.Login.masterData.selectedSample;\r\n                Map[\"registrationSubSample\"] = this.props.Login.masterData.selectedSubSample;\r\n                Map[\"registrationTest\"] = this.props.Login.masterData.selectedTest;\r\n                Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.registrationTemplate\r\n                    && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;\r\n                Map[\"nneedsubsample\"] = this.props.Login.masterData\r\n                    && this.props.Login.masterData.nneedsubsample;\r\n                Map[\"checkBoxOperation\"] = 3\r\n                Map[\"activeTestTab\"]= this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\";\r\n                Map[\"activeSampleTab\"]= this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n\r\n                let inputParam = {\r\n                    inputData: Map,\r\n                    postParamList: this.postParamList,\r\n                    action: 'cancelSample'\r\n                }\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlcode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true,\r\n                            parentPopUpSize: 'lg',\r\n                            screenName: this.props.Login.screenName,\r\n                            operation: 'cancel'\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.cancelSubSampleAction(inputParam, this.props.Login.masterData)\r\n                }\r\n            } else {\r\n                let value = this.props.Login.transactionValidation[controlcode] &&\r\n                    this.props.Login.transactionValidation[controlcode].map(sample =>\r\n                        this.props.intl.formatMessage({ id: sample.stransdisplaystatus })).join(\"/\")\r\n\r\n                //toast.warn(\"Select\" + \" \" + value + \" to Cancel/Reject Test\");\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECT\" }) + value + this.props.intl.formatMessage({ id: \"IDS_TOCANCELREJECTTEST\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOCANCELREJECT\" }));\r\n        }\r\n    }\r\n\r\n    cancelRecord = (controlcode, skip, take) => {\r\n        let testList = this.props.Login.masterData.searchedTest ||\r\n            (this.props.Login.masterData.RegistrationGetTest ?\r\n                [...this.props.Login.masterData.RegistrationGetTest].splice(skip, skip + take) : []);\r\n        let acceptList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedTest, \"ntransactiontestcode\");\r\n\r\n        if (acceptList && acceptList.length > 0) {\r\n            // console.log(\"Success:\", dataitem);\r\n            if (this.transValidation(this.props.Login.transactionValidation, controlcode, acceptList)) {\r\n                let Map = {};\r\n                Map['ninsertpreregno'] = acceptList.map(x => x.npreregno).join(\",\");\r\n                // Map['ntransactionstatus'] = dataitem.ntransactionstatus;\r\n                Map[\"ntransactiontestcode\"] = acceptList.map(x => x.ntransactiontestcode).join(\",\");\r\n                //  Map[\"ninserttransactionsamplecode\"] = dataitem.ntransactionsamplecode\r\n                Map[\"userinfo\"] = this.props.Login.userInfo;\r\n                Map[\"ncontrolcode\"] = controlcode;\r\n                Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n                Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                Map[\"nflag\"] = 2;\r\n                Map[\"ntype\"] = 3;\r\n                Map[\"withoutgetparameter\"] = 3;\r\n                Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                Map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n                Map[\"npreregno\"] = acceptList &&\r\n                    acceptList.map(sample => sample.npreregno).join(\",\");\r\n                Map[\"ntransactionsamplecode\"] = acceptList &&\r\n                    acceptList.map(sample => sample.ntransactionsamplecode).join(\",\");\r\n                Map[\"registrationsample\"] = this.props.Login.masterData.selectedSample;\r\n                Map[\"registrationSubSample\"] = this.props.Login.masterData.selectedSubSample;\r\n                Map[\"registrationTest\"] = this.props.Login.masterData.selectedTest;\r\n                Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.registrationTemplate\r\n                    && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;\r\n                Map[\"nneedsubsample\"] = this.props.Login.masterData\r\n                    && this.props.Login.masterData.nneedsubsample;\r\n                let inputParam = {\r\n                    inputData: Map,\r\n                    postParamList: this.postParamList,\r\n                    action: 'cancelTest'\r\n                }\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlcode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true,\r\n                            parentPopUpSize: 'lg',\r\n                            screenName: this.props.Login.screenName,\r\n                            operation: 'cancel'\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.cancelTestAction(inputParam, this.props.Login.masterData)\r\n                }\r\n            } else {\r\n                let value = this.props.Login.transactionValidation[controlcode] &&\r\n                    this.props.Login.transactionValidation[controlcode].map(sample =>\r\n                        this.props.intl.formatMessage({ id: sample.stransdisplaystatus })).join(\"/\")\r\n\r\n                //toast.warn(\"Select\" + \" \" + value + \" to Cancel/Reject Test\");\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECT\" }) + value + this.props.intl.formatMessage({ id: \"IDS_TOCANCELREJECTTEST\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOCANCELREJECT\" }));\r\n        }\r\n    }\r\n\r\n    // constructDesign(list) {\r\n\r\n    //     let newList = []\r\n    //     if (list.length > 0) {\r\n    //         list.map((i) => {\r\n    //             newList.push({ [designProperties.LABEL]: i, [designProperties.VALUE]: i })\r\n    //         })\r\n    //     }\r\n    //     return newList;\r\n    // }\r\n\r\n    addSubSample = (controlcode, skip, take) => {\r\n        let Map = {};\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n        } else {\r\n            sampleList = this.props.Login.masterData.RegistrationGetSample && this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take);\r\n        }\r\n\r\n        let addSubSampleList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"npreregno\");\r\n\r\n        if (addSubSampleList && addSubSampleList.length > 0) {\r\n            const findTransactionStatus = [...new Set(addSubSampleList.map(item => item.ntransactionstatus))];\r\n\r\n            if (findTransactionStatus.length === 1) {\r\n                if (findTransactionStatus[0] === transactionStatus.PREREGISTER) {\r\n                    //   const findApprovalVersion = [...new Set(addSubSampleList.map(item => item.napprovalversioncode))];\r\n                    //   if (findApprovalVersion.length === 1) {\r\n                    const findSampleSpec = [...new Set(addSubSampleList.map(item => item.nallottedspeccode))];\r\n                    const findSampleSpectemplate = [...new Set(addSubSampleList.map(item => item.ntemplatemanipulationcode))];\r\n                    //const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\r\n                    if (findSampleSpec.length === 1)//&& findComponent.length === 1 \r\n                    {\r\n                        let data = []\r\n                        const regSubSamplewithoutCombocomponent = []\r\n                        const Layout = this.props.Login.masterData.SubSampleTemplate\r\n                            && this.props.Login.masterData.SubSampleTemplate.jsondata\r\n                        if (Layout !== undefined) {\r\n                            Layout.map(row => {\r\n                                row.children.map(column => {\r\n                                    column.children.map(component => {\r\n                                        return component.hasOwnProperty(\"children\") ?\r\n                                            component.children.map(componentrow => {\r\n                                                if (componentrow.inputtype === \"combo\") {\r\n                                                    data.push(componentrow)\r\n                                                } else {\r\n                                                    regSubSamplewithoutCombocomponent.push(componentrow)\r\n                                                }\r\n                                            })\r\n                                            : component.inputtype === \"combo\" ? data.push(component) :\r\n                                                regSubSamplewithoutCombocomponent.push(component)\r\n                                    })\r\n                                })\r\n                            })\r\n                            const regSubSamplecomboComponents = data\r\n                            let regchildColumnList = {};\r\n                            data.map(columnList => {\r\n                                const val = comboChild(data, columnList, regchildColumnList, true);\r\n                                data = val.data;\r\n                                regchildColumnList = val.childColumnList\r\n                            })\r\n                            //const Map={}\r\n                            // const findSamplentemplatemanipulationcode = [...new Set(addSubSampleList.map(item => item.ntemplatemanipulationcode))];\r\n                            // Map[\"ntemplatemanipulationcode\"] = findSamplentemplatemanipulationcode[0];\r\n                            Map[\"nallottedspeccode\"] = findSampleSpec[0];\r\n                            Map[\"ntemplatemanipulationcode\"] =findSampleSpectemplate[0];\r\n                            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                            Map[\"nneedsubsample\"] = this.props.Login.masterData\r\n                                && this.props.Login.masterData.nneedsubsample;\r\n                            Map[\"npreregno\"] = addSubSampleList &&\r\n                                addSubSampleList.map(sample => sample.npreregno).join(\",\");\r\n                            Map[\"registrationsample\"] = addSubSampleList;\r\n\r\n                            this.props.addsubSampleRegistration(this.props.Login.masterData,\r\n                                this.props.Login.userInfo, data, this.state.selectedRecord,\r\n                                regchildColumnList, regSubSamplecomboComponents,\r\n                                regSubSamplewithoutCombocomponent,\r\n                                Map, controlcode,this.state.specBasedComponent)\r\n                        } else {\r\n                            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASECONFIGURETHESUBSAMPLETEMPLATE\" }));\r\n                        }\r\n\r\n                    } else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n                    }\r\n                    // } else {\r\n                    //    toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\" }));\r\n                    // }\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPREREGISTERSAMPLETOADDSUBSAMPLE\" }));\r\n                }\r\n            }\r\n\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLETOSUBSAMPLE\" }));\r\n        }\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        if (this.props.Login.columnList !== previousProps.Login.columnList) {\r\n\r\n            this.setState({\r\n                columnList: this.props.Login.columnList,\r\n                childColumnList: this.props.Login.childColumnList,\r\n                withoutCombocomponent: this.props.Login.withoutCombocomponent,\r\n                comboComponents: this.props.Login.comboComponents\r\n            });\r\n\r\n        }\r\n\r\n        if (this.props.Login.regparentSubSampleColumnList !== previousProps.Login.regparentSubSampleColumnList) {\r\n            this.setState({\r\n                regparentSubSampleColumnList: this.props.Login.regparentSubSampleColumnList,\r\n                regSubSamplecomboComponents: this.props.Login.regSubSamplecomboComponents,\r\n                regSubSamplewithoutCombocomponent: this.props.Login.regSubSamplewithoutCombocomponent\r\n            });\r\n\r\n        }\r\n\r\n\r\n        if (this.props.Login.showSaveContinue !== previousProps.Login.showSaveContinue) {\r\n            this.setState({ showSaveContinue: this.props.Login.showSaveContinue });\r\n\r\n        }\r\n        if (this.props.Login !== previousProps.Login) {\r\n            this.PrevoiusLoginData = previousProps\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        else if (this.props.Login.selectedPrinterData !== previousProps.Login.selectedPrinterData) {\r\n            this.setState({ selectedPrinterData: this.props.Login.selectedPrinterData });\r\n        }\r\n        else if (this.props.Login.loadFile !== previousProps.Login.loadFile && (this.props.Login.loadFile === false)) {\r\n            this.setState({ selectedFile: undefined })\r\n        }\r\n        else if (this.props.Login.selectedFilter !== previousProps.Login.selectedFilter) {\r\n            this.setState({ selectedFilter: this.props.Login.selectedFilter });\r\n        }\r\n        if (this.props.Login.popUptestDataState && this.props.Login.popUptestDataState !== previousProps.Login.popUptestDataState) {\r\n            this.setState({ popUptestDataState: this.props.Login.popUptestDataState });\r\n        }\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n            const cancelId = controlMap.has(\"CancelTest\") ? controlMap.get(\"CancelTest\").ncontrolcode : -1;\r\n            const preRegisterId = controlMap.has(\"AddPreregister\") ? controlMap.get(\"AddPreregister\").ncontrolcode : -1;\r\n            const registerId = controlMap.has(\"RegisterAccept\") ? controlMap.get(\"RegisterAccept\").ncontrolcode : -1;\r\n            const editSampleId = controlMap.has(\"EditSample\") ? controlMap.get(\"EditSample\").ncontrolcode : -1;\r\n            const quarantineId = controlMap.has(\"RegisterQuarantine\") ? controlMap.get(\"RegisterQuarantine\").ncontrolcode : -1;\r\n            const addTestId = controlMap.has(\"AddNewTest\") ? controlMap.get(\"AddNewTest\").ncontrolcode : -1;\r\n            const printBarcodeId = controlMap.has(\"PrintBarcode\") ? controlMap.get(\"PrintBarcode\").ncontrolcode : -1;\r\n            const cancelSampleId = controlMap.has(\"CancelReject\") ? controlMap.get(\"CancelReject\").ncontrolcode : -1;\r\n            const addSubSampleId = controlMap.has(\"AddSubSample\") ? controlMap.get(\"AddSubSample\").ncontrolcode : -1;\r\n            const editSubSampleId = controlMap.has(\"EditSubSample\") ? controlMap.get(\"EditSubSample\").ncontrolcode : -1;\r\n            const cancelSubSampleId = controlMap.has(\"CancelSubSample\") ? controlMap.get(\"CancelSubSample\").ncontrolcode : -1;\r\n\r\n            this.setState({\r\n                userRoleControlRights, controlMap, cancelId,\r\n                preRegisterId, registerId, editSampleId, quarantineId, addTestId, printBarcodeId,\r\n                cancelSampleId, addSubSampleId, editSubSampleId, cancelSubSampleId\r\n            });\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n\r\n            let { skip, take, testskip, testtake, subsampleskip, subsampletake, testCommentDataState,\r\n                resultDataState, sampleGridDataState, popUptestDataState, DynamicSampleColumns, DynamicSubSampleColumns,\r\n                DynamicTestColumns, DynamicGridItem, DynamicGridMoreField, SingleItem, testMoreField, testListColumns,\r\n                SubSampleDynamicGridItem, SubSampleDynamicGridMoreField, SubSampleSingleItem, sampleSearchField, subsampleSearchField,\r\n                testSearchField, testAttachmentDataState, sampleCommentDataState, specBasedComponent } = this.state\r\n            if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n                const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n                DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n                DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n                DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n\r\n                DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n                DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n                SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n\r\n                SubSampleDynamicGridItem = dynamicColumn.subsamplegriditem ? dynamicColumn.subsamplegriditem : [];\r\n                SubSampleDynamicGridMoreField = dynamicColumn.subsamplegridmoreitem ? dynamicColumn.subsamplegridmoreitem : [];\r\n                SubSampleSingleItem = dynamicColumn.subsampledisplayfields ? dynamicColumn.subsampledisplayfields : [];\r\n                //console.log(\"Subsample\",SubSampleSingleItem)\r\n                testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\r\n                testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\r\n\r\n                sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n                subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n                testSearchField = dynamicColumn.testsearchfields ? dynamicColumn.testsearchfields : [];\r\n\r\n               // specBasedComponent = true;\r\n            }\r\n            let showSample = this.props.Login.showSample === this.state.showTest || this.state.showSample\r\n            let showTest = showSample ? false : true\r\n            let stateSampleType = this.state.stateSampleType\r\n            let stateRegistrationType = this.state.stateRegistrationType\r\n            let stateRegistrationSubType = this.state.stateRegistrationSubType\r\n            let stateFilterStatus = this.state.stateFilterStatus\r\n            if (this.props.Login.masterData.SampleType !== previousProps.Login.masterData.SampleType) {\r\n\r\n                const sampleTypeMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\",\r\n                    \"ssampletypename\", \"nsorter\", \"ascending\", false);\r\n                stateSampleType = sampleTypeMap.get(\"OptionList\")\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.RegistrationType !== previousProps.Login.masterData.RegistrationType) {\r\n\r\n                const registrationTypeMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\",\r\n                    \"sregtypename\", \"nsorter\", \"ascending\", false);\r\n\r\n                stateRegistrationType = registrationTypeMap.get(\"OptionList\")\r\n            }\r\n\r\n            if (this.props.Login.masterData.RegistrationSubType !== previousProps.Login.masterData.RegistrationSubType) {\r\n                const registrationSubTypeMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\",\r\n                    \"sregsubtypename\", \"nsorter\", \"ascending\", false);\r\n\r\n                stateRegistrationSubType = registrationSubTypeMap.get(\"OptionList\")\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.FilterStatus !== previousProps.Login.masterData.FilterStatus) {\r\n\r\n\r\n                const filterStatusMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\",\r\n                    \"stransdisplaystatus\", \"nsorter\", \"ascending\", false);\r\n\r\n                stateFilterStatus = filterStatusMap.get(\"OptionList\")\r\n            }\r\n\r\n\r\n            // const stateSampleType = sampleTypeMap.get(\"OptionList\");\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            subsampleskip = this.props.Login.subsampleskip === undefined ? subsampleskip : this.props.Login.subsampleskip\r\n            subsampletake = this.props.Login.subsampletake || subsampletake\r\n\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.testAttachmentDataState && this.props.Login.testAttachmentDataState !== previousProps.Login.testAttachmentDataState) {\r\n                testAttachmentDataState = this.props.Login.testAttachmentDataState;\r\n            }\r\n            if (this.props.Login.sampleGridDataState && this.props.Login.sampleGridDataState !== previousProps.Login.sampleGridDataState) {\r\n                sampleGridDataState = this.props.Login.sampleGridDataState;\r\n            }\r\n            if (this.props.Login.popUptestDataState && this.props.Login.popUptestDataState !== previousProps.Login.popUptestDataState) {\r\n                popUptestDataState = this.props.Login.popUptestDataState;\r\n            }\r\n\r\n            const testGetParam = {\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                npreregno: this.props.Login.masterData.selectedSample &&\r\n                    this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\"),\r\n                sfromdate: this.props.Login.masterData.RealFromDate,\r\n                stodate: this.props.Login.masterData.RealToDate,\r\n                //searchTestRef: this.searchTestRef,\r\n                // testskip: testskip,\r\n                //subsampleskip: subsampleskip,\r\n                // resultDataState: resultDataState,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n            }\r\n            const testChildGetParam = {\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                npreregno: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\"),\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedSubSample &&\r\n                    this.props.Login.masterData.selectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                sfromdate: this.props.Login.masterData.RealFromDate,\r\n                stodate: this.props.Login.masterData.RealToDate,\r\n                // resultDataState: resultDataState,\r\n                // testCommentDataState: testCommentDataState,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n            }\r\n\r\n            const subSampleGetParam = {\r\n                masterData: this.props.Login.masterData,\r\n                ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                // testskip: testskip,\r\n                // subsampleskip: subsampleskip,\r\n                // searchTestRef: this.searchTestRef,\r\n                //resultDataState: resultDataState,\r\n                // testCommentDataState: testCommentDataState,\r\n                //sampleGridDataState: sampleGridDataState,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n                    && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n                nneedsubsample: this.props.Login.masterData\r\n                    && this.props.Login.masterData.nneedsubsample\r\n            }\r\n\r\n\r\n            const filterSampleParam = {\r\n                inputListName: \"RegistrationGetSample\",\r\n                selectedObject: \"selectedSample\",\r\n                primaryKeyField: \"npreregno\",\r\n                fetchUrl: \"registration/getRegistrationSubSample\",\r\n                //childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\r\n                fecthInputObject: {\r\n                    //nflag: 2,\r\n                    // ntype: 2,\r\n                    masterData: this.props.Login.masterData,\r\n                    ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                    activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n                    activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n                        && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n                    nneedsubsample: this.props.Login.masterData\r\n                        && this.props.Login.masterData.nneedsubsample,\r\n                    checkBoxOperation: 3,\r\n\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: sampleSearchField,\r\n                changeList: [\r\n                    \"RegistrationGetSubSample\", \"RegistrationGetTest\", \"RegistrationTestAttachment\",\r\n                    \"RegistrationTestComment\", \"RegistrationAttachment\", \"selectedSample\", \"selectedSubSample\",\r\n                    \"selectedTest\", \"RegistrationParameter\"\r\n                ]\r\n            };\r\n\r\n            const filterSubSampleParam = {\r\n                inputListName: \"RegistrationGetSubSample\",\r\n                selectedObject: \"selectedSubSample\",\r\n                primaryKeyField: \"ntransactionsamplecode\",\r\n                fetchUrl: \"registration/getRegistrationTest\",\r\n                //childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\r\n                fecthInputObject: {\r\n                    //nflag: 2,\r\n                    // ntype: 2,\r\n                    masterData: this.props.Login.masterData,\r\n                    //  ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                    activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n                    activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n                        && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n                    nneedsubsample: this.props.Login.masterData\r\n                        && this.props.Login.masterData.nneedsubsample,\r\n                    checkBoxOperation: 3,\r\n                    npreregno: this.props.Login.masterData.selectedSample &&\r\n                        this.props.Login.masterData.selectedSample.map(x => x.npreregno).join(\",\")\r\n\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: subsampleSearchField,\r\n                changeList: [\r\n                    \"RegistrationGetTest\", \"RegistrationTestAttachment\",\r\n                    \"RegistrationTestComment\", \"RegistrationAttachment\",\r\n                    \"selectedSubSample\", \"selectedTest\", \"RegistrationParameter\"\r\n                ]\r\n            };\r\n\r\n            const filterTestParam = {\r\n                inputListName: \"RegistrationGetTest\",\r\n                selectedObject: \"selectedTest\",\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: this.getActiveTestURL(),\r\n                fecthInputObject: {\r\n                    ntransactiontestcode: this.props.Login.masterData && this.props.Login.masterData.selectedTest && this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n                        && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n                    nneedsubsample: this.props.Login.masterData\r\n                        && this.props.Login.masterData.nneedsubsample,\r\n                    checkBoxOperation: 3,\r\n                    activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n                    activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: testSearchField,\r\n                changeList: [\"RegistrationTestComment\", \"RegistrationParameter\"]\r\n\r\n            }\r\n\r\n            // let postParamList = [\r\n            //     {\r\n            //         filteredListName: \"searchedSample\",\r\n            //         clearFilter: \"no\",\r\n            //         searchRef: this.searchSampleRef,\r\n            //         primaryKeyField: \"npreregno\",\r\n            //         fetchUrl: \"registration/getRegistrationSubSample\",\r\n            //         fecthInputObject: subSampleGetParam,\r\n            //        // childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\r\n            //         selectedObject: \"selectedSample\",\r\n            //         inputListName: \"AP_SAMPLE\",\r\n            //         updatedListname: \"selectedSample\",\r\n            //         unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n            //             \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n            //             \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            //     }\r\n            //     , {\r\n            //         filteredListName: \"searchedTest\",\r\n            //         updatedListname: \"selectedTest\",\r\n            //         clearFilter: \"no\",\r\n            //         searchRef: this.searchTestRef,\r\n            //         primaryKeyField: \"ntransactiontestcode\",\r\n            //         fetchUrl: \"approval/getApprovalTest\",\r\n            //         fecthInputObject: testGetParam,\r\n            //         selectedObject: \"selectedTest\",\r\n            //         inputListName: \"RegistrationGetTest\",\r\n            //         unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n            //             \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n            //             \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            //     }\r\n            // ];\r\n\r\n\r\n            const editRegParam = {\r\n                nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                sfromdate: this.props.Login.masterData.RealFromDate,\r\n                stodate: this.props.Login.masterData.RealToDate,\r\n                // ncontrolCode: this.state.editSampleId,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n                    && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n                nneedsubsample: this.props.Login.masterData\r\n                    && this.props.Login.masterData.nneedsubsample\r\n            }\r\n\r\n            const editSubSampleRegParam = {\r\n                nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                sfromdate: this.props.Login.masterData.RealFromDate,\r\n                stodate: this.props.Login.masterData.RealToDate,\r\n                //ncontrolCode: this.state.editSampleId,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n                    && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n                nneedsubsample: this.props.Login.masterData\r\n                    && this.props.Login.masterData.nneedsubsample\r\n            }\r\n\r\n            const addTestParam = {\r\n                selectedsample: this.props.Login.masterData.selectedSample,\r\n                selectedsubsample: this.props.Login.masterData.selectedSubSample,\r\n                // skip: skip, take: (skip + take),\r\n                userinfo: this.props.Login.userInfo,\r\n                sampleList: this.props.Login.masterData.RegistrationGetSample,\r\n                snspecsampletypecode: this.props.Login.masterData.selectedSubSample &&\r\n                    [...new Set(this.props.Login.masterData.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\")\r\n            };\r\n\r\n            const breadCrumbobj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo)\r\n            this.breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_FROM\",\r\n                    \"value\": breadCrumbobj.breadCrumbFrom\r\n                }, {\r\n                    \"label\": \"IDS_TO\",\r\n                    \"value\": breadCrumbobj.breadCrumbto\r\n                }, {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    \"value\": this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.ssampletypename\r\n                }, {\r\n                    \"label\": \"IDS_REGTYPE\",\r\n                    \"value\": this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.sregtypename\r\n                }, {\r\n                    \"label\": \"IDS_REGSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n                }, {\r\n                    \"label\": \"IDS_FILTERSTATUS\",\r\n                    \"value\": this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.stransdisplaystatus\r\n                }\r\n            ]\r\n            this.setState({\r\n                DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns,\r\n                SingleItem, testMoreField,\r\n                DynamicGridItem, DynamicGridMoreField,\r\n                testListColumns, stateSampleType,\r\n                stateRegistrationType,\r\n                stateRegistrationSubType,\r\n                stateFilterStatus,\r\n                popUptestDataState,\r\n                showSample, showTest, skip, take, testskip,\r\n                subsampleskip, subsampletake,\r\n                testtake, testCommentDataState, testAttachmentDataState,\r\n                resultDataState, sampleGridDataState,\r\n                SubSampleDynamicGridItem, SubSampleDynamicGridMoreField,\r\n                SubSampleSingleItem,\r\n                testGetParam, testChildGetParam, subSampleGetParam,\r\n                filterSampleParam, filterTestParam,\r\n                editRegParam, editSubSampleRegParam,\r\n                addTestParam, sampleSearchField, subsampleSearchField,\r\n                testSearchField, filterSubSampleParam, specBasedComponent\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEditDateChange = (dateName, dateValue) => {\r\n        const selectComponent = this.state.selectedRecord;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectComponent[dateName] = dateValue;\r\n        this.setState({ selectedRecord: selectComponent });\r\n    }\r\n\r\n    onNumericInputEditChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if ((name !== \"nnoofcontainer\") && (value === 0 || value === 0.0)) {\r\n            selectedRecord[name] = '';\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n            selectedRecord[name] = value;\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    cancelSampleRecords = (controlcode, skip, take) => {\r\n        let Map = {};\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n        } else {\r\n            sampleList = this.props.Login.masterData.RegistrationGetSample && this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take);\r\n        }\r\n        // let sampleList = this.props.Login.masterData.searchedSample || [...this.props.Login.masterData.RegistrationGetSample].splice(skip, skip + take);\r\n        // sampleList = sampleList.splice(skip, skip + take);\r\n        let cancelRejectSamplesList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"npreregno\");\r\n\r\n        if (cancelRejectSamplesList && cancelRejectSamplesList.length > 0) {\r\n            if (this.transValidation(this.props.Login.transactionValidation, controlcode, cancelRejectSamplesList)) {\r\n                //Map['ninsertpreregno']=dataitem.cancelSample.npreregno;\r\n                Map['ntransactionstatus'] = cancelRejectSamplesList &&\r\n                    cancelRejectSamplesList.map(transactionstatus => transactionstatus.ntransactionstatus).join(\",\");\r\n                //Map[\"ntransactiontestcode\"]=dataitem.ntransactiontestcode;\r\n                //Map[\"ninserttransactionsamplecode\"]=dataitem.ntransactionsamplecode\r\n                Map[\"userinfo\"] = this.props.Login.userInfo;\r\n                Map[\"ncontrolcode\"] = controlcode;\r\n                Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n                Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                Map[\"nflag\"] = 2;\r\n                Map[\"ntype\"] = 3;\r\n                Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.registrationTemplate\r\n                    && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;\r\n                Map[\"nneedsubsample\"] = this.props.Login.masterData\r\n                    && this.props.Login.masterData.nneedsubsample;\r\n                Map[\"checkBoxOperation\"] = 3;\r\n                Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                Map[\"nfilterstatus\"] = -1;\r\n                Map[\"npreregno\"] = cancelRejectSamplesList &&\r\n                    cancelRejectSamplesList.map(sample => sample.npreregno).join(\",\");\r\n                Map[\"ntransactionsamplecode\"] = this.props.Login.masterData.selectedSubSample &&\r\n                    this.props.Login.masterData.selectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\");\r\n                Map[\"ntransactiontestcode\"] = this.props.Login.masterData.selectedTest &&\r\n                    this.props.Login.masterData.selectedTest.map(test => test.ntransactiontestcode).join(\",\");\r\n                Map[\"registrationsample\"] = cancelRejectSamplesList;\r\n                Map[\"registrationtest\"] = this.props.Login.masterData.selectedSubSample;\r\n                Map[\"transactionValidation\"] = this.props.Login.transactionValidation;\r\n                Map[\"withoutgetparameter\"] = 3\r\n                Map[\"activeTestTab\"]= this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\";\r\n                Map[\"activeSampleTab\"]= this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n\r\n                let inputParam = {\r\n                    inputData: Map,\r\n                    postParamList: this.postParamList,\r\n                    action: 'cancelSample'\r\n                }\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlcode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true,\r\n                            parentPopUpSize: 'lg',\r\n                            screenName: this.props.Login.screenName,\r\n                            operation: 'cancel'\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.cancelSampleAction(inputParam, this.props.Login.masterData)\r\n                }\r\n            } else {\r\n                let value = this.props.Login.transactionValidation[controlcode] &&\r\n                    this.props.Login.transactionValidation[controlcode].map(sample =>\r\n                        this.props.intl.formatMessage({ id: sample.stransdisplaystatus })).join(\"/\")\r\n\r\n                //toast.warn(\"Select\" + \" \" + value + \" to Cancel/Reject Sample\");\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECT\" }) + value + this.props.intl.formatMessage({ id: \"IDS_TOCANCELREJECTSAMPLE\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLETOCANCELREJECT\" }));\r\n        }\r\n\r\n    }\r\n\r\n    transValidation = (transactionValidation, ncontrolcode, selectedSample) => {\r\n        //  const transList=transactionValidation?Object.keys(transactionValidation):[];\r\n        //  const index=transList.findIndex(x=>x.ncontrolcode===ncontrolcode);\r\n        //let check=true;\r\n        //  let validate=false;\r\n        let ntransstatus = [];\r\n\r\n        let translist = transactionValidation[ncontrolcode];\r\n        if (translist) {\r\n            transactionValidation[ncontrolcode] && transactionValidation[ncontrolcode].map(sam => {\r\n                return ntransstatus.push(sam.ntransactionstatus)\r\n            });\r\n            const selectdata = selectedSample ? selectedSample : [];\r\n            let check = selectdata.map(sam1 => {\r\n                return ntransstatus.includes(sam1.ntransactionstatus)\r\n            })\r\n            if (check.includes(false)) {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    onUpdateSubSampleRegistration(saveType, formRef, operation, flag) {\r\n        const inputData = { userinfo: this.props.Login.userInfo };\r\n\r\n        let initialParam = {\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            fromdate: \"\",\r\n            todate: \"\",\r\n            nflag: 2,\r\n            ntype: 5,\r\n            npreregno: String(this.state.selectedRecord.npreregno),\r\n            ntransactionsamplecode: String(this.state.selectedRecord.ntransactionsamplecode),\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.registrationTemplate\r\n                && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode,\r\n            nneedsubsample: this.props.Login.masterData\r\n                && this.props.Login.masterData.nneedsubsample,\r\n            checkBoxOperation: 3,\r\n            activeTestTab:this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n           activeSampleTab:this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\"\r\n        }\r\n\r\n        inputData[\"initialparam\"] = initialParam;\r\n        // inputData[\"samplebeforeedit\"] = JSON.parse(JSON.stringify(this.props.Login.regRecordToEdit));\r\n        //inputData[\"registration\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n        const param = getRegistrationSubSample(this.props.Login.masterData,\r\n            this.state.selectedRecord, this.state.selectedSpec,\r\n            this.props.Login.masterData.SubSampleTemplate.jsondata,\r\n            this.props.Login.userInfo, this.props.Login.defaulttimezone, operation);\r\n\r\n        inputData[\"registrationsample\"] = param.sampleRegistration\r\n        inputData[\"SubSampleDateList\"] = param.dateList\r\n        inputData[\"flag\"] = flag === undefined ? 1 : flag;\r\n        inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.registrationTemplate\r\n            && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;\r\n        inputData[\"nneedsubsample\"] = this.props.Login.masterData\r\n            && this.props.Login.masterData.nneedsubsample;\r\n        inputData[\"checkBoxOperation\"] = 3;\r\n        inputData[\"activeTestTab\"]= this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\";\r\n        inputData[\"activeSampleTab\"]= this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"SubSampleRegistration\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef,\r\n            action: 'editSubSample',\r\n            showConfirmAlert: false,\r\n            resultDataState: this.state.resultDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            testAttachmentDataState: this.state.testAttachmentDataState,\r\n            // dataState:undefined, selectedId\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    saveType, parentPopUpSize: \"lg\",\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            this.props.onUpdateSubSampleRegistration(inputParam,\r\n                this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignforRegistration(inputParam, \"openModal\");\r\n\r\n    }\r\n\r\n\r\n    editRegistration = (inputParam) => {\r\n        let data = [];\r\n        const withoutCombocomponent = []\r\n        const Layout = this.props.Login.masterData.registrationTemplate\r\n            && this.props.Login.masterData.registrationTemplate.jsondata\r\n        if (Layout !== undefined) {\r\n            Layout.map(row => {\r\n                row.children.map(column => {\r\n                    column.children.map(component => {\r\n                        return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                            if (componentrow.inputtype === \"combo\") {\r\n                                data.push(componentrow)\r\n                            } else {\r\n                                withoutCombocomponent.push(componentrow)\r\n                            }\r\n                        })\r\n                            : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component)\r\n                    })\r\n                })\r\n            })\r\n            const comboComponents = data\r\n            let childColumnList = {};\r\n            data.map(columnList => {\r\n                const val = this.comboChild(data, columnList, childColumnList, true);\r\n                data = val.data;\r\n                childColumnList = val.childColumnList\r\n            })\r\n\r\n            this.props.getEditRegistrationComboService(inputParam,\r\n                data, this.state.selectedRecord, childColumnList,\r\n                comboComponents, withoutCombocomponent)\r\n        } else {\r\n            toast.info(\"Configure the preregister template for this registrationtype\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    editSubSampleRegistration = (inputParam) => {\r\n        let data = [];\r\n        const regSubSamplewithoutCombocomponent = []\r\n        const Layout = this.props.Login.masterData.SubSampleTemplate\r\n            && this.props.Login.masterData.SubSampleTemplate.jsondata\r\n        if (Layout !== undefined) {\r\n            Layout.map(row => {\r\n                row.children.map(column => {\r\n                    column.children.map(component => {\r\n                        return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                            if (componentrow.inputtype === \"combo\") {\r\n                                data.push(componentrow)\r\n                            } else {\r\n                                regSubSamplewithoutCombocomponent.push(componentrow)\r\n                            }\r\n                        })\r\n                            : component.inputtype === \"combo\" ? data.push(component) : regSubSamplewithoutCombocomponent.push(component)\r\n                    })\r\n                })\r\n            })\r\n            const regSubSamplecomboComponents = data\r\n            let regSubSamplechildColumnList = {};\r\n            data.map(columnList => {\r\n                const val = this.comboChild(data, columnList, regSubSamplechildColumnList, true);\r\n                data = val.data;\r\n                regSubSamplechildColumnList = val.childColumnList\r\n            })\r\n\r\n            this.props.getEditSubSampleComboService(inputParam,\r\n                data, this.state.selectedRecord, regSubSamplechildColumnList,\r\n                regSubSamplecomboComponents, regSubSamplewithoutCombocomponent,\r\n                this.state.specBasedComponent)\r\n        } else {\r\n            toast.info(\"Configure the sub sample template for this registrationtype\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore,\r\n    getSampleTypeChange, getRegTypeChange, getRegSubTypeChange,\r\n    getAttachmentCombo, viewAttachment, getCommentsCombo,\r\n    filterTransactionList, validateEsignCredential,\r\n    getSampleChildTabDetail, getTestChildTabDetailRegistration,\r\n    ReloadData, showUnderDevelopment, getPreviewTemplate,\r\n    getChildValues, getRegistrationSample,\r\n    getRegistrationsubSampleDetail, getRegistrationTestDetail,\r\n    acceptRegistration, addMoreTest, createRegistrationTest,\r\n    getEditRegistrationComboService, cancelTestAction,\r\n    cancelSampleAction, addsubSampleRegistration, saveSubSample,\r\n    getEditSubSampleComboService, onUpdateSubSampleRegistration,\r\n    cancelSubSampleAction, preregRecordToQuarantine,componentTest\r\n})(injectIntl(Registration));"]},"metadata":{},"sourceType":"module"}