{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\MoveToStoreage.jsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col, Card, FormGroup, FormLabel } from 'react-bootstrap';\nimport '@progress/kendo-react-animation';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { ReadOnlyText } from '../../components/App.styles';\n\nconst MoveToStoreage = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.isSendToStore === true ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, props.selectedRecord[\"needdatashow\"] !== true ? /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ARNO\"\n    }),\n    type: \"text\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    value: props.selectedRecord[\"sarno\"] === undefined ? '' : props.selectedRecord[\"sarno\"],\n    isMandatory: true,\n    required: false,\n    maxLength: 255,\n    isDisabled: false,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  })), props.selectedRecord[\"ssamplearno\"] && props.selectedRecord[\"ssamplearno\"] !== undefined ? /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_NEEDSUBSAMPLEARNO\"\n    }),\n    type: \"text\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    value: props.selectedRecord[\"ssamplearno\"] === undefined ? '' : props.selectedRecord[\"ssamplearno\"],\n    isMandatory: true,\n    required: false,\n    maxLength: 255,\n    isDisabled: false,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nprojecttypecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PROJECTTYPE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.ProjectType,\n    value: props.selectedRecord[\"nprojecttypecode\"] === undefined ? '' : props.selectedRecord[\"nprojecttypecode\"],\n    isMandatory: true,\n    isClearable: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'nprojecttypecode', 4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nsamplestoragelocationcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_STORAGENAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.SampleStorageLocation,\n    value: props.selectedRecord[\"nsamplestoragelocationcode\"] === undefined ? '' : props.selectedRecord[\"nsamplestoragelocationcode\"],\n    isMandatory: true,\n    isClearable: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'nsamplestoragelocationcode', 4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nsamplestoragecontainerpathcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SAMPLESTORAGEPATH\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.SampleStorageContainerPath,\n    value: props.selectedRecord[\"nsamplestoragecontainerpathcode\"] === undefined ? '' : props.selectedRecord[\"nsamplestoragecontainerpathcode\"],\n    isMandatory: true,\n    isClearable: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'nsamplestoragecontainerpathcode', 4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"alphabet\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_AVAILABLESPOSITION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.ExcelValues,\n    value: props.selectedRecord[\"alphabet\"] === undefined ? '' : props.selectedRecord[\"alphabet\"],\n    isMandatory: true,\n    isClearable: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'alphabet', 4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, props.selectedRecord[\"storagedata\"] && typeof props.selectedRecord[\"storagedata\"] === \"object\" ? Object.entries(props.selectedRecord[\"storagedata\"]).map(([key, value], index) => /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    key: `specInfo_${key}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 31\n    }\n  }, props.intl.formatMessage({\n    id: key\n  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 31\n    }\n  }, typeof value === \"object\" && value !== null ? value.label || JSON.stringify(value) : value)))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"No data available\"))))))) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default injectIntl(MoveToStoreage);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/registration/MoveToStoreage.jsx"],"names":["React","injectIntl","Row","Col","Card","FormGroup","FormLabel","FormSelectSearch","FormInput","ReadOnlyText","MoveToStoreage","props","isSendToStore","selectedRecord","intl","formatMessage","id","undefined","ProjectType","event","onComboChange","SampleStorageLocation","SampleStorageContainerPath","ExcelValues","Object","entries","map","key","value","index","label","JSON","stringify"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col, Card, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\n\r\n\r\nconst MoveToStoreage = (props) => {\r\n  return (\r\n    <>\r\n      {props.isSendToStore === true ?\r\n\r\n        <Row>\r\n          <Col md={12}>\r\n            {props.selectedRecord[\"needdatashow\"] !== true ?\r\n              <Col>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormInput\r\n                      label={props.intl.formatMessage({ id: \"IDS_ARNO\" })}\r\n                      type={\"text\"}\r\n                      placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                      value={props.selectedRecord[\"sarno\"] === undefined ? '' : props.selectedRecord[\"sarno\"]}\r\n                      isMandatory={true}\r\n                      required={false}\r\n                      maxLength={255}\r\n                      isDisabled={false}\r\n                      readOnly={true}\r\n                    />\r\n                  </Col>\r\n                  {props.selectedRecord[\"ssamplearno\"] && props.selectedRecord[\"ssamplearno\"] !== undefined ?\r\n                    <Col md={6}>\r\n                      <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_NEEDSUBSAMPLEARNO\" })}\r\n                        type={\"text\"}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        value={props.selectedRecord[\"ssamplearno\"] === undefined ? '' : props.selectedRecord[\"ssamplearno\"]}\r\n                        isMandatory={true}\r\n                        required={false}\r\n                        maxLength={255}\r\n                        isDisabled={false}\r\n                        readOnly={true}\r\n                      />\r\n                    </Col>\r\n                    :\r\n                    <></>\r\n                  }\r\n                </Row>\r\n\r\n\r\n                <FormSelectSearch\r\n                  name={\"nprojecttypecode\"}\r\n                  formLabel={props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                  placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                  options={props.ProjectType}\r\n                  value={props.selectedRecord[\"nprojecttypecode\"] === undefined ? '' : props.selectedRecord[\"nprojecttypecode\"]}\r\n                  isMandatory={true}\r\n                  isClearable={false}\r\n                  isMulti={false}\r\n                  isSearchable={true}\r\n                  isDisabled={false}\r\n                  closeMenuOnSelect={true}\r\n                  onChange={(event) => props.onComboChange(event, 'nprojecttypecode', 4)}\r\n                />\r\n\r\n                <FormSelectSearch\r\n                  name={\"nsamplestoragelocationcode\"}\r\n                  formLabel={props.intl.formatMessage({ id: \"IDS_STORAGENAME\" })}\r\n                  placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                  options={props.SampleStorageLocation}\r\n                  value={props.selectedRecord[\"nsamplestoragelocationcode\"] === undefined ? '' : props.selectedRecord[\"nsamplestoragelocationcode\"]}\r\n                  isMandatory={true}\r\n                  isClearable={false}\r\n                  isMulti={false}\r\n                  isSearchable={true}\r\n                  isDisabled={false}\r\n                  closeMenuOnSelect={true}\r\n                  onChange={(event) => props.onComboChange(event, 'nsamplestoragelocationcode', 4)}\r\n                />\r\n\r\n                <FormSelectSearch\r\n                  name={\"nsamplestoragecontainerpathcode\"}\r\n                  formLabel={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGEPATH\" })}\r\n                  placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                  options={props.SampleStorageContainerPath}\r\n                  value={props.selectedRecord[\"nsamplestoragecontainerpathcode\"] === undefined ? '' : props.selectedRecord[\"nsamplestoragecontainerpathcode\"]}\r\n                  isMandatory={true}\r\n                  isClearable={false}\r\n                  isMulti={false}\r\n                  isSearchable={true}\r\n                  isDisabled={false}\r\n                  closeMenuOnSelect={true}\r\n                  onChange={(event) => props.onComboChange(event, 'nsamplestoragecontainerpathcode', 4)}\r\n                />\r\n\r\n                <FormSelectSearch\r\n                  name={\"alphabet\"}\r\n                  formLabel={props.intl.formatMessage({ id: \"IDS_AVAILABLESPOSITION\" })}\r\n                  placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                  options={props.ExcelValues}\r\n                  value={props.selectedRecord[\"alphabet\"] === undefined ? '' : props.selectedRecord[\"alphabet\"]}\r\n                  isMandatory={true}\r\n                  isClearable={false}\r\n                  isMulti={false}\r\n                  isSearchable={true}\r\n                  isDisabled={false}\r\n                  closeMenuOnSelect={true}\r\n                  onChange={(event) => props.onComboChange(event, 'alphabet', 4)}\r\n                />\r\n              </Col>\r\n              :\r\n              <Col>\r\n\r\n                <Card className=\"one\">\r\n                  {/* <Card.Header>\r\n                    <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                      <h4>{props.intl.formatMessage({ id: \"IDS_STORED\" })}</h4>\r\n                    </span>\r\n                  </Card.Header> */}\r\n                  <Card.Body>\r\n                    <Row>\r\n                      {props.selectedRecord[\"storagedata\"] &&\r\n                        typeof props.selectedRecord[\"storagedata\"] === \"object\" ? (\r\n                        Object.entries(props.selectedRecord[\"storagedata\"]).map(([key, value], index) => (\r\n                          <Col md={6}\r\n                            key={`specInfo_${key}`}>\r\n                            <FormGroup>\r\n                              <FormLabel>{props.intl.formatMessage({ id: key })}</FormLabel>\r\n                              <ReadOnlyText>\r\n                                {typeof value === \"object\" && value !== null ? value.label || JSON.stringify(value) : value}\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                        ))\r\n                      ) : (\r\n                        <p>No data available</p>\r\n                      )}\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n\r\n              </Col>\r\n            }\r\n\r\n          </Col>\r\n        </Row>\r\n        :\r\n        <></>\r\n      }\r\n    </>)\r\n}\r\nexport default injectIntl(MoveToStoreage);\r\n"]},"metadata":{},"sourceType":"module"}