{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\pages\\\\dashboardtypes\\\\AlertView.jsx\";\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { callService, crudMaster, updateStore, validateEsignCredential, filterColumnData, selectedAlertView } from '../../actions';\nimport { sortData } from '../../components/CommonScript';\nimport { process } from '@progress/kendo-data-query';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { ProductList } from '../../pages/product/product.styled';\nimport { Attachments } from '../../components/dropzone/dropzone.styles';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass AlertView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.Login.masterData.selectedAlertView, event.data),\n        dataState: event.data\n      });\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: \"alertview\",\n        methodUrl: \"AlertView\",\n        displayName: \"IDS_ALERTVIEW\",\n        userInfo: this.props.Login.userInfo\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.formRef = React.createRef();\n    this.extractedColumnList = [];\n    const dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      dataResult: [],\n      dataState: dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      sidebarview: false\n    };\n    this.searchRef = React.createRef();\n  }\n\n  render() {\n    const filterParam = {\n      inputListName: \"AlertView\",\n      selectedObject: \"selectedAlertView\",\n      primaryKeyField: \"nsqlquerycode\",\n      fetchUrl: \"alertview/getSelectedAlertView\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: [\"ssqlqueryname\"]\n    };\n    const gridColumnList = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.selectedAlertView !== undefined && this.props.Login.masterData.selectedAlertView.length > 0) {\n      Object.keys(this.props.Login.masterData.selectedAlertView[0]).forEach(key => {\n        gridColumnList.push({\n          \"idsName\": this.props.intl.formatMessage({\n            id: key\n          }),\n          \"dataField\": key,\n          \"width\": \"200px\" //  \"isIdsField\":key.includes(\"STATUS\")\n\n        });\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_ALERTVIEW\"\n      }),\n      masterData: this.props.Login.masterData || [],\n      userInfo: this.props.Login.userInfo,\n      masterList: sortData(this.props.Login.masterData.searchedData || this.props.Login.masterData.AlertView || [], 'descending', 'nalertrightscode'),\n      getMasterDetail: AlertView => this.props.selectedAlertView(AlertView, this.props.Login.userInfo, this.props.Login.masterData, this.state.dataState),\n      selectedMaster: this.props.Login.masterData.SelectedAlert,\n      primaryKeyField: \"nsqlquerycode\",\n      mainField: \"ssqlqueryname\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '8' : \"10\"}`,\n      className: \"position-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn \",\n      onClick: this.props.parentFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, !this.props.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(ProductList, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.sqlQueryName)), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }, this.props.Login.masterData.selectedAlertView && this.props.Login.masterData.selectedAlertView.length > 0 ? /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nsqlquerycode\",\n      data: this.props.Login.masterData.selectedAlertView,\n      dataResult: this.state.dataResult,\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      extractedColumnList: gridColumnList,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      userInfo: this.props.Login.userInfo,\n      pageable: true,\n      scrollable: \"auto\",\n      isComponent: false,\n      isActionRequired: false,\n      isToolBarRequired: false,\n      selectedId: this.props.Login.selectedId,\n      name: \"IDS_ALERTVIEW\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(Attachments, {\n      className: \"norecordtxt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_NORECORDSAVAILABLE\"\n    })))))))));\n  }\n\n  componentDidUpdate(previousProps) {\n    let isStateChanged = false;\n    let dataState = this.state.dataState;\n    let dataResult = this.state.dataResult;\n\n    if (this.props.Login.dataState && this.props.Login.dataState !== previousProps.Login.dataState) {\n      dataState = this.props.Login.dataState;\n      isStateChanged = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      dataResult = process(this.props.Login.masterData.selectedAlertView || [], dataState);\n      isStateChanged = true;\n    }\n\n    if (isStateChanged) {\n      this.setState({\n        dataResult,\n        dataState\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  selectedAlertView,\n  updateStore,\n  validateEsignCredential,\n  filterColumnData\n})(injectIntl(AlertView));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/pages/dashboardtypes/AlertView.jsx"],"names":["React","Row","Col","Card","connect","injectIntl","callService","crudMaster","updateStore","validateEsignCredential","filterColumnData","selectedAlertView","sortData","process","ListMaster","DataGrid","ProductList","Attachments","mapStateToProps","state","Login","AlertView","Component","constructor","props","sidebarExpandCollapse","setState","sidebarview","dataStateChange","event","dataResult","masterData","data","dataState","reloadData","searchRef","current","value","inputParam","inputData","userInfo","classUrl","methodUrl","displayName","formRef","createRef","extractedColumnList","skip","take","settings","parseInt","userRoleControlRights","controlMap","Map","render","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","userinfo","searchFieldList","gridColumnList","undefined","length","Object","keys","forEach","key","push","intl","formatMessage","id","searchedData","SelectedAlert","parentFunction","sqlQueryName","selectedId","componentDidUpdate","previousProps","isStateChanged"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential, filterColumnData,\r\n    selectedAlertView\r\n} from '../../actions';\r\nimport { sortData } from '../../components/CommonScript';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { ProductList } from '../../pages/product/product.styled';\r\nimport { Attachments } from '../../components/dropzone/dropzone.styles';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass AlertView extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n        this.state = {\r\n            data: [],\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [], controlMap: new Map(),\r\n            sidebarview: false\r\n        }\r\n        this.searchRef = React.createRef();\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.selectedAlertView, event.data),\r\n            dataState: event.data\r\n        });\r\n    }\r\n\r\n    render() {\r\n        \r\n        const filterParam = {\r\n            inputListName: \"AlertView\", selectedObject: \"selectedAlertView\", primaryKeyField: \"nsqlquerycode\",\r\n            fetchUrl: \"alertview/getSelectedAlertView\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"ssqlqueryname\"]\r\n        };\r\n\r\n        const gridColumnList = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedAlertView !== undefined\r\n             && this.props.Login.masterData.selectedAlertView.length > 0) \r\n        {\r\n            Object.keys(this.props.Login.masterData.selectedAlertView[0]).forEach(key => {\r\n                gridColumnList.push(\r\n                    {\r\n                     \"idsName\": this.props.intl.formatMessage({id: key}), \r\n                     \"dataField\": key, \r\n                     \"width\": \"200px\",\r\n                    //  \"isIdsField\":key.includes(\"STATUS\")\r\n                    }\r\n                );\r\n            });\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-4\">\r\n                    <Row noGutters={true}>\r\n                    <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}> \r\n                        <ListMaster\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_ALERTVIEW\" })}\r\n                                masterData={this.props.Login.masterData || []}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={sortData((this.props.Login.masterData.searchedData || this.props.Login.masterData.AlertView ) || [], 'descending', 'nalertrightscode')}\r\n                                getMasterDetail={(AlertView) => this.props.selectedAlertView(AlertView, this.props.Login.userInfo, this.props.Login.masterData, this.state.dataState)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedAlert}\r\n                                primaryKeyField=\"nsqlquerycode\"\r\n                                mainField=\"ssqlqueryname\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?                    \r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i> \r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <ProductList className=\"panel-main-content\">\r\n                                {/* {this.props.Login.masterData.AlertView && this.props.Login.masterData.AlertView.length > 0 && this.props.Login.masterData.selectedAlertView ? */}\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">{this.props.Login.masterData.sqlQueryName}</Card.Title>\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n\r\n                                            {this.props.Login.masterData.selectedAlertView  && this.props.Login.masterData.selectedAlertView.length > 0 ?\r\n                                            <DataGrid primaryKeyField={\"nsqlquerycode\"}\r\n                                                data={this.props.Login.masterData.selectedAlertView}\r\n                                                dataResult={this.state.dataResult}\r\n                                                dataState={this.state.dataState}\r\n                                                dataStateChange={this.dataStateChange}\r\n                                                extractedColumnList={gridColumnList}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                pageable={true}\r\n                                                scrollable={\"auto\"}\r\n                                                isComponent={false}\r\n                                                isActionRequired={false}\r\n                                                isToolBarRequired={false}\r\n                                                selectedId={this.props.Login.selectedId}\r\n                                                name=\"IDS_ALERTVIEW\"\r\n                                            /> : \r\n                                            <Attachments className = \"norecordtxt\">\r\n                                                {this.props.intl.formatMessage({id:\"IDS_NORECORDSAVAILABLE\"})}\r\n                                            </Attachments>\r\n                                            }\r\n                                        </Card.Body>\r\n                                    </Card> \r\n                                    {/* : \"\"} */}\r\n                            </ProductList>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"alertview\",\r\n            methodUrl: \"AlertView\",\r\n            displayName: \"IDS_ALERTVIEW\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let isStateChanged =false;\r\n        let dataState = this.state.dataState;\r\n        let dataResult = this.state.dataResult;\r\n        if (this.props.Login.dataState && this.props.Login.dataState !== previousProps.Login.dataState) {\r\n            dataState = this.props.Login.dataState;\r\n            isStateChanged = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {   \r\n             dataResult =  process(this.props.Login.masterData.selectedAlertView || [], dataState);\r\n             isStateChanged = true;\r\n        }\r\n      \r\n        if (isStateChanged){\r\n            this.setState({dataResult,  dataState});\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,\r\n    {\r\n        callService, crudMaster, selectedAlertView, updateStore,\r\n        validateEsignCredential, filterColumnData\r\n    })(injectIntl(AlertView));"]},"metadata":{},"sourceType":"module"}