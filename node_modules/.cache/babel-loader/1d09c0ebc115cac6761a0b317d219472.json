{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{constructOptionList}from'../components/CommonScript';export function showRegTypeAddScreen(userInfo,ncontrolcode){return function(dispatch){dispatch(initRequest(true));rsapi.post('registrationtype/getSampleType',{\"userinfo\":userInfo}).then(function(response){var optionsSampleTypeMap=constructOptionList(response.data.SampleTypes||[],\"nsampletypecode\",\"ssampletypename\",undefined,undefined,true);//const optionsRegTypeMap  = constructOptionList(response.data.checklistcomponent  || [], \"nchecklistcomponentcode\",\"scomponentname\" , undefined, undefined, true);\nvar optionsSampleType=optionsSampleTypeMap.get(\"OptionList\");//const optionsChecklistComponent = optionsChecklistComponentMap.get(\"OptionList\");\ndispatch({type:DEFAULT_RETURN,payload:{//optionsQBCategory,\noptionsSampleType:optionsSampleType,openModal:true,operation:\"create\",selectedRecord:{},ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function fetchRegTypeById(editParam){return function(dispatch){var _rsapi$post;var URL1=rsapi.post('registrationtype/getSampleType',{\"userinfo\":editParam.userInfo});var URL2=rsapi.post(\"registrationtype/getRegistrationTypeById\",(_rsapi$post={},_defineProperty(_rsapi$post,editParam.primaryKeyField,editParam.primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",editParam.userInfo),_rsapi$post));dispatch(initRequest(true));Axios.all([URL1,URL2]).then(function(response){var selectedRecord={};var selectedId=editParam.primaryKeyValue;var optionsSampleTypeMap=constructOptionList(response[0].data.SampleTypes||[],\"nsampletypecode\",\"ssampletypename\",undefined,undefined,true);//const optionsChecklistComponentMap  = constructOptionList(response[0].data.checklistcomponent  || [], \"nchecklistcomponentcode\",\"scomponentname\" , undefined, undefined, true);\nvar optionsSampleType=optionsSampleTypeMap.get(\"OptionList\");//const optionsChecklistComponent = optionsChecklistComponentMap.get(\"OptionList\");\nselectedRecord=response[1].data;selectedRecord['SampleTypes']={value:response[1].data.nsampletypecode,label:response[1].data.ssampletypename};//selectedRecord['valueChecklistComponent']={value:response[1].data.nchecklistcomponentcode,label:response[1].data.scomponentname}\nvar mandatoryFields=[{\"idsName\":\"IDS_SAMPLETYPENAME\",\"dataField\":\"SampleTypes\"},{\"idsName\":\"IDS_REGISTRATIONTYPENAME\",\"dataField\":\"sregtypename\"},{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\"}];// if(parseInt(response[1].data.nchecklistcomponentcode)===1||parseInt(response[1].data.nchecklistcomponentcode)===4||parseInt(response[1].data.nchecklistcomponentcode)===8){\n//     mandatoryFields.push({\"idsName\":\"IDS_QUESTIONDATA\",\"dataField\":\"squestiondata\"})\n// }\ndispatch({type:DEFAULT_RETURN,payload:{selectedRecord:response[1].data,operation:editParam.operation,optionsSampleType:optionsSampleType,openModal:true,screenName:editParam.screenName,ncontrolcode:editParam.ncontrolCode,loading:false,selectedId:selectedId,mandatoryFields:mandatoryFields}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/RegistrationTypeMasterAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","constructOptionList","showRegTypeAddScreen","userInfo","ncontrolcode","dispatch","post","then","response","optionsSampleTypeMap","data","SampleTypes","undefined","optionsSampleType","get","type","payload","openModal","operation","selectedRecord","loading","catch","error","status","message","warn","fetchRegTypeById","editParam","URL1","URL2","primaryKeyField","primaryKeyValue","all","selectedId","value","nsampletypecode","label","ssampletypename","mandatoryFields","screenName","ncontrolCode"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAAQC,cAAR,KAA6B,cAA7B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,mBAAT,KAAoC,4BAApC,CAEA,MAAO,SAASC,CAAAA,oBAAT,CAA+BC,QAA/B,CAAyCC,YAAzC,CAAsD,CACzD,MAAO,UAASC,QAAT,CAAkB,CACrBA,QAAQ,CAACL,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAJ,KAAK,CAACU,IAAN,CAAW,gCAAX,CAA4C,CAAC,WAAWH,QAAZ,CAA5C,EACCI,IADD,CACM,SAAAC,QAAQ,CAAG,CAEb,GAAMC,CAAAA,oBAAoB,CAAGR,mBAAmB,CAACO,QAAQ,CAACE,IAAT,CAAcC,WAAd,EAA6B,EAA9B,CAAkC,iBAAlC,CAAoD,iBAApD,CAAuEC,SAAvE,CAAkFA,SAAlF,CAA6F,IAA7F,CAAhD,CACA;AAEA,GAAMC,CAAAA,iBAAiB,CAAGJ,oBAAoB,CAACK,GAArB,CAAyB,YAAzB,CAA1B,CACA;AACAT,QAAQ,CAAC,CACLU,IAAI,CAAElB,cADD,CACiBmB,OAAO,CAAC,CAC1B;AACAH,iBAAiB,CAAjBA,iBAF0B,CAG1BI,SAAS,CAAC,IAHgB,CAI1BC,SAAS,CAAC,QAJgB,CAK1BC,cAAc,CAAC,EALW,CAMxBf,YAAY,CAAZA,YANwB,CAMXgB,OAAO,CAAC,KANG,CADzB,CAAD,CAAR,CAUH,CAlBD,EAmBCC,KAnBD,CAmBO,SAAAC,KAAK,CAAI,CACZjB,QAAQ,CAAC,CAACU,IAAI,CAAElB,cAAP,CAAuBmB,OAAO,CAAE,CAACI,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACd,QAAN,CAAee,MAAf,GAA0B,GAA9B,CAAkC,CAC9BzB,KAAK,CAACwB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGI,CACA1B,KAAK,CAAC2B,IAAN,CAAWH,KAAK,CAACd,QAAN,CAAeE,IAA1B,EACH,CACJ,CA3BD,EA4BH,CA9BD,CA+BH,CAGD,MAAO,SAASgB,CAAAA,gBAAT,CAA2BC,SAA3B,CAAqC,CACxC,MAAO,UAAStB,QAAT,CAAkB,iBACrB,GAAMuB,CAAAA,IAAI,CAAEhC,KAAK,CAACU,IAAN,CAAW,gCAAX,CAA4C,CAAC,WAAWqB,SAAS,CAACxB,QAAtB,CAA5C,CAAZ,CACA,GAAM0B,CAAAA,IAAI,CAACjC,KAAK,CAACU,IAAN,CAAW,0CAAX,6CAA0DqB,SAAS,CAACG,eAApE,CAAsFH,SAAS,CAACI,eAAhG,8BAAkH,UAAlH,CAA8HJ,SAAS,CAACxB,QAAxI,eAAX,CACAE,QAAQ,CAACL,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACiC,GAAN,CAAU,CAACJ,IAAD,CAAMC,IAAN,CAAV,EACCtB,IADD,CACM,SAAAC,QAAQ,CAAG,CACb,GAAIW,CAAAA,cAAc,CAAC,EAAnB,CACA,GAAIc,CAAAA,UAAU,CAAGN,SAAS,CAACI,eAA3B,CACA,GAAMtB,CAAAA,oBAAoB,CAAGR,mBAAmB,CAACO,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,CAAiBC,WAAjB,EAAgC,EAAjC,CAAqC,iBAArC,CAAuD,iBAAvD,CAA0EC,SAA1E,CAAqFA,SAArF,CAAgG,IAAhG,CAAhD,CACA;AACA,GAAMC,CAAAA,iBAAiB,CAAGJ,oBAAoB,CAACK,GAArB,CAAyB,YAAzB,CAA1B,CACA;AACAK,cAAc,CAACX,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAA3B,CACAS,cAAc,CAAC,aAAD,CAAd,CAA8B,CAACe,KAAK,CAAC1B,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,CAAiByB,eAAxB,CAAwCC,KAAK,CAAC5B,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,CAAiB2B,eAA/D,CAA9B,CACA;AACA,GAAIC,CAAAA,eAAe,CAAC,CAChB,CAAC,UAAU,oBAAX,CAAgC,YAAY,aAA5C,CADgB,CAEhB,CAAC,UAAU,0BAAX,CAAsC,YAAY,cAAlD,CAFgB,CAGhB,CAAC,UAAU,iBAAX,CAA6B,YAAY,cAAzC,CAHgB,CAApB,CAKA;AACA;AACA;AACAjC,QAAQ,CAAC,CACLU,IAAI,CAAElB,cADD,CACiBmB,OAAO,CAAC,CAC9BG,cAAc,CAAGX,QAAQ,CAAC,CAAD,CAAR,CAAYE,IADC,CAE9BQ,SAAS,CAACS,SAAS,CAACT,SAFU,CAG9BL,iBAAiB,CAAjBA,iBAH8B,CAI9BI,SAAS,CAAE,IAJmB,CAK9BsB,UAAU,CAACZ,SAAS,CAACY,UALS,CAM9BnC,YAAY,CAACuB,SAAS,CAACa,YANO,CAO9BpB,OAAO,CAAC,KAPsB,CAOhBa,UAAU,CAAVA,UAPgB,CAQ9BK,eAAe,CAAfA,eAR8B,CADzB,CAAD,CAAR,CAaH,CAhCD,EAiCCjB,KAjCD,CAiCO,SAAAC,KAAK,CAAI,CACZjB,QAAQ,CAAC,CAACU,IAAI,CAAElB,cAAP,CAAuBmB,OAAO,CAAE,CAACI,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACA,GAAIE,KAAK,CAACd,QAAN,CAAee,MAAf,GAA0B,GAA9B,CAAkC,CAC9BzB,KAAK,CAACwB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGI,CACA1B,KAAK,CAAC2B,IAAN,CAAWH,KAAK,CAACd,QAAN,CAAeE,IAA1B,EACH,CACJ,CAzCD,EA0CH,CA9CD,CA+CF","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios'\r\nimport { initRequest } from './LoginAction';\r\nimport { constructOptionList } from '../components/CommonScript';\r\n\r\nexport function showRegTypeAddScreen (userInfo, ncontrolcode){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post('registrationtype/getSampleType',{\"userinfo\":userInfo}) \r\n        .then(response=> { \r\n           \r\n            const optionsSampleTypeMap = constructOptionList(response.data.SampleTypes || [], \"nsampletypecode\",\"ssampletypename\", undefined, undefined, true);\r\n            //const optionsRegTypeMap  = constructOptionList(response.data.checklistcomponent  || [], \"nchecklistcomponentcode\",\"scomponentname\" , undefined, undefined, true);\r\n\r\n            const optionsSampleType = optionsSampleTypeMap.get(\"OptionList\");\r\n            //const optionsChecklistComponent = optionsChecklistComponentMap.get(\"OptionList\");\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload:{\r\n                    //optionsQBCategory,\r\n                    optionsSampleType,\r\n                    openModal:true,\r\n                    operation:\"create\",\r\n                    selectedRecord:{}\r\n                    , ncontrolcode,loading:false\r\n                }\r\n            });         \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function fetchRegTypeById (editParam){  \r\n    return function(dispatch){\r\n        const URL1= rsapi.post('registrationtype/getSampleType',{\"userinfo\":editParam.userInfo})\r\n        const URL2=rsapi.post(\"registrationtype/getRegistrationTypeById\", { [editParam.primaryKeyField] :editParam.primaryKeyValue , \"userinfo\": editParam.userInfo} )\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL1,URL2])\r\n        .then(response=> { \r\n            let selectedRecord={}\r\n            let selectedId = editParam.primaryKeyValue;\r\n            const optionsSampleTypeMap = constructOptionList(response[0].data.SampleTypes || [], \"nsampletypecode\",\"ssampletypename\", undefined, undefined, true);\r\n            //const optionsChecklistComponentMap  = constructOptionList(response[0].data.checklistcomponent  || [], \"nchecklistcomponentcode\",\"scomponentname\" , undefined, undefined, true);\r\n            const optionsSampleType = optionsSampleTypeMap.get(\"OptionList\");\r\n            //const optionsChecklistComponent = optionsChecklistComponentMap.get(\"OptionList\");\r\n            selectedRecord=response[1].data\r\n            selectedRecord['SampleTypes']={value:response[1].data.nsampletypecode,label:response[1].data.ssampletypename}\r\n            //selectedRecord['valueChecklistComponent']={value:response[1].data.nchecklistcomponentcode,label:response[1].data.scomponentname}\r\n            let mandatoryFields=[\r\n                {\"idsName\":\"IDS_SAMPLETYPENAME\",\"dataField\":\"SampleTypes\"},\r\n                {\"idsName\":\"IDS_REGISTRATIONTYPENAME\",\"dataField\":\"sregtypename\"},\r\n                {\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\"},\r\n            ];\r\n            // if(parseInt(response[1].data.nchecklistcomponentcode)===1||parseInt(response[1].data.nchecklistcomponentcode)===4||parseInt(response[1].data.nchecklistcomponentcode)===8){\r\n            //     mandatoryFields.push({\"idsName\":\"IDS_QUESTIONDATA\",\"dataField\":\"squestiondata\"})\r\n            // }\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload:{\r\n                selectedRecord : response[1].data,\r\n                operation:editParam.operation,\r\n                optionsSampleType,\r\n                openModal: true,\r\n                screenName:editParam.screenName,\r\n                ncontrolcode:editParam.ncontrolCode,\r\n                loading:false,selectedId,\r\n                mandatoryFields\r\n            }\r\n            }); \r\n            \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })\r\n    }\r\n }"]},"metadata":{},"sourceType":"module"}