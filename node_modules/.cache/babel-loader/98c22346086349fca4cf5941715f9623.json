{"ast":null,"code":"import React from'react';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{Col,Row,FormGroup,Card}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import{injectIntl}from'react-intl';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';var AddTestGroupNumericSpecification=function AddTestGroupNumericSpecification(props){var _props$parameterData=props.parameterData,needActualResult=_props$parameterData.needActualResult,grade=_props$parameterData.grade,gradenew=_props$parameterData.gradenew;return/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_GENDER\"}),isSearchable:true,name:\"ngendercode\"// isDisabled={needActualResult}\n,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"})// isMandatory={!needActualResult}\n,isMandatory:true,options:grade||[],optionId:\"ngendercode\",optionValue:\"sgendername\",value:props.selectedRecord&&props.selectedRecord[\"ngendercode\"]?props.selectedRecord[\"ngendercode\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"ngendercode\",1);},alphabeticalSort:true}),/*#__PURE__*/React.createElement(FormNumericInput,{name:\"nfromage\",label:props.intl.formatMessage({id:\"IDS_FROMAGE\"}),type:\"number\",value:props.selectedRecord[\"nfromage\"],placeholder:props.intl.formatMessage({id:\"IDS_FROMAGE\"}),strict:true,min:0,isMandatory:true//max={9999999.99}\n,maxLength:3,onChange:function onChange(value){return props.onNumericInputChange(value,\"nfromage\");},noStyle:true,className:\"form-control\",errors:\"Please provide a valid number.\"}),/*#__PURE__*/React.createElement(FormNumericInput,{name:\"ntoage\",label:props.intl.formatMessage({id:\"IDS_TOAGE\"}),type:\"number\",value:props.selectedRecord[\"ntoage\"],placeholder:props.intl.formatMessage({id:\"IDS_TOAGE\"}),strict:true,min:0,isMandatory:true//max={9999999.99}\n,maxLength:3,onChange:function onChange(value){return props.onNumericInputChange(value,\"ntoage\");},noStyle:true,className:\"form-control\",errors:\"Please provide a valid number.\"}),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,props.intl.formatMessage({id:\"IDS_OUTERBAND\"})),/*#__PURE__*/React.createElement(Card.Body,{style:{\"padding-bottom\":\"0\"}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormInput,{name:\"nlowb\",label:props.intl.formatMessage({id:\"IDS_LOWB\"}),type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"nlowb\"]?props.selectedRecord[\"nlowb\"]:\"\",placeholder:props.intl.formatMessage({id:\"IDS_LOWB\"}),onChange:function onChange(event){return props.onInputOnChange(event,4);},maxLength:10})),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormInput,{name:\"nhighb\",label:props.intl.formatMessage({id:\"IDS_HIGHB\"}),type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"nhighb\"]?props.selectedRecord[\"nhighb\"]:\"\",placeholder:props.intl.formatMessage({id:\"IDS_HIGHB\"}),onChange:function onChange(event){return props.onInputOnChange(event,4);},maxLength:10})))))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,props.intl.formatMessage({id:\"IDS_INNERBAND\"})),/*#__PURE__*/React.createElement(Card.Body,{style:{\"padding-bottom\":\"0\"}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormInput,{name:\"nlowa\",label:props.intl.formatMessage({id:\"IDS_LOWA\"}),type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"nlowa\"]?props.selectedRecord[\"nlowa\"]:\"\",placeholder:props.intl.formatMessage({id:\"IDS_LOWA\"}),onChange:function onChange(event){return props.onInputOnChange(event,4);},maxLength:10})),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormInput,{name:\"nhigha\",label:props.intl.formatMessage({id:\"IDS_HIGHA\"}),type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"nhigha\"]?props.selectedRecord[\"nhigha\"]:\"\",placeholder:props.intl.formatMessage({id:\"IDS_HIGHA\"}),onChange:function onChange(event){return props.onInputOnChange(event,4);},maxLength:10})))))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{name:\"sresultvalue\",label:props.intl.formatMessage({id:\"IDS_DEFAULTRESULT\"}),type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"sresultvalue\"]?props.selectedRecord[\"sresultvalue\"]:\"\",placeholder:props.intl.formatMessage({id:\"IDS_DEFAULTRESULT\"}),onChange:function onChange(event){return props.onInputOnChange(event,8);},maxLength:10})),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_GRADE\"}),isSearchable:false,name:\"ngradecode\",isDisabled:props.selectedRecord[\"sresultvalue\"]===null||props.selectedRecord[\"sresultvalue\"]===\"\"||props.selectedRecord[\"sresultvalue\"]===undefined,placeholder:\"Please Select...\",isMandatory:false,showOption:false,options:gradenew||[],optionId:\"ngradecode\",optionValue:\"sgradename\",value:props.selectedRecord?props.selectedRecord[\"ngradecode\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"ngradecode\",1);},alphabeticalSort:true//isClearable={true}\n})))))));};export default injectIntl(AddTestGroupNumericSpecification);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/AddTestGroupNumericSpecification.jsx"],"names":["React","FormSelectSearch","Col","Row","FormGroup","Card","FormInput","injectIntl","FormTextarea","FormNumericInput","AddTestGroupNumericSpecification","props","parameterData","needActualResult","grade","gradenew","intl","formatMessage","id","selectedRecord","value","onComboChange","onNumericInputChange","event","onInputOnChange","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col, Row, FormGroup, Card } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\n\r\nconst AddTestGroupNumericSpecification = (props) => {\r\n    const { needActualResult, grade,gradenew} = props.parameterData;\r\n    \r\n   \r\n    return (\r\n        <Col md=\"12\">\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_GENDER\" })}\r\n                isSearchable={true}\r\n                name={\"ngendercode\"}\r\n                // isDisabled={needActualResult}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                // isMandatory={!needActualResult}\r\n                isMandatory={true}\r\n                options={grade || []}\r\n                optionId='ngendercode'\r\n                optionValue='sgendername'\r\n                value={props.selectedRecord && props.selectedRecord[\"ngendercode\"] ? props.selectedRecord[\"ngendercode\"] : \"\"}\r\n                onChange={value => props.onComboChange(value, \"ngendercode\", 1)}\r\n                alphabeticalSort={true}\r\n            >\r\n            </FormSelectSearch>\r\n\r\n\r\n            <FormNumericInput\r\n                name={\"nfromage\"}\r\n                label={props.intl.formatMessage({ id: \"IDS_FROMAGE\" })}\r\n                type=\"number\"\r\n                value={props.selectedRecord[\"nfromage\"]}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_FROMAGE\" })}\r\n                strict={true}\r\n                min={0}\r\n                isMandatory={true}\r\n                //max={9999999.99}\r\n                maxLength={3}\r\n                onChange={(value) => props.onNumericInputChange(value, \"nfromage\")}\r\n                noStyle={true}\r\n                className=\"form-control\"\r\n                errors=\"Please provide a valid number.\"\r\n            />\r\n\r\n\r\n            <FormNumericInput\r\n                name={\"ntoage\"}\r\n                label={props.intl.formatMessage({ id: \"IDS_TOAGE\" })}\r\n                type=\"number\"\r\n                value={props.selectedRecord[\"ntoage\"]}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_TOAGE\" })}\r\n                strict={true}\r\n                min={0}\r\n                isMandatory={true}\r\n                //max={9999999.99}\r\n                maxLength={3}\r\n                onChange={(value) => props.onNumericInputChange(value, \"ntoage\")}\r\n                noStyle={true}\r\n                className=\"form-control\"\r\n                errors=\"Please provide a valid number.\"\r\n            />\r\n\r\n            {/* <FormGroup>\r\n                <Card>\r\n                    <Card.Header>{props.intl.formatMessage({ id: \"IDS_OUTERBAND\" })}</Card.Header>\r\n                    <Card.Body>\r\n                        <Row>\r\n\r\n                            <Col md={6}>\r\n                                <FormNumericInput\r\n                                    name={\"nlowb\"}\r\n                                    label={props.intl.formatMessage({ id: \"IDS_LOWB\" })}\r\n                                    type=\"number\"\r\n                                    value={props.selectedRecord[\"nlowb\"]}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_LOWB\" })}\r\n                                    strict={true}\r\n                                    min={0}\r\n                                    //max={9999999.99}\r\n                                    maxLength={11}\r\n                                    onChange={(value) => props.onNumericInputChange(value, \"nlowb\")}\r\n                                    noStyle={true}\r\n                                    precision={2}\r\n                                    className=\"form-control\"\r\n                                    errors=\"Please provide a valid number.\"\r\n                                />\r\n\r\n                            </Col>\r\n\r\n\r\n\r\n                            \r\n                            <Col md={6}>\r\n                                <FormNumericInput\r\n                                    name={\"nhighb\"}\r\n                                    label={props.intl.formatMessage({ id: \"IDS_HIGHB\" })}\r\n                                    type=\"number\"\r\n                                    value={props.selectedRecord[\"nhighb\"]}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_HIGHB\" })}\r\n                                    strict={true}\r\n                                    min={0}\r\n                                    //max={9999999.99}\r\n                                    maxLength={11}\r\n                                    onChange={(value) => props.onNumericInputChange(value, \"nhighb\")}\r\n                                    noStyle={true}\r\n                                    precision={2}\r\n                                    className=\"form-control\"\r\n                                    errors=\"Please provide a valid number.\"\r\n                                />\r\n\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </FormGroup> */}\r\n\r\n<FormGroup>\r\n                    <Card>\r\n                        <Card.Header>{props.intl.formatMessage({ id:\"IDS_OUTERBAND\"})}</Card.Header>\r\n                        <Card.Body style={{\"padding-bottom\": \"0\"}}>\r\n                            <Row>\r\n                                <Col md=\"6\">\r\n                                    <FormInput\r\n                                        name=\"nlowb\"\r\n                                        label={ props.intl.formatMessage({ id:\"IDS_LOWB\"}) } \r\n                                        type=\"text\"\r\n                                        required={false}\r\n                                        isMandatory={false}\r\n                                        value={props.selectedRecord[\"nlowb\"]?props.selectedRecord[\"nlowb\"]:\"\"}\r\n                                        placeholder={ props.intl.formatMessage({ id:\"IDS_LOWB\"}) } \r\n                                        onChange = { (event) => props.onInputOnChange(event, 4) }\r\n                                        maxLength={10}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col md=\"6\">\r\n                                    <FormInput\r\n                                        name=\"nhighb\"\r\n                                        label={ props.intl.formatMessage({ id:\"IDS_HIGHB\"}) } \r\n                                        type=\"text\"\r\n                                        required={false}\r\n                                        isMandatory={false}\r\n                                        value={props.selectedRecord[\"nhighb\"]?props.selectedRecord[\"nhighb\"]:\"\"}\r\n                                        placeholder={ props.intl.formatMessage({ id:\"IDS_HIGHB\"}) } \r\n                                        onChange = { (event) => props.onInputOnChange(event, 4) }\r\n                                        maxLength={10}\r\n\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </FormGroup>\r\n            {/* <FormGroup>\r\n                <Card>\r\n                    <Card.Header>{props.intl.formatMessage({ id: \"IDS_INNERBAND\" })}</Card.Header>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <FormNumericInput\r\n                                    name={\"nlowa\"}\r\n                                    label={props.intl.formatMessage({ id: \"IDS_LOWA\" })}\r\n                                    type=\"number\"\r\n                                    value={props.selectedRecord[\"nlowa\"]}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_LOWA\" })}\r\n                                    strict={true}\r\n                                    min={0}\r\n                                    //max={9999999.99}\r\n                                    maxLength={11}\r\n                                    onChange={(value) => props.onNumericInputChange(value, \"nlowa\")}\r\n                                    noStyle={true}\r\n                                    precision={2}\r\n                                    className=\"form-control\"\r\n                                    errors=\"Please provide a valid number.\"\r\n                                />\r\n\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <FormNumericInput\r\n                                    name={\"nhigha\"}\r\n                                    label={props.intl.formatMessage({ id: \"IDS_HIGHA\" })}\r\n                                    type=\"number\"\r\n                                    value={props.selectedRecord[\"nhigha\"]}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_HIGHA\" })}\r\n                                    strict={true}\r\n                                    min={0}\r\n                                    //max={9999999.99}\r\n                                    maxLength={11}\r\n                                    onChange={(value) => props.onNumericInputChange(value, \"nhigha\")}\r\n                                    noStyle={true}\r\n                                    precision={2}\r\n                                    className=\"form-control\"\r\n                                    errors=\"Please provide a valid number.\"\r\n                                />\r\n                            </Col>\r\n                          \r\n                        </Row>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            </FormGroup> */}\r\n\r\n<FormGroup>\r\n                    <Card>\r\n                        <Card.Header>{props.intl.formatMessage({ id:\"IDS_INNERBAND\"})}</Card.Header>\r\n                        <Card.Body style={{\"padding-bottom\": \"0\"}}>\r\n                            <Row>\r\n                                <Col md=\"6\">\r\n                                    <FormInput\r\n                                        name=\"nlowa\"\r\n                                        label={ props.intl.formatMessage({ id:\"IDS_LOWA\"}) } \r\n                                        type=\"text\"\r\n                                        required={false}\r\n                                        isMandatory={false}\r\n                                        value={props.selectedRecord[\"nlowa\"]?props.selectedRecord[\"nlowa\"]:\"\"}\r\n                                        placeholder={ props.intl.formatMessage({ id:\"IDS_LOWA\"}) } \r\n                                        onChange = { (event) => props.onInputOnChange(event, 4) }\r\n                                        maxLength={10}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col md=\"6\">\r\n                                    <FormInput\r\n                                        name=\"nhigha\"\r\n                                        label={ props.intl.formatMessage({ id:\"IDS_HIGHA\"}) } \r\n                                        type=\"text\"\r\n                                        required={false}\r\n                                        isMandatory={false}\r\n                                        value={props.selectedRecord[\"nhigha\"]?props.selectedRecord[\"nhigha\"]:\"\"}\r\n                                        placeholder={ props.intl.formatMessage({ id:\"IDS_HIGHA\"}) } \r\n                                        onChange = { (event) => props.onInputOnChange(event, 4) }\r\n                                        maxLength={10}\r\n\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </FormGroup>\r\n            \r\n            <FormGroup>\r\n            <Card>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                            \r\n\r\n                     <FormInput\r\n                                    name=\"sresultvalue\"\r\n                                    label={ props.intl.formatMessage({ id:\"IDS_DEFAULTRESULT\"}) } \r\n                                    type=\"text\"\r\n                                    required={false}\r\n                                    isMandatory={false}\r\n                                    value={props.selectedRecord[\"sresultvalue\"]?props.selectedRecord[\"sresultvalue\"]:\"\"}\r\n                                    placeholder={ props.intl.formatMessage({ id:\"IDS_DEFAULTRESULT\"}) } \r\n                                    onChange = { (event) => props.onInputOnChange(event, 8) }\r\n                                    maxLength={10}\r\n                                   \r\n                                />\r\n\r\n                            </Col>\r\n\r\n                            <Col md=\"6\">\r\n                <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_GRADE\" })}\r\n                        isSearchable={false}\r\n                        name={\"ngradecode\"}\r\n                        isDisabled={props.selectedRecord[\"sresultvalue\"] === null || props.selectedRecord[\"sresultvalue\"] === \"\"  || props.selectedRecord[\"sresultvalue\"] === undefined }\r\n                        placeholder=\"Please Select...\"\r\n                        isMandatory={false}\r\n                        showOption={false}\r\n                        options={gradenew|| []}\r\n                        optionId='ngradecode'\r\n                        optionValue='sgradename'\r\n                        value={props.selectedRecord ? props.selectedRecord[\"ngradecode\"] : \"\"}\r\n                        onChange={value => props.onComboChange(value, \"ngradecode\", 1)}\r\n                        alphabeticalSort={true}\r\n                        //isClearable={true}\r\n                    >\r\n                    </FormSelectSearch> \r\n                            </Col>\r\n                           \r\n                            \r\n                        </Row>\r\n\r\n                    </Card.Body>\r\n                    </Card>\r\n            </FormGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddTestGroupNumericSpecification);"]},"metadata":{},"sourceType":"module"}