{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{toast}from'react-toastify';import Axios from'axios';import rsapi from'../rsapi';import{initRequest}from'./LoginAction';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData,constructOptionList,rearrangeDateFormat,ageCalculate,formatInputDate}from'../components/CommonScript';import{intl}from'../components/App';import{transactionStatus}from'../components/Enumeration';import{getLeftPosition}from'@progress/kendo-react-tooltip/dist/npm/utils';export function getPatientDetail(patient,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"patient/getPatient\",{spatientid:patient.spatientid,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getPatientComboService(inputParam){return function(dispatch){var genderService=rsapi.post(\"patient/getGender\",{userinfo:inputParam.userInfo});var UTCtimeZoneService=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:inputParam.userInfo});// const cityService = rsapi.post(\"patient/getCity\", {userinfo:inputParam.userInfo});\nvar countryService=rsapi.post(\"patient/getCountry\",{userinfo:inputParam.userInfo});var regionService=rsapi.post(\"patient/getRegion\",{userinfo:inputParam.userInfo});var urlArray=[];if(inputParam.operation===\"create\"){urlArray=[genderService,UTCtimeZoneService,countryService,regionService];}else{var _rsapi$post;var patientById=rsapi.post(\"patient/getActivePatientById\",(_rsapi$post={},_defineProperty(_rsapi$post,inputParam.primaryKeyName,inputParam.masterData.SelectedPatient[inputParam.primaryKeyName]),_defineProperty(_rsapi$post,\"userinfo\",inputParam.userInfo),_rsapi$post));var citySer=rsapi.post(\"/patient/getCity\",{\"userinfo\":inputParam.userInfo,\"ndistrictcode\":inputParam.masterData.SelectedPatient.ndistrictcode});var districtSer=rsapi.post(\"/patient/getDistrict\",{\"userinfo\":inputParam.userInfo,\"nregioncode\":inputParam.masterData.SelectedPatient.nregioncode});var citySertemp=rsapi.post(\"/patient/getCity\",{\"userinfo\":inputParam.userInfo,\"ndistrictcode\":inputParam.masterData.SelectedPatient.ndistrictcodetemp});var districtSertemp=rsapi.post(\"/patient/getDistrict\",{\"userinfo\":inputParam.userInfo,\"nregioncode\":inputParam.masterData.SelectedPatient.nregioncodetemp});urlArray=[genderService,UTCtimeZoneService,countryService,regionService,patientById,citySer,districtSer,citySertemp,districtSertemp];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var gender=[];var city=[];var country=[];var region=[];var regionTemp=[];var districtTemp=[];var district=[];var cityTemp=[];var districtList=[];var cityList=[];var cityListTemp=[];var districtListTemp=[];var genderMap=constructOptionList(response[0].data['genderList']||[],\"ngendercode\",\"sgendername\",undefined,undefined,false);var genderList=genderMap.get(\"OptionList\");var countryMap=constructOptionList(response[2].data['countryList']||[],\"ncountrycode\",\"scountryname\",undefined,undefined,false);var countryList=countryMap.get(\"OptionList\");var regionMap=constructOptionList(response[3].data['regionList']||[],\"nregioncode\",\"sregionname\",undefined,undefined,false);var regionList=regionMap.get(\"OptionList\");if(inputParam.operation===\"update\"){var cityserMap=constructOptionList(response[5].data['cityList']||[],\"ncitycode\",\"scityname\",undefined,undefined,false);cityList=cityserMap.get(\"OptionList\");var distMap=constructOptionList(response[6].data['districtList']||[],\"ndistrictcode\",\"sdistrictname\",undefined,undefined,false);districtList=distMap.get(\"OptionList\");var cityserTempMap=constructOptionList(response[7].data['cityList']||[],\"ncitycode\",\"scityname\",undefined,undefined,false);cityListTemp=cityserTempMap.get(\"OptionList\");var distTempMap=constructOptionList(response[8].data['districtList']||[],\"ndistrictcode\",\"sdistrictname\",undefined,undefined,false);districtListTemp=distTempMap.get(\"OptionList\");}var selectedRecord={};var currentTime=rearrangeDateFormat(inputParam.userInfo,response[1].data);if(inputParam.operation===\"update\"){selectedRecord=response[4].data;gender.push({\"value\":response[4].data[\"ngendercode\"],\"label\":response[4].data[\"sgendername\"]});city.push({\"value\":response[4].data[\"ncitycode\"],\"label\":response[4].data[\"scityname\"]});country.push({\"value\":response[4].data[\"ncountrycode\"],\"label\":response[4].data[\"scountryname\"]});region.push({\"value\":response[4].data[\"nregioncode\"],\"label\":response[4].data[\"sregionname\"]});regionTemp.push({\"value\":response[4].data[\"nregioncodetemp\"],\"label\":response[4].data[\"sregionnametemp\"]});districtTemp.push({\"value\":response[4].data[\"ndistrictcodetemp\"],\"label\":response[4].data[\"sdistrictnametemp\"]});district.push({\"value\":response[4].data[\"ndistrictcode\"],\"label\":response[4].data[\"sdistrictname\"]});cityTemp.push({\"value\":response[4].data[\"ncitycodetemp\"],\"label\":response[4].data[\"scitynametemp\"]});selectedRecord[\"ngendercode\"]=gender[0];selectedRecord[\"ncitycode\"]=city[0];selectedRecord[\"ncountrycode\"]=country[0];selectedRecord[\"nregioncode\"]=region[0];selectedRecord[\"nregioncodetemp\"]=regionTemp[0];selectedRecord[\"ndistrictcodetemp\"]=districtTemp[0];selectedRecord[\"ndistrictcode\"]=district[0];selectedRecord[\"ncitycodetemp\"]=cityTemp[0];if(selectedRecord[\"ddob\"]!==null){selectedRecord[\"ddob\"]=rearrangeDateFormat(inputParam.userInfo,selectedRecord[\"sdob\"]);}}else{selectedRecord[\"ngendercode\"]=genderMap.get(\"DefaultValue\");selectedRecord[\"ddob\"]=rearrangeDateFormat(inputParam.userInfo,response[1].data);selectedRecord[\"sage\"]=ageCalculate(selectedRecord[\"ddob\"]);selectedRecord[\"nneedcurrentaddress\"]=transactionStatus.NO;selectedRecord[\"today\"]=inputParam.userInfo;}dispatch({type:DEFAULT_RETURN,payload:{genderList:genderList,cityListTemp:cityListTemp,districtListTemp:districtListTemp,districtList:districtList,cityList:cityList,countryList:countryList,operation:inputParam.operation,screenName:inputParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:inputParam.ncontrolcode,loading:false,currentTime:currentTime,regionList:regionList}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getPatientReport(patient,userInfo,ncontrolCode){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"patient/patientReportGenerate\",{patient:patient,userinfo:userInfo,ncontrolcode:ncontrolCode}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false}});document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getPatientDetailsByFilterQuery(inputParam,masterData,SelectedPatientCaseType){return function(dispatch){var URL=[];var filterData;if(inputParam.displayname===\"Filter\"){filterData=rsapi.post(\"/patient/getFilterByDate\",{\"userinfo\":inputParam.inputData.userinfo,\"formdate\":inputParam.inputData.formdate,\"todate\":inputParam.inputData.todate,\"casetype\":inputParam.inputData.casetype});}else{filterData=rsapi.post(\"/patient/filterByPatient\",{\"filterquery\":inputParam.inputData.filterquery,\"userinfo\":inputParam.inputData.userinfo});}URL=[filterData];dispatch(initRequest(true));Axios.all(URL).then(function(response){var slideResult=response[0].data.PatientList;var selectedRecord=response[0].data.PatientList;selectedRecord[\"fromdate\"]=rearrangeDateFormat(inputParam.inputData.userinfo,response[0].data.filterFromdate);selectedRecord[\"ToDay\"]=rearrangeDateFormat(inputParam.inputData.userinfo,response[0].data.filterToDay);masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),{},{SelectedPatientCaseType:SelectedPatientCaseType},response[0].data),{},{searchedData:undefined});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,skip:0,take:20,slideResult:false,openModal:false,openSolidAdvFilter:false,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(intl.formatMessage({id:error.message}));});};}export function getDistrictComboServices(methodParam){return function(dispatch){var URL=[];URL=rsapi.post(\"/patient/getDistrict\",{\"userinfo\":methodParam.inputData.userinfo,\"nregioncode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var _payload;var districtList;var districtMap=constructOptionList(response[0].data['districtList']||[],\"ndistrictcode\",\"sdistrictname\",undefined,undefined,false);districtList=districtMap.get(\"OptionList\");var districtListTemp;var districtMapTemp=constructOptionList(response[0].data['districtList']||[],\"ndistrictcode\",\"sdistrictname\",undefined,undefined,false);districtListTemp=districtMapTemp.get(\"OptionList\");var cityList=undefined;var cityListTemp=undefined;dispatch({type:DEFAULT_RETURN,payload:(_payload={},_defineProperty(_payload,methodParam.inputData.optionlistname,districtList),_defineProperty(_payload,methodParam.inputData.optionlistname,districtListTemp),_defineProperty(_payload,\"loading\",false),_defineProperty(_payload,\"data\",undefined),_defineProperty(_payload,\"dataState\",undefined),_defineProperty(_payload,\"cityList\",cityList),_defineProperty(_payload,\"cityListTemp\",cityListTemp),_payload)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getCityComboServices(methodParam){return function(dispatch){var URL=[];URL=rsapi.post(\"/patient/getCity\",{\"userinfo\":methodParam.inputData.userinfo,\"ndistrictcode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var _payload2;var cityMap=constructOptionList(response[0].data['cityList']||[],\"ncitycode\",\"scityname\",undefined,undefined,false);var cityList=cityMap.get(\"OptionList\");var cityMapTemp=constructOptionList(response[0].data['cityList']||[],\"ncitycode\",\"scityname\",undefined,undefined,false);var cityListTemp=cityMapTemp.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:(_payload2={},_defineProperty(_payload2,methodParam.inputData.optionlistname,cityList),_defineProperty(_payload2,methodParam.inputData.optionlistname,cityListTemp),_defineProperty(_payload2,\"loading\",false),_defineProperty(_payload2,\"data\",undefined),_defineProperty(_payload2,\"dataState\",undefined),_payload2)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/PatientAction.js"],"names":["toast","Axios","rsapi","initRequest","DEFAULT_RETURN","sortData","constructOptionList","rearrangeDateFormat","ageCalculate","formatInputDate","intl","transactionStatus","getLeftPosition","getPatientDetail","patient","userInfo","masterData","dispatch","post","spatientid","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getPatientComboService","inputParam","genderService","UTCtimeZoneService","countryService","regionService","urlArray","patientById","primaryKeyName","SelectedPatient","citySer","ndistrictcode","districtSer","nregioncode","citySertemp","ndistrictcodetemp","districtSertemp","nregioncodetemp","all","gender","city","country","region","regionTemp","districtTemp","district","cityTemp","districtList","cityList","cityListTemp","districtListTemp","genderMap","genderList","get","countryMap","countryList","regionMap","regionList","cityserMap","distMap","cityserTempMap","distTempMap","selectedRecord","currentTime","push","NO","screenName","openModal","ncontrolCode","ncontrolcode","getPatientReport","loadEsign","document","getElementById","setAttribute","filepath","click","getPatientDetailsByFilterQuery","SelectedPatientCaseType","URL","filterData","displayname","inputData","formdate","todate","casetype","filterquery","slideResult","PatientList","filterFromdate","filterToDay","searchedData","skip","take","openSolidAdvFilter","formatMessage","id","getDistrictComboServices","methodParam","primarykey","districtMap","districtMapTemp","optionlistname","getCityComboServices","cityMap","cityMapTemp"],"mappings":"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","sourcesContent":["import { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport rsapi from '../rsapi';\r\nimport { initRequest } from './LoginAction';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport {sortData, constructOptionList, rearrangeDateFormat, ageCalculate,formatInputDate} from '../components/CommonScript';\r\nimport {\r\n    intl\r\n} from '../components/App';\r\nimport { transactionStatus } from '../components/Enumeration';\r\nimport { getLeftPosition } from '@progress/kendo-react-tooltip/dist/npm/utils';\r\n\r\nexport function getPatientDetail (patient, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"patient/getPatient\", {spatientid:patient.spatientid, userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\n\r\nexport function getPatientComboService(inputParam){ \r\n    return function (dispatch) {    \r\n  \r\n            const genderService = rsapi.post(\"patient/getGender\", {userinfo:inputParam.userInfo});\r\n            const UTCtimeZoneService = rsapi.post(\"timezone/getLocalTimeByZone\", { userinfo: inputParam.userInfo });\r\n           // const cityService = rsapi.post(\"patient/getCity\", {userinfo:inputParam.userInfo});\r\n            const countryService = rsapi.post(\"patient/getCountry\", { userinfo: inputParam.userInfo });\r\n            const regionService = rsapi.post(\"patient/getRegion\", { userinfo: inputParam.userInfo });\r\n                 \r\n            let urlArray = [];\r\n            if (inputParam.operation === \"create\"){\r\n               urlArray = [genderService, UTCtimeZoneService,countryService,regionService];\r\n            }\r\n            else{                    \r\n                const patientById =  rsapi.post(\"patient/getActivePatientById\", \r\n                                { [inputParam.primaryKeyName] :inputParam.masterData.SelectedPatient[inputParam.primaryKeyName] , \r\n                                    \"userinfo\": inputParam.userInfo} );\r\n                const citySer = rsapi.post(\"/patient/getCity\", { \"userinfo\":inputParam.userInfo, \"ndistrictcode\":  inputParam.masterData.SelectedPatient.ndistrictcode  });\r\n                const districtSer=rsapi.post(\"/patient/getDistrict\", { \"userinfo\": inputParam.userInfo, \"nregioncode\":inputParam.masterData.SelectedPatient.nregioncode  })\r\n                const citySertemp = rsapi.post(\"/patient/getCity\", { \"userinfo\":inputParam.userInfo, \"ndistrictcode\":  inputParam.masterData.SelectedPatient.ndistrictcodetemp  });\r\n                const districtSertemp=rsapi.post(\"/patient/getDistrict\", { \"userinfo\": inputParam.userInfo, \"nregioncode\":inputParam.masterData.SelectedPatient.nregioncodetemp  });         \r\n                urlArray = [genderService,UTCtimeZoneService,countryService,regionService, patientById,citySer,districtSer,citySertemp,districtSertemp];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response=>{                   \r\n                    let gender =[];\r\n                    let city =[];\r\n                    let country =[];\r\n                    let region =[];\r\n                    let regionTemp =[];\r\n                    let districtTemp=[];\r\n                    let district=[];\r\n                    let cityTemp=[];\r\n                   let districtList=[];\r\n                   let cityList=[];\r\n                   let cityListTemp=[];\r\n                   let districtListTemp=[];\r\n                    const genderMap = constructOptionList(response[0].data['genderList'] || [], \"ngendercode\",\r\n                                          \"sgendername\", undefined, undefined, false);               \r\n                    const genderList = genderMap.get(\"OptionList\");      \r\n                    \r\n                    const countryMap = constructOptionList(response[2].data['countryList'] || [], \"ncountrycode\",\r\n                                          \"scountryname\", undefined, undefined, false);               \r\n                    const countryList = countryMap.get(\"OptionList\");  \r\n                    \r\n                    const regionMap = constructOptionList(response[3].data['regionList'] || [], \"nregioncode\",\r\n                                             \"sregionname\", undefined, undefined, false);               \r\n                    const regionList = regionMap.get(\"OptionList\"); \r\n                    if (inputParam.operation === \"update\"){\r\n                        const cityserMap = constructOptionList(response[5].data['cityList'] || [], \"ncitycode\",\r\n                        \"scityname\", undefined, undefined, false);               \r\n                               cityList = cityserMap.get(\"OptionList\");  \r\n  \r\n                        const distMap = constructOptionList(response[6].data['districtList'] || [], \"ndistrictcode\",\r\n                           \"sdistrictname\", undefined, undefined, false); \r\n                            districtList = distMap.get(\"OptionList\"); \r\n\r\n                        const cityserTempMap = constructOptionList(response[7].data['cityList'] || [], \"ncitycode\",\r\n                        \"scityname\", undefined, undefined, false);               \r\n                        cityListTemp = cityserTempMap.get(\"OptionList\");  \r\n  \r\n                        const distTempMap = constructOptionList(response[8].data['districtList'] || [], \"ndistrictcode\",\r\n                           \"sdistrictname\", undefined, undefined, false); \r\n                           districtListTemp = distTempMap.get(\"OptionList\"); \r\n                    }\r\n\r\n                    let selectedRecord =  {};\r\n                    const currentTime = rearrangeDateFormat(inputParam.userInfo, response[1].data);\r\n                   \r\n                    if (inputParam.operation === \"update\"){\r\n                        selectedRecord = response[4].data;\r\n                       \r\n                        gender.push({\"value\" : response[4].data[\"ngendercode\"], \"label\" : response[4].data[\"sgendername\"]});\r\n                        city.push({\"value\" : response[4].data[\"ncitycode\"], \"label\" : response[4].data[\"scityname\"]});  \r\n                        country.push({\"value\" : response[4].data[\"ncountrycode\"], \"label\" : response[4].data[\"scountryname\"]});   \r\n                        region.push({\"value\" : response[4].data[\"nregioncode\"], \"label\" : response[4].data[\"sregionname\"]}); \r\n                        regionTemp.push({\"value\" : response[4].data[\"nregioncodetemp\"], \"label\" : response[4].data[\"sregionnametemp\"]});    \r\n                        districtTemp.push({\"value\" : response[4].data[\"ndistrictcodetemp\"], \"label\" : response[4].data[\"sdistrictnametemp\"]});  \r\n                        district.push({\"value\" : response[4].data[\"ndistrictcode\"], \"label\" : response[4].data[\"sdistrictname\"]}); \r\n                        cityTemp.push({\"value\" : response[4].data[\"ncitycodetemp\"], \"label\" : response[4].data[\"scitynametemp\"]});                                   \r\n                        selectedRecord[\"ngendercode\"] = gender[0];\r\n                        selectedRecord[\"ncitycode\"] = city[0];\r\n                        selectedRecord[\"ncountrycode\"] = country[0];\r\n                        selectedRecord[\"nregioncode\"] = region[0];\r\n                        selectedRecord[\"nregioncodetemp\"] = regionTemp[0];\r\n                        selectedRecord[\"ndistrictcodetemp\"] = districtTemp[0];\r\n                        selectedRecord[\"ndistrictcode\"] = district[0];\r\n                        selectedRecord[\"ncitycodetemp\"] = cityTemp[0];\r\n\r\n                        if (selectedRecord[\"ddob\"] !== null){\r\n                            selectedRecord[\"ddob\"] = rearrangeDateFormat(inputParam.userInfo, selectedRecord[\"sdob\"]);\r\n                        }                                          \r\n                    }\r\n                    else{        \r\n                      \r\n                        selectedRecord[\"ngendercode\"] = genderMap.get(\"DefaultValue\");  \r\n                        selectedRecord[\"ddob\"] = rearrangeDateFormat(inputParam.userInfo, response[1].data);\r\n                        selectedRecord[\"sage\"]  = ageCalculate(selectedRecord[\"ddob\"])\r\n                        selectedRecord[\"nneedcurrentaddress\"]  =transactionStatus.NO;\r\n                        selectedRecord[\"today\"]  =inputParam.userInfo;\r\n                    }\r\n                  \r\n                    dispatch({type: DEFAULT_RETURN, payload:{\r\n                                                            genderList,  \r\n                                                            cityListTemp,\r\n                                                            districtListTemp,\r\n                                                            districtList,\r\n                                                            cityList,\r\n                                                            countryList,                         \r\n                                                            operation:inputParam.operation, \r\n                                                            screenName:inputParam.screenName,   \r\n                                                            selectedRecord,\r\n                                                            openModal : true,\r\n                                                            ncontrolCode:inputParam.ncontrolcode,\r\n                                                            loading:false,\r\n                                                            currentTime,\r\n                                                            regionList\r\n                                                            }});\r\n                })\r\n                .catch(error=>{\r\n                    dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                    if (error.response.status === 500){\r\n                        toast.error(error.message);\r\n                    } \r\n                    else{               \r\n                        toast.warn(error.response.data);\r\n                    }  \r\n                }) \r\n  \r\n}}\r\n\r\n\r\nexport function getPatientReport (patient, userInfo, ncontrolCode) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"patient/patientReportGenerate\", {patient, userinfo:userInfo, \r\n                                                        ncontrolcode:ncontrolCode})\r\n    .then(response => {\r\n        dispatch({ type: DEFAULT_RETURN, payload: { loading: false, \r\n            loadEsign: false, openModal: false } })\r\n        document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n        document.getElementById(\"download_data\").click();\r\n    })\r\n    .catch(error => {\r\n        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n        if (error.response.status === 500) {\r\n            toast.error(error.message);\r\n        }\r\n        else {\r\n            toast.warn(error.response.data);\r\n        }\r\n    }) \r\n}}\r\n  \r\nexport function getPatientDetailsByFilterQuery(inputParam,masterData,SelectedPatientCaseType) {\r\n    return function (dispatch) {   \r\n        let URL = [];\r\n        let filterData;\r\n        if(inputParam.displayname===\"Filter\"){\r\n            filterData= rsapi.post(\"/patient/getFilterByDate\",{ \"userinfo\": inputParam.inputData.userinfo, \r\n            \"formdate\":inputParam.inputData.formdate, \"todate\":inputParam.inputData.todate,\"casetype\":inputParam.inputData.casetype})\r\n        }else{\r\n            filterData=  rsapi.post(\"/patient/filterByPatient\",{\"filterquery\":inputParam.inputData.filterquery \r\n            , \"userinfo\": inputParam.inputData.userinfo})\r\n        }\r\n\r\n        URL=[filterData];\r\n        dispatch(initRequest(true));\r\n        Axios.all(URL)\r\n            .then(response => {\r\n               let slideResult=response[0].data.PatientList;\r\n               let selectedRecord =response[0].data.PatientList;\r\n                 selectedRecord[\"fromdate\"]=rearrangeDateFormat(inputParam.inputData.userinfo,response[0].data.filterFromdate);\r\n                selectedRecord[\"ToDay\"]=rearrangeDateFormat(inputParam.inputData.userinfo,response[0].data.filterToDay);\r\n                masterData = {\r\n                    ...masterData,SelectedPatientCaseType:SelectedPatientCaseType,\r\n                    ...response[0].data,searchedData: undefined \r\n                };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {masterData,\r\n                         loading: false, skip: 0, take: 20,slideResult:false,\r\n                        openModal:false,openSolidAdvFilter:false,selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}\r\nexport function getDistrictComboServices(methodParam) {\r\n    return function (dispatch) {\r\n        let URL = []; \r\n            URL=rsapi.post(\"/patient/getDistrict\", { \"userinfo\": methodParam.inputData.userinfo, \"nregioncode\":  methodParam.inputData.primarykey  })\r\n         dispatch(initRequest(true));\r\n        Axios.all([URL])\r\n            .then(response => {\r\n                let districtList; \r\n                const districtMap = constructOptionList(response[0].data['districtList'] || [], \"ndistrictcode\",\r\n                \"sdistrictname\", undefined, undefined, false);               \r\n\r\n                  districtList = districtMap.get(\"OptionList\"); \r\n                  let districtListTemp;      \r\n                  const districtMapTemp = constructOptionList(response[0].data['districtList'] || [], \"ndistrictcode\",\r\n                  \"sdistrictname\", undefined, undefined, false);               \r\n  \r\n                    districtListTemp = districtMapTemp.get(\"OptionList\"); \r\n               \r\n                    const  cityList=undefined;\r\n                    const  cityListTemp=undefined;\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n                     {[methodParam.inputData.optionlistname]: districtList, [methodParam.inputData.optionlistname]: districtListTemp,\r\n                        loading: false, data: undefined, dataState: undefined ,cityList,cityListTemp} })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getCityComboServices(methodParam) {\r\n    return function (dispatch) {\r\n        let URL=[];\r\n            URL = rsapi.post(\"/patient/getCity\", { \"userinfo\": methodParam.inputData.userinfo, \"ndistrictcode\":  methodParam.inputData.primarykey  })\r\n         dispatch(initRequest(true));\r\n        Axios.all([URL])\r\n            .then(response => {\r\n                 const cityMap = constructOptionList(response[0].data['cityList'] || [], \"ncitycode\",\r\n                 \"scityname\", undefined, undefined, false);               \r\n \r\n                 const  cityList = cityMap.get(\"OptionList\"); \r\n                 const cityMapTemp = constructOptionList(response[0].data['cityList'] || [], \"ncitycode\",\r\n                 \"scityname\", undefined, undefined, false);               \r\n \r\n                 const  cityListTemp = cityMapTemp.get(\"OptionList\"); \r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n                     { [methodParam.inputData.optionlistname]: cityList, [methodParam.inputData.optionlistname]: cityListTemp,loading: false, data: undefined, dataState: undefined } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}