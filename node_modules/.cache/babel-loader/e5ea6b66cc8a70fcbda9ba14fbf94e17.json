{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\components\\\\data-grid\\\\DataGridWithSelection.jsx\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl'; //import { Grid, GridColumn as Column,GridNoRecords } from '@progress/kendo-react-grid';\n\nimport { Grid, GridColumn as Column, GridNoRecords, GridColumnMenuFilter } from '@progress/kendo-react-grid';\nimport { AtTableWrap, FontIconWrap } from '../data-grid/data-grid.styles';\nimport { loadMessages, LocalizationProvider } from '@progress/kendo-react-intl';\nimport ColumnMenu from './ColumnMenu';\nimport { process } from '@progress/kendo-data-query';\nimport { Col, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRemoveFormat, faTimes, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faClosedCaptioning } from '@fortawesome/free-regular-svg-icons';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass DataGridWithSelection extends React.Component {\n  columnProps(field) {\n    if (this.props.dataState) {\n      if (!this.props.hideColumnFilter) {\n        const returntype = {\n          field: field,\n          columnMenu: ColumnMenu,\n          headerClassName: this.isColumnActive(field, this.props.dataState) ? 'active' : ''\n        };\n        return returntype;\n      }\n    }\n  }\n\n  isColumnActive(field, dataState) {\n    return GridColumnMenuFilter.active(field, dataState.filter);\n  }\n\n  render() {\n    const pageSizes = this.props.pageSizes ? this.props.pageSizes : this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AtTableWrap, {\n      className: \"at-list-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LocalizationProvider, {\n      language: this.props.userInfo.slanguagetypecode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid // data={this.props.data}\n    , Object.assign({\n      sortable: true,\n      data: this.props.dataState ? process(this.props.data || [], this.props.dataState) : this.props.data,\n      style: {\n        height: '400px'\n      },\n      selectedField: \"selected\",\n      onSelectionChange: this.props.selectionChange,\n      onHeaderSelectionChange: this.props.headerSelectionChange,\n      onRowClick: this.props.rowClick // ADDed by Neeraj-ALPD-5136\n      //WorkList Screen -> Including filter in Data selection Kendo Grid \n      //Command by neeraj\n      ,\n      onDataStateChange: this.props.dataStateChange\n    }, this.props.dataState, {\n      scrollable: this.props.scrollable // pageable={true}\n      ,\n      pageable: this.props.pageable && this.props.data && this.props.data.length > 0 ? {\n        buttonCount: 10,\n        pageSizes: pageSizes,\n        previousNext: false\n      } : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(GridNoRecords, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_NORECORDSAVAILABLE\"\n    })), !this.props.isHidemulipleselect ? /*#__PURE__*/React.createElement(Column, {\n      field: \"selected\",\n      width: \"50px\",\n      title: this.props.title,\n      headerSelectionValue: this.props.selectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }\n    }) : \"\", this.props.extractedColumnList.map((item, index) => /*#__PURE__*/React.createElement(Column, Object.assign({\n      key: index,\n      width: item.width,\n      title: this.props.intl.formatMessage({\n        id: item.idsName\n      })\n    }, this.columnProps(item.dataField), {\n      cell: row => /*#__PURE__*/React.createElement(\"td\", {\n        \"data-tip\": row[\"dataItem\"][item.dataField],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 49\n        }\n      }, item.isIdsField ? /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: row[\"dataItem\"][item.dataField],\n        defaultMessage: row[\"dataItem\"][item.dataField],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 57\n        }\n      }) : row[\"dataItem\"][item.dataField]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }\n    }))), // ADDed by Neeraj-ALPD-5136\n    //WorkList Screen -> Including filter in Data selection Kendo Grid \n    //Command by neeraj\n    //start\n    this.props.isActionRequired ? /*#__PURE__*/React.createElement(Column, {\n      locked: true,\n      headerClassName: \"text-center\",\n      title: this.props.intl.formatMessage({\n        id: 'IDS_ACTION'\n      }),\n      sort: false,\n      cell: row => /*#__PURE__*/React.createElement(\"td\", {\n        className: `k-grid-content-sticky k-command-cell pl-0 selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''`,\n        style: {\n          left: '0',\n          right: '0',\n          borderRightWidth: '1px',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FontIconWrap, {\n        className: \"d-font-icon action-icons-wrap\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REMOVE\"\n        }),\n        \"data-place\": \"top\",\n        onClick: () => this.props.handleClickDelete(row),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 61\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 45\n      }\n    }) : \"\" //--end\n    ))))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(DataGridWithSelection));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/components/data-grid/DataGridWithSelection.jsx"],"names":["React","FormattedMessage","injectIntl","Grid","GridColumn","Column","GridNoRecords","GridColumnMenuFilter","AtTableWrap","FontIconWrap","loadMessages","LocalizationProvider","ColumnMenu","process","Col","Row","FontAwesomeIcon","faRemoveFormat","faTimes","faTrashAlt","faClosedCaptioning","connect","mapStateToProps","state","Login","DataGridWithSelection","Component","columnProps","field","props","dataState","hideColumnFilter","returntype","columnMenu","headerClassName","isColumnActive","active","filter","render","pageSizes","settings","split","map","setting","parseInt","userInfo","slanguagetypecode","data","height","selectionChange","headerSelectionChange","rowClick","dataStateChange","scrollable","pageable","length","buttonCount","previousNext","intl","formatMessage","id","isHidemulipleselect","title","selectAll","extractedColumnList","item","index","width","idsName","dataField","row","isIdsField","isActionRequired","left","right","borderRightWidth","textAlign","handleClickDelete"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n//import { Grid, GridColumn as Column,GridNoRecords } from '@progress/kendo-react-grid';\r\nimport { Grid, GridColumn as Column, GridNoRecords, GridColumnMenuFilter } from '@progress/kendo-react-grid';\r\nimport { AtTableWrap, FontIconWrap } from '../data-grid/data-grid.styles';\r\nimport { loadMessages, LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport ColumnMenu from './ColumnMenu';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRemoveFormat, faTimes, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faClosedCaptioning } from '@fortawesome/free-regular-svg-icons';\r\nimport { connect } from 'react-redux';\r\nconst mapStateToProps = state => {\r\n        return ({ Login: state.Login })\r\n    }\r\nclass DataGridWithSelection extends React.Component {\r\n\r\n\r\n    columnProps(field) {\r\n        if (this.props.dataState) {\r\n            if (!this.props.hideColumnFilter) {\r\n                const returntype = {\r\n                    field: field,\r\n                    columnMenu: ColumnMenu,\r\n                    headerClassName: this.isColumnActive(field, this.props.dataState) ? 'active' : ''\r\n                }\r\n                return returntype;\r\n            }\r\n        }\r\n    }\r\n\r\n    isColumnActive(field, dataState) {\r\n        return GridColumnMenuFilter.active(field, dataState.filter)\r\n    }\r\n\r\n\r\n    render() {\r\n        const pageSizes = this.props.pageSizes ? this.props.pageSizes : \r\n        this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))\r\n        return (\r\n            <div>\r\n\r\n                <AtTableWrap className=\"at-list-table\">\r\n                    <LocalizationProvider language={this.props.userInfo.slanguagetypecode}>\r\n                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                        <Row noGutters={true}>\r\n                            <Col md=\"12\">\r\n                                <Grid\r\n                                    // data={this.props.data}\r\n                                    sortable\r\n                                    data={this.props.dataState ? process(this.props.data || [],\r\n                                        this.props.dataState) : this.props.data}\r\n                                    style={{ height: '400px' }}\r\n                                    selectedField=\"selected\"\r\n                                    onSelectionChange={this.props.selectionChange}\r\n                                    onHeaderSelectionChange={this.props.headerSelectionChange}\r\n                                    onRowClick={this.props.rowClick}\r\n                                    // ADDed by Neeraj-ALPD-5136\r\n                                    //WorkList Screen -> Including filter in Data selection Kendo Grid \r\n                                    //Command by neeraj\r\n                                    onDataStateChange={this.props.dataStateChange}\r\n                                    {...this.props.dataState}\r\n                                    scrollable={this.props.scrollable}\r\n                                   // pageable={true}\r\n                                    pageable={this.props.pageable && this.props.data && this.props.data.length > 0\r\n                                         ? { buttonCount: 10, pageSizes: pageSizes, previousNext: false } : false}\r\n\r\n                                >\r\n\r\n                                    <GridNoRecords>\r\n                                        {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                                    </GridNoRecords>\r\n                                    {!this.props.isHidemulipleselect ?\r\n                                        <Column\r\n                                            field=\"selected\"\r\n                                            width=\"50px\"\r\n                                            title={this.props.title}\r\n                                            headerSelectionValue={this.props.selectAll}\r\n                                        /> : \"\"}\r\n                                    {this.props.extractedColumnList.map((item, index) =>\r\n                                        <Column key={index}\r\n                                            width={item.width}\r\n                                            title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                            {...this.columnProps(item.dataField)}\r\n                                            cell={(row) => (\r\n                                                <td data-tip={row[\"dataItem\"][item.dataField]}>\r\n                                                    {item.isIdsField ?\r\n                                                        <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                                        : row[\"dataItem\"][item.dataField]}\r\n                                                </td>\r\n                                            )} />\r\n                                    )}\r\n                                    {   // ADDed by Neeraj-ALPD-5136\r\n                                        //WorkList Screen -> Including filter in Data selection Kendo Grid \r\n                                        //Command by neeraj\r\n                                        //start\r\n                                        this.props.isActionRequired ?\r\n                                            <Column\r\n                                                locked\r\n                                                headerClassName=\"text-center\"\r\n                                                title={this.props.intl.formatMessage({ id: 'IDS_ACTION' })}\r\n                                                sort={false}\r\n                                                cell={(row) => (\r\n                                                    <td className={`k-grid-content-sticky k-command-cell pl-0 selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''`} style={{ left: '0', right: '0', borderRightWidth: '1px', textAlign: 'center' }}>\r\n                                                        <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REMOVE\" })} data-place=\"top\"\r\n                                                            onClick={() => this.props.handleClickDelete(row)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faTimes} />\r\n                                                        </FontIconWrap>\r\n                                                    </td>\r\n                                                )} />\r\n                                            : \"\"\r\n                                        //--end\r\n                                    }\r\n\r\n                                </Grid>\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalizationProvider >\r\n                </AtTableWrap>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(injectIntl(DataGridWithSelection));"]},"metadata":{},"sourceType":"module"}