{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{showUnderDevelopment,callService,crudMaster,updateStore,getSampleTypeChange,getRegTypeChange,getRegSubTypeChange,getAttachmentCombo,viewAttachment,getCommentsCombo,filterTransactionList,validateEsignCredential,ReloadData,getSampleChildTabDetail,getTestChildTabDetail,getTestByComponentChange,getPreviewTemplate,getChildValues}from'../../actions';import{Button,Card,Col,Nav,Row}from'react-bootstrap';import{toast}from'react-toastify';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import AddComponentPopUp from'./AddComponentPopUp';import{formatInputDate,getControlMap,listDataFromDynamicArray,showEsign,sortData,constructOptionList,onDropAttachFileList,deleteAttachmentDropZone,checkCancelAndReject,convertDateTimetoString}from'../../components/CommonScript';import RegistrationFilter from'./RegistrationFilter';import Esign from'../audittrail/Esign';import{injectIntl}from'react-intl';import{ProductList}from'../product/product.styled';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import SplitterLayout from\"react-splitter-layout\";import AddTest from'./AddTest';import PreRegisterPopUp from'./PreRegisterPopUp';import{RegistrationSubType,RegistrationType,transactionStatus}from'../../components/Enumeration';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import{checkDuplicateComponentandManufLot,fnCheckBatchComponentMandatory,fnCheckBatchProtocolComponentMandatory,getRegistration,getRegistrationGeneral,TestListManipulation,getComponentListfromUnwantedAttr,checkTestPresent,getRegistrationRoutine}from'./RegistrationValidation';import ScrollBar from'react-perfect-scrollbar';import{ListWrapper}from'../../components/client-group.styles';import TransactionListMaster from'../../components/TransactionListMaster';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faEye,faPencilAlt,faPlus,faSync}from'@fortawesome/free-solid-svg-icons';import{ContentPanel}from'../../components/App.styles';import SampleInfoView from'../approval/SampleInfoView';import CustomTabs from'../../components/custom-tabs/custom-tabs.component';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import AddSource from'./AddSource';import AddPrinter from'./AddPrinter';import SampleGridTab from'./SampleGridTab';import AddFile from'./AddFile';import Attachments from'../attachmentscomments/attachments/Attachments';import Comments from'../attachmentscomments/comments/Comments';import{onSaveTestComments}from'../attachmentscomments/comments/CommentFunctions';import{onSaveSampleAttachment,onSaveTestAttachment}from'../attachmentscomments/attachments/AttachmentFunctions';import EditPreRegistration from'./EditPreRegistration';import{ReactComponent as Quarantine}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Quarantine.svg\";import{ReactComponent as Register}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/register.svg\";import{ReactComponent as Reject}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reject.svg\";import SourceTab from'./SourceTab';import{getSameRecordFromTwoArrays,convertDateValuetoString,rearrangeDateFormat}from'../../components/CommonScript';import RegistrationResultTab from'./RegistrationResultTab';import PreRegisterRoutine from'./PreRegisterRoutine';import PortalModal from'../../PortalModal';import PreRegisterSlideOutModal from'./PreRegisterSlideOutModal';var Registration=/*#__PURE__*/function(_Component){_inherits(Registration,_Component);var _super=_createSuper(Registration);function Registration(_props){var _this;_classCallCheck(this,Registration);_this=_super.call(this,_props);_this.onReload=function(){// let RealFromDate = new Date(this.props.Login.masterData.RealFromDate)\n// let RealToDate = new Date(this.props.Login.masterData.RealToDate)\nvar obj=convertDateValuetoString(_this.props.Login.masterData.RealFromDate,_this.props.Login.masterData.RealToDate,_this.props.Login.userInfo);var RealFromDate=obj.fromDate;var RealToDate=obj.toDate;var RealSampleTypeValue=_this.props.Login.masterData.RealSampleTypeValue&&_this.props.Login.masterData.RealSampleTypeValue;var RealRegTypeValue=_this.props.Login.masterData.RealRegTypeValue&&_this.props.Login.masterData.RealRegTypeValue;var RealRegSubTypeValue=_this.props.Login.masterData.RealRegSubTypeValue&&_this.props.Login.masterData.RealRegSubTypeValue;var RealFilterStatusValue=_this.props.Login.masterData.RealFilterStatusValue&&_this.props.Login.masterData.RealFilterStatusValue;var activeSampleTab=_this.props.Login.activeSampleTab;var activeTestTab=_this.props.Login.activeTestTab;var SampleTypeValue=RealSampleTypeValue;var RegTypeValue=RealRegTypeValue;var RegSubTypeValue=RealRegSubTypeValue;var FilterStatusValue=RealFilterStatusValue;// let FromDate = this.props.Login.masterData.FromDate\n// let ToDate = this.props.Login.masterData.ToDate\nvar FromDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterData.FromDate);var ToDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterData.ToDate);var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{RealSampleTypeValue:RealSampleTypeValue,RealRegTypeValue:RealRegTypeValue,RealRegSubTypeValue:RealRegSubTypeValue,FromDate:FromDate,ToDate:ToDate,RealFilterStatusValue:RealFilterStatusValue,RealFromDate:RealFromDate,RealToDate:RealToDate,SampleTypeValue:SampleTypeValue,RegTypeValue:RegTypeValue,RegSubTypeValue:RegSubTypeValue,FilterStatusValue:FilterStatusValue});var inputData={npreregno:\"\",nsampletypecode:_this.props.Login.masterData.RealSampleTypeValue&&_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.RealRegTypeValue&&_this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.RealRegSubTypeValue&&_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,nfilterstatus:_this.props.Login.masterData.RealFilterStatusValue&&_this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus,userinfo:_this.props.Login.userInfo,activeSampleTab:activeSampleTab,activeTestTab:activeTestTab,flag:1};if(inputData.nsampletypecode){// let obj = this.covertDatetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate)\ninputData['FromDate']=obj.fromDate;inputData['ToDate']=obj.toDate;var inputParam={masterData:masterData,inputData:inputData,searchSubSampleRef:_this.searchSubSampleRef,searchSampleRef:_this.searchSampleRef,searchTestRef:_this.searchTestRef,selectedFilter:_this.state.selectedFilter};_this.props.ReloadData(inputParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.onFilterSubmit=function(){// let RealFromDate = new Date(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate)\n// let RealToDate = new Date(this.state.selectedFilter.todate || this.props.Login.masterData.ToDate)\nvar RealFromDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.state.selectedFilter.fromdate||_this.props.Login.masterData.FromDate);var RealToDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.state.selectedFilter.todate||_this.props.Login.masterData.ToDate);var RealSampleTypeValue=_this.props.Login.masterData.SampleTypeValue&&_this.props.Login.masterData.SampleTypeValue;var RealRegTypeValue=_this.props.Login.masterData.RegTypeValue&&_this.props.Login.masterData.RegTypeValue;var RealRegSubTypeValue=_this.props.Login.masterData.RegSubTypeValue&&_this.props.Login.masterData.RegSubTypeValue;var RealFilterStatusValue=_this.props.Login.masterData.FilterStatusValue&&_this.props.Login.masterData.FilterStatusValue;var activeSampleTab=_this.props.Login.activeSampleTab;if(_this.props.Login.masterData.RegTypeValue&&_this.props.Login.masterData.RegTypeValue.nregtypecode!==RegistrationType.PLASMA_POOL){activeSampleTab=\"IDS_SAMPLEATTACHMENTS\";}var activeTestTab=_this.props.Login.activeTestTab;var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{RealSampleTypeValue:RealSampleTypeValue,RealRegTypeValue:RealRegTypeValue,RealRegSubTypeValue:RealRegSubTypeValue,RealFilterStatusValue:RealFilterStatusValue,RealFromDate:RealFromDate,RealToDate:RealToDate});var inputData={npreregno:\"\",nsampletypecode:_this.props.Login.masterData.SampleTypeValue&&_this.props.Login.masterData.SampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.RegTypeValue&&_this.props.Login.masterData.RegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.RegSubTypeValue&&_this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,nfilterstatus:_this.props.Login.masterData.FilterStatusValue&&_this.props.Login.masterData.FilterStatusValue.ntransactionstatus,userinfo:_this.props.Login.userInfo,activeSampleTab:activeSampleTab,activeTestTab:activeTestTab};if(inputData.nsampletypecode){// let obj = this.covertDatetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate,\n//     this.state.selectedFilter.todate || this.props.Login.masterData.ToDate)\nvar obj=convertDateValuetoString(_this.state.selectedFilter.fromdate||_this.props.Login.masterData.FromDate,_this.state.selectedFilter.todate||_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);inputData['FromDate']=obj.fromDate;inputData['ToDate']=obj.toDate;var selectedFilter={};selectedFilter[\"fromdate\"]=RealFromDate;selectedFilter[\"todate\"]=RealToDate;var inputParam={masterData:masterData,inputData:inputData,searchSubSampleRef:_this.searchSubSampleRef,searchSampleRef:_this.searchSampleRef,searchTestRef:_this.searchTestRef,selectedFilter:selectedFilter};_this.props.getRegistrationSample(inputParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.deleteAttachment=function(event,file,fieldName){var selectedFile=_this.state.selectedFile||{};selectedFile[fieldName]=deleteAttachmentDropZone(selectedFile[fieldName],file);_this.setState({selectedFile:selectedFile,actionType:\"delete\"//fileToDelete:file.name \n});};_this.onSaveChildTestClick=function(saveType,formRef){var masterData=_this.props.Login.masterData;var selectedSubsample=getSameRecordFromTwoArrays(masterData.selectedSubSample,masterData.RegistrationGetSample.slice(_this.state.skip,_this.state.skip+_this.state.take),\"npreregno\");var selectedSample=getSameRecordFromTwoArrays(masterData.selectedSample,masterData.RegistrationGetSample.slice(_this.state.skip,_this.state.skip+_this.state.take),\"npreregno\");// selectedSubsample =masterData.selectedSubSample.slice(this.state.skip, (this.state.skip + this.state.take));\nvar ntransactionsamplecode=selectedSubsample.map(function(x){return x.ntransactionsamplecode;}).join(\",\");var obj=convertDateValuetoString(_this.props.Login.masterData.RealFromDate,_this.props.Login.masterData.RealToDate,_this.props.Login.userInfo);var inputData={TestGroupTest:_this.state.selectedRecord.ntestgrouptestcode.map(function(value){return value.item;}),RegistrationSample:selectedSubsample.map(function(x){return x.ntransactionsamplecode;}),ntransactionsamplecode:ntransactionsamplecode,userinfo:_this.props.Login.userInfo,nregtypecode:masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:masterData.RealRegSubTypeValue.nregsubtypecode,nsampletypecode:masterData.RealSampleTypeValue.nsampletypecode,ntype:3,nfilterstatus:_this.props.Login.masterData.FilterStatusValue.ntransactionstatus,npreregno:selectedSample&&selectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),// ntransactionsamplecode: selectedSubsample &&\n// selectedSubsample.map(sample => sample.ntransactionsamplecode).join(\",\"),\nFromDate:obj.fromDate,ToDate:obj.toDate};var inputParam={inputData:inputData,classUrl:\"registration\",operation:_this.props.Login.operation,methodUrl:\"Test\",responseKeyList:[{\"responseKey\":\"selectedSample\",\"masterDataKey\":\"RegistrationGetSample\",\"primaryKey\":\"npreregno\",\"dataAction\":\"update\"},{\"responseKey\":\"selectedSubSample\",\"masterDataKey\":\"RegistrationGetSubSample\",\"primaryKey\":\"ntransactionsamplecode\",\"dataAction\":\"update\"},{\"responseKey\":\"selectedTest\",\"masterDataKey\":\"RegistrationGetTest\",\"primaryKey\":\"ntransactiontestcode\",\"dataAction\":\"add\"}],saveType:saveType,formRef:formRef};if(showEsign(_this.state.controlMap,_this.props.Login.userInfo.nformcode,_this.props.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.createRegistrationTest(inputParam,masterData,\"openModal\");}};_this.getRegistrationComboService=function(ScreenName,operation,primaryKeyField,masterData,userInfo,editId){var data=[];var withoutCombocomponent=[];var Layout=_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.jsondata;if(Layout!==undefined){Layout.map(function(row){row.children.map(function(column){column.children.map(function(component){return component.hasOwnProperty(\"children\")?component.children.map(function(componentrow){if(componentrow.inputtype===\"combo\"){data.push(componentrow);}else{withoutCombocomponent.push(componentrow);}}):component.inputtype===\"combo\"?data.push(component):withoutCombocomponent.push(component);});});});var comboComponents=data;var childColumnList={};data.map(function(columnList){var val=_this.comboChild(data,columnList,childColumnList,true);data=val.data;childColumnList=val.childColumnList;});var mapOfFilterRegData={nsampletypecode:parseInt(_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode)};_this.props.getPreviewTemplate(masterData,userInfo,editId,data,_this.state.selectedRecord,childColumnList,comboComponents,withoutCombocomponent,true,false,mapOfFilterRegData);}else{toast.info(\"Configure the preregister template for this registrationtype\");}};_this.comboChild=function(data,columnList,childColumnList,slice){var retunObj={};// if (data.findIndex(x => x.label === columnList.label) !== -1) {\nif(!childColumnList.hasOwnProperty(columnList.label)){if(childColumnList[columnList.label]===undefined){if(columnList.hasOwnProperty(\"child\")){var childList=[];columnList.child.map(function(childData){var index=data.findIndex(function(x){return x.label===childData.label;});if(index!==-1){childList.push(data[index]);if(slice){data=[].concat(_toConsumableArray(data.slice(0,index)),_toConsumableArray(data.slice(index+1)));}}});childColumnList[columnList.label]=childList;if(childList.length>0){childList.map(function(y){if(y.hasOwnProperty(\"child\")){var val=_this.comboChild(data,y,childColumnList,slice);retunObj[\"data\"]=val.data;retunObj[\"childColumnList\"]=val.childColumnList;}else{retunObj[\"data\"]=data;retunObj[\"childColumnList\"]=childColumnList;}});}else{retunObj[\"data\"]=data;retunObj[\"childColumnList\"]=childColumnList;}}else{retunObj[\"data\"]=data;retunObj[\"childColumnList\"]=childColumnList;}}else{retunObj[\"data\"]=data;retunObj[\"childColumnList\"]=childColumnList;}}else{retunObj[\"data\"]=data;retunObj[\"childColumnList\"]=childColumnList;}return retunObj;};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});setTimeout(function(){_this._scrollBarRef.updateScroll();});};_this.handleTestPageChange=function(e){_this.setState({testskip:e.skip,testtake:e.take});};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.onFilterChange=function(event,labelname){var masterData=_this.props.Login.masterData;masterData=_objectSpread(_objectSpread({},masterData),{},_defineProperty({},labelname,_objectSpread({},event.item)));var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:masterData}};_this.props.updateStore(updateInfo);};_this.onSampleTabChange=function(tabProps){var activeSampleTab=tabProps.screenName;// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {activeSampleTab, screenName: activeSampleTab }\n// }\n// this.props.updateStore(updateInfo);\nif(activeSampleTab!==_this.props.Login.activeSampleTab){// if (this.props.Login.masterData.RealRegTypeValue.nregtypecode !== RegistrationType.PLASMA_POOL){\n//     activeSampleTab = \"IDS_SAMPLEATTACHMENTS\";\n// }\nvar inputData={masterData:_this.props.Login.masterData,selectedSample:_this.props.Login.masterData.selectedSample,npreregno:_this.props.Login.masterData.selectedSample?_this.props.Login.masterData.selectedSample.map(function(item){return item.npreregno;}).join(\",\"):\"-1\",userinfo:_this.props.Login.userInfo,screenName:activeSampleTab,activeSampleTab:activeSampleTab};_this.props.getSampleChildTabDetail(inputData);}};_this.ontestTabChange=function(tabProps){var activeTestTab=tabProps.screenName;// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {activeTestTab, screenName: activeTestTab }\n// }\n// this.props.updateStore(updateInfo);\nif(activeTestTab!==_this.props.Login.activeTestTab){if(_this.props.Login.masterData.selectedTest&&_this.props.Login.masterData.selectedTest.length>0){var inputData={masterData:_this.props.Login.masterData,selectedTest:_this.props.Login.masterData.selectedTest,ntransactiontestcode:_this.props.Login.masterData.selectedTest?String(_this.props.Login.masterData.selectedTest.map(function(item){return item.ntransactiontestcode;}).join(\",\")):\"-1\",npreregno:_this.props.Login.masterData.selectedSample?_this.props.Login.masterData.selectedSample.map(function(item){return item.npreregno;}).join(\",\"):\"-1\",userinfo:_this.props.Login.userInfo,activeTestTab:activeTestTab,screenName:activeTestTab,resultDataState:_this.state.resultDataState,testCommentDataState:_this.state.testCommentDataState};_this.props.getTestChildTabDetail(inputData,true);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTEST\"}));}}};_this.onDropComponentFile=function(attachedFiles,fieldName,maxSize){var selectedFile=_this.state.selectedFile||{};selectedFile[fieldName]=onDropAttachFileList(selectedFile[fieldName],attachedFiles,maxSize);_this.setState({selectedFile:selectedFile,actionType:\"new\"});};_this.handleFilterDateChange=function(dateName,dateValue){var selectedFilter=_this.state.selectedFilter;if(dateValue===null){dateValue=new Date();}selectedFilter[dateName]=dateValue;_this.setState({selectedFilter:selectedFilter});};_this.onUpdateRegistrationConfirm=function(){_this.showAlert();_this.onUpdateRegistration(_this.props.Login.regEditParam.saveType,_this.props.Login.regEditParam.formRef,_this.props.Login.regEditParam.operation,2);};_this.confirmAlert=function(){if(_this.state.showConfirmAlert){if(_this.props.Login.regDateEditConfirmMessage){_this.confirmMessage.confirm(\"Warning\",\"Warning\",_this.props.Login.regDateEditConfirmMessage,_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.onUpdateRegistrationConfirm();},undefined,function(){return _this.showAlert();});}else{_this.confirmMessage.confirm(\"Warning\",\"Warning\",_this.props.Login.booleanFlag,\"ok\",\"Cancel\",function(){return _this.insertRegistration(false);},undefined,function(){return _this.showAlert();});}}};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.showAlert=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showConfirmAlert:false}};_this.props.updateStore(updateInfo);};_this.AddFile=function(){var selectedRecord=_this.state.selectedRecord;var RealRegTypeValue=_this.props.Login.masterData.RealRegTypeValue;var booleanmanuf=true;if(RealRegTypeValue===RegistrationType.PLASMA_POOL){booleanmanuf=selectedRecord[\"nmanufcode\"]>0&&selectedRecord[\"nmanufcode\"]!==undefined?true:false;}if(booleanmanuf){if(_this.state.selectedRecord.nallottedspeccode!==undefined){var updateInfo={typeName:DEFAULT_RETURN,data:{loadFile:true,ChildscreenName:\"File\",childoperation:\"Import\",parentPopUpSize:\"lg\",selectedFile:undefined}};_this.props.updateStore(updateInfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTMANUFACTURER\"}));}};_this.onNumericInputChange=function(value,name){var selectComponent=_this.state.selectComponent||{};if(name!==\"nnoofcontainer\"&&(value===0||value===0.0)){selectComponent[name]='';_this.setState({selectComponent:selectComponent});}else{selectComponent[name]=value;_this.setState({selectComponent:selectComponent});}};_this.onSampleTypeChange=function(event,fieldName,labelname){if(event!==null){var _Map={};_Map[\"nsampletypecode\"]=parseInt(event.value);_Map['userinfo']=_this.props.Login.userInfo;_this.props.getSampleTypeChange(_Map,_this.props.Login.masterData,event,labelname);}};_this.ConfirmComponent=function(props){_this.confirmMessage.confirm(\"confirmation\",\"Confirmation!\",\"Do You Want to Override the Existing Components ?\",\"ok\",\"cancel\",function(){return _this.getComponentfromJava(props);});// confirm1.confirm(\"warning\", \"warning1\", \"do you want to override?\", \"ok\", \"cancel\", undefined);\n//.confirm(\"warning\", \"warning1\", \"do you want to override?\", \"ok\", \"cancel\", undefined)\n};_this.onRegTypeChange=function(event,fieldName,labelname){if(event!==null){var _Map2={};_Map2[\"nregtypecode\"]=parseInt(event.value);_Map2['userinfo']=_this.props.Login.userInfo;_this.props.getRegTypeChange(_Map2,_this.props.Login.masterData,event,labelname);}};_this.acceptRegistration=function(registerId,skip,take){var sampleList=[];if(_this.props.Login.masterData.searchedSample!==undefined){sampleList=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedSample,_this.props.Login.masterData.RegistrationGetSample.slice(skip,skip+take),\"npreregno\");}else{sampleList=_this.props.Login.masterData.RegistrationGetSample&&_this.props.Login.masterData.RegistrationGetSample.slice(skip,skip+take);}// let sampleList = this.props.Login.masterData.searchedSample || [...this.props.Login.masterData.RegistrationGetSample].splice(skip, skip + take);\nvar acceptList=getSameRecordFromTwoArrays(sampleList||[],_this.props.Login.masterData.selectedSample,\"npreregno\");if(acceptList&&acceptList.length>0){if(acceptList.every(_this.checkPreregisterAndQuarentine)){if(_this.props.Login.masterData.selectedTest.length>0){if(checkTestPresent(_this.props.Login.masterData.RegistrationGetTest,acceptList)){var _Map3={};_Map3[\"fromdate\"]=\"\";_Map3[\"todate\"]=\"\";_Map3[\"nsampletypecode\"]=_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;_Map3[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map3[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;_Map3[\"nfilterstatus\"]=-1;_Map3[\"npreregno\"]=acceptList&&acceptList.map(function(sample){return sample.npreregno;}).join(\",\");// Map[\"npreregno\"] = this.props.Login.masterData.selectedSample &&\n//     this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\");\n_Map3[\"registrationsample\"]=_this.props.Login.masterData.selectedSubSample;_Map3[\"registrationtest\"]=_this.props.Login.masterData.selectedTest;_Map3[\"userinfo\"]=_this.props.Login.userInfo;_Map3[\"nflag\"]=2;_Map3[\"ntype\"]=1;_Map3[\"activeSampleTab\"]=_this.props.Login.activeSampleTab;_Map3[\"activeTestTab\"]=_this.props.Login.activeTestTab;var inputParam={inputData:_Map3,postParamList:_this.postParamList,action:'accept'};_this.confirmMessage.confirm(_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_ACCEPTREGISTRATION\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.acceptRegistrationConfirm(inputParam,registerId);});}else{var _Map4={};_Map4[\"fromdate\"]=\"\";_Map4[\"todate\"]=\"\";_Map4[\"nsampletypecode\"]=_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;_Map4[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map4[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;// Map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\n_Map4[\"nfilterstatus\"]=-1;_Map4[\"npreregno\"]=acceptList&&acceptList.map(function(sample){return sample.npreregno;}).join(\",\");// Map[\"npreregno\"] = this.props.Login.masterData.selectedSample &&\n//     this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\");\n_Map4[\"registrationsample\"]=_this.props.Login.masterData.selectedSubSample;_Map4[\"registrationtest\"]=_this.props.Login.masterData.selectedTest;_Map4[\"userinfo\"]=_this.props.Login.userInfo;_Map4[\"nflag\"]=2;_Map4[\"ntype\"]=1;_Map4[\"activeSampleTab\"]=_this.props.Login.activeSampleTab;_Map4[\"activeTestTab\"]=_this.props.Login.activeTestTab;var _inputParam={inputData:_Map4,postParamList:_this.postParamList,action:'accept'};_this.confirmMessage.confirm(\"Confirmation\",\"Confirmation!\",\"Samples With atleast One Preregister Test Will Only Accept.Do You Want Accept?\",\"OK\",\"Cancel\",function(){return _this.acceptRegistrationConfirm(_inputParam,registerId);});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_ADDTESTTOREGISTERSAMPLES\"}));}}else{//toast.warn(\"Select Pre-register/Quarantine Samples\")\ntoast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTPREREGQUARANTINESAMPLES\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTPREREGQUARANTINESAMPLES\"}));}};_this.acceptRegistrationConfirm=function(inputParam,registerId){if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,registerId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,parentPopUpSize:'lg',screenName:_this.props.Login.screenName,operation:'accept'}};_this.props.updateStore(updateInfo);}else{_this.props.acceptRegistration(inputParam,_this.props.Login.masterData);}};_this.selectQuarantine=function(quarantineId,skip,take){var sampleList=_this.props.Login.masterData.searchedSample||(_this.props.Login.masterData.RegistrationGetSample?_toConsumableArray(_this.props.Login.masterData.RegistrationGetSample).splice(skip,skip+take):[]);var quarentineList=getSameRecordFromTwoArrays(sampleList,_this.props.Login.masterData.selectedSample,\"npreregno\");if(quarentineList&&quarentineList.length>0){if(quarentineList.every(_this.checkPreregisterRecordQuarantine)){// let ntransactionstatus = this.props.Login.masterData.selectedSample &&\n//     this.props.Login.masterData.selectedSample.map(transactionStatus => transactionStatus.ntransactionstatus).join(\",\");\n//if (ntransactionstatus === transactionStatus.PREREGISTER) {\nvar _Map5={};_Map5[\"fromdate\"]=\"\";_Map5[\"todate\"]=\"\";_Map5[\"nsampletypecode\"]=_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;_Map5[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map5[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;//Map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\n_Map5[\"nfilterstatus\"]=-1;_Map5[\"npreregno\"]=quarentineList&&quarentineList.map(function(sample){return sample.npreregno;}).join(\",\");_Map5[\"registrationsample\"]=_this.props.Login.masterData.selectedSample;_Map5[\"registrationtest\"]=_this.props.Login.masterData.selectedSubSample;_Map5[\"userinfo\"]=_this.props.Login.userInfo;_Map5[\"nflag\"]=2;_Map5[\"ntype\"]=1;_Map5[\"ntransactionstatus\"]=quarentineList&&quarentineList.map(function(transactionStatus){return transactionStatus.ntransactionstatus;}).join(\",\");//Map[\"ninsertpreregno\"] = quarantineSample.quarantineSample.npreregno;\nvar inputParam={inputData:_Map5,postParamList:_this.postParamList,action:'quarantine'};//console.log(\"inputParam, quarantine:\", inputParam);\nif(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,quarantineId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,parentPopUpSize:'lg',screenName:_this.props.Login.screenName,operation:'quarantine'}};_this.props.updateStore(updateInfo);}else{_this.props.preregRecordToQuarantine(inputParam,_this.props.Login.masterData);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTPREREGISTERSAMPLES\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTPREREGISTERSAMPLES\"}));}};_this.onRegSubTypeChange=function(event,fieldName,labelname){if(event!==null){var _Map6={};_Map6['nregtypecode']=_this.props.Login.masterData.RegTypeValue.nregtypecode;_Map6[\"nregsubtypecode\"]=parseInt(event.value);_Map6['userinfo']=_this.props.Login.userInfo;_this.props.getRegSubTypeChange(_Map6,_this.props.Login.masterData,event,labelname);}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?3:4;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){// if (comboData !== null) {\nvar selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});// }\n};_this.PrinterChange=function(comboData,fieldName){var selectedPrinterData=_this.state.selectedPrinterData||{};selectedPrinterData[fieldName]=comboData;_this.setState({selectedPrinterData:selectedPrinterData});};_this.onMultiColumnValue=function(value,key,flag,label,keys){var selectedRecord=_this.state.selectedRecord||{};if(value.length>0){key.forEach(function(objarray){selectedRecord[objarray]=value[0][objarray];});if(flag){keys.map(function(objkey,index){return selectedRecord[objkey]={\"label\":value[0][label[index]],\"value\":value[0][objkey]};});}}else{key.forEach(function(objarray){selectedRecord[objarray]=\"\";});keys.map(function(objkey,index){return selectedRecord[objkey]=\"\";});}_this.props.getManufacturerChange(selectedRecord,_this.props.Login.masterData,_this.props.Login.userInfo);};_this.onMultiColumnMAHChange=function(value,key){var selectedRecord=_this.state.selectedRecord||{};if(value.length>0){key.forEach(function(objarray){selectedRecord[objarray]=value[0][objarray];});}_this.setState({selectedRecord:selectedRecord});};_this.closeChildModal=function(){var loadComponent=_this.props.Login.loadComponent;var loadTest=_this.props.Login.loadTest;var loadFile=_this.props.Login.loadFile;var loadSource=_this.props.Login.loadSource;var showSaveContinue=_this.props.Login.showSaveContinue;var screenName=_this.props.Login.screenName;var selectedTest=_this.props.Login.selectedTest;var selectedComponent=_this.props.Login.selectedComponent;var selectComponent=_this.state.selectComponent;var loadChildTest=_this.props.Login.loadChildTest;var openModal=_this.props.Login.openModal;var loadPreregister=_this.props.Login.loadPreregister;if(_this.props.Login.loadComponent){loadComponent=false;showSaveContinue=false;selectedTest={};selectComponent=undefined;screenName=_this.props.Login.PopUpLabel;}else if(_this.props.Login.loadTest){loadTest=false;screenName=_this.props.Login.PopUpLabel;}else if(_this.props.Login.loadSource){loadSource=false;screenName=_this.props.Login.PopUpLabel;}else if(_this.props.Login.loadFile){loadFile=false;screenName=_this.props.Login.PopUpLabel;}else if(_this.props.Login.loadChildTest){loadChildTest=false;openModal=false;loadPreregister=false;}var updateInfo={typeName:DEFAULT_RETURN,data:{loadComponent:loadComponent,loadTest:loadTest,screenName:screenName,showSaveContinue:showSaveContinue,selectedComponent:selectedComponent,loadSource:loadSource,loadFile:loadFile,loadChildTest:loadChildTest,selectedTest:selectedTest,openModal:openModal,loadPreregister:loadPreregister,parentPopUpSize:\"xl\",selectComponent:selectComponent}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var loadPreregister=_this.props.Login.loadPreregister;var openChildModal=_this.props.Login.openChildModal;var parentPopUpSize=_this.props.Login.pare;var screenName=_this.props.Login.screenName;var loadPrinter=_this.props.Login.loadPrinter;var loadPoolSource=_this.props.Login.loadPoolSource;var openPortal=_this.props.Login.openPortal;var selectComponent=_this.props.Login.selectComponent;var selectedComponent=_this.props.Login.selectedComponent;var Component=_this.props.Login.Component;var selectedSpec=_this.props.Login.selectedSpec;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"accept\"||_this.props.Login.operation===\"cancel\"||_this.props.Login.operation===\"quarantine\"){loadEsign=false;openModal=false;openChildModal=false;loadPreregister=false;var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:loadEsign,openModal:openModal,openChildModal:openChildModal,loadPreregister:loadPreregister}};_this.props.updateStore(updateInfo);}else{loadEsign=false;if(loadPreregister){parentPopUpSize='xl';}var _updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:loadEsign,parentPopUpSize:parentPopUpSize}};_this.props.updateStore(_updateInfo);}}else{openModal=false;loadPrinter=false;loadPreregister=false;loadPoolSource=false;selectedRecord={};openPortal=false;var _updateInfo2={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadPreregister:loadPreregister,selectedRecord:selectedRecord,screenName:screenName,insertSourcePreregno:undefined,loadPrinter:loadPrinter,loadPoolSource:loadPoolSource,openPortal:openPortal,Component:Component}};_this.props.updateStore(_updateInfo2);}};_this.onSaveClick=function(saveType,formRef){var operation=_this.props.Login.operation;if(operation===\"update\"){_this.onUpdateRegistration(saveType,formRef,operation);}else{//ROUTINE\nif(_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode===RegistrationSubType.ROUTINE){_this.insertRoutineRegistration(true);}else{var Components=_this.props.Login.Component;// var flag = true;\nif(Components.length>0){if(operation===\"create\"){var checkManufLot=_this.checkManufLotPresent();if(checkManufLot===true){var flagDuplicate=checkDuplicateComponentandManufLot(Components);if(flagDuplicate===true){// if (this.props.Login.RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL) {\n//     flag= checkSourceForAllPreregno(Components, this.props.Login.Sources);\n// }\n_this.insertRegistration(true);}else{_this.confirmMessage.confirm(\"warning\",\"Warning!\",flagDuplicate,undefined,\"ok\",undefined,true,undefined);// alert(flagDuplicate);\n}}else{_this.confirmMessage.confirm(\"warning\",\"Warning!\",checkManufLot,undefined,\"ok\",undefined,true,undefined);// this.confirmMessage.confirm(\"warning\", \"Warning!\", checkManufLot, \"ok\", undefined, \"ok\", undefined);\n// alert(checkManufLot)\n}}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTCOMPONENT\"}));}}}};_this.onSavePrinterClick=function(){var insertlist=[];//this.state.selectedPrinterData.sprintername && this.state.selectedPrinterData.sprintername.map(source=>insertlist.push({npreregno:this.props.Login.insertSourcePreregno,sprintername:source.value}))\nvar inputParam={classUrl:'barcode',methodUrl:'Barcode',displayName:_this.props.Login.inputParam.displayName,inputData:{npreregno:_this.props.Login.insertPrinterPreregno,sprintername:_this.state.selectedPrinterData.sprintername?_this.state.selectedPrinterData.sprintername.value:'',insertlist:insertlist,npreregno1:_this.props.Login.masterData.selectedSample.map(function(x){return x.npreregno;}).join(\",\"),userinfo:_this.props.Login.userInfo,ncontrolcode:_this.props.Login.ncontrolcode},operation:'printer',// dataState:this.state.sourceDataState,\n// activeSampleTab:\"IDS_SOURCE\",\naction:'printer'};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:'printer'}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.onSaveFileClick=function(saveType,formRef){var selectedFile=_this.state.selectedFile;var selectedRecord=_this.state.selectedRecord;var acceptedFiles=selectedFile.sfilename;var formData=new FormData();// if(nattachmenttypecode === attachmentType.FTP) {\nif(acceptedFiles&&acceptedFiles.length>0){acceptedFiles.forEach(function(file,index){formData.append(\"uploadedFile\"+index,file);});formData.append(\"filecount\",acceptedFiles.length);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTANYONEFILETOSUBMIT\"}));}formData.append(\"userinfo\",JSON.stringify(_this.props.Login.userInfo));formData.append(\"nstudyplan\",JSON.stringify(selectedRecord.nallottedspeccode.value));formData.append(\"testrequired\",JSON.stringify(selectedRecord.ntransactionstatus===3?true:false));formData.append(\"ntemplatemanipulationcode\",JSON.stringify(selectedRecord.ntemplatemanipulationcode));formData.append(\"nregtypecode\",JSON.stringify(_this.props.Login.masterData.RealRegTypeValue.nregtypecode));formData.append(\"nregsubtypecode\",JSON.stringify(_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode));_this.props.ImportFile(formData,_this.confirmMessage,_this.props.Login);};_this.sampleInfoDataStateChange=function(event){_this.setState({sampleGridDataState:event.dataState});};_this.dataStateChange=function(event){switch(_this.props.Login.activeSampleTab){case\"IDS_SOURCE\":_this.setState({sourceDataState:event.dataState});break;default:_this.setState({sourceDataState:event.dataState});break;}};_this.testdataStateChange=function(event){switch(_this.props.Login.activeSampleTab){case\"IDS_TEST\":_this.setState({popUptestDataState:event.dataState});break;case\"IDS_TESTCOMMENTS\":_this.setState({testCommentDataState:event.dataState});break;default:_this.setState({popUptestDataState:event.dataState});break;}};_this.testStateChange=function(event){_this.setState({testDataState:event.dataState});};_this.sampleTabDetail=function(){var npreregno=_this.props.Login.masterData.selectedSample?_this.props.Login.masterData.selectedSample.map(function(sample){return sample.npreregno;}).join(\",\"):\"-1\";var tabMap=new Map();tabMap.set(\"IDS_ATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{screenName:\"IDS_SAMPLEATTACHMENTS\",onSaveClick:_this.onAttachmentSaveClick,selectedMaster:\"selectedSample\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,attachments:_this.props.Login.masterData.RegistrationAttachment||[],deleteRecord:_this.props.deleteAttachment,masterList:_this.props.Login.masterData.selectedSample,masterAlertStatus:\"IDS_SELECTSAMPLETOADDATTACHMENT\",fetchRecord:_this.props.getAttachmentCombo,viewFile:_this.props.viewAttachment,addName:\"AddSampleAttachment\",editName:\"EditSampleAttachment\",deleteName:\"DeleteSampleAttachment\",viewName:\"ViewSampleAttachment\",methodUrl:\"SampleAttachment\",skip:_this.props.Login.inputParam?_this.props.Login.inputParam.attachmentskip||0:0,take:_this.props.Login.inputParam?_this.props.Login.inputParam.attachmenttake||10:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,deleteParam:{methodUrl:\"SampleAttachment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights},editParam:{methodUrl:\"SampleAttachment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,masterList:_this.props.Login.masterData.RegistrationGetSample||[]},selectedListName:\"IDS_SAMPLE\",displayName:\"sarno\"}));if(_this.props.Login.masterData.RealRegTypeValue&&_this.props.Login.masterData.RealRegTypeValue.nregtypecode===RegistrationType.PLASMA_POOL){tabMap.set(\"IDS_SOURCE\",/*#__PURE__*/React.createElement(SourceTab,{userInfo:_this.props.Login.masterData.userInfo||{},RegistrationSourceCountry:_this.props.Login.masterData.RegistrationSourceCountry||[],dataState:_this.state.sourceDataState,methodUrl:\"RegistrationSourceCountry\",dataStateChange:_this.dataStateChange,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,screenName:\"IDS_SOURCE\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,deleteRecord:_this.deleteRegistrationSourceCountry}));}return tabMap;};_this.testTabDetail=function(){var testTabMap=new Map();var testList=_this.props.Login.masterData.RegistrationGetTest||[];var _this$state=_this.state,testskip=_this$state.testskip,testtake=_this$state.testtake;testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.selectedTest,\"ntransactiontestcode\");// const cancelId = this.state.controlMap.has(\"CancelTest\") && this.state.controlMap.get(\"CancelTest\").ncontrolcode;\nvar ntransactiontestcode=_this.props.Login.masterData.selectedTest?_this.props.Login.masterData.selectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\";testTabMap.set(\"IDS_PARAMETERRESULTS\",/*#__PURE__*/React.createElement(RegistrationResultTab,{userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,dataState:_this.state.resultDataState,dataStateChange:_this.testDataStateChange,screenName:\"IDS_PARAMETERRESULTS\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights// getStatusCombo={this.props.getStatusCombo}\n//selectedId={this.props.Login.masterData.selectedParamId}\n//  viewFile={this.props.viewAttachment}\n// checkListRecord={this.props.checkListRecord}\n}));testTabMap.set(\"IDS_TESTCOMMENTS\",/*#__PURE__*/React.createElement(Comments,{screenName:\"IDS_TESTCOMMENTS\",onSaveClick:_this.onCommentsSaveClick,selectedMaster:\"selectedTest\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,Comments:_this.props.Login.masterData.RegistrationTestComment||[],fetchRecord:_this.props.getCommentsCombo,addName:\"AddTestComment\",editName:\"EditTestComment\",deleteName:\"DeleteTestComment\",methodUrl:\"TestComment\",isTestComment:false,masterList:selectedTestList,masterAlertStatus:\"IDS_SELECTTESTTOADDCOMMENTS\",primaryKeyField:\"ntestcommentcode\",dataState:_this.state.testCommentDataState,dataStateChange:_this.testDataStateChange,deleteParam:{methodUrl:\"TestComment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTCOMMENTS\"},editParam:{methodUrl:\"TestComment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTCOMMENTS\",operation:\"update\",masterList:_this.props.Login.masterData.RegistrationGetSample||[],ncontrolCode:_this.state.controlMap.has(\"EditTestComment\")&&_this.state.controlMap.get(\"EditTestComment\").ncontrolcode},selectedListName:\"IDS_TESTS\",displayName:\"stestsynonym\"}));return testTabMap;};_this.getCommentsCombo=function(event){if(_this.props.Login.selectedTest&&_this.props.Login.selectedTest.length>0){var _this$props;(_this$props=_this.props).getCommentsCombo.apply(_this$props,_toConsumableArray(event));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTESTTOADDCOMMENTS\"}));}};_this.testDataStateChange=function(event){switch(_this.props.Login.activeTestTab){case\"IDS_PARAMETERRESULTS\":_this.setState({resultDataState:event.dataState});break;case\"IDS_TEST\":_this.setState({testDataState:event.dataState});break;case\"IDS_TESTCOMMENTS\":_this.setState({testCommentDataState:event.dataState});break;// default:\n//     this.setState({\n//         testDataState: event.dataState\n//     });\n//     break;\ndefault:_this.setState({resultDataState:event.dataState});break;}};_this.onCommentsSaveClick=function(saveType,formRef,selectedRecord){var masterData=_this.props.Login.masterData;var inputData={};var inputParam={};inputData[\"userinfo\"]=_this.props.Login.userInfo;var testList=[];if(_this.props.Login.masterData.searchedTest!==undefined){testList=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedTest,_this.props.Login.masterData.RegistrationGetTest.slice(_this.state.testskip,_this.state.testskip+_this.state.testtake),\"npreregno\");}else{testList=_this.props.Login.masterData.RegistrationGetTest.slice(_this.state.testskip,_this.state.testskip+_this.state.testtake);}var acceptList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.selectedTest,\"ntransactiontestcode\");// let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\nif(_this.props.Login.screenName===\"IDS_TESTCOMMENTS\"){var saveParam={userInfo:_this.props.Login.userInfo,isTestComment:_this.props.isTestComment,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,ntransactiontestcode:_this.props.Login.masterData.selectedTest?_this.props.Login.masterData.selectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\"};inputParam=onSaveTestComments(saveParam,acceptList);}if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:_this.props.Login.operation,screenName:_this.props.Login.screenName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openCommentModal\");}};_this.onAttachmentSaveClick=function(saveType,formRef,selectedRecord){var masterData=_this.props.Login.masterData;var inputData={};var inputParam={};var acceptList=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var sampleList=[];if(_this.props.Login.masterData.searchedTest!==undefined){sampleList=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedSample,_this.props.Login.masterData.RegistrationGetSample.slice(_this.state.skip,_this.state.skip+_this.state.take),\"npreregno\");}else{sampleList=_this.props.Login.masterData.RegistrationGetSample.slice(_this.state.skip,_this.state.skip+_this.state.take);}if(_this.props.Login.operation===\"update\"){acceptList.push(selectedRecord);}else{acceptList=getSameRecordFromTwoArrays(sampleList,_this.props.Login.masterData.selectedSample,\"npreregno\");}if(_this.props.Login.screenName===\"IDS_SAMPLEATTACHMENTS\"){var saveParam={userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,selectedMaster:_this.props.selectedMaster,npreregno:_this.props.Login.masterData.selectedSample?_this.props.Login.masterData.selectedSample.map(function(x){return x.npreregno;}).join(\",\"):\"-1\"};inputParam=onSaveSampleAttachment(saveParam,acceptList);}else if(_this.props.Login.screenName===\"IDS_TESTATTACHMENTS\"){var _saveParam={userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,selectedMaster:_this.props.selectedMaster,ntransactiontestcode:_this.props.Login.masterData.selectedTest?_this.props.Login.masterData.selectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\"};inputParam=onSaveTestAttachment(_saveParam,_this.props.Login.masterData.selectedTest);}if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:_this.props.Login.operation,screenName:_this.props.Login.screenName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openAttachmentModal\");}};_this.cancelRecord=function(controlcode,skip,take){var testList=_this.props.Login.masterData.searchedTest||(_this.props.Login.masterData.RegistrationGetTest?_toConsumableArray(_this.props.Login.masterData.RegistrationGetTest).splice(skip,skip+take):[]);var acceptList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.selectedTest,\"ntransactiontestcode\");if(acceptList&&acceptList.length>0){// console.log(\"Success:\", dataitem);\nif(_this.transValidation(_this.props.Login.transactionValidation,controlcode,acceptList)){var _Map7={};_Map7['ninsertpreregno']=acceptList.map(function(x){return x.npreregno;}).join(\",\");// Map['ntransactionstatus'] = dataitem.ntransactionstatus;\n_Map7[\"ntransactiontestcode\"]=acceptList.map(function(x){return x.ntransactiontestcode;}).join(\",\");//  Map[\"ninserttransactionsamplecode\"] = dataitem.ntransactionsamplecode\n_Map7[\"userinfo\"]=_this.props.Login.userInfo;_Map7[\"ncontrolcode\"]=controlcode;_Map7[\"nsampletypecode\"]=_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;_Map7[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map7[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;_Map7[\"nflag\"]=2;_Map7[\"ntype\"]=1;_Map7[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map7[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;_Map7[\"nfilterstatus\"]=_this.props.Login.masterData.FilterStatusValue.ntransactionstatus;_Map7[\"npreregno\"]=acceptList&&acceptList.map(function(sample){return sample.npreregno;}).join(\",\");_Map7[\"ntransactionsamplecode\"]=acceptList&&acceptList.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\");_Map7[\"registrationsample\"]=_this.props.Login.masterData.selectedSample;_Map7[\"registrationtest\"]=_this.props.Login.masterData.selectedSubSample;var inputParam={inputData:_Map7,postParamList:_this.postParamList,action:'cancelTest'};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,controlcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,parentPopUpSize:'lg',screenName:_this.props.Login.screenName,operation:'cancel'}};_this.props.updateStore(updateInfo);}else{_this.props.cancelTestAction(inputParam,_this.props.Login.masterData);}}else{var value=_this.props.Login.transactionValidation[controlcode]&&_this.props.Login.transactionValidation[controlcode].map(function(sample){return _this.props.intl.formatMessage({id:sample.stransdisplaystatus});}).join(\"/\");//toast.warn(\"Select\" + \" \" + value + \" to Cancel/Reject Test\");\ntoast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECT\"})+value+_this.props.intl.formatMessage({id:\"IDS_TOCANCELREJECTTEST\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTESTTOCANCELREJECT\"}));}};_this.handleEditDateChange=function(dateName,dateValue){var selectComponent=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}selectComponent[dateName]=dateValue;_this.setState({selectedRecord:selectComponent});};_this.onNumericInputEditChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};if(name!==\"nnoofcontainer\"&&(value===0||value===0.0)){selectedRecord[name]='';_this.setState({selectedRecord:selectedRecord});}else{selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});}};_this.deleteRegistrationSourceCountry=function(deleteParam){var inputParam={classUrl:'registration',methodUrl:'RegistrationSourceCountry',displayName:_this.props.Login.inputParam.displayName,inputData:{registrationsourcecountry:deleteParam.selectedRecord,npreregno:_this.props.Login.masterData.selectedSample.map(function(x){return x.npreregno;}).join(\",\"),\"userinfo\":_this.props.Login.userInfo},operation:'delete',dataState:_this.state.sourceDataState,action:'deleteregsourcecountry'};var deleteSourceId=_this.state.controlMap.has(\"DeleteRegistrationSourceCountry\")?_this.state.controlMap.get(\"DeleteRegistrationSourceCountry\").ncontrolcode:-1;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteSourceId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"IDS_SAMPLEREGISTRATION\",//screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\noperation:'delete'}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.cancelSampleRecords=function(controlcode,skip,take){var Map={};var sampleList=[];if(_this.props.Login.masterData.searchedSample!==undefined){sampleList=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedSample,_this.props.Login.masterData.RegistrationGetSample.slice(skip,skip+take),\"npreregno\");}else{sampleList=_this.props.Login.masterData.RegistrationGetSample&&_this.props.Login.masterData.RegistrationGetSample.slice(skip,skip+take);}// let sampleList = this.props.Login.masterData.searchedSample || [...this.props.Login.masterData.RegistrationGetSample].splice(skip, skip + take);\n// sampleList = sampleList.splice(skip, skip + take);\nvar cancelRejectSamplesList=getSameRecordFromTwoArrays(sampleList||[],_this.props.Login.masterData.selectedSample,\"npreregno\");if(cancelRejectSamplesList&&cancelRejectSamplesList.length>0){if(_this.transValidation(_this.props.Login.transactionValidation,controlcode,cancelRejectSamplesList)){//Map['ninsertpreregno']=dataitem.cancelSample.npreregno;\nMap['ntransactionstatus']=cancelRejectSamplesList&&cancelRejectSamplesList.map(function(transactionstatus){return transactionstatus.ntransactionstatus;}).join(\",\");//Map[\"ntransactiontestcode\"]=dataitem.ntransactiontestcode;\n//Map[\"ninserttransactionsamplecode\"]=dataitem.ntransactionsamplecode\nMap[\"userinfo\"]=_this.props.Login.userInfo;Map[\"ncontrolcode\"]=controlcode;Map[\"nsampletypecode\"]=_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;Map[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;Map[\"nflag\"]=2;Map[\"ntype\"]=1;Map[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;Map[\"nfilterstatus\"]=-1;Map[\"npreregno\"]=cancelRejectSamplesList&&cancelRejectSamplesList.map(function(sample){return sample.npreregno;}).join(\",\");Map[\"ntransactionsamplecode\"]=_this.props.Login.masterData.selectedSubSample&&_this.props.Login.masterData.selectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\");Map[\"ntransactiontestcode\"]=_this.props.Login.masterData.selectedTest&&_this.props.Login.masterData.selectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\");Map[\"registrationsample\"]=cancelRejectSamplesList;Map[\"registrationtest\"]=_this.props.Login.masterData.selectedSubSample;Map[\"transactionValidation\"]=_this.props.Login.transactionValidation;var inputParam={inputData:Map,postParamList:_this.postParamList,action:'cancelSample'};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,controlcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,parentPopUpSize:'lg',screenName:_this.props.Login.screenName,operation:'cancel'}};_this.props.updateStore(updateInfo);}else{_this.props.cancelSampleAction(inputParam,_this.props.Login.masterData);}}else{var value=_this.props.Login.transactionValidation[controlcode]&&_this.props.Login.transactionValidation[controlcode].map(function(sample){return _this.props.intl.formatMessage({id:sample.stransdisplaystatus});}).join(\"/\");//toast.warn(\"Select\" + \" \" + value + \" to Cancel/Reject Sample\");\ntoast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECT\"})+value+_this.props.intl.formatMessage({id:\"IDS_TOCANCELREJECTSAMPLE\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLETOCANCELREJECT\"}));}};_this.transValidation=function(transactionValidation,ncontrolcode,selectedSample){//  const transList=transactionValidation?Object.keys(transactionValidation):[];\n//  const index=transList.findIndex(x=>x.ncontrolcode===ncontrolcode);\n//let check=true;\n//  let validate=false;\nvar ntransstatus=[];var translist=transactionValidation[ncontrolcode];if(translist){transactionValidation[ncontrolcode]&&transactionValidation[ncontrolcode].map(function(sam){return ntransstatus.push(sam.ntransactionstatus);});var selectdata=selectedSample?selectedSample:[];var check=selectdata.map(function(sam1){return ntransstatus.includes(sam1.ntransactionstatus);});if(check.includes(false)){return false;}else{return true;}}else{return true;}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignforRegistration(inputParam,\"openModal\");};_this.searchSampleRef=React.createRef();_this.searchSubSampleRef=React.createRef();_this.searchTestRef=React.createRef();_this.PrevoiusLoginData=undefined;_this.state={openModal:false,masterStatus:\"\",error:\"\",selectedRecord:{},operation:\"\",screenName:\"Product\",userRoleControlRights:[],controlMap:new Map(),showAccordian:true,showSaveContinue:false,filterCollection:[],selectedFilter:{},breadCrumb:[],showTest:true,showSample:false,showSubSample:false,SingleItem:[],showConfirmAlert:false,dataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},DynamicSampleColumns:[],sampleGridDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},testDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'npreregno'}]},testCommentDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'groupingField'}]},resultDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},historyDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'},{field:'stestsynonym'}]},selectedPrinterData:{},grandparentheight:'150vh',transactionValidation:[],skip:0,take:_this.props.Login.settings&&parseInt(_this.props.Login.settings[3]),testskip:0,splitChangeWidthPercentage:28.6,testtake:_this.props.Login.settings&&_this.props.Login.settings[12]?_this.props.Login.settings[12]:10,comboComponents:[],withoutCombocomponent:[]};// this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\nreturn _this;}_createClass(Registration,[{key:\"getActiveTestURL\",value:function getActiveTestURL(){var url=\"resultentrybysample/getTestbasedParameter\";switch(this.props.Login.activeTestKey){case\"IDS_PARAMETERRESULTS\"://url = \"resultentrybysample/getTestbasedParameter\";\nurl=\"registration/getregistrationparameter\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";break;default:url=\"registration/getregistrationparameter\";// url = \"resultentrybysample/getTestbasedParameter\";\nbreak;}return url;}},{key:\"render\",value:function render(){var _this2=this;var cancelId=this.state.controlMap.has(\"CancelTest\")&&this.state.controlMap.get(\"CancelTest\").ncontrolcode;var preRegisterId=this.state.controlMap.has(\"AddPreregister\")?this.state.controlMap.get(\"AddPreregister\").ncontrolcode:-1;var registerId=this.state.controlMap.has(\"RegisterAccept\")?this.state.controlMap.get(\"RegisterAccept\").ncontrolcode:-1;var editSampleId=this.state.controlMap.has(\"EditSample\")?this.state.controlMap.get(\"EditSample\").ncontrolcode:-1;var quarantineId=this.state.controlMap.has(\"RegisterQuarantine\")?this.state.controlMap.get(\"RegisterQuarantine\").ncontrolcode:-1;var addSourceId=this.state.controlMap.has(\"AddRegistrationSourceCountry\")?this.state.controlMap.get(\"AddRegistrationSourceCountry\").ncontrolcode:-1;var addTestId=this.state.controlMap.has(\"AddNewTest\")?this.state.controlMap.get(\"AddNewTest\").ncontrolcode:-1;//const deleteSourceId = this.state.controlMap.has(\"DeleteRegistrationSourceCountry\") ? this.state.controlMap.get(\"DeleteRegistrationSourceCountry\").ncontrolcode:-1;\nvar printBarcodeId=this.state.controlMap.has(\"PrintBarcode\")?this.state.controlMap.get(\"PrintBarcode\").ncontrolcode:-1;//const cancelTestId = this.state.controlMap.has(\"CancelTest\") ? this.state.controlMap.get(\"CancelTest\").ncontrolcode:-1;\nvar cancelSampleId=this.state.controlMap.has(\"CancelReject\")?this.state.controlMap.get(\"CancelReject\").ncontrolcode:-1;var addSubSampleId=this.state.controlMap.has(\"AddSubSample\")?this.state.controlMap.get(\"AddSubSample\").ncontrolcode:-1;var editSubSampleId=this.state.controlMap.has(\"EditSubSample\")?this.state.controlMap.get(\"EditSubSample\").ncontrolcode:-1;this.fromDate=this.state.selectedFilter[\"fromdate\"]!==\"\"&&this.state.selectedFilter[\"fromdate\"]!==undefined?this.state.selectedFilter[\"fromdate\"]:this.props.Login.masterData.FromDate;this.toDate=this.state.selectedFilter[\"todate\"]!==\"\"&&this.state.selectedFilter[\"todate\"]!==undefined?this.state.selectedFilter[\"todate\"]:this.props.Login.masterData.ToDate;// this.fromDate = this.state.selectedFilter[\"fromdate\"] !== \"\" && this.state.selectedFilter[\"fromdate\"] !== undefined ? this.state.selectedFilter[\"fromdate\"] : new Date(this.props.Login.masterData.FromDate);\n// this.toDate = this.state.selectedFilter[\"todate\"] !== \"\" && this.state.selectedFilter[\"todate\"] !== undefined ? this.state.selectedFilter[\"todate\"] : new Date(this.props.Login.masterData.ToDate);\nvar sampleList=this.props.Login.masterData.RegistrationGetSample?sortData(this.props.Login.masterData.RegistrationGetSample):[];// let subSampleList = this.props.Login.masterData.RegistrationGetSubSample ? sortData(this.props.Login.masterData.RegistrationGetSubSample) : [];\nvar testList=this.props.Login.masterData.RegistrationGetTest?this.props.Login.masterData.RegistrationGetTest:[];//\nvar testGetParam={masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,ntransactionstatus:String(this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),// userinfo: this.props.Login.userInfo,\nnsampletypecode:this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",npreregno:this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),sfromdate:this.props.Login.masterData.RealFromDate,stodate:this.props.Login.masterData.RealToDate,searchTestRef:this.searchTestRef};var testChildGetParam={masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,ntransactionstatus:String(this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),// userinfo: this.props.Login.userInfo,\nnsampletypecode:this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",npreregno:this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),ntransactionsamplecode:this.props.Login.masterData.selectedSubSample&&this.props.Login.masterData.selectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\"),sfromdate:this.props.Login.masterData.RealFromDate,stodate:this.props.Login.masterData.RealToDate,resultDataState:this.state.resultDataState,testCommentDataState:this.state.testCommentDataState};this.confirmMessage=new ConfirmMessage();// let obj = this.covertDatetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate)\nvar breadCrumbobj=convertDateValuetoString(this.props.Login.masterData.RealFromDate,this.props.Login.masterData.RealToDate,this.props.Login.userInfo);this.breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":breadCrumbobj.breadCrumbFrom//|| this.props.Login.masterData.RealFromDate\n},{\"label\":\"IDS_TO\",\"value\":breadCrumbobj.breadCrumbto//|| this.props.Login.masterData.RealToDate\n},{\"label\":\"IDS_SAMPLETYPE\",\"value\":this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.ssampletypename},{\"label\":\"IDS_REGTYPE\",\"value\":this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.sregtypename},{\"label\":\"IDS_REGSUBTYPE\",\"value\":this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename},{\"label\":\"IDS_FILTERSTATUS\",\"value\":this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.stransdisplaystatus}];var subSampleGetParam={masterData:this.props.Login.masterData,ntransactionstatus:String(this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",testskip:this.state.testskip,searchTestRef:this.searchTestRef,resultDataState:this.state.resultDataState,testCommentDataState:this.state.testCommentDataState,sourceDataState:this.state.sourceDataState,sampleGridDataState:this.state.sampleGridDataState};var sampleSearchField=[\"sarno\",\"sproductname\",\"sproductcatname\",\"seprotocolname\",\"stransdisplaystatus\",\"sstorageconditionname\",\"sdecisionstatus\",\"scomponentname\",\"splasmafilenumber\",\"sversion\",\"sbulkvolume\",\"sregsubtypename\",\"smanuflotno\",\"sregtypename\",\"sspecname\",\"saddress1\",\"sclientname\",\"smanufsitename\",\"sproductcertificatename\",\"smanufname\",\"sstoragelocationname\"];if(this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode===RegistrationSubType.ROUTINE){sampleSearchField=[\"sarno\",\"sproductname\",\"sproductcatname\",\"sregsubtypename\",\"sregtypename\",\"sspecname\",\"smanufname\",\"sstorageconditionname\",\"sclientname\",\"scontainertype\",\"sdeadline\",\"sdecisionstatus\",\"sdeviationcomments\",\"sdispositionname\",\"slotno\",\"sbatchno\",\"sourfile\",\"speriodname\",\"spriorityname\",\"sreceiveddate\",\"sremarks\",\"sreportremarks\",\"ssamplecondition\",\"ssuppliername\",\"stotalqty\",\"stransdisplaystatus\"];}var filterSampleParam={inputListName:\"RegistrationGetSample\",selectedObject:\"selectedSample\",primaryKeyField:\"npreregno\",fetchUrl:\"registration/getRegistrationSubSample\",childRefs:[{ref:this.searchTestRef,childFilteredListName:\"searchedSubSample\"}],fecthInputObject:{nflag:2,ntype:2,masterData:this.props.Login.masterData,ntransactionstatus:String(this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\"},masterData:this.props.Login.masterData,searchFieldList:sampleSearchField,changeList:[\"RegistrationGetSubSample\",\"RegistrationGetTest\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationAttachment\",\"selectedSample\",\"selectedSubSample\",\"selectedTest\",\"RegistrationParameter\"]};var filterTestParam={inputListName:\"RegistrationGetTest\",selectedObject:\"selectedTest\",primaryKeyField:\"ntransactiontestcode\",fetchUrl:this.getActiveTestURL(),fecthInputObject:{ntransactiontestcode:this.props.Login.masterData&&this.props.Login.masterData.selectedTest&&this.props.Login.masterData.selectedTest?this.props.Login.masterData.selectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\",userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:[\"sarno\",\"stestsynonym\",\"ssectionname\",\"ssamplearno\",\"sinstrumentcatname\",\"stransdisplaystatus\",\"smethodname\",\"ssourcename\",\"scomponentname\",\"stestname\"],changeList:[\"RegistrationTestComment\",\"RegistrationParameter\"]};this.postParamList=[{filteredListName:\"searchedSample\",clearFilter:\"no\",searchRef:this.searchSampleRef,primaryKeyField:\"npreregno\",fetchUrl:\"registration/getRegistrationSubSample\",fecthInputObject:subSampleGetParam,childRefs:[{ref:this.searchTestRef,childFilteredListName:\"searchedSubSample\"}],selectedObject:\"selectedSample\",inputListName:\"AP_SAMPLE\",updatedListname:\"selectedSample\",unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\"]},{filteredListName:\"searchedTest\",updatedListname:\"selectedTest\",clearFilter:\"no\",searchRef:this.searchTestRef,primaryKeyField:\"ntransactiontestcode\",fetchUrl:\"approval/getApprovalTest\",fecthInputObject:testGetParam,selectedObject:\"selectedTest\",inputListName:\"RegistrationGetTest\",unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\"]}];var editRegParam={nfilterstatus:String(this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.RealSampleTypeValue&&this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue&&this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,sfromdate:this.props.Login.masterData.RealFromDate,stodate:this.props.Login.masterData.RealToDate,ncontrolCode:editSampleId};var addTestParam={selectedsample:this.props.Login.masterData.selectedSample,selectedsubsample:this.props.Login.masterData.selectedSubSample,skip:this.state.skip,take:this.state.skip+this.state.take,userinfo:this.props.Login.userInfo,sampleList:this.props.Login.masterData.RegistrationGetSample,snspecsampletypecode:this.props.Login.masterData.selectedSubSample&&_toConsumableArray(new Set(this.props.Login.masterData.selectedSubSample.map(function(x){return x.nspecsampletypecode;}))).join(\",\")};// const methodUrl = \"Test\";\n// const mandatoryFields = [{ \"mandatory\": true, \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\" }]\n// this.breadCrumb = [...this.state.selectedFilter];\n//, Object.keys(this.state.selectedFilter).length > 0 && { ...this.state.selectedFilter }\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-4 screen-height-window\"},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData}),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height\"},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",primaryIndex:1,percentage:true,secondaryInitialSize:this.state.splitChangeWidthPercentage,onSecondaryPaneSizeChange:this.paneSizeChange,primaryMinSize:40,secondaryMinSize:20},/*#__PURE__*/React.createElement(TransactionListMaster// paneHeight={this.state.firstPane}\n,{splitChangeWidthPercentage:this.state.splitChangeWidthPercentage,masterList:this.props.Login.masterData.searchedSample||sampleList,selectedMaster:this.props.Login.masterData.selectedSample,primaryKeyField:\"npreregno\",filterColumnData:this.props.filterTransactionList,getMasterDetail:this.props.getRegistrationsubSampleDetail,inputParam:subSampleGetParam,selectionList:this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus===transactionStatus.ALL?this.props.Login.masterData.FilterStatus:[],selectionColorField:\"scolorhexcode\",mainField:\"sarno\"//showStatusLink={true}\n// showStatusName={true}\n,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",selectedListName:\"selectedSample\",searchListName:\"searchedSample\",searchRef:this.searchSampleRef,objectName:\"sample\",listName:\"IDS_SAMPLE\",selectionField:\"ntransactionstatus\",selectionFieldName:\"stransdisplaystatus\",showFilter:this.props.Login.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,subFields:this.state.DynamicSampleColumns,needMultiSelect:true,filterParam:filterSampleParam,subFieldsLabel:false,handlePageChange:this.handlePageChange,skip:this.state.skip,take:this.state.take,splitModeClass:this.state.splitChangeWidthPercentage&&this.state.splitChangeWidthPercentage>50?'split-mode':this.state.splitChangeWidthPercentage>40?'split-md':'',childTabsKey:[\"RegistrationAttachment\",\"RegistrationGetSubSample\",\"RegistrationGetTest\",\"RegistrationSourceCountry\"]//, \"RegistrationParameter\"\"RegistrationTestComment\"\n,actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_EDIT\"}),controlname:\"faPencilAlt\",objectName:\"mastertoedit\",hidden:this.state.userRoleControlRights.indexOf(editSampleId)===-1,onClick:this.props.getEditRegistrationComboService,inputData:{primaryKeyName:\"npreregno\",operation:\"update\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,editRegParam:editRegParam}},{title:this.props.intl.formatMessage({id:\"IDS_PRINTBARCODE\"}),controlname:\"faPrint\",objectName:\"sample\",hidden:this.state.userRoleControlRights.indexOf(printBarcodeId)===-1,onClick:this.props.getPrinterComboService,inputData:{primaryKeyName:\"npreregno\",operation:\"print\",ncontrolcode:printBarcodeId,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,editRegParam:editRegParam}},// {\n//     title: \"reject\",\n//     controlname: \"reject\",\n//     objectName: \"cancelSample\",\n//     hidden: false,\n//     onClick:(cancelSample) => this.cancelSampleRecords(cancelSample,\"IDS_CANCEL\",cancelSampleId),\n//     inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\n// }\nthis.props.Login.masterData.RealRegTypeValue&&this.props.Login.masterData.RealRegTypeValue.nregtypecode===RegistrationType.PLASMA_POOL?{title:this.props.intl.formatMessage({id:\"IDS_ADDSOURCE\"}),controlname:\"AddSource\",objectName:\"sample\",hidden:this.state.userRoleControlRights.indexOf(addSourceId)===-1,onClick:this.props.getCountryList,inputData:{primaryKeyName:\"npreregno\",operation:\"update\",ncontrolcode:addSourceId,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,editRegParam:editRegParam}}:{}],needFilter:true,commonActions:/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right icon-group-wrap\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue ml-2\",role:\"button\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REGISTER\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(preRegisterId)===-1,onClick:function onClick(){return _this2.getRegistrationComboService(\"Registration\",\"create\",\"npreregno\",_this2.props.Login.masterData,_this2.props.Login.userInfo,preRegisterId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ACCEPT\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(registerId)===-1,onClick:function onClick(){return _this2.acceptRegistration(registerId,_this2.state.skip,_this2.state.take);}},/*#__PURE__*/React.createElement(Register,{className:\"custom_icons\",width:\"15\",height:\"15\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_QUARANTINE\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(quarantineId)===-1,onClick:function onClick(){return _this2.selectQuarantine(quarantineId,_this2.state.skip,_this2.state.take);}},/*#__PURE__*/React.createElement(Quarantine,{className:\"custom_icons\",width:\"15\",height:\"15\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CANCELREJECTSAMPLE\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(cancelSampleId)===-1,onClick:function onClick(){return _this2.cancelSampleRecords(cancelSampleId,_this2.state.skip,_this2.state.take);}},/*#__PURE__*/React.createElement(Reject,{className:\"custom_icons\",width:\"20\",height:\"20\"})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"}),\"data-for\":\"tooltip-common-wrap\",onClick:function onClick(){return _this2.onReload();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}}))),filterComponent:[{\"Sample Filter\":/*#__PURE__*/React.createElement(RegistrationFilter,{SampleType:this.state.stateSampleType||[],RegistrationType:this.state.stateRegistrationType||[],RegistrationSubType:this.state.stateRegistrationSubType||[],userInfo:this.props.Login.userInfo||{},SampleTypeValue:this.props.Login.masterData.SampleTypeValue||{},RegTypeValue:this.props.Login.masterData.RegTypeValue||{},RegSubTypeValue:this.props.Login.masterData.RegSubTypeValue||{},FilterStatusValue:this.props.Login.masterData.FilterStatusValue||{},FilterStatus:this.state.stateFilterStatus||[],FromDate:this.fromDate?rearrangeDateFormat(this.props.Login.userInfo,this.fromDate):new Date(),ToDate:this.toDate?rearrangeDateFormat(this.props.Login.userInfo,this.toDate):new Date(),onSampleTypeChange:this.onSampleTypeChange,onRegTypeChange:this.onRegTypeChange,onRegSubTypeChange:this.onRegSubTypeChange,handleFilterDateChange:this.handleFilterDateChange,onFilterChange:this.onFilterChange})}]}),this.props.Login.masterData.RegSubTypeValue&&this.props.Login.masterData.RegSubTypeValue.nsubsampleneed===3&&/*#__PURE__*/ // <ScrollBar>\nReact.createElement(TransactionListMaster,{masterList:this.subSampleList,selectedMaster:this.props.Login.masterData.selectedSubSample,primaryKeyField:\"npreregno\",getMasterDetail:this.props.getsubSampleDetail,inputParam:testGetParam,additionalParam:['napprovalversioncode'],showStatusLink:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",mainField:\"ssamplearno\",selectedListName:\"SelectedSample\",objectName:\"sample\",listName:\"IDS_SAMPLE\",needValidation:true,validationKey:\"napprovalversioncode\",validationFailMsg:\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",showFilter:this.props.Login.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,subFields:this.state.DynamicSubSampleColumns,searchRef:this.searchSubSampleRef,actionIcons:/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\",hidden:this.state.userRoleControlRights.indexOf(editSubSampleId)===-1,title:\"Print Barcode\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt,title:\"Edit\"})),needFilter:false,commonActions:/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\"// hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\n,hidden:this.state.userRoleControlRights.indexOf(addSubSampleId)===-1,onClick:function onClick(){return _this2.props.getRegistrationComboService(\"Registration\",\"create\",\"npreregno\",_this2.props.Login.masterData,_this2.props.Login.userInfo,addSubSampleId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,title:this.props.intl.formatMessage({id:\"IDS_PREREGISTER\"})})))})// </ScrollBar>\n,/*#__PURE__*/React.createElement(ScrollBar,{ref:function ref(_ref){_this2._scrollBarRef=_ref;}},/*#__PURE__*/React.createElement(\"div\",{className:\"fixed_list_height\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card_group\"},/*#__PURE__*/React.createElement(ContentPanel,{style:this.state.showTest===true?{display:\"block\",background:\"#FFFF\"}:{display:\"none\",background:\"#FFFF\"}},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(Row,{className:\"no-gutters\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\"}//onClick={() => this.showSampleInfo()}\n,onClick:function onClick(){return _this2.showTestAndSample();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(TransactionListMaster,{paneHeight:\"\".concat(testList&&testList!==null&&testList.length>0?testList.length*13:5,\"vh\"),masterList:this.props.Login.masterData.searchedTest||testList,selectedMaster:this.props.Login.masterData.selectedTest,primaryKeyField:\"ntransactiontestcode\",getMasterDetail:this.props.getTestChildTabDetail,inputParam:testChildGetParam,additionalParam:[],mainField:\"stestname\",selectedListName:\"selectedTest\",objectName:\"test\",listName:\"IDS_TEST\",pageSize:this.props.Login.settings&&this.props.Login.settings[13].split(\",\").map(function(setting){return parseInt(setting);}),showStatusLink:true,subFieldsLabel:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",needMultiSelect:true,subFields:this.state.testListColumns||[],moreField:this.state.testMoreField,needValidation:false,showStatusName:true,needFilter:false,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedTest\",searchRef:this.searchTestRef,filterParam:filterTestParam,selectionField:\"ntransactionstatus\",selectionFieldName:\"stransdisplaystatus\"// childTabsKey={[\"RegistrationTestComment\"]}\n,childTabsKey:[\"RegistrationParameter\",\"RegistrationTestComment\"],handlePageChange:this.handleTestPageChange,buttonCount:5,skip:this.state.testskip,take:this.state.testtake,showMoreResetList:true,showMoreResetListName:\"RegistrationGetSample\",selectionList:this.props.Login.masterData.RealFilterStatusValue&&this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus===transactionStatus.ALL?this.props.Login.masterData.FilterStatus:[],selectionColorField:\"scolorhexcode\"// selectionList=\n// actionIcons={\n//     [{ title: \"EditTest\", controlname: \"faPencilAlt\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\n//     { title: \"Add Intrument\", controlname: \"faMicroscope\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedInstrumentId) === -1, onClick: this.addREInstrument, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedInstrumentId } },\n//     { title: \"Add Material\", controlname: \"faFlask\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedMaterailId) === -1 },\n//     { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }]\n// }\n,commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex justify-content-end icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"adddeputy\",className:\"btn btn-circle outline-grey ml-2\"//title={\"Add Test\"}\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADDTEST\"}),hidden:this.state.userRoleControlRights.indexOf(addTestId)===-1,onClick:function onClick(){return _this2.props.addMoreTest(addTestParam,addTestId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\"//title={\"Cancel/Reject Test\"}\n,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CANCELREJECTTEST\"}),hidden:this.state.userRoleControlRights.indexOf(cancelId)===-1,onClick:function onClick(){return _this2.cancelRecord(cancelId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(Reject,{className:\"custom_icons\",width:\"15\",height:\"15\"}))))})))))))),/*#__PURE__*/React.createElement(ContentPanel,{style:this.state.showSample===true?{display:\"block\"}:{display:\"none\"}},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(Card,{className:\"p-0\"},/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\"}//onClick={() => this.showTestDetails()}\n,onClick:function onClick(){return _this2.showTestAndSample();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\" \",this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(Card.Body,null,this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.length===1?/*#__PURE__*/React.createElement(SampleInfoView,{data:this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.length>0?this.props.Login.masterData.selectedSample[this.props.Login.masterData.selectedSample.length-1]:{},SingleItem:this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample?this.state.SingleItem:[],screenName:\"IDS_SAMPLEINFO\"}):/*#__PURE__*/React.createElement(SampleGridTab,{userInfo:this.props.Login.masterData.userInfo||{},GridData:this.props.Login.masterData.selectedSample||[],masterData:this.props.Login.masterData,inputParam:this.props.Login.inputParam,dataState:this.state.sampleGridDataState,dataStateChange:this.sampleInfoDataStateChange,extractedColumnList:this.gridfillingColumn(this.state.DynamicGridItem)||[],detailedFieldList:this.gridfillingColumn(this.state.DynamicGridMoreField)||[],primaryKeyField:\"npreregno\",expandField:\"expanded\",screenName:\"IDS_SAMPLEINFO\"})))))),this.state.showSample?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:this.props.Login.activeSampleTab?this.props.Login.activeSampleTab==='IDS_SAMPLEATTACHMENTS'?'IDS_ATTACHMENTS':this.props.Login.activeSampleTab:'IDS_ATTACHMENTS',tabDetail:this.sampleTabDetail(),onTabChange:this.onSampleTabChange}):// <CustomTabs activeKey={this.props.Login.activeSampleTab ? \n//                 this.props.Login.activeSampleTab === 'IDS_SAMPLEATTACHMENTS' ? \n//                     'IDS_ATTACHMENTS' : this.props.Login.activeSampleTab \n//                 : 'IDS_ATTACHMENTS\"'} \n//             tabDetail={this.sampleTabDetail()} \n//             onTabChange={this.onSampleTabChange} /> :\nthis.state.showTest?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:this.props.Login.activeTestTab?this.props.Login.activeTestTab==='IDS_TESTCOMMENTS'?'IDS_TESTCOMMENTS':this.props.Login.activeTestTab:'IDS_PARAMETERRESULTS',tabDetail:this.testTabDetail(),onTabChange:this.ontestTabChange}):\"\"))))))))),this.props.Login.openPortal?/*#__PURE__*/React.createElement(PortalModal,null,/*#__PURE__*/React.createElement(PreRegisterSlideOutModal,{postParamList:this.postParamList,PrevoiusLoginData:this.PrevoiusLoginData,show:this.props.Login.openPortal,closeModal:this.closeModal,operation:\"create\",inputParam:this.props.Login.inputParam,screenName:\"IDS_REGISTRATION\",onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,timeZoneList:this.props.Login.timeZoneList,defaultTimeZone:this.props.Login.defaultTimeZone,comboComponents:this.state.comboComponents,withoutCombocomponent:this.state.withoutCombocomponent,userRoleControlRights:this.state.userRoleControlRights,fromDate:this.fromDate,toDate:this.toDate,templateData:this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.jsondata,nsampletypecode:parseInt(this.props.Login.masterData.RealSampleTypeValue.nsampletypecode),mandatoryFields:[{\"idsName\":\"IDS_PRODUCTCATEGORY\",\"dataField\":\"nproductcatcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_PRODUCTNAME\",\"dataField\":\"sproductname\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}]})):\"\",this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal//|| this.props.Login.loadEsign}\n,closeModal:this.props.Login.loadComponent||this.props.Login.loadTest||this.props.Login.loadSource||this.props.Login.loadFile||this.props.Login.loadChildTest?this.closeChildModal:this.closeModal,size:this.props.Login.parentPopUpSize,loginoperation:this.props.Login.loadPrinter?true:false,buttonLabel:this.props.Login.loadPrinter?\"print\":undefined,operation:this.props.Login.loadComponent||this.props.Login.loadTest||this.props.Login.loadSource||this.props.Login.loadFile?this.props.Login.childoperation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.loadComponent||this.props.Login.loadTest||this.props.Login.loadSource||this.props.Login.loadFile?this.props.Login.ChildscreenName:this.props.Login.screenName,esign:this.props.Login.loadEsign,innerPopup:this.props.Login.loadComponent,onSaveClick:this.props.Login.loadComponent?this.onSaveComponentClick:this.props.Login.loadTest?this.onSaveTestClick:this.props.Login.loadSource?this.onSaveSourceClick:this.props.Login.loadFile?this.onSaveFileClick:this.props.Login.loadPoolSource?this.onSavePoolSourceClick:this.props.Login.loadPrinter?this.onSavePrinterClick:this.props.Login.loadChildTest?this.onSaveChildTestClick:this.onSaveClick,validateEsign:this.validateEsign,showSaveContinue:this.props.Login.showSaveContinue,selectedRecord:!this.props.Login.loadEsign?this.props.Login.loadComponent?this.state.selectComponent:this.props.Login.loadPrinter?this.state.selectedPrinterData:this.props.Login.loadTest?this.state.selectedTestData:this.props.Login.loadFile?this.state.selectedFile:this.props.Login.loadPoolSource?this.state.selectedSourceData:this.state.selectedRecord:this.state.selectedRecord,mandatoryFields:this.mandatoryList(this.props.Login.loadPreregister,this.props.Login.loadComponent,this.props.Login.loadTest,this.props.Login.loadPoolSource,this.props.Login.loadPrinter,this.props.Login.masterData.RealRegTypeValue.nregtypecode,this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,this.props.Login.operation,this.props.Login.loadFile,this.props.Login.loadChildTest),addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.loadComponent?/*#__PURE__*/React.createElement(AddComponentPopUp,{ref:this.myScrollRef,selectComponent:this.state.selectComponent||{},RealSampleTypeValue:this.props.Login.masterData.RealSampleTypeValue||{},RealRegTypeValue:this.props.Login.masterData.RealRegTypeValue||{},RealRegSubTypeValue:this.props.Login.masterData.RealRegSubTypeValue||{},RealFilterStatusValue:this.props.Login.masterData.RealFilterStatusValue||{},formatMessage:this.props.intl.formatMessage,handleDateChange:this.handleDateChange,Component:this.props.Login.lstComponent||[],StorageCondition:this.props.Login.StorageCondition||[],onInputComponentOnChange:this.onInputComponentOnChange,onComboChange:this.onComponentComboChange,onNumericInputChange:this.onNumericInputChange,onComboComponentChange:this.onComboComponentChange,timeZoneList:this.props.Login.timeZoneList,plasmaMasterFile:this.props.Login.plasmaMasterFile,onComponentChange:this.onComponentChange,userInfo:this.props.Login.userInfo,StorageLocation:this.props.Login.StorageLocation||[],sreceiveddate:this.props.Login.sreceiveddate||[],CurrentTime:this.props.Login.CurrentTime}):this.props.Login.loadTest?/*#__PURE__*/React.createElement(AddTest,{TestCombined:this.props.Login.TestCombined||[],TestChange:this.TestChange,selectedTestData:this.state.selectedTestData}):this.props.Login.loadSource?/*#__PURE__*/React.createElement(AddSource,{SourceCombined:this.props.Login.SourceCombined||[],SourceChange:this.SourceChange,selectedSourceData:this.state.selectedSourceData}):this.props.Login.loadFile?/*#__PURE__*/React.createElement(AddFile,{selectedFile:this.state.selectedFile||{},onInputOnChange:this.onInputOnChange,onDrop:this.onDropComponentFile,deleteAttachment:this.deleteAttachment,actionType:this.state.actionType,maxSize:20,maxFiles:1}):this.props.Login.loadPoolSource?/*#__PURE__*/React.createElement(AddSource,{SourceCombined:this.props.Login.sourceCountry,selectedSourceData:this.state.selectedSourceData,SourceChange:this.SourceChange}):this.props.Login.loadPrinter?/*#__PURE__*/React.createElement(AddPrinter,{printer:this.props.Login.printer,selectedPrinterData:this.state.selectedPrinterData,PrinterChange:this.PrinterChange}):this.props.Login.loadChildTest?/*#__PURE__*/React.createElement(AddTest,{TestCombined:this.props.Login.availableTest,selectedTestData:this.state.selectedRecord,TestChange:this.onComboChange}):this.props.Login.loadPreregister?this.props.Login.operation===\"create\"?//ROUTINE\nthis.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode===RegistrationSubType.ROUTINE?/*#__PURE__*/React.createElement(PreRegisterRoutine,{userInfo:this.props.Login.userInfo,selectedRecord:this.state.selectedRecord,selectedComponent:this.props.Login.selectedComponent||[],ProductCategory:this.props.Login.ProductCategory||[],Product:this.props.Login.Product||[],Client:this.props.Login.Client||[],selectedTest:this.props.Login.SelectedTest||[],Supplier:this.props.Login.Supplier||[],ContainerType:this.props.Login.ContainerType||[],StorageCondition:this.props.Login.StorageCondition||[],timezone:this.props.Login.timezone||[],Disposition:this.props.Login.Disposition||[],Unit:this.props.Login.Unit||[],Period:this.props.Login.Period||[],Priority:this.props.Login.Priority||[],Manufacturer:this.props.Login.Manufacturer||[],Specification:this.props.Login.Specification||[],AgaramTree:this.props.Login.AgaramTree||[],OpenNodes:this.props.Login.OpenNodes||[],FocusKey:this.props.Login.FocusKey||[],ActiveKey:this.props.Login.ActiveKey||[],onTreeClick:this.onTreeClick,onproductCategoryChange:this.onproductCategoryChange,onProductChange:this.onProductChange,onManufacturerChange:this.onManufacturerChange,onComboChange:this.onComboChange,onInputOnChange:this.onInputOnChange,onClientComboChange:this.onClientComboChange,onspecChange:this.onRoutineSpecChange,handleDateChange:this.handleEditDateChange,onNumericInputChange:this.onNumericInputEditChange,operation:this.props.Login.operation,statustoEditDetail:this.props.Login.statustoEditDetail,addComponentTest:this.addComponentTest,deleteTest:this.deleteTest,userRoleControlRights:this.state.userRoleControlRights}):/*#__PURE__*/React.createElement(PreRegisterPopUp,{selectedRecord:this.state.selectedRecord||{},RealRegTypeValue:this.props.Login.masterData.RealRegTypeValue||{},RealRegSubTypeValue:this.props.Login.masterData.RealRegSubTypeValue||{},formatMessage:this.props.intl.formatMessage,onMultiColumnValue:this.onMultiColumnValue,onMultiColumnMAHChange:this.onMultiColumnMAHChange,ProductCategory:this.props.Login.ProductCategory||[],Product:this.props.Login.Product||[],Client:this.props.Login.Client||[],Country:this.props.Login.Country||[],ProductMaholder:this.props.Login.ProductMaholder||[],Manufacturer:this.props.Login.Manufacturer||[],Specification:this.props.Login.Specification||[],AgaramTree:this.props.Login.AgaramTree||[],OpenNodes:this.props.Login.OpenNodes||[],FocusKey:this.props.Login.FocusKey||[],ActiveKey:this.props.Login.ActiveKey||[],onTreeClick:this.onTreeClick,Goodsin:this.props.Login.Goodsin||[],EProtocol:this.props.Login.EProtocol,SelectedSource:this.props.Login.SelectedSource||[],onproductCategoryChange:this.onproductCategoryChange,onProductChange:this.onProductChange,onManufacturerChange:this.onManufacturerChange,onComboChange:this.onComboChange,onInputOnChange:this.onInputOnChange,onClientComboChange:this.onClientComboChange,onspecChange:this.onspecChange,getComponentfromJava:this.getComponentfromJava,selectComponent:this.selectComponent,selectedComponent:this.props.Login.selectedComponent||[],Component:this.props.Login.Component||[],selectedTest:this.props.Login.SelectedTest||[],ConfirmComponent:this.ConfirmComponent,AddComponent:this.AddComponent,addComponentTest:this.addComponentTest,addComponentSource:this.addComponentSource,deleteComponent:this.deleteComponent,deleteTest:this.deleteTest,editComponent:this.editComponent,AddFile:this.AddFile,popUptestDataState:this.state.popUptestDataState,componentDataState:this.state.componentDataState,testdataStateChange:this.testdataStateChange,componentDataStateChange:this.componentDataStateChange,popUpsourceDataStateChange:this.popUpsourceDataStateChange,popUpsourceDataState:this.state.popUpsourceDataState,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,deleteSource:this.deleteSource//     handleDateChange={this.handleDateChange}\n}):this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode===RegistrationSubType.ROUTINE?/*#__PURE__*/React.createElement(PreRegisterRoutine,{userInfo:this.props.Login.userInfo,selectedRecord:this.state.selectedRecord,selectComponent:this.state.selectedComponent||[],ProductCategory:this.props.Login.ProductCategory||[],Product:this.props.Login.Product||[],Client:this.props.Login.Client||[],Supplier:this.props.Login.Supplier||[],ContainerType:this.props.Login.ContainerType||[],StorageCondition:this.props.Login.StorageCondition||[],timezone:this.props.Login.timezone||[],Disposition:this.props.Login.Disposition||[],Unit:this.props.Login.Unit||[],Period:this.props.Login.Period||[],Priority:this.props.Login.Priority||[],Manufacturer:this.props.Login.Manufacturer||[],Specification:this.props.Login.Specification||[],AgaramTree:this.props.Login.AgaramTree||[],OpenNodes:this.props.Login.OpenNodes||[],FocusKey:this.props.Login.FocusKey||[],ActiveKey:this.props.Login.ActiveKey||[],onTreeClick:this.onTreeClick,onproductCategoryChange:this.onproductCategoryChange,onProductChange:this.onProductChange,onManufacturerChange:this.onManufacturerChange,onComboChange:this.onComboChange,onInputOnChange:this.onInputOnChange,onClientComboChange:this.onClientComboChange,onspecChange:this.onRoutineSpecChange,handleDateChange:this.handleEditDateChange,onNumericInputChange:this.onNumericInputEditChange,operation:this.props.Login.operation,statustoEditDetail:this.props.Login.statustoEditDetail}):/*#__PURE__*/React.createElement(EditPreRegistration,{selectedRecord:this.state.selectedRecord||{},realRegTypeValue:this.props.Login.masterData.RealRegTypeValue||{},realRegSubTypeValue:this.props.Login.masterData.RealRegSubTypeValue||{},formatMessage:this.props.intl.formatMessage,onMultiColumnValue:this.onMultiColumnValue,onspecChange:this.onspecChange,onMultiColumnMAHChange:this.onMultiColumnMAHChange,productCategory:this.props.Login.ProductCategory||[],product:this.props.Login.Product||[],client:this.props.Login.Client||[],country:this.props.Login.Country||[],productMaholder:this.props.Login.ProductMaholder||[],manufacturer:this.props.Login.Manufacturer||[],specification:this.props.Login.Specification||[],timeZoneList:this.props.Login.timeZoneList,agaramTree:this.props.Login.AgaramTree||[],openNodes:this.props.Login.OpenNodes||[],focusKey:this.props.Login.FocusKey||[],activeKey:this.props.Login.ActiveKey||[],onTreeClick:this.onTreeClick,goodsIn:this.props.Login.Goodsin||[],eProtocol:this.props.Login.EProtocol,storageCondition:this.props.Login.StorageCondition||[],storageLocation:this.props.Login.StorageLocation||[],plasmaMasterFile:this.props.Login.plasmaMasterFile,userInfo:this.props.Login.userInfo,onNumericInputChange:this.onNumericInputEditChange,onManufacturerChange:this.onManufacturerChange,onComboChange:this.onComboChange,onInputOnChange:this.onInputOnChange,onClientComboChange:this.onClientComboChange//selectedTest={this.props.Login.SelectedTest || []}\n//confirmComponent={this.ConfirmComponent}\n,handleDateChange:this.handleEditDateChange,statustoEditDetail:this.props.Login.statustoEditDetail,operation:this.props.Login.operation,CurrentTime:this.props.Login.currentTime}):\"\"}),this.state.showConfirmAlert?this.confirmAlert():\"\");}},{key:\"showSampleInfo\",value:function showSampleInfo(){this.setState({showSample:true,showTest:false});}},{key:\"showTestAndSample\",value:function showTestAndSample(){this.setState({showSample:!this.state.showSample,showTest:!this.state.showTest});}},{key:\"showTestDetails\",value:function showTestDetails(){var updateInfo={typeName:DEFAULT_RETURN,data:{showSample:!this.state.showSample,showTest:!this.state.showTest}};this.props.updateStore(updateInfo);// this.setState({ showSample: false, showTest: true })\n}},{key:\"checkPreregisterAndQuarentine\",value:function checkPreregisterAndQuarentine(sample){return sample.ntransactionstatus===transactionStatus.PREREGISTER||sample.ntransactionstatus===transactionStatus.QUARANTINE;}},{key:\"checkPreregisterRecordQuarantine\",value:function checkPreregisterRecordQuarantine(sample){return sample.ntransactionstatus===transactionStatus.PREREGISTER;}},{key:\"insertRegistration\",value:// onSaveFileClick = (saveType, formRef) => {\n// }\nfunction insertRegistration(confirmMsg){var Components=this.props.Login.Component;//  let Source = this.props.Login.Sources ? this.props.Login.Sources : [];\nvar Source=this.props.Login.Source?this.props.Login.Source:[];var Test=this.props.Login.Test;var Map={};Map[\"testgrouptest\"]=TestListManipulation(Components,Test);Map[\"component\"]=getComponentListfromUnwantedAttr(this.props.Login.Component);Map[\"FromDate\"]=rearrangeDateFormat(this.props.Login.userInfo,this.fromDate);//formatDate(this.fromDate);\nMap[\"ToDate\"]=rearrangeDateFormat(this.props.Login.userInfo,this.toDate);//formatDate(this.toDate);\nMap[\"nregtypecode\"]=this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"nregsubtypecode\"]=this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;Map[\"nsampletypecode\"]=this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;Map[\"nfilterstatus\"]=transactionStatus.PREREGISTER;Map[\"Registration\"]=getRegistration(this.props.Login.masterData,this.state.selectedRecord);Map[\"Registrationgeneral\"]=getRegistrationGeneral(this.state.selectedRecord);Map[\"country\"]=Object.keys(Source).length>0?TestListManipulation(Components,Source):[];Map[\"userinfo\"]=this.props.Login.userInfo;Map[\"nflag\"]=2;Map[\"ntype\"]=1;Map[\"booleanLotCheck\"]=confirmMsg?true:false;Map[\"activeSampleTab\"]=this.props.Login.activeSampleTab;Map[\"activeTestTab\"]=this.props.Login.activeTestTab;Map[\"multipleselectionFlag\"]=this.props.Login.settings&&parseInt(this.props.Login.settings[7])===3?true:false;// Map[\"postParamList\"]=this.postParamList\nvar inputParam={inputData:Map,postParamList:this.postParamList,action:\"preregister\"};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:this.props.Login.masterData},openModal:true,parentPopUpSize:'lg',screenName:this.props.Login.screenName,operation:'create',showConfirmAlert:false}};this.props.updateStore(updateInfo);}else{this.props.updateStore({typeName:DEFAULT_RETURN,data:{showConfirmAlert:false}});this.props.insertRegistration(inputParam,this.props.Login.masterData);}}},{key:\"insertRoutineRegistration\",value:function insertRoutineRegistration(){var Components=this.props.Login.Component;var Test=this.props.Login.Test;var Map={};Map[\"testgrouptest\"]=TestListManipulation(Components,Test);Map[\"component\"]=getComponentListfromUnwantedAttr(this.props.Login.Component);Map[\"FromDate\"]=rearrangeDateFormat(this.props.Login.userInfo,this.fromDate);//formatDate(this.fromDate);\nMap[\"ToDate\"]=rearrangeDateFormat(this.props.Login.userInfo,this.toDate);//formatDate(this.toDate);\nMap[\"nregtypecode\"]=this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"nregsubtypecode\"]=this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;Map[\"nsampletypecode\"]=this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;Map[\"nfilterstatus\"]=transactionStatus.PREREGISTER;Map[\"Registration\"]=getRegistration(this.props.Login.masterData,this.state.selectedRecord);Map[\"Registrationgeneral\"]={};Map[\"registrationroutine\"]=getRegistrationRoutine(this.state.selectedRecord);Map[\"country\"]=[];Map[\"userinfo\"]=this.props.Login.userInfo;Map[\"nflag\"]=2;Map[\"ntype\"]=1;Map[\"booleanLotCheck\"]=false;Map[\"activeSampleTab\"]=this.props.Login.activeSampleTab;Map[\"activeTestTab\"]=this.props.Login.activeTestTab;Map[\"multipleselectionFlag\"]=this.props.Login.settings&&parseInt(this.props.Login.settings[7])===3?true:false;// Map[\"postParamList\"]=this.postParamList\nvar inputParam={inputData:Map,postParamList:this.postParamList,action:\"preregister\"};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:this.props.Login.masterData},openModal:true,parentPopUpSize:'lg',screenName:this.props.Login.screenName,operation:'create',showConfirmAlert:false}};this.props.updateStore(updateInfo);}else{this.props.updateStore({typeName:DEFAULT_RETURN,data:{showConfirmAlert:false}});this.props.insertRegistration(inputParam,this.props.Login.masterData);}}},{key:\"gridfillingColumn\",value:/* covertDatetoString(startDateValue, endDateValue) {\r\n         const startDate = new Date(startDateValue);\r\n         const endDate = new Date(endDateValue);\r\n \r\n         const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n         const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n         const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n         const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n \r\n         const fromDate = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay + \"T00:00:00\";\r\n         const toDate = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay + \"T23:59:59\";\r\n         const breadCrumbFrom = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay;\r\n         const breadCrumbTo = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay;\r\n         return ({ fromDate, toDate, breadCrumbFrom, breadCrumbTo })\r\n     }*/function gridfillingColumn(data){//  const tempArray = [];\nvar temparray=data&&data.map(function(option){return{\"idsName\":option[\"1\"],\"dataField\":option[\"2\"],\"width\":\"200px\",\"columnSize\":\"3\"};});return temparray;}},{key:\"ComponentObjectAfterSave\",value:function ComponentObjectAfterSave(){var testrequired=this.state.selectedRecord.ntransactionstatus;var objcomponent=this.state.selectComponent;delete objcomponent.nneedservice;if(testrequired===3){this.props.getTestfromDB(objcomponent,this.props.Login,2);}else{var _Component2=this.props.Login.Component||[];var saveComponent=_objectSpread({},objcomponent);saveComponent[\"slno\"]=this.props.Login.Component?Object.keys(this.props.Login.Component).length+1:1;saveComponent[\"scomponentname\"]=objcomponent[\"ncomponentcode\"].label;saveComponent[\"sstoragelocationname\"]=objcomponent[\"nstoragelocationcode\"]?objcomponent[\"nstoragelocationcode\"].label:\"\";saveComponent[\"sstorageconditionname\"]=objcomponent[\"nstorageconditioncode\"]?objcomponent[\"nstorageconditioncode\"].label:\"\";saveComponent[\"ncomponentcode\"]=objcomponent[\"ncomponentcode\"]?objcomponent[\"ncomponentcode\"].value:-1;saveComponent[\"nstoragelocationcode\"]=objcomponent[\"nstoragelocationcode\"]?objcomponent[\"nstoragelocationcode\"].value:-1;saveComponent[\"nstorageconditioncode\"]=objcomponent[\"nstorageconditioncode\"]?objcomponent[\"nstorageconditioncode\"].value:-1;//objcomponent[\"dreceiveddate\"] = formatDate(objcomponent[\"dreceiveddate\"]);\n// saveComponent[\"dreceiveddate\"] = formatInputDate(objcomponent[\"dreceiveddate\"], false);\n// saveComponent[\"sreceiveddate\"] = formatInputDateWithoutT(objcomponent[\"dreceiveddate\"], false);\nvar dreceiveddate=objcomponent[\"dreceiveddate\"];saveComponent[\"dreceiveddate\"]=dreceiveddate;saveComponent[\"sreceiveddate\"]=convertDateTimetoString(dreceiveddate,this.props.Login.userInfo);saveComponent[\"nallottedspeccode\"]=objcomponent[\"nallottedspeccode\"]?objcomponent[\"nallottedspeccode\"]:-1;saveComponent[\"nplasmafilecode\"]=objcomponent[\"nplasmafilecode\"]?objcomponent[\"nplasmafilecode\"].value:-1;saveComponent[\"splasmafilenumber\"]=objcomponent[\"nplasmafilecode\"]?objcomponent[\"nplasmafilecode\"].label:\"\";saveComponent[\"ntzdmanufdate\"]=objcomponent[\"ntzdmanufdate\"]?objcomponent[\"ntzdmanufdate\"].value:-1;saveComponent[\"ntzdreceivedate\"]=objcomponent[\"ntzdreceivedate\"]?objcomponent[\"ntzdreceivedate\"].value:-1;saveComponent[\"stzdreceivedate\"]=objcomponent[\"ntzdreceivedate\"]?objcomponent[\"ntzdreceivedate\"].label:\"\";saveComponent[\"stzdmanufdate\"]=objcomponent[\"ntzdmanufdate\"]?objcomponent[\"ntzdmanufdate\"].label:\"\";_Component2.unshift(saveComponent);var updateInfo={typeName:DEFAULT_RETURN,data:{Component:_Component2,openChildModal:false,selectedComponent:saveComponent,SelectedTest:[],SelectedSource:[],selectComponent:{},showSaveContinue:false,loadComponent:false,parentPopUpSize:\"xl\"}};this.props.updateStore(updateInfo);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.withoutCombocomponent!==previousProps.Login.withoutCombocomponent){this.setState({withoutCombocomponent:this.props.Login.withoutCombocomponent});}if(this.props.Login.comboComponents!==previousProps.Login.comboComponents){this.setState({comboComponents:this.props.Login.comboComponents});}if(this.props.Login.showSaveContinue!==previousProps.Login.showSaveContinue){this.setState({showSaveContinue:this.props.Login.showSaveContinue});}if(this.props.Login!==previousProps.Login){this.PrevoiusLoginData=previousProps;}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}else if(this.props.Login.selectedPrinterData!==previousProps.Login.selectedPrinterData){this.setState({selectedPrinterData:this.props.Login.selectedPrinterData});}else if(this.props.Login.loadFile!==previousProps.Login.loadFile&&this.props.Login.loadFile===false){this.setState({selectedFile:undefined});}// else if (this.props.Login.selectedSourceData !== previousProps.Login.selectedSourceData) {\n//     this.setState({ selectedSourceData: this.props.Login.selectedSourceData });\n// } \nelse if(this.props.Login.selectedPrinterData!==previousProps.Login.selectedPrinterData){this.setState({selectedPrinterData:this.props.Login.selectedPrinterData});}else if(this.props.Login.selectedFilter!==previousProps.Login.selectedFilter){this.setState({selectedFilter:this.props.Login.selectedFilter});}if(this.props.Login.popUptestDataState&&this.props.Login.popUptestDataState!==previousProps.Login.popUptestDataState){this.setState({popUptestDataState:this.props.Login.popUptestDataState});}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});}// if(this.props.Login.showSample !== previousProps.Login.showSample) {\n//     let showSample = this.props.Login.showSample !== undefined ? this.props.Login.showSample : this.state.showSample\n//     let showTest = showSample ? false : true\n//     this.setState({ showSample, showTest });\n// }\n// if(this.props.Login.showTest !== previousProps.Login.showTest) {\n//     let showTest = this.props.Login.showTest !== undefined ? this.props.Login.showTest : this.state.showTest\n//     let showSample = showTest ? false : true\n//     this.setState({ showSample, showTest });\n// }\nif(this.props.Login.masterData!==previousProps.Login.masterData){var DynamicSampleColumns=this.state.DynamicSampleColumns;var DynamicSubSampleColumns=this.state.DynamicSubSampleColumns;var DynamicTestColumns=this.state.DynamicTestColumns;var DynamicGridItem=this.state.DynamicGridItem;var DynamicGridMoreField=this.state.DynamicGridMoreField;var SingleItem=this.state.SingleItem;var testMoreField=this.state.testMoreField;var testListColumns=this.state.testListColumns;var _this$state2=this.state,skip=_this$state2.skip,take=_this$state2.take,testskip=_this$state2.testskip,testtake=_this$state2.testtake,testCommentDataState=_this$state2.testCommentDataState,resultDataState=_this$state2.resultDataState,sourceDataState=_this$state2.sourceDataState,sampleGridDataState=_this$state2.sampleGridDataState,popUptestDataState=_this$state2.popUptestDataState;if(this.props.Login.masterData.DynamicColumns&&this.props.Login.masterData.DynamicColumns!==previousProps.Login.masterData.DynamicColumns){DynamicSampleColumns=listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1],3);DynamicSubSampleColumns=listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2],3);DynamicTestColumns=listDataFromDynamicArray(listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3],5),1);DynamicGridItem=listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1],5);DynamicGridMoreField=listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1],6);SingleItem=listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1],4);testMoreField=listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3],7);testListColumns=listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3],3);}var showSample=this.props.Login.showSample===this.state.showTest||this.state.showSample;var showTest=showSample?false:true;var sampleTypeMap=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"jsondata\",\"nsorter\",\"ascending\",false);var registrationTypeMap=constructOptionList(this.props.Login.masterData.RegistrationType||[],\"nregtypecode\",\"sregtypename\",\"nsorter\",\"ascending\",false);var registrationSubTypeMap=constructOptionList(this.props.Login.masterData.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",\"nsorter\",\"ascending\",false);var filterStatusMap=constructOptionList(this.props.Login.masterData.FilterStatus||[],\"ntransactionstatus\",\"stransdisplaystatus\",\"nsorter\",\"ascending\",false);// const stateSampleType = sampleTypeMap.get(\"OptionList\");\nskip=this.props.Login.skip===undefined?skip:this.props.Login.skip;take=this.props.Login.take||take;testskip=this.props.Login.testskip===undefined?testskip:this.props.Login.testskip;testtake=this.props.Login.testtake||testtake;if(this.props.Login.resultDataState&&this.props.Login.resultDataState!==previousProps.Login.resultDataState){resultDataState=this.props.Login.resultDataState;}if(this.props.Login.testCommentDataState&&this.props.Login.testCommentDataState!==previousProps.Login.testCommentDataState){testCommentDataState=this.props.Login.testCommentDataState;}if(this.props.Login.sourceDataState&&this.props.Login.sourceDataState!==previousProps.Login.sourceDataState){sourceDataState=this.props.Login.sourceDataState;}if(this.props.Login.sampleGridDataState&&this.props.Login.sampleGridDataState!==previousProps.Login.sampleGridDataState){sampleGridDataState=this.props.Login.sampleGridDataState;}if(this.props.Login.popUptestDataState&&this.props.Login.popUptestDataState!==previousProps.Login.popUptestDataState){popUptestDataState=this.props.Login.popUptestDataState;}this.setState({DynamicSampleColumns:DynamicSampleColumns,DynamicSubSampleColumns:DynamicSubSampleColumns,DynamicTestColumns:DynamicTestColumns,SingleItem:SingleItem,testMoreField:testMoreField,DynamicGridItem:DynamicGridItem,DynamicGridMoreField:DynamicGridMoreField,testListColumns:testListColumns,stateSampleType:sampleTypeMap.get(\"OptionList\"),stateRegistrationType:registrationTypeMap.get(\"OptionList\"),stateRegistrationSubType:registrationSubTypeMap.get(\"OptionList\"),stateFilterStatus:filterStatusMap.get(\"OptionList\"),popUptestDataState:popUptestDataState,showSample:showSample,showTest:showTest,skip:skip,take:take,testskip:testskip,testtake:testtake,testCommentDataState:testCommentDataState,resultDataState:resultDataState,sourceDataState:sourceDataState,sampleGridDataState:sampleGridDataState});}}},{key:\"onUpdateRegistration\",value:function onUpdateRegistration(saveType,formRef,operation,flag){var _this3=this;var inputData={userinfo:this.props.Login.userInfo};var initialParam={nfilterstatus:this.props.Login.masterData.FilterStatusValue.ntransactionstatus,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,fromdate:\"\",todate:\"\",nflag:2,ntype:1,npreregno:String(this.state.selectedRecord.npreregno)};inputData[\"initialparam\"]=initialParam;// console.log(\"edit1:\", this.props.Login.regRecordToEdit);\ninputData[\"samplebeforeedit\"]=JSON.parse(JSON.stringify(this.props.Login.regRecordToEdit));inputData[\"registration\"]=JSON.parse(JSON.stringify(this.state.selectedRecord));inputData[\"flag\"]=flag===undefined?1:flag;Object.keys(this.state.selectedRecord).map(function(key){if(typeof _this3.state.selectedRecord[key]===\"object\"){if(_this3.state.selectedRecord[key]===null){return inputData[\"registration\"][key]=_this3.state.selectedRecord[key];}else if(_this3.state.selectedRecord[key]instanceof Date){return inputData[\"registration\"][key]=formatInputDate(_this3.state.selectedRecord[key],false);}else{return inputData[\"registration\"][key]=_this3.state.selectedRecord[key].value;}}else{return inputData[\"registration\"][key]=_this3.state.selectedRecord[key];}});// console.log(\"edit:\", inputData);\n// if (inputData[\"registration\"] ) {\n//     delete inputData[\"registration\"][\"esignpassword\"]\n//     delete inputData[\"registration\"][\"esigncomments\"]\n//     delete inputData[\"registration\"][\"agree\"]\n// }\nvar inputParam={classUrl:this.props.Login.inputParam.classUrl,methodUrl:\"Registration\",displayName:this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,action:'editSample',showConfirmAlert:false,resultDataState:this.state.resultDataState,testCommentDataState:this.state.testCommentDataState// dataState:undefined, selectedId\n};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:this.props.Login.masterData},saveType:saveType,parentPopUpSize:\"lg\"}};this.props.updateStore(updateInfo);}else{//this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\nthis.props.updateRegistration(inputParam,this.props.Login.masterData,\"openModal\");}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.showConfirmAlert!==state.showConfirmAlert){return{showConfirmAlert:props.Login.showConfirmAlert};}return null;}}]);return Registration;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,getSampleTypeChange:getSampleTypeChange,getRegTypeChange:getRegTypeChange,getRegSubTypeChange:getRegSubTypeChange,getAttachmentCombo:getAttachmentCombo,viewAttachment:viewAttachment,getCommentsCombo:getCommentsCombo,filterTransactionList:filterTransactionList,validateEsignCredential:validateEsignCredential,getSampleChildTabDetail:getSampleChildTabDetail,getTestChildTabDetail:getTestChildTabDetail,ReloadData:ReloadData,showUnderDevelopment:showUnderDevelopment,getPreviewTemplate:getPreviewTemplate,getChildValues:getChildValues})(injectIntl(Registration));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/Registration.jsx"],"names":["React","Component","connect","showUnderDevelopment","callService","crudMaster","updateStore","getSampleTypeChange","getRegTypeChange","getRegSubTypeChange","getAttachmentCombo","viewAttachment","getCommentsCombo","filterTransactionList","validateEsignCredential","ReloadData","getSampleChildTabDetail","getTestChildTabDetail","getTestByComponentChange","getPreviewTemplate","getChildValues","Button","Card","Col","Nav","Row","toast","SlideOutModal","AddComponentPopUp","formatInputDate","getControlMap","listDataFromDynamicArray","showEsign","sortData","constructOptionList","onDropAttachFileList","deleteAttachmentDropZone","checkCancelAndReject","convertDateTimetoString","RegistrationFilter","Esign","injectIntl","ProductList","DEFAULT_RETURN","SplitterLayout","AddTest","PreRegisterPopUp","RegistrationSubType","RegistrationType","transactionStatus","BreadcrumbComponent","checkDuplicateComponentandManufLot","fnCheckBatchComponentMandatory","fnCheckBatchProtocolComponentMandatory","getRegistration","getRegistrationGeneral","TestListManipulation","getComponentListfromUnwantedAttr","checkTestPresent","getRegistrationRoutine","ScrollBar","ListWrapper","TransactionListMaster","FontAwesomeIcon","faEye","faPencilAlt","faPlus","faSync","ContentPanel","SampleInfoView","CustomTabs","ConfirmMessage","AddSource","AddPrinter","SampleGridTab","AddFile","Attachments","Comments","onSaveTestComments","onSaveSampleAttachment","onSaveTestAttachment","EditPreRegistration","SourceTab","getSameRecordFromTwoArrays","convertDateValuetoString","rearrangeDateFormat","RegistrationResultTab","PreRegisterRoutine","PortalModal","PreRegisterSlideOutModal","Registration","props","onReload","obj","Login","masterData","RealFromDate","RealToDate","userInfo","fromDate","toDate","RealSampleTypeValue","RealRegTypeValue","RealRegSubTypeValue","RealFilterStatusValue","activeSampleTab","activeTestTab","SampleTypeValue","RegTypeValue","RegSubTypeValue","FilterStatusValue","FromDate","ToDate","inputData","npreregno","nsampletypecode","nregtypecode","nregsubtypecode","nfilterstatus","ntransactionstatus","userinfo","flag","inputParam","searchSubSampleRef","searchSampleRef","searchTestRef","selectedFilter","state","warn","intl","formatMessage","id","onFilterSubmit","fromdate","todate","PLASMA_POOL","getRegistrationSample","paneSizeChange","d","setState","splitChangeWidthPercentage","deleteAttachment","event","file","fieldName","selectedFile","actionType","onSaveChildTestClick","saveType","formRef","selectedSubsample","selectedSubSample","RegistrationGetSample","slice","skip","take","selectedSample","ntransactionsamplecode","map","x","join","TestGroupTest","selectedRecord","ntestgrouptestcode","value","item","RegistrationSample","ntype","sample","classUrl","operation","methodUrl","responseKeyList","controlMap","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","createRegistrationTest","getRegistrationComboService","ScreenName","primaryKeyField","editId","withoutCombocomponent","Layout","registrationTemplate","jsondata","undefined","row","children","column","component","hasOwnProperty","componentrow","inputtype","push","comboComponents","childColumnList","columnList","val","comboChild","mapOfFilterRegData","parseInt","info","retunObj","label","childList","child","childData","index","findIndex","length","y","handlePageChange","e","setTimeout","_scrollBarRef","updateScroll","handleTestPageChange","testskip","testtake","openFilter","showFilter","onFilterChange","labelname","onSampleTabChange","tabProps","screenName","ontestTabChange","selectedTest","ntransactiontestcode","String","resultDataState","testCommentDataState","onDropComponentFile","attachedFiles","maxSize","handleFilterDateChange","dateName","dateValue","Date","onUpdateRegistrationConfirm","showAlert","onUpdateRegistration","regEditParam","confirmAlert","showConfirmAlert","regDateEditConfirmMessage","confirmMessage","confirm","booleanFlag","insertRegistration","closeFilter","booleanmanuf","nallottedspeccode","loadFile","ChildscreenName","childoperation","parentPopUpSize","onNumericInputChange","name","selectComponent","onSampleTypeChange","Map","ConfirmComponent","getComponentfromJava","onRegTypeChange","acceptRegistration","registerId","sampleList","searchedSample","acceptList","every","checkPreregisterAndQuarentine","RegistrationGetTest","postParamList","action","acceptRegistrationConfirm","userRoleControlRights","openModal","selectQuarantine","quarantineId","splice","quarentineList","checkPreregisterRecordQuarantine","preregRecordToQuarantine","onRegSubTypeChange","onInputOnChange","target","type","checked","onComboChange","comboData","PrinterChange","selectedPrinterData","onMultiColumnValue","key","keys","forEach","objarray","objkey","getManufacturerChange","onMultiColumnMAHChange","closeChildModal","loadComponent","loadTest","loadSource","showSaveContinue","selectedComponent","loadChildTest","loadPreregister","PopUpLabel","closeModal","openChildModal","pare","loadPrinter","loadPoolSource","openPortal","selectedSpec","insertSourcePreregno","onSaveClick","ROUTINE","insertRoutineRegistration","Components","checkManufLot","checkManufLotPresent","flagDuplicate","onSavePrinterClick","insertlist","displayName","insertPrinterPreregno","sprintername","npreregno1","ncontrolcode","onSaveFileClick","acceptedFiles","sfilename","formData","FormData","append","JSON","stringify","ntemplatemanipulationcode","ImportFile","sampleInfoDataStateChange","sampleGridDataState","dataState","dataStateChange","sourceDataState","testdataStateChange","popUptestDataState","testStateChange","testDataState","sampleTabDetail","tabMap","set","onAttachmentSaveClick","RegistrationAttachment","attachmentskip","attachmenttake","settings","esignRights","masterList","RegistrationSourceCountry","deleteRegistrationSourceCountry","testTabDetail","testTabMap","testList","selectedTestList","test","testDataStateChange","onCommentsSaveClick","RegistrationTestComment","has","get","searchedTest","saveParam","isTestComment","selectedMaster","cancelRecord","controlcode","transValidation","transactionValidation","cancelTestAction","stransdisplaystatus","handleEditDateChange","onNumericInputEditChange","deleteParam","registrationsourcecountry","deleteSourceId","cancelSampleRecords","cancelRejectSamplesList","transactionstatus","cancelSampleAction","ntransstatus","translist","sam","selectdata","check","sam1","includes","validateEsign","sreason","password","validateEsignforRegistration","createRef","PrevoiusLoginData","masterStatus","error","showAccordian","filterCollection","breadCrumb","showTest","showSample","showSubSample","SingleItem","DynamicSampleColumns","group","field","historyDataState","grandparentheight","url","activeTestKey","cancelId","preRegisterId","editSampleId","addSourceId","addTestId","printBarcodeId","cancelSampleId","addSubSampleId","editSubSampleId","testGetParam","sfromdate","stodate","testChildGetParam","breadCrumbobj","breadCrumbData","breadCrumbFrom","breadCrumbto","ssampletypename","sregtypename","sregsubtypename","subSampleGetParam","sampleSearchField","filterSampleParam","inputListName","selectedObject","fetchUrl","childRefs","ref","childFilteredListName","fecthInputObject","nflag","searchFieldList","changeList","filterTestParam","getActiveTestURL","filteredListName","clearFilter","searchRef","updatedListname","unchangeList","editRegParam","addTestParam","selectedsample","selectedsubsample","snspecsampletypecode","Set","nspecsampletypecode","getRegistrationsubSampleDetail","ALL","FilterStatus","title","controlname","objectName","hidden","indexOf","onClick","getEditRegistrationComboService","primaryKeyName","getPrinterComboService","getCountryList","stateSampleType","stateRegistrationType","stateRegistrationSubType","stateFilterStatus","nsubsampleneed","subSampleList","getsubSampleDetail","DynamicSubSampleColumns","display","background","borderBottom","marginTop","float","showTestAndSample","split","setting","testListColumns","testMoreField","addMoreTest","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","timeZoneList","defaultTimeZone","onSaveComponentClick","onSaveTestClick","onSaveSourceClick","onSavePoolSourceClick","selectedTestData","selectedSourceData","mandatoryList","myScrollRef","handleDateChange","lstComponent","StorageCondition","onInputComponentOnChange","onComponentComboChange","onComboComponentChange","plasmaMasterFile","onComponentChange","StorageLocation","sreceiveddate","CurrentTime","TestCombined","TestChange","SourceCombined","SourceChange","sourceCountry","printer","availableTest","ProductCategory","Product","Client","SelectedTest","Supplier","ContainerType","timezone","Disposition","Unit","Period","Priority","Manufacturer","Specification","AgaramTree","OpenNodes","FocusKey","ActiveKey","onTreeClick","onproductCategoryChange","onProductChange","onManufacturerChange","onClientComboChange","onRoutineSpecChange","statustoEditDetail","addComponentTest","deleteTest","Country","ProductMaholder","Goodsin","EProtocol","SelectedSource","onspecChange","AddComponent","addComponentSource","deleteComponent","editComponent","componentDataState","componentDataStateChange","popUpsourceDataStateChange","popUpsourceDataState","deleteSource","currentTime","PREREGISTER","QUARANTINE","confirmMsg","Source","Test","Object","temparray","option","testrequired","objcomponent","nneedservice","getTestfromDB","saveComponent","dreceiveddate","unshift","previousProps","values","DynamicTestColumns","DynamicColumns","sampleTypeMap","SampleType","registrationTypeMap","registrationSubTypeMap","filterStatusMap","initialParam","parse","regRecordToEdit","updateRegistration","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    showUnderDevelopment,\r\n    callService, crudMaster, updateStore, getSampleTypeChange, getRegTypeChange, getRegSubTypeChange, getAttachmentCombo, viewAttachment, getCommentsCombo,\r\n    filterTransactionList, validateEsignCredential, ReloadData, getSampleChildTabDetail, getTestChildTabDetail\r\n    , getTestByComponentChange, getPreviewTemplate, getChildValues\r\n} from '../../actions'\r\nimport { Button, Card, Col, Nav, Row } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport AddComponentPopUp from './AddComponentPopUp'\r\nimport { formatInputDate, getControlMap, listDataFromDynamicArray, showEsign, sortData, constructOptionList, onDropAttachFileList, deleteAttachmentDropZone, checkCancelAndReject, convertDateTimetoString } from '../../components/CommonScript';\r\nimport RegistrationFilter from './RegistrationFilter';\r\nimport Esign from '../audittrail/Esign';\r\nimport { injectIntl } from 'react-intl';\r\nimport { ProductList } from '../product/product.styled';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport AddTest from './AddTest';\r\nimport PreRegisterPopUp from './PreRegisterPopUp';\r\nimport { RegistrationSubType, RegistrationType, transactionStatus } from '../../components/Enumeration';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport {\r\n    checkDuplicateComponentandManufLot, fnCheckBatchComponentMandatory, fnCheckBatchProtocolComponentMandatory,\r\n    getRegistration, getRegistrationGeneral, TestListManipulation, getComponentListfromUnwantedAttr, checkTestPresent, getRegistrationRoutine\r\n} from './RegistrationValidation';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport TransactionListMaster from '../../components/TransactionListMaster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faPencilAlt, faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport AddSource from './AddSource';\r\nimport AddPrinter from './AddPrinter';\r\nimport SampleGridTab from './SampleGridTab';\r\nimport AddFile from './AddFile';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions';\r\nimport { onSaveSampleAttachment, onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport EditPreRegistration from './EditPreRegistration';\r\nimport { ReactComponent as Quarantine } from '../../assets/image/Quarantine.svg'\r\nimport { ReactComponent as Register } from '../../assets/image/register.svg'\r\nimport { ReactComponent as Reject } from '../../assets/image/reject.svg'\r\nimport SourceTab from './SourceTab';\r\nimport { getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript'\r\nimport RegistrationResultTab from './RegistrationResultTab';\r\nimport PreRegisterRoutine from './PreRegisterRoutine';\r\nimport PortalModal from '../../PortalModal';\r\nimport PreRegisterSlideOutModal from './PreRegisterSlideOutModal';\r\n\r\nclass Registration extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.PrevoiusLoginData = undefined;\r\n        this.state = {\r\n            openModal: false,\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            screenName: \"Product\",\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showAccordian: true,\r\n            showSaveContinue: false,\r\n            filterCollection: [],\r\n            selectedFilter: {},\r\n            breadCrumb: [],\r\n            showTest: true,\r\n            showSample: false,\r\n            showSubSample: false,\r\n            SingleItem: [],\r\n            showConfirmAlert: false,\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            DynamicSampleColumns: [],\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'npreregno' }] },\r\n            testCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'groupingField' }] },\r\n            resultDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            historyDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }, { field: 'stestsynonym' }] },\r\n            selectedPrinterData: {},\r\n            grandparentheight: '150vh',\r\n            transactionValidation: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            testskip: 0,\r\n            splitChangeWidthPercentage: 28.6,\r\n            testtake: this.props.Login.settings\r\n                && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            comboComponents: [],\r\n            withoutCombocomponent: []\r\n        };\r\n        // this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.showConfirmAlert !== state.showConfirmAlert) {\r\n            return {\r\n                showConfirmAlert: props.Login.showConfirmAlert\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onReload = () => {\r\n\r\n        // let RealFromDate = new Date(this.props.Login.masterData.RealFromDate)\r\n        // let RealToDate = new Date(this.props.Login.masterData.RealToDate)\r\n        const obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo);\r\n        const RealFromDate = obj.fromDate;\r\n        const RealToDate = obj.toDate;\r\n        let RealSampleTypeValue = this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue\r\n        let RealRegTypeValue = this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue\r\n        let RealRegSubTypeValue = this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue\r\n        let RealFilterStatusValue = this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue\r\n        let activeSampleTab = this.props.Login.activeSampleTab;\r\n        let activeTestTab = this.props.Login.activeTestTab;\r\n\r\n        let SampleTypeValue = RealSampleTypeValue\r\n        let RegTypeValue = RealRegTypeValue\r\n        let RegSubTypeValue = RealRegSubTypeValue\r\n        let FilterStatusValue = RealFilterStatusValue\r\n        // let FromDate = this.props.Login.masterData.FromDate\r\n        // let ToDate = this.props.Login.masterData.ToDate\r\n        const FromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\r\n        const ToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate);\r\n        let masterData = {\r\n            ...this.props.Login.masterData, RealSampleTypeValue, RealRegTypeValue, RealRegSubTypeValue, FromDate, ToDate,\r\n            RealFilterStatusValue, RealFromDate, RealToDate, SampleTypeValue, RegTypeValue, RegSubTypeValue, FilterStatusValue\r\n        }\r\n        let inputData = {\r\n            npreregno: \"\",\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            nfilterstatus: this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus,\r\n            userinfo: this.props.Login.userInfo, activeSampleTab, activeTestTab,\r\n            flag: 1\r\n        }\r\n        if (inputData.nsampletypecode) {\r\n            // let obj = this.covertDatetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate)\r\n            inputData['FromDate'] = obj.fromDate;\r\n            inputData['ToDate'] = obj.toDate;\r\n\r\n            let inputParam = { masterData, inputData, searchSubSampleRef: this.searchSubSampleRef, searchSampleRef: this.searchSampleRef, searchTestRef: this.searchTestRef, selectedFilter: this.state.selectedFilter }\r\n            this.props.ReloadData(inputParam);\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n\r\n        // let RealFromDate = new Date(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate)\r\n        // let RealToDate = new Date(this.state.selectedFilter.todate || this.props.Login.masterData.ToDate)\r\n        const RealFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate);\r\n        const RealToDate = rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter.todate || this.props.Login.masterData.ToDate)\r\n        let RealSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let RealRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let RealRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let RealFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n\r\n        let activeSampleTab = this.props.Login.activeSampleTab;\r\n        if (this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode !== RegistrationType.PLASMA_POOL) {\r\n            activeSampleTab = \"IDS_SAMPLEATTACHMENTS\";\r\n        }\r\n\r\n        let activeTestTab = this.props.Login.activeTestTab;\r\n        let masterData = {\r\n            ...this.props.Login.masterData, RealSampleTypeValue, RealRegTypeValue, RealRegSubTypeValue,\r\n            RealFilterStatusValue, RealFromDate, RealToDate\r\n        }\r\n        let inputData = {\r\n            npreregno: \"\",\r\n            nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            userinfo: this.props.Login.userInfo, activeSampleTab, activeTestTab\r\n        }\r\n\r\n        if (inputData.nsampletypecode) {\r\n            // let obj = this.covertDatetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate,\r\n            //     this.state.selectedFilter.todate || this.props.Login.masterData.ToDate)\r\n            const obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate,\r\n                this.state.selectedFilter.todate || this.props.Login.masterData.ToDate, this.props.Login.userInfo)\r\n            inputData['FromDate'] = obj.fromDate;\r\n            inputData['ToDate'] = obj.toDate;\r\n            const selectedFilter = {};\r\n            selectedFilter[\"fromdate\"] = RealFromDate;\r\n            selectedFilter[\"todate\"] = RealToDate;\r\n            const inputParam = {\r\n                masterData, inputData, searchSubSampleRef: this.searchSubSampleRef,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchTestRef: this.searchTestRef, selectedFilter\r\n            }\r\n            this.props.getRegistrationSample(inputParam);\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    getActiveTestURL() {\r\n\r\n        let url = \"resultentrybysample/getTestbasedParameter\"\r\n        switch (this.props.Login.activeTestKey) {\r\n\r\n            case \"IDS_PARAMETERRESULTS\":\r\n                //url = \"resultentrybysample/getTestbasedParameter\";\r\n                url = \"registration/getregistrationparameter\";\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\";\r\n                break;\r\n            default:\r\n                url = \"registration/getregistrationparameter\";\r\n                // url = \"resultentrybysample/getTestbasedParameter\";\r\n                break;\r\n        }\r\n        return url;\r\n    }\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const cancelId = this.state.controlMap.has(\"CancelTest\") && this.state.controlMap.get(\"CancelTest\").ncontrolcode;\r\n        const preRegisterId = this.state.controlMap.has(\"AddPreregister\") ? this.state.controlMap.get(\"AddPreregister\").ncontrolcode : -1;\r\n        const registerId = this.state.controlMap.has(\"RegisterAccept\") ? this.state.controlMap.get(\"RegisterAccept\").ncontrolcode : -1;\r\n        const editSampleId = this.state.controlMap.has(\"EditSample\") ? this.state.controlMap.get(\"EditSample\").ncontrolcode : -1;\r\n        const quarantineId = this.state.controlMap.has(\"RegisterQuarantine\") ? this.state.controlMap.get(\"RegisterQuarantine\").ncontrolcode : -1;\r\n        const addSourceId = this.state.controlMap.has(\"AddRegistrationSourceCountry\") ? this.state.controlMap.get(\"AddRegistrationSourceCountry\").ncontrolcode : -1;\r\n        const addTestId = this.state.controlMap.has(\"AddNewTest\") ? this.state.controlMap.get(\"AddNewTest\").ncontrolcode : -1;\r\n        //const deleteSourceId = this.state.controlMap.has(\"DeleteRegistrationSourceCountry\") ? this.state.controlMap.get(\"DeleteRegistrationSourceCountry\").ncontrolcode:-1;\r\n        const printBarcodeId = this.state.controlMap.has(\"PrintBarcode\") ? this.state.controlMap.get(\"PrintBarcode\").ncontrolcode : -1;\r\n        //const cancelTestId = this.state.controlMap.has(\"CancelTest\") ? this.state.controlMap.get(\"CancelTest\").ncontrolcode:-1;\r\n        const cancelSampleId = this.state.controlMap.has(\"CancelReject\") ? this.state.controlMap.get(\"CancelReject\").ncontrolcode : -1;\r\n        const addSubSampleId = this.state.controlMap.has(\"AddSubSample\") ? this.state.controlMap.get(\"AddSubSample\").ncontrolcode : -1;\r\n        const editSubSampleId = this.state.controlMap.has(\"EditSubSample\") ? this.state.controlMap.get(\"EditSubSample\").ncontrolcode : -1;\r\n        this.fromDate = this.state.selectedFilter[\"fromdate\"] !== \"\" && this.state.selectedFilter[\"fromdate\"] !== undefined ? this.state.selectedFilter[\"fromdate\"] : this.props.Login.masterData.FromDate;\r\n        this.toDate = this.state.selectedFilter[\"todate\"] !== \"\" && this.state.selectedFilter[\"todate\"] !== undefined ? this.state.selectedFilter[\"todate\"] : this.props.Login.masterData.ToDate;\r\n        // this.fromDate = this.state.selectedFilter[\"fromdate\"] !== \"\" && this.state.selectedFilter[\"fromdate\"] !== undefined ? this.state.selectedFilter[\"fromdate\"] : new Date(this.props.Login.masterData.FromDate);\r\n        // this.toDate = this.state.selectedFilter[\"todate\"] !== \"\" && this.state.selectedFilter[\"todate\"] !== undefined ? this.state.selectedFilter[\"todate\"] : new Date(this.props.Login.masterData.ToDate);\r\n        let sampleList = this.props.Login.masterData.RegistrationGetSample ? sortData(this.props.Login.masterData.RegistrationGetSample) : [];\r\n        // let subSampleList = this.props.Login.masterData.RegistrationGetSubSample ? sortData(this.props.Login.masterData.RegistrationGetSubSample) : [];\r\n        let testList = this.props.Login.masterData.RegistrationGetTest ? this.props.Login.masterData.RegistrationGetTest : []; //\r\n\r\n        let testGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n            // userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            npreregno: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            sfromdate: this.props.Login.masterData.RealFromDate,\r\n            stodate: this.props.Login.masterData.RealToDate,\r\n            searchTestRef: this.searchTestRef\r\n        }\r\n        let testChildGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n            // userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            npreregno: this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.selectedSubSample && this.props.Login.masterData.selectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            sfromdate: this.props.Login.masterData.RealFromDate,\r\n            stodate: this.props.Login.masterData.RealToDate,\r\n            resultDataState: this.state.resultDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n        }\r\n\r\n        this.confirmMessage = new ConfirmMessage();\r\n        // let obj = this.covertDatetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate)\r\n        let breadCrumbobj = convertDateValuetoString(this.props.Login.masterData.RealFromDate, this.props.Login.masterData.RealToDate, this.props.Login.userInfo)\r\n        this.breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": breadCrumbobj.breadCrumbFrom //|| this.props.Login.masterData.RealFromDate\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": breadCrumbobj.breadCrumbto //|| this.props.Login.masterData.RealToDate\r\n            }, {\r\n                \"label\": \"IDS_SAMPLETYPE\",\r\n                \"value\": this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.ssampletypename\r\n            }, {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.sregtypename\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n            }, {\r\n                \"label\": \"IDS_FILTERSTATUS\",\r\n                \"value\": this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.stransdisplaystatus\r\n            }\r\n        ]\r\n        let subSampleGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            testskip: this.state.testskip,\r\n            searchTestRef: this.searchTestRef,\r\n            resultDataState: this.state.resultDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            sourceDataState: this.state.sourceDataState,\r\n            sampleGridDataState: this.state.sampleGridDataState\r\n        }\r\n        let sampleSearchField = [\"sarno\", \"sproductname\", \"sproductcatname\", \"seprotocolname\", \"stransdisplaystatus\"\r\n            , \"sstorageconditionname\", \"sdecisionstatus\", \"scomponentname\", \"splasmafilenumber\", \"sversion\", \"sbulkvolume\", \"sregsubtypename\", \"smanuflotno\"\r\n            , \"sregtypename\", \"sspecname\", \"saddress1\", \"sclientname\", \"smanufsitename\", \"sproductcertificatename\", \"smanufname\", \"sstoragelocationname\"];\r\n        if (this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\r\n\r\n            sampleSearchField = [\"sarno\", \"sproductname\", \"sproductcatname\", \"sregsubtypename\", \"sregtypename\", \"sspecname\", \"smanufname\", \"sstorageconditionname\",\r\n                \"sclientname\", \"scontainertype\", \"sdeadline\", \"sdecisionstatus\", \"sdeviationcomments\", \"sdispositionname\", \"slotno\", \"sbatchno\", \"sourfile\", \"speriodname\",\r\n                \"spriorityname\", \"sreceiveddate\", \"sremarks\", \"sreportremarks\", \"ssamplecondition\", \"ssuppliername\", \"stotalqty\", \"stransdisplaystatus\"\r\n            ]\r\n        }\r\n        const filterSampleParam = {\r\n            inputListName: \"RegistrationGetSample\",\r\n            selectedObject: \"selectedSample\",\r\n            primaryKeyField: \"npreregno\",\r\n            fetchUrl: \"registration/getRegistrationSubSample\",\r\n            childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\r\n            fecthInputObject: {\r\n                nflag: 2,\r\n                ntype: 2,\r\n                masterData: this.props.Login.masterData,\r\n                ntransactionstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: sampleSearchField,\r\n            changeList: [\r\n                \"RegistrationGetSubSample\", \"RegistrationGetTest\", \"RegistrationTestAttachment\",\r\n                \"RegistrationTestComment\", \"RegistrationAttachment\", \"selectedSample\", \"selectedSubSample\",\r\n                \"selectedTest\", \"RegistrationParameter\"\r\n            ]\r\n        };\r\n\r\n        let filterTestParam = {\r\n            inputListName: \"RegistrationGetTest\",\r\n            selectedObject: \"selectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            fetchUrl: this.getActiveTestURL(),\r\n            fecthInputObject: {\r\n                ntransactiontestcode: this.props.Login.masterData && this.props.Login.masterData.selectedTest && this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"sarno\", \"stestsynonym\", \"ssectionname\", \"ssamplearno\",\r\n                \"sinstrumentcatname\", \"stransdisplaystatus\", \"smethodname\", \"ssourcename\", \"scomponentname\", \"stestname\"],\r\n            changeList: [\"RegistrationTestComment\", \"RegistrationParameter\"]\r\n\r\n        }\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"npreregno\",\r\n                fetchUrl: \"registration/getRegistrationSubSample\",\r\n                fecthInputObject: subSampleGetParam,\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedSubSample\" }],\r\n                selectedObject: \"selectedSample\",\r\n                inputListName: \"AP_SAMPLE\",\r\n                updatedListname: \"selectedSample\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            }\r\n            , {\r\n                filteredListName: \"searchedTest\",\r\n                updatedListname: \"selectedTest\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: \"approval/getApprovalTest\",\r\n                fecthInputObject: testGetParam,\r\n                selectedObject: \"selectedTest\",\r\n                inputListName: \"RegistrationGetTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            }\r\n        ];\r\n\r\n\r\n        let editRegParam = {\r\n            nfilterstatus: String(this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue && this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            sfromdate: this.props.Login.masterData.RealFromDate,\r\n            stodate: this.props.Login.masterData.RealToDate,\r\n            ncontrolCode: editSampleId\r\n        }\r\n        const addTestParam = {\r\n            selectedsample: this.props.Login.masterData.selectedSample,\r\n            selectedsubsample: this.props.Login.masterData.selectedSubSample,\r\n            skip: this.state.skip, take: (this.state.skip + this.state.take),\r\n            userinfo: this.props.Login.userInfo,\r\n            sampleList: this.props.Login.masterData.RegistrationGetSample,\r\n            snspecsampletypecode: this.props.Login.masterData.selectedSubSample &&\r\n                [...new Set(this.props.Login.masterData.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\")\r\n        };\r\n        // const methodUrl = \"Test\";\r\n        // const mandatoryFields = [{ \"mandatory\": true, \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\" }]\r\n\r\n        // this.breadCrumb = [...this.state.selectedFilter];\r\n        //, Object.keys(this.state.selectedFilter).length > 0 && { ...this.state.selectedFilter }\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} />\r\n                    <Row noGutters={true}>\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                            <ListWrapper >\r\n                                {/* className={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 60 ? 'split-mode' : ''} */}\r\n                                <SplitterLayout borderColor=\"#999\"\r\n                                    primaryIndex={1} percentage={true}\r\n                                    secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                    onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                                    primaryMinSize={40}\r\n                                    secondaryMinSize={20}\r\n                                >\r\n                                    <TransactionListMaster\r\n                                        // paneHeight={this.state.firstPane}\r\n                                        splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                        masterList={this.props.Login.masterData.searchedSample || sampleList}\r\n                                        selectedMaster={this.props.Login.masterData.selectedSample}\r\n                                        primaryKeyField=\"npreregno\"\r\n                                        filterColumnData={this.props.filterTransactionList}\r\n                                        getMasterDetail={this.props.getRegistrationsubSampleDetail}\r\n                                        inputParam={subSampleGetParam}\r\n                                        selectionList={this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                        selectionColorField=\"scolorhexcode\"\r\n                                        mainField={\"sarno\"}\r\n                                        //showStatusLink={true}\r\n                                        // showStatusName={true}\r\n                                        statusFieldName=\"stransdisplaystatus\"\r\n                                        statusField=\"ntransactionstatus\"\r\n                                        selectedListName=\"selectedSample\"\r\n                                        searchListName=\"searchedSample\"\r\n                                        searchRef={this.searchSampleRef}\r\n                                        objectName=\"sample\"\r\n                                        listName=\"IDS_SAMPLE\"\r\n                                        selectionField=\"ntransactionstatus\"\r\n                                        selectionFieldName=\"stransdisplaystatus\"\r\n                                        showFilter={this.props.Login.showFilter}\r\n                                        openFilter={this.openFilter}\r\n                                        closeFilter={this.closeFilter}\r\n                                        onFilterSubmit={this.onFilterSubmit}\r\n                                        subFields={this.state.DynamicSampleColumns}\r\n                                        needMultiSelect={true}\r\n                                        filterParam={filterSampleParam}\r\n                                        subFieldsLabel={false}\r\n                                        handlePageChange={this.handlePageChange}\r\n                                        skip={this.state.skip}\r\n                                        take={this.state.take}\r\n                                        splitModeClass={this.state.splitChangeWidthPercentage\r\n                                            && this.state.splitChangeWidthPercentage > 50 ? 'split-mode'\r\n                                            : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                        childTabsKey={[\"RegistrationAttachment\", \"RegistrationGetSubSample\",\r\n                                            \"RegistrationGetTest\", \"RegistrationSourceCountry\"]} //, \"RegistrationParameter\"\"RegistrationTestComment\"\r\n                                        actionIcons={\r\n                                            [\r\n                                                {\r\n                                                    title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                                    controlname: \"faPencilAlt\",\r\n                                                    objectName: \"mastertoedit\",\r\n                                                    hidden: this.state.userRoleControlRights.indexOf(editSampleId) === -1,\r\n                                                    onClick: this.props.getEditRegistrationComboService,\r\n                                                    inputData: {\r\n                                                        primaryKeyName: \"npreregno\",\r\n                                                        operation: \"update\",\r\n                                                        masterData: this.props.Login.masterData,\r\n                                                        userInfo: this.props.Login.userInfo,\r\n                                                        editRegParam\r\n                                                    },\r\n                                                },\r\n                                                {\r\n                                                    title: this.props.intl.formatMessage({ id: \"IDS_PRINTBARCODE\" }),\r\n                                                    controlname: \"faPrint\",\r\n                                                    objectName: \"sample\",\r\n                                                    hidden: this.state.userRoleControlRights.indexOf(printBarcodeId) === -1,\r\n                                                    onClick: this.props.getPrinterComboService,\r\n                                                    inputData: {\r\n                                                        primaryKeyName: \"npreregno\",\r\n                                                        operation: \"print\",\r\n                                                        ncontrolcode: printBarcodeId,\r\n                                                        masterData: this.props.Login.masterData,\r\n                                                        userInfo: this.props.Login.userInfo,\r\n                                                        editRegParam\r\n                                                    },\r\n                                                },\r\n\r\n                                                // {\r\n                                                //     title: \"reject\",\r\n                                                //     controlname: \"reject\",\r\n                                                //     objectName: \"cancelSample\",\r\n                                                //     hidden: false,\r\n                                                //     onClick:(cancelSample) => this.cancelSampleRecords(cancelSample,\"IDS_CANCEL\",cancelSampleId),\r\n                                                //     inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                                // }\r\n\r\n                                                this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ?\r\n                                                    {\r\n                                                        title: this.props.intl.formatMessage({ id: \"IDS_ADDSOURCE\" }),\r\n                                                        controlname: \"AddSource\",\r\n                                                        objectName: \"sample\",\r\n\r\n                                                        hidden: this.state.userRoleControlRights.indexOf(addSourceId) === -1,\r\n                                                        onClick: this.props.getCountryList,\r\n                                                        inputData: {\r\n                                                            primaryKeyName: \"npreregno\",\r\n                                                            operation: \"update\",\r\n                                                            ncontrolcode: addSourceId,\r\n                                                            masterData: this.props.Login.masterData,\r\n                                                            userInfo: this.props.Login.userInfo,\r\n                                                            editRegParam\r\n                                                        },\r\n                                                    } : {}\r\n\r\n                                            ]\r\n                                        }\r\n                                        needFilter={true}\r\n                                        commonActions={\r\n\r\n                                            <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                <Button className=\"btn btn-icon-rounded btn-circle solid-blue ml-2\" role=\"button\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_REGISTER\" })}\r\n                                                    data-for=\"tooltip-common-wrap\"\r\n                                                    hidden={this.state.userRoleControlRights.indexOf(preRegisterId) === -1}\r\n                                                    onClick={() => this.getRegistrationComboService(\"Registration\", \"create\", \"npreregno\",\r\n                                                        this.props.Login.masterData, this.props.Login.userInfo, preRegisterId)}>\r\n                                                    <FontAwesomeIcon icon={faPlus} />\r\n                                                </Button>\r\n                                                <Nav.Link\r\n                                                    className=\"btn btn-circle outline-grey ml-2\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_ACCEPT\" })}\r\n                                                    data-for=\"tooltip-common-wrap\"\r\n                                                    hidden={this.state.userRoleControlRights.indexOf(registerId) === -1}\r\n                                                    onClick={() => this.acceptRegistration(registerId, this.state.skip, this.state.take)} >\r\n                                                    <Register className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                </Nav.Link>\r\n                                                <Nav.Link\r\n                                                    className=\"btn btn-circle outline-grey ml-2\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_QUARANTINE\" })}\r\n                                                    data-for=\"tooltip-common-wrap\"\r\n                                                    hidden={this.state.userRoleControlRights.indexOf(quarantineId) === -1}\r\n                                                    onClick={() => this.selectQuarantine(quarantineId, this.state.skip, this.state.take)} >\r\n                                                    <Quarantine className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                </Nav.Link>\r\n                                                <Nav.Link\r\n                                                    className=\"btn btn-circle outline-grey ml-2\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCELREJECTSAMPLE\" })}\r\n                                                    data-for=\"tooltip-common-wrap\"\r\n                                                    hidden={this.state.userRoleControlRights.indexOf(cancelSampleId) === -1}\r\n                                                    onClick={() => this.cancelSampleRecords(cancelSampleId, this.state.skip, this.state.take)}>\r\n                                                    <Reject className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                </Nav.Link>\r\n                                                <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                    data-for=\"tooltip-common-wrap\"\r\n                                                    onClick={() => this.onReload()} >\r\n\r\n                                                    <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                </Button>\r\n                                            </ProductList>\r\n                                        }\r\n                                        filterComponent={[\r\n                                            {\r\n                                                \"Sample Filter\": <RegistrationFilter\r\n                                                    SampleType={this.state.stateSampleType || []}\r\n                                                    RegistrationType={this.state.stateRegistrationType || []}\r\n                                                    RegistrationSubType={this.state.stateRegistrationSubType || []}\r\n                                                    userInfo={this.props.Login.userInfo || {}}\r\n                                                    SampleTypeValue={this.props.Login.masterData.SampleTypeValue || {}}\r\n                                                    RegTypeValue={this.props.Login.masterData.RegTypeValue || {}}\r\n                                                    RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || {}}\r\n                                                    FilterStatusValue={this.props.Login.masterData.FilterStatusValue || {}}\r\n                                                    FilterStatus={this.state.stateFilterStatus || []}\r\n                                                    FromDate={this.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.fromDate) : new Date()}\r\n                                                    ToDate={this.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.toDate) : new Date()}\r\n                                                    onSampleTypeChange={this.onSampleTypeChange}\r\n                                                    onRegTypeChange={this.onRegTypeChange}\r\n                                                    onRegSubTypeChange={this.onRegSubTypeChange}\r\n                                                    handleFilterDateChange={this.handleFilterDateChange}\r\n                                                    onFilterChange={this.onFilterChange}\r\n                                                />\r\n                                            }\r\n                                        ]}\r\n\r\n                                    />\r\n\r\n                                    {this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === 3 &&\r\n                                        // <ScrollBar>\r\n                                        <TransactionListMaster\r\n                                            masterList={this.subSampleList}\r\n                                            selectedMaster={this.props.Login.masterData.selectedSubSample}\r\n                                            primaryKeyField=\"npreregno\"\r\n                                            getMasterDetail={this.props.getsubSampleDetail}\r\n                                            inputParam={testGetParam}\r\n                                            additionalParam={['napprovalversioncode']}\r\n                                            showStatusLink={true}\r\n                                            statusFieldName=\"stransdisplaystatus\"\r\n                                            statusField=\"ntransactionstatus\"\r\n                                            mainField=\"ssamplearno\"\r\n                                            selectedListName=\"SelectedSample\"\r\n                                            objectName=\"sample\"\r\n                                            listName=\"IDS_SAMPLE\"\r\n                                            needValidation={true}\r\n                                            validationKey=\"napprovalversioncode\"\r\n                                            validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                                            showFilter={this.props.Login.showFilter}\r\n                                            openFilter={this.openFilter}\r\n                                            closeFilter={this.closeFilter}\r\n                                            onFilterSubmit={this.onFilterSubmit}\r\n                                            subFields={this.state.DynamicSubSampleColumns}\r\n                                            searchRef={this.searchSubSampleRef}\r\n                                            actionIcons={\r\n\r\n                                                <Nav.Link className=\"btn btn-circle outline-grey ml-2\" hidden={this.state.userRoleControlRights.indexOf(editSubSampleId) === -1} title=\"Print Barcode\" >\r\n                                                    <FontAwesomeIcon icon={faPencilAlt} title=\"Edit\" />\r\n                                                </Nav.Link>\r\n\r\n\r\n                                            }\r\n                                            needFilter={false}\r\n                                            commonActions={\r\n                                                <ProductList className=\"d-flex product-category float-right\">\r\n                                                    <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                                        // hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(addSubSampleId) === -1}\r\n                                                        onClick={() => this.props.getRegistrationComboService(\"Registration\", \"create\", \"npreregno\",\r\n                                                            this.props.Login.masterData, this.props.Login.userInfo, addSubSampleId)}>\r\n                                                        <FontAwesomeIcon icon={faPlus} title={this.props.intl.formatMessage({ id: \"IDS_PREREGISTER\" })} />\r\n                                                    </Button>\r\n\r\n                                                </ProductList>\r\n\r\n                                            }\r\n                                        />\r\n                                        // </ScrollBar>\r\n                                    }\r\n\r\n                                    {/* <ScrollBar> */}\r\n                                    <ScrollBar ref={(ref) => { this._scrollBarRef = ref; }}>\r\n\r\n                                        <div className=\"fixed_list_height\">\r\n                                            <>\r\n                                                <div className=\"card_group\">\r\n                                                    {/* <ContentPanel className={` ${this.state.showSample === true ? 'show' : 'hide'} `}>\r\n                                                <Card >\r\n                                                    <Card.Header style={{ padding: \"0.85rem 1rem\" }}>\r\n                                                        <span style={{ display: \"inline-block\" }} >\r\n                                                            <h4 >{this.props.intl.formatMessage({ id: \"IDS_SAMPLEINFO\" })}</h4>\r\n                                                        </span>\r\n                                                        {this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === 3 &&\r\n                                                            <button className=\"btn btn-primary\" style={{ float: \"right\" }}\r\n                                                                onClick={() => this.showSampleInfo()}>\r\n                                                                <FontAwesomeIcon icon={faEye}></FontAwesomeIcon> { }\r\n                                                                {this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}\r\n                                                            </button>\r\n                                                        }\r\n\r\n                                                        <ContentPanel className=\"d-flex justify-content-end dropdown badget_menu icon-group-wrap\">\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                title=\"Register\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(registerId) === -1}\r\n                                                                onClick={() => this.acceptRegistration(registerId)} >\r\n                                                                <Register className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                title={\"Quarantine\"}\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(quarantineId) === -1}\r\n                                                                onClick={() => this.selectQuarantine(quarantineId)} >\r\n                                                                <Quarantine className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                title={\"Cancel/Reject Sample\"}\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(cancelSampleId) === -1}\r\n                                                                onClick={() => this.cancelSampleRecords(cancelSampleId)}>\r\n                                                                <Reject className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                            </Nav.Link>\r\n                                                             <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                        href=\"#\">\r\n                                                                        <FontAwesomeIcon icon={faPencilAlt} className=\"ActionIconColor\" title={this.props.intl.formatMessage({ id: \"Edit\" })} />\r\n                                                                    </Nav.Link> \r\n                                                        </ContentPanel>\r\n                                                    </Card.Header>\r\n                                                    <Card.Body className=\"p-0\">\r\n                                                        {this.state.showSample ?\r\n                                                                    <CustomTabs activeKey={this.props.Login.activeSampleTab ? this.props.Login.activeSampleTab === 'IDS_SAMPLEATTACHMENTS' ? 'IDS_ATTACHMENTS' : this.props.Login.activeSampleTab : 'IDS_SAMPLEINFO'} tabDetail={this.sampleTabDetail()} onTabChange={this.onSampleTabChange} paneHeight={this.state.paneHeight} />\r\n                                                                \r\n                                                             : \"\"}\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                            </ContentPanel>*/}\r\n                                                    {/* className=\"ad-card-wrap\" */}\r\n                                                    <ContentPanel style={this.state.showTest === true ? { display: \"block\", background: \"#FFFF\" } : { display: \"none\", background: \"#FFFF\" }} >\r\n                                                        {/* <Row className='no-gutters'>\r\n                                                            <Col md={12}> */}\r\n                                                        {/* className=\"mt-3\" */}\r\n                                                        <Card className=\"border-0\">\r\n                                                            <Card.Body className='p-0'>\r\n                                                                <Row className='no-gutters'>\r\n                                                                    <Col md={12}>\r\n                                                                        <Card>\r\n                                                                            <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                                {/* <div className=\"d-flex justify-content-between align-items-center\"> */}\r\n                                                                                <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                                                                                    <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                                                                                </span>\r\n                                                                                <button className=\"btn btn-primary\" style={{ float: \"right\" }}\r\n                                                                                    //onClick={() => this.showSampleInfo()}\r\n                                                                                    onClick={() => this.showTestAndSample()}\r\n                                                                                >\r\n                                                                                    <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                                                                    {this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n                                                                                </button>\r\n                                                                                {/* </div> */}\r\n                                                                            </Card.Header>\r\n                                                                            <Card.Body className='p-0'>\r\n                                                                                {/* <ScrollBar> */}\r\n                                                                                <TransactionListMaster\r\n                                                                                    paneHeight={`${testList && testList !== null && testList.length > 0 ? testList.length * 13 : 5}vh`}\r\n                                                                                    masterList={this.props.Login.masterData.searchedTest || testList}\r\n                                                                                    selectedMaster={this.props.Login.masterData.selectedTest}\r\n                                                                                    primaryKeyField=\"ntransactiontestcode\"\r\n                                                                                    getMasterDetail={this.props.getTestChildTabDetail}\r\n                                                                                    inputParam={testChildGetParam}\r\n                                                                                    additionalParam={[]}\r\n                                                                                    mainField=\"stestname\"\r\n                                                                                    selectedListName=\"selectedTest\"\r\n                                                                                    objectName=\"test\"\r\n                                                                                    listName=\"IDS_TEST\"\r\n                                                                                    pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                                                                                    showStatusLink={true}\r\n                                                                                    subFieldsLabel={true}\r\n                                                                                    statusFieldName=\"stransdisplaystatus\"\r\n                                                                                    statusField=\"ntransactionstatus\"\r\n                                                                                    needMultiSelect={true}\r\n                                                                                    subFields={this.state.testListColumns || []}\r\n                                                                                    moreField={this.state.testMoreField}\r\n                                                                                    needValidation={false}\r\n                                                                                    showStatusName={true}\r\n                                                                                    needFilter={false}\r\n                                                                                    filterColumnData={this.props.filterTransactionList}\r\n                                                                                    searchListName=\"searchedTest\"\r\n                                                                                    searchRef={this.searchTestRef}\r\n                                                                                    filterParam={filterTestParam}\r\n                                                                                    selectionField=\"ntransactionstatus\"\r\n                                                                                    selectionFieldName=\"stransdisplaystatus\"\r\n                                                                                    // childTabsKey={[\"RegistrationTestComment\"]}\r\n                                                                                    childTabsKey={[\"RegistrationParameter\", \"RegistrationTestComment\"]}\r\n                                                                                    handlePageChange={this.handleTestPageChange}\r\n                                                                                    buttonCount={5}\r\n                                                                                    skip={this.state.testskip}\r\n                                                                                    take={this.state.testtake}\r\n                                                                                    showMoreResetList={true}\r\n                                                                                    showMoreResetListName=\"RegistrationGetSample\"\r\n                                                                                    selectionList={this.props.Login.masterData.RealFilterStatusValue && this.props.Login.masterData.RealFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                                                                    selectionColorField=\"scolorhexcode\"\r\n                                                                                    // selectionList=\r\n                                                                                    // actionIcons={\r\n                                                                                    //     [{ title: \"EditTest\", controlname: \"faPencilAlt\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\r\n                                                                                    //     { title: \"Add Intrument\", controlname: \"faMicroscope\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedInstrumentId) === -1, onClick: this.addREInstrument, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedInstrumentId } },\r\n                                                                                    //     { title: \"Add Material\", controlname: \"faFlask\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedMaterailId) === -1 },\r\n                                                                                    //     { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }]\r\n                                                                                    // }\r\n                                                                                    commonActions={\r\n                                                                                        <>\r\n                                                                                            {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                                            <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                                                                                {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                                                                <Nav.Link name=\"adddeputy\" className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                                                    //title={\"Add Test\"}\r\n                                                                                                    data-for=\"tooltip-common-wrap\"\r\n                                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDTEST\" })}\r\n                                                                                                    hidden={this.state.userRoleControlRights.indexOf(addTestId) === -1}\r\n                                                                                                    onClick={() => this.props.addMoreTest(addTestParam, addTestId)}\r\n                                                                                                >\r\n                                                                                                    <FontAwesomeIcon icon={faPlus} />\r\n                                                                                                </Nav.Link>\r\n\r\n                                                                                                <Nav.Link\r\n                                                                                                    className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                                                    //title={\"Cancel/Reject Test\"}\r\n                                                                                                    data-for=\"tooltip-common-wrap\"\r\n                                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCELREJECTTEST\" })}\r\n                                                                                                    hidden={this.state.userRoleControlRights.indexOf(cancelId) === -1}\r\n                                                                                                    onClick={() => this.cancelRecord(cancelId, this.state.testskip, this.state.testtake)}>\r\n                                                                                                    <Reject className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                                                </Nav.Link>\r\n                                                                                            </ProductList>\r\n                                                                                            {/* </Tooltip> */}\r\n                                                                                        </>\r\n                                                                                    }\r\n                                                                                />\r\n                                                                                {/* </ScrollBar> */}\r\n                                                                            </Card.Body>\r\n                                                                        </Card>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </Card.Body>\r\n                                                        </Card>\r\n                                                        {/* </Col>\r\n                                                        </Row> */}\r\n                                                    </ContentPanel>\r\n\r\n\r\n                                                    <ContentPanel style={this.state.showSample === true ? { display: \"block\" } : { display: \"none\" }}>\r\n                                                        <Card className=\"border-0\">\r\n                                                            <Card.Body className='p-0'>\r\n                                                                {/* <Row className='no-gutters'>\r\n                                                                    <Col md={12}> */}\r\n                                                                <Card className='p-0'>\r\n                                                                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                                                            <h4 >{this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}</h4>\r\n                                                                        </span>\r\n                                                                        <button className=\"btn btn-primary\" style={{ float: \"right\" }}\r\n                                                                            //onClick={() => this.showTestDetails()}\r\n                                                                            onClick={() => this.showTestAndSample()}\r\n                                                                        >\r\n                                                                            <FontAwesomeIcon icon={faEye}></FontAwesomeIcon> { }\r\n                                                                            {this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                                                        </button>\r\n                                                                    </Card.Header>\r\n                                                                    <Card.Body>\r\n                                                                        {this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length === 1 ?\r\n                                                                            <SampleInfoView\r\n                                                                                data={(this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample.length > 0) ?\r\n                                                                                    this.props.Login.masterData.selectedSample[this.props.Login.masterData.selectedSample.length - 1] : {}}\r\n                                                                                SingleItem={this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample ?\r\n                                                                                    this.state.SingleItem : []}\r\n                                                                                screenName=\"IDS_SAMPLEINFO\"\r\n\r\n                                                                            />\r\n                                                                            :\r\n                                                                            <SampleGridTab\r\n                                                                                userInfo={this.props.Login.masterData.userInfo || {}}\r\n                                                                                GridData={this.props.Login.masterData.selectedSample || []}\r\n                                                                                masterData={this.props.Login.masterData}\r\n                                                                                inputParam={this.props.Login.inputParam}\r\n                                                                                dataState={this.state.sampleGridDataState}\r\n                                                                                dataStateChange={this.sampleInfoDataStateChange}\r\n                                                                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                                                                primaryKeyField={\"npreregno\"}\r\n                                                                                expandField=\"expanded\"\r\n                                                                                screenName=\"IDS_SAMPLEINFO\"\r\n                                                                            />\r\n                                                                        }\r\n                                                                        {/* <CustomTabs tabDetail={this.sampleTabDetail()} onTabChange={this.onTabChange} /> */}\r\n                                                                    </Card.Body>\r\n                                                                </Card>\r\n                                                                {/* </Col>\r\n                                                                </Row> */}\r\n                                                            </Card.Body>\r\n                                                        </Card>\r\n                                                    </ContentPanel>\r\n                                                    {/* </div> */}\r\n                                                    {/* </div> */}\r\n                                                    {/* </ScrollBar> */}\r\n                                                    {/* </SplitterLayout> */}\r\n                                                    {this.state.showSample ?\r\n\r\n                                                        <CustomTabs activeKey={this.props.Login.activeSampleTab ? this.props.Login.activeSampleTab === 'IDS_SAMPLEATTACHMENTS' ? 'IDS_ATTACHMENTS' : this.props.Login.activeSampleTab : 'IDS_ATTACHMENTS'} tabDetail={this.sampleTabDetail()} onTabChange={this.onSampleTabChange} /> :\r\n                                                        // <CustomTabs activeKey={this.props.Login.activeSampleTab ? \r\n                                                        //                 this.props.Login.activeSampleTab === 'IDS_SAMPLEATTACHMENTS' ? \r\n                                                        //                     'IDS_ATTACHMENTS' : this.props.Login.activeSampleTab \r\n                                                        //                 : 'IDS_ATTACHMENTS\"'} \r\n                                                        //             tabDetail={this.sampleTabDetail()} \r\n                                                        //             onTabChange={this.onSampleTabChange} /> :\r\n\r\n                                                        this.state.showTest ?\r\n                                                            <CustomTabs activeKey={this.props.Login.activeTestTab ? this.props.Login.activeTestTab === 'IDS_TESTCOMMENTS' ? 'IDS_TESTCOMMENTS' : this.props.Login.activeTestTab : 'IDS_PARAMETERRESULTS'} tabDetail={this.testTabDetail()} onTabChange={this.ontestTabChange} />\r\n                                                            : \"\"}\r\n                                                </div>\r\n                                            </>\r\n                                        </div>\r\n                                    </ScrollBar>\r\n                                </SplitterLayout>\r\n                            </ListWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper >\r\n                {this.props.Login.openPortal ?\r\n                    <PortalModal>\r\n                        <PreRegisterSlideOutModal\r\n                            postParamList={this.postParamList}\r\n                            PrevoiusLoginData={this.PrevoiusLoginData}\r\n                            show={this.props.Login.openPortal}\r\n                            closeModal={this.closeModal}\r\n                            operation={\"create\"}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            screenName={\"IDS_REGISTRATION\"}\r\n                            onSaveClick={this.onSaveClick}\r\n                            esign={this.props.Login.loadEsign}\r\n                            validateEsign={this.validateEsign}\r\n                            masterStatus={this.props.Login.masterStatus}\r\n                            updateStore={this.props.updateStore}\r\n                            timeZoneList={this.props.Login.timeZoneList}\r\n                            defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                            comboComponents={this.state.comboComponents}\r\n                            withoutCombocomponent={this.state.withoutCombocomponent}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            fromDate={this.fromDate}\r\n                            toDate={this.toDate}\r\n                            templateData={this.props.Login.masterData.registrationTemplate &&\r\n                                this.props.Login.masterData.registrationTemplate.jsondata}\r\n                            nsampletypecode={parseInt(this.props.Login.masterData.RealSampleTypeValue.nsampletypecode)}\r\n                            mandatoryFields={[\r\n                                { \"idsName\": \"IDS_PRODUCTCATEGORY\", \"dataField\": \"nproductcatcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                                { \"idsName\": \"IDS_PRODUCTNAME\", \"dataField\": \"sproductname\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }]}\r\n\r\n                        />\r\n\r\n                    </PortalModal>\r\n                    : \"\"}\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        //|| this.props.Login.loadEsign}\r\n                        closeModal={this.props.Login.loadComponent || this.props.Login.loadTest || this.props.Login.loadSource || this.props.Login.loadFile || this.props.Login.loadChildTest ? this.closeChildModal : this.closeModal}\r\n                        size={this.props.Login.parentPopUpSize}\r\n                        loginoperation={this.props.Login.loadPrinter ? true : false}\r\n                        buttonLabel={this.props.Login.loadPrinter ? \"print\" : undefined}\r\n                        operation={this.props.Login.loadComponent || this.props.Login.loadTest || this.props.Login.loadSource || this.props.Login.loadFile ? this.props.Login.childoperation : this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.loadComponent || this.props.Login.loadTest || this.props.Login.loadSource || this.props.Login.loadFile ? this.props.Login.ChildscreenName : this.props.Login.screenName}\r\n                        esign={this.props.Login.loadEsign}\r\n                        innerPopup={this.props.Login.loadComponent}\r\n                        onSaveClick={this.props.Login.loadComponent ? this.onSaveComponentClick :\r\n                            this.props.Login.loadTest ? this.onSaveTestClick : this.props.Login.loadSource ? this.onSaveSourceClick : this.props.Login.loadFile ? this.onSaveFileClick :\r\n                                this.props.Login.loadPoolSource ? this.onSavePoolSourceClick : this.props.Login.loadPrinter ? this.onSavePrinterClick : this.props.Login.loadChildTest ? this.onSaveChildTestClick : this.onSaveClick}\r\n                        validateEsign={this.validateEsign}\r\n                        showSaveContinue={this.props.Login.showSaveContinue}\r\n                        selectedRecord={!this.props.Login.loadEsign ? this.props.Login.loadComponent ? this.state.selectComponent : this.props.Login.loadPrinter ? this.state.selectedPrinterData\r\n                            : this.props.Login.loadTest ? this.state.selectedTestData : this.props.Login.loadFile ? this.state.selectedFile\r\n                                : this.props.Login.loadPoolSource ? this.state.selectedSourceData : this.state.selectedRecord : this.state.selectedRecord}\r\n                        mandatoryFields={this.mandatoryList(this.props.Login.loadPreregister,\r\n                            this.props.Login.loadComponent, this.props.Login.loadTest,\r\n                            this.props.Login.loadPoolSource,\r\n                            this.props.Login.loadPrinter,\r\n                            this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n                            this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n                            this.props.Login.operation, this.props.Login.loadFile,\r\n                            this.props.Login.loadChildTest)}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.loadComponent ? <AddComponentPopUp\r\n                                ref={this.myScrollRef}\r\n                                selectComponent={this.state.selectComponent || {}}\r\n                                RealSampleTypeValue={this.props.Login.masterData.RealSampleTypeValue || {}}\r\n                                RealRegTypeValue={this.props.Login.masterData.RealRegTypeValue || {}}\r\n                                RealRegSubTypeValue={this.props.Login.masterData.RealRegSubTypeValue || {}}\r\n                                RealFilterStatusValue={this.props.Login.masterData.RealFilterStatusValue || {}}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                handleDateChange={this.handleDateChange}\r\n                                Component={this.props.Login.lstComponent || []}\r\n                                StorageCondition={this.props.Login.StorageCondition || []}\r\n                                onInputComponentOnChange={this.onInputComponentOnChange}\r\n                                onComboChange={this.onComponentComboChange}\r\n                                onNumericInputChange={this.onNumericInputChange}\r\n                                onComboComponentChange={this.onComboComponentChange}\r\n                                timeZoneList={this.props.Login.timeZoneList}\r\n                                plasmaMasterFile={this.props.Login.plasmaMasterFile}\r\n                                onComponentChange={this.onComponentChange}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                StorageLocation={this.props.Login.StorageLocation || []}\r\n                                sreceiveddate={this.props.Login.sreceiveddate || []}\r\n                                CurrentTime={this.props.Login.CurrentTime}\r\n                            /> : this.props.Login.loadTest ? <AddTest\r\n                                TestCombined={this.props.Login.TestCombined || []}\r\n                                TestChange={this.TestChange}\r\n                                selectedTestData={this.state.selectedTestData}\r\n                            /> : this.props.Login.loadSource ? <AddSource\r\n                                SourceCombined={this.props.Login.SourceCombined || []}\r\n                                SourceChange={this.SourceChange}\r\n                                selectedSourceData={this.state.selectedSourceData}\r\n                            /> : this.props.Login.loadFile ? <AddFile\r\n                                selectedFile={this.state.selectedFile || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onDrop={this.onDropComponentFile}\r\n                                deleteAttachment={this.deleteAttachment}\r\n                                actionType={this.state.actionType}\r\n\r\n                                maxSize={20}\r\n                                maxFiles={1}\r\n                            /> : this.props.Login.loadPoolSource ?\r\n                                <AddSource\r\n                                    SourceCombined={this.props.Login.sourceCountry}\r\n                                    selectedSourceData={this.state.selectedSourceData}\r\n                                    SourceChange={this.SourceChange}\r\n                                />\r\n                                :\r\n                                this.props.Login.loadPrinter ?\r\n                                    <AddPrinter\r\n                                        printer={this.props.Login.printer}\r\n                                        selectedPrinterData={this.state.selectedPrinterData}\r\n                                        PrinterChange={this.PrinterChange}\r\n                                    /> : this.props.Login.loadChildTest ? <AddTest\r\n                                        TestCombined={this.props.Login.availableTest}\r\n                                        selectedTestData={this.state.selectedRecord}\r\n                                        TestChange={this.onComboChange}\r\n                                    /> :\r\n                                        this.props.Login.loadPreregister ?\r\n                                            (this.props.Login.operation === \"create\" ?\r\n                                                //ROUTINE\r\n                                                this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE ?\r\n                                                    <PreRegisterRoutine\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        selectedRecord={this.state.selectedRecord}\r\n                                                        selectedComponent={this.props.Login.selectedComponent || []}\r\n                                                        ProductCategory={this.props.Login.ProductCategory || []}\r\n                                                        Product={this.props.Login.Product || []}\r\n                                                        Client={this.props.Login.Client || []}\r\n                                                        selectedTest={this.props.Login.SelectedTest || []}\r\n                                                        Supplier={this.props.Login.Supplier || []}\r\n                                                        ContainerType={this.props.Login.ContainerType || []}\r\n                                                        StorageCondition={this.props.Login.StorageCondition || []}\r\n                                                        timezone={this.props.Login.timezone || []}\r\n                                                        Disposition={this.props.Login.Disposition || []}\r\n                                                        Unit={this.props.Login.Unit || []}\r\n                                                        Period={this.props.Login.Period || []}\r\n                                                        Priority={this.props.Login.Priority || []}\r\n                                                        Manufacturer={this.props.Login.Manufacturer || []}\r\n                                                        Specification={this.props.Login.Specification || []}\r\n                                                        AgaramTree={this.props.Login.AgaramTree || []}\r\n                                                        OpenNodes={this.props.Login.OpenNodes || []}\r\n                                                        FocusKey={this.props.Login.FocusKey || []}\r\n                                                        ActiveKey={this.props.Login.ActiveKey || []}\r\n                                                        onTreeClick={this.onTreeClick}\r\n                                                        onproductCategoryChange={this.onproductCategoryChange}\r\n                                                        onProductChange={this.onProductChange}\r\n                                                        onManufacturerChange={this.onManufacturerChange}\r\n                                                        onComboChange={this.onComboChange}\r\n                                                        onInputOnChange={this.onInputOnChange}\r\n                                                        onClientComboChange={this.onClientComboChange}\r\n                                                        onspecChange={this.onRoutineSpecChange}\r\n                                                        handleDateChange={this.handleEditDateChange}\r\n                                                        onNumericInputChange={this.onNumericInputEditChange}\r\n                                                        operation={this.props.Login.operation}\r\n                                                        statustoEditDetail={this.props.Login.statustoEditDetail}\r\n                                                        addComponentTest={this.addComponentTest}\r\n                                                        deleteTest={this.deleteTest}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    />\r\n                                                    :\r\n                                                    <PreRegisterPopUp\r\n                                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                                        RealRegTypeValue={this.props.Login.masterData.RealRegTypeValue || {}}\r\n                                                        RealRegSubTypeValue={this.props.Login.masterData.RealRegSubTypeValue || {}}\r\n                                                        formatMessage={this.props.intl.formatMessage}\r\n                                                        onMultiColumnValue={this.onMultiColumnValue}\r\n                                                        onMultiColumnMAHChange={this.onMultiColumnMAHChange}\r\n                                                        ProductCategory={this.props.Login.ProductCategory || []}\r\n                                                        Product={this.props.Login.Product || []}\r\n                                                        Client={this.props.Login.Client || []}\r\n                                                        Country={this.props.Login.Country || []}\r\n                                                        ProductMaholder={this.props.Login.ProductMaholder || []}\r\n                                                        Manufacturer={this.props.Login.Manufacturer || []}\r\n                                                        Specification={this.props.Login.Specification || []}\r\n                                                        AgaramTree={this.props.Login.AgaramTree || []}\r\n                                                        OpenNodes={this.props.Login.OpenNodes || []}\r\n                                                        FocusKey={this.props.Login.FocusKey || []}\r\n                                                        ActiveKey={this.props.Login.ActiveKey || []}\r\n                                                        onTreeClick={this.onTreeClick}\r\n                                                        Goodsin={this.props.Login.Goodsin || []}\r\n                                                        EProtocol={this.props.Login.EProtocol}\r\n                                                        SelectedSource={this.props.Login.SelectedSource || []}\r\n                                                        onproductCategoryChange={this.onproductCategoryChange}\r\n                                                        onProductChange={this.onProductChange}\r\n                                                        onManufacturerChange={this.onManufacturerChange}\r\n                                                        onComboChange={this.onComboChange}\r\n                                                        onInputOnChange={this.onInputOnChange}\r\n                                                        onClientComboChange={this.onClientComboChange}\r\n                                                        onspecChange={this.onspecChange}\r\n                                                        getComponentfromJava={this.getComponentfromJava}\r\n                                                        selectComponent={this.selectComponent}\r\n                                                        selectedComponent={this.props.Login.selectedComponent || []}\r\n                                                        Component={this.props.Login.Component || []}\r\n                                                        selectedTest={this.props.Login.SelectedTest || []}\r\n                                                        ConfirmComponent={this.ConfirmComponent}\r\n                                                        AddComponent={this.AddComponent}\r\n                                                        addComponentTest={this.addComponentTest}\r\n                                                        addComponentSource={this.addComponentSource}\r\n                                                        deleteComponent={this.deleteComponent}\r\n                                                        deleteTest={this.deleteTest}\r\n                                                        editComponent={this.editComponent}\r\n                                                        AddFile={this.AddFile}\r\n                                                        popUptestDataState={this.state.popUptestDataState}\r\n                                                        componentDataState={this.state.componentDataState}\r\n                                                        testdataStateChange={this.testdataStateChange}\r\n                                                        componentDataStateChange={this.componentDataStateChange}\r\n                                                        popUpsourceDataStateChange={this.popUpsourceDataStateChange}\r\n                                                        popUpsourceDataState={this.state.popUpsourceDataState}\r\n                                                        controlMap={this.state.controlMap}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        deleteSource={this.deleteSource}\r\n                                                    //     handleDateChange={this.handleDateChange}\r\n                                                    />\r\n                                                : this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE ?\r\n                                                    <PreRegisterRoutine\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        selectedRecord={this.state.selectedRecord}\r\n                                                        selectComponent={this.state.selectedComponent || []}\r\n                                                        ProductCategory={this.props.Login.ProductCategory || []}\r\n                                                        Product={this.props.Login.Product || []}\r\n                                                        Client={this.props.Login.Client || []}\r\n\r\n                                                        Supplier={this.props.Login.Supplier || []}\r\n                                                        ContainerType={this.props.Login.ContainerType || []}\r\n                                                        StorageCondition={this.props.Login.StorageCondition || []}\r\n                                                        timezone={this.props.Login.timezone || []}\r\n                                                        Disposition={this.props.Login.Disposition || []}\r\n                                                        Unit={this.props.Login.Unit || []}\r\n                                                        Period={this.props.Login.Period || []}\r\n                                                        Priority={this.props.Login.Priority || []}\r\n                                                        Manufacturer={this.props.Login.Manufacturer || []}\r\n                                                        Specification={this.props.Login.Specification || []}\r\n                                                        AgaramTree={this.props.Login.AgaramTree || []}\r\n                                                        OpenNodes={this.props.Login.OpenNodes || []}\r\n                                                        FocusKey={this.props.Login.FocusKey || []}\r\n                                                        ActiveKey={this.props.Login.ActiveKey || []}\r\n                                                        onTreeClick={this.onTreeClick}\r\n                                                        onproductCategoryChange={this.onproductCategoryChange}\r\n                                                        onProductChange={this.onProductChange}\r\n                                                        onManufacturerChange={this.onManufacturerChange}\r\n                                                        onComboChange={this.onComboChange}\r\n                                                        onInputOnChange={this.onInputOnChange}\r\n                                                        onClientComboChange={this.onClientComboChange}\r\n                                                        onspecChange={this.onRoutineSpecChange}\r\n                                                        handleDateChange={this.handleEditDateChange}\r\n                                                        onNumericInputChange={this.onNumericInputEditChange}\r\n                                                        operation={this.props.Login.operation}\r\n                                                        statustoEditDetail={this.props.Login.statustoEditDetail}\r\n                                                    />\r\n                                                    :\r\n                                                    <EditPreRegistration\r\n                                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                                        realRegTypeValue={this.props.Login.masterData.RealRegTypeValue || {}}\r\n                                                        realRegSubTypeValue={this.props.Login.masterData.RealRegSubTypeValue || {}}\r\n                                                        formatMessage={this.props.intl.formatMessage}\r\n                                                        onMultiColumnValue={this.onMultiColumnValue}\r\n                                                        onspecChange={this.onspecChange}\r\n                                                        onMultiColumnMAHChange={this.onMultiColumnMAHChange}\r\n                                                        productCategory={this.props.Login.ProductCategory || []}\r\n                                                        product={this.props.Login.Product || []}\r\n                                                        client={this.props.Login.Client || []}\r\n                                                        country={this.props.Login.Country || []}\r\n                                                        productMaholder={this.props.Login.ProductMaholder || []}\r\n                                                        manufacturer={this.props.Login.Manufacturer || []}\r\n                                                        specification={this.props.Login.Specification || []}\r\n                                                        timeZoneList={this.props.Login.timeZoneList}\r\n                                                        agaramTree={this.props.Login.AgaramTree || []}\r\n                                                        openNodes={this.props.Login.OpenNodes || []}\r\n                                                        focusKey={this.props.Login.FocusKey || []}\r\n                                                        activeKey={this.props.Login.ActiveKey || []}\r\n                                                        onTreeClick={this.onTreeClick}\r\n                                                        goodsIn={this.props.Login.Goodsin || []}\r\n                                                        eProtocol={this.props.Login.EProtocol}\r\n                                                        storageCondition={this.props.Login.StorageCondition || []}\r\n                                                        storageLocation={this.props.Login.StorageLocation || []}\r\n                                                        plasmaMasterFile={this.props.Login.plasmaMasterFile}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        onNumericInputChange={this.onNumericInputEditChange}\r\n                                                        onManufacturerChange={this.onManufacturerChange}\r\n                                                        onComboChange={this.onComboChange}\r\n                                                        onInputOnChange={this.onInputOnChange}\r\n                                                        onClientComboChange={this.onClientComboChange}\r\n                                                        //selectedTest={this.props.Login.SelectedTest || []}\r\n                                                        //confirmComponent={this.ConfirmComponent}\r\n                                                        handleDateChange={this.handleEditDateChange}\r\n                                                        statustoEditDetail={this.props.Login.statustoEditDetail}\r\n                                                        operation={this.props.Login.operation}\r\n                                                        CurrentTime={this.props.Login.currentTime}\r\n                                                    />\r\n                                            ) : \"\"\r\n                        }\r\n                    />\r\n                }\r\n                {this.state.showConfirmAlert ? this.confirmAlert() : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedFile = this.state.selectedFile || {};\r\n        selectedFile[fieldName] = deleteAttachmentDropZone(selectedFile[fieldName], file)\r\n        this.setState({\r\n            selectedFile, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n    onSaveChildTestClick = (saveType, formRef) => {\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        const selectedSubsample = getSameRecordFromTwoArrays(masterData.selectedSubSample, masterData.RegistrationGetSample.slice(this.state.skip, (this.state.skip + this.state.take)), \"npreregno\");\r\n        const selectedSample = getSameRecordFromTwoArrays(masterData.selectedSample, masterData.RegistrationGetSample.slice(this.state.skip, (this.state.skip + this.state.take)), \"npreregno\");\r\n        // selectedSubsample =masterData.selectedSubSample.slice(this.state.skip, (this.state.skip + this.state.take));\r\n        const ntransactionsamplecode = selectedSubsample.map(x => x.ntransactionsamplecode).join(\",\");\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.RealFromDate,\r\n            this.props.Login.masterData.RealToDate, this.props.Login.userInfo)\r\n        const inputData = {\r\n            TestGroupTest: this.state.selectedRecord.ntestgrouptestcode.map(value => value.item),\r\n            RegistrationSample: selectedSubsample.map(x => x.ntransactionsamplecode),\r\n            ntransactionsamplecode: ntransactionsamplecode,\r\n            userinfo: this.props.Login.userInfo,\r\n            nregtypecode: masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            nsampletypecode: masterData.RealSampleTypeValue.nsampletypecode,\r\n            ntype: 3,\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            npreregno: selectedSample &&\r\n                selectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            // ntransactionsamplecode: selectedSubsample &&\r\n            // selectedSubsample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            FromDate: obj.fromDate,\r\n            ToDate: obj.toDate\r\n        }\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"registration\",\r\n            operation: this.props.Login.operation,\r\n            methodUrl: \"Test\",\r\n            responseKeyList: [\r\n                { \"responseKey\": \"selectedSample\", \"masterDataKey\": \"RegistrationGetSample\", \"primaryKey\": \"npreregno\", \"dataAction\": \"update\" },\r\n                { \"responseKey\": \"selectedSubSample\", \"masterDataKey\": \"RegistrationGetSubSample\", \"primaryKey\": \"ntransactionsamplecode\", \"dataAction\": \"update\" },\r\n                { \"responseKey\": \"selectedTest\", \"masterDataKey\": \"RegistrationGetTest\", \"primaryKey\": \"ntransactiontestcode\", \"dataAction\": \"add\" }],\r\n            saveType, formRef\r\n        }\r\n        if (showEsign(this.state.controlMap, this.props.Login.userInfo.nformcode, this.props.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.createRegistrationTest(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    getRegistrationComboService = (ScreenName, operation, primaryKeyField, masterData, userInfo, editId) => {\r\n        let data = [];\r\n        const withoutCombocomponent = []\r\n        const Layout = this.props.Login.masterData.registrationTemplate\r\n        &&this.props.Login.masterData.registrationTemplate.jsondata\r\n        if(Layout!==undefined){\r\n        Layout.map(row => {\r\n            row.children.map(column => {\r\n                column.children.map(component => {\r\n                    return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            data.push(componentrow)\r\n                        } else {\r\n                            withoutCombocomponent.push(componentrow)\r\n                        }\r\n                    })\r\n                        : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component)\r\n                })\r\n            })\r\n        })\r\n        const comboComponents = data\r\n        let childColumnList = {};\r\n        data.map(columnList => {\r\n            const val = this.comboChild(data, columnList, childColumnList, true);\r\n            data = val.data;\r\n            childColumnList = val.childColumnList\r\n        })\r\n        const mapOfFilterRegData = {\r\n            nsampletypecode: parseInt(this.props.Login.masterData.RealSampleTypeValue.nsampletypecode)\r\n        }\r\n        this.props.getPreviewTemplate(masterData, userInfo, editId,\r\n            data, this.state.selectedRecord, childColumnList,\r\n            comboComponents, withoutCombocomponent, true, false, mapOfFilterRegData)\r\n        }else{\r\ntoast.info(\"Configure the preregister template for this registrationtype\")\r\n        }\r\n    }\r\n    comboChild = (data, columnList, childColumnList, slice) => {\r\n        let retunObj = {}\r\n        // if (data.findIndex(x => x.label === columnList.label) !== -1) {\r\n        if (!childColumnList.hasOwnProperty(columnList.label)) {\r\n            if (childColumnList[columnList.label] === undefined) {\r\n                if (columnList.hasOwnProperty(\"child\")) {\r\n                    let childList = []\r\n                    columnList.child.map(childData => {\r\n                        const index = data.findIndex(x => x.label === childData.label)\r\n                        if (index !== -1) {\r\n                            childList.push(data[index])\r\n                            if (slice) {\r\n                                data = [...data.slice(0, index), ...data.slice(index + 1)]\r\n                            }\r\n                        }\r\n                    })\r\n                    childColumnList[columnList.label] = childList;\r\n                    if (childList.length > 0) {\r\n                        childList.map(y => {\r\n                            if (y.hasOwnProperty(\"child\")) {\r\n                                const val = this.comboChild(data, y, childColumnList, slice)\r\n                                retunObj[\"data\"] = val.data;\r\n                                retunObj[\"childColumnList\"] = val.childColumnList;\r\n                            } else {\r\n                                retunObj[\"data\"] = data;\r\n                                retunObj[\"childColumnList\"] = childColumnList;\r\n                            }\r\n                        })\r\n                    } else {\r\n                        retunObj[\"data\"] = data;\r\n                        retunObj[\"childColumnList\"] = childColumnList;\r\n                    }\r\n                } else {\r\n                    retunObj[\"data\"] = data;\r\n                    retunObj[\"childColumnList\"] = childColumnList;\r\n                }\r\n            } else {\r\n                retunObj[\"data\"] = data;\r\n                retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n            }\r\n        } else {\r\n            retunObj[\"data\"] = data;\r\n            retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n        }\r\n        return retunObj;\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterChange = (event, labelname) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData = {\r\n            ...masterData,\r\n            [labelname]: { ...event.item }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onSampleTabChange = (tabProps) => {\r\n        const activeSampleTab = tabProps.screenName;\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {activeSampleTab, screenName: activeSampleTab }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        if (activeSampleTab !== this.props.Login.activeSampleTab) {\r\n\r\n            // if (this.props.Login.masterData.RealRegTypeValue.nregtypecode !== RegistrationType.PLASMA_POOL){\r\n            //     activeSampleTab = \"IDS_SAMPLEATTACHMENTS\";\r\n            // }\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                selectedSample: this.props.Login.masterData.selectedSample,\r\n                npreregno: this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSampleTab,\r\n                activeSampleTab\r\n            }\r\n            this.props.getSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n    ontestTabChange = (tabProps) => {\r\n        const activeTestTab = tabProps.screenName;\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {activeTestTab, screenName: activeTestTab }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        if (activeTestTab !== this.props.Login.activeTestTab) {\r\n            if (this.props.Login.masterData.selectedTest && this.props.Login.masterData.selectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedTest: this.props.Login.masterData.selectedTest,\r\n                    ntransactiontestcode: this.props.Login.masterData.selectedTest ?\r\n                        String(this.props.Login.masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                    npreregno: this.props.Login.masterData.selectedSample ?\r\n                        this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestTab,\r\n                    screenName: activeTestTab,\r\n                    resultDataState: this.state.resultDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                }\r\n                this.props.getTestChildTabDetail(inputData, true)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropComponentFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedFile = this.state.selectedFile || {};\r\n        selectedFile[fieldName] = onDropAttachFileList(selectedFile[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedFile, actionType: \"new\" });\r\n    }\r\n\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n        const { selectedFilter } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedFilter[dateName] = dateValue;\r\n        this.setState({ selectedFilter });\r\n    }\r\n    // confirmAlert = () => {\r\n    //     this.state.showConfirmAlert &&\r\n    //         this.confirmMessage.confirm(\"Warning\", \"Warning\", \r\n    //         this.props.Login.booleanFlag, \"ok\", \"Cancel\", \r\n    //         () => this.insertRegistration(false), undefined, () => this.showAlert());\r\n    // }\r\n\r\n    onUpdateRegistrationConfirm = () => {\r\n        this.showAlert();\r\n        this.onUpdateRegistration(this.props.Login.regEditParam.saveType,\r\n            this.props.Login.regEditParam.formRef,\r\n            this.props.Login.regEditParam.operation, 2)\r\n    }\r\n\r\n    confirmAlert = () => {\r\n        if (this.state.showConfirmAlert) {\r\n            if (this.props.Login.regDateEditConfirmMessage) {\r\n                this.confirmMessage.confirm(\"Warning\", \"Warning\",\r\n                    this.props.Login.regDateEditConfirmMessage,\r\n                    this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                    this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                    () => this.onUpdateRegistrationConfirm(),\r\n                    undefined,\r\n                    () => this.showAlert());\r\n            }\r\n            else {\r\n                this.confirmMessage.confirm(\"Warning\", \"Warning\",\r\n                    this.props.Login.booleanFlag, \"ok\", \"Cancel\",\r\n                    () => this.insertRegistration(false), undefined, () => this.showAlert());\r\n            }\r\n        }\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    showAlert = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showConfirmAlert: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    showSampleInfo() {\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n    showTestAndSample() {\r\n        this.setState({ showSample: !this.state.showSample, showTest: !this.state.showTest })\r\n    }\r\n\r\n    showTestDetails() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showSample: !this.state.showSample, showTest: !this.state.showTest }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        // this.setState({ showSample: false, showTest: true })\r\n    }\r\n\r\n    AddFile = () => {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let RealRegTypeValue = this.props.Login.masterData.RealRegTypeValue;\r\n        let booleanmanuf = true;\r\n        if (RealRegTypeValue === RegistrationType.PLASMA_POOL) {\r\n            booleanmanuf = selectedRecord[\"nmanufcode\"] > 0 && selectedRecord[\"nmanufcode\"] !== undefined ? true : false\r\n        }\r\n        if (booleanmanuf) {\r\n            if (this.state.selectedRecord.nallottedspeccode !== undefined) {\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadFile: true,\r\n                        ChildscreenName: \"File\", childoperation: \"Import\",\r\n                        parentPopUpSize: \"lg\", selectedFile: undefined\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTMANUFACTURER\" }));\r\n        }\r\n    }\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        const selectComponent = this.state.selectComponent || {};\r\n        if ((name !== \"nnoofcontainer\") && (value === 0 || value === 0.0)) {\r\n            selectComponent[name] = '';\r\n            this.setState({ selectComponent });\r\n        } else {\r\n            selectComponent[name] = value;\r\n            this.setState({ selectComponent });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onSampleTypeChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map[\"nsampletypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.getSampleTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    ConfirmComponent = (props) => {\r\n        this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to Override the Existing Components ?\",\r\n            \"ok\", \"cancel\", () => this.getComponentfromJava(props));\r\n        // confirm1.confirm(\"warning\", \"warning1\", \"do you want to override?\", \"ok\", \"cancel\", undefined);\r\n        //.confirm(\"warning\", \"warning1\", \"do you want to override?\", \"ok\", \"cancel\", undefined)\r\n    }\r\n\r\n    onRegTypeChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map[\"nregtypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.getRegTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n    acceptRegistration = (registerId, skip, take) => {\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n        } else {\r\n            sampleList = this.props.Login.masterData.RegistrationGetSample && this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take);\r\n        }\r\n\r\n        // let sampleList = this.props.Login.masterData.searchedSample || [...this.props.Login.masterData.RegistrationGetSample].splice(skip, skip + take);\r\n        let acceptList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"npreregno\");\r\n        if (acceptList && acceptList.length > 0) {\r\n            if (acceptList.every(this.checkPreregisterAndQuarentine)) {\r\n                if (this.props.Login.masterData.selectedTest.length > 0) {\r\n                    if (checkTestPresent(this.props.Login.masterData.RegistrationGetTest, acceptList)) {\r\n                        let Map = {};\r\n                        Map[\"fromdate\"] = \"\";\r\n                        Map[\"todate\"] = \"\";\r\n                        Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n                        Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                        Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                        Map[\"nfilterstatus\"] = -1;\r\n                        Map[\"npreregno\"] = acceptList &&\r\n                            acceptList.map(sample => sample.npreregno).join(\",\");\r\n                        // Map[\"npreregno\"] = this.props.Login.masterData.selectedSample &&\r\n                        //     this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\");\r\n                        Map[\"registrationsample\"] = this.props.Login.masterData.selectedSubSample;\r\n                        Map[\"registrationtest\"] = this.props.Login.masterData.selectedTest;\r\n                        Map[\"userinfo\"] = this.props.Login.userInfo;\r\n                        Map[\"nflag\"] = 2;\r\n                        Map[\"ntype\"] = 1;\r\n                        Map[\"activeSampleTab\"] = this.props.Login.activeSampleTab;\r\n                        Map[\"activeTestTab\"] = this.props.Login.activeTestTab;\r\n                        let inputParam = {\r\n                            inputData: Map,\r\n                            postParamList: this.postParamList,\r\n                            action: 'accept'\r\n                        }\r\n                        this.confirmMessage.confirm(\r\n                            this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_ACCEPTREGISTRATION\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                            () => this.acceptRegistrationConfirm(inputParam, registerId));\r\n                    } else {\r\n                        let Map = {};\r\n                        Map[\"fromdate\"] = \"\";\r\n                        Map[\"todate\"] = \"\";\r\n                        Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n                        Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                        Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                        // Map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n                        Map[\"nfilterstatus\"] = -1;\r\n                        Map[\"npreregno\"] = acceptList &&\r\n                            acceptList.map(sample => sample.npreregno).join(\",\");\r\n                        // Map[\"npreregno\"] = this.props.Login.masterData.selectedSample &&\r\n                        //     this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\");\r\n                        Map[\"registrationsample\"] = this.props.Login.masterData.selectedSubSample;\r\n                        Map[\"registrationtest\"] = this.props.Login.masterData.selectedTest;\r\n                        Map[\"userinfo\"] = this.props.Login.userInfo;\r\n                        Map[\"nflag\"] = 2;\r\n                        Map[\"ntype\"] = 1;\r\n                        Map[\"activeSampleTab\"] = this.props.Login.activeSampleTab;\r\n                        Map[\"activeTestTab\"] = this.props.Login.activeTestTab;\r\n                        let inputParam = {\r\n                            inputData: Map,\r\n                            postParamList: this.postParamList,\r\n                            action: 'accept'\r\n                        }\r\n                        this.confirmMessage.confirm(\"Confirmation\", \"Confirmation!\", \"Samples With atleast One Preregister Test Will Only Accept.Do You Want Accept?\",\r\n                            \"OK\", \"Cancel\", () => this.acceptRegistrationConfirm(inputParam, registerId));\r\n                    }\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_ADDTESTTOREGISTERSAMPLES\" }));\r\n                }\r\n            } else {\r\n                //toast.warn(\"Select Pre-register/Quarantine Samples\")\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPREREGQUARANTINESAMPLES\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPREREGQUARANTINESAMPLES\" }));\r\n        }\r\n    }\r\n\r\n    acceptRegistrationConfirm = (inputParam, registerId) => {\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, registerId)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    parentPopUpSize: 'lg',\r\n                    screenName: this.props.Login.screenName,\r\n                    operation: 'accept'\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.acceptRegistration(inputParam, this.props.Login.masterData)\r\n        }\r\n\r\n    }\r\n\r\n    selectQuarantine = (quarantineId, skip, take) => {\r\n        let sampleList = this.props.Login.masterData.searchedSample || (this.props.Login.masterData.RegistrationGetSample ? [...this.props.Login.masterData.RegistrationGetSample].splice(skip, skip + take) : []);\r\n        let quarentineList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\r\n\r\n        if (quarentineList && quarentineList.length > 0) {\r\n            if (quarentineList.every(this.checkPreregisterRecordQuarantine)) {\r\n\r\n                // let ntransactionstatus = this.props.Login.masterData.selectedSample &&\r\n                //     this.props.Login.masterData.selectedSample.map(transactionStatus => transactionStatus.ntransactionstatus).join(\",\");\r\n                //if (ntransactionstatus === transactionStatus.PREREGISTER) {\r\n                let Map = {};\r\n                Map[\"fromdate\"] = \"\";\r\n                Map[\"todate\"] = \"\";\r\n                Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n                Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                //Map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n                Map[\"nfilterstatus\"] = -1;\r\n                Map[\"npreregno\"] = quarentineList && quarentineList.map(sample => sample.npreregno).join(\",\");\r\n                Map[\"registrationsample\"] = this.props.Login.masterData.selectedSample;\r\n                Map[\"registrationtest\"] = this.props.Login.masterData.selectedSubSample;\r\n                Map[\"userinfo\"] = this.props.Login.userInfo;\r\n                Map[\"nflag\"] = 2;\r\n                Map[\"ntype\"] = 1;\r\n                Map[\"ntransactionstatus\"] = quarentineList &&\r\n                    quarentineList.map(transactionStatus => transactionStatus.ntransactionstatus).join(\",\");\r\n                //Map[\"ninsertpreregno\"] = quarantineSample.quarantineSample.npreregno;\r\n                let inputParam = {\r\n                    inputData: Map,\r\n                    postParamList: this.postParamList,\r\n                    action: 'quarantine'\r\n                }\r\n                //console.log(\"inputParam, quarantine:\", inputParam);\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, quarantineId)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true,\r\n                            parentPopUpSize: 'lg',\r\n                            screenName: this.props.Login.screenName,\r\n                            operation: 'quarantine'\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.preregRecordToQuarantine(inputParam, this.props.Login.masterData)\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPREREGISTERSAMPLES\" }))\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPREREGISTERSAMPLES\" }))\r\n        }\r\n\r\n    }\r\n\r\n    checkPreregisterAndQuarentine(sample) {\r\n        return (sample.ntransactionstatus === transactionStatus.PREREGISTER || sample.ntransactionstatus === transactionStatus.QUARANTINE)\r\n    }\r\n\r\n    checkPreregisterRecordQuarantine(sample) {\r\n        return (sample.ntransactionstatus === transactionStatus.PREREGISTER)\r\n    }\r\n\r\n    onRegSubTypeChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map['nregtypecode'] = this.props.Login.masterData.RegTypeValue.nregtypecode;\r\n            Map[\"nregsubtypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.getRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        // if (comboData !== null) {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n        // }\r\n    }\r\n\r\n    PrinterChange = (comboData, fieldName) => {\r\n        const selectedPrinterData = this.state.selectedPrinterData || {};\r\n        selectedPrinterData[fieldName] = comboData;\r\n        this.setState({ selectedPrinterData });\r\n    }\r\n\r\n\r\n    onMultiColumnValue = (value, key, flag, label, keys) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (value.length > 0) {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = value[0][objarray];\r\n            });\r\n            if (flag) {\r\n                keys.map((objkey, index) => {\r\n                    return selectedRecord[objkey] = { \"label\": value[0][label[index]], \"value\": value[0][objkey] }\r\n                })\r\n            }\r\n        } else {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = \"\";\r\n            });\r\n            keys.map((objkey, index) => {\r\n                return selectedRecord[objkey] = \"\"\r\n            })\r\n        }\r\n        this.props.getManufacturerChange(selectedRecord, this.props.Login.masterData, this.props.Login.userInfo);\r\n    }\r\n\r\n\r\n\r\n\r\n    onMultiColumnMAHChange = (value, key) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (value.length > 0) {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = value[0][objarray];\r\n            });\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    closeChildModal = () => {\r\n        let loadComponent = this.props.Login.loadComponent;\r\n        let loadTest = this.props.Login.loadTest;\r\n        let loadFile = this.props.Login.loadFile;\r\n        let loadSource = this.props.Login.loadSource;\r\n        let showSaveContinue = this.props.Login.showSaveContinue;\r\n        let screenName = this.props.Login.screenName;\r\n        let selectedTest = this.props.Login.selectedTest;\r\n        let selectedComponent = this.props.Login.selectedComponent\r\n        let selectComponent = this.state.selectComponent;\r\n        let loadChildTest = this.props.Login.loadChildTest;\r\n        let openModal = this.props.Login.openModal;\r\n        let loadPreregister = this.props.Login.loadPreregister;\r\n        if (this.props.Login.loadComponent) {\r\n            loadComponent = false;\r\n            showSaveContinue = false;\r\n            selectedTest = {};\r\n            selectComponent = undefined;\r\n            screenName = this.props.Login.PopUpLabel\r\n\r\n        } else if (this.props.Login.loadTest) {\r\n            loadTest = false;\r\n            screenName = this.props.Login.PopUpLabel\r\n        } else if (this.props.Login.loadSource) {\r\n            loadSource = false;\r\n            screenName = this.props.Login.PopUpLabel\r\n        } else if (this.props.Login.loadFile) {\r\n            loadFile = false;\r\n\r\n            screenName = this.props.Login.PopUpLabel\r\n        } else if (this.props.Login.loadChildTest) {\r\n            loadChildTest = false;\r\n            openModal = false;\r\n            loadPreregister = false;\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadComponent, loadTest, screenName, showSaveContinue,\r\n                selectedComponent,\r\n                loadSource, loadFile, loadChildTest,\r\n                selectedTest, openModal, loadPreregister,\r\n                parentPopUpSize: \"xl\", selectComponent\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let loadPreregister = this.props.Login.loadPreregister;\r\n        let openChildModal = this.props.Login.openChildModal;\r\n        let parentPopUpSize = this.props.Login.pare\r\n        let screenName = this.props.Login.screenName;\r\n        let loadPrinter = this.props.Login.loadPrinter;\r\n        let loadPoolSource = this.props.Login.loadPoolSource;\r\n        let openPortal = this.props.Login.openPortal;\r\n        let selectComponent=this.props.Login.selectComponent;\r\n        let selectedComponent=this.props.Login.selectedComponent;\r\n        let Component=this.props.Login.Component\r\n        let selectedSpec=this.props.Login.selectedSpec;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"accept\" || this.props.Login.operation === \"cancel\" || this.props.Login.operation === \"quarantine\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openChildModal = false\r\n                loadPreregister = false;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { loadEsign, openModal, openChildModal, loadPreregister }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                if (loadPreregister) {\r\n                    parentPopUpSize = 'xl'\r\n                }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { loadEsign, parentPopUpSize }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            loadPrinter = false;\r\n            loadPreregister = false;\r\n            loadPoolSource = false;\r\n            selectedRecord = {};\r\n            openPortal = false;\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openModal, loadPreregister, selectedRecord,\r\n                    screenName, insertSourcePreregno: undefined,\r\n                     loadPrinter, loadPoolSource, openPortal,\r\n                     Component\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let operation = this.props.Login.operation;\r\n        if (operation === \"update\") {\r\n            this.onUpdateRegistration(saveType, formRef, operation);\r\n        }\r\n        else {\r\n            //ROUTINE\r\n            if (this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\r\n\r\n                this.insertRoutineRegistration(true);\r\n\r\n            } else {\r\n\r\n                let Components = this.props.Login.Component;\r\n                // var flag = true;\r\n                if (Components.length > 0) {\r\n                    if (operation === \"create\") {\r\n                        let checkManufLot = this.checkManufLotPresent();\r\n                        if (checkManufLot === true) {\r\n                            let flagDuplicate = checkDuplicateComponentandManufLot(Components);\r\n                            if (flagDuplicate === true) {\r\n                                // if (this.props.Login.RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL) {\r\n                                //     flag= checkSourceForAllPreregno(Components, this.props.Login.Sources);\r\n                                // }\r\n                                this.insertRegistration(true);\r\n                            } else {\r\n                                this.confirmMessage.confirm(\"warning\", \"Warning!\", flagDuplicate, undefined, \"ok\", undefined, true, undefined);\r\n                                // alert(flagDuplicate);\r\n                            }\r\n                        } else {\r\n                            this.confirmMessage.confirm(\"warning\", \"Warning!\", checkManufLot, undefined, \"ok\", undefined, true, undefined);\r\n                            // this.confirmMessage.confirm(\"warning\", \"Warning!\", checkManufLot, \"ok\", undefined, \"ok\", undefined);\r\n                            // alert(checkManufLot)\r\n                        }\r\n                    }\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTCOMPONENT\" }));\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    onSavePrinterClick = () => {\r\n        let insertlist = [];\r\n        //this.state.selectedPrinterData.sprintername && this.state.selectedPrinterData.sprintername.map(source=>insertlist.push({npreregno:this.props.Login.insertSourcePreregno,sprintername:source.value}))\r\n        const inputParam = {\r\n            classUrl: 'barcode',\r\n            methodUrl: 'Barcode',\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                npreregno: this.props.Login.insertPrinterPreregno,\r\n                sprintername: this.state.selectedPrinterData.sprintername ? this.state.selectedPrinterData.sprintername.value : '',\r\n                insertlist,\r\n                npreregno1: this.props.Login.masterData.selectedSample.map(x => x.npreregno).join(\",\"),\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontrolcode: this.props.Login.ncontrolcode\r\n            },\r\n            operation: 'printer',\r\n            // dataState:this.state.sourceDataState,\r\n            // activeSampleTab:\"IDS_SOURCE\",\r\n            action: 'printer'\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: 'printer'\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    onSaveFileClick = (saveType, formRef) => {\r\n        const selectedFile = this.state.selectedFile;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedFile.sfilename;\r\n        const formData = new FormData();\r\n        // if(nattachmenttypecode === attachmentType.FTP) {\r\n        if (acceptedFiles && acceptedFiles.length > 0) {\r\n            acceptedFiles.forEach((file, index) => {\r\n                formData.append(\"uploadedFile\" + index, file);\r\n            });\r\n            formData.append(\"filecount\", acceptedFiles.length);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONEFILETOSUBMIT\" }));\r\n        }\r\n\r\n        formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n        formData.append(\"nstudyplan\", JSON.stringify(selectedRecord.nallottedspeccode.value));\r\n        formData.append(\"testrequired\", JSON.stringify(selectedRecord.ntransactionstatus === 3 ? true : false));\r\n        formData.append(\"ntemplatemanipulationcode\", JSON.stringify(selectedRecord.ntemplatemanipulationcode));\r\n        formData.append(\"nregtypecode\", JSON.stringify(this.props.Login.masterData.RealRegTypeValue.nregtypecode));\r\n        formData.append(\"nregsubtypecode\", JSON.stringify(this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode));\r\n        this.props.ImportFile(formData, this.confirmMessage, this.props.Login);\r\n    }\r\n\r\n    // onSaveFileClick = (saveType, formRef) => {\r\n\r\n    // }\r\n    insertRegistration(confirmMsg) {\r\n        let Components = this.props.Login.Component;\r\n        //  let Source = this.props.Login.Sources ? this.props.Login.Sources : [];\r\n        let Source = this.props.Login.Source ? this.props.Login.Source : []\r\n        let Test = this.props.Login.Test;\r\n        let Map = {};\r\n        Map[\"testgrouptest\"] = TestListManipulation(Components, Test);\r\n        Map[\"component\"] = getComponentListfromUnwantedAttr(this.props.Login.Component);\r\n        Map[\"FromDate\"] = rearrangeDateFormat(this.props.Login.userInfo, this.fromDate);//formatDate(this.fromDate);\r\n        Map[\"ToDate\"] = rearrangeDateFormat(this.props.Login.userInfo, this.toDate);//formatDate(this.toDate);\r\n        Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n        Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n        Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n        Map[\"nfilterstatus\"] = transactionStatus.PREREGISTER;\r\n        Map[\"Registration\"] = getRegistration(this.props.Login.masterData, this.state.selectedRecord);\r\n        Map[\"Registrationgeneral\"] = getRegistrationGeneral(this.state.selectedRecord);\r\n        Map[\"country\"] = Object.keys(Source).length > 0 ? TestListManipulation(Components, Source) : [];\r\n        Map[\"userinfo\"] = this.props.Login.userInfo;\r\n        Map[\"nflag\"] = 2;\r\n        Map[\"ntype\"] = 1;\r\n        Map[\"booleanLotCheck\"] = confirmMsg ? true : false;\r\n        Map[\"activeSampleTab\"] = this.props.Login.activeSampleTab;\r\n        Map[\"activeTestTab\"] = this.props.Login.activeTestTab;\r\n        Map[\"multipleselectionFlag\"] = this.props.Login.settings && parseInt(this.props.Login.settings[7]) === 3 ? true : false;\r\n        // Map[\"postParamList\"]=this.postParamList\r\n        const inputParam = {\r\n            inputData: Map,\r\n            postParamList: this.postParamList,\r\n            action: \"preregister\"\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    parentPopUpSize: 'lg',\r\n                    screenName: this.props.Login.screenName,\r\n                    operation: 'create',\r\n                    showConfirmAlert: false,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.updateStore({\r\n                typeName: DEFAULT_RETURN,\r\n                data: { showConfirmAlert: false }\r\n            });\r\n            this.props.insertRegistration(inputParam, this.props.Login.masterData)\r\n        }\r\n\r\n    }\r\n\r\n    insertRoutineRegistration() {\r\n        let Components = this.props.Login.Component;\r\n        let Test = this.props.Login.Test;\r\n        let Map = {};\r\n        Map[\"testgrouptest\"] = TestListManipulation(Components, Test);\r\n        Map[\"component\"] = getComponentListfromUnwantedAttr(this.props.Login.Component);\r\n        Map[\"FromDate\"] = rearrangeDateFormat(this.props.Login.userInfo, this.fromDate);//formatDate(this.fromDate);\r\n        Map[\"ToDate\"] = rearrangeDateFormat(this.props.Login.userInfo, this.toDate);//formatDate(this.toDate);\r\n        Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n        Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n        Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n        Map[\"nfilterstatus\"] = transactionStatus.PREREGISTER;\r\n        Map[\"Registration\"] = getRegistration(this.props.Login.masterData, this.state.selectedRecord);\r\n        Map[\"Registrationgeneral\"] = {};\r\n        Map[\"registrationroutine\"] = getRegistrationRoutine(this.state.selectedRecord);\r\n        Map[\"country\"] = [];\r\n        Map[\"userinfo\"] = this.props.Login.userInfo;\r\n        Map[\"nflag\"] = 2;\r\n        Map[\"ntype\"] = 1;\r\n        Map[\"booleanLotCheck\"] = false;\r\n        Map[\"activeSampleTab\"] = this.props.Login.activeSampleTab;\r\n        Map[\"activeTestTab\"] = this.props.Login.activeTestTab;\r\n        Map[\"multipleselectionFlag\"] = this.props.Login.settings && parseInt(this.props.Login.settings[7]) === 3 ? true : false;\r\n        // Map[\"postParamList\"]=this.postParamList\r\n        const inputParam = {\r\n            inputData: Map,\r\n            postParamList: this.postParamList,\r\n            action: \"preregister\"\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    parentPopUpSize: 'lg',\r\n                    screenName: this.props.Login.screenName,\r\n                    operation: 'create',\r\n                    showConfirmAlert: false,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.updateStore({\r\n                typeName: DEFAULT_RETURN,\r\n                data: { showConfirmAlert: false }\r\n            });\r\n            this.props.insertRegistration(inputParam, this.props.Login.masterData)\r\n        }\r\n\r\n    }\r\n\r\n    sampleInfoDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n            case \"IDS_SOURCE\":\r\n                this.setState({\r\n                    sourceDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sourceDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    testdataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n            case \"IDS_TEST\":\r\n                this.setState({\r\n                    popUptestDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    popUptestDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    testStateChange = (event) => {\r\n        this.setState({\r\n            testDataState: event.dataState\r\n        });\r\n    }\r\n\r\n\r\n\r\n    sampleTabDetail = () => {\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        const tabMap = new Map();\r\n\r\n        tabMap.set(\"IDS_ATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            selectedMaster=\"selectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            masterList={this.props.Login.masterData.selectedSample}\r\n            masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHMENT\"}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            viewFile={this.props.viewAttachment}\r\n            addName={\"AddSampleAttachment\"}\r\n            editName={\"EditSampleAttachment\"}\r\n            deleteName={\"DeleteSampleAttachment\"}\r\n            viewName={\"ViewSampleAttachment\"}\r\n            methodUrl={\"SampleAttachment\"}\r\n            skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n            take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleAttachment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                masterList: this.props.Login.masterData.RegistrationGetSample || []\r\n\r\n            }}\r\n            selectedListName=\"IDS_SAMPLE\"\r\n            displayName=\"sarno\"\r\n        />)\r\n        if (this.props.Login.masterData.RealRegTypeValue && this.props.Login.masterData.RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL) {\r\n            tabMap.set(\"IDS_SOURCE\",\r\n                <SourceTab\r\n                    userInfo={this.props.Login.masterData.userInfo || {}}\r\n                    RegistrationSourceCountry={this.props.Login.masterData.RegistrationSourceCountry || []}\r\n                    dataState={this.state.sourceDataState}\r\n                    methodUrl={\"RegistrationSourceCountry\"}\r\n                    dataStateChange={this.dataStateChange}\r\n                    masterData={this.props.Login.masterData}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    screenName=\"IDS_SOURCE\"\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    deleteRecord={this.deleteRegistrationSourceCountry}\r\n                />)\r\n        }\r\n        return tabMap;\r\n    }\r\n\r\n    testTabDetail = () => {\r\n\r\n        const testTabMap = new Map();\r\n        let testList = this.props.Login.masterData.RegistrationGetTest || [];\r\n        let { testskip, testtake } = this.state\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedTest, \"ntransactiontestcode\");\r\n        // const cancelId = this.state.controlMap.has(\"CancelTest\") && this.state.controlMap.get(\"CancelTest\").ncontrolcode;\r\n        let ntransactiontestcode = this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        testTabMap.set(\"IDS_PARAMETERRESULTS\", <RegistrationResultTab\r\n            userInfo={this.props.Login.userInfo}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            dataState={this.state.resultDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            screenName=\"IDS_PARAMETERRESULTS\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n        // getStatusCombo={this.props.getStatusCombo}\r\n        //selectedId={this.props.Login.masterData.selectedParamId}\r\n        //  viewFile={this.props.viewAttachment}\r\n        // checkListRecord={this.props.checkListRecord}\r\n        />)\r\n\r\n        testTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n            screenName=\"IDS_TESTCOMMENTS\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"selectedTest\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddTestComment\"}\r\n            editName={\"EditTestComment\"}\r\n            deleteName={\"DeleteTestComment\"}\r\n            methodUrl={\"TestComment\"}\r\n            isTestComment={false}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus=\"IDS_SELECTTESTTOADDCOMMENTS\"\r\n            primaryKeyField={\"ntestcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestComment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTCOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.RegistrationGetSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n        />)\r\n        return testTabMap;\r\n    }\r\n\r\n    getCommentsCombo = (event) => {\r\n\r\n        if (this.props.Login.selectedTest && this.props.Login.selectedTest.length > 0) {\r\n            this.props.getCommentsCombo(...event);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOADDCOMMENTS\" }))\r\n        }\r\n    }\r\n\r\n    testDataStateChange = (event) => {\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_PARAMETERRESULTS\":\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TEST\":\r\n                this.setState({\r\n                    testDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            // default:\r\n            //     this.setState({\r\n            //         testDataState: event.dataState\r\n            //     });\r\n            //     break;\r\n            default:\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let testList = [];\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\r\n        } else {\r\n            testList = this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake);\r\n        }\r\n        let acceptList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedTest, \"ntransactiontestcode\");\r\n        // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\r\n        if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestComments(saveParam, acceptList);\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n        }\r\n    }\r\n\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let acceptList = []\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\r\n        } else {\r\n            sampleList = this.props.Login.masterData.RegistrationGetSample.slice(this.state.skip, this.state.skip + this.state.take);\r\n        }\r\n        if (this.props.Login.operation === \"update\") {\r\n            acceptList.push(selectedRecord);\r\n        }\r\n        else {\r\n            acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\r\n        }\r\n\r\n\r\n        if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                npreregno: this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSampleAttachment(saveParam, acceptList);\r\n        } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedTest ? this.props.Login.masterData.selectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestAttachment(saveParam, this.props.Login.masterData.selectedTest);\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /* covertDatetoString(startDateValue, endDateValue) {\r\n         const startDate = new Date(startDateValue);\r\n         const endDate = new Date(endDateValue);\r\n \r\n         const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n         const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n         const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n         const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n \r\n         const fromDate = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay + \"T00:00:00\";\r\n         const toDate = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay + \"T23:59:59\";\r\n         const breadCrumbFrom = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay;\r\n         const breadCrumbTo = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay;\r\n         return ({ fromDate, toDate, breadCrumbFrom, breadCrumbTo })\r\n     }*/\r\n\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[\"1\"], \"dataField\": option[\"2\"], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n\r\n    ComponentObjectAfterSave() {\r\n        const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n        let objcomponent = this.state.selectComponent;\r\n        delete objcomponent.nneedservice;\r\n        if (testrequired === 3) {\r\n            this.props.getTestfromDB(objcomponent, this.props.Login, 2);\r\n        } else {\r\n            const Component = this.props.Login.Component || [];\r\n            let saveComponent = { ...objcomponent };\r\n            saveComponent[\"slno\"] = this.props.Login.Component ? Object.keys(this.props.Login.Component).length + 1 : 1;\r\n            saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\r\n            saveComponent[\"sstoragelocationname\"] = objcomponent[\"nstoragelocationcode\"] ? objcomponent[\"nstoragelocationcode\"].label : \"\";\r\n            saveComponent[\"sstorageconditionname\"] = objcomponent[\"nstorageconditioncode\"] ? objcomponent[\"nstorageconditioncode\"].label : \"\";\r\n            saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\r\n            saveComponent[\"nstoragelocationcode\"] = objcomponent[\"nstoragelocationcode\"] ? objcomponent[\"nstoragelocationcode\"].value : -1;\r\n            saveComponent[\"nstorageconditioncode\"] = objcomponent[\"nstorageconditioncode\"] ? objcomponent[\"nstorageconditioncode\"].value : -1;\r\n\r\n            //objcomponent[\"dreceiveddate\"] = formatDate(objcomponent[\"dreceiveddate\"]);\r\n            // saveComponent[\"dreceiveddate\"] = formatInputDate(objcomponent[\"dreceiveddate\"], false);\r\n            // saveComponent[\"sreceiveddate\"] = formatInputDateWithoutT(objcomponent[\"dreceiveddate\"], false);\r\n\r\n            const dreceiveddate = objcomponent[\"dreceiveddate\"];\r\n            saveComponent[\"dreceiveddate\"] = dreceiveddate;\r\n            saveComponent[\"sreceiveddate\"] = convertDateTimetoString(dreceiveddate, this.props.Login.userInfo);\r\n\r\n            saveComponent[\"nallottedspeccode\"] = objcomponent[\"nallottedspeccode\"] ? objcomponent[\"nallottedspeccode\"] : -1;\r\n            saveComponent[\"nplasmafilecode\"] = objcomponent[\"nplasmafilecode\"] ? objcomponent[\"nplasmafilecode\"].value : -1;\r\n            saveComponent[\"splasmafilenumber\"] = objcomponent[\"nplasmafilecode\"] ? objcomponent[\"nplasmafilecode\"].label : \"\";\r\n            saveComponent[\"ntzdmanufdate\"] = objcomponent[\"ntzdmanufdate\"] ? objcomponent[\"ntzdmanufdate\"].value : -1;\r\n            saveComponent[\"ntzdreceivedate\"] = objcomponent[\"ntzdreceivedate\"] ? objcomponent[\"ntzdreceivedate\"].value : -1;\r\n            saveComponent[\"stzdreceivedate\"] = objcomponent[\"ntzdreceivedate\"] ? objcomponent[\"ntzdreceivedate\"].label : \"\";\r\n            saveComponent[\"stzdmanufdate\"] = objcomponent[\"ntzdmanufdate\"] ? objcomponent[\"ntzdmanufdate\"].label : \"\";\r\n            Component.unshift(saveComponent);\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    Component, openChildModal: false, selectedComponent: saveComponent,\r\n                    SelectedTest: [], SelectedSource: [], selectComponent: {}, showSaveContinue: false, loadComponent: false, parentPopUpSize: \"xl\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    cancelRecord = (controlcode, skip, take) => {\r\n        let testList = this.props.Login.masterData.searchedTest ||\r\n            (this.props.Login.masterData.RegistrationGetTest ?\r\n                [...this.props.Login.masterData.RegistrationGetTest].splice(skip, skip + take) : []);\r\n        let acceptList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.selectedTest, \"ntransactiontestcode\");\r\n\r\n        if (acceptList && acceptList.length > 0) {\r\n            // console.log(\"Success:\", dataitem);\r\n            if (this.transValidation(this.props.Login.transactionValidation, controlcode, acceptList)) {\r\n                let Map = {};\r\n                Map['ninsertpreregno'] = acceptList.map(x => x.npreregno).join(\",\");\r\n                // Map['ntransactionstatus'] = dataitem.ntransactionstatus;\r\n                Map[\"ntransactiontestcode\"] = acceptList.map(x => x.ntransactiontestcode).join(\",\");\r\n                //  Map[\"ninserttransactionsamplecode\"] = dataitem.ntransactionsamplecode\r\n                Map[\"userinfo\"] = this.props.Login.userInfo;\r\n                Map[\"ncontrolcode\"] = controlcode;\r\n                Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n                Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                Map[\"nflag\"] = 2;\r\n                Map[\"ntype\"] = 1;\r\n                Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                Map[\"nfilterstatus\"] = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\r\n                Map[\"npreregno\"] = acceptList &&\r\n                    acceptList.map(sample => sample.npreregno).join(\",\");\r\n                Map[\"ntransactionsamplecode\"] = acceptList &&\r\n                    acceptList.map(sample => sample.ntransactionsamplecode).join(\",\");\r\n                Map[\"registrationsample\"] = this.props.Login.masterData.selectedSample;\r\n                Map[\"registrationtest\"] = this.props.Login.masterData.selectedSubSample;\r\n                let inputParam = {\r\n                    inputData: Map,\r\n                    postParamList: this.postParamList,\r\n                    action: 'cancelTest'\r\n                }\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlcode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true,\r\n                            parentPopUpSize: 'lg',\r\n                            screenName: this.props.Login.screenName,\r\n                            operation: 'cancel'\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.cancelTestAction(inputParam, this.props.Login.masterData)\r\n                }\r\n            } else {\r\n                let value = this.props.Login.transactionValidation[controlcode] &&\r\n                    this.props.Login.transactionValidation[controlcode].map(sample =>\r\n                        this.props.intl.formatMessage({ id: sample.stransdisplaystatus })).join(\"/\")\r\n\r\n                //toast.warn(\"Select\" + \" \" + value + \" to Cancel/Reject Test\");\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECT\" }) + value + this.props.intl.formatMessage({ id: \"IDS_TOCANCELREJECTTEST\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOCANCELREJECT\" }));\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.withoutCombocomponent !== previousProps.Login.withoutCombocomponent) {\r\n            this.setState({ withoutCombocomponent: this.props.Login.withoutCombocomponent });\r\n        }\r\n        if (this.props.Login.comboComponents !== previousProps.Login.comboComponents) {\r\n            this.setState({ comboComponents: this.props.Login.comboComponents });\r\n        }\r\n        if (this.props.Login.showSaveContinue !== previousProps.Login.showSaveContinue) {\r\n            this.setState({ showSaveContinue: this.props.Login.showSaveContinue });\r\n\r\n        }\r\n        if (this.props.Login !== previousProps.Login) {\r\n            this.PrevoiusLoginData = previousProps\r\n\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        else if (this.props.Login.selectedPrinterData !== previousProps.Login.selectedPrinterData) {\r\n            this.setState({ selectedPrinterData: this.props.Login.selectedPrinterData });\r\n        }\r\n        else if (this.props.Login.loadFile !== previousProps.Login.loadFile && (this.props.Login.loadFile === false)) {\r\n            this.setState({ selectedFile: undefined })\r\n        }\r\n\r\n\r\n        // else if (this.props.Login.selectedSourceData !== previousProps.Login.selectedSourceData) {\r\n        //     this.setState({ selectedSourceData: this.props.Login.selectedSourceData });\r\n\r\n        // } \r\n        else if (this.props.Login.selectedPrinterData !== previousProps.Login.selectedPrinterData) {\r\n            this.setState({ selectedPrinterData: this.props.Login.selectedPrinterData });\r\n        }\r\n        else if (this.props.Login.selectedFilter !== previousProps.Login.selectedFilter) {\r\n            this.setState({ selectedFilter: this.props.Login.selectedFilter });\r\n        }\r\n        if (this.props.Login.popUptestDataState && this.props.Login.popUptestDataState !== previousProps.Login.popUptestDataState) {\r\n            this.setState({ popUptestDataState: this.props.Login.popUptestDataState });\r\n        }\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n            this.setState({ userRoleControlRights, controlMap });\r\n\r\n        }\r\n        // if(this.props.Login.showSample !== previousProps.Login.showSample) {\r\n        //     let showSample = this.props.Login.showSample !== undefined ? this.props.Login.showSample : this.state.showSample\r\n        //     let showTest = showSample ? false : true\r\n        //     this.setState({ showSample, showTest });\r\n        // }\r\n\r\n        // if(this.props.Login.showTest !== previousProps.Login.showTest) {\r\n        //     let showTest = this.props.Login.showTest !== undefined ? this.props.Login.showTest : this.state.showTest\r\n        //     let showSample = showTest ? false : true\r\n        //     this.setState({ showSample, showTest });\r\n        // }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            let DynamicSampleColumns = this.state.DynamicSampleColumns;\r\n            let DynamicSubSampleColumns = this.state.DynamicSubSampleColumns;\r\n            let DynamicTestColumns = this.state.DynamicTestColumns;\r\n            let DynamicGridItem = this.state.DynamicGridItem;\r\n            let DynamicGridMoreField = this.state.DynamicGridMoreField;\r\n            let SingleItem = this.state.SingleItem;\r\n            let testMoreField = this.state.testMoreField;\r\n            let testListColumns = this.state.testListColumns;\r\n            let { skip, take, testskip, testtake, testCommentDataState, resultDataState, sourceDataState, sampleGridDataState, popUptestDataState } = this.state\r\n            if (this.props.Login.masterData.DynamicColumns && this.props.Login.masterData.DynamicColumns !== previousProps.Login.masterData.DynamicColumns) {\r\n                DynamicSampleColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 3);\r\n                DynamicSubSampleColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], 3);\r\n                DynamicTestColumns = listDataFromDynamicArray(listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], 5), 1);\r\n                DynamicGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 5);\r\n                DynamicGridMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 6);\r\n                SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 4);\r\n                testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], 7);\r\n                testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], 3);\r\n            }\r\n            let showSample = this.props.Login.showSample === this.state.showTest || this.state.showSample\r\n            let showTest = showSample ? false : true\r\n            const sampleTypeMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\",\r\n                \"jsondata\", \"nsorter\", \"ascending\", false);\r\n\r\n            const registrationTypeMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\",\r\n                \"sregtypename\", \"nsorter\", \"ascending\", false);\r\n\r\n            const registrationSubTypeMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\",\r\n                \"sregsubtypename\", \"nsorter\", \"ascending\", false);\r\n\r\n            const filterStatusMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\",\r\n                \"stransdisplaystatus\", \"nsorter\", \"ascending\", false);\r\n            // const stateSampleType = sampleTypeMap.get(\"OptionList\");\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.sourceDataState && this.props.Login.sourceDataState !== previousProps.Login.sourceDataState) {\r\n                sourceDataState = this.props.Login.sourceDataState;\r\n            }\r\n            if (this.props.Login.sampleGridDataState && this.props.Login.sampleGridDataState !== previousProps.Login.sampleGridDataState) {\r\n                sampleGridDataState = this.props.Login.sampleGridDataState;\r\n            }\r\n            if (this.props.Login.popUptestDataState && this.props.Login.popUptestDataState !== previousProps.Login.popUptestDataState) {\r\n                popUptestDataState = this.props.Login.popUptestDataState;\r\n            }\r\n            this.setState({\r\n                DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns, SingleItem, testMoreField,\r\n                DynamicGridItem, DynamicGridMoreField, testListColumns, stateSampleType: sampleTypeMap.get(\"OptionList\"),\r\n                stateRegistrationType: registrationTypeMap.get(\"OptionList\"), stateRegistrationSubType: registrationSubTypeMap.get(\"OptionList\"),\r\n                stateFilterStatus: filterStatusMap.get(\"OptionList\"), popUptestDataState,\r\n                showSample, showTest, skip, take, testskip, testtake, testCommentDataState, resultDataState, sourceDataState, sampleGridDataState\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleEditDateChange = (dateName, dateValue) => {\r\n        const selectComponent = this.state.selectedRecord;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectComponent[dateName] = dateValue;\r\n        this.setState({ selectedRecord: selectComponent });\r\n    }\r\n\r\n    onNumericInputEditChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if ((name !== \"nnoofcontainer\") && (value === 0 || value === 0.0)) {\r\n            selectedRecord[name] = '';\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n            selectedRecord[name] = value;\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n    deleteRegistrationSourceCountry = (deleteParam) => {\r\n        const inputParam = {\r\n            classUrl: 'registration',\r\n            methodUrl: 'RegistrationSourceCountry',\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                registrationsourcecountry: deleteParam.selectedRecord,\r\n                npreregno: this.props.Login.masterData.selectedSample.map(x => x.npreregno).join(\",\"),\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: 'delete',\r\n            dataState: this.state.sourceDataState,\r\n            action: 'deleteregsourcecountry'\r\n        }\r\n\r\n        const deleteSourceId = this.state.controlMap.has(\"DeleteRegistrationSourceCountry\") ? this.state.controlMap.get(\"DeleteRegistrationSourceCountry\").ncontrolcode : -1;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteSourceId)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: \"IDS_SAMPLEREGISTRATION\",//screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: 'delete'\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    cancelSampleRecords = (controlcode, skip, take) => {\r\n        let Map = {};\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take), \"npreregno\");\r\n        } else {\r\n            sampleList = this.props.Login.masterData.RegistrationGetSample && this.props.Login.masterData.RegistrationGetSample.slice(skip, skip + take);\r\n        }\r\n        // let sampleList = this.props.Login.masterData.searchedSample || [...this.props.Login.masterData.RegistrationGetSample].splice(skip, skip + take);\r\n        // sampleList = sampleList.splice(skip, skip + take);\r\n        let cancelRejectSamplesList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.selectedSample, \"npreregno\");\r\n\r\n        if (cancelRejectSamplesList && cancelRejectSamplesList.length > 0) {\r\n            if (this.transValidation(this.props.Login.transactionValidation, controlcode, cancelRejectSamplesList)) {\r\n                //Map['ninsertpreregno']=dataitem.cancelSample.npreregno;\r\n                Map['ntransactionstatus'] = cancelRejectSamplesList &&\r\n                    cancelRejectSamplesList.map(transactionstatus => transactionstatus.ntransactionstatus).join(\",\");\r\n                //Map[\"ntransactiontestcode\"]=dataitem.ntransactiontestcode;\r\n                //Map[\"ninserttransactionsamplecode\"]=dataitem.ntransactionsamplecode\r\n                Map[\"userinfo\"] = this.props.Login.userInfo;\r\n                Map[\"ncontrolcode\"] = controlcode;\r\n                Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n                Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                Map[\"nflag\"] = 2;\r\n                Map[\"ntype\"] = 1;\r\n                Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n                Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n                Map[\"nfilterstatus\"] = -1;\r\n                Map[\"npreregno\"] = cancelRejectSamplesList &&\r\n                    cancelRejectSamplesList.map(sample => sample.npreregno).join(\",\");\r\n                Map[\"ntransactionsamplecode\"] = this.props.Login.masterData.selectedSubSample &&\r\n                    this.props.Login.masterData.selectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\");\r\n                Map[\"ntransactiontestcode\"] = this.props.Login.masterData.selectedTest &&\r\n                    this.props.Login.masterData.selectedTest.map(test => test.ntransactiontestcode).join(\",\");\r\n                Map[\"registrationsample\"] = cancelRejectSamplesList;\r\n                Map[\"registrationtest\"] = this.props.Login.masterData.selectedSubSample;\r\n                Map[\"transactionValidation\"] = this.props.Login.transactionValidation;\r\n                let inputParam = {\r\n                    inputData: Map,\r\n                    postParamList: this.postParamList,\r\n                    action: 'cancelSample'\r\n                }\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlcode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true,\r\n                            parentPopUpSize: 'lg',\r\n                            screenName: this.props.Login.screenName,\r\n                            operation: 'cancel'\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.cancelSampleAction(inputParam, this.props.Login.masterData)\r\n                }\r\n            } else {\r\n                let value = this.props.Login.transactionValidation[controlcode] &&\r\n                    this.props.Login.transactionValidation[controlcode].map(sample =>\r\n                        this.props.intl.formatMessage({ id: sample.stransdisplaystatus })).join(\"/\")\r\n\r\n                //toast.warn(\"Select\" + \" \" + value + \" to Cancel/Reject Sample\");\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECT\" }) + value + this.props.intl.formatMessage({ id: \"IDS_TOCANCELREJECTSAMPLE\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLETOCANCELREJECT\" }));\r\n        }\r\n\r\n    }\r\n\r\n    transValidation = (transactionValidation, ncontrolcode, selectedSample) => {\r\n        //  const transList=transactionValidation?Object.keys(transactionValidation):[];\r\n        //  const index=transList.findIndex(x=>x.ncontrolcode===ncontrolcode);\r\n        //let check=true;\r\n        //  let validate=false;\r\n        let ntransstatus = [];\r\n\r\n        let translist = transactionValidation[ncontrolcode];\r\n        if (translist) {\r\n            transactionValidation[ncontrolcode] && transactionValidation[ncontrolcode].map(sam => {\r\n                return ntransstatus.push(sam.ntransactionstatus)\r\n            });\r\n            const selectdata = selectedSample ? selectedSample : [];\r\n            let check = selectdata.map(sam1 => {\r\n                return ntransstatus.includes(sam1.ntransactionstatus)\r\n            })\r\n            if (check.includes(false)) {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    onUpdateRegistration(saveType, formRef, operation, flag) {\r\n        const inputData = { userinfo: this.props.Login.userInfo };\r\n\r\n        let initialParam = {\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            fromdate: \"\",\r\n            todate: \"\",\r\n            nflag: 2,\r\n            ntype: 1,\r\n            npreregno: String(this.state.selectedRecord.npreregno)\r\n        }\r\n\r\n        inputData[\"initialparam\"] = initialParam;\r\n        // console.log(\"edit1:\", this.props.Login.regRecordToEdit);\r\n        inputData[\"samplebeforeedit\"] = JSON.parse(JSON.stringify(this.props.Login.regRecordToEdit));\r\n        inputData[\"registration\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n        inputData[\"flag\"] = flag === undefined ? 1 : flag;\r\n        Object.keys(this.state.selectedRecord).map(key => {\r\n            if (typeof this.state.selectedRecord[key] === \"object\") {\r\n                if (this.state.selectedRecord[key] === null) {\r\n                    return inputData[\"registration\"][key] = this.state.selectedRecord[key];\r\n                }\r\n                else if (this.state.selectedRecord[key] instanceof Date) {\r\n                    return inputData[\"registration\"][key] = formatInputDate(this.state.selectedRecord[key], false);\r\n                }\r\n                else {\r\n                    return inputData[\"registration\"][key] = this.state.selectedRecord[key].value\r\n                }\r\n            }\r\n            else {\r\n                return inputData[\"registration\"][key] = this.state.selectedRecord[key];\r\n            }\r\n        }\r\n        )\r\n        // console.log(\"edit:\", inputData);\r\n\r\n        // if (inputData[\"registration\"] ) {\r\n        //     delete inputData[\"registration\"][\"esignpassword\"]\r\n        //     delete inputData[\"registration\"][\"esigncomments\"]\r\n        //     delete inputData[\"registration\"][\"agree\"]\r\n        // }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Registration\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef,\r\n            action: 'editSample',\r\n            showConfirmAlert: false,\r\n            resultDataState: this.state.resultDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            // dataState:undefined, selectedId\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    saveType, parentPopUpSize: \"lg\",\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            this.props.updateRegistration(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignforRegistration(inputParam, \"openModal\");\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore,\r\n    getSampleTypeChange, getRegTypeChange, getRegSubTypeChange,\r\n    getAttachmentCombo, viewAttachment, getCommentsCombo,\r\n    filterTransactionList, validateEsignCredential,\r\n    getSampleChildTabDetail, getTestChildTabDetail,\r\n    ReloadData, showUnderDevelopment, getPreviewTemplate, getChildValues\r\n})(injectIntl(Registration));"]},"metadata":{},"sourceType":"module"}