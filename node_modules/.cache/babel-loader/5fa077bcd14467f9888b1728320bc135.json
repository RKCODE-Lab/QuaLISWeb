{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormMultiSelect from'../../components/form-multi-select/form-multi-select.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import{toast}from'react-toastify';import Axios from'axios';import{constructOptionList}from'../../components/CommonScript';import rsapi from'../../rsapi';import Preloader from'../../components/preloader/preloader.component';import FormInput from'../../components/form-input/form-input.component';//import DragAndDropComponent from './DragAndDropComponent';\nimport DataGridForStorage from'./DataGridForStorage';import{process}from'@progress/kendo-data-query';//import { CircularProgressbar, CircularProgressbarWithChildren } from 'react-circular-progressbar';\n//import 'react-circular-progressbar/dist/styles.css';\nfunction RoundProgressBar(props){var size=props.size;var radius=(props.size-props.strokeWidth)/2;var viewBox=\"0 0 \".concat(size,\" \").concat(size);var dashArray=radius*Math.PI*2;var dashOffset=dashArray-dashArray*props.value/props.max;var percentage=(props.value/props.max*100).toFixed();return/*#__PURE__*/React.createElement(React.Fragment,null)// <svg\n//     width={props.size}\n//     height={props.size}\n//     viewBox={viewBox}\n// >\n// <CircularProgressbarWithChildren value={props.value} maxValue={props.max}>\n//     <text\n//         x=\"55%\"\n//         y=\"50%\"\n//         dy=\"0.4rem\"\n//         textAnchor=\"end\"\n//         fill={props.stroke}\n//         style={{\n//             fontSize: '2.5rem',\n//             fontFamily: 'Varela Round',\n//             fontWeight: 'bold',\n//         }}\n//     >\n//         {`${props.value}`}\n//     </text>\n//     <text\n//         x=\"55%\"\n//         y=\"50%\"\n//         dy=\".4rem\"\n//         textAnchor=\"start\"\n//         fill={props.stroke}\n//         style={\n//             {\n//                 fontSize: '1.4rem',\n//                 fontFamily: 'Varela Round',\n//                 fontWeight: 'bold'\n//             }\n//         }\n//     >\n//         {`/${props.max}`}\n//     </text>\n//     <text\n//         x=\"50%\"\n//         y=\"50%\"\n//         dy=\"1.5rem\"\n//         textAnchor=\"middle\"\n//         fill={props.stroke}\n//         style={\n//             {\n//                 fontSize: '1rem',\n//                 fontFamily: 'Varela Round',\n//                 fontWeight: 'bold',\n//             }\n//         }\n//     >\n//         {props.text}\n//     </text>\n//     <text\n//         x=\"50%\"\n//         y=\"50%\"\n//         dy=\"2.7rem\"\n//         textAnchor=\"middle\"\n//         fill={props.stroke}\n//         style={\n//             {\n//                 fontSize: '1rem',\n//                 fontFamily: 'Varela Round',\n//             }\n//         }\n//     >\n//         {`${percentage}%`}\n//     </text>\n// </CircularProgressbarWithChildren>\n;}RoundProgressBar.defaultProps={size:200,value:25,max:100,strokeWidth:10,stroke:'red',text:\"\"};var MoveSampleCustomComponent=/*#__PURE__*/function(_React$Component){_inherits(MoveSampleCustomComponent,_React$Component);var _super=_createSuper(MoveSampleCustomComponent);function MoveSampleCustomComponent(props){var _this;_classCallCheck(this,MoveSampleCustomComponent);_this=_super.call(this,props);_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.props.childDataChange(selectedRecord);_this.setState({selectedRecord:selectedRecord});};_this.state={selectedRecord:_this.props.selectedRecord,loading:false};return _this;}_createClass(MoveSampleCustomComponent,[{key:\"render\",value:function render(){var _this2=this;var primaryKey=this.props.param.nsamplestoragemappingcode;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:primaryKey,as:\"select\",onChange:function onChange(event){return _this2.onComboChange(event,primaryKey);},formLabel:this.props.param.scontainerpath,isMandatory:true,value:this.state.selectedRecord?this.state.selectedRecord[primaryKey]||[]:[],options:this.state.selectedRecord.mappingcodeOptions[primaryKey][\"samplestoragecontainerpathOptions\"]||[],optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:false,isSearchable:true,isClearable:false})));}}]);return MoveSampleCustomComponent;}(React.Component);var MoveSample=/*#__PURE__*/function(_React$Component2){_inherits(MoveSample,_React$Component2);var _super2=_createSuper(MoveSample);function MoveSample(props){var _this3;_classCallCheck(this,MoveSample);_this3=_super2.call(this,props);_this3.onComboChange=function(comboData,fieldName){var selectedRecord=_this3.state.selectedRecord||{};if(fieldName==='nstoragecategorycode'){_this3.getSampleStorageLocation({userinfo:_this3.props.userInfo,nstoragecategorycode:comboData.value},fieldName,comboData);}else if(fieldName==='ncontainertypecode'){_this3.getContainerStructure({userinfo:_this3.props.userInfo,ncontainertypecode:comboData.value},fieldName,comboData);}else if(fieldName==='ncontainerstructurecode'){selectedRecord['nrow']=comboData.item.nrow?comboData.item.nrow:1;selectedRecord['ncolumn']=comboData.item.ncolumn?comboData.item.ncolumn:1;selectedRecord['nnoofcontainer']=selectedRecord[\"nneedposition\"]===true?_this3.calculateRowColumn(selectedRecord['nrow'],selectedRecord['ncolumn']):1;}else if(fieldName==='nsamplestoragelocationcode'){_this3.getSampleStorageLocation({userinfo:_this3.props.userInfo,nsamplestoragelocationcode:comboData.value},fieldName,comboData);}selectedRecord[fieldName]=comboData;_this3.props.childDataChange(selectedRecord);_this3.setState({selectedRecord:selectedRecord});};_this3.calculateRowColumn=function(Row,column){var nnoofcontainer=Row*column;return nnoofcontainer;};_this3.onInputChange=function(event){var selectedRecord=_this3.state.selectedRecord||{};if(event.target.type===\"checkbox\"){if(event.target.checked){selectedRecord['ncontainertypecode']&&delete selectedRecord['ncontainertypecode'];selectedRecord['ncontainerstructurecode']&&delete selectedRecord['ncontainerstructurecode'];selectedRecord['containerStructureOptions']&&delete selectedRecord['containerStructureOptions'];selectedRecord['nrow']&&delete selectedRecord['nrow'];selectedRecord['ncolumn']&&delete selectedRecord['ncolumn'];selectedRecord['ndirectionmastercode']&&delete selectedRecord['ndirectionmastercode'];//  selectedRecord['nquantity'] = this.calculateRowColumn(selectedRecord['nrow'], selectedRecord['ncolumn']);\n}else{selectedRecord['nrow']=1;selectedRecord['ncolumn']=1;}selectedRecord[event.target.name]=event.target.checked;}else{selectedRecord[event.target.name]=event.target.value;}_this3.props.childDataChange(selectedRecord);_this3.setState({selectedRecord:selectedRecord});};_this3.onNumericInputChange=function(value,field){var selectedRecord=_this3.state.selectedRecord||{};var constantvalue=value.target.value;if(field==='nnoofcontainer'){if(constantvalue!==0){selectedRecord['nrow']=1;selectedRecord['ncolumn']=constantvalue;}else{selectedRecord['nrow']&&delete selectedRecord['nrow'];selectedRecord['ncolumn']&&delete selectedRecord['ncolumn'];}}if(!isNaN(constantvalue)){selectedRecord[field]=constantvalue;_this3.props.childDataChange(selectedRecord);_this3.setState({selectedRecord:selectedRecord});}};_this3.state={selectedRecord:_this3.props.selectedRecord,loading:false,availableContainers:_this3.props.availableContainers,totalContainers:_this3.props.totalContainers};return _this3;}_createClass(MoveSample,[{key:\"getSampleStorageLocation\",value:function getSampleStorageLocation(inputData,fieldName,comboData){var _this4=this;var inputParamData={};this.setState({loading:true});inputParamData={isMultiContainermove:this.props.isMultiContainermove,nsamplestoragelocationcode:comboData.value,ncontainertypecode:this.props.sourcencontainertypecode,ncontainerstructurecode:this.props.sourcencontainerstructurecode,userinfo:inputData.userinfo};var urlArray=[];var url1=rsapi.post(\"samplestoragemove/getsamplemovedata\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var selectedRecord=_this4.state.selectedRecord;var storageStructureMap=constructOptionList(response[0].data['sampleStorageLocation']||[],\"nsamplestoragelocationcode\",\"ssamplestoragelocationname\",undefined,undefined,true);var storageStructureList=storageStructureMap.get(\"OptionList\");var samplestoragecontainerpathMap=constructOptionList(response[0].data['samplestoragecontainerpath']||[],\"nsamplestoragemappingcode\",\"scontainerpath\",undefined,undefined,true);var samplestoragecontainerpathList=samplestoragecontainerpathMap.get(\"OptionList\");selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{nsamplestoragelocationcode:_objectSpread({},comboData),nsamplestoragemappingcode:samplestoragecontainerpathList.length>0?{label:samplestoragecontainerpathList[0].label,value:samplestoragecontainerpathList[0].value,item:samplestoragecontainerpathList[0].item}:{},// storageStructureOptions: storageStructureList,\nsamplestoragecontainerpathOptions:samplestoragecontainerpathList});_this4.props.childDataChange(selectedRecord,response[0].data['availableContainers']);_this4.setState({availableContainers:response[0].data['availableContainers'],totalContainers:response[0].data['totalContainers'],selectedRecord:selectedRecord,loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this4.setState({loading:false});});}},{key:\"getContainerStructure\",value:function getContainerStructure(inputData,fieldName,comboData){var _this5=this;var inputParamData={};this.setState({loading:true});inputParamData={ncontainertypecode:comboData.value,userinfo:inputData.userinfo};var urlArray=[];var url1=rsapi.post(\"samplestoragemapping/getContainerStructure\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var _this5$state=_this5.state,containerStructureOptions=_this5$state.containerStructureOptions,selectedRecord=_this5$state.selectedRecord;var containerStructureList=constructOptionList(response[0].data.containerStructure||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,undefined);containerStructureOptions=containerStructureList.get(\"OptionList\");selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{nnoofcontainer:selectedRecord[\"nneedposition\"]===true?_this5.calculateRowColumn(containerStructureOptions[0].item.nrow,containerStructureOptions[0].item.ncolumn):1,nrow:containerStructureOptions.length>0?containerStructureOptions[0].item.nrow:1,ncolumn:containerStructureOptions.length>0?containerStructureOptions[0].item.ncolumn:1,ncontainerstructurecode:containerStructureOptions.length>0?containerStructureOptions[0]:[],containerStructureOptions:containerStructureOptions.length>0?_toConsumableArray(containerStructureOptions):[]});_this5.props.childDataChange(_objectSpread(_objectSpread({},selectedRecord),{},_defineProperty({},fieldName,comboData)));_this5.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},_defineProperty({},fieldName,comboData)),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this5.setState({loading:false});});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps,previousState){var _this$state=this.state,availableContainers=_this$state.availableContainers,totalContainers=_this$state.totalContainers;var bool=false;if(this.props.availableContainers!==previousProps.availableContainers){bool=true;availableContainers=this.props.availableContainers;}if(this.props.totalContainers!==previousProps.totalContainers){bool=true;totalContainers=this.props.totalContainers;}if(bool){this.setState({totalContainers:totalContainers,availableContainers:availableContainers});}}},{key:\"render\",value:function render(){var _this6=this;var extractedColumnList=[{\"idsName\":\"IDS_FROMPATH\",\"dataField\":\"scontainerpath\",\"width\":\"200px\",\"componentName\":\"combobox\"},{\"idsName\":\"IDS_TOPATH\",\"dataField\":\"scontainerpath\",\"width\":\"450px\",\"componentName\":\"combobox\"}];return/*#__PURE__*/React.createElement(React.Fragment,null,\"   \",/*#__PURE__*/React.createElement(Preloader,{loading:this.state.loading}),/*#__PURE__*/React.createElement(React.Fragment,null,this.props.isMultiContainermove?/*#__PURE__*/React.createElement(React.Fragment,null,\" \"):/*#__PURE__*/React.createElement(React.Fragment,null,\" \",/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nfromsamplestoragelocationcode\",as:\"select\",onChange:function onChange(event){return _this6.onComboChange(event,'nfromsamplestoragelocationcode');},formLabel:this.props.intl.formatMessage({id:\"IDS_STORAGESTRUCTURENAME\"})//isMandatory={true}\n,value:this.state.selectedRecord[\"nfromsamplestoragelocationcode\"]?this.state.selectedRecord[\"nfromsamplestoragelocationcode\"]||[]:[],options:this.state.selectedRecord[\"storageStructureOptions\"],optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:true,isSearchable:true,isClearable:false}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nfromsamplestoragemappingcode\",as:\"select\",onChange:function onChange(event){return _this6.onComboChange(event,'nfromsamplestoragemappingcode');},formLabel:this.props.intl.formatMessage({id:\"IDS_SAMPLESTORAGEPATH\"})//   isMandatory={true}\n,value:this.state.selectedRecord[\"nfromsamplestoragemappingcode\"]?this.state.selectedRecord[\"nfromsamplestoragemappingcode\"]||[]:[],options:this.state.selectedRecord[\"samplestoragecontainerpathOptions\"],optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:true,isSearchable:true,isClearable:false})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsamplestoragelocationcode\",as:\"select\",onChange:function onChange(event){return _this6.onComboChange(event,'nsamplestoragelocationcode');},formLabel:this.props.intl.formatMessage({id:\"IDS_TOSTORAGESTRUCTURENAME\"}),isMandatory:true,value:this.state.selectedRecord[\"nsamplestoragelocationcode\"]?this.state.selectedRecord[\"nsamplestoragelocationcode\"]||[]:[],options:this.state.selectedRecord[\"storageStructureOptions\"],optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:false,isSearchable:true,isClearable:false}))),/*#__PURE__*/React.createElement(Row,null),this.props.isMultiContainermove?/*#__PURE__*/ // <div style={{ width: 200, height: 200 }}>\n//     <RoundProgressBar\n//         value={this.state.availableContainers}\n//         stroke={'#73bc8d'}\n//         max={this.state.totalContainers}\n//         text=\"AVAILABLE\"\n//     />\n// </div>\nReact.createElement(React.Fragment,null,\" \"):/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsamplestoragemappingcode\",as:\"select\",onChange:function onChange(event){return _this6.onComboChange(event,'nsamplestoragemappingcode');},formLabel:this.props.intl.formatMessage({id:\"IDS_TOSAMPLESTORAGEPATH\"}),isMandatory:true,value:this.state.selectedRecord[\"nsamplestoragemappingcode\"]?this.state.selectedRecord[\"nsamplestoragemappingcode\"]||[]:[],options:this.state.selectedRecord[\"samplestoragecontainerpathOptions\"],optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:false,isSearchable:true,isClearable:false})))));}}]);return MoveSample;}(React.Component);export default injectIntl(MoveSample);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/storagemanagement/MoveSample.jsx"],"names":["React","Row","Col","injectIntl","CustomSwitch","FormMultiSelect","FormSelectSearch","FormNumericInput","toast","Axios","constructOptionList","rsapi","Preloader","FormInput","DataGridForStorage","process","RoundProgressBar","props","size","radius","strokeWidth","viewBox","dashArray","Math","PI","dashOffset","value","max","percentage","toFixed","defaultProps","stroke","text","MoveSampleCustomComponent","onComboChange","comboData","fieldName","selectedRecord","state","childDataChange","setState","loading","primaryKey","param","nsamplestoragemappingcode","event","scontainerpath","mappingcodeOptions","Component","MoveSample","getSampleStorageLocation","userinfo","userInfo","nstoragecategorycode","getContainerStructure","ncontainertypecode","item","nrow","ncolumn","calculateRowColumn","nsamplestoragelocationcode","column","nnoofcontainer","onInputChange","target","type","checked","name","onNumericInputChange","field","constantvalue","isNaN","availableContainers","totalContainers","inputData","inputParamData","isMultiContainermove","sourcencontainertypecode","ncontainerstructurecode","sourcencontainerstructurecode","urlArray","url1","post","all","then","response","storageStructureMap","data","undefined","storageStructureList","get","samplestoragecontainerpathMap","samplestoragecontainerpathList","length","label","samplestoragecontainerpathOptions","catch","error","status","message","warn","containerStructureOptions","containerStructureList","containerStructure","previousProps","previousState","bool","extractedColumnList","intl","formatMessage","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { constructOptionList } from '../../components/CommonScript';\r\nimport rsapi from '../../rsapi';\r\nimport Preloader from '../../components/preloader/preloader.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n//import DragAndDropComponent from './DragAndDropComponent';\r\nimport DataGridForStorage from './DataGridForStorage';\r\nimport { process } from '@progress/kendo-data-query';\r\n//import { CircularProgressbar, CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\n//import 'react-circular-progressbar/dist/styles.css';\r\n\r\n\r\nfunction RoundProgressBar(props) {\r\n    const size = props.size;\r\n    const radius = (props.size - props.strokeWidth) / 2;\r\n    const viewBox = `0 0 ${size} ${size}`;\r\n    const dashArray = radius * Math.PI * 2;\r\n    const dashOffset = dashArray - dashArray * props.value / props.max;\r\n    const percentage = (props.value / props.max * 100).toFixed();\r\n    return (<></>\r\n        // <svg\r\n        //     width={props.size}\r\n        //     height={props.size}\r\n        //     viewBox={viewBox}\r\n        // >\r\n        // <CircularProgressbarWithChildren value={props.value} maxValue={props.max}>\r\n        //     <text\r\n        //         x=\"55%\"\r\n        //         y=\"50%\"\r\n        //         dy=\"0.4rem\"\r\n        //         textAnchor=\"end\"\r\n        //         fill={props.stroke}\r\n        //         style={{\r\n        //             fontSize: '2.5rem',\r\n        //             fontFamily: 'Varela Round',\r\n        //             fontWeight: 'bold',\r\n        //         }}\r\n        //     >\r\n        //         {`${props.value}`}\r\n        //     </text>\r\n        //     <text\r\n        //         x=\"55%\"\r\n        //         y=\"50%\"\r\n        //         dy=\".4rem\"\r\n        //         textAnchor=\"start\"\r\n        //         fill={props.stroke}\r\n        //         style={\r\n        //             {\r\n        //                 fontSize: '1.4rem',\r\n        //                 fontFamily: 'Varela Round',\r\n        //                 fontWeight: 'bold'\r\n        //             }\r\n        //         }\r\n        //     >\r\n        //         {`/${props.max}`}\r\n        //     </text>\r\n        //     <text\r\n        //         x=\"50%\"\r\n        //         y=\"50%\"\r\n        //         dy=\"1.5rem\"\r\n        //         textAnchor=\"middle\"\r\n        //         fill={props.stroke}\r\n        //         style={\r\n        //             {\r\n        //                 fontSize: '1rem',\r\n        //                 fontFamily: 'Varela Round',\r\n        //                 fontWeight: 'bold',\r\n        //             }\r\n        //         }\r\n        //     >\r\n        //         {props.text}\r\n        //     </text>\r\n        //     <text\r\n        //         x=\"50%\"\r\n        //         y=\"50%\"\r\n        //         dy=\"2.7rem\"\r\n        //         textAnchor=\"middle\"\r\n        //         fill={props.stroke}\r\n        //         style={\r\n        //             {\r\n        //                 fontSize: '1rem',\r\n        //                 fontFamily: 'Varela Round',\r\n        //             }\r\n        //         }\r\n        //     >\r\n        //         {`${percentage}%`}\r\n        //     </text>\r\n        // </CircularProgressbarWithChildren>\r\n    );\r\n}\r\n\r\n\r\nRoundProgressBar.defaultProps = {\r\n    size: 200,\r\n    value: 25,\r\n    max: 100,\r\n    strokeWidth: 10,\r\n    stroke: 'red',\r\n    text: \"\"\r\n}\r\n\r\nclass MoveSampleCustomComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedRecord: this.props.selectedRecord,\r\n            loading: false\r\n        }\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.props.childDataChange(selectedRecord);\r\n        this.setState({ selectedRecord });\r\n    }\r\n    render() {\r\n        let primaryKey = this.props.param.nsamplestoragemappingcode;\r\n        return (\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        name={primaryKey}\r\n                        as={\"select\"}\r\n                        onChange={(event) => this.onComboChange(event, primaryKey)}\r\n                        formLabel={this.props.param.scontainerpath}\r\n                        isMandatory={true}\r\n                        value={this.state.selectedRecord ?\r\n                            this.state.selectedRecord[primaryKey] || [] : []}\r\n                        options={this.state.selectedRecord.mappingcodeOptions[primaryKey][\"samplestoragecontainerpathOptions\"] || []}\r\n                        optionId={\"value\"}\r\n                        optionValue={\"label\"}\r\n                        isMulti={false}\r\n                        isDisabled={false}\r\n                        isSearchable={true}\r\n                        isClearable={false}\r\n                    />\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nclass MoveSample extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedRecord: this.props.selectedRecord,\r\n            loading: false,\r\n            availableContainers: this.props.availableContainers,\r\n            totalContainers: this.props.totalContainers\r\n        }\r\n    }\r\n    getSampleStorageLocation(inputData, fieldName, comboData) {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        inputParamData = {\r\n            isMultiContainermove: this.props.isMultiContainermove,\r\n            nsamplestoragelocationcode: comboData.value,\r\n            ncontainertypecode: this.props.sourcencontainertypecode,\r\n            ncontainerstructurecode: this.props.sourcencontainerstructurecode,\r\n            userinfo: inputData.userinfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragemove/getsamplemovedata\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = this.state.selectedRecord;\r\n                const storageStructureMap = constructOptionList(response[0].data['sampleStorageLocation'] || [],\r\n                    \"nsamplestoragelocationcode\",\r\n                    \"ssamplestoragelocationname\", undefined, undefined, true);\r\n                const storageStructureList = storageStructureMap.get(\"OptionList\");\r\n\r\n                const samplestoragecontainerpathMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\r\n                    \"nsamplestoragemappingcode\",\r\n                    \"scontainerpath\", undefined, undefined, true);\r\n                const samplestoragecontainerpathList = samplestoragecontainerpathMap.get(\"OptionList\");\r\n                selectedRecord = {\r\n                    ...selectedRecord,\r\n                    nsamplestoragelocationcode: {\r\n                        ...comboData\r\n                    },\r\n                    nsamplestoragemappingcode: samplestoragecontainerpathList.length > 0 ? {\r\n                        label: samplestoragecontainerpathList[0].label,\r\n                        value: samplestoragecontainerpathList[0].value,\r\n                        item: samplestoragecontainerpathList[0].item\r\n                    } : {},\r\n                    // storageStructureOptions: storageStructureList,\r\n                    samplestoragecontainerpathOptions: samplestoragecontainerpathList,\r\n                }\r\n                this.props.childDataChange(selectedRecord, response[0].data['availableContainers']);\r\n                this.setState({\r\n                    availableContainers: response[0].data['availableContainers'],\r\n                    totalContainers: response[0].data['totalContainers'],\r\n                    selectedRecord,\r\n                    loading: false\r\n                })\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    getContainerStructure(inputData, fieldName, comboData) {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        inputParamData = {\r\n            ncontainertypecode: comboData.value,\r\n            userinfo: inputData.userinfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragemapping/getContainerStructure\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let { containerStructureOptions, selectedRecord } = this.state\r\n\r\n                let containerStructureList = constructOptionList(response[0].data.containerStructure || [], \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, undefined);\r\n                containerStructureOptions = containerStructureList.get(\"OptionList\");\r\n                selectedRecord = {\r\n                    ...selectedRecord,\r\n                    nnoofcontainer: selectedRecord[\"nneedposition\"] === true ? this.calculateRowColumn(containerStructureOptions[0].item.nrow,\r\n                        containerStructureOptions[0].item.ncolumn) : 1,\r\n                    nrow: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0].item.nrow : 1,\r\n                    ncolumn: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0].item.ncolumn : 1,\r\n                    ncontainerstructurecode: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0] : [],\r\n                    containerStructureOptions: containerStructureOptions.length > 0 ?\r\n                        [...containerStructureOptions] : [],\r\n                }\r\n\r\n                this.props.childDataChange({\r\n                    ...selectedRecord,\r\n                    [fieldName]: comboData\r\n                });\r\n\r\n                this.setState({\r\n\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        [fieldName]: comboData\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (fieldName === 'nstoragecategorycode') {\r\n            this.getSampleStorageLocation({\r\n                userinfo: this.props.userInfo,\r\n                nstoragecategorycode: comboData.value\r\n            }, fieldName, comboData);\r\n        } else if (fieldName === 'ncontainertypecode') {\r\n            this.getContainerStructure({\r\n                userinfo: this.props.userInfo,\r\n                ncontainertypecode: comboData.value\r\n            }, fieldName, comboData);\r\n\r\n        } else if (fieldName === 'ncontainerstructurecode') {\r\n            selectedRecord['nrow'] = comboData.item.nrow ? comboData.item.nrow : 1;\r\n            selectedRecord['ncolumn'] = comboData.item.ncolumn ? comboData.item.ncolumn : 1;\r\n            selectedRecord['nnoofcontainer'] = selectedRecord[\"nneedposition\"] === true ? this.calculateRowColumn(selectedRecord['nrow'],\r\n                selectedRecord['ncolumn']) : 1\r\n\r\n        } else if (fieldName === 'nsamplestoragelocationcode') {\r\n            this.getSampleStorageLocation({\r\n                userinfo: this.props.userInfo,\r\n                nsamplestoragelocationcode: comboData.value\r\n\r\n            }, fieldName, comboData);\r\n        }\r\n        selectedRecord[fieldName] = comboData;\r\n        this.props.childDataChange(selectedRecord);\r\n        this.setState({ selectedRecord });\r\n    }\r\n    calculateRowColumn = (Row, column) => {\r\n        let nnoofcontainer = Row * column;\r\n        return nnoofcontainer;\r\n    }\r\n    onInputChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === \"checkbox\") {\r\n            if (event.target.checked) {\r\n                selectedRecord['ncontainertypecode'] && delete selectedRecord['ncontainertypecode'];\r\n                selectedRecord['ncontainerstructurecode'] && delete selectedRecord['ncontainerstructurecode'];\r\n                selectedRecord['containerStructureOptions'] && delete selectedRecord['containerStructureOptions'];\r\n                selectedRecord['nrow'] && delete selectedRecord['nrow'];\r\n                selectedRecord['ncolumn'] && delete selectedRecord['ncolumn'];\r\n                selectedRecord['ndirectionmastercode'] && delete selectedRecord['ndirectionmastercode'];\r\n\r\n                //  selectedRecord['nquantity'] = this.calculateRowColumn(selectedRecord['nrow'], selectedRecord['ncolumn']);\r\n            } else {\r\n                selectedRecord['nrow'] = 1;\r\n                selectedRecord['ncolumn'] = 1;\r\n            }\r\n            selectedRecord[event.target.name] = event.target.checked;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.props.childDataChange(selectedRecord);\r\n        this.setState({ selectedRecord });\r\n    };\r\n    // onNumericInputChange = (value, field) => {\r\n    //     const selectedRecord = this.state.selectedRecord || {};\r\n    //     if (!isNaN(value)) {\r\n    //         selectedRecord[field] = value;\r\n    //         this.props.childDataChange(selectedRecord);\r\n    //         this.setState({ selectedRecord });\r\n    //     }\r\n    // }\r\n    onNumericInputChange = (value, field) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let constantvalue = value.target.value;\r\n        if (field === 'nnoofcontainer') {\r\n            if (constantvalue !== 0) {\r\n                selectedRecord['nrow'] = 1;\r\n                selectedRecord['ncolumn'] = constantvalue;\r\n            } else {\r\n                selectedRecord['nrow'] && delete selectedRecord['nrow'];\r\n                selectedRecord['ncolumn'] && delete selectedRecord['ncolumn']\r\n            }\r\n\r\n        }\r\n        if (!isNaN(constantvalue)) {\r\n            selectedRecord[field] = constantvalue;\r\n            this.props.childDataChange(selectedRecord);\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n    componentDidUpdate(previousProps, previousState) {\r\n        let { availableContainers,\r\n            totalContainers } = this.state\r\n        let bool = false;\r\n        if (this.props.availableContainers !== previousProps.availableContainers) {\r\n            bool = true;\r\n            availableContainers = this.props.availableContainers\r\n        }\r\n        if (this.props.totalContainers !== previousProps.totalContainers) {\r\n            bool = true;\r\n            totalContainers = this.props.totalContainers\r\n        }\r\n        if (bool) {\r\n            this.setState({ totalContainers, availableContainers })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const extractedColumnList = [\r\n            { \"idsName\": \"IDS_FROMPATH\", \"dataField\": \"scontainerpath\", \"width\": \"200px\", \"componentName\": \"combobox\" },\r\n            { \"idsName\": \"IDS_TOPATH\", \"dataField\": \"scontainerpath\", \"width\": \"450px\", \"componentName\": \"combobox\" }\r\n        ]\r\n        return (\r\n            <>   <Preloader loading={this.state.loading} />\r\n                {/* <DragAndDropComponent/> */}\r\n                <>\r\n\r\n                {this.props.isMultiContainermove ?\r\n                        <> </>\r\n                        :<> <Row>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                name={\"nfromsamplestoragelocationcode\"}\r\n                                as={\"select\"}\r\n                                onChange={(event) => this.onComboChange(event, 'nfromsamplestoragelocationcode')}\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_STORAGESTRUCTURENAME\" })}\r\n                                //isMandatory={true}\r\n                                value={this.state.selectedRecord[\"nfromsamplestoragelocationcode\"] ? this.state.selectedRecord[\"nfromsamplestoragelocationcode\"] || [] : []}\r\n                                options={this.state.selectedRecord[\"storageStructureOptions\"]}\r\n                                optionId={\"value\"}\r\n                                optionValue={\"label\"}\r\n                                isMulti={false}\r\n                                isDisabled={true}\r\n                                isSearchable={true}\r\n                                isClearable={false}\r\n                            />\r\n                        </Col>\r\n                    </Row> \r\n                   \r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <FormSelectSearch\r\n                                    name={\"nfromsamplestoragemappingcode\"}\r\n                                    as={\"select\"}\r\n                                    onChange={(event) => this.onComboChange(event, 'nfromsamplestoragemappingcode')}\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGEPATH\" })}\r\n                                 //   isMandatory={true}\r\n                                    value={this.state.selectedRecord[\"nfromsamplestoragemappingcode\"] ? this.state.selectedRecord[\"nfromsamplestoragemappingcode\"] || [] : []}\r\n                                    options={this.state.selectedRecord[\"samplestoragecontainerpathOptions\"]}\r\n                                    optionId={\"value\"}\r\n                                    optionValue={\"label\"}\r\n                                    isMulti={false}\r\n                                    isDisabled={true}\r\n                                    isSearchable={true}\r\n                                    isClearable={false}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row></>}\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                name={\"nsamplestoragelocationcode\"}\r\n                                as={\"select\"}\r\n                                onChange={(event) => this.onComboChange(event, 'nsamplestoragelocationcode')}\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_TOSTORAGESTRUCTURENAME\" })}\r\n                                isMandatory={true}\r\n                                value={this.state.selectedRecord[\"nsamplestoragelocationcode\"] ? this.state.selectedRecord[\"nsamplestoragelocationcode\"] || [] : []}\r\n                                options={this.state.selectedRecord[\"storageStructureOptions\"]}\r\n                                optionId={\"value\"}\r\n                                optionValue={\"label\"}\r\n                                isMulti={false}\r\n                                isDisabled={false}\r\n                                isSearchable={true}\r\n                                isClearable={false}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    </Row>\r\n                    {this.props.isMultiContainermove ?\r\n                        // <div style={{ width: 200, height: 200 }}>\r\n                        //     <RoundProgressBar\r\n                        //         value={this.state.availableContainers}\r\n                        //         stroke={'#73bc8d'}\r\n                        //         max={this.state.totalContainers}\r\n                        //         text=\"AVAILABLE\"\r\n                        //     />\r\n                        // </div>\r\n                        <> </>\r\n                        :\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <FormSelectSearch\r\n                                    name={\"nsamplestoragemappingcode\"}\r\n                                    as={\"select\"}\r\n                                    onChange={(event) => this.onComboChange(event, 'nsamplestoragemappingcode')}\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_TOSAMPLESTORAGEPATH\" })}\r\n                                    isMandatory={true}\r\n                                    value={this.state.selectedRecord[\"nsamplestoragemappingcode\"] ? this.state.selectedRecord[\"nsamplestoragemappingcode\"] || [] : []}\r\n                                    options={this.state.selectedRecord[\"samplestoragecontainerpathOptions\"]}\r\n                                    optionId={\"value\"}\r\n                                    optionValue={\"label\"}\r\n                                    isMulti={false}\r\n                                    isDisabled={false}\r\n                                    isSearchable={true}\r\n                                    isClearable={false}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>}\r\n\r\n                </>\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default injectIntl(MoveSample);"]},"metadata":{},"sourceType":"module"}