{"ast":null,"code":"import rsapi from \"../rsapi\";\nimport { toast } from \"react-toastify\";\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\nimport { intl } from '../components/App';\nimport { constructOptionList, sortData } from '../components/CommonScript';\nimport { transactionStatus } from \"../components/Enumeration\";\nimport { initRequest } from './LoginAction';\nexport function addModel(operation, ncontrolCode, lstcategory, selectedInput) {\n  return function (dispatch) {\n    ///if (lstcategory && Object.keys(lstcategory).length > 0) {\n    if (lstcategory && lstcategory[Object.keys(lstcategory)].length > 0) {\n      if (selectedInput === undefined) {\n        selectedInput = {};\n      }\n\n      selectedInput[\"sversiondescription\"] = \"\";\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openModal: true,\n          templateTreeData: [{\n            input: \"\"\n          }],\n          totalLevel: 1,\n          operation: operation,\n          selectedRecord: {},\n          selectedInput,\n          id: 0,\n          ncontrolCode\n        }\n      });\n    } else {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_CONFIGCATEGROYFORSAMPLETYPE\"\n      }));\n    }\n  };\n} //to get the edit record\n\nexport function fetchRecordByTemplateID(primaryKeyName, primaryKeyValue, operation, selectedRecord, selectedInput, userInfo, ncontrolCode) {\n  return function (dispatch) {\n    if (selectedRecord[\"ntransactionstatus\"] === transactionStatus.APPROVED || selectedRecord[\"ntransactionstatus\"] === transactionStatus.RETIRED) {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_SELECTDRAFTRECORDTOEDIT\"\n      }));\n    } else {\n      dispatch(initRequest(true));\n      rsapi.post(\"templatemaster/getTemplateMasterTree\", {\n        [primaryKeyName]: primaryKeyValue,\n        \"userinfo\": userInfo\n      }).then(response => {\n        selectedInput[\"sversiondescription\"] = response.data.lstTemplateMasterlevel[0][\"sversiondescription\"];\n        response.data.lstTemplateMasterlevel.map((item, i) => selectedRecord[i] = item[\"slabelname\"].toString());\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            templateTreeData: response.data.lstTemplateMasterlevel,\n            openModal: true,\n            operation: operation,\n            selectedRecord: selectedRecord,\n            selectedInput,\n            totalLevel: response.data.lstTemplateMasterlevel.length,\n            id: response.data.lstTemplateMasterlevel.length - 1,\n            ncontrolCode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    }\n  };\n}\nexport function getTemplateMasterTree(TMvalue, masterData, userInfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"templatemaster/getTemplateMasterTree\", {\n      ntreeversiontempcode: TMvalue.ntreeversiontempcode,\n      userinfo: userInfo\n    }).then(response => {\n      masterData[\"lstTemplateMasterlevel\"] = response.data[\"lstTemplateMasterlevel\"]; //masterData[\"selected\"] = TMvalue;\n\n      masterData[\"SelectedTreeVersionTemplate\"] = TMvalue;\n      const selectedRecord = {};\n      const dummyNumber = -12;\n      selectedRecord[\"ntransactionstatus\"] = response.data[\"lstTemplateMasterlevel\"] ? response.data[\"lstTemplateMasterlevel\"].length > 0 ? response.data[\"lstTemplateMasterlevel\"][0][\"ntransactionstatus\"] : dummyNumber : dummyNumber; // selectedRecord[\"ntransactionstatus\"] = response.data[\"lstTemplateMasterlevel\"] ? response.data[\"lstTemplateMasterlevel\"].length > 0 ?\n      //     response.data[\"lstTemplateMasterlevel\"][0][\"ntransactionstatus\"] :\n      //     this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ntransactionstatus\"] : [] : []\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData,\n          selectedRecord\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function getSampleTypeProductCategory(filterSelectedRecord, inputParam, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.url, inputParam.inputData).then(response => {\n      let categoryValuemember;\n      let categoryDisplaymemeber;\n      const categroyLable = response.data.lstcategory ? Object.keys(response.data.lstcategory)[0] : filterSelectedRecord.categroyLable;\n\n      if (Object.keys(response.data.lstcategory).length > 0) {\n        if (response.data.lstcategory[categroyLable].length > 0) {\n          categoryValuemember = response.data.lstcategory ? Object.keys(response.data.lstcategory[categroyLable][0])[0] : filterSelectedRecord.categoryValuemember;\n          categoryDisplaymemeber = response.data.lstcategory ? Object.keys(response.data.lstcategory[categroyLable][0])[1] : filterSelectedRecord.categoryDisplaymemeber;\n        }\n      } // const lstCategory = response.data.lstcategory ? constructOptionList(response.data.lstcategory[categroyLable] || [], \n      //             categoryValuemember, categoryDisplaymemeber, categoryValuemember,\n      //             \"ascending\", undefined).get(\"OptionList\") : [];\n\n\n      let Taglstcategory = [];\n\n      if (response.data.lstcategory && response.data.lstcategory[categroyLable]) {\n        const categoryTypeMap = constructOptionList(response.data.lstcategory[categroyLable] || [], categoryValuemember, categoryDisplaymemeber, categoryValuemember, \"ascending\", undefined);\n        Taglstcategory = categoryTypeMap.get(\"OptionList\");\n      }\n\n      masterData = { ...masterData,\n        SelectedCategoryFilter: response.data.SelectedCategoryFilter,\n        SelectedSampleFilter: response.data.SelectedSampleFilter,\n        lstcategory: response.data.lstcategory //SelectedSampleFilter:response.data[\"SelectedSampleFilter\"],\n        //SelectedCategoryFilter:response.data[\"SelectedCategoryFilter\"],\n        //lstcategory:lstCategory, \n        // categroyLable, \n        // categoryValuemember, categoryDisplaymemeber,\n        //  defaultCategoryType:{},\n        // defaultsampletype:{label:response.data[\"SelectedSampleFilter\"].ssampletypename, \n        //                     value:response.data[\"SelectedSampleFilter\"].nsampletypecode,\n        //                     item:response.data[\"SelectedSampleFilter\"]}\n        // selectedValues :{\"ncategorycode\": lstCategory.length > 0 ?  \n        //                                 lstCategory[0].item[categoryValuemember] : -2,                                            \n        //                 \"nsampletypecode\": filterSelectedRecord[\"sampleType\"].value,\n        //                 \"nformcode\" :lstCategory.length >0? response.data[\"nformcode\"]:-2}\n\n      };\n      filterSelectedRecord[\"masterData\"] = { ...masterData,\n        SelectedCategoryFilterTextLabel: response.data.SelectedCategoryFilterTextLabel,\n        SelectedCategoryFilterValueLabel: response.data.SelectedCategoryFilterValueLabel,\n        SelectedCategoryFilter: response.data.SelectedCategoryFilter,\n        SelectedSampleFilter: response.data.SelectedSampleFilter\n      };\n      filterSelectedRecord[\"sampletype\"] = {\n        label: response.data[\"SelectedSampleFilter\"].ssampletypename,\n        value: response.data[\"SelectedSampleFilter\"].nsampletypecode,\n        item: response.data[\"SelectedSampleFilter\"]\n      };\n      filterSelectedRecord[\"categorytype\"] = Taglstcategory.length > 0 ? Taglstcategory[0] // {\"value\": Taglstcategory[0][categoryValuemember],\n      //     \"label\": Taglstcategory[0][categoryDisplaymemeber],\n      //     \"item\":Taglstcategory[0]} \n      : undefined;\n      filterSelectedRecord[\"categroyLable\"] = categroyLable;\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData,\n          filterSelectedRecord,\n          Taglstcategory\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.info(error.response.data);\n      }\n    });\n  };\n}\nexport function getStudyTemplateByCategoryType(inputParam, masterData, filterSelectedRecord, isFilterSubmit) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.url, inputParam.inputData).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n\n      if (masterData.lstTemplateMasterlevel) {\n        sortData(masterData.lstTemplateMasterlevel, \"ascending\", \"nlevelno\");\n      }\n\n      if (masterData.lstTreeversionTemplate) {\n        sortData(masterData.lstTreeversionTemplate);\n      }\n\n      if (isFilterSubmit) {\n        masterData[\"SelectedSample\"] = filterSelectedRecord[\"sampletype\"] ? filterSelectedRecord[\"sampletype\"].item : undefined;\n        masterData[\"SelectedCategory\"] = filterSelectedRecord[\"categorytype\"] ? filterSelectedRecord[\"categorytype\"].item : undefined;\n        masterData[\"SelectedCategoryFilterTextLabel\"] = filterSelectedRecord.masterData[\"SelectedCategoryFilterTextLabel\"] ? filterSelectedRecord.masterData[\"SelectedCategoryFilterTextLabel\"] : undefined;\n        masterData[\"SelectedCategoryFilterValueLabel\"] = filterSelectedRecord.masterData[\"SelectedCategoryFilterValueLabel\"] ? filterSelectedRecord.masterData[\"SelectedCategoryFilterValueLabel\"] : undefined;\n        masterData[\"searchedData\"] = undefined;\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.info(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/actions/TemplateMasterAction.js"],"names":["rsapi","toast","DEFAULT_RETURN","intl","constructOptionList","sortData","transactionStatus","initRequest","addModel","operation","ncontrolCode","lstcategory","selectedInput","dispatch","Object","keys","length","undefined","type","payload","openModal","templateTreeData","input","totalLevel","selectedRecord","id","warn","formatMessage","fetchRecordByTemplateID","primaryKeyName","primaryKeyValue","userInfo","APPROVED","RETIRED","post","then","response","data","lstTemplateMasterlevel","map","item","i","toString","loading","catch","error","status","message","getTemplateMasterTree","TMvalue","masterData","ntreeversiontempcode","userinfo","dummyNumber","getSampleTypeProductCategory","filterSelectedRecord","inputParam","url","inputData","categoryValuemember","categoryDisplaymemeber","categroyLable","Taglstcategory","categoryTypeMap","get","SelectedCategoryFilter","SelectedSampleFilter","SelectedCategoryFilterTextLabel","SelectedCategoryFilterValueLabel","label","ssampletypename","value","nsampletypecode","info","getStudyTemplateByCategoryType","isFilterSubmit","lstTreeversionTemplate"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SACIC,KADJ,QAEO,gBAFP;AAGA,SACIC,cADJ,QAEO,cAFP;AAGA,SACIC,IADJ,QAEO,mBAFP;AAGA,SAAQC,mBAAR,EAA6BC,QAA7B,QAA4C,4BAA5C;AACA,SACIC,iBADJ,QAEO,2BAFP;AAGA,SAASC,WAAT,QAA4B,eAA5B;AAGA,OAAO,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,YAA7B,EAA2CC,WAA3C,EAAwDC,aAAxD,EAAuE;AAC1E,SAAO,UAAUC,QAAV,EAAoB;AACvB;AACI,QAAIF,WAAW,IAAIA,WAAW,CAACG,MAAM,CAACC,IAAP,CAAYJ,WAAZ,CAAD,CAAX,CAAsCK,MAAtC,GAA+C,CAAlE,EAAqE;AAErE,UAAIJ,aAAa,KAAKK,SAAtB,EAAgC;AAC5BL,QAAAA,aAAa,GAAG,EAAhB;AACH;;AACDA,MAAAA,aAAa,CAAC,qBAAD,CAAb,GAAuC,EAAvC;AACAC,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEhB,cADD;AAELiB,QAAAA,OAAO,EAAE;AACLC,UAAAA,SAAS,EAAE,IADN;AAELC,UAAAA,gBAAgB,EAAE,CAAC;AACfC,YAAAA,KAAK,EAAE;AADQ,WAAD,CAFb;AAKLC,UAAAA,UAAU,EAAE,CALP;AAMLd,UAAAA,SAAS,EAAEA,SANN;AAOLe,UAAAA,cAAc,EAAE,EAPX;AAQLZ,UAAAA,aARK;AASLa,UAAAA,EAAE,EAAE,CATC;AAULf,UAAAA;AAVK;AAFJ,OAAD,CAAR;AAeH,KArBG,MAqBG;AACHT,MAAAA,KAAK,CAACyB,IAAN,CAAWvB,IAAI,CAACwB,aAAL,CAAmB;AAC1BF,QAAAA,EAAE,EAAE;AADsB,OAAnB,CAAX;AAGH;AACJ,GA5BD;AA6BH,C,CAGD;;AACA,OAAO,SAASG,uBAAT,CAAiCC,cAAjC,EAAiDC,eAAjD,EAAkErB,SAAlE,EAA6Ee,cAA7E,EAA6FZ,aAA7F,EAA4GmB,QAA5G,EAAsHrB,YAAtH,EAAoI;AACvI,SAAO,UAAUG,QAAV,EAAoB;AACvB,QAAIW,cAAc,CAAC,oBAAD,CAAd,KAAyClB,iBAAiB,CAAC0B,QAA3D,IAAuER,cAAc,CAAC,oBAAD,CAAd,KAAyClB,iBAAiB,CAAC2B,OAAtI,EAA+I;AAC3IhC,MAAAA,KAAK,CAACyB,IAAN,CAAWvB,IAAI,CAACwB,aAAL,CAAmB;AAC1BF,QAAAA,EAAE,EAAE;AADsB,OAAnB,CAAX;AAGH,KAJD,MAIO;AACHZ,MAAAA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAP,MAAAA,KAAK,CAACkC,IAAN,CAAW,sCAAX,EAAmD;AAC3C,SAACL,cAAD,GAAkBC,eADyB;AAE3C,oBAAYC;AAF+B,OAAnD,EAIKI,IAJL,CAIUC,QAAQ,IAAI;AACdxB,QAAAA,aAAa,CAAC,qBAAD,CAAb,GAAuCwB,QAAQ,CAACC,IAAT,CAAcC,sBAAd,CAAqC,CAArC,EAAwC,qBAAxC,CAAvC;AACAF,QAAAA,QAAQ,CAACC,IAAT,CAAcC,sBAAd,CAAqCC,GAArC,CAAyC,CAACC,IAAD,EAAOC,CAAP,KACrCjB,cAAc,CAACiB,CAAD,CAAd,GAAqBD,IAAI,CAAC,YAAD,CAAL,CAAqBE,QAArB,EADxB;AAIA7B,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEhB,cADD;AAELiB,UAAAA,OAAO,EAAE;AACLE,YAAAA,gBAAgB,EAAEe,QAAQ,CAACC,IAAT,CAAcC,sBAD3B;AAELlB,YAAAA,SAAS,EAAE,IAFN;AAGLX,YAAAA,SAAS,EAAEA,SAHN;AAILe,YAAAA,cAAc,EAAEA,cAJX;AAKLZ,YAAAA,aALK;AAMLW,YAAAA,UAAU,EAAEa,QAAQ,CAACC,IAAT,CAAcC,sBAAd,CAAqCtB,MAN5C;AAOLS,YAAAA,EAAE,EAAEW,QAAQ,CAACC,IAAT,CAAcC,sBAAd,CAAqCtB,MAArC,GAA8C,CAP7C;AAQLN,YAAAA,YARK;AASLiC,YAAAA,OAAO,EAAE;AATJ;AAFJ,SAAD,CAAR;AAcH,OAxBL,EAyBKC,KAzBL,CAyBWC,KAAK,IAAI;AACZhC,QAAAA,QAAQ,CAAC;AAACK,UAAAA,IAAI,EAAEhB,cAAP;AAAuBiB,UAAAA,OAAO,EAAE;AAACwB,YAAAA,OAAO,EAAE;AAAV;AAAhC,SAAD,CAAR;;AACA,YAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,KAA0B,GAA9B,EAAmC;AAC/B7C,UAAAA,KAAK,CAAC4C,KAAN,CAAY1C,IAAI,CAACwB,aAAL,CAAmB;AAC3BF,YAAAA,EAAE,EAAEoB,KAAK,CAACE;AADiB,WAAnB,CAAZ;AAGH,SAJD,MAIO;AACH9C,UAAAA,KAAK,CAACyB,IAAN,CAAWvB,IAAI,CAACwB,aAAL,CAAmB;AAC1BF,YAAAA,EAAE,EAAEoB,KAAK,CAACT,QAAN,CAAeC;AADO,WAAnB,CAAX;AAGH;AACJ,OApCL;AAqCH;AACJ,GA7CD;AA8CH;AAKD,OAAO,SAASW,qBAAT,CAA+BC,OAA/B,EAAwCC,UAAxC,EAAoDnB,QAApD,EAA8D;AACjE,SAAO,UAAUlB,QAAV,EAAoB;AACvBA,IAAAA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR;AACA,WAAOP,KAAK,CAACkC,IAAN,CAAW,sCAAX,EAAmD;AAClDiB,MAAAA,oBAAoB,EAAEF,OAAO,CAACE,oBADoB;AAElDC,MAAAA,QAAQ,EAAErB;AAFwC,KAAnD,EAIFI,IAJE,CAIGC,QAAQ,IAAI;AACdc,MAAAA,UAAU,CAAC,wBAAD,CAAV,GAAuCd,QAAQ,CAACC,IAAT,CAAc,wBAAd,CAAvC,CADc,CAEd;;AACAa,MAAAA,UAAU,CAAC,6BAAD,CAAV,GAA4CD,OAA5C;AACA,YAAMzB,cAAc,GAAG,EAAvB;AACA,YAAM6B,WAAW,GAAG,CAAC,EAArB;AACA7B,MAAAA,cAAc,CAAC,oBAAD,CAAd,GAAuCY,QAAQ,CAACC,IAAT,CAAc,wBAAd,IAA0CD,QAAQ,CAACC,IAAT,CAAc,wBAAd,EAAwCrB,MAAxC,GAAiD,CAAjD,GAC7EoB,QAAQ,CAACC,IAAT,CAAc,wBAAd,EAAwC,CAAxC,EAA2C,oBAA3C,CAD6E,GACVgB,WADhC,GAC8CA,WADrF,CANc,CAUd;AACA;AACA;;AAEAxC,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEhB,cADD;AAELiB,QAAAA,OAAO,EAAE;AAAEwB,UAAAA,OAAO,EAAE,KAAX;AACLO,UAAAA,UADK;AAEL1B,UAAAA;AAFK;AAFJ,OAAD,CAAR;AAOH,KAzBE,EA0BFoB,KA1BE,CA0BIC,KAAK,IAAI;AACZhC,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAEhB,cAAP;AAAuBiB,QAAAA,OAAO,EAAE;AAACwB,UAAAA,OAAO,EAAE;AAAV;AAAhC,OAAD,CAAR;;AACA,UAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,KAA0B,GAA9B,EAAmC;AAC/B7C,QAAAA,KAAK,CAAC4C,KAAN,CAAY1C,IAAI,CAACwB,aAAL,CAAmB;AAC3BF,UAAAA,EAAE,EAAEoB,KAAK,CAACE;AADiB,SAAnB,CAAZ;AAGH,OAJD,MAIO;AACH9C,QAAAA,KAAK,CAACyB,IAAN,CAAWvB,IAAI,CAACwB,aAAL,CAAmB;AAC1BF,UAAAA,EAAE,EAAEoB,KAAK,CAACT,QAAN,CAAeC;AADO,SAAnB,CAAX;AAGH;AACJ,KArCE,CAAP;AAsCH,GAxCD;AAyCH;AAED,OAAO,SAASiB,4BAAT,CAAsCC,oBAAtC,EAA4DC,UAA5D,EAAwEN,UAAxE,EAAoF;AACvF,SAAO,UAAUrC,QAAV,EAAoB;AACvBA,IAAAA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAP,IAAAA,KAAK,CAACkC,IAAN,CAAWsB,UAAU,CAACC,GAAtB,EAA2BD,UAAU,CAACE,SAAtC,EACCvB,IADD,CACMC,QAAQ,IAAI;AACd,UAAIuB,mBAAJ;AACA,UAAIC,sBAAJ;AACA,YAAMC,aAAa,GAAGzB,QAAQ,CAACC,IAAT,CAAc1B,WAAd,GAA4BG,MAAM,CAACC,IAAP,CAAYqB,QAAQ,CAACC,IAAT,CAAc1B,WAA1B,EAAuC,CAAvC,CAA5B,GAAwE4C,oBAAoB,CAACM,aAAnH;;AACD,UAAG/C,MAAM,CAACC,IAAP,CAAYqB,QAAQ,CAACC,IAAT,CAAc1B,WAA1B,EAAuCK,MAAvC,GAA8C,CAAjD,EAAmD;AAClD,YAAGoB,QAAQ,CAACC,IAAT,CAAc1B,WAAd,CAA0BkD,aAA1B,EAAyC7C,MAAzC,GAAgD,CAAnD,EAAqD;AAChD2C,UAAAA,mBAAmB,GAAGvB,QAAQ,CAACC,IAAT,CAAc1B,WAAd,GAA4BG,MAAM,CAACC,IAAP,CAAYqB,QAAQ,CAACC,IAAT,CAAc1B,WAAd,CAA0BkD,aAA1B,EAAyC,CAAzC,CAAZ,EAAyD,CAAzD,CAA5B,GAA0FN,oBAAoB,CAACI,mBAArI;AACJC,UAAAA,sBAAsB,GAAGxB,QAAQ,CAACC,IAAT,CAAc1B,WAAd,GAA4BG,MAAM,CAACC,IAAP,CAAYqB,QAAQ,CAACC,IAAT,CAAc1B,WAAd,CAA0BkD,aAA1B,EAAyC,CAAzC,CAAZ,EAAyD,CAAzD,CAA5B,GAA0FN,oBAAoB,CAACK,sBAAxI;AACA;AACJ,OATiB,CAWd;AACA;AACA;;;AACA,UAAIE,cAAc,GAAG,EAArB;;AACA,UAAI1B,QAAQ,CAACC,IAAT,CAAc1B,WAAd,IAA6ByB,QAAQ,CAACC,IAAT,CAAc1B,WAAd,CAA0BkD,aAA1B,CAAjC,EAA2E;AACvE,cAAME,eAAe,GAAG3D,mBAAmB,CAACgC,QAAQ,CAACC,IAAT,CAAc1B,WAAd,CAA0BkD,aAA1B,KAC7B,EAD4B,EACxBF,mBADwB,EACHC,sBADG,EACqBD,mBADrB,EAC0C,WAD1C,EACuD1C,SADvD,CAA3C;AAEA6C,QAAAA,cAAc,GAAGC,eAAe,CAACC,GAAhB,CAAoB,YAApB,CAAjB;AACH;;AACDd,MAAAA,UAAU,GAAG,EAAC,GAAGA,UAAJ;AAAiBe,QAAAA,sBAAsB,EAAC7B,QAAQ,CAACC,IAAT,CAAc4B,sBAAtD;AACTC,QAAAA,oBAAoB,EAAC9B,QAAQ,CAACC,IAAT,CAAc6B,oBAD1B;AAC+CvD,QAAAA,WAAW,EAACyB,QAAQ,CAACC,IAAT,CAAc1B,WADzE,CAED;AACA;AACA;AACD;AACA;AACD;AACE;AACA;AACA;AAEA;AACA;AACA;AACA;;AAfC,OAAb;AAiBQ4C,MAAAA,oBAAoB,CAAC,YAAD,CAApB,GAAmC,EAAC,GAAGL,UAAJ;AAAeiB,QAAAA,+BAA+B,EAAC/B,QAAQ,CAACC,IAAT,CAAc8B,+BAA7D;AAC/BC,QAAAA,gCAAgC,EAAChC,QAAQ,CAACC,IAAT,CAAc+B,gCADhB;AAE/BH,QAAAA,sBAAsB,EAAC7B,QAAQ,CAACC,IAAT,CAAc4B,sBAFN;AAG/BC,QAAAA,oBAAoB,EAAC9B,QAAQ,CAACC,IAAT,CAAc6B;AAHJ,OAAnC;AAIRX,MAAAA,oBAAoB,CAAC,YAAD,CAApB,GAAqC;AAACc,QAAAA,KAAK,EAACjC,QAAQ,CAACC,IAAT,CAAc,sBAAd,EAAsCiC,eAA7C;AACGC,QAAAA,KAAK,EAACnC,QAAQ,CAACC,IAAT,CAAc,sBAAd,EAAsCmC,eAD/C;AAEGhC,QAAAA,IAAI,EAACJ,QAAQ,CAACC,IAAT,CAAc,sBAAd;AAFR,OAArC;AAIAkB,MAAAA,oBAAoB,CAAC,cAAD,CAApB,GAAwCO,cAAc,CAAC9C,MAAf,GAAwB,CAAxB,GAA6B8C,cAAc,CAAC,CAAD,CAA3C,CACR;AACA;AACA;AAHQ,QAIF7C,SAJtC;AAKAsC,MAAAA,oBAAoB,CAAC,eAAD,CAApB,GAAuCM,aAAvC;AACAhD,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAEhB,cAAP;AAAuBiB,QAAAA,OAAO,EAAE;AAACwB,UAAAA,OAAO,EAAC,KAAT;AAAgBO,UAAAA,UAAhB;AAA4BK,UAAAA,oBAA5B;AAAkDO,UAAAA;AAAlD;AAAhC,OAAD,CAAR;AACH,KArDD,EAsDClB,KAtDD,CAsDOC,KAAK,IAAI;AACZhC,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAEhB,cAAP;AAAuBiB,QAAAA,OAAO,EAAE;AAACwB,UAAAA,OAAO,EAAE;AAAV;AAAhC,OAAD,CAAR;;AACA,UAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,KAA0B,GAA9B,EAAmC;AAC/B7C,QAAAA,KAAK,CAAC4C,KAAN,CAAYA,KAAK,CAACE,OAAlB;AACH,OAFD,MAGK;AACD9C,QAAAA,KAAK,CAACwE,IAAN,CAAW5B,KAAK,CAACT,QAAN,CAAeC,IAA1B;AACH;AACJ,KA9DD;AA+DH,GAjED;AAkEH;AAED,OAAO,SAASqC,8BAAT,CAAwClB,UAAxC,EAAoDN,UAApD,EAAgEK,oBAAhE,EAAsFoB,cAAtF,EAAsG;AACzG,SAAO,UAAU9D,QAAV,EAAoB;AACvBA,IAAAA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAP,IAAAA,KAAK,CAACkC,IAAN,CAAWsB,UAAU,CAACC,GAAtB,EAA2BD,UAAU,CAACE,SAAtC,EACCvB,IADD,CACMC,QAAQ,IAAI;AACdc,MAAAA,UAAU,GAAG,EAAC,GAAGA,UAAJ;AAAgB,WAAGd,QAAQ,CAACC;AAA5B,OAAb;;AACA,UAAIa,UAAU,CAACZ,sBAAf,EAAuC;AACnCjC,QAAAA,QAAQ,CAAC6C,UAAU,CAACZ,sBAAZ,EAAoC,WAApC,EAAiD,UAAjD,CAAR;AACH;;AACD,UAAIY,UAAU,CAAC0B,sBAAf,EAAuC;AACnCvE,QAAAA,QAAQ,CAAC6C,UAAU,CAAC0B,sBAAZ,CAAR;AACH;;AACD,UAAID,cAAJ,EAAmB;AACfzB,QAAAA,UAAU,CAAC,gBAAD,CAAV,GAA+BK,oBAAoB,CAAC,YAAD,CAApB,GAAqCA,oBAAoB,CAAC,YAAD,CAApB,CAAmCf,IAAxE,GAA8EvB,SAA7G;AACAiC,QAAAA,UAAU,CAAC,kBAAD,CAAV,GAAiCK,oBAAoB,CAAC,cAAD,CAApB,GAAuCA,oBAAoB,CAAC,cAAD,CAApB,CAAqCf,IAA5E,GAAkFvB,SAAnH;AACAiC,QAAAA,UAAU,CAAC,iCAAD,CAAV,GAAgDK,oBAAoB,CAACL,UAArB,CAAgC,iCAAhC,IAAqEK,oBAAoB,CAACL,UAArB,CAAgC,iCAAhC,CAArE,GAAyIjC,SAAzL;AACCiC,QAAAA,UAAU,CAAC,kCAAD,CAAV,GAAiDK,oBAAoB,CAACL,UAArB,CAAgC,kCAAhC,IAAsEK,oBAAoB,CAACL,UAArB,CAAgC,kCAAhC,CAAtE,GAA2IjC,SAA5L;AACDiC,QAAAA,UAAU,CAAC,cAAD,CAAV,GAA2BjC,SAA3B;AACH;;AAEDJ,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAEhB,cAAP;AAAuBiB,QAAAA,OAAO,EAAE;AAACwB,UAAAA,OAAO,EAAE,KAAV;AAAgBO,UAAAA;AAAhB;AAAhC,OAAD,CAAR;AACH,KAlBD,EAmBCN,KAnBD,CAmBOC,KAAK,IAAI;AACZhC,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAEhB,cAAP;AAAuBiB,QAAAA,OAAO,EAAE;AAACwB,UAAAA,OAAO,EAAE;AAAV;AAAhC,OAAD,CAAR;;AACA,UAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,KAA0B,GAA9B,EAAmC;AAC/B7C,QAAAA,KAAK,CAAC4C,KAAN,CAAYA,KAAK,CAACE,OAAlB;AACH,OAFD,MAGK;AACD9C,QAAAA,KAAK,CAACwE,IAAN,CAAW5B,KAAK,CAACT,QAAN,CAAeC,IAA1B;AACH;AACJ,KA3BD;AA4BH,GA9BD;AA+BH","sourcesContent":["import rsapi from \"../rsapi\";\r\nimport {\r\n    toast\r\n} from \"react-toastify\";\r\nimport {\r\n    DEFAULT_RETURN\r\n} from \"./LoginTypes\";\r\nimport {\r\n    intl\r\n} from '../components/App';\r\nimport {constructOptionList, sortData} from '../components/CommonScript';\r\nimport {\r\n    transactionStatus\r\n} from \"../components/Enumeration\";\r\nimport { initRequest } from './LoginAction';\r\n\r\n\r\nexport function addModel(operation, ncontrolCode, lstcategory, selectedInput) {\r\n    return function (dispatch) {\r\n        ///if (lstcategory && Object.keys(lstcategory).length > 0) {\r\n            if (lstcategory && lstcategory[Object.keys(lstcategory)].length > 0) {\r\n            \r\n            if (selectedInput === undefined){\r\n                selectedInput = {};\r\n            }\r\n            selectedInput[\"sversiondescription\"] = \"\";\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    openModal: true,\r\n                    templateTreeData: [{\r\n                        input: \"\"\r\n                    }],\r\n                    totalLevel: 1,\r\n                    operation: operation,\r\n                    selectedRecord: {},\r\n                    selectedInput,\r\n                    id: 0,\r\n                    ncontrolCode\r\n                }\r\n            });\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_CONFIGCATEGROYFORSAMPLETYPE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//to get the edit record\r\nexport function fetchRecordByTemplateID(primaryKeyName, primaryKeyValue, operation, selectedRecord, selectedInput, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        if (selectedRecord[\"ntransactionstatus\"] === transactionStatus.APPROVED || selectedRecord[\"ntransactionstatus\"] === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTDRAFTRECORDTOEDIT\"\r\n            }));\r\n        } else {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"templatemaster/getTemplateMasterTree\", {\r\n                    [primaryKeyName]: primaryKeyValue,\r\n                    \"userinfo\": userInfo\r\n                })\r\n                .then(response => {\r\n                    selectedInput[\"sversiondescription\"] = response.data.lstTemplateMasterlevel[0][\"sversiondescription\"];\r\n                    response.data.lstTemplateMasterlevel.map((item, i) =>\r\n                        selectedRecord[i] = (item[\"slabelname\"]).toString(),\r\n                    )\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            templateTreeData: response.data.lstTemplateMasterlevel,\r\n                            openModal: true,\r\n                            operation: operation,\r\n                            selectedRecord: selectedRecord,\r\n                            selectedInput,\r\n                            totalLevel: response.data.lstTemplateMasterlevel.length,\r\n                            id: response.data.lstTemplateMasterlevel.length - 1,\r\n                            ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({type: DEFAULT_RETURN, payload: {loading: false}}); \r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({\r\n                            id: error.message\r\n                        }));\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function getTemplateMasterTree(TMvalue, masterData, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"templatemaster/getTemplateMasterTree\", {\r\n                ntreeversiontempcode: TMvalue.ntreeversiontempcode,\r\n                userinfo: userInfo,\r\n            })\r\n            .then(response => {\r\n                masterData[\"lstTemplateMasterlevel\"] = response.data[\"lstTemplateMasterlevel\"];\r\n                //masterData[\"selected\"] = TMvalue;\r\n                masterData[\"SelectedTreeVersionTemplate\"] = TMvalue;\r\n                const selectedRecord = {};\r\n                const dummyNumber = -12;\r\n                selectedRecord[\"ntransactionstatus\"] = response.data[\"lstTemplateMasterlevel\"] ? response.data[\"lstTemplateMasterlevel\"].length > 0 ?\r\n                    response.data[\"lstTemplateMasterlevel\"][0][\"ntransactionstatus\"] : dummyNumber : dummyNumber;\r\n                 \r\n\r\n                // selectedRecord[\"ntransactionstatus\"] = response.data[\"lstTemplateMasterlevel\"] ? response.data[\"lstTemplateMasterlevel\"].length > 0 ?\r\n                //     response.data[\"lstTemplateMasterlevel\"][0][\"ntransactionstatus\"] :\r\n                //     this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ntransactionstatus\"] : [] : []\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: { loading: false,\r\n                        masterData,\r\n                        selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading: false}}); \r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getSampleTypeProductCategory(filterSelectedRecord, inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.url, inputParam.inputData)\r\n        .then(response => {\r\n            let categoryValuemember;\r\n            let categoryDisplaymemeber ;\r\n            const categroyLable = response.data.lstcategory ? Object.keys(response.data.lstcategory)[0] : filterSelectedRecord.categroyLable;\r\n           if(Object.keys(response.data.lstcategory).length>0){\r\n            if(response.data.lstcategory[categroyLable].length>0){\r\n                 categoryValuemember = response.data.lstcategory ? Object.keys(response.data.lstcategory[categroyLable][0])[0] : filterSelectedRecord.categoryValuemember;\r\n             categoryDisplaymemeber = response.data.lstcategory ? Object.keys(response.data.lstcategory[categroyLable][0])[1] : filterSelectedRecord.categoryDisplaymemeber;\r\n            }\r\n        }\r\n    \r\n            // const lstCategory = response.data.lstcategory ? constructOptionList(response.data.lstcategory[categroyLable] || [], \r\n            //             categoryValuemember, categoryDisplaymemeber, categoryValuemember,\r\n            //             \"ascending\", undefined).get(\"OptionList\") : [];\r\n            let Taglstcategory = [];\r\n            if (response.data.lstcategory && response.data.lstcategory[categroyLable]) {\r\n                const categoryTypeMap = constructOptionList(response.data.lstcategory[categroyLable]\r\n                            || [], categoryValuemember, categoryDisplaymemeber, categoryValuemember, \"ascending\", undefined) ;\r\n                Taglstcategory = categoryTypeMap.get(\"OptionList\");\r\n            }   \r\n            masterData = {...masterData,  SelectedCategoryFilter:response.data.SelectedCategoryFilter,\r\n                SelectedSampleFilter:response.data.SelectedSampleFilter,lstcategory:response.data.lstcategory\r\n                        //SelectedSampleFilter:response.data[\"SelectedSampleFilter\"],\r\n                        //SelectedCategoryFilter:response.data[\"SelectedCategoryFilter\"],\r\n                        //lstcategory:lstCategory, \r\n                       // categroyLable, \r\n                       // categoryValuemember, categoryDisplaymemeber,\r\n                      //  defaultCategoryType:{},\r\n                        // defaultsampletype:{label:response.data[\"SelectedSampleFilter\"].ssampletypename, \r\n                        //                     value:response.data[\"SelectedSampleFilter\"].nsampletypecode,\r\n                        //                     item:response.data[\"SelectedSampleFilter\"]}\r\n\r\n                        // selectedValues :{\"ncategorycode\": lstCategory.length > 0 ?  \r\n                        //                                 lstCategory[0].item[categoryValuemember] : -2,                                            \r\n                        //                 \"nsampletypecode\": filterSelectedRecord[\"sampleType\"].value,\r\n                        //                 \"nformcode\" :lstCategory.length >0? response.data[\"nformcode\"]:-2}\r\n                    };\r\n                    filterSelectedRecord[\"masterData\"]={...masterData,SelectedCategoryFilterTextLabel:response.data.SelectedCategoryFilterTextLabel,\r\n                        SelectedCategoryFilterValueLabel:response.data.SelectedCategoryFilterValueLabel,\r\n                        SelectedCategoryFilter:response.data.SelectedCategoryFilter,\r\n                        SelectedSampleFilter:response.data.SelectedSampleFilter};\r\n            filterSelectedRecord[\"sampletype\"] = {label:response.data[\"SelectedSampleFilter\"].ssampletypename, \r\n                                                    value:response.data[\"SelectedSampleFilter\"].nsampletypecode,\r\n                                                    item:response.data[\"SelectedSampleFilter\"]}\r\n           \r\n            filterSelectedRecord[\"categorytype\"] =  Taglstcategory.length > 0 ?  Taglstcategory[0] \r\n                                            // {\"value\": Taglstcategory[0][categoryValuemember],\r\n                                            //     \"label\": Taglstcategory[0][categoryDisplaymemeber],\r\n                                            //     \"item\":Taglstcategory[0]} \r\n                                                : undefined ;\r\n            filterSelectedRecord[\"categroyLable\"]= categroyLable;                                                  \r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false, masterData, filterSelectedRecord, Taglstcategory}});             \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading: false}}); \r\n            if (error.response.status === 500) {\r\n                toast.error(error.message);\r\n            }\r\n            else {\r\n                toast.info(error.response.data);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport function getStudyTemplateByCategoryType(inputParam, masterData, filterSelectedRecord, isFilterSubmit) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.url, inputParam.inputData)\r\n        .then(response => {\r\n            masterData = {...masterData, ...response.data};\r\n            if (masterData.lstTemplateMasterlevel) {\r\n                sortData(masterData.lstTemplateMasterlevel, \"ascending\", \"nlevelno\")\r\n            }\r\n            if (masterData.lstTreeversionTemplate) {\r\n                sortData(masterData.lstTreeversionTemplate)\r\n            }\r\n            if (isFilterSubmit){\r\n                masterData[\"SelectedSample\"] = filterSelectedRecord[\"sampletype\"] ? filterSelectedRecord[\"sampletype\"].item :undefined;\r\n                masterData[\"SelectedCategory\"] = filterSelectedRecord[\"categorytype\"] ? filterSelectedRecord[\"categorytype\"].item :undefined;\r\n                masterData[\"SelectedCategoryFilterTextLabel\"] = filterSelectedRecord.masterData[\"SelectedCategoryFilterTextLabel\"] ? filterSelectedRecord.masterData[\"SelectedCategoryFilterTextLabel\"] :undefined;\r\n                 masterData[\"SelectedCategoryFilterValueLabel\"] = filterSelectedRecord.masterData[\"SelectedCategoryFilterValueLabel\"] ? filterSelectedRecord.masterData[\"SelectedCategoryFilterValueLabel\"] :undefined;\r\n                masterData[\"searchedData\"]=undefined;\r\n            }\r\n\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading: false,masterData}});             \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading: false}});        \r\n            if (error.response.status === 500) {\r\n                toast.error(error.message);\r\n            }\r\n            else {\r\n                toast.info(error.response.data);\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}