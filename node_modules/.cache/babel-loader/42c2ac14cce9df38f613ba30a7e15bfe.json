{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { sortData } from '../components/CommonScript'; //, getComboLabelValue, searchData\n\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nimport { intl } from '../components/App';\nimport { transactionStatus } from '../components/Enumeration';\nexport function getMAHolderDetail(maHolder, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"marketauthorisationholder/getMarketAuthorisationHolder\", {\n      nmahcode: maHolder.nmahcode,\n      \"userinfo\": userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response\n        }));\n      }\n    });\n  };\n}\nexport function getMAHolderComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) {\n  return function (dispatch) {\n    if (operation === \"create\" || operation === \"update\" && masterData.SelectedMAHolder.ntransactionstatus !== transactionStatus.RETIRED) {\n      const countryService = rsapi.post(\"country/getCountry\", {\n        userinfo: userInfo\n      });\n      let urlArray = [];\n\n      if (operation === \"create\") {\n        urlArray = [countryService];\n      } else {\n        const holderById = rsapi.post(\"marketauthorisationholder/getActiveMarketAuthorisationHolderById\", {\n          [primaryKeyName]: primaryKeyValue,\n          \"userinfo\": userInfo\n        });\n        urlArray = [countryService, holderById];\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let country = [];\n        let selectedRecord = {};\n\n        if (operation === \"update\") {\n          selectedRecord = response[1].data;\n          country.push({\n            \"value\": response[1].data[\"ncountrycode\"],\n            \"label\": response[1].data[\"scountryname\"]\n          });\n          selectedRecord[\"ncountrycode\"] = country[0];\n        } else {\n          selectedRecord[\"ntransactionstatus\"] = 1;\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            countryList: response[0].data || [],\n            operation,\n            screenName,\n            selectedRecord,\n            openModal: true,\n            ncontrolCode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else {\n      //toast.warn(this.props.formatMessage({ id: masterData.SelectedMAHolder.stranstatus }));\n      toast.warn(intl.formatMessage({\n        id: masterData.SelectedMAHolder.stranstatus\n      }));\n    }\n  };\n}\nexport function getMAHContactComboDataService(inputparam) {\n  return function (dispatch) {\n    if (inputparam.masterData.SelectedMAHolder.ntransactionstatus !== transactionStatus.RETIRED) {\n      const contactData = {\n        \"nmahcontactcode\": inputparam.primaryKeyValue,\n        nmahcode: inputparam.masterData.SelectedMAHolder.nmahcode,\n        \"userinfo\": inputparam.userInfo\n      };\n      const contactService = rsapi.post(\"marketauthorisationholdercontact/getMarketAuthorisationHolderContact\", contactData);\n      let urlArray = [];\n      let selectedId = null;\n\n      if (inputparam.operation === \"create\") {\n        urlArray = [contactService];\n      } else {\n        const contactById = rsapi.post(\"marketauthorisationholdercontact/getActiveMarketAuthorisationHolderContactById\", {\n          [inputparam.primaryKeyField]: inputparam.primaryKeyValue,\n          \"userinfo\": inputparam.userInfo\n        });\n        urlArray = [contactService, contactById];\n        selectedId = inputparam.primaryKeyValue;\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        //let role = [];\n        let selectedRecord = {};\n\n        if (inputparam.operation === \"update\") {\n          selectedRecord = response[1].data;\n          selectedRecord[\"nmahcontactcode\"] = response[1].data[\"nmahcontactcode\"];\n        } else {\n          selectedRecord[\"sphoneno\"] = \"\";\n          selectedRecord[\"smobileno\"] = \"\";\n          selectedRecord[\"sfaxno\"] = \"\";\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            selectedRecord,\n            openChildModal: true,\n            operation: inputparam.operation,\n            screenName: inputparam.screenName,\n            ncontrolCode: inputparam.ncontrolCode,\n            loading: false,\n            selectedId\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else {\n      //toast.warn(this.props.formatMessage({ id: inputparam.masterData.SelectedMAHolder.stranstatus }));\n      toast.warn(intl.formatMessage({\n        id: inputparam.masterData.SelectedMAHolder.stranstatus\n      }));\n    }\n  };\n} // export function filterColumnDataMAHolder(filterValue, masterData, userInfo) {\n//     return function (dispatch) {\n//         let mahCode = 0;\n//         let searchedData = undefined;\n//         if (filterValue === \"\") {\n//             mahCode = masterData[\"MAHolder\"][0].nmahcode;\n//         }\n//         else {\n//             searchedData = searchData(filterValue, masterData[\"MAHolder\"], \"smahname\");\n//             if (searchedData.length > 0) {\n//                 mahCode = searchedData[0].nmahcode;\n//             }\n//             else {\n//                 masterData[\"MAHolder\"] = [];\n//                 masterData[\"MAHContact\"] = [];\n//                 masterData[\"SelectedMAHolder\"] = [];\n//                 masterData[\"searchedData\"] = [];\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData } });\n//             }\n//         }\n//         dispatch(initRequest(true));\n//         return rsapi.post(\"marketauthorisationholder/getMarketAuthorisationHolder\", { nmahcode: mahCode, userinfo: userInfo })\n//             .then(response => {\n//                 masterData[\"MAHolder\"] = response.data[\"MAHolder\"];\n//                 masterData[\"MAHContact\"] = response.data[\"MAHContact\"];\n//                 masterData[\"SelectedMAHolder\"] = response.data[\"SelectedMAHolder\"];\n//                 masterData[\"searchedData\"] = searchedData;\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\n//             })\n//             .catch(error => {\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                 }\n//                 else {\n//                     toast.warn(error.response.data);\n//                 }\n//             })\n//     }\n// }","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/MAHolderAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","toast","Axios","initRequest","intl","transactionStatus","getMAHolderDetail","maHolder","userInfo","masterData","dispatch","post","nmahcode","then","response","data","type","payload","loading","catch","error","status","formatMessage","id","message","warn","getMAHolderComboService","screenName","operation","primaryKeyName","primaryKeyValue","ncontrolCode","SelectedMAHolder","ntransactionstatus","RETIRED","countryService","userinfo","urlArray","holderById","all","country","selectedRecord","push","countryList","openModal","stranstatus","getMAHContactComboDataService","inputparam","contactData","contactService","selectedId","contactById","primaryKeyField","openChildModal"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData } from '../components/CommonScript'//, getComboLabelValue, searchData\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { transactionStatus } from '../components/Enumeration';\r\n\r\nexport function getMAHolderDetail(maHolder, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"marketauthorisationholder/getMarketAuthorisationHolder\", {\r\n            nmahcode: maHolder.nmahcode,\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n\r\n                    toast.warn(intl.formatMessage({ id: error.response }));\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getMAHolderComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n\r\n        if (operation === \"create\" || (operation === \"update\" && masterData.SelectedMAHolder.ntransactionstatus !== transactionStatus.RETIRED)) {\r\n\r\n\r\n\r\n            const countryService = rsapi.post(\"country/getCountry\", { userinfo: userInfo });\r\n\r\n\r\n            let urlArray = [];\r\n            if (operation === \"create\") {\r\n\r\n                urlArray = [countryService];\r\n            }\r\n            else {\r\n                const holderById = rsapi.post(\"marketauthorisationholder/getActiveMarketAuthorisationHolderById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": userInfo });\r\n\r\n                urlArray = [countryService, holderById];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n\r\n                    let country = [];\r\n\r\n                    let selectedRecord = {};\r\n\r\n                    if (operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n\r\n                        country.push({ \"value\": response[1].data[\"ncountrycode\"], \"label\": response[1].data[\"scountryname\"] });\r\n\r\n\r\n                        selectedRecord[\"ncountrycode\"] = country[0];\r\n\r\n\r\n                    }\r\n                    else {\r\n                        selectedRecord[\"ntransactionstatus\"] = 1;\r\n\r\n\r\n                    }\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            countryList: response[0].data || [],\r\n\r\n                            operation, screenName, selectedRecord, openModal: true,\r\n                            ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(this.props.formatMessage({ id: masterData.SelectedMAHolder.stranstatus }));\r\n            toast.warn(intl.formatMessage({ id: masterData.SelectedMAHolder.stranstatus }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getMAHContactComboDataService(inputparam) {\r\n    return function (dispatch) {\r\n        if (inputparam.masterData.SelectedMAHolder.ntransactionstatus !== transactionStatus.RETIRED) {\r\n\r\n            const contactData = {\r\n                \"nmahcontactcode\": inputparam.primaryKeyValue, nmahcode: inputparam.masterData.SelectedMAHolder.nmahcode,\r\n                \"userinfo\": inputparam.userInfo\r\n\r\n            };\r\n            const contactService = rsapi.post(\"marketauthorisationholdercontact/getMarketAuthorisationHolderContact\", contactData);\r\n\r\n            let urlArray = [];\r\n            let selectedId = null;\r\n            if (inputparam.operation === \"create\") {\r\n                urlArray = [contactService];\r\n            }\r\n            else {\r\n                const contactById = rsapi.post(\"marketauthorisationholdercontact/getActiveMarketAuthorisationHolderContactById\", { [inputparam.primaryKeyField]: inputparam.primaryKeyValue, \"userinfo\": inputparam.userInfo });\r\n                urlArray = [contactService, contactById];\r\n                selectedId = inputparam.primaryKeyValue;\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n                    //let role = [];\r\n                    let selectedRecord = {};\r\n                    if (inputparam.operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n\r\n\r\n                        selectedRecord[\"nmahcontactcode\"] = response[1].data[\"nmahcontactcode\"];\r\n\r\n                    } else {\r\n                        selectedRecord[\"sphoneno\"] = \"\";\r\n                        selectedRecord[\"smobileno\"] = \"\";\r\n                        selectedRecord[\"sfaxno\"] = \"\";\r\n                    }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n\r\n                            selectedRecord, openChildModal: true,\r\n                            operation: inputparam.operation, screenName: inputparam.screenName,\r\n                            ncontrolCode: inputparam.ncontrolCode, loading: false, selectedId\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(this.props.formatMessage({ id: inputparam.masterData.SelectedMAHolder.stranstatus }));\r\n            toast.warn(intl.formatMessage({ id: inputparam.masterData.SelectedMAHolder.stranstatus }));\r\n        }\r\n    }\r\n}\r\n\r\n// export function filterColumnDataMAHolder(filterValue, masterData, userInfo) {\r\n//     return function (dispatch) {\r\n\r\n//         let mahCode = 0;\r\n//         let searchedData = undefined;\r\n//         if (filterValue === \"\") {\r\n//             mahCode = masterData[\"MAHolder\"][0].nmahcode;\r\n//         }\r\n//         else {\r\n\r\n//             searchedData = searchData(filterValue, masterData[\"MAHolder\"], \"smahname\");\r\n\r\n//             if (searchedData.length > 0) {\r\n//                 mahCode = searchedData[0].nmahcode;\r\n//             }\r\n//             else {\r\n//                 masterData[\"MAHolder\"] = [];\r\n//                 masterData[\"MAHContact\"] = [];\r\n//                 masterData[\"SelectedMAHolder\"] = [];\r\n\r\n//                 masterData[\"searchedData\"] = [];\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData } });\r\n//             }\r\n\r\n//         }\r\n//         dispatch(initRequest(true));\r\n//         return rsapi.post(\"marketauthorisationholder/getMarketAuthorisationHolder\", { nmahcode: mahCode, userinfo: userInfo })\r\n//             .then(response => {\r\n//                 masterData[\"MAHolder\"] = response.data[\"MAHolder\"];\r\n//                 masterData[\"MAHContact\"] = response.data[\"MAHContact\"];\r\n//                 masterData[\"SelectedMAHolder\"] = response.data[\"SelectedMAHolder\"];\r\n\r\n//                 masterData[\"searchedData\"] = searchedData;\r\n\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//                 if (error.response.status === 500) {\r\n//                     toast.error(error.message);\r\n//                 }\r\n//                 else {\r\n//                     toast.warn(error.response.data);\r\n//                 }\r\n//             })\r\n\r\n\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}