{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\components\\\\add-design\\\\parameter-mapping.component.jsx\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { process } from '@progress/kendo-data-query';\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\nimport DataGrid from '../data-grid/data-grid.component';\n\nclass ParameterMapping extends React.Component {\n  constructor(props) {\n    super(props);\n    const dataState = {\n      skip: 0,\n      take: 10,\n      group: [{\n        field: 'schildparametername'\n      }]\n    };\n    this.state = {\n      dataState: dataState,\n      dataResult: [],\n      selectedRecord: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: this.props.inputColumnList[0].idsName\n      }),\n      name: this.props.inputColumnList[0].dataField,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props[this.props.inputColumnList[0].listName] //optionId={this.props.inputColumnList[0].optionId}\n      //optionValue={this.props.inputColumnList[0].optionValue}\n      ,\n      value: this.props.selectedRecord[this.props.inputColumnList[0].dataField],\n      closeMenuOnSelect: true,\n      isMulti: false,\n      isSearchable: true,\n      isDisabled: false,\n      isMandatory: true,\n      isClearable: false //alphabeticalSort={true}\n      ,\n      onChange: value => this.props.handleChange(value, this.props.inputColumnList[0].dataField),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: this.props.inputColumnList[1].idsName\n      }),\n      name: this.props.inputColumnList[1].dataField,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props[this.props.inputColumnList[1].listName] //optionId={this.props.inputColumnList[1].optionId}\n      //optionValue={this.props.inputColumnList[1].optionValue}\n      ,\n      value: this.props.selectedRecord[this.props.inputColumnList[1].dataField],\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      isMandatory: true,\n      isMulti: false,\n      isClearable: false //alphabeticalSort={true}\n      ,\n      onChange: value => this.props.handleChange(value, this.props.inputColumnList[1].dataField),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: this.props.inputColumnList[2].idsName\n      }),\n      name: this.props.inputColumnList[2].dataField,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props[this.props.inputColumnList[2].listName] //optionId={this.props.inputColumnList[2].optionId}\n      //optionValue={this.props.inputColumnList[2].optionValue}\n      ,\n      value: this.props.selectedRecord[this.props.inputColumnList[2].dataField],\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      isMandatory: true,\n      isMulti: false,\n      isClearable: false // alphabeticalSort={true}\n      ,\n      onChange: value => this.props.handleChange(value, this.props.inputColumnList[2].dataField),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end pad-15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.props.addParametersInDataGrid(this.props.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADD\",\n      defaultMessage: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nreportparametercode\",\n      data: this.props.mappingGridData || [],\n      dataResult: process(this.props.mappingGridData || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: event => this.setState({\n        dataState: event.dataState\n      }) //extractedColumnList={this.props.mappingGridColumnList}\n      ,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      deleteRecordWORights: this.props.deleteRecordWORights,\n      pageable: false,\n      scrollable: \"scrollable\",\n      isActionRequired: true,\n      isToolBarRequired: false,\n      selectedId: null,\n      hideColumnFilter: true,\n      hasControlWithOutRights: true,\n      showdeleteRecordWORights: true,\n      gridHeight: '300px',\n      extractedColumnList: this.props.detailedFieldList,\n      onSwitchChange: this.props.bindActionParameter,\n      groupable: false // switchParam={{methodUrl:''}}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 20\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(ParameterMapping);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/components/add-design/parameter-mapping.component.jsx"],"names":["React","FormattedMessage","injectIntl","process","faSave","FontAwesomeIcon","Button","Row","Col","FormSelectSearch","DataGrid","ParameterMapping","Component","constructor","props","dataState","skip","take","group","field","state","dataResult","selectedRecord","render","intl","formatMessage","id","inputColumnList","idsName","dataField","listName","value","handleChange","addParametersInDataGrid","mappingGridData","event","setState","controlMap","userRoleControlRights","inputParam","userInfo","deleteRecordWORights","detailedFieldList","bindActionParameter"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { FormattedMessage, injectIntl} from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Row, Col} from 'react-bootstrap';\r\n\r\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\r\nimport DataGrid from '../data-grid/data-grid.component';\r\n\r\nclass ParameterMapping extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10,\r\n            group: [{ field: 'schildparametername' }]\r\n        };\r\n        this.state = {\r\n            dataState:dataState, dataResult:[],\r\n            selectedRecord: {},\r\n            \r\n        }\r\n    }\r\n\r\n    render() {    \r\n       return (\r\n            <>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: this.props.inputColumnList[0].idsName })}\r\n                            name={this.props.inputColumnList[0].dataField}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\"})}                             \r\n                            options={this.props[this.props.inputColumnList[0].listName]}\r\n                            //optionId={this.props.inputColumnList[0].optionId}\r\n                            //optionValue={this.props.inputColumnList[0].optionValue}\r\n                            value={this.props.selectedRecord[this.props.inputColumnList[0].dataField] }\r\n                            closeMenuOnSelect={true}  \r\n                            isMulti={false}                        \r\n                            isSearchable={true}\r\n                            isDisabled={false}                          \r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            //alphabeticalSort={true}\r\n                            onChange={value => this.props.handleChange(value, this.props.inputColumnList[0].dataField)}\r\n                           \r\n                        />\r\n\r\n                        <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: this.props.inputColumnList[1].idsName })}\r\n                                name={this.props.inputColumnList[1].dataField}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\"})}                             \r\n                                options={this.props[this.props.inputColumnList[1].listName]}\r\n                                //optionId={this.props.inputColumnList[1].optionId}\r\n                                //optionValue={this.props.inputColumnList[1].optionValue}\r\n                                value={this.props.selectedRecord[this.props.inputColumnList[1].dataField] }\r\n                                closeMenuOnSelect={true}                          \r\n                                isSearchable={true}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isClearable={false}\r\n                                //alphabeticalSort={true}\r\n                                onChange={value => this.props.handleChange(value, this.props.inputColumnList[1].dataField)}\r\n                            \r\n                            />\r\n                    \r\n                        <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: this.props.inputColumnList[2].idsName })}\r\n                                name={this.props.inputColumnList[2].dataField}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\"})}                             \r\n                                options={this.props[this.props.inputColumnList[2].listName]}\r\n                                //optionId={this.props.inputColumnList[2].optionId}\r\n                                //optionValue={this.props.inputColumnList[2].optionValue}\r\n                                value={this.props.selectedRecord[this.props.inputColumnList[2].dataField] }\r\n                                closeMenuOnSelect={true}                          \r\n                                isSearchable={true}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isClearable={false}\r\n                               // alphabeticalSort={true}\r\n                                onChange={value => this.props.handleChange(value, this.props.inputColumnList[2].dataField)}\r\n                            \r\n                            />         \r\n\r\n                        {/* <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: this.props.inputColumnList[3].idsName })}\r\n                                name={this.props.inputColumnList[3].dataField}\r\n                                placeholder=\"Please Select...\"                           \r\n                                options={this.props[this.props.inputColumnList[3].listName]}\r\n                                optionId={this.props.inputColumnList[3].optionId}\r\n                                optionValue={this.props.inputColumnList[3].optionValue}\r\n                                value={this.props.selectedRecord[this.props.inputColumnList[3].dataField] }\r\n                                closeMenuOnSelect={true}                          \r\n                                isSearchable={true}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isClearable={false}\r\n                                alphabeticalSort={true}\r\n                                onChange={value => this.props.handleChange(value, this.props.inputColumnList[3].dataField)}\r\n                            \r\n                            />      */}\r\n                 \r\n                    <div className = \"d-flex justify-content-end pad-15\">\r\n                        <Button className=\"btn-user btn-primary-blue\"\r\n                            onClick={() => this.props.addParametersInDataGrid(this.props.selectedRecord)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                        </Button>\r\n                    </div>\r\n               \r\n                   <DataGrid   primaryKeyField={\"nreportparametercode\"}\r\n                                data={this.props.mappingGridData || []}\r\n                                dataResult={process(this.props.mappingGridData || [], this.state.dataState)}\r\n                                dataState={this.state.dataState}\r\n                                dataStateChange={(event)=> this.setState({dataState: event.dataState})}                                                           \r\n                                //extractedColumnList={this.props.mappingGridColumnList}\r\n                                controlMap={this.props.controlMap}\r\n                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.userInfo}\r\n                                deleteRecordWORights={this.props.deleteRecordWORights} \r\n                                pageable={false}\r\n                                scrollable={\"scrollable\"}                                            \r\n                                isActionRequired={true}\r\n                                isToolBarRequired={false}\r\n                                selectedId={null}\r\n                                hideColumnFilter={true}\r\n                                hasControlWithOutRights={true}\r\n                                showdeleteRecordWORights={true}\r\n                                gridHeight={'300px'}\r\n                                extractedColumnList={this.props.detailedFieldList}\r\n                                onSwitchChange = {this.props.bindActionParameter}\r\n                                groupable={false}\r\n                               // switchParam={{methodUrl:''}}\r\n                            />\r\n                </Col>\r\n            </Row>\r\n            {/* <Row>\r\n                <Col>\r\n\r\n                    <b><FormattedMessage id='IDS_ACTIONPARAMETER' defaultMessage='Action Parameter' /></b>\r\n                   \r\n                    <DataGrid   primaryKeyField={\"nreportparameteractioncode\"}\r\n                                data={this.props.actionGridData || []}\r\n                                dataResult={this.props.actionGridData || []}\r\n                                //dataState={this.state.dataState}\r\n                                //dataStateChange={(event)=> this.setState({dataState: event.dataState})}                                                           \r\n                                extractedColumnList={this.props.actionGridColumnList}\r\n                                controlMap={this.props.controlMap}\r\n                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.userInfo}\r\n                                deleteRecordWORights={this.props.deleteActionParameter} \r\n                                pageable={false}\r\n                                scrollable={\"scrollable\"}                                            \r\n                                isActionRequired={true}\r\n                                isToolBarRequired={false}\r\n                                //selectedId={this.props.selectedId}\r\n                                hideColumnFilter={true}\r\n                                hasControlWithOutRights={true}\r\n                                showdeleteRecordWORights={true}\r\n                                gridHeight={'300px'}\r\n                            />\r\n                    </Col>\r\n                </Row> */}\r\n            </>\r\n        );        \r\n    }\r\n\r\n  \r\n}\r\nexport default injectIntl(ParameterMapping);\r\n"]},"metadata":{},"sourceType":"module"}