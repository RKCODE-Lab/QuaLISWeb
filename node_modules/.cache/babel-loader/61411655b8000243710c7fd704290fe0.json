{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{toast}from\"react-toastify\";import rsapi from\"../rsapi\";import{DEFAULT_RETURN}from\"./LoginTypes\";import{attachmentType,parameterType,transactionStatus}from\"../components/Enumeration\";import{constructOptionList,rearrangeDateFormat,//formatInputDate,\nsortData}from\"../components/CommonScript\";import Axios from\"axios\";import{intl}from\"../components/App\";import{initRequest}from\"./LoginAction\";export var sampleTypeOnChange=function sampleTypeOnChange(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/testgroup\"+inputParam.methodUrl,inputParam.inputData).then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{tempFilterData:inputParam.inputData.tempFilterData,masterData:_objectSpread(_objectSpread({},masterData),response.data),loading:false}});}).catch(function(error){if(error.response.status===409||error.response.status===417){masterData[\"ExistingLinkTable\"]=[];dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});toast.warn(error.response.data);}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);}});};};export var filterTestGroup=function filterTestGroup(inputParam,masterData,searchRef){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/testgroup/filterTestGroup\",inputParam.inputData).then(function(response){sortData(response.data);searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{filterData:inputParam.inputData.filterData,masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),loading:false,historyDataState:_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var createTree=function createTree(selectedRecord,userInfo,selectedNode,ncontrolCode){return function(dispatch){if(selectedRecord.nproductcode){var inputParam={sampletype:selectedRecord.nsampletypecode.item,ncategorycode:selectedRecord.nproductcatcode.value,ntreeversiontempcode:selectedRecord.ntreeversiontempcode.value,userinfo:userInfo,treetemplatemanipulation:selectedNode};dispatch(initRequest(true));rsapi.post(\"/testgroup/getTemplateMasterDetails\",_objectSpread({},inputParam)).then(function(response){var treetempTranstestGroup=response.data[\"TreetempTranstestGroup\"]||[];// const treeMandatoryFields = treetempTranstestGroup.map((item, index) => {\n//         return {\n//             \"idsName\": item.slabelname,\n//             \"dataField\": \"sleveldescription_\" + index,\n//             \"mandatory\": true\n//         }\n// });\n//  const selectedNodeLevel = selectedNode ? selectedNode.slevelcode.split(\"/1\").length-2 : -1;\nvar mandatoryFields=[];treetempTranstestGroup.forEach(function(item,index){if(item.sleveldescription===null){mandatoryFields.push({\"idsName\":item.slabelname,\"dataField\":\"sleveldescription_\"+index,\"mandatory\":true});}});dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",screenName:\"IDS_PROFILETREE\",TreetempTranstestGroup:treetempTranstestGroup,treeMandatoryFields:mandatoryFields,//selectedRecord,\nncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_PRODUCTNOTAVAILABLE\"}));}};};export var editTree=function editTree(operation,selectedNode,userinfo,ncontrolCode,filterData){return function(dispatch){if(selectedNode){dispatch(initRequest(true));rsapi.post(\"/testgroup/getTreeById\",{userinfo:userinfo,treetemplatemanipulation:selectedNode,ntreeversiontempcode:filterData.ntreeversiontempcode.value}).then(function(response){var treetempTranstestGroup=response.data;var treeMandatoryFields=treetempTranstestGroup&&[{\"idsName\":treetempTranstestGroup.slabelname,\"dataField\":\"sleveldescription\",\"mandatory\":true}];dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:operation,screenName:\"IDS_EDITTREE\",selectedRecord:_objectSpread({},treetempTranstestGroup),treeMandatoryFields:treeMandatoryFields,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTPROFILENODETOEDIT\"}));}};};export var addSpecification=function addSpecification(operation,inputParam,ncontrolCode){return function(dispatch){//if (inputParam.selectedNode != null && inputParam.selectedNode.schildnode === \"\") {\nif(inputParam.selectedNode!=null&&inputParam.selectedNode.nnextchildcode===-1){var urlArray=[];if(operation===\"update\"){var testgroupspecification=inputParam.testgroupspecification[0];if(testgroupspecification.napprovalstatus===transactionStatus.CORRECTION||testgroupspecification.napprovalstatus===transactionStatus.DRAFT){urlArray=[rsapi.post(\"timezone/getTimeZone\")];urlArray.push(rsapi.post(\"/testgroup/getActiveSpecificationById\",{testgroupspecification:testgroupspecification,userinfo:inputParam.userinfo,ntreeversiontempcode:inputParam.selectedRecord.ntreeversiontempcode.value}));}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));return;}}else{urlArray=[rsapi.post(\"timezone/getTimeZone\")];urlArray.push(rsapi.post(\"/testgroup/getAddSpecification\",{userinfo:inputParam.userInfo,ntreeversiontempcode:inputParam.selectedRecord.ntreeversiontempcode.value//currentdate: formatInputDate(new Date(), true)\n}));}Axios.all(urlArray).then(function(response){var selectedRecord={};if(operation===\"update\"){selectedRecord=_objectSpread(_objectSpread({sproductname:inputParam.selectedRecord.nproductcode.label},response[1].data),{},{//dexpirydate: new Date(response[1].data[\"sexpirydate\"]),\ndexpirydate:rearrangeDateFormat(inputParam.userinfo,response[1].data[\"sexpirydate\"]),ntzexpirydate:{\"label\":response[1].data.stimezoneid,\"value\":response[1].data.ntzexpirydate}});}else{selectedRecord={sproductname:inputParam.selectedRecord.nproductcode.label,sspecname:inputParam.selectedNode.sleveldescription,//dexpirydate: new Date(response[1].data.ExpiryDate),\ndexpirydate:rearrangeDateFormat(inputParam.userInfo,response[1].data.ExpiryDate),ncomponentrequired:transactionStatus.YES,ntransactionstatus:transactionStatus.ACTIVE,ntzexpirydate:{\"label\":inputParam.userInfo.stimezoneid,\"value\":inputParam.userInfo.ntimezonecode}};}dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:operation,screenName:\"IDS_SPECIFICATION\",selectedRecord:selectedRecord,timeZoneList:constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",false,false,true).get(\"OptionList\"),ncontrolCode:ncontrolCode}});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{if(operation===\"copy\"){toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTLASTLEVELNODETOADDSPEC\"}));}}};};export var addComponent=function addComponent(SelectedSpecification,userInfo,ncontrolCode){return function(dispatch){rsapi.post(\"/testgroup/getAvailableComponent\",{userinfo:userInfo,testgroupspecification:SelectedSpecification}).then(function(response){var testGroupSpecSampleType=response.data[\"TestGroupSpecSampleType\"]||[];if(testGroupSpecSampleType.length>0){var testCategory=constructOptionList(response.data[\"TestCategory\"]||[],\"ntestcategorycode\",\"stestcategoryname\",'ntestcategorycode','ascending',false);var sampleTypeMap=constructOptionList(testGroupSpecSampleType,\"ncomponentcode\",\"scomponentname\",false,false,true);// const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\ndispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",screenName:\"IDS_COMPONENT\",testGroupInputData:{TestCategory:testCategory.get(\"OptionList\"),TestGroupSpecSampleType:sampleTypeMap.get(\"OptionList\"),TestGroupTest:response.data[\"TestGroupTest\"]||[]//TestGroupTestMap.get(\"OptionList\"),\n},selectedRecord:{ncomponentcode:sampleTypeMap.get(\"DefaultValue\"),ntestcategorycode:testCategory.get(\"DefaultValue\")?testCategory.get(\"DefaultValue\"):testCategory.get(\"OptionList\")[0]},ncontrolCode:ncontrolCode}});}else{toast.warn(intl.formatMessage({id:\"IDS_COMPONENTNOTAVAILABLE\"}));}}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var addTestGroupTest=function addTestGroupTest(selectedComponent,userInfo,ncontrolCode,selectedSpecification,filterData){return function(dispatch){if(selectedSpecification){if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){if(selectedComponent){rsapi.post(\"/testgroup/getAvailableTest\",{userinfo:userInfo,testgroupspecsampletype:selectedComponent,ntreeversiontempcode:filterData.ntreeversiontempcode.value}).then(function(response){var testCategory=constructOptionList(response.data[\"TestCategory\"],\"ntestcategorycode\",\"stestcategoryname\",\"ntestcategorycode\",\"ascending\",false);// const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\ndispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",screenName:\"IDS_TEST\",testGroupInputData:{TestCategory:testCategory.get(\"OptionList\"),TestGroupTest:response.data[\"TestGroupTest\"]||[]//TestGroupTestMap.get(\"OptionList\"),\n},selectedRecord:{ntestcategorycode:{label:response.data[\"SelectedTestCategory\"].stestcategoryname,value:response.data[\"SelectedTestCategory\"].stestcategorycode,item:response.data[\"SelectedTestCategory\"]}//ntestcategorycode: testCategory.get(\"DefaultValue\") ? testCategory.get(\"DefaultValue\") : testCategory.get(\"OptionList\")[0]\n},ncontrolCode:ncontrolCode}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_NEEDCOMPONENTTOADDTEST\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};};export var editTestGroupTest=function editTestGroupTest(operation,selectedTest,userInfo,ncontrolCode,selectedSpecification,filterData){return function(dispatch){if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){var ntestcode=selectedTest.ntestcode;var urlArray=[rsapi.post(\"/testgroup/getActiveTestById\",{userinfo:userInfo,testgrouptest:selectedTest,ntreeversiontempcode:filterData.ntreeversiontempcode.value}),rsapi.post(\"/source/getSource\",{userinfo:userInfo}),rsapi.post(\"/testmaster/getSection\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getMethod\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getInstrumentCategory\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getTestAttachment\",{ntestcode:ntestcode,userinfo:userInfo})];Axios.all(urlArray).then(function(response){var editObject=response[0].data.TestGroupTest;var testFileItem=response[0].data.TestGroupTestFile;var selectedRecord=_objectSpread(_objectSpread({},editObject),{},{nsourcecode:{\"label\":editObject.ssourcename,\"value\":editObject.nsourcecode},nsectioncode:{\"label\":editObject.ssectionname,\"value\":editObject.nsectioncode}// nmethodcode: {\n//     \"label\": editObject.smethodname,\n//     \"value\": editObject.nmethodcode\n// },\n// ninstrumentcatcode: {\n//     \"label\": editObject.sinstrumentcatname,\n//     \"value\": editObject.ninstrumentcatcode\n// }\n});if(testFileItem){selectedRecord[\"ntestfilecode\"]={\"label\":testFileItem.sfilename,\"value\":testFileItem.ntestgroupfilecode,item:testFileItem};selectedRecord[\"ntestgroupfilecode\"]=testFileItem.ntestgroupfilecode;}if(editObject.nmethodcode!==-1){selectedRecord[\"nmethodcode\"]={\"label\":editObject.smethodname,\"value\":editObject.nmethodcode};}else{selectedRecord[\"nmethodcode\"]=undefined;}if(editObject.ninstrumentcatcode!==-1){selectedRecord[\"ninstrumentcatcode\"]={\"label\":editObject.sinstrumentcatname,\"value\":editObject.ninstrumentcatcode};}else{selectedRecord[\"ninstrumentcatcode\"]=undefined;}dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:operation,screenName:\"IDS_EDITTESTGROUPTEST\",testGroupInputData:{source:constructOptionList(response[1].data||[],\"nsourcecode\",\"ssourcename\",false,false,true).get(\"OptionList\"),section:constructOptionList(response[2].data||[],\"nsectioncode\",\"ssectionname\",false,false,true).get(\"OptionList\"),method:constructOptionList(response[3].data||[],\"nmethodcode\",\"smethodname\",false,false,true).get(\"OptionList\"),instrumentCategory:constructOptionList(response[4].data||[],\"ninstrumentcatcode\",\"sinstrumentcatname\",false,false,true).get(\"OptionList\"),testFile:constructOptionList(response[5].data||[],\"ntestfilecode\",\"sfilename\",false,false,true).get(\"OptionList\")},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}};};export var editTestGroupParameter=function editTestGroupParameter(operation,selectedParameter,userInfo,ncontrolCode,selectedSpecification,filterData){return function(dispatch){if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){dispatch(initRequest(true));var urlArray=[rsapi.post(\"/testgroup/getActiveParameterById\",{userinfo:userInfo,testgrouptestparameter:selectedParameter,ntreeversiontempcode:filterData.ntreeversiontempcode.value}),rsapi.post(\"/parametertype/getParameterType\",{userinfo:userInfo}),rsapi.post(\"unit/getUnit\",{userinfo:userInfo}),rsapi.post(\"grade/getGrade\",{userinfo:userInfo}),rsapi.post(\"checklist/getApprovedChecklist\",{\"userinfo\":userInfo})];Axios.all(urlArray).then(function(response){var parameterObject=response[0].data.TestGroupTestParameter[0];var predefinedObject=response[0].data.TestGroupTestPredefinedParameter;var characterObject=response[0].data.TestGroupTestCharParameter;var numericObject=response[0].data.TestGroupTestNumericParameter&&response[0].data.TestGroupTestNumericParameter.length>0?response[0].data.TestGroupTestNumericParameter[0]:{};var selectedRecord=_objectSpread(_objectSpread({},parameterObject),{},{nunitcode:{\"label\":parameterObject.sunitname,\"value\":parameterObject.nunitcode},nparametertypecode:{\"label\":parameterObject.sdisplaystatus,\"value\":parameterObject.nparametertypecode},parameterTypeCode:parameterObject.nparametertypecode,nchecklistversioncode:{\"label\":parameterObject.schecklistname,\"value\":parameterObject.nchecklistversioncode},schecklistversionname:parameterObject.schecklistversionname,ntestformulacode:parameterObject.ntestformulacode>0?{\"label\":parameterObject.sformulacalculationdetail,\"value\":parameterObject.ntestformulacode,item:{sformulacalculationdetail:parameterObject.sformulacalculationdetail,ntestformulacode:parameterObject.ntestformulacode,sformulacalculationcode:parameterObject.sformulacalculationcode}}:\"\"});if(characterObject){selectedRecord[\"scharname\"]=characterObject.scharname;selectedRecord[\"ntestgrouptestcharcode\"]=characterObject.ntestgrouptestcharcode;}if(predefinedObject){selectedRecord[\"ntestgrouptestpredefcode\"]=predefinedObject.ntestgrouptestpredefcode;selectedRecord[\"spredefinedname\"]=predefinedObject.spredefinedname;selectedRecord[\"ndefaultstatus\"]=predefinedObject.ndefaultstatus;selectedRecord[\"ngradecode\"]={\"label\":predefinedObject.sdisplaystatus,\"value\":predefinedObject.ngradecode};}if(numericObject){selectedRecord[\"ntestgrouptestnumericcode\"]=numericObject.ntestgrouptestnumericcode;selectedRecord[\"sminlod\"]=numericObject.sminlod;selectedRecord[\"smaxlod\"]=numericObject.smaxlod;selectedRecord[\"sminb\"]=numericObject.sminb;selectedRecord[\"smina\"]=numericObject.smina;selectedRecord[\"smaxa\"]=numericObject.smaxa;selectedRecord[\"smaxb\"]=numericObject.smaxb;selectedRecord[\"sminloq\"]=numericObject.sminloq;selectedRecord[\"smaxloq\"]=numericObject.smaxloq;selectedRecord[\"sdisregard\"]=numericObject.sdisregard;selectedRecord[\"sresultvalue\"]=numericObject.sresultvalue;}var gradeMap=constructOptionList(response[3].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,true);var unitMap=constructOptionList(response[2].data||[],\"nunitcode\",\"sunitname\",false,false,true);var grade=gradeMap.get(\"OptionList\");var unit=unitMap.get(\"OptionList\");var disabled=parameterObject.nparametertypecode===parameterType.NUMERIC?false:true;dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,operation:operation,screenName:\"IDS_PARAMETER\",testGroupInputData:{unit:unit,grade:grade,testFormula:constructOptionList(response[0].data.TestFormula||[],\"ntestformulacode\",\"sformulacalculationdetail\",false,false,true).get(\"OptionList\"),parameterType:constructOptionList(response[1].data||[],\"nparametertypecode\",\"sdisplaystatus\",false,false,true).get(\"OptionList\"),checkListVersion:constructOptionList(response[4].data||[],\"nchecklistversioncode\",\"schecklistname\",false,false,true).get(\"OptionList\"),needRoundingDigit:disabled,needUnit:disabled},parameterData:{grade:grade},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}};};// export const addTestGroupFormula = (selectedParameter, userInfo, ncontrolCode, optionalData) => {\n//     return dispatch => {\n//         const testgroupspecification = optionalData.testgroupspecification;\n//         if(testgroupspecification.napprovalstatus === transactionStatus.DRAFT || \n//             testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\n//             dispatch(initRequest(true));\n//             rsapi.post(\"/testgroup/getTestGroupFormula\", {userinfo: userInfo, testgrouptestparameter: selectedParameter, testgroupspecification})\n//             .then(response=>{\n//                 dispatch({\n//                     type: DEFAULT_RETURN, \n//                     payload:{\n//                         openChildModal: true,\n//                         operation: \"create\",\n//                         screenName: \"IDS_FORMULA\",\n//                         testGroupInputData: {testFormula: response.data},\n//                         selectedRecord: {},\n//                         ncontrolCode\n//                 }});\n//             })\n//             .catch(error=>{\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}});\n//                 if(error.response.status === 409 || error.response.status === 417) {\n//                     toast.warn(error.response.data);\n//                 } else {\n//                     toast.error(error.message)\n//                 }\n//             });\n//         } else {\n//             toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\n//         }\n//     }\n// }\nexport var getTestGroupParameter=function getTestGroupParameter(inputParam){return function(dispatch){rsapi.post(\"/testgroup/getTestGroupTestParameter\",_objectSpread({},inputParam)).then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data)}});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var getComponentBySpecId=function getComponentBySpecId(inputParam,masterData,searchRef){return function(dispatch){var _rsapi$post;rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl,(_rsapi$post={},_defineProperty(_rsapi$post,inputParam.keyName,inputParam.selectedRecord.testgroupspecification[0]),_defineProperty(_rsapi$post,\"userinfo\",inputParam.userInfo),_rsapi$post)).then(function(response){sortData(response.data);searchRef.current.value=\"\";var historyDataState=_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined});dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),historyDataState:historyDataState}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getTestGroupDetails=function getTestGroupDetails(inputParam){return function(dispatch){//...inputParam, \nrsapi.post(\"/testgroup/getTestGroupTest\",{ntestgrouptestcode:parseInt(inputParam['ntestgrouptestcode']),userinfo:inputParam.userInfo})// rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \n//     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\n.then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data)}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getTestGroupComponentDetails=function getTestGroupComponentDetails(inputParam,masterData,searchRef){return function(dispatch){//...inputParam, \nrsapi.post(\"/testgroup/getTestByComponentId\",{testgroupspecsampletype:inputParam['testgroupspecsampletype'],userinfo:inputParam.userInfo})// rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \n//     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\n.then(function(response){sortData(response.data);searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined})}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getSpecification=function getSpecification(inputParam,masterData,searchRef){return function(dispatch){if(inputParam.selectedRecord!==null){rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl,_objectSpread(_objectSpread({},inputParam),{},_defineProperty({},inputParam.keyName,inputParam.selectedRecord))).then(function(response){sortData(response.data);searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),{},{ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,primaryKey:inputParam.primaryKey},response.data),{},{selectedNode:inputParam.selectedRecord,searchedData:undefined}),historyDataState:_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedNode:inputParam.selectedRecord,TestGroupSpecification:[],SelectedSpecification:{},TestGroupTest:[],TestGroupTestParameter:[],TestGroupTestNumericParameter:[],TestGroupTestFormula:[],TestGroupTestPredefinedParameter:[],TestGroupTestCharParameter:[],ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,SelectedTest:{},selectedParameter:{},TestGroupSpecFile:[],TestGroupSpecificationHistory:[],SelectedComponent:undefined})}});}};};export var changeTestCategory=function changeTestCategory(inputParam,testGroupInputData){return function(dispatch){rsapi.post(\"/testgroup/getTestMasterByCategory\",_objectSpread({},inputParam)).then(function(response){sortData(response.data);inputParam.selectedRecord.ntestcode=[];dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:inputParam.selectedRecord,testGroupInputData:_objectSpread(_objectSpread({},testGroupInputData),response.data)}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getSpecificationDetails=function getSpecificationDetails(inputParam,masterData,searchRef){return function(dispatch){rsapi.post(\"/testgroup/get\"+inputParam.methodUrl,_objectSpread({},inputParam.inputData)).then(function(response){searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),screenName:inputParam.screenName}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var editSpecFile=function editSpecFile(inputParam){return function(dispatch){if(inputParam.testgroupspecification.napprovalstatus===transactionStatus.DRAFT||inputParam.testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var urlArray=[rsapi.post(\"/linkmaster/getLinkMaster\",{userinfo:inputParam.userInfo}),rsapi.post(\"/testgroup/getActiveSpecFileById\",{userinfo:inputParam.userInfo,testgroupspecfile:inputParam.selectedRecord,ntreeversiontempcode:inputParam.filterData.ntreeversiontempcode.value})];Axios.all(urlArray).then(function(response){var linkmaster=response[0].data.LinkMaster;var defaultLink=linkmaster.filter(function(item){return item.ndefaultlink===transactionStatus.YES;});var editObject=response[1].data;var nlinkcode={};var link={};if(editObject.nattachmenttypecode===attachmentType.LINK){nlinkcode={\"label\":editObject.slinkname,\"value\":editObject.nlinkcode};link={slinkfilename:editObject.sfilename,slinkdescription:editObject.sdescription,nlinkdefaultstatus:editObject.ndefaultstatus,sfilesize:'',nfilesize:0,ndefaultstatus:4,sfilename:''};}else{nlinkcode=defaultLink.length>0?{\"label\":defaultLink[0].slinkname,\"value\":defaultLink[0].nlinkcode}:\"\";link={slinkfilename:'',slinkdescription:'',sdescription:editObject.sdescription,nlinkdefaultstatus:4,sfilesize:editObject.sfilesize,nfilesize:editObject.nfilesize,ndefaultstatus:editObject.ndefaultstatus,sfilename:editObject.sfilename};}var selectedRecord=_objectSpread(_objectSpread({},link),{},{nallotedspeccode:editObject.nallotedspeccode,nspecfilecode:editObject.nspecfilecode,stypename:editObject.stypename,nattachmenttypecode:editObject.nattachmenttypecode,nlinkcode:nlinkcode// disabled: true\n});dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"update\",screenName:\"IDS_SPECFILE\",editFiles:Object.values(editObject).length>0&&editObject.nattachmenttypecode===attachmentType.FTP?editObject:{},selectedRecord:selectedRecord,ncontrolCode:inputParam.ncontrolCode}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}};};export var addTestGroupCodedResult=function addTestGroupCodedResult(operation,paramdata,userInfo,ncontrolCode,optionalData){return function(dispatch){var testgroupspecification=optionalData.testgroupspecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){dispatch(initRequest(true));var urlArray=[rsapi.post(\"grade/getGrade\",{\"userinfo\":userInfo})];if(operation===\"update\"){urlArray.push(rsapi.post(\"testgroup/getActivePredefinedParameterById\",{testgrouptestpredefinedparameter:paramdata,\"userinfo\":userInfo,testgroupspecification:testgroupspecification}));}Axios.all(urlArray).then(function(response){var selectedRecord={};var gradeMap=constructOptionList(response[0].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,true);var grade=gradeMap.get(\"OptionList\");if(operation===\"update\"){var editCodedResult=response[1].data;selectedRecord={ntestgrouptestpredefcode:paramdata[\"ntestgrouptestpredefcode\"],ntestgrouptestparametercode:paramdata[\"ntestgrouptestparametercode\"],ngradecode:{\"label\":editCodedResult[\"sdisplaystatus\"],\"value\":editCodedResult[\"ngradecode\"]},spredefinedname:editCodedResult[\"spredefinedname\"]};}else{selectedRecord={ngradecode:gradeMap.get(\"DefaultValue\")// {\n//     \"value\": grade[0].ngradecode,\n//     \"label\": grade[0][\"sdisplaystatus\"]\n// }\n};}dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:false,operation:operation,screenName:\"IDS_CODEDRESULT\",parameterData:{grade:grade,needCodedResult:false},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}};};export var viewTestGroupCheckList=function viewTestGroupCheckList(inputParam,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"checklist/viewTemplate\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openTemplateModal:true,testGroupCheckList:{templateData:response.data},loading:false,selectedRecord:{}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var reportSpecification=function reportSpecification(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"testgroup/specReportGenerate\",_objectSpread(_objectSpread({},inputParam),{},{ntreeversiontempcode:inputParam.filterData.ntreeversiontempcode.value})).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false,showConfirmAlert:false}});document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var retireSpecification=function retireSpecification(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"testgroup/retireSpec\",_objectSpread({},inputParam)).then(function(response){// const TestGroupSpecification = response.data.TestGroupSpecificationHistory ;\nsortData(response.data);masterData=_objectSpread(_objectSpread({},masterData),response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/TestGroupAction.js"],"names":["toast","rsapi","DEFAULT_RETURN","attachmentType","parameterType","transactionStatus","constructOptionList","rearrangeDateFormat","sortData","Axios","intl","initRequest","sampleTypeOnChange","inputParam","masterData","dispatch","post","methodUrl","inputData","then","response","data","type","payload","tempFilterData","loading","catch","error","status","warn","message","filterTestGroup","searchRef","current","value","filterData","searchedData","undefined","historyDataState","sort","filter","createTree","selectedRecord","userInfo","selectedNode","ncontrolCode","nproductcode","sampletype","nsampletypecode","item","ncategorycode","nproductcatcode","ntreeversiontempcode","userinfo","treetemplatemanipulation","treetempTranstestGroup","mandatoryFields","forEach","index","sleveldescription","push","slabelname","openModal","operation","screenName","TreetempTranstestGroup","treeMandatoryFields","formatMessage","id","editTree","addSpecification","nnextchildcode","urlArray","testgroupspecification","napprovalstatus","CORRECTION","DRAFT","all","sproductname","label","dexpirydate","ntzexpirydate","stimezoneid","sspecname","ExpiryDate","ncomponentrequired","YES","ntransactionstatus","ACTIVE","ntimezonecode","timeZoneList","get","addComponent","SelectedSpecification","testGroupSpecSampleType","length","testCategory","sampleTypeMap","testGroupInputData","TestCategory","TestGroupSpecSampleType","TestGroupTest","ncomponentcode","ntestcategorycode","addTestGroupTest","selectedComponent","selectedSpecification","testgroupspecsampletype","stestcategoryname","stestcategorycode","editTestGroupTest","selectedTest","ntestcode","testgrouptest","editObject","testFileItem","TestGroupTestFile","nsourcecode","ssourcename","nsectioncode","ssectionname","sfilename","ntestgroupfilecode","nmethodcode","smethodname","ninstrumentcatcode","sinstrumentcatname","source","section","method","instrumentCategory","testFile","editTestGroupParameter","selectedParameter","testgrouptestparameter","parameterObject","TestGroupTestParameter","predefinedObject","TestGroupTestPredefinedParameter","characterObject","TestGroupTestCharParameter","numericObject","TestGroupTestNumericParameter","nunitcode","sunitname","nparametertypecode","sdisplaystatus","parameterTypeCode","nchecklistversioncode","schecklistname","schecklistversionname","ntestformulacode","sformulacalculationdetail","sformulacalculationcode","scharname","ntestgrouptestcharcode","ntestgrouptestpredefcode","spredefinedname","ndefaultstatus","ngradecode","ntestgrouptestnumericcode","sminlod","smaxlod","sminb","smina","smaxa","smaxb","sminloq","smaxloq","sdisregard","sresultvalue","gradeMap","unitMap","grade","unit","disabled","NUMERIC","openChildModal","testFormula","TestFormula","checkListVersion","needRoundingDigit","needUnit","parameterData","getTestGroupParameter","getComponentBySpecId","keyName","getTestGroupDetails","ntestgrouptestcode","parseInt","getTestGroupComponentDetails","getSpecification","ActiveKey","activeKey","FocusKey","focusKey","primaryKey","TestGroupSpecification","TestGroupTestFormula","SelectedTest","TestGroupSpecFile","TestGroupSpecificationHistory","SelectedComponent","changeTestCategory","getSpecificationDetails","editSpecFile","testgroupspecfile","linkmaster","LinkMaster","defaultLink","ndefaultlink","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","slinkdescription","sdescription","nlinkdefaultstatus","sfilesize","nfilesize","nallotedspeccode","nspecfilecode","stypename","editFiles","Object","values","FTP","addTestGroupCodedResult","paramdata","optionalData","testgrouptestpredefinedparameter","editCodedResult","ntestgrouptestparametercode","showSaveContinue","needCodedResult","viewTestGroupCheckList","openTemplateModal","testGroupCheckList","templateData","reportSpecification","loadEsign","showConfirmAlert","document","getElementById","setAttribute","filepath","click","retireSpecification"],"mappings":"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","sourcesContent":["import {\r\n    toast\r\n} from \"react-toastify\";\r\nimport rsapi from \"../rsapi\";\r\nimport {\r\n    DEFAULT_RETURN\r\n} from \"./LoginTypes\";\r\nimport {\r\n    attachmentType,\r\n    parameterType,\r\n    transactionStatus\r\n} from \"../components/Enumeration\";\r\nimport {\r\n    constructOptionList,\r\n    rearrangeDateFormat,\r\n    //formatInputDate,\r\n    sortData\r\n} from \"../components/CommonScript\";\r\nimport Axios from \"axios\";\r\nimport {\r\n    intl\r\n} from \"../components/App\";\r\nimport {\r\n    initRequest\r\n} from \"./LoginAction\";\r\n\r\n\r\nexport const sampleTypeOnChange = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        tempFilterData: inputParam.inputData.tempFilterData,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data\r\n                        },\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    masterData[\"ExistingLinkTable\"] = [];\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const filterTestGroup = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/filterTestGroup\", inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                searchRef.current.value = \"\";\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        filterData: inputParam.inputData.filterData,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        loading: false,\r\n                        historyDataState: {\r\n                            ...inputParam.historyDataState,\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const createTree = (selectedRecord, userInfo, selectedNode, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        if (selectedRecord.nproductcode) {\r\n            const inputParam = {\r\n                sampletype: selectedRecord.nsampletypecode.item,\r\n                ncategorycode: selectedRecord.nproductcatcode.value,\r\n                ntreeversiontempcode: selectedRecord.ntreeversiontempcode.value,\r\n                userinfo: userInfo,\r\n                treetemplatemanipulation: selectedNode\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/testgroup/getTemplateMasterDetails\", {\r\n                    ...inputParam\r\n                })\r\n                .then(response => {\r\n                    const treetempTranstestGroup = response.data[\"TreetempTranstestGroup\"] || [];\r\n\r\n                    // const treeMandatoryFields = treetempTranstestGroup.map((item, index) => {\r\n                    //         return {\r\n                    //             \"idsName\": item.slabelname,\r\n                    //             \"dataField\": \"sleveldescription_\" + index,\r\n                    //             \"mandatory\": true\r\n                    //         }\r\n                    // });\r\n\r\n                    //  const selectedNodeLevel = selectedNode ? selectedNode.slevelcode.split(\"/1\").length-2 : -1;\r\n                    const mandatoryFields = [];\r\n                    treetempTranstestGroup.forEach((item, index) => {\r\n                        if (item.sleveldescription === null) {\r\n                            mandatoryFields.push({\r\n                                \"idsName\": item.slabelname,\r\n                                \"dataField\": \"sleveldescription_\" + index,\r\n                                \"mandatory\": true\r\n                            })\r\n                        }\r\n                    });\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openModal: true,\r\n                            operation: \"create\",\r\n                            screenName: \"IDS_PROFILETREE\",\r\n                            TreetempTranstestGroup: treetempTranstestGroup,\r\n                            treeMandatoryFields: mandatoryFields,\r\n                            //selectedRecord,\r\n                            ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_PRODUCTNOTAVAILABLE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTree = (operation, selectedNode, userinfo, ncontrolCode,filterData) => {\r\n    return (dispatch) => {\r\n        if (selectedNode) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/testgroup/getTreeById\", {\r\n                    userinfo,\r\n                    treetemplatemanipulation: selectedNode,\r\n                    ntreeversiontempcode:filterData.ntreeversiontempcode.value\r\n                })\r\n                .then(response => {\r\n                    const treetempTranstestGroup = response.data;\r\n                    const treeMandatoryFields = treetempTranstestGroup && [{\r\n                        \"idsName\": treetempTranstestGroup.slabelname,\r\n                        \"dataField\": \"sleveldescription\",\r\n                        \"mandatory\": true\r\n                    }];\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openModal: true,\r\n                            operation: operation,\r\n                            screenName: \"IDS_EDITTREE\",\r\n                            selectedRecord: {\r\n                                ...treetempTranstestGroup\r\n                            },\r\n                            treeMandatoryFields,\r\n                            ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTPROFILENODETOEDIT\"\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\nexport const addSpecification = (operation, inputParam, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        //if (inputParam.selectedNode != null && inputParam.selectedNode.schildnode === \"\") {\r\n        if (inputParam.selectedNode != null && inputParam.selectedNode.nnextchildcode === -1) {\r\n            let urlArray=[];\r\n            if (operation === \"update\") {\r\n                const testgroupspecification = inputParam.testgroupspecification[0];\r\n                if (testgroupspecification.napprovalstatus === transactionStatus.CORRECTION ||\r\n                    testgroupspecification.napprovalstatus === transactionStatus.DRAFT) {\r\n                         urlArray = [rsapi.post(\"timezone/getTimeZone\")];\r\n\r\n                    urlArray.push(rsapi.post(\"/testgroup/getActiveSpecificationById\", {\r\n                        testgroupspecification,\r\n                        userinfo: inputParam.userinfo,\r\n                        ntreeversiontempcode:inputParam.selectedRecord.ntreeversiontempcode.value\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                    }));\r\n                    return;\r\n                }\r\n            \r\n            } else {\r\n             urlArray = [rsapi.post(\"timezone/getTimeZone\")];\r\n\r\n            urlArray.push(rsapi.post(\"/testgroup/getAddSpecification\", {\r\n                userinfo: inputParam.userInfo,\r\n                ntreeversiontempcode:inputParam.selectedRecord.ntreeversiontempcode.value\r\n                //currentdate: formatInputDate(new Date(), true)\r\n            }));\r\n       \r\n               \r\n            }\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let selectedRecord = {};\r\n                    if (operation === \"update\") {\r\n                        selectedRecord = {\r\n                            sproductname: inputParam.selectedRecord.nproductcode.label,\r\n                            ...response[1].data,\r\n                            //dexpirydate: new Date(response[1].data[\"sexpirydate\"]),\r\n                            dexpirydate: rearrangeDateFormat(inputParam.userinfo, response[1].data[\"sexpirydate\"]),\r\n                            ntzexpirydate: {\r\n                                \"label\": response[1].data.stimezoneid,\r\n                                \"value\": response[1].data.ntzexpirydate\r\n                            }\r\n                        };\r\n                    } else {\r\n                        selectedRecord = {\r\n                            sproductname: inputParam.selectedRecord.nproductcode.label,\r\n                            sspecname: inputParam.selectedNode.sleveldescription,\r\n                            //dexpirydate: new Date(response[1].data.ExpiryDate),\r\n                            dexpirydate: rearrangeDateFormat(inputParam.userInfo, response[1].data.ExpiryDate),\r\n                            ncomponentrequired: transactionStatus.YES,\r\n                            ntransactionstatus: transactionStatus.ACTIVE,\r\n                            ntzexpirydate: {\r\n                                \"label\": inputParam.userInfo.stimezoneid,\r\n                                \"value\": inputParam.userInfo.ntimezonecode\r\n                            }\r\n                        };\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openModal: true,\r\n                            operation: operation,\r\n                            screenName: \"IDS_SPECIFICATION\",\r\n                            selectedRecord,\r\n                            timeZoneList: constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", false, false, true).get(\"OptionList\"),\r\n                            ncontrolCode\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            if (operation === \"copy\") {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SELECTSPECIFICATION\"\r\n                }));\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SELECTLASTLEVELNODETOADDSPEC\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addComponent = (SelectedSpecification, userInfo, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/getAvailableComponent\", {\r\n                userinfo: userInfo,\r\n                testgroupspecification: SelectedSpecification\r\n            })\r\n            .then(response => {\r\n                const testGroupSpecSampleType = response.data[\"TestGroupSpecSampleType\"] || [];\r\n                if (testGroupSpecSampleType.length > 0) {\r\n                    const testCategory = constructOptionList(response.data[\"TestCategory\"] || [], \"ntestcategorycode\", \"stestcategoryname\", 'ntestcategorycode', 'ascending', false);\r\n                    const sampleTypeMap = constructOptionList(testGroupSpecSampleType, \"ncomponentcode\", \"scomponentname\", false, false, true);\r\n                    // const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openModal: true,\r\n                            operation: \"create\",\r\n                            screenName: \"IDS_COMPONENT\",\r\n                            testGroupInputData: {\r\n                                TestCategory: testCategory.get(\"OptionList\"),\r\n                                TestGroupSpecSampleType: sampleTypeMap.get(\"OptionList\"),\r\n                                TestGroupTest: response.data[\"TestGroupTest\"] || [] //TestGroupTestMap.get(\"OptionList\"),\r\n                            },\r\n                            selectedRecord: {\r\n                                ncomponentcode: sampleTypeMap.get(\"DefaultValue\"),\r\n                                ntestcategorycode: testCategory.get(\"DefaultValue\") ? testCategory.get(\"DefaultValue\") : testCategory.get(\"OptionList\")[0]\r\n                            },\r\n                            ncontrolCode\r\n                        }\r\n                    });\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: \"IDS_COMPONENTNOTAVAILABLE\"\r\n                    }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const addTestGroupTest = (selectedComponent, userInfo, ncontrolCode, selectedSpecification,filterData ) => {\r\n    return dispatch => {\r\n        if (selectedSpecification) {\r\n            if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                if (selectedComponent) {\r\n                    rsapi.post(\"/testgroup/getAvailableTest\", {\r\n                            userinfo: userInfo,\r\n                            testgroupspecsampletype: selectedComponent,\r\n                            ntreeversiontempcode :filterData.ntreeversiontempcode.value\r\n                        })\r\n                        .then(response => {\r\n                            const testCategory = constructOptionList(response.data[\"TestCategory\"], \"ntestcategorycode\", \"stestcategoryname\", \"ntestcategorycode\", \"ascending\", false);\r\n                            // const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN,\r\n                                payload: {\r\n                                    openModal: true,\r\n                                    operation: \"create\",\r\n                                    screenName: \"IDS_TEST\",\r\n                                    testGroupInputData: {\r\n                                        TestCategory: testCategory.get(\"OptionList\"),\r\n                                        TestGroupTest: response.data[\"TestGroupTest\"] || [] //TestGroupTestMap.get(\"OptionList\"),\r\n                                    },\r\n                                    selectedRecord: {\r\n                                        ntestcategorycode: {\r\n                                            label: response.data[\"SelectedTestCategory\"].stestcategoryname,\r\n                                            value: response.data[\"SelectedTestCategory\"].stestcategorycode,\r\n                                            item: response.data[\"SelectedTestCategory\"]\r\n                                        }\r\n                                        //ntestcategorycode: testCategory.get(\"DefaultValue\") ? testCategory.get(\"DefaultValue\") : testCategory.get(\"OptionList\")[0]\r\n                                    },\r\n                                    ncontrolCode\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch(error => {\r\n                            if (error.response.status === 409 || error.response.status === 417) {\r\n                                toast.warn(error.response.data);\r\n                            } else {\r\n                                toast.error(error.message);\r\n                            }\r\n                        });\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: \"IDS_NEEDCOMPONENTTOADDTEST\"\r\n                    }));\r\n                }\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n         \r\n}\r\n   else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTSPECIFICATION\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTestGroupTest = (operation, selectedTest, userInfo, ncontrolCode, selectedSpecification,filterData) => {\r\n    return dispatch => {\r\n        if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT ||\r\n            selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n            const ntestcode = selectedTest.ntestcode;\r\n            const urlArray = [\r\n                rsapi.post(\"/testgroup/getActiveTestById\", {\r\n                    userinfo: userInfo,\r\n                    testgrouptest: selectedTest,\r\n                    ntreeversiontempcode:filterData.ntreeversiontempcode.value\r\n                }),\r\n                rsapi.post(\"/source/getSource\", {\r\n                    userinfo: userInfo\r\n                }),\r\n                rsapi.post(\"/testmaster/getSection\", {\r\n                    ntestcode,\r\n                    userinfo: userInfo\r\n                }),\r\n                rsapi.post(\"/testmaster/getMethod\", {\r\n                    ntestcode,\r\n                    userinfo: userInfo\r\n                }),\r\n                rsapi.post(\"/testmaster/getInstrumentCategory\", {\r\n                    ntestcode,\r\n                    userinfo: userInfo\r\n                }),\r\n                rsapi.post(\"/testmaster/getTestAttachment\", {\r\n                    ntestcode,\r\n                    userinfo: userInfo\r\n                })\r\n            ]\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    const editObject = response[0].data.TestGroupTest;\r\n                    const testFileItem = response[0].data.TestGroupTestFile;\r\n\r\n\r\n                    const selectedRecord = {\r\n                        ...editObject,\r\n                        nsourcecode: {\r\n                            \"label\": editObject.ssourcename,\r\n                            \"value\": editObject.nsourcecode\r\n                        },\r\n                        nsectioncode: {\r\n                            \"label\": editObject.ssectionname,\r\n                            \"value\": editObject.nsectioncode\r\n                        },\r\n                        // nmethodcode: {\r\n                        //     \"label\": editObject.smethodname,\r\n                        //     \"value\": editObject.nmethodcode\r\n                        // },\r\n                        // ninstrumentcatcode: {\r\n                        //     \"label\": editObject.sinstrumentcatname,\r\n                        //     \"value\": editObject.ninstrumentcatcode\r\n                        // }\r\n                    };\r\n                    if (testFileItem) {\r\n                        selectedRecord[\"ntestfilecode\"] = {\r\n                            \"label\": testFileItem.sfilename,\r\n                            \"value\": testFileItem.ntestgroupfilecode,\r\n                            item: testFileItem\r\n                        };\r\n                        selectedRecord[\"ntestgroupfilecode\"] = testFileItem.ntestgroupfilecode\r\n                    }\r\n                    if (editObject.nmethodcode !== -1) {\r\n                        selectedRecord[\"nmethodcode\"] = {\r\n                            \"label\": editObject.smethodname,\r\n                            \"value\": editObject.nmethodcode\r\n                        }\r\n                    } else {\r\n                        selectedRecord[\"nmethodcode\"] = undefined;\r\n                    }\r\n                    if (editObject.ninstrumentcatcode !== -1) {\r\n                        selectedRecord[\"ninstrumentcatcode\"] = {\r\n                            \"label\": editObject.sinstrumentcatname,\r\n                            \"value\": editObject.ninstrumentcatcode\r\n                        }\r\n                    } else {\r\n                        selectedRecord[\"ninstrumentcatcode\"] = undefined;\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openModal: true,\r\n                            operation: operation,\r\n                            screenName: \"IDS_EDITTESTGROUPTEST\",\r\n                            testGroupInputData: {\r\n                                source: constructOptionList(response[1].data || [], \"nsourcecode\", \"ssourcename\", false, false, true).get(\"OptionList\"),\r\n                                section: constructOptionList(response[2].data || [], \"nsectioncode\", \"ssectionname\", false, false, true).get(\"OptionList\"),\r\n                                method: constructOptionList(response[3].data || [], \"nmethodcode\", \"smethodname\", false, false, true).get(\"OptionList\"),\r\n                                instrumentCategory: constructOptionList(response[4].data || [], \"ninstrumentcatcode\", \"sinstrumentcatname\", false, false, true).get(\"OptionList\"),\r\n                                testFile: constructOptionList(response[5].data || [], \"ntestfilecode\", \"sfilename\", false, false, true).get(\"OptionList\")\r\n                            },\r\n                            selectedRecord,\r\n                            ncontrolCode\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTestGroupParameter = (operation, selectedParameter, userInfo, ncontrolCode, selectedSpecification,filterData) => {\r\n    return dispatch => {\r\n        if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT ||\r\n            selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n            dispatch(initRequest(true));\r\n            const urlArray = [\r\n                rsapi.post(\"/testgroup/getActiveParameterById\", {\r\n                    userinfo: userInfo,\r\n                    testgrouptestparameter: selectedParameter,\r\n                    ntreeversiontempcode:filterData.ntreeversiontempcode.value\r\n                }),\r\n                rsapi.post(\"/parametertype/getParameterType\", {\r\n                    userinfo: userInfo\r\n                }),\r\n                rsapi.post(\"unit/getUnit\", {\r\n                    userinfo: userInfo\r\n                }),\r\n                rsapi.post(\"grade/getGrade\", {\r\n                    userinfo: userInfo\r\n                }),\r\n                rsapi.post(\"checklist/getApprovedChecklist\", {\r\n                    \"userinfo\": userInfo\r\n                })\r\n            ]\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    const parameterObject = response[0].data.TestGroupTestParameter[0];\r\n                    const predefinedObject = response[0].data.TestGroupTestPredefinedParameter;\r\n                    const characterObject = response[0].data.TestGroupTestCharParameter;\r\n                    const numericObject = response[0].data.TestGroupTestNumericParameter && response[0].data.TestGroupTestNumericParameter.length > 0 ? response[0].data.TestGroupTestNumericParameter[0] : {};\r\n                    const selectedRecord = {\r\n                        ...parameterObject,\r\n                        nunitcode: {\r\n                            \"label\": parameterObject.sunitname,\r\n                            \"value\": parameterObject.nunitcode\r\n                        },\r\n                        nparametertypecode: {\r\n                            \"label\": parameterObject.sdisplaystatus,\r\n                            \"value\": parameterObject.nparametertypecode\r\n                        },\r\n                        parameterTypeCode: parameterObject.nparametertypecode,\r\n                        nchecklistversioncode: {\r\n                            \"label\": parameterObject.schecklistname,\r\n                            \"value\": parameterObject.nchecklistversioncode\r\n                        },\r\n                        schecklistversionname: parameterObject.schecklistversionname,\r\n                        ntestformulacode: parameterObject.ntestformulacode > 0 ? {\r\n                            \"label\": parameterObject.sformulacalculationdetail,\r\n                            \"value\": parameterObject.ntestformulacode,\r\n                            item: {\r\n                                sformulacalculationdetail: parameterObject.sformulacalculationdetail,\r\n                                ntestformulacode: parameterObject.ntestformulacode,\r\n                                sformulacalculationcode: parameterObject.sformulacalculationcode\r\n                            }\r\n                        } : \"\"\r\n                    };\r\n                    if (characterObject) {\r\n                        selectedRecord[\"scharname\"] = characterObject.scharname;\r\n                        selectedRecord[\"ntestgrouptestcharcode\"] = characterObject.ntestgrouptestcharcode;\r\n                    }\r\n                    if (predefinedObject) {\r\n                        selectedRecord[\"ntestgrouptestpredefcode\"] = predefinedObject.ntestgrouptestpredefcode;\r\n                        selectedRecord[\"spredefinedname\"] = predefinedObject.spredefinedname;\r\n                        selectedRecord[\"ndefaultstatus\"] = predefinedObject.ndefaultstatus;\r\n                        selectedRecord[\"ngradecode\"] = {\r\n                            \"label\": predefinedObject.sdisplaystatus,\r\n                            \"value\": predefinedObject.ngradecode\r\n                        };\r\n                    }\r\n                    if (numericObject) {\r\n                        selectedRecord[\"ntestgrouptestnumericcode\"] = numericObject.ntestgrouptestnumericcode;\r\n                        selectedRecord[\"sminlod\"] = numericObject.sminlod;\r\n                        selectedRecord[\"smaxlod\"] = numericObject.smaxlod;\r\n                        selectedRecord[\"sminb\"] = numericObject.sminb;\r\n                        selectedRecord[\"smina\"] = numericObject.smina;\r\n                        selectedRecord[\"smaxa\"] = numericObject.smaxa;\r\n                        selectedRecord[\"smaxb\"] = numericObject.smaxb;\r\n                        selectedRecord[\"sminloq\"] = numericObject.sminloq;\r\n                        selectedRecord[\"smaxloq\"] = numericObject.smaxloq;\r\n                        selectedRecord[\"sdisregard\"] = numericObject.sdisregard;\r\n                        selectedRecord[\"sresultvalue\"] = numericObject.sresultvalue;\r\n                    }\r\n                    const gradeMap = constructOptionList(response[3].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, true);\r\n                    const unitMap = constructOptionList(response[2].data || [], \"nunitcode\", \"sunitname\", false, false, true);\r\n                    const grade = gradeMap.get(\"OptionList\");\r\n                    const unit = unitMap.get(\"OptionList\");\r\n                    const disabled = parameterObject.nparametertypecode === parameterType.NUMERIC ? false : true;\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openChildModal: true,\r\n                            operation: operation,\r\n                            screenName: \"IDS_PARAMETER\",\r\n                            testGroupInputData: {\r\n                                unit,\r\n                                grade,\r\n                                testFormula: constructOptionList(response[0].data.TestFormula || [], \"ntestformulacode\", \"sformulacalculationdetail\", false, false, true).get(\"OptionList\"),\r\n                                parameterType: constructOptionList(response[1].data || [], \"nparametertypecode\", \"sdisplaystatus\", false, false, true).get(\"OptionList\"),\r\n                                checkListVersion: constructOptionList(response[4].data || [], \"nchecklistversioncode\", \"schecklistname\", false, false, true).get(\"OptionList\"),\r\n                                needRoundingDigit: disabled,\r\n                                needUnit: disabled\r\n                            },\r\n                            parameterData: {\r\n                                grade\r\n                            },\r\n                            selectedRecord,\r\n                            ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message);\r\n                    }\r\n                });\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\n// export const addTestGroupFormula = (selectedParameter, userInfo, ncontrolCode, optionalData) => {\r\n//     return dispatch => {\r\n//         const testgroupspecification = optionalData.testgroupspecification;\r\n//         if(testgroupspecification.napprovalstatus === transactionStatus.DRAFT || \r\n//             testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n//             dispatch(initRequest(true));\r\n//             rsapi.post(\"/testgroup/getTestGroupFormula\", {userinfo: userInfo, testgrouptestparameter: selectedParameter, testgroupspecification})\r\n//             .then(response=>{\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN, \r\n//                     payload:{\r\n//                         openChildModal: true,\r\n//                         operation: \"create\",\r\n//                         screenName: \"IDS_FORMULA\",\r\n//                         testGroupInputData: {testFormula: response.data},\r\n//                         selectedRecord: {},\r\n//                         ncontrolCode\r\n//                 }});\r\n//             })\r\n//             .catch(error=>{\r\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}});\r\n//                 if(error.response.status === 409 || error.response.status === 417) {\r\n//                     toast.warn(error.response.data);\r\n//                 } else {\r\n//                     toast.error(error.message)\r\n//                 }\r\n//             });\r\n//         } else {\r\n//             toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport const getTestGroupParameter = (inputParam) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/getTestGroupTestParameter\", {\r\n                ...inputParam\r\n            })\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getComponentBySpecId = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/\" + inputParam.operation + inputParam.methodUrl, {\r\n                [inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0],\r\n                userinfo: inputParam.userInfo\r\n            })\r\n            .then(response => {\r\n                sortData(response.data);\r\n                searchRef.current.value = \"\";\r\n                const historyDataState = {\r\n                    ...inputParam.historyDataState,\r\n                    sort: undefined,\r\n                    filter: undefined\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        historyDataState\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getTestGroupDetails = (inputParam) => {\r\n    return (dispatch) => { //...inputParam, \r\n        rsapi.post(\"/testgroup/getTestGroupTest\", {\r\n                ntestgrouptestcode: parseInt(inputParam['ntestgrouptestcode']),\r\n                userinfo: inputParam.userInfo\r\n            })\r\n            // rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \r\n            //     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getTestGroupComponentDetails = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => { //...inputParam, \r\n        rsapi.post(\"/testgroup/getTestByComponentId\", {\r\n                testgroupspecsampletype: inputParam['testgroupspecsampletype'],\r\n                userinfo: inputParam.userInfo\r\n            })\r\n            // rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \r\n            //     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\r\n            .then(response => {\r\n                sortData(response.data);\r\n                searchRef.current.value = \"\";\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getSpecification = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        if (inputParam.selectedRecord !== null) {\r\n            rsapi.post(\"/testgroup/\" + inputParam.operation + inputParam.methodUrl, {\r\n                    ...inputParam,\r\n                    [inputParam.keyName]: inputParam.selectedRecord\r\n                })\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    searchRef.current.value = \"\";\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData: {\r\n                                ...masterData,\r\n                                ActiveKey: inputParam.activeKey,\r\n                                FocusKey: inputParam.focusKey,\r\n                                primaryKey: inputParam.primaryKey,\r\n                                ...response.data,\r\n                                selectedNode: inputParam.selectedRecord,\r\n                                searchedData: undefined,\r\n\r\n                            },\r\n                            historyDataState: {\r\n                                ...inputParam.historyDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    masterData: {\r\n                        ...masterData,\r\n                        selectedNode: inputParam.selectedRecord,\r\n                        TestGroupSpecification: [],\r\n                        SelectedSpecification: {},\r\n                        TestGroupTest: [],\r\n                        TestGroupTestParameter: [],\r\n                        TestGroupTestNumericParameter: [],\r\n                        TestGroupTestFormula: [],\r\n                        TestGroupTestPredefinedParameter: [],\r\n                        TestGroupTestCharParameter: [],\r\n                        ActiveKey: inputParam.activeKey,\r\n                        FocusKey: inputParam.focusKey,\r\n                        SelectedTest: {},\r\n                        selectedParameter: {},\r\n                        TestGroupSpecFile: [],\r\n                        TestGroupSpecificationHistory: [],\r\n                        SelectedComponent: undefined\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeTestCategory = (inputParam, testGroupInputData) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/getTestMasterByCategory\", {\r\n                ...inputParam\r\n            })\r\n            .then(response => {\r\n                sortData(response.data);\r\n                inputParam.selectedRecord.ntestcode = [];\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedRecord: inputParam.selectedRecord,\r\n                        testGroupInputData: {\r\n                            ...testGroupInputData,\r\n                            ...response.data\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getSpecificationDetails = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/get\" + inputParam.methodUrl, {\r\n                ...inputParam.inputData\r\n            })\r\n            .then(response => {\r\n                searchRef.current.value = \"\";\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        screenName: inputParam.screenName\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const editSpecFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        if (inputParam.testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n            inputParam.testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n            let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n                    userinfo: inputParam.userInfo\r\n                }),\r\n                rsapi.post(\"/testgroup/getActiveSpecFileById\", {\r\n                    userinfo: inputParam.userInfo,\r\n                    testgroupspecfile: inputParam.selectedRecord,\r\n                    ntreeversiontempcode:inputParam.filterData.ntreeversiontempcode.value\r\n                })\r\n            ]\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    const linkmaster = response[0].data.LinkMaster;\r\n                    const defaultLink = linkmaster.filter(item => item.ndefaultlink === transactionStatus.YES);\r\n                    const editObject = response[1].data;\r\n                    let nlinkcode = {};\r\n                    let link = {};\r\n                    if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                        nlinkcode = {\r\n                            \"label\": editObject.slinkname,\r\n                            \"value\": editObject.nlinkcode\r\n                        }\r\n                        link = {\r\n                            slinkfilename: editObject.sfilename,\r\n                            slinkdescription: editObject.sdescription,\r\n                            nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                            sfilesize: '',\r\n                            nfilesize: 0,\r\n                            ndefaultstatus: 4,\r\n                            sfilename: '',\r\n                        }\r\n\r\n                    } else {\r\n                        nlinkcode = defaultLink.length > 0 ? {\r\n                            \"label\": defaultLink[0].slinkname,\r\n                            \"value\": defaultLink[0].nlinkcode\r\n                        } : \"\"\r\n\r\n                        link = {\r\n                            slinkfilename: '',\r\n                            slinkdescription: '',\r\n                            sdescription: editObject.sdescription,\r\n                            nlinkdefaultstatus: 4,\r\n                            sfilesize: editObject.sfilesize,\r\n                            nfilesize: editObject.nfilesize,\r\n                            ndefaultstatus: editObject.ndefaultstatus,\r\n                            sfilename: editObject.sfilename,\r\n                        }\r\n                    }\r\n                    const selectedRecord = {\r\n                        // ...editObject,\r\n                        ...link,\r\n                        nallotedspeccode: editObject.nallotedspeccode,\r\n                        nspecfilecode: editObject.nspecfilecode,\r\n                        stypename: editObject.stypename,\r\n                        nattachmenttypecode: editObject.nattachmenttypecode,\r\n                        nlinkcode,\r\n                        // disabled: true\r\n                    };\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openModal: true,\r\n                            operation: \"update\",\r\n                            screenName: \"IDS_SPECFILE\",\r\n                            editFiles: Object.values(editObject).length > 0 && editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {},\r\n                            selectedRecord,\r\n                            ncontrolCode: inputParam.ncontrolCode\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTestGroupCodedResult = (operation, paramdata, userInfo, ncontrolCode, optionalData) => {\r\n    return (dispatch) => {\r\n        const testgroupspecification = optionalData.testgroupspecification;\r\n        if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n            testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n            dispatch(initRequest(true));\r\n            const urlArray = [\r\n                rsapi.post(\"grade/getGrade\", {\r\n                    \"userinfo\": userInfo\r\n                })\r\n            ];\r\n            if (operation === \"update\") {\r\n                urlArray.push(rsapi.post(\"testgroup/getActivePredefinedParameterById\", {\r\n                    testgrouptestpredefinedparameter: paramdata,\r\n                    \"userinfo\": userInfo,\r\n                    testgroupspecification\r\n                }));\r\n            }\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let selectedRecord = {};\r\n                    const gradeMap = constructOptionList(response[0].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, true);\r\n                    const grade = gradeMap.get(\"OptionList\");\r\n                    if (operation === \"update\") {\r\n                        const editCodedResult = response[1].data;\r\n                        selectedRecord = {\r\n                            ntestgrouptestpredefcode: paramdata[\"ntestgrouptestpredefcode\"],\r\n                            ntestgrouptestparametercode: paramdata[\"ntestgrouptestparametercode\"],\r\n                            ngradecode: {\r\n                                \"label\": editCodedResult[\"sdisplaystatus\"],\r\n                                \"value\": editCodedResult[\"ngradecode\"]\r\n                            },\r\n                            spredefinedname: editCodedResult[\"spredefinedname\"]\r\n                        }\r\n                    } else {\r\n                        selectedRecord = {\r\n                            ngradecode: gradeMap.get(\"DefaultValue\")\r\n                            // {\r\n                            //     \"value\": grade[0].ngradecode,\r\n                            //     \"label\": grade[0][\"sdisplaystatus\"]\r\n                            // }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openChildModal: true,\r\n                            showSaveContinue: false,\r\n                            operation: operation,\r\n                            screenName: \"IDS_CODEDRESULT\",\r\n                            parameterData: {\r\n                                grade,\r\n                                needCodedResult: false\r\n                            },\r\n                            selectedRecord,\r\n                            ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const viewTestGroupCheckList = (inputParam, userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"checklist/viewTemplate\", {\r\n                ...inputParam\r\n            })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openTemplateModal: true,\r\n                        testGroupCheckList: {\r\n                            templateData: response.data\r\n                        },\r\n                        loading: false,\r\n                        selectedRecord: {}\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const reportSpecification = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testgroup/specReportGenerate\", {\r\n                ...inputParam,\r\n                ntreeversiontempcode:inputParam.filterData.ntreeversiontempcode.value\r\n            })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false,\r\n                        showConfirmAlert: false\r\n                    }\r\n                })\r\n                document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                document.getElementById(\"download_data\").click();\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const retireSpecification = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testgroup/retireSpec\", {\r\n                ...inputParam\r\n            })\r\n            .then(response => {\r\n\r\n                // const TestGroupSpecification = response.data.TestGroupSpecificationHistory ;\r\n                sortData(response.data);\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                })\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}