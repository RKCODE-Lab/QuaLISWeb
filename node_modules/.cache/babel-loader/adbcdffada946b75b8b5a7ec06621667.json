{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\CustomComponent.jsx\";\nimport React, { Component } from 'react';\nimport FormInput from './form-input/form-input.component';\nimport { Col, Row } from 'react-bootstrap';\nimport TestPopOver from '../pages/ResultEntryBySample/TestPopOver';\nimport { intl } from './App';\nimport Axios from 'axios';\nimport { toast } from 'react-toastify';\nimport rsapi from '../rsapi';\n\nclass CustomComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n    this.infoFields = [{\n      \"fieldName\": \"spositionvalue\",\n      \"label\": \"IDS_BARCODE\"\n    }, {\n      \"fieldName\": \"svisitnumbershortcode\",\n      \"label\": \"IDS_VISITNUMBERCODE\"\n    }, {\n      \"fieldName\": \"sparticipantid\",\n      \"label\": \"IDS_PARTICIPANTID\"\n    }, {\n      \"fieldName\": \"sprojectshortcode\",\n      \"label\": \"IDS_PROJECTTYPECODE\"\n    }, {\n      \"fieldName\": \"sproductshortcode\",\n      \"label\": \"IDS_PRODUCTCODE\"\n    }, {\n      \"fieldName\": \"ssampledonorshortcode\",\n      \"label\": \"IDS_SAMPLEDONORCODE\"\n    }, {\n      \"fieldName\": \"scollectiontubetypeshortcode\",\n      \"label\": \"IDS_COLLECTIONTUBETYPECODE\"\n    }];\n\n    this.onInputOnChange = (event, fieldName) => {\n      let sheetData = this.state.sheetData;\n      let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\n\n      if (this.props.isMultiSampleAdd) {\n        if (sheetData[nsamplestoragemappingcode] === undefined) {\n          sheetData[nsamplestoragemappingcode] = {};\n        }\n\n        if (sheetData[nsamplestoragemappingcode][fieldName] === undefined) {\n          sheetData[nsamplestoragemappingcode][fieldName] = {};\n        }\n\n        sheetData[nsamplestoragemappingcode][fieldName]['spositionvalue'] = event.target.value;\n      } else {\n        if (sheetData[fieldName] === undefined) {\n          sheetData[fieldName] = {};\n        }\n\n        sheetData[fieldName]['spositionvalue'] = event.target.value;\n      }\n\n      this.props.childSheetDataChange({ ...sheetData\n      });\n      this.setState({\n        sheetData\n      });\n    };\n\n    this.autoCRUD = (inputParam, fieldName, operation, nsamplestoragemappingcode) => {\n      this.setState({\n        loading: true\n      });\n      let urlArray = [];\n      const url1 = rsapi.post(\"samplestoragetransaction/\" + operation + \"SampleStorageTransaction\", inputParam);\n      urlArray = [url1];\n      Axios.all(urlArray).then(response => {\n        let sheetData = this.state.sheetData;\n\n        if (this.props.isMultiSampleAdd) {\n          if (sheetData[nsamplestoragemappingcode] === undefined) {\n            sheetData[nsamplestoragemappingcode] = {};\n          }\n\n          if (sheetData[nsamplestoragemappingcode][fieldName] === undefined) {\n            sheetData[nsamplestoragemappingcode][fieldName] = {};\n          }\n\n          sheetData[nsamplestoragemappingcode][fieldName]['spositionvalue'] = response[0].data.cellData['spositionvalue'] ? response[0].data.cellData['spositionvalue'] : \"\";\n\n          if (response[0].data.cellData['spositionvalue']) {\n            sheetData[nsamplestoragemappingcode][fieldName]['additionalInfo'] = response[0].data.cellData['additionalInfo'] ? JSON.parse(response[0].data.cellData['additionalInfo'].value) : [];\n          } else {\n            sheetData[nsamplestoragemappingcode][fieldName]['additionalInfo'] = [];\n          } //inputParam['spositionvalue'];\n\n        } else {\n          if (sheetData[fieldName]) {\n            sheetData[fieldName] = {};\n          }\n\n          sheetData[fieldName]['spositionvalue'] = response[0].data.cellData['spositionvalue'] ? response[0].data.cellData['spositionvalue'] : \"\";\n\n          if (response[0].data.cellData['spositionvalue']) {\n            sheetData[fieldName]['additionalInfo'] = response[0].data.cellData['additionalInfo'] ? JSON.parse(response[0].data.cellData['additionalInfo'].value) : [];\n          } else {\n            sheetData[fieldName]['additionalInfo'] = [];\n          } // inputParam['spositionvalue'];\n\n        } // this.props.availablepsacechange(response[0].data.navailablespace);\n\n\n        this.setState({\n          sheetData,\n          loading: false\n        });\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.autoSaveGetData = (sposition, spositionvalue) => {\n      let inputParam = {\n        nsamplestoragelocationcode: this.props.nsamplestoragelocationcode,\n        nsamplestoragemappingcode: this.props.nsamplestoragemappingcode,\n        nprojecttypecode: -1,\n        ncollectiontubetypecode: -1,\n        nproductcode: -1,\n        nsampledonorcode: -1,\n        nvisitnumbercode: 5,\n        sprojectshortcode: 'NA',\n        scollectiontubetypeshortcode: 'NA',\n        sproductshortcode: 'NA',\n        ssampledonorshortcode: 'NA',\n        svisitnumbershortcode: 5,\n        sparticipantid: '00026',\n        sposition: sposition,\n        spositionvalue: spositionvalue.toString().trim(),\n        userinfo: this.props.userInfo\n      };\n      this.autoCRUD(inputParam, sposition, 'create', this.props.nsamplestoragemappingcode);\n    };\n\n    this.additionalInfo = () => {\n      //  console.log('--------------------->') \n      let additionalInfo = [];\n      let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\n\n      if (this.props.isMultiSampleAdd) {\n        if (this.props.ndirectionmastercode === 1) {\n          additionalInfo = this.state.sheetData[nsamplestoragemappingcode] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] : [] : [];\n        } else {\n          additionalInfo = this.state.sheetData[nsamplestoragemappingcode] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['additionalInfo'] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['additionalInfo'] : [] : [];\n        }\n      } else {\n        if (this.props.ndirectionmastercode === 1) {\n          additionalInfo = this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] ? this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] ? this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] : [] : [];\n        } else {\n          additionalInfo = this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] ? this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['additionalInfo'] ? this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['additionalInfo'] : [] : [];\n        }\n      }\n\n      return additionalInfo;\n    };\n\n    this.state = {\n      sheetData: this.props.sheetData\n    };\n  }\n\n  handleEnter(event) {\n    if (event.keyCode === 13) {\n      const form = event.target.form;\n      const index = Array.prototype.indexOf.call(form, event.target);\n      form.elements[index + 1].focus();\n      event.preventDefault();\n    }\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    if (this.props.sheetData !== previousProps.sheetData) {\n      let sheetData = this.props.sheetData;\n      this.setState({\n        sheetData\n      });\n    }\n  }\n\n  render() {\n    let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-0 test-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, \" \", this.props.isMultiSampleAdd ? this.props.ndirectionmastercode === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormInput, {\n      className: 'alphabetcss',\n      name: 'ncolumn',\n      onKeyDown: this.props.handleKeyDown,\n      onBlur: () => this.autoSaveGetData(this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1), this.state.sheetData[nsamplestoragemappingcode] && (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\")) //label={this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\n      ,\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-block\",\n        style: {\n          width: this.props.boxWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 40\n        }\n      }, this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1), Object.values(this.additionalInfo()).length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(TestPopOver, {\n        intl: intl,\n        needIcon: true,\n        needPopoverTitleContent: true,\n        infoFields: this.infoFields,\n        selectedObject: this.additionalInfo(),\n        placement: this.props.rowIndex === 0 ? 'bottom' : 'top',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 49\n        }\n      }))),\n      placeholder: this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1),\n      value: this.state.sheetData[nsamplestoragemappingcode] && (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\"),\n      style: this.state.sheetData[nsamplestoragemappingcode] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ? {\n        'border-bottom': `3px solid #ff6347`\n      } : {\n        'border-bottom': `3px solid #7ca84c`\n      },\n      maxLength: 20,\n      isDisabled: this.props.isDisabled,\n      onChange: event => this.onInputOnChange(event, this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(FormInput, {\n      name: 'ncolumn',\n      className: 'alphabetcss',\n      onBlur: () => this.autoSaveGetData(this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1), this.state.sheetData[nsamplestoragemappingcode] && (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\")),\n      onKeyDown: this.props.handleKeyDown //label={this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\n      ,\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-block\",\n        style: {\n          width: this.props.boxWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 40\n        }\n      }, this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1), Object.values(this.additionalInfo()).length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(TestPopOver, {\n        intl: intl,\n        needIcon: true,\n        needPopoverTitleContent: true,\n        infoFields: this.infoFields,\n        selectedObject: this.additionalInfo(),\n        placement: this.props.rowIndex === 0 ? 'bottom' : 'top',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 51\n        }\n      }))),\n      placeholder: this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1),\n      value: this.state.sheetData[nsamplestoragemappingcode] && (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\"),\n      style: this.state.sheetData[nsamplestoragemappingcode] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ? {\n        'border-bottom': `3px solid #ff6347`\n      } : {\n        'border-bottom': `3px solid #7ca84c`\n      },\n      maxLength: 20,\n      isDisabled: this.props.isDisabled,\n      onChange: event => this.onInputOnChange(event, this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    }) : this.props.ndirectionmastercode === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(FormInput, {\n      name: 'ncolumn',\n      className: 'alphabetcss',\n      onBlur: () => this.autoSaveGetData(this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1), this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ? this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\"),\n      onKeyDown: this.props.handleKeyDown // label={this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\n      ,\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-block\",\n        style: {\n          width: this.props.boxWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 39\n        }\n      }, this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1), Object.values(this.additionalInfo()).length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TestPopOver, {\n        intl: intl,\n        needIcon: true,\n        needPopoverTitleContent: true,\n        infoFields: this.infoFields,\n        selectedObject: this.additionalInfo(),\n        placement: this.props.rowIndex === 0 ? 'bottom' : 'top',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 46\n        }\n      }))),\n      placeholder: this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1),\n      value: this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ? this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\",\n      maxLength: 20,\n      isDisabled: this.props.isDisabled,\n      style: this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ? {\n        'border-bottom': `3px solid #ff6347`\n      } : {\n        'border-bottom': `3px solid #7ca84c`\n      },\n      onChange: event => this.onInputOnChange(event, this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 31\n      }\n    }), \" \") : /*#__PURE__*/React.createElement(FormInput, {\n      className: 'alphabetcss',\n      name: 'ncolumn',\n      onKeyDown: this.props.handleKeyDown,\n      onBlur: () => this.autoSaveGetData(this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1), this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] && this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ? this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\"),\n      style: this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] && this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ? {\n        'border-bottom': `3px solid #ff6347`\n      } : {\n        'border-bottom': `3px solid #7ca84c`\n      } // label={this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\n      ,\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-block\",\n        style: {\n          width: this.props.boxWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 40\n        }\n      }, this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1), Object.values(this.additionalInfo()).length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(TestPopOver, {\n        intl: intl,\n        needIcon: true,\n        needPopoverTitleContent: true,\n        infoFields: this.infoFields,\n        selectedObject: this.additionalInfo(),\n        placement: this.props.rowIndex === 0 ? 'bottom' : 'top',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 50\n        }\n      }))),\n      placeholder: this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1),\n      value: this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] && this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ? this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\",\n      maxLength: 20,\n      isDisabled: this.props.isDisabled,\n      onChange: event => this.onInputOnChange(event, this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 38\n      }\n    })));\n  }\n\n}\n\nexport default CustomComponent;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/CustomComponent.jsx"],"names":["React","Component","FormInput","Col","Row","TestPopOver","intl","Axios","toast","rsapi","CustomComponent","constructor","props","alphabet","infoFields","onInputOnChange","event","fieldName","sheetData","state","nsamplestoragemappingcode","isMultiSampleAdd","undefined","target","value","childSheetDataChange","setState","autoCRUD","inputParam","operation","loading","urlArray","url1","post","all","then","response","data","cellData","JSON","parse","catch","error","status","message","warn","autoSaveGetData","sposition","spositionvalue","nsamplestoragelocationcode","nprojecttypecode","ncollectiontubetypecode","nproductcode","nsampledonorcode","nvisitnumbercode","sprojectshortcode","scollectiontubetypeshortcode","sproductshortcode","ssampledonorshortcode","svisitnumbershortcode","sparticipantid","toString","trim","userinfo","userInfo","additionalInfo","ndirectionmastercode","rowIndex","columnIndex","handleEnter","keyCode","form","index","Array","prototype","indexOf","call","elements","focus","preventDefault","componentDidUpdate","previousProps","previousState","render","handleKeyDown","width","boxWidth","Object","values","length","isDisabled"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport FormInput from './form-input/form-input.component';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport TestPopOver from '../pages/ResultEntryBySample/TestPopOver';\r\nimport { intl } from './App';\r\nimport Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport rsapi from '../rsapi';\r\n\r\nclass CustomComponent extends Component {\r\n    alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sheetData: this.props.sheetData\r\n        }\r\n    }\r\n    infoFields = [ \r\n    { \"fieldName\": \"spositionvalue\", \"label\": \"IDS_BARCODE\" },\r\n    { \"fieldName\": \"svisitnumbershortcode\", \"label\": \"IDS_VISITNUMBERCODE\" },\r\n    { \"fieldName\": \"sparticipantid\", \"label\": \"IDS_PARTICIPANTID\" } ,\r\n    { \"fieldName\": \"sprojectshortcode\", \"label\": \"IDS_PROJECTTYPECODE\" } ,\r\n    { \"fieldName\": \"sproductshortcode\", \"label\": \"IDS_PRODUCTCODE\" } ,\r\n    { \"fieldName\": \"ssampledonorshortcode\", \"label\": \"IDS_SAMPLEDONORCODE\" }  ,\r\n    { \"fieldName\": \"scollectiontubetypeshortcode\", \"label\": \"IDS_COLLECTIONTUBETYPECODE\" } \r\n    ];\r\n    handleEnter(event) {\r\n        if (event.keyCode === 13) {\r\n            const form = event.target.form;\r\n            const index = Array.prototype.indexOf.call(form, event.target);\r\n            form.elements[index + 1].focus();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event, fieldName) => {\r\n        let sheetData = this.state.sheetData;\r\n        let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\r\n        if (this.props.isMultiSampleAdd) {\r\n            if (sheetData[nsamplestoragemappingcode] === undefined) {\r\n                sheetData[nsamplestoragemappingcode] = {}\r\n            }\r\n            if (sheetData[nsamplestoragemappingcode][fieldName] === undefined) {\r\n                sheetData[nsamplestoragemappingcode][fieldName] = {}\r\n            }\r\n            sheetData[nsamplestoragemappingcode][fieldName]['spositionvalue'] = event.target.value;\r\n        } else {\r\n            if (sheetData[fieldName] === undefined) {\r\n                sheetData[fieldName] = {}\r\n            }\r\n            sheetData[fieldName]['spositionvalue'] = event.target.value;\r\n        }\r\n        this.props.childSheetDataChange({\r\n            ...sheetData\r\n        });\r\n\r\n        this.setState({ sheetData })\r\n    }\r\n    autoCRUD = (inputParam, fieldName, operation, nsamplestoragemappingcode) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragetransaction/\" + operation + \"SampleStorageTransaction\", inputParam);\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let sheetData = this.state.sheetData;\r\n                if (this.props.isMultiSampleAdd) {\r\n                    if (sheetData[nsamplestoragemappingcode] === undefined) {\r\n                        sheetData[nsamplestoragemappingcode] = {}\r\n                    }\r\n                    if (sheetData[nsamplestoragemappingcode][fieldName] === undefined) {\r\n                        sheetData[nsamplestoragemappingcode][fieldName] = {}\r\n                    }\r\n                    sheetData[nsamplestoragemappingcode][fieldName]['spositionvalue'] = response[0].data.cellData['spositionvalue'] ?\r\n                        response[0].data.cellData['spositionvalue'] : \"\"\r\n                    if (response[0].data.cellData['spositionvalue']) {\r\n                        sheetData[nsamplestoragemappingcode][fieldName]['additionalInfo'] = response[0].data.cellData['additionalInfo'] ?\r\n                            JSON.parse(response[0].data.cellData['additionalInfo'].value) : []\r\n                    } else {\r\n                        sheetData[nsamplestoragemappingcode][fieldName]['additionalInfo'] = []\r\n                    }\r\n                    //inputParam['spositionvalue'];\r\n                } else {\r\n                    if (sheetData[fieldName]) {\r\n                        sheetData[fieldName] = {}\r\n                    }\r\n                    sheetData[fieldName]['spositionvalue'] = response[0].data.cellData['spositionvalue'] ?\r\n                        response[0].data.cellData['spositionvalue'] : \"\"\r\n                    if (response[0].data.cellData['spositionvalue']) {\r\n                        sheetData[fieldName]['additionalInfo'] = response[0].data.cellData['additionalInfo'] ?\r\n                            JSON.parse(response[0].data.cellData['additionalInfo'].value) : []\r\n                    } else {\r\n                        sheetData[fieldName]['additionalInfo'] = []\r\n                    }\r\n\r\n\r\n                    // inputParam['spositionvalue'];\r\n                }\r\n                // this.props.availablepsacechange(response[0].data.navailablespace);\r\n                this.setState({\r\n                    sheetData,\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }\r\n    componentDidUpdate(previousProps, previousState) {\r\n        if (this.props.sheetData !== previousProps.sheetData) {\r\n            let sheetData = this.props.sheetData\r\n            this.setState({ sheetData })\r\n        }\r\n    }\r\n\r\n    autoSaveGetData = (sposition, spositionvalue) => {\r\n        let inputParam = {\r\n            nsamplestoragelocationcode: this.props.nsamplestoragelocationcode,\r\n            nsamplestoragemappingcode: this.props.nsamplestoragemappingcode,\r\n            nprojecttypecode: -1,\r\n            ncollectiontubetypecode: -1,\r\n            nproductcode: -1,\r\n            nsampledonorcode: -1,\r\n            nvisitnumbercode: 5,\r\n            \r\n            sprojectshortcode:  'NA',\r\n            scollectiontubetypeshortcode:  'NA',\r\n            sproductshortcode: 'NA',\r\n            ssampledonorshortcode:  'NA',\r\n            svisitnumbershortcode: 5,\r\n\r\n            sparticipantid: '00026',\r\n            sposition: sposition,\r\n            spositionvalue: spositionvalue.toString().trim(), \r\n            userinfo: this.props.userInfo\r\n        }\r\n        this.autoCRUD(inputParam, sposition, 'create', this.props.nsamplestoragemappingcode);\r\n    }  \r\n    additionalInfo = () => {\r\n      //  console.log('--------------------->') \r\n        let additionalInfo = []\r\n        let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\r\n        if (this.props.isMultiSampleAdd) {\r\n            if (this.props.ndirectionmastercode === 1) {\r\n                additionalInfo = this.state.sheetData[nsamplestoragemappingcode] ?\r\n                    ((this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]\r\n                        && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] ?\r\n                        this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] : [])) : [];\r\n            } else {\r\n                additionalInfo = this.state.sheetData[nsamplestoragemappingcode] ?\r\n                    ((this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]\r\n                        && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex]\r\n                        + (this.props.rowIndex + 1)]['additionalInfo'] ?\r\n                        this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex]\r\n                        + (this.props.rowIndex + 1)]['additionalInfo'] : [])) : [];\r\n            }\r\n        } else {\r\n            if (this.props.ndirectionmastercode === 1) {\r\n                additionalInfo = this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] ?\r\n                    ((this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo']) ?\r\n                        this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] : []) : []\r\n            } else {\r\n                additionalInfo = this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] ?\r\n                    ((this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['additionalInfo']) ?\r\n                        this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['additionalInfo'] : []) : []\r\n            }\r\n        }\r\n        return additionalInfo;\r\n    }\r\n    render() {\r\n        let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\r\n        return (\r\n            <>                    \r\n                    <div className='p-0 test-box'> {this.props.isMultiSampleAdd ?\r\n                        this.props.ndirectionmastercode === 1 ?\r\n                        <>\r\n                                \r\n                            <FormInput\r\n                                className={'alphabetcss'}\r\n                                name={'ncolumn'}\r\n                                onKeyDown={this.props.handleKeyDown}\r\n                                onBlur={() => this.autoSaveGetData(\r\n                                    this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1),\r\n                                    this.state.sheetData[nsamplestoragemappingcode] &&\r\n                                    (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\r\n                                        this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\r\n                                        this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\"))}\r\n\r\n                                //label={this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\r\n                                label={<span className='d-block' style={{ width:  this.props.boxWidth  }}>\r\n                                    {this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\r\n                                    {\r\n                                        Object.values(this.additionalInfo()).length > 0\r\n                                        &&  <span className=\"ml-2\">\r\n                                                <TestPopOver intl={intl} needIcon={true} needPopoverTitleContent={true}\r\n                                                    infoFields={this.infoFields}\r\n                                                    selectedObject={this.additionalInfo()}\r\n                                                    placement={this.props.rowIndex === 0 ? 'bottom':'top'}  >\r\n                                                </TestPopOver>\r\n                                                </span>\r\n                                    }\r\n                                   </span>}\r\n                                placeholder={this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\r\n                                value={this.state.sheetData[nsamplestoragemappingcode] &&\r\n                                    (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]\r\n                                        && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\r\n                                        this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\")}\r\n                                style={this.state.sheetData[nsamplestoragemappingcode] && this.state.sheetData[nsamplestoragemappingcode]\r\n                                [this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode]\r\n                                [this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\r\n                                    { 'border-bottom': `3px solid #ff6347` } : { 'border-bottom': `3px solid #7ca84c` }}\r\n                                maxLength={20}\r\n                                isDisabled={this.props.isDisabled}\r\n                                onChange={(event) => this.onInputOnChange(event, this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1))}\r\n                            /></>\r\n                            :\r\n                            <FormInput\r\n                                name={'ncolumn'}\r\n                                className={'alphabetcss'}\r\n                                onBlur={() => this.autoSaveGetData(\r\n                                    this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1),\r\n                                    this.state.sheetData[nsamplestoragemappingcode] &&\r\n                                    (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\r\n                                        this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\r\n                                        this.state.sheetData[nsamplestoragemappingcode]\r\n                                        [this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\"))}\r\n                                onKeyDown={this.props.handleKeyDown}\r\n                                //label={this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\r\n                                label={<span className='d-block' style={{ width:  this.props.boxWidth  }}>\r\n                                    {this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\r\n                                    {\r\n                                        Object.values(this.additionalInfo()).length > 0\r\n                                        &&  <span className=\"ml-2\">\r\n                                                  <TestPopOver intl={intl} needIcon={true} needPopoverTitleContent={true}\r\n                                                    infoFields={this.infoFields}\r\n                                                    selectedObject={this.additionalInfo()}\r\n                                                    placement={this.props.rowIndex === 0 ? 'bottom':'top'}  >\r\n                                                </TestPopOver>\r\n                                                </span>\r\n                                    }\r\n                                   </span>}\r\n                                placeholder={this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\r\n                                value={this.state.sheetData[nsamplestoragemappingcode] &&\r\n                                    (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]\r\n                                        && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\r\n                                        this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\")}\r\n                                style={this.state.sheetData[nsamplestoragemappingcode]\r\n                                    && this.state.sheetData[nsamplestoragemappingcode]\r\n                                    [this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\r\n                                    this.state.sheetData[nsamplestoragemappingcode]\r\n                                    [this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue']\r\n                                    ?\r\n                                    { 'border-bottom': `3px solid #ff6347` } : { 'border-bottom': `3px solid #7ca84c` }}\r\n                                maxLength={20}\r\n                                isDisabled={this.props.isDisabled}\r\n                                onChange={(event) => this.onInputOnChange(event, this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1))}\r\n                            />\r\n                        :\r\n                        this.props.ndirectionmastercode === 1 ?\r\n                           <> <FormInput\r\n                                name={'ncolumn'}\r\n                                className={'alphabetcss'}\r\n                                onBlur={() => this.autoSaveGetData(\r\n                                    this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1),\r\n                                    this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\r\n                                        this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\r\n                                        this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\")}\r\n                                onKeyDown={this.props.handleKeyDown}\r\n                               // label={this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\r\n                               label={<span className='d-block' style={{ width:  this.props.boxWidth  }}>\r\n                                {this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\r\n                                {\r\n                                    Object.values(this.additionalInfo()).length > 0\r\n                                    &&  <span className=\"ml-2\">\r\n                                             <TestPopOver intl={intl} needIcon={true} needPopoverTitleContent={true}\r\n                                                    infoFields={this.infoFields}\r\n                                                    selectedObject={this.additionalInfo()}\r\n                                                    placement={this.props.rowIndex === 0 ? 'bottom':'top'}  >\r\n                                                </TestPopOver>\r\n                                            </span>\r\n                                }\r\n                               </span>}\r\n                                placeholder={this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\r\n                                value={(this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\r\n                                    this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue']) ?\r\n                                    this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\"}\r\n                                maxLength={20}\r\n                                isDisabled={this.props.isDisabled} \r\n                                style={this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\r\n                                    this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\r\n                                    { 'border-bottom': `3px solid #ff6347` } : { 'border-bottom': `3px solid #7ca84c` }}\r\n                                onChange={(event) => this.onInputOnChange(event, this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1))}\r\n                            /> </> : <FormInput\r\n                                className={'alphabetcss'}\r\n                                name={'ncolumn'}\r\n                                onKeyDown={this.props.handleKeyDown}\r\n                                onBlur={() => this.autoSaveGetData(\r\n                                    this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1),\r\n                                    this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\r\n                                        this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\r\n                                        this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\")}\r\n                                style={this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\r\n                                    this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\r\n                                    { 'border-bottom': `3px solid #ff6347` } : { 'border-bottom': `3px solid #7ca84c` }}\r\n                               // label={this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\r\n                                label={<span className='d-block' style={{ width:  this.props.boxWidth  }}>\r\n                                    {this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\r\n                                    {\r\n                                        Object.values(this.additionalInfo()).length > 0\r\n                                        &&  <span className=\"ml-2\">\r\n                                                 <TestPopOver intl={intl} needIcon={true} needPopoverTitleContent={true}\r\n                                                    infoFields={this.infoFields}\r\n                                                    selectedObject={this.additionalInfo()}\r\n                                                    placement={this.props.rowIndex === 0 ? 'bottom':'top'}  >\r\n                                                </TestPopOver>\r\n                                                </span>\r\n                                    }\r\n                                   </span>}\r\n                                placeholder={this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\r\n                                value={(this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\r\n                                    this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue']) ?\r\n                                    this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\"}\r\n                                maxLength={20}\r\n                                isDisabled={this.props.isDisabled}\r\n                                onChange={(event) => this.onInputOnChange(event, this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1))}\r\n                            />\r\n                    }\r\n                    {/* {this.additionalInfo().length > 0\r\n                        && \r\n                        <>\r\n                            <Col className=\"test-box-info\">\r\n                                <TestPopOver intl={intl} needIcon={true} needPopoverTitleContent={true}\r\n                                    placement={!this.props.rowIndex? 'bottom':'top'} stringList={this.additionalInfo()} >\r\n                                </TestPopOver>\r\n                            </Col>\r\n                        </>\r\n                    } */}\r\n                    </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default CustomComponent;\r\n\r\n"]},"metadata":{},"sourceType":"module"}