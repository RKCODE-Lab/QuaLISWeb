{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\quotation\\\\EditQuotationTestPricing.jsx\";\nimport React from 'react';\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { ReadOnlyText } from '../../components/App.styles';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\n\nconst EditQuotationTestPricing = props => {\n  console.log(\"props.selected:\", props.selectedRecord);\n  return Object.keys(props.selectedRecord).length > 0 ? props.selectedRecord.map((item, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    className: \"at-tabs mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4 card-header\",\n    Style: \"border-bottom: 0px;\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, item.stestsynonym)), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }\n  }, item.smethodname))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_DISCOUNTBAND\"\n    }),\n    isSearchable: true,\n    name: \"ndiscountbandcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    isClearable: false,\n    options: props.DiscountBand //      value={{label:item['sdiscountbandname'],value:item['ndiscountbandcode']} || -1}\n    ,\n    value: item.ndiscountbandcode.label !== \"\" ? item.ndiscountbandcode : \"\" //      value={item.ndiscountbandcode || \"\"}\n    //      defaultValue={props.selectedRecord[\"ndiscountbandcode\"]}\n    ,\n    defaultValue: item,\n    onChange: event => props.onComboChange(event, \"ndiscountbandcode\", 5, item.nquotationtestcode),\n    closeMenuOnSelect: true // onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_AMOUNT\"\n    }),\n    name: \"namount\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }) // value={props.selectedRecord.namount ? props.selectedRecord.namount : 0}\n    ,\n    value: item.namount ? item.namount : 0,\n    isMandatory: false,\n    isDisabled: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_COST\"\n    }),\n    type: \"number\",\n    value: item.ncost || 0,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_COST\"\n    }),\n    strict: true,\n    min: 0,\n    maxLength: 10 // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\n    ,\n    onChange: event => props.onNumericInputChange(event, \"ncost\", item.nquotationtestcode),\n    onBlur: () => props.onnetAmountEvent(item.nquotationtestcode),\n    noStyle: true,\n    precision: 2,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"nnoofsamples\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_NUMBEROFSAMPLES\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NUMBEROFSAMPLES\"\n    }),\n    isMandatory: true,\n    required: true,\n    className: \"form-control\",\n    value: item.nnoofsamples || 0 // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\n    ,\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    onBlur: () => props.onnetAmountEvent(item.nquotationtestcode),\n    maxLength: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_TOTALNETAMOUNT\"\n    }),\n    name: \"ntotalamount\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_TOTALNETAMOUNT\"\n    }),\n    value: item.ntotalamount > 0 ? item.ntotalamount : 0 //     value={(item.ncost * item.nnoofsamples) || 0}\n    ,\n    isMandatory: true,\n    required: true,\n    maxLength: 10,\n    isDisabled: true,\n    precision: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    name: \"stestplatform\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: item.stestplatform ? item.stestplatform === \"-\" ? \"\" : item.stestplatform : \"\",\n    isMandatory: false,\n    isDisabled: false,\n    required: true,\n    maxLength: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"snotes\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_NOTES\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NOTES\"\n    }),\n    isMandatory: false,\n    required: true,\n    className: \"form-control\",\n    value: item.snotes ? item.snotes === \"-\" ? \"\" : item.snotes : \"\",\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    maxLength: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  })))))))))) : \"\";\n};\n\nexport default injectIntl(EditQuotationTestPricing);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/quotation/EditQuotationTestPricing.jsx"],"names":["React","Row","Col","Card","injectIntl","FormInput","ReadOnlyText","FormNumericInput","FormSelectSearch","FormTextarea","EditQuotationTestPricing","props","console","log","selectedRecord","Object","keys","length","map","item","index","stestsynonym","smethodname","intl","formatMessage","id","DiscountBand","ndiscountbandcode","label","event","onComboChange","nquotationtestcode","onInputOnChange","namount","ncost","onNumericInputChange","onnetAmountEvent","nnoofsamples","ntotalamount","stestplatform","snotes"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card  } from \"react-bootstrap\";\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\n\r\nconst EditQuotationTestPricing = (props) => {\r\n        console.log(\"props.selected:\", props.selectedRecord)\r\n        return (\r\n            Object.keys(props.selectedRecord).length > 0 ? \r\n                props.selectedRecord.map((item,index)=>\r\n                <>\r\n                \r\n        {/* <Row> */}\r\n          {/* <Card.Body className=\"form-static-wrap\"> */}\r\n            <Card className=\"at-tabs mb-3\">\r\n              <Row noGutters>\r\n               <Col md={12}>\r\n                <Card>\r\n                  <Card.Body>\r\n\r\n                <Row className=\"mb-4 card-header\" Style=\"border-bottom: 0px;\">\r\n                    <Col md={6}>  \r\n\r\n                            <ReadOnlyText>{item.stestsynonym}</ReadOnlyText>\r\n\r\n                    </Col>\r\n\r\n                    <Col md={6}>  \r\n\r\n                       <ReadOnlyText>{item.smethodname}</ReadOnlyText>\r\n\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n                <Row>\r\n\r\n                    <Col md={3}>  \r\n\r\n                        <FormSelectSearch\r\n\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_DISCOUNTBAND\" })}\r\n                            isSearchable={true}\r\n                            name={\"ndiscountbandcode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={false}\r\n                            isClearable={false}\r\n                            options={props.DiscountBand}\r\n                            //      value={{label:item['sdiscountbandname'],value:item['ndiscountbandcode']} || -1}\r\n                            value={item.ndiscountbandcode.label !==\"\" ? item.ndiscountbandcode : \"\"} \r\n                            //      value={item.ndiscountbandcode || \"\"}\r\n                            //      defaultValue={props.selectedRecord[\"ndiscountbandcode\"]}\r\n                            defaultValue={item }\r\n                            onChange={(event) => props.onComboChange(event, \"ndiscountbandcode\", 5,item.nquotationtestcode)}\r\n                            closeMenuOnSelect={true}\r\n                            // onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                             \r\n                         /> \r\n\r\n                    </Col>\r\n\r\n                    <Col md={3}>  \r\n\r\n                    <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_AMOUNT\" })}\r\n                                name={\"namount\"}\r\n                                type=\"text\" \r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                             // value={props.selectedRecord.namount ? props.selectedRecord.namount : 0}\r\n                                value={item.namount ? item.namount : 0}\r\n                                isMandatory={false}\r\n                                isDisabled={true}\r\n                                required={true}\r\n                                maxLength={\"100\"}\r\n                    />\r\n\r\n                    </Col>\r\n\r\n                    <Col md={2}>  \r\n\r\n                    <FormNumericInput\r\n                                        \r\n                                label={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                type=\"number\"\r\n                                value={item.ncost || 0}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                strict={true}\r\n                                min={0}\r\n                                maxLength={10}\r\n                                // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\r\n                                onChange={(event) => props.onNumericInputChange(event, \"ncost\",item.nquotationtestcode)}\r\n                                onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                noStyle={true}\r\n                                precision={2}\r\n                                className=\"form-control\"\r\n                                errors=\"Please provide a valid number.\"\r\n                    /> \r\n\r\n                    </Col>\r\n\r\n                    <Col md={2}>  \r\n\r\n                    <FormInput\r\n                                name={\"nnoofsamples\"}\r\n                                type=\"text\"\r\n                                label={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                className=\"form-control\"\r\n                                value={item.nnoofsamples || 0}\r\n                                // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                maxLength={9}\r\n                     />  \r\n\r\n                    </Col>\r\n\r\n                    <Col md={2}> \r\n\r\n                    <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                                name={\"ntotalamount\"}\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                                value={ item.ntotalamount>0 ? item.ntotalamount : 0 }\r\n                            //     value={(item.ncost * item.nnoofsamples) || 0}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                maxLength={10}\r\n                                isDisabled={true}\r\n                                precision={2}\r\n                        /> \r\n                    \r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row>\r\n                    \r\n                    <Col md={6}> \r\n                    \r\n                    <FormTextarea\r\n                                label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                name={\"stestplatform\"}\r\n                                type=\"text\" \r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                value={item.stestplatform ? item.stestplatform === \"-\" ? \"\" : item.stestplatform : \"\"}\r\n                                isMandatory={false}\r\n                                isDisabled={false}\r\n                                required={true}\r\n                                maxLength={\"500\"}\r\n                    />\r\n                    </Col> \r\n\r\n                    <Col md={6}> \r\n                \r\n                    <FormTextarea\r\n                                name={\"snotes\"}\r\n                                type=\"text\"\r\n                                label={props.intl.formatMessage({ id: \"IDS_NOTES\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_NOTES\" })}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                className=\"form-control\"\r\n                                value={item.snotes ? item.snotes === \"-\" ? \"\" : item.snotes : \"\"}\r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                maxLength={500}\r\n                    />\r\n                    </Col> \r\n\r\n                </Row>           \r\n\r\n                </Card.Body>\r\n             </Card>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n          {/* </Card.Body> */}\r\n        {/* </Row> */}\r\n\r\n                {/* { (Object.keys(props.selectedRecord).length > 1 && Object.keys(props.selectedRecord).length) !== item.length ? \r\n\r\n                    <Col md={12}>\r\n                          <div Style=\"border-top: 1px solid #007bff;  margin-bottom: 1rem;\"></div>\r\n                   </Col> : \"\"\r\n\r\n                } */}\r\n\r\n                  {/* { Object.keys(props.selectedRecord).length > 1   ? \r\n       ((Object.keys(props.selectedRecord).length > 1) && ((index+1)=== (Object.keys(props.selectedRecord).length))) ? \r\n            \"\":\r\n                    <Col md={12}>     \r\n                          <div Style=\"border-top: 1px solid #007bff;  margin-bottom: 1rem;\"></div>\r\n                   </Col> : \"\"  } */}\r\n                 </>\r\n          \r\n            ) :\"\"\r\n        )\r\n}\r\n\r\nexport default injectIntl(EditQuotationTestPricing);"]},"metadata":{},"sourceType":"module"}