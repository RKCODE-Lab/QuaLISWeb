{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{injectIntl}from'react-intl';import{Col}from'react-bootstrap';import{connect}from'react-redux';import React,{Component}from'react';import DataGridWithSelection from'../../components/data-grid/DataGridWithSelection';var ImportDataGridWithSelection=/*#__PURE__*/function(_Component){_inherits(ImportDataGridWithSelection,_Component);var _super=_createSuper(ImportDataGridWithSelection);function ImportDataGridWithSelection(props){var _this;_classCallCheck(this,ImportDataGridWithSelection);_this=_super.call(this,props);_this.state={selectedRecord:_this.props.selectedRecord};return _this;}_createClass(ImportDataGridWithSelection,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(nextProps.isInitialRender===false){console.log(\"1\",false);return false;}else{console.log(\"2\",true);return true;}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGridWithSelection,{userInfo:this.props.Login.userInfo,data:this.props.Login.masterData&&this.props.Login.masterData.selectedBulkBarcodeGeneration&&this.props.Login.masterData.bulkbarcodedatagen!==null||this.props.Login.masterData&&this.props.Login.masterData.selectedBulkBarcodeGeneration&&this.props.Login.masterData.bulkbarcodedatagen.length>0?this.props.Login.masterData.bulkbarcodedatagen:[]||[],selectAll:this.props.selectAll,title:this.props.intl.formatMessage({id:\"IDS_SELECTTODELETE\"}),selectionChange:this.props.selectionChange,headerSelectionChange:this.props.headerSelectionChange,extractedColumnList:this.props.extractedColumnList})));}}]);return ImportDataGridWithSelection;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{})(injectIntl(ImportDataGridWithSelection));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/storagemanagement/ImportDataGridWithSelection.jsx"],"names":["injectIntl","Col","connect","React","Component","DataGridWithSelection","ImportDataGridWithSelection","props","state","selectedRecord","nextProps","nextState","isInitialRender","console","log","Login","userInfo","masterData","selectedBulkBarcodeGeneration","bulkbarcodedatagen","length","selectAll","intl","formatMessage","id","selectionChange","headerSelectionChange","extractedColumnList","mapStateToProps"],"mappings":"wtBACA,OAASA,UAAT,KAA2B,YAA3B,CACA,OAAUC,GAAV,KAAoB,iBAApB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,qBAAP,KAAkC,kDAAlC,C,GAEMC,CAAAA,2B,0IACF,qCAAYC,KAAZ,CAAkB,6DACd,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAc,CACVC,cAAc,CAAE,MAAKF,KAAL,CAAWE,cADjB,CAAd,CAFc,aAKjB,C,6EAED,+BAAsBC,SAAtB,CAAiCC,SAAjC,CAA4C,CACxC,GAAID,SAAS,CAACE,eAAV,GAA8B,KAAlC,CAAyC,CACjCC,OAAO,CAACC,GAAR,CAAY,GAAZ,CAAgB,KAAhB,EACA,MAAO,MAAP,CACP,CAHD,IAIK,CACDD,OAAO,CAACC,GAAR,CAAY,GAAZ,CAAgB,IAAhB,EACA,MAAO,KAAP,CACH,CACJ,C,sBACD,iBAAQ,CACJ,mBACD,qDACG,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACkC,oBAAC,qBAAD,EACI,QAAQ,CAAE,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,QAD/B,CAEI,IAAI,CAAG,KAAKT,KAAL,CAAWQ,KAAX,CAAiBE,UAAjB,EAA+B,KAAKV,KAAL,CAAWQ,KAAX,CAAiBE,UAAjB,CAA4BC,6BAA3D,EAA4F,KAAKX,KAAL,CAAWQ,KAAX,CAAiBE,UAAjB,CAA4BE,kBAA5B,GAAmD,IAAhJ,EAA0J,KAAKZ,KAAL,CAAWQ,KAAX,CAAiBE,UAAjB,EAA+B,KAAKV,KAAL,CAAWQ,KAAX,CAAiBE,UAAjB,CAA4BC,6BAA3D,EAA4F,KAAKX,KAAL,CAAWQ,KAAX,CAAiBE,UAAjB,CAA4BE,kBAA5B,CAA+CC,MAA/C,CAAwD,CAA9S,CAAmT,KAAKb,KAAL,CAAWQ,KAAX,CAAiBE,UAAjB,CAA4BE,kBAA/U,CAAoW,IAAM,EAFpX,CAGI,SAAS,CAAE,KAAKZ,KAAL,CAAWc,SAH1B,CAII,KAAK,CAAE,KAAKd,KAAL,CAAWe,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oBAAN,CAA9B,CAJX,CAKI,eAAe,CAAE,KAAKjB,KAAL,CAAWkB,eALhC,CAMI,qBAAqB,CAAE,KAAKlB,KAAL,CAAWmB,qBANtC,CAOI,mBAAmB,CAAE,KAAKnB,KAAL,CAAWoB,mBAPpC,EADlC,CADH,CADC,CAgBH,C,yCAnCqCvB,S,EAqC1C,GAAMwB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAApB,KAAK,CAAI,CAC7B,MAAQ,CAAEO,KAAK,CAAEP,KAAK,CAACO,KAAf,CAAR,CACH,CAFD,CAIA,cAAeb,CAAAA,OAAO,CAAC0B,eAAD,CAAkB,EAAlB,CAAP,CACZ5B,UAAU,CAACM,2BAAD,CADE,CAAf","sourcesContent":["\r\nimport { injectIntl } from 'react-intl';\r\nimport {  Col} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\r\n\r\nclass ImportDataGridWithSelection extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            selectedRecord: this.props.selectedRecord,\r\n        });\r\n    }\r\n    \r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.isInitialRender === false ){\r\n                console.log(\"1\",false);\r\n                return false;\r\n        }\r\n        else {\r\n            console.log(\"2\",true);\r\n            return true;\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Col md={12}>\r\n                                            <DataGridWithSelection\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                data={(this.props.Login.masterData && this.props.Login.masterData.selectedBulkBarcodeGeneration && this.props.Login.masterData.bulkbarcodedatagen !== null) || (this.props.Login.masterData && this.props.Login.masterData.selectedBulkBarcodeGeneration && this.props.Login.masterData.bulkbarcodedatagen.length > 0) ? this.props.Login.masterData.bulkbarcodedatagen : [] || []}\r\n                                                selectAll={this.props.selectAll}\r\n                                                title={this.props.intl.formatMessage({ id: \"IDS_SELECTTODELETE\" })}\r\n                                                selectionChange={this.props.selectionChange}\r\n                                                headerSelectionChange={this.props.headerSelectionChange}\r\n                                                extractedColumnList={this.props.extractedColumnList}\r\n\r\n                                            />\r\n                                        </Col>\r\n\t\t\t\t\t\t\t</>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n})(injectIntl(ImportDataGridWithSelection));"]},"metadata":{},"sourceType":"module"}