{"ast":null,"code":"import React from'react';import{FormattedMessage,injectIntl}from'react-intl';import{Button,Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{transactionStatus}from'../../components/Enumeration';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import DataGridWithSelection from'../../components/data-grid/DataGridWithSelection';var AddSample=function AddSample(props){var extractedColumnList=[];if(props.nneedsubsample){extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"155px\"});}else{extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"155px\"});}extractedColumnList.push({\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestname\",\"width\":\"250px\"});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:'10px'}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(DataGridWithSelection,{data:props.samples// componentPopupSkip={props.componentPopupSkip}\n// componentPopupTake={props.componentPopupTake}\n// componentPageSizes={props.componentPageSizes}\n,selectAll:props.addSelectAll,userInfo:props.userInfo,title:props.intl.formatMessage({id:\"IDS_SELECTTOADD\"}),headerSelectionChange:props.headerSelectionChange,selectionChange:props.selectionChange,extractedColumnList:extractedColumnList}))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:'10px'}}));};export default injectIntl(AddSample);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/batchruncreation/AddSample.js"],"names":["React","FormattedMessage","injectIntl","Button","Row","Col","FormInput","FormSelectSearch","DateTimePicker","transactionStatus","CustomSwitch","DataGridWithSelection","AddSample","props","extractedColumnList","nneedsubsample","push","marginTop","samples","addSelectAll","userInfo","intl","formatMessage","id","headerSelectionChange","selectionChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,CAA2BC,UAA3B,KAA6C,YAA7C,CACA,OAAQC,MAAR,CAAeC,GAAf,CAAoBC,GAApB,KAA8B,iBAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,MAAOC,CAAAA,cAAP,KAA2B,8DAA3B,CACA,OAAQC,iBAAR,KAAgC,8BAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,kDAAlC,CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAU,CACpB,GAAMC,CAAAA,mBAAmB,CAAG,EAA5B,CACA,GAAID,KAAK,CAACE,cAAV,CAAyB,CACjBD,mBAAmB,CAACE,IAApB,CAAyB,CAAC,UAAU,gBAAX,CAA4B,YAAY,aAAxC,CAAuD,QAAS,OAAhE,CAAzB,EACH,CAFL,IAGQ,CACAF,mBAAmB,CAACE,IAApB,CAAyB,CAAC,UAAU,cAAX,CAA0B,YAAY,OAAtC,CAA+C,QAAS,OAAxD,CAAzB,EACH,CACDF,mBAAmB,CAAEE,IAArB,CACI,CAAC,UAAU,cAAX,CAA0B,YAAY,WAAtC,CAAkD,QAAQ,OAA1D,CADJ,EAGL,mBAAQ,qDACP,oBAAC,GAAD,EAAK,KAAK,CAAE,CAACC,SAAS,CAAC,MAAX,CAAZ,eACQ,oBAAC,GAAD,mBACQ,oBAAC,qBAAD,EACQ,IAAI,CAAEJ,KAAK,CAACK,OACZ;AACA;AACA;AAJR,CAKQ,SAAS,CAAEL,KAAK,CAACM,YALzB,CAMQ,QAAQ,CAAEN,KAAK,CAACO,QANxB,CAOQ,KAAK,CAAEP,KAAK,CAACQ,IAAN,CAAWC,aAAX,CAAyB,CAACC,EAAE,CAAC,iBAAJ,CAAzB,CAPf,CAQQ,qBAAqB,CAAEV,KAAK,CAACW,qBARrC,CASQ,eAAe,CAAEX,KAAK,CAACY,eAT/B,CAWQ,mBAAmB,CAAEX,mBAX7B,EADR,CADR,CADO,cAkBP,oBAAC,GAAD,EAAK,KAAK,CAAE,CAACG,SAAS,CAAC,MAAX,CAAZ,EAlBO,CAAR,CA0DH,CArEJ,CAsEG,cAAef,CAAAA,UAAU,CAACU,SAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport {Button,Row, Col} from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport {transactionStatus} from '../../components/Enumeration';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\r\n\r\n\r\nconst AddSample = (props) =>{  \r\n        const extractedColumnList = [];\r\n        if (props.nneedsubsample){\r\n                extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n            }\r\n            else{\r\n                extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n            }\r\n            extractedColumnList .push(      \r\n                {\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestname\",\"width\":\"250px\"}\r\n             );\r\n       return (<>\r\n        <Row style={{marginTop:'10px'}}>\r\n                <Col>                     \r\n                        <DataGridWithSelection                               \r\n                                data={props.samples} \r\n                                // componentPopupSkip={props.componentPopupSkip}\r\n                                // componentPopupTake={props.componentPopupTake}\r\n                                // componentPageSizes={props.componentPageSizes}\r\n                                selectAll={props.addSelectAll}\r\n                                userInfo={props.userInfo}\r\n                                title={props.intl.formatMessage({id:\"IDS_SELECTTOADD\"})}\r\n                                headerSelectionChange={props.headerSelectionChange}\r\n                                selectionChange={props.selectionChange}\r\n                                \r\n                                extractedColumnList={extractedColumnList}                            \r\n                        /> \r\n                </Col>\r\n        </Row>\r\n        <Row style={{marginTop:'10px'}}>\r\n                {/* <Col md={6}>\r\n                        <span className=\"add-txt-btn\">\r\n                                <FormattedMessage id=\"IDS_ADDEDCOMPONENTS\" defaultMessage=\"Added Components\"/>\r\n                                 : {props.addedComponentList && props.addedComponentList.length}\r\n                        </span>\r\n                </Col> */}\r\n\r\n                {/* <Col md={12} className=\"d-flex justify-content-end\">\r\n                     \r\n                        <Button variant=\"outline-danger\" onClick={() => props.onDeleteSelectedComponent()} >\r\n                                <FormattedMessage id='IDS_REMOVECOMPONENTS' defaultMessage='Remove Components' />\r\n                        </Button> */}\r\n                        {/* <Nav.Link name=\"addrole\" className=\"add-txt-btn\" onClick={() => props.onDeleteSelectedComponent()}>\r\n                                <FormattedMessage id='IDS_DELETECOMPONENTS' defaultMessage='Delete Components' />\r\n                        </Nav.Link> */}\r\n                {/* </Col> */}\r\n        </Row>\r\n        {/* <Row style={{marginTop:'10px'}}> \r\n                 <Col>      \r\n                        <DataGridWithSelection\r\n                                primaryKeyField={\"npreregno\"}                               \r\n                                data={props.samples }\r\n                                // componentPopupSkip={props.componentPopupSkip}\r\n                                // componentPopupTake={props.componentPopupTake}\r\n                                // componentPageSizes={props.componentPageSizes}\r\n                                selectAll={props.deleteSelectAll}\r\n                                title={props.intl.formatMessage({id:\"IDS_SELECTTODELETE\"})}\r\n                                headerSelectionChange={props.addedHeaderSelectionChange}\r\n                                selectionChange={props.addedSelectionChange}\r\n                                extractedColumnList={[  {idsName:\"IDS_ARNO\", dataField:\"sarno\"},\r\n                                                        {idsName:\"IDS_COMPONENTNAME\", dataField:\"scomponentname\"},\r\n                                                        {idsName:\"IDS_BATCHLOTNO\", dataField:\"smanuflotno\"},\r\n                                                        {idsName:\"IDS_SPECNAME\", dataField:\"sspecname\"}]}\r\n                              \r\n                        /> \r\n                </Col>\r\n        </Row> */}\r\n        </>\r\n       )\r\n   }\r\n   export default injectIntl(AddSample);\r\n"]},"metadata":{},"sourceType":"module"}