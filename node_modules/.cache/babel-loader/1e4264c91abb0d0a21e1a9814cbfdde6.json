{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{ListWrapper}from'../../../components/client-group.styles';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{callService,crudMaster,getPortalRegistrationType,fetchinstituiondeptTypeById,updateStore,validateEsignCredential,getPlant,getActivePortalRegistrationType}from'../../../actions';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import DataGrid from'../../../components/data-grid/data-grid.component';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import{showEsign,getControlMap}from'../../../components/CommonScript';import Esign from'../../audittrail/Esign';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import FormMultiSelect from'../../../components/form-multi-select/form-multi-select.component';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var PlantPortalRegistrationMapping=/*#__PURE__*/function(_React$Component){_inherits(PlantPortalRegistrationMapping,_React$Component);var _super=_createSuper(PlantPortalRegistrationMapping);function PlantPortalRegistrationMapping(props){var _this;_classCallCheck(this,PlantPortalRegistrationMapping);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData,event.dataState),dataState:event.dataState});};_this.onSaveClick=function(saveType,formRef){var inputData=[];var selectedId=null;inputData[\"userinfo\"]=_this.props.Login.userInfo;var dataState=undefined;inputData[\"plantportalregistrationmapping\"]={};if(_this.props.Login.operation===\"update\"){// edit\ninputData[\"plantportalregistrationmapping\"]={\"nportalregtypecode\":_this.state.selectedRecord.nportalregtypecode.value,\"ndeptcode\":_this.state.selectedRecord.ndeptcode.value,\"nportalregmappingcode\":_this.props.Login.SelectedPortalRegistrationType.nportalregmappingcode};}else{inputData[\"plantportalregistrationmapping\"]={};var plantportalregistrationmapping=[];plantportalregistrationmapping=_this.state.selectedRecord.ndeptcode.map(function(item){var map={};map[\"nportalregtypecode\"]=_this.state.selectedRecord.nportalregtypecode.value;map[\"ndeptcode\"]=item.value;return map;});inputData['plantportalregistrationmapping']=plantportalregistrationmapping;}var inputParam={methodUrl:\"PlantPortalRegistrationMapping\",classUrl:\"plantportalregistrationmapping\",displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,dataState:dataState,selectedId:selectedId,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.deleteRecord=function(deleteParam){var inputParam={methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:'plantportalregistrationmapping',dataState:_this.state.dataState,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',inputData:{'plantportalregistrationmapping':deleteParam.selectedRecord,//.dataItem,\n\"userinfo\":_this.props.Login.userInfo},operation:deleteParam.operation,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:deleteParam.operation,openModal:true,screenName:_this.props.Login.inputParam.displayName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.reloadData=function(){var inputParam={inputData:{userinfo:_this.props.Login.userInfo},methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;if(fieldName===\"nportalregtypecode\"){_this.props.getPlant({inputData:{userinfo:_this.props.Login.userInfo,nportalregtypecode:selectedRecord.nportalregtypecode&&selectedRecord.nportalregtypecode.value,SelectedPortalRegistrationType:selectedRecord.nportalregtypecode}});}_this.setState({selectedRecord:selectedRecord});};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.handleClose=_this.handleClose.bind(_assertThisInitialized(_this));var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},userRoleControlRights:[],controlMap:new Map(),dataResult:[],dataState:_dataState,mandatoryFields:[{\"idsName\":\"IDS_PORTALREGISTRATIONTYPE\",\"dataField\":\"nportalregtypecode\",\"width\":\"150px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_PLANT\",\"dataField\":\"ndeptcode\",\"width\":\"150px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}]};return _this;}_createClass(PlantPortalRegistrationMapping,[{key:\"handleClose\",value://to close side out\nfunction handleClose(){var loadEsign=this.props.Login.loadEsign;var openModal=this.props.Login.openModal;var selectedRecord=this.props.Login.selectedRecord;var selectedId=this.props.Login.selectedId;if(this.props.Login.loadEsign){if(this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;}else{loadEsign=false;}}else{openModal=false;selectedRecord={};selectedId=null;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:selectedId}};this.props.updateStore(updateInfo);}},{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";if(this.props.Login.inputParam!==undefined){this.extractedColumnList=[{\"idsName\":\"IDS_PORTALREGISTRATIONTYPE\",\"dataField\":\"sportalregtypename\",\"width\":\"250px\"},{\"idsName\":\"IDS_PLANT\",\"dataField\":\"sdeptname\",\"width\":\"250px\"}];primaryKeyField=\"nportalregmappingcode\";}var addID=this.props.Login.inputParam&&this.state.controlMap.has(\"AddPlantPortalRegistrationMapping\")&&this.state.controlMap.get('AddPlantPortalRegistrationMapping').ncontrolcode;var editId=this.props.Login.inputParam&&this.state.controlMap.has(\"EditPlantPortalRegistrationMapping\")&&this.state.controlMap.get('EditPlantPortalRegistrationMapping').ncontrolcode;var editParam={screenName:this.props.Login.inputParam&&this.props.Login.inputParam.displayName,operation:\"update\",primaryKeyField:primaryKeyField,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolCode:editId};var deleteParam={screenName:this.props.Login.inputParam&&this.props.Login.inputParam.displayName,methodUrl:\"PlantPortalRegistrationMapping\",operation:\"delete\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,fetchRecord:this.props.getActivePortalRegistrationType,deleteRecord:this.deleteRecord,reloadData:this.reloadData,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,editParam:editParam,deleteParam:deleteParam,pageable:true,isActionRequired:true,isToolBarRequired:true,gridHeight:'600px',scrollable:\"scrollable\",selectedId:this.props.Login.selectedId,addRecord:function addRecord(){return _this2.props.getPortalRegistrationType({userInfo:_this2.props.Login.userInfo,ncontrolCode:addID,operation:\"create\",masterData:_this2.props.Login.masterData});}}):\"\"))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{onSaveClick:this.onSaveClick,operation:this.props.Login.operation,screenName:this.props.Login.inputParam.displayName,closeModal:this.handleClose,show:this.props.Login.openModal,inputParam:this.props.Login.inputParam,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord,mandatoryFields:this.state.mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation?this.props.Login.operation:'',onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nportalregtypecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_PORTALREGISTRATIONTYPE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:this.state.selectedRecord&&this.state.selectedRecord[\"nportalregtypecode\"]?this.state.selectedRecord[\"nportalregtypecode\"]||[]:[],options:this.props.Login.portalRegistrationTypeList||[],optionId:\"nportalregtypecode\",optionValue:\"sportalregtypename\",isMandatory:true,closeMenuOnSelect:true,alphabeticalSort:true,isSearchable:true,onChange:function onChange(event){return _this2.onComboChange(event,\"nportalregtypecode\");},isDisabled:this.props.Login.operation==='update'?true:false})),this.props.Login.operation==='update'?/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ndeptcode\",formLabel:this.props.intl.formatMessage({id:\"IDS_PLANT\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:this.state.selectedRecord&&this.state.selectedRecord[\"ndeptcode\"]?this.state.selectedRecord[\"ndeptcode\"]||[]:[],options:this.props.Login.plantList||[],optionId:\"ndeptcode\",optionValue:\"sdeptname\",isMandatory:true,closeMenuOnSelect:true,alphabeticalSort:true,isSearchable:true,onChange:function onChange(event){return _this2.onComboChange(event,\"ndeptcode\");}})):/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormMultiSelect,{name:\"ndeptcode\",label:this.props.intl.formatMessage({id:\"IDS_PLANT\"}),options:this.props.Login.plantList||[],optionId:\"value\",optionValue:\"label\",value:this.state.selectedRecord&&this.state.selectedRecord[\"ndeptcode\"]?this.state.selectedRecord[\"ndeptcode\"]||[]:[],isMandatory:true,disableSearch:false,disabled:false,closeMenuOnSelect:false,alphabeticalSort:true,allItemSelectedLabel:this.props.intl.formatMessage({id:\"IDS_ALLITEMSAREMSELECTED\"}),noOptionsLabel:this.props.intl.formatMessage({id:\"IDS_NOOPTION\"}),searchLabel:this.props.intl.formatMessage({id:\"IDS_SEARCH\"}),selectAllLabel:this.props.intl.formatMessage({id:\"IDS_SELECTALL\"}),onChange:function onChange(event){return _this2.onComboChange(event,\"ndeptcode\");}})))}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.state.dataState.take};}if(this.state.dataResult.data){if(this.state.dataResult.data.length===1){var skipcount=this.state.dataState.skip>0?this.state.dataState.skip-this.state.dataState.take:this.state.dataState.skip;dataState={skip:skipcount,take:this.state.dataState.take};}}this.setState({data:this.props.Login.masterData,selectedRecord:this.props.Login.selectedRecord,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState});}}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return PlantPortalRegistrationMapping;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,getPortalRegistrationType:getPortalRegistrationType,fetchinstituiondeptTypeById:fetchinstituiondeptTypeById,updateStore:updateStore,validateEsignCredential:validateEsignCredential,getPlant:getPlant,getActivePortalRegistrationType:getActivePortalRegistrationType})(injectIntl(PlantPortalRegistrationMapping));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/configurationmaster/plantportalregistrationmapping/PlantPortalRegistrationMapping.jsx"],"names":["React","ListWrapper","Row","Col","toast","process","connect","injectIntl","callService","crudMaster","getPortalRegistrationType","fetchinstituiondeptTypeById","updateStore","validateEsignCredential","getPlant","getActivePortalRegistrationType","DEFAULT_RETURN","DataGrid","SlideOutModal","showEsign","getControlMap","Esign","FormSelectSearch","FormMultiSelect","mapStateToProps","state","Login","PlantPortalRegistrationMapping","props","dataStateChange","event","setState","dataResult","masterData","dataState","onSaveClick","saveType","formRef","inputData","selectedId","userInfo","undefined","operation","selectedRecord","nportalregtypecode","value","ndeptcode","SelectedPortalRegistrationType","nportalregmappingcode","plantportalregistrationmapping","map","item","inputParam","methodUrl","classUrl","displayName","userRoleControlRights","nformcode","ncontrolcode","updateInfo","typeName","data","loadEsign","screenData","deleteRecord","deleteParam","ncontrolCode","openModal","screenName","reloadData","userinfo","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","onComboChange","comboData","fieldName","createRef","extractedColumnList","handleClose","bind","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","mandatoryFields","primaryKeyField","addID","has","get","editId","editParam","onInputOnChange","intl","formatMessage","id","portalRegistrationTypeList","plantList","previousProps","Object","values","push","length","skipcount","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { ListWrapper } from '../../../components/client-group.styles'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, getPortalRegistrationType, fetchinstituiondeptTypeById, updateStore,\r\n    validateEsignCredential, getPlant, getActivePortalRegistrationType\r\n} from '../../../actions';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport DataGrid from '../../../components/data-grid/data-grid.component';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport { showEsign, getControlMap } from '../../../components/CommonScript';\r\nimport Esign from '../../audittrail/Esign';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport FormMultiSelect from '../../../components/form-multi-select/form-multi-select.component';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass PlantPortalRegistrationMapping extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.handleClose = this.handleClose.bind(this);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {}, userRoleControlRights: [], controlMap: new Map(),\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            mandatoryFields: [\r\n                { \"idsName\": \"IDS_PORTALREGISTRATIONTYPE\", \"dataField\": \"nportalregtypecode\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_PLANT\", \"dataField\": \"ndeptcode\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            ]\r\n        };\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n    //to close side out\r\n    handleClose() {\r\n\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            selectedId = null;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    //to open side out\r\n\r\n    //to perform save action for both add and edit\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let selectedId = null;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let dataState = undefined;\r\n        inputData[\"plantportalregistrationmapping\"] = {};\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            inputData[\"plantportalregistrationmapping\"] = {\r\n                \"nportalregtypecode\": this.state.selectedRecord.nportalregtypecode.value,\r\n                \"ndeptcode\": this.state.selectedRecord.ndeptcode.value,\r\n                \"nportalregmappingcode\": this.props.Login.SelectedPortalRegistrationType.nportalregmappingcode\r\n            }\r\n        }\r\n        else {\r\n            inputData[\"plantportalregistrationmapping\"] = {};\r\n\r\n            let plantportalregistrationmapping = []\r\n            plantportalregistrationmapping = this.state.selectedRecord.ndeptcode.map(item => {\r\n                let map = {}\r\n                map[\"nportalregtypecode\"] = this.state.selectedRecord.nportalregtypecode.value;\r\n                map[\"ndeptcode\"] = item.value\r\n                return map;\r\n            });\r\n            inputData['plantportalregistrationmapping'] = plantportalregistrationmapping;\r\n\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"PlantPortalRegistrationMapping\",\r\n            classUrl: \"plantportalregistrationmapping\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, dataState, selectedId,\r\n            selectedRecord: { ...this.state.selectedRecord }\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n\r\n    //to delete a recoed\r\n    deleteRecord = (deleteParam) => {\r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: 'plantportalregistrationmapping',\r\n            dataState: this.state.dataState,\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : '',\r\n            inputData: {\r\n                'plantportalregistrationmapping': deleteParam.selectedRecord,//.dataItem,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: deleteParam.operation,\r\n            selectedRecord: { ...this.state.selectedRecord }\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, operation: deleteParam.operation, openModal: true,\r\n                    screenName: this.props.Login.inputParam.displayName\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    //to reload data\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { userinfo: this.props.Login.userInfo },\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : '',\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let primaryKeyField = \"\";\r\n        if (this.props.Login.inputParam !== undefined) {\r\n            this.extractedColumnList = [\r\n                { \"idsName\": \"IDS_PORTALREGISTRATIONTYPE\", \"dataField\": \"sportalregtypename\", \"width\": \"250px\" },\r\n                { \"idsName\": \"IDS_PLANT\", \"dataField\": \"sdeptname\", \"width\": \"250px\" },\r\n            ]\r\n            primaryKeyField = \"nportalregmappingcode\";\r\n        }\r\n\r\n        const addID = this.props.Login.inputParam && this.state.controlMap.has(\"AddPlantPortalRegistrationMapping\")\r\n            && this.state.controlMap.get('AddPlantPortalRegistrationMapping').ncontrolcode;\r\n        const editId = this.props.Login.inputParam && this.state.controlMap.has(\"EditPlantPortalRegistrationMapping\")\r\n            && this.state.controlMap.get('EditPlantPortalRegistrationMapping').ncontrolcode;\r\n        const editParam = {\r\n            screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName, operation: \"update\", primaryKeyField: primaryKeyField,\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, ncontrolCode: editId\r\n        };\r\n\r\n        const deleteParam = {\r\n            screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName,\r\n            methodUrl: \"PlantPortalRegistrationMapping\", operation: \"delete\"\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={primaryKeyField}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    fetchRecord={this.props.getActivePortalRegistrationType}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    editParam={editParam}\r\n                                    deleteParam={deleteParam}\r\n                                    pageable={true}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    gridHeight={'600px'}\r\n                                    scrollable={\"scrollable\"}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    addRecord={() => this.props.getPortalRegistrationType({ userInfo: this.props.Login.userInfo, ncontrolCode: addID, operation: \"create\", masterData: this.props.Login.masterData })}\r\n                                />\r\n                                : \"\"}\r\n\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        onSaveClick={this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={this.props.Login.inputParam.displayName}\r\n                        closeModal={this.handleClose}\r\n                        show={this.props.Login.openModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord}\r\n                        mandatoryFields={this.state.mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation ? this.props.Login.operation : ''}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <FormSelectSearch\r\n                                        name={\"nportalregtypecode\"}\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_PORTALREGISTRATIONTYPE\" })}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        value={this.state.selectedRecord && this.state.selectedRecord[\"nportalregtypecode\"] ? this.state.selectedRecord[\"nportalregtypecode\"] || [] : []}\r\n                                        options={this.props.Login.portalRegistrationTypeList || []}\r\n                                        optionId=\"nportalregtypecode\"\r\n                                        optionValue=\"sportalregtypename\"\r\n                                        isMandatory={true}\r\n                                        closeMenuOnSelect={true}\r\n                                        alphabeticalSort={true}\r\n                                        isSearchable={true}\r\n                                        onChange={(event) => this.onComboChange(event, \"nportalregtypecode\")}\r\n                                        isDisabled={this.props.Login.operation==='update'?true:false}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n\r\n\r\n                                {this.props.Login.operation === 'update' ?\r\n                                    <Col md={12}>\r\n                                        <FormSelectSearch\r\n                                            name={\"ndeptcode\"}\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_PLANT\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                            value={this.state.selectedRecord && this.state.selectedRecord[\"ndeptcode\"] ? this.state.selectedRecord[\"ndeptcode\"] || [] : []}\r\n                                            options={this.props.Login.plantList || []}\r\n                                            optionId=\"ndeptcode\"\r\n                                            optionValue=\"sdeptname\"\r\n                                            isMandatory={true}\r\n                                            closeMenuOnSelect={true}\r\n                                            alphabeticalSort={true}\r\n                                            isSearchable={true}\r\n                                            onChange={(event) => this.onComboChange(event, \"ndeptcode\")}\r\n                                        >\r\n                                        </FormSelectSearch>\r\n                                    </Col> :\r\n                                    <Col md={12}>\r\n                                        <FormMultiSelect\r\n                                            name={\"ndeptcode\"}\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_PLANT\" })}\r\n                                            options={this.props.Login.plantList || []}\r\n                                            optionId=\"value\"\r\n                                            optionValue=\"label\"\r\n                                            value={this.state.selectedRecord && this.state.selectedRecord[\"ndeptcode\"] ? this.state.selectedRecord[\"ndeptcode\"] || [] : []}\r\n                                            isMandatory={true}\r\n                                            disableSearch={false}\r\n                                            disabled={false}\r\n                                            closeMenuOnSelect={false}\r\n                                            alphabeticalSort={true}\r\n                                            allItemSelectedLabel={this.props.intl.formatMessage({ id: \"IDS_ALLITEMSAREMSELECTED\" })}\r\n                                            noOptionsLabel={this.props.intl.formatMessage({ id: \"IDS_NOOPTION\" })}\r\n                                            searchLabel={this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })}\r\n                                            selectAllLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTALL\" })}\r\n                                            onChange={(event) => this.onComboChange(event, \"ndeptcode\")}\r\n                                        />\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n                        } />\r\n                    : \"\"}\r\n            </>\r\n\r\n        );\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState)\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.state.dataState.take }\r\n                }\r\n                if (this.state.dataResult.data) {\r\n                    if (this.state.dataResult.data.length === 1) {\r\n                        let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\r\n                            this.state.dataState.skip\r\n                        dataState = { skip: skipcount, take: this.state.dataState.take }\r\n                    }\r\n                }\r\n                this.setState({\r\n                    data: this.props.Login.masterData, selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState\r\n                });\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        if (fieldName === \"nportalregtypecode\") {\r\n            this.props.getPlant({\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nportalregtypecode: selectedRecord.nportalregtypecode && selectedRecord.nportalregtypecode.value,\r\n                    SelectedPortalRegistrationType: selectedRecord.nportalregtypecode\r\n                }\r\n            });\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, getPortalRegistrationType, fetchinstituiondeptTypeById,\r\n    updateStore, validateEsignCredential, getPlant, getActivePortalRegistrationType\r\n})(injectIntl(PlantPortalRegistrationMapping));\r\n\r\n"]},"metadata":{},"sourceType":"module"}