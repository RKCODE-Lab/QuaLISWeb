{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData,getComboLabelValue,constructOptionList}from'../components/CommonScript';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';import{intl}from'../components/App';import{transactionStatus,reportTypeEnum}from'../components/Enumeration';export function getReportMasterComboService(inputParam){return function(dispatch){// if (inputParam.operation === \"create\" || (inputParam.operation === \"update\" && inputParam.detailtoedit.ntransactionstatus !== transactionStatus.APPROVED))\n// {      \ndispatch(initRequest(true));var nreportcode=null;if(inputParam.operation===\"update\"){nreportcode=inputParam.mastertoedit[inputParam.primaryKeyName];}return rsapi.post(\"reportconfig/getReportMasterComboData\",{nreportcode:nreportcode,userinfo:inputParam.userInfo,filterreporttype:inputParam.filterReportType}).then(function(response){var reportTypeMap=constructOptionList(response.data[\"ReportType\"]||[],\"nreporttypecode\",\"sdisplayname\",undefined,undefined,true);var reportModuleMap=constructOptionList(response.data[\"ReportModule\"]||[],\"nreportmodulecode\",\"sdisplayname\",undefined,undefined,true);var reportSubTypeMap=constructOptionList(response.data[\"COAReportType\"]||[],\"ncoareporttypecode\",\"scoareporttypename\",undefined,undefined,true);var sampleTypeMap=constructOptionList(response.data[\"SampleType\"]||[],\"nsampletypecode\",\"ssampletypename\",undefined,undefined,true);var regTypeMap=constructOptionList(response.data[\"RegistrationType\"]||[],\"nregtypecode\",\"sregtypename\",undefined,undefined,true);var regSubTypeMap=constructOptionList(response.data[\"RegistrationSubType\"]||[],\"nregsubtypecode\",\"sregsubtypename\",undefined,undefined,true);var approvaConfigVersionMap=constructOptionList(response.data[\"ApprovalConfigVersion\"]||[],\"napproveconfversioncode\",\"sversionname\",undefined,undefined,false);var sectionMap=constructOptionList(response.data[\"SectionList\"]||[],\"nsectioncode\",\"ssectionname\",undefined,undefined,true);var decisionTypeMap=constructOptionList(response.data[\"ReportDecisionType\"]||[],\"nreportdecisiontypecode\",\"sdecisiontypename\",undefined,undefined,true);var certificateTypeMap=constructOptionList(response.data[\"CertificateType\"]||[],\"ncertificatetypecode\",\"scertificatetype\",undefined,undefined,true);var controlScreenTypeMap=constructOptionList(response.data[\"ControlScreen\"]||[],\"nformcode\",\"sdisplayname\",undefined,undefined,true);var reportTypeList=reportTypeMap.get(\"OptionList\");var reportModuleList=reportModuleMap.get(\"OptionList\");var reportSubTypeList=reportSubTypeMap.get(\"OptionList\");var regTypeList=regTypeMap.get(\"OptionList\");var sampleTypeList=sampleTypeMap.get(\"OptionList\");var regSubTypeList=regSubTypeMap.get(\"OptionList\");var sectionList=sectionMap.get(\"OptionList\");var decisionTypeList=decisionTypeMap.get(\"OptionList\");var certificateTypeList=certificateTypeMap.get(\"OptionList\");var controlScreenTypeList=controlScreenTypeMap.get(\"OptionList\");var ApproveConfigList=approvaConfigVersionMap.get(\"OptionList\");var selectedRecord={ntransactionstatus:transactionStatus.ACTIVE};var respObject={\"reportVersionStatus\":transactionStatus.DRAFT};if(inputParam.operation===\"update\"){if(response.status===202){respObject[\"reportVersionStatus\"]=transactionStatus.APPROVED;respObject[\"ApprovedReportMaster\"]=response.data[\"SelectedReportDesigner\"];}selectedRecord=JSON.parse(JSON.stringify(response.data[\"SelectedReportDesigner\"]));if(selectedRecord.nreporttypecode===reportTypeEnum.SAMPLE||selectedRecord.nreporttypecode===reportTypeEnum.COA){selectedRecord[\"nsampletypecode\"]={value:response.data[\"SelectedReportDesigner\"].nsampletypecode,label:response.data[\"SelectedReportDesigner\"].ssampletypename};// selectedRecord[\"nregtypecode\"] = {\n//     value: response.data[\"SelectedReportDesigner\"].nregtypecode,\n//     label: response.data[\"SelectedReportDesigner\"].sregtypename\n// };\nif(response.data[\"SelectedReportDesigner\"].nregtypecode!==-1){selectedRecord[\"nregtypecode\"]={value:response.data[\"SelectedReportDesigner\"].nregtypecode,label:response.data[\"SelectedReportDesigner\"].sregtypename};}else{selectedRecord[\"nregtypecode\"]=undefined;}if(response.data[\"SelectedReportDesigner\"].nregsubtypecode!==-1){selectedRecord[\"nregsubtypecode\"]={value:response.data[\"SelectedReportDesigner\"].nregsubtypecode,label:response.data[\"SelectedReportDesigner\"].sregsubtypename};}else{selectedRecord[\"nregsubtypecode\"]=undefined;}if(response.data[\"SelectedReportDesigner\"].nregsubtypecode!==-1){selectedRecord[\"napproveconfversioncode\"]={value:response.data[\"SelectedReportDesigner\"].napproveconfversioncode,label:response.data[\"SelectedReportDesigner\"].sapproveversionname};}else{selectedRecord[\"nregsubtypecode\"]=undefined;}if(response.data[\"SelectedReportDesigner\"].nsectioncode!==-1){selectedRecord[\"nsectioncode\"]={value:response.data[\"SelectedReportDesigner\"].nsectioncode,label:response.data[\"SelectedReportDesigner\"].ssectionname};}else{selectedRecord[\"nsectioncode\"]=undefined;}if(response.data[\"SelectedReportDesigner\"].ncoareporttypecode!==-1){selectedRecord[\"ncoareporttypecode\"]={value:response.data[\"SelectedReportDesigner\"].ncoareporttypecode,label:response.data[\"SelectedReportDesigner\"].scoareporttypename};}else{selectedRecord[\"ncoareporttypecode\"]=undefined;}if(selectedRecord.nreporttypecode===reportTypeEnum.SAMPLE){selectedRecord[\"nreportdecisiontypecode\"]={value:response.data[\"SelectedReportDesigner\"].nreportdecisiontypecode,label:response.data[\"SelectedReportDesigner\"].sdecisiontypename};}}else if(selectedRecord.nreporttypecode===reportTypeEnum.MIS){selectedRecord[\"nreportmodulecode\"]={value:response.data[\"SelectedReportDesigner\"].nreportmodulecode,label:response.data[\"SelectedReportDesigner\"].smoduledisplayname};selectedRecord[\"nreportmodule\"]={value:response.data[\"SelectedReportDesigner\"].smoduledisplayname,label:response.data[\"SelectedReportDesigner\"].smoduledisplayname};}else if(selectedRecord.nreporttypecode===reportTypeEnum.SCREENWISE){selectedRecord[\"ncontrolcode\"]={value:response.data[\"SelectedReportDesigner\"].ncontrolcode,label:response.data[\"SelectedReportDesigner\"].scontrolids};selectedRecord[\"nformcode\"]={value:response.data[\"SelectedReportDesigner\"].nformcode,label:response.data[\"SelectedReportDesigner\"].sdisplayname};}if(selectedRecord.nreporttypecode===reportTypeEnum.SAMPLE||selectedRecord.nreporttypecode===reportTypeEnum.BATCH){if(response.data[\"SelectedReportDesigner\"].ncoareporttypecode!==-1){selectedRecord[\"ncoareporttypecode\"]={value:response.data[\"SelectedReportDesigner\"].ncoareporttypecode,label:response.data[\"SelectedReportDesigner\"].scoareporttypename};}else{selectedRecord[\"ncoareporttypecode\"]=undefined;}selectedRecord[\"ncertificatetypecode\"]={value:response.data[\"SelectedReportDesigner\"].ncertificatetypecode,label:response.data[\"SelectedReportDesigner\"].scertificatetype};selectedRecord[\"sbatchtypename\"]=response.data[\"SelectedReportDesigner\"].sbatchtypename;}selectedRecord[\"ntransactionstatus\"]=response.data[\"SelectedReportDesigner\"].ntransactionstatus;selectedRecord[\"nreporttypecode\"]={item:response.data[\"SelectedReportDesigner\"],value:response.data[\"SelectedReportDesigner\"].nreporttypecode,label:response.data[\"SelectedReportDesigner\"].sreportdisplayname};}respObject=_objectSpread(_objectSpread({},respObject),{},{reportSubTypeList:reportSubTypeList,//:response.data[\"COAReportType\"]  || [], \nsampleTypeList:sampleTypeList,regTypeList:regTypeList,//:response.data[\"RegistrationType\"]  || [],                                                               \nregSubTypeList:regSubTypeList,//:response.data[\"RegistrationSubType\"]  || [],  \nsectionList:sectionList,ApproveConfigList:ApproveConfigList,//:response.data[\"SectionList\"] || [],   \ncertificateTypeList:certificateTypeList,reportDecisionTypeList:decisionTypeList,controlScreen:controlScreenTypeList//masterData:{...inputParam.masterData, SelectedFilterReportType:response.data[\"SelectedReportType\"] }                                                             \n});if(inputParam.operation===\"create\"){selectedRecord[\"nreporttypecode\"]={item:response.data[\"SelectedReportType\"],label:response.data[\"SelectedReportType\"].sdisplayname,value:response.data[\"SelectedReportType\"].nreporttypecode};if(selectedRecord[\"nreporttypecode\"].value===reportTypeEnum.SAMPLE&&selectedRecord[\"nreporttypecode\"]['item'].isneedregtype===transactionStatus.YES){// selectedRecord[\"nregtypecode\"] = getComboLabelValue(response.data[\"SelectedRegType\"],\n//     response.data[\"RegistrationType\"], \"nregtypecode\", \"sregtypename\")\nselectedRecord[\"nsampletypecode\"]=getComboLabelValue(response.data[\"SelectedSampleType\"],response.data[\"SampleType\"],\"nsampletypecode\",\"ssampletypename\");if(selectedRecord[\"nreporttypecode\"]['item'].isneedsection===transactionStatus.YES){selectedRecord[\"nsectioncode\"]=sectionMap.get(\"DefaultValue\");}}}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({reportTypeList:reportTypeList,//:response.data[\"ReportType\"] || [], \nreportModuleList:reportModuleList},respObject),{},{operation:inputParam.operation,screenName:inputParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:inputParam.ncontrolcode,loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});// }\n// else{       \n//     toast.warn(intl.formatMessage({id: \"IDS_CANNOTUPDATEAPPROVEDREPORT\"}));\n// }\n};}export function getReportDetailComboService(inputParam){return function(dispatch){if(inputParam.operation===\"create\"||inputParam.operation===\"update\"&&inputParam.detailtoedit.ntransactionstatus===transactionStatus.DRAFT){if(inputParam.masterData.SelectedReportMaster!==null){dispatch(initRequest(true));var nreportdetailcode=null;if(inputParam.operation===\"update\"){nreportdetailcode=inputParam.detailtoedit[inputParam.primaryKeyName];}return rsapi.post(\"reportconfig/getReportDetailComboData\",{nreportdetailcode:nreportdetailcode,reportmaster:inputParam.masterData.SelectedReportMaster,userinfo:inputParam.userInfo}).then(function(response){// const reportType = response.data[\"SelectedReportType\"];\n// const reportSubTypeMap  = constructOptionList(response.data[\"COAReportType\"] ||[], \"ncoareporttypecode\",\n//                             \"scoareporttypename\" , undefined, undefined, true);    \n// const sectionMap  = constructOptionList(response.data[\"SectionList\"] ||[], \"nsectioncode\",\n//                             \"ssectionname\", undefined, undefined, true);\n// const decisionTypeMap  = constructOptionList(response.data[\"ReportDecisionType\"] ||[], \"nreportdecisiontypecode\",\n//                             \"sdecisiontypename\" , undefined, undefined, true);   \n// const certificateTypeMap  = constructOptionList(response.data[\"CertificateType\"] ||[], \"ncertificatetypecode\",\n//                             \"scertificatetype\" , undefined, undefined, true);\n// const  reportSubTypeList = reportSubTypeMap.get(\"OptionList\");\n// const  sectionList = sectionMap.get(\"OptionList\"); \n// const  decisionTypeList = decisionTypeMap.get(\"OptionList\");\n// const  certificateTypeList = certificateTypeMap.get(\"OptionList\");  \nvar selectedRecord={};var respObject={};if(inputParam.operation===\"update\"){selectedRecord=response.data[\"SelectedReportDetail\"];}selectedRecord[\"ntransactionstatus\"]=transactionStatus.DRAFT;//    console.log(\"selected in action:\", selectedRecord);\ndispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},respObject),{},{operation:inputParam.operation,screenName:inputParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:inputParam.ncontrolcode,loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_REPORTNOTFOUND\"}));}}else if(inputParam.operation===\"create\"||inputParam.operation===\"update\"&&inputParam.detailtoedit.ntransactionstatus===transactionStatus.APPROVED){toast.warn(intl.formatMessage({id:\"IDS_CANNOTEDITAPPROVEDREPORT\"}));}else if(inputParam.operation===\"create\"||inputParam.operation===\"update\"&&inputParam.detailtoedit.ntransactionstatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_CANNOTEDITRETIREDREPORT\"}));}};}export function getSelectedReportMasterDetail(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportDesigner\",{nreportcode:parseInt(inputParam.nreportcode),nreporttypecode:inputParam.masterData&&inputParam.masterData.SelectedFilterReportType?inputParam.masterData.SelectedFilterReportType.nreporttypecode.toString():null,userinfo:inputParam.userInfo}).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSelectedReportDetail(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportDetail\",{nreportdetailcode:parseInt(inputParam.nreportdetailcode),userinfo:inputParam.userInfo}).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getConfigReportComboService(inputParam){return function(dispatch){if(inputParam.reportMaster.nreporttypecode===reportTypeEnum.MIS){if(inputParam.reportDetail.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportAddDesignComboData\",{nreportdetailcode:parseInt(inputParam.reportDetail.nreportdetailcode),userinfo:inputParam.userInfo}).then(function(response){var parameterMap=constructOptionList(response.data[\"ReportParameter\"]||[],\"nreportparametercode\",\"sreportparametername\",undefined,undefined,true);var reportParameterList=parameterMap.get(\"OptionList\");var designComponentMap=constructOptionList(response.data[\"DesignComponents\"]||[],\"ndesigncomponentcode\",\"sdesigncomponentname\",undefined,undefined,true);var designComponentList=designComponentMap.get(\"OptionList\");var sqlQueryMap=constructOptionList(response.data[\"SQLQuery\"]||[],\"nsqlquerycode\",\"ssqlqueryname\",undefined,undefined,true);var sqlQueryList=sqlQueryMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{reportParameterList:reportParameterList,//:response.data[\"ReportParameter\"] || [], \ndesignComponentList:designComponentList,//:response.data[\"DesignComponents\"] || [],\nsqlQueryList:sqlQueryList,//:response.data[\"SQLQuery\"] || [], \noperation:inputParam.operation,screenName:inputParam.screenName,//selectedRecord:{nmandatory:transactionStatus.YES}, \nselectedRecord:{},openModal:true,ncontrolCode:inputParam.ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_CANNOTCONFIGUREAPPROVEDREPORT\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_CANCONFIGUREMISREPORT\"}));}};}export function getParameterMappingComboService(inputParam){return function(dispatch){if(inputParam.reportMaster.nreporttypecode===reportTypeEnum.MIS){if(inputParam.reportDetail.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportParameterMappingComboData\",{nreportdetailcode:parseInt(inputParam.reportDetail.nreportdetailcode),userinfo:inputParam.userInfo}).then(function(response){if(response.data[\"ChildComponentList\"].length>0){var parentComponentMap=constructOptionList(response.data[\"ParentComponentList\"]||[],\"nreportdesigncode\",\"sdisplayname\",undefined,undefined,true);var parentComponentList=parentComponentMap.get(\"OptionList\");var childComponentMap=constructOptionList(response.data[\"ChildComponentList\"]||[],\"nreportdesigncode\",\"sdisplayname\",undefined,undefined,true);var childComponentList=childComponentMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{parentComponentList:parentComponentList,//:response.data[\"ParentComponenList\"] || [],\nchildComponentList:childComponentList,//:response.data[\"ChildComponentList\"] || [], \noperation:inputParam.operation,screenName:inputParam.screenName,selectedRecord:{},openModal:true,ncontrolCode:inputParam.ncontrolCode,loading:false}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.warn(intl.formatMessage({id:\"IDS_NOPARAMETERSTOMAP\"}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_CANNOTMAPAPPROVEDREPORT\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_CANMAPMISREPORT\"}));}};}export function viewReportDetail(reportmaster,userInfo,masterData){return function(dispatch){if(reportmaster!==undefined){dispatch(initRequest(true));return rsapi.post(\"reportview/viewReport\",{reportmaster:reportmaster,userinfo:userInfo}).then(function(response){// console.log(\"report action:\", response);\nmasterData=_objectSpread(_objectSpread({},masterData),response.data);if(response.data[\"ViewReportDesignConfig\"]!==undefined){masterData[\"ReportPDFFile\"]=undefined;}// else{\n//     document.getElementById(\"download_data\").setAttribute(\"href\", masterData[\"ReportPDFFile\"]);\n//     document.getElementById(\"download_data\").click();\n// }\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_REPORTNOTFOUND\"}));}};}// export function getActionMappingComboService(inputParam) {\n//     return function (dispatch) {   \n//     if (inputParam.reportDetail.ntransactionstatus === transactionStatus.DRAFT){\n//             dispatch(initRequest(true));\n//             return rsapi.post(\"reportconfig/getActionMappingComboData\", {nreportdetailcode:parseInt(inputParam.reportDetail.nreportdetailcode),\n//                                         userinfo:inputParam.userInfo})\n//         .then(response=>{ \n//             if (response.data[\"ActionMappingChild\"].length > 0)\n//             {     \n//                     dispatch({type: DEFAULT_RETURN, payload:{actionMappingParentList:response.data[\"ActionMappingParent\"] || [],\n//                                                             actionMappingChildList:response.data[\"ActionMappingChild\"] || [], \n//                                                             operation:inputParam.operation, \n//                                                             screenName:inputParam.screenName,   \n//                                                             selectedRecord:{}, \n//                                                             openModal : true,\n//                                                             ncontrolCode:inputParam.ncontrolCode,\n//                                                             loading:false\n//                                                             }}); \n//             }\n//             else{\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\n//                 toast.warn(intl.formatMessage({id:\"IDS_NOACTIONSTOMAP\"}))\n//             }\n//         })\n//         .catch(error=>{\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\n//             if (error.response.status === 500){\n//                 toast.error(error.message);\n//             } \n//             else{               \n//                 toast.warn(error.response.data);\n//             }  \n//         })\n//     }\n//     else{\n//         toast.warn(intl.formatMessage({id:\"IDS_CANNOTACTIONMAPAPPROVEDREPORT\"}))\n//     }\n// }}\nexport function getReportViewChildDataList(inputParam){return function(dispatch){// dispatch(initRequest(true));\nreturn rsapi.post(\"reportview/getChildDataList\",_objectSpread({},inputParam[\"inputData\"])).then(function(response){var controlList=inputParam.viewReportDesignConfigList;var selectedRecord=inputParam.selectedRecord;Object.keys(response.data).map(function(displayName){var index=controlList.findIndex(function(item){return displayName===item.sdisplayname;});var comboMap=constructOptionList(response.data[displayName]||[],controlList[index].svaluemember,controlList[index].sdisplaymember,undefined,undefined,true);var comboList=comboMap.get(\"OptionList\");selectedRecord[controlList[index].svaluemember]=undefined;return controlList[index][\"dataList\"]=comboList;//response.data[displayName]\n});dispatch({type:DEFAULT_RETURN,payload:{viewReportDesignConfigList:controlList,loading:false,inputFieldData:inputParam.inputData.inputfielddata,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function viewReportDetailWithParameters(viewReportParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportview/viewReportWithParameters\",_objectSpread({},viewReportParam)).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},viewReportParam.masterData),response.data),{},{ReportPDFFile:response.data[\"ReportPDFFile\"],SelectedReportDetails:response.data[\"SelectedReportDetails\"],ReportPDFPath:response.data[\"ReportPDFPath\"],ViewReportDesignConfig:undefined});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false//openModal:false\n}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReportsByModule(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportview/getReportView\",{nreportmodulecode:inputParam.nreportmodulecode,userinfo:inputParam.userInfo}).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);// const  reportModuleMap  = constructOptionList(masterData.ViewReportModuleList ||[], \"nreportmodulecode\",\n//                          \"smoduledisplayname\" , undefined, undefined, true);\n// const  reportModuleList  = reportModuleMap.get(\"OptionList\");\nsortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,//viewReportModuleList:reportModuleList,\noperation:null,modalName:undefined,loading:false,selectedRecord:inputParam.selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getControlButton(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getControlButton\",{nformcode:inputParam.ControlScreen.nformcode,userinfo:inputParam.userInfo}).then(function(response){var controlButtonMap=constructOptionList(response.data||[],\"ncontrolcode\",\"scontrolids\",undefined,undefined,true);var controlButtonList=controlButtonMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{controlButton:controlButtonList,//: response.data,                                            \nloading:false,selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{nregsubtypecode:undefined//nregsubtypecode:{label:\"Please Select...\", value:-4}\n})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReportRegSubType(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportRegistrationSubType\",{nregtypecode:inputParam.registrationType.nregtypecode,userinfo:inputParam.userInfo}).then(function(response){var regSubTypeMap=constructOptionList(response.data||[],\"nregsubtypecode\",\"sregsubtypename\",undefined,undefined,true);var regSubTypeList=regSubTypeMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{regSubTypeList:regSubTypeList,//: response.data,                                            \nloading:false,ApproveConfigList:[],selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{nregsubtypecode:undefined,napproveconfversioncode:undefined//nregsubtypecode:{label:\"Please Select...\", value:-4}\n})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReportSubType(inputParam){return function(dispatch){var _rsapi$post;dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportSubType\",(_rsapi$post={nreporttypecode:inputParam.reportType.nreporttypecode},_defineProperty(_rsapi$post,\"nreporttypecode\",inputParam.reportType.nreporttypecode),_defineProperty(_rsapi$post,\"userinfo\",inputParam.userInfo),_rsapi$post)).then(function(response){// const reportSubTypeMap = constructOptionList(response.data.COAReportType || [], \"ncoareporttypecode\",\n//     \"scoareporttypename\", undefined, undefined, true);\n// const reportSubTypeList = reportSubTypeMap.get(\"OptionList\");\nvar certificateTypeMap=constructOptionList(response.data.CertificateType||[],\"ncertificatetypecode\",\"scertificatetype\",undefined,undefined,true);var certificateTypeList=certificateTypeMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{// reportSubTypeList,\ncertificateTypeList:certificateTypeList,loading:false,selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{ncoareporttypecode:undefined,ncertificatetypecode:\"\"// ncoareporttypecode:{label:\"Please Select...\", value:-4}\n})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReportSampletype(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportSampleType\",{nsampletypecode:inputParam.nsampletypecode,nreporttypecode:inputParam.reportType.nreporttypecode,userinfo:inputParam.userInfo}).then(function(response){// const reportRegTypeMap  = constructOptionList(response.data.Regtype ||[], \"nregtypecode\",\n//                          \"sregtypename\" , undefined, undefined, true);   \n// const  reportRegTypeList = reportRegTypeMap.get(\"OptionList\");\n// // const reportRegSubTypeMap  = constructOptionList(response.data.RegSubtype ||[], \"nregsubtypecode\",\n// // \"sregsubtypename\" , undefined, undefined, true);   \n// //   const  reportRegSubTypeList = reportRegSubTypeMap.get(\"OptionList\");\nvar sampleTypeMap=constructOptionList(response.data[\"SampleType\"]||[],\"nsampletypecode\",\"ssampletypename\",undefined,undefined,true);var sampleTypeList=sampleTypeMap.get(\"OptionList\");var regTypeMap=constructOptionList(response.data[\"RegistrationType\"]||[],\"nregtypecode\",\"sregtypename\",undefined,undefined,true);var regTypeList=regTypeMap.get(\"OptionList\");// const regSubTypeMap = constructOptionList(response.data[\"RegistrationSubType\"] || [], \"nregsubtypecode\",\n//     \"sregsubtypename\", undefined, undefined, true);\n// const regSubTypeList = regSubTypeMap.get(\"OptionList\");\nvar coaReportTypeMap=constructOptionList(response.data.COAReportType||[],\"ncoareporttypecode\",\"scoareporttypename\",undefined,undefined,true);var reportSubTypeList=coaReportTypeMap.get(\"OptionList\");var certificateType=constructOptionList(response.data.CertificateType||[],\"ncertificatetypecode\",\"scertificatetype\",undefined,undefined,true);var certificateTypeList=certificateType.get(\"OptionList\");var nsampletypecode=getComboLabelValue(response.data[\"SelectedSampleType\"],response.data[\"SampleType\"],\"nsampletypecode\",\"ssampletypename\");dispatch({type:DEFAULT_RETURN,payload:{sampleTypeList:sampleTypeList,regTypeList:regTypeList,//  regSubTypeList,\nreportSubTypeList:reportSubTypeList,loading:false,certificateTypeList:certificateTypeList,selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{nsampletypecode:nsampletypecode,nregtypecode:undefined,ncoareporttypecode:undefined,ncertificatetypecode:\"\"})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getregtype(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getRegistrationtypeForSample\",{nsampletypecode:inputParam.sampleType.nsampletypecode,nregtypecode:inputParam.nregtypecode,nreporttypecode:inputParam.selectedRecord.nreporttypecode.value,userinfo:inputParam.userInfo}).then(function(response){// const reportRegTypeMap  = constructOptionList(response.data.Regtype ||[], \"nregtypecode\",\n//                          \"sregtypename\" , undefined, undefined, true);   \n// const  reportRegTypeList = reportRegTypeMap.get(\"OptionList\");\n// // const reportRegSubTypeMap  = constructOptionList(response.data.RegSubtype ||[], \"nregsubtypecode\",\n// // \"sregsubtypename\" , undefined, undefined, true);   \n// //   const  reportRegSubTypeList = reportRegSubTypeMap.get(\"OptionList\");\n// const sampleTypeMap = constructOptionList(response.data[\"SampleType\"] || [], \"nsampletypecode\",\n// \"ssampletypename\", undefined, undefined, true);\n// const sampleTypeList = sampleTypeMap.get(\"OptionList\");\nvar regTypeMap=constructOptionList(response.data[\"RegistrationType\"]||[],\"nregtypecode\",\"sregtypename\",undefined,undefined,true);var regTypeList=regTypeMap.get(\"OptionList\");// const regSubTypeMap = constructOptionList(response.data[\"RegistrationSubType\"] || [], \"nregsubtypecode\",\n//     \"sregsubtypename\", undefined, undefined, true);\n// const regSubTypeList = regSubTypeMap.get(\"OptionList\");\nvar coaReportTypeMap=constructOptionList(response.data.COAReportType||[],\"ncoareporttypecode\",\"scoareporttypename\",undefined,undefined,true);var reportSubTypeList=coaReportTypeMap.get(\"OptionList\");var certificateType=constructOptionList(response.data.CertificateType||[],\"ncertificatetypecode\",\"scertificatetype\",undefined,undefined,true);var certificateTypeList=certificateType.get(\"OptionList\");//    const nregtypecode = getComboLabelValue(response.data[\"SelectedRegType\"],\n//      response.data[\"RegistrationType\"], \"nregtypecode\", \"sregtypename\")\ndispatch({type:DEFAULT_RETURN,payload:{//   sampleTypeList,\nregTypeList:regTypeList,regSubTypeList:[],ApproveConfigList:[],reportSubTypeList:reportSubTypeList,loading:false,certificateTypeList:certificateTypeList,selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{nregtypecode:undefined,nregsubtypecode:undefined,ncoareporttypecode:undefined,ncertificatetypecode:\"\",napproveconfversioncode:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReportRegSubTypeApproveConfigVersion(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"reportconfig/getReportRegSubTypeApproveConfigVersion\",{nregtypecode:inputParam.selectedRecord.nregtypecode.value,nregsubtypecode:inputParam.registrationsubType.nregsubtypecode,userinfo:inputParam.userInfo}).then(function(response){var ApproveConfigVersionMap=constructOptionList(response.data||[],\"napproveconfversioncode\",\"sversionname\",undefined,undefined,false);var ApproveConfigList=ApproveConfigVersionMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{ApproveConfigList:ApproveConfigList,//: response.data,                                            \nloading:false,selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{napproveconfversioncode:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/ReportDesignerAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","getComboLabelValue","constructOptionList","toast","initRequest","intl","transactionStatus","reportTypeEnum","getReportMasterComboService","inputParam","dispatch","nreportcode","operation","mastertoedit","primaryKeyName","post","userinfo","userInfo","filterreporttype","filterReportType","then","response","reportTypeMap","data","undefined","reportModuleMap","reportSubTypeMap","sampleTypeMap","regTypeMap","regSubTypeMap","approvaConfigVersionMap","sectionMap","decisionTypeMap","certificateTypeMap","controlScreenTypeMap","reportTypeList","get","reportModuleList","reportSubTypeList","regTypeList","sampleTypeList","regSubTypeList","sectionList","decisionTypeList","certificateTypeList","controlScreenTypeList","ApproveConfigList","selectedRecord","ntransactionstatus","ACTIVE","respObject","DRAFT","status","APPROVED","JSON","parse","stringify","nreporttypecode","SAMPLE","COA","value","nsampletypecode","label","ssampletypename","nregtypecode","sregtypename","nregsubtypecode","sregsubtypename","napproveconfversioncode","sapproveversionname","nsectioncode","ssectionname","ncoareporttypecode","scoareporttypename","nreportdecisiontypecode","sdecisiontypename","MIS","nreportmodulecode","smoduledisplayname","SCREENWISE","ncontrolcode","scontrolids","nformcode","sdisplayname","BATCH","ncertificatetypecode","scertificatetype","sbatchtypename","item","sreportdisplayname","reportDecisionTypeList","controlScreen","isneedregtype","YES","isneedsection","type","payload","screenName","openModal","ncontrolCode","loading","catch","error","message","warn","getReportDetailComboService","detailtoedit","masterData","SelectedReportMaster","nreportdetailcode","reportmaster","formatMessage","id","RETIRED","getSelectedReportMasterDetail","parseInt","SelectedFilterReportType","toString","modalName","getSelectedReportDetail","getConfigReportComboService","reportMaster","reportDetail","parameterMap","reportParameterList","designComponentMap","designComponentList","sqlQueryMap","sqlQueryList","getParameterMappingComboService","length","parentComponentMap","parentComponentList","childComponentMap","childComponentList","viewReportDetail","getReportViewChildDataList","controlList","viewReportDesignConfigList","Object","keys","map","displayName","index","findIndex","comboMap","svaluemember","sdisplaymember","comboList","inputFieldData","inputData","inputfielddata","viewReportDetailWithParameters","viewReportParam","ReportPDFFile","SelectedReportDetails","ReportPDFPath","ViewReportDesignConfig","getReportsByModule","getControlButton","ControlScreen","controlButtonMap","controlButtonList","controlButton","getReportRegSubType","registrationType","getReportSubType","reportType","CertificateType","getReportSampletype","coaReportTypeMap","COAReportType","certificateType","getregtype","sampleType","getReportRegSubTypeApproveConfigVersion","registrationsubType","ApproveConfigVersionMap"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData, getComboLabelValue, constructOptionList } from '../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { transactionStatus, reportTypeEnum } from '../components/Enumeration';\r\n\r\nexport function getReportMasterComboService(inputParam) {\r\n    return function (dispatch) {\r\n        // if (inputParam.operation === \"create\" || (inputParam.operation === \"update\" && inputParam.detailtoedit.ntransactionstatus !== transactionStatus.APPROVED))\r\n        // {      \r\n        dispatch(initRequest(true));\r\n        let nreportcode = null;\r\n        if (inputParam.operation === \"update\") {\r\n            nreportcode = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n        }\r\n        return rsapi.post(\"reportconfig/getReportMasterComboData\", {\r\n            nreportcode,\r\n            userinfo: inputParam.userInfo,\r\n            filterreporttype: inputParam.filterReportType\r\n        })\r\n            .then(response => {\r\n\r\n                const reportTypeMap = constructOptionList(response.data[\"ReportType\"] || [], \"nreporttypecode\",\r\n                    \"sdisplayname\", undefined, undefined, true);\r\n                const reportModuleMap = constructOptionList(response.data[\"ReportModule\"] || [], \"nreportmodulecode\",\r\n                    \"sdisplayname\", undefined, undefined, true);\r\n                const reportSubTypeMap = constructOptionList(response.data[\"COAReportType\"] || [], \"ncoareporttypecode\",\r\n                    \"scoareporttypename\", undefined, undefined, true);\r\n                const sampleTypeMap = constructOptionList(response.data[\"SampleType\"] || [], \"nsampletypecode\",\r\n                    \"ssampletypename\", undefined, undefined, true);\r\n                const regTypeMap = constructOptionList(response.data[\"RegistrationType\"] || [], \"nregtypecode\",\r\n                    \"sregtypename\", undefined, undefined, true);                \r\n                const regSubTypeMap = constructOptionList(response.data[\"RegistrationSubType\"] || [], \"nregsubtypecode\",\r\n                    \"sregsubtypename\", undefined, undefined, true);\r\n                 const approvaConfigVersionMap = constructOptionList(response.data[\"ApprovalConfigVersion\"] || [], \"napproveconfversioncode\",\r\n                    \"sversionname\", undefined, undefined, false);\r\n                const sectionMap = constructOptionList(response.data[\"SectionList\"] || [], \"nsectioncode\",\r\n                    \"ssectionname\", undefined, undefined, true);\r\n                const decisionTypeMap = constructOptionList(response.data[\"ReportDecisionType\"] || [], \"nreportdecisiontypecode\",\r\n                    \"sdecisiontypename\", undefined, undefined, true);\r\n                const certificateTypeMap = constructOptionList(response.data[\"CertificateType\"] || [], \"ncertificatetypecode\",\r\n                    \"scertificatetype\", undefined, undefined, true);\r\n                const controlScreenTypeMap = constructOptionList(response.data[\"ControlScreen\"] || [], \"nformcode\",\r\n                    \"sdisplayname\", undefined, undefined, true);\r\n\r\n                const reportTypeList = reportTypeMap.get(\"OptionList\");\r\n                const reportModuleList = reportModuleMap.get(\"OptionList\");\r\n                const reportSubTypeList = reportSubTypeMap.get(\"OptionList\");\r\n                const regTypeList = regTypeMap.get(\"OptionList\");\r\n                const sampleTypeList = sampleTypeMap.get(\"OptionList\");\r\n                const regSubTypeList = regSubTypeMap.get(\"OptionList\");\r\n                const sectionList = sectionMap.get(\"OptionList\");\r\n                const decisionTypeList = decisionTypeMap.get(\"OptionList\");\r\n                const certificateTypeList = certificateTypeMap.get(\"OptionList\");\r\n                const controlScreenTypeList = controlScreenTypeMap.get(\"OptionList\");\r\n               const  ApproveConfigList=approvaConfigVersionMap.get(\"OptionList\");\r\n\r\n                let selectedRecord = { ntransactionstatus: transactionStatus.ACTIVE };\r\n                let respObject = { \"reportVersionStatus\": transactionStatus.DRAFT };\r\n\r\n                if (inputParam.operation === \"update\") {\r\n                    if (response.status === 202) {\r\n                        respObject[\"reportVersionStatus\"] = transactionStatus.APPROVED;\r\n                        respObject[\"ApprovedReportMaster\"] = response.data[\"SelectedReportDesigner\"];\r\n                    }\r\n                    selectedRecord = JSON.parse(JSON.stringify(response.data[\"SelectedReportDesigner\"]));\r\n                    if (selectedRecord.nreporttypecode === reportTypeEnum.SAMPLE\r\n                        || selectedRecord.nreporttypecode === reportTypeEnum.COA) {\r\n                            selectedRecord[\"nsampletypecode\"] = {\r\n                                value: response.data[\"SelectedReportDesigner\"].nsampletypecode,\r\n                                label: response.data[\"SelectedReportDesigner\"].ssampletypename\r\n                            };\r\n                        // selectedRecord[\"nregtypecode\"] = {\r\n                        //     value: response.data[\"SelectedReportDesigner\"].nregtypecode,\r\n                        //     label: response.data[\"SelectedReportDesigner\"].sregtypename\r\n                        // };\r\n                        if (response.data[\"SelectedReportDesigner\"].nregtypecode !== -1) {\r\n                            selectedRecord[\"nregtypecode\"] = {\r\n                                value: response.data[\"SelectedReportDesigner\"].nregtypecode,\r\n                                label: response.data[\"SelectedReportDesigner\"].sregtypename\r\n                            };\r\n                        }\r\n                        else {\r\n                            selectedRecord[\"nregtypecode\"] = undefined;\r\n                        }\r\n                        if (response.data[\"SelectedReportDesigner\"].nregsubtypecode !== -1) {\r\n                            selectedRecord[\"nregsubtypecode\"] = {\r\n                                value: response.data[\"SelectedReportDesigner\"].nregsubtypecode,\r\n                                label: response.data[\"SelectedReportDesigner\"].sregsubtypename\r\n                            };\r\n                        }\r\n                        else {\r\n                            selectedRecord[\"nregsubtypecode\"] = undefined;\r\n                        }\r\n\r\n\r\n                        if (response.data[\"SelectedReportDesigner\"].nregsubtypecode !== -1) {\r\n                            selectedRecord[\"napproveconfversioncode\"] = {\r\n                                value: response.data[\"SelectedReportDesigner\"].napproveconfversioncode,\r\n                                label: response.data[\"SelectedReportDesigner\"].sapproveversionname\r\n                            };\r\n                        }\r\n                        else {\r\n                            selectedRecord[\"nregsubtypecode\"] = undefined;\r\n                        }\r\n\r\n                        if (response.data[\"SelectedReportDesigner\"].nsectioncode !== -1) {\r\n                            selectedRecord[\"nsectioncode\"] = {\r\n                                value: response.data[\"SelectedReportDesigner\"].nsectioncode,\r\n                                label: response.data[\"SelectedReportDesigner\"].ssectionname\r\n                            };\r\n                        }\r\n                        else {\r\n                            selectedRecord[\"nsectioncode\"] = undefined;\r\n                        }\r\n\r\n                        if (response.data[\"SelectedReportDesigner\"].ncoareporttypecode !== -1) {\r\n                            selectedRecord[\"ncoareporttypecode\"] = {\r\n                                value: response.data[\"SelectedReportDesigner\"].ncoareporttypecode,\r\n                                label: response.data[\"SelectedReportDesigner\"].scoareporttypename\r\n                            };\r\n                        }\r\n                        else {\r\n                            selectedRecord[\"ncoareporttypecode\"] = undefined;\r\n                        }\r\n\r\n                        if (selectedRecord.nreporttypecode === reportTypeEnum.SAMPLE) {\r\n                            selectedRecord[\"nreportdecisiontypecode\"] = {\r\n                                value: response.data[\"SelectedReportDesigner\"].nreportdecisiontypecode,\r\n                                label: response.data[\"SelectedReportDesigner\"].sdecisiontypename\r\n                            };\r\n                        }\r\n\r\n                    }\r\n                    else if (selectedRecord.nreporttypecode === reportTypeEnum.MIS) {\r\n                        selectedRecord[\"nreportmodulecode\"] = {\r\n                            value: response.data[\"SelectedReportDesigner\"].nreportmodulecode,\r\n                            label: response.data[\"SelectedReportDesigner\"].smoduledisplayname,\r\n\r\n                        };\r\n\r\n                        selectedRecord[\"nreportmodule\"] = {\r\n                            value: response.data[\"SelectedReportDesigner\"].smoduledisplayname,\r\n                            label: response.data[\"SelectedReportDesigner\"].smoduledisplayname\r\n                        }\r\n\r\n                    }\r\n\r\n                    else if (selectedRecord.nreporttypecode === reportTypeEnum.SCREENWISE) {\r\n                        selectedRecord[\"ncontrolcode\"] = {\r\n                            value: response.data[\"SelectedReportDesigner\"].ncontrolcode,\r\n                            label: response.data[\"SelectedReportDesigner\"].scontrolids\r\n                        };\r\n\r\n                        selectedRecord[\"nformcode\"] = {\r\n                            value: response.data[\"SelectedReportDesigner\"].nformcode,\r\n                            label: response.data[\"SelectedReportDesigner\"].sdisplayname\r\n                        };\r\n                    }\r\n\r\n                    if (selectedRecord.nreporttypecode === reportTypeEnum.SAMPLE\r\n                        || selectedRecord.nreporttypecode === reportTypeEnum.BATCH) {\r\n                        if (response.data[\"SelectedReportDesigner\"].ncoareporttypecode !== -1) {\r\n                            selectedRecord[\"ncoareporttypecode\"] = {\r\n                                value: response.data[\"SelectedReportDesigner\"].ncoareporttypecode,\r\n                                label: response.data[\"SelectedReportDesigner\"].scoareporttypename\r\n                            };\r\n                        }\r\n                        else {\r\n                            selectedRecord[\"ncoareporttypecode\"] = undefined;\r\n                        }\r\n                        selectedRecord[\"ncertificatetypecode\"] = {\r\n                            value: response.data[\"SelectedReportDesigner\"].ncertificatetypecode,\r\n                            label: response.data[\"SelectedReportDesigner\"].scertificatetype\r\n                        };\r\n\r\n                        selectedRecord[\"sbatchtypename\"] = response.data[\"SelectedReportDesigner\"].sbatchtypename\r\n                    }\r\n\r\n                    selectedRecord[\"ntransactionstatus\"] = response.data[\"SelectedReportDesigner\"].ntransactionstatus;\r\n\r\n                    selectedRecord[\"nreporttypecode\"] = {\r\n                        item: response.data[\"SelectedReportDesigner\"],\r\n                        value: response.data[\"SelectedReportDesigner\"].nreporttypecode,\r\n                        label: response.data[\"SelectedReportDesigner\"].sreportdisplayname\r\n                    };\r\n\r\n                }\r\n\r\n                respObject = {\r\n                    ...respObject, reportSubTypeList,//:response.data[\"COAReportType\"]  || [], \r\n                    sampleTypeList,\r\n                    regTypeList,//:response.data[\"RegistrationType\"]  || [],                                                               \r\n                    regSubTypeList,//:response.data[\"RegistrationSubType\"]  || [],  \r\n                    sectionList,\r\n                    ApproveConfigList,//:response.data[\"SectionList\"] || [],   \r\n                    certificateTypeList,\r\n                    reportDecisionTypeList: decisionTypeList,\r\n                    controlScreen: controlScreenTypeList,\r\n                    //masterData:{...inputParam.masterData, SelectedFilterReportType:response.data[\"SelectedReportType\"] }                                                             \r\n                };\r\n\r\n                if (inputParam.operation === \"create\") {\r\n                    selectedRecord[\"nreporttypecode\"] = {\r\n                        item: response.data[\"SelectedReportType\"], label: response.data[\"SelectedReportType\"].sdisplayname,\r\n                        value: response.data[\"SelectedReportType\"].nreporttypecode\r\n                    }\r\n\r\n                    if (selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SAMPLE\r\n                        && selectedRecord[\"nreporttypecode\"]['item'].isneedregtype === transactionStatus.YES) {\r\n                        // selectedRecord[\"nregtypecode\"] = getComboLabelValue(response.data[\"SelectedRegType\"],\r\n                        //     response.data[\"RegistrationType\"], \"nregtypecode\", \"sregtypename\")\r\n                        selectedRecord[\"nsampletypecode\"] = getComboLabelValue(response.data[\"SelectedSampleType\"],\r\n                            response.data[\"SampleType\"], \"nsampletypecode\", \"ssampletypename\")\r\n\r\n                        if (selectedRecord[\"nreporttypecode\"]['item'].isneedsection === transactionStatus.YES) {\r\n                            selectedRecord[\"nsectioncode\"] = sectionMap.get(\"DefaultValue\");\r\n                        }\r\n                    }\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        reportTypeList,//:response.data[\"ReportType\"] || [], \r\n                        reportModuleList,//:response.data[\"ReportModule\"] || [] ,\r\n                        ...respObject,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        selectedRecord,\r\n                        openModal: true,\r\n                        ncontrolCode: inputParam.ncontrolcode,\r\n                        loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        // }\r\n        // else{       \r\n        //     toast.warn(intl.formatMessage({id: \"IDS_CANNOTUPDATEAPPROVEDREPORT\"}));\r\n        // }\r\n\r\n    }\r\n}\r\n\r\nexport function getReportDetailComboService(inputParam) {\r\n    return function (dispatch) {\r\n        if (inputParam.operation === \"create\" || (inputParam.operation === \"update\" && inputParam.detailtoedit.ntransactionstatus === transactionStatus.DRAFT)) {\r\n            if (inputParam.masterData.SelectedReportMaster !== null) {\r\n                dispatch(initRequest(true));\r\n                let nreportdetailcode = null;\r\n                if (inputParam.operation === \"update\") {\r\n                    nreportdetailcode = inputParam.detailtoedit[inputParam.primaryKeyName];\r\n                }\r\n                return rsapi.post(\"reportconfig/getReportDetailComboData\", {\r\n                    nreportdetailcode,\r\n                    reportmaster: inputParam.masterData.SelectedReportMaster,\r\n                    userinfo: inputParam.userInfo\r\n                })\r\n                    .then(response => {\r\n\r\n                        // const reportType = response.data[\"SelectedReportType\"];\r\n                        // const reportSubTypeMap  = constructOptionList(response.data[\"COAReportType\"] ||[], \"ncoareporttypecode\",\r\n                        //                             \"scoareporttypename\" , undefined, undefined, true);    \r\n                        // const sectionMap  = constructOptionList(response.data[\"SectionList\"] ||[], \"nsectioncode\",\r\n                        //                             \"ssectionname\", undefined, undefined, true);\r\n\r\n                        // const decisionTypeMap  = constructOptionList(response.data[\"ReportDecisionType\"] ||[], \"nreportdecisiontypecode\",\r\n                        //                             \"sdecisiontypename\" , undefined, undefined, true);   \r\n\r\n                        // const certificateTypeMap  = constructOptionList(response.data[\"CertificateType\"] ||[], \"ncertificatetypecode\",\r\n                        //                             \"scertificatetype\" , undefined, undefined, true);\r\n\r\n                        // const  reportSubTypeList = reportSubTypeMap.get(\"OptionList\");\r\n                        // const  sectionList = sectionMap.get(\"OptionList\"); \r\n                        // const  decisionTypeList = decisionTypeMap.get(\"OptionList\");\r\n                        // const  certificateTypeList = certificateTypeMap.get(\"OptionList\");  \r\n\r\n                        let selectedRecord = {};\r\n                        let respObject = {};\r\n                        if (inputParam.operation === \"update\") {\r\n                            selectedRecord = response.data[\"SelectedReportDetail\"];\r\n\r\n                        }\r\n                        selectedRecord[\"ntransactionstatus\"] = transactionStatus.DRAFT;\r\n\r\n                        //    console.log(\"selected in action:\", selectedRecord);\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                ...respObject,\r\n                                operation: inputParam.operation,\r\n                                screenName: inputParam.screenName,\r\n                                selectedRecord,\r\n                                openModal: true,\r\n                                ncontrolCode: inputParam.ncontrolcode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_REPORTNOTFOUND\" }));\r\n            }\r\n        }\r\n        else if (inputParam.operation === \"create\" || (inputParam.operation === \"update\" && inputParam.detailtoedit.ntransactionstatus === transactionStatus.APPROVED)) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_CANNOTEDITAPPROVEDREPORT\" }));\r\n        }\r\n        else if (inputParam.operation === \"create\" || (inputParam.operation === \"update\" && inputParam.detailtoedit.ntransactionstatus === transactionStatus.RETIRED)) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_CANNOTEDITRETIREDREPORT\" }));\r\n        }\r\n    }\r\n}\r\n\r\nexport function getSelectedReportMasterDetail(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"reportconfig/getReportDesigner\", {\r\n            nreportcode: parseInt(inputParam.nreportcode),\r\n            nreporttypecode: inputParam.masterData && inputParam.masterData.SelectedFilterReportType ? inputParam.masterData.SelectedFilterReportType.nreporttypecode.toString() : null,\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                const masterData = { ...inputParam.masterData, ...response.data };\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, operation: null, modalName: undefined,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getSelectedReportDetail(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"reportconfig/getReportDetail\", {\r\n            nreportdetailcode: parseInt(inputParam.nreportdetailcode),\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                const masterData = { ...inputParam.masterData, ...response.data };\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, operation: null, modalName: undefined,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getConfigReportComboService(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        if (inputParam.reportMaster.nreporttypecode === reportTypeEnum.MIS) {\r\n            if (inputParam.reportDetail.ntransactionstatus === transactionStatus.DRAFT) {\r\n                dispatch(initRequest(true));\r\n                return rsapi.post(\"reportconfig/getReportAddDesignComboData\", {\r\n                    nreportdetailcode: parseInt(inputParam.reportDetail.nreportdetailcode),\r\n                    userinfo: inputParam.userInfo\r\n                })\r\n                    .then(response => {\r\n\r\n                        const parameterMap = constructOptionList(response.data[\"ReportParameter\"] || [], \"nreportparametercode\",\r\n                            \"sreportparametername\", undefined, undefined, true);\r\n\r\n                        const reportParameterList = parameterMap.get(\"OptionList\");\r\n\r\n                        const designComponentMap = constructOptionList(response.data[\"DesignComponents\"] || [], \"ndesigncomponentcode\",\r\n                            \"sdesigncomponentname\", undefined, undefined, true);\r\n\r\n                        const designComponentList = designComponentMap.get(\"OptionList\");\r\n\r\n                        const sqlQueryMap = constructOptionList(response.data[\"SQLQuery\"] || [], \"nsqlquerycode\",\r\n                            \"ssqlqueryname\", undefined, undefined, true);\r\n\r\n                        const sqlQueryList = sqlQueryMap.get(\"OptionList\");\r\n\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                reportParameterList,//:response.data[\"ReportParameter\"] || [], \r\n                                designComponentList,//:response.data[\"DesignComponents\"] || [],\r\n                                sqlQueryList,//:response.data[\"SQLQuery\"] || [], \r\n                                operation: inputParam.operation,\r\n                                screenName: inputParam.screenName,\r\n                                //selectedRecord:{nmandatory:transactionStatus.YES}, \r\n                                selectedRecord: {},\r\n                                openModal: true,\r\n                                ncontrolCode: inputParam.ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n\r\n                    })\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_CANNOTCONFIGUREAPPROVEDREPORT\" }))\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_CANCONFIGUREMISREPORT\" }))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getParameterMappingComboService(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        if (inputParam.reportMaster.nreporttypecode === reportTypeEnum.MIS) {\r\n            if (inputParam.reportDetail.ntransactionstatus === transactionStatus.DRAFT) {\r\n                dispatch(initRequest(true));\r\n                return rsapi.post(\"reportconfig/getReportParameterMappingComboData\", {\r\n                    nreportdetailcode: parseInt(inputParam.reportDetail.nreportdetailcode),\r\n                    userinfo: inputParam.userInfo\r\n                })\r\n                    .then(response => {\r\n                        if (response.data[\"ChildComponentList\"].length > 0) {\r\n\r\n                            const parentComponentMap = constructOptionList(response.data[\"ParentComponentList\"] || [], \"nreportdesigncode\",\r\n                                \"sdisplayname\", undefined, undefined, true);\r\n                            const parentComponentList = parentComponentMap.get(\"OptionList\");\r\n\r\n                            const childComponentMap = constructOptionList(response.data[\"ChildComponentList\"] || [], \"nreportdesigncode\",\r\n                                \"sdisplayname\", undefined, undefined, true);\r\n                            const childComponentList = childComponentMap.get(\"OptionList\");\r\n\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN, payload: {\r\n                                    parentComponentList,//:response.data[\"ParentComponenList\"] || [],\r\n                                    childComponentList,//:response.data[\"ChildComponentList\"] || [], \r\n                                    operation: inputParam.operation,\r\n                                    screenName: inputParam.screenName,\r\n                                    selectedRecord: {},\r\n                                    openModal: true,\r\n                                    ncontrolCode: inputParam.ncontrolCode,\r\n                                    loading: false\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                            toast.warn(intl.formatMessage({ id: \"IDS_NOPARAMETERSTOMAP\" }))\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n\r\n                    })\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_CANNOTMAPAPPROVEDREPORT\" }))\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_CANMAPMISREPORT\" }))\r\n        }\r\n    }\r\n}\r\n\r\nexport function viewReportDetail(reportmaster, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        if (reportmaster !== undefined) {\r\n            dispatch(initRequest(true));\r\n            return rsapi.post(\"reportview/viewReport\", { reportmaster, userinfo: userInfo })\r\n                .then(response => {\r\n                    // console.log(\"report action:\", response);\r\n                    masterData = { ...masterData, ...response.data };\r\n\r\n                    if (response.data[\"ViewReportDesignConfig\"] !== undefined) {\r\n                        masterData[\"ReportPDFFile\"] = undefined;\r\n                    }\r\n                    // else{\r\n                    //     document.getElementById(\"download_data\").setAttribute(\"href\", masterData[\"ReportPDFFile\"]);\r\n                    //     document.getElementById(\"download_data\").click();\r\n                    // }\r\n\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_REPORTNOTFOUND\" }))\r\n        }\r\n    }\r\n}\r\n\r\n// export function getActionMappingComboService(inputParam) {\r\n//     return function (dispatch) {   \r\n\r\n//     if (inputParam.reportDetail.ntransactionstatus === transactionStatus.DRAFT){\r\n//             dispatch(initRequest(true));\r\n//             return rsapi.post(\"reportconfig/getActionMappingComboData\", {nreportdetailcode:parseInt(inputParam.reportDetail.nreportdetailcode),\r\n//                                         userinfo:inputParam.userInfo})\r\n//         .then(response=>{ \r\n//             if (response.data[\"ActionMappingChild\"].length > 0)\r\n//             {     \r\n//                     dispatch({type: DEFAULT_RETURN, payload:{actionMappingParentList:response.data[\"ActionMappingParent\"] || [],\r\n//                                                             actionMappingChildList:response.data[\"ActionMappingChild\"] || [], \r\n//                                                             operation:inputParam.operation, \r\n//                                                             screenName:inputParam.screenName,   \r\n//                                                             selectedRecord:{}, \r\n//                                                             openModal : true,\r\n//                                                             ncontrolCode:inputParam.ncontrolCode,\r\n//                                                             loading:false\r\n//                                                             }}); \r\n//             }\r\n//             else{\r\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n//                 toast.warn(intl.formatMessage({id:\"IDS_NOACTIONSTOMAP\"}))\r\n//             }\r\n//         })\r\n//         .catch(error=>{\r\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n//             if (error.response.status === 500){\r\n//                 toast.error(error.message);\r\n//             } \r\n//             else{               \r\n//                 toast.warn(error.response.data);\r\n//             }  \r\n\r\n//         })\r\n//     }\r\n//     else{\r\n//         toast.warn(intl.formatMessage({id:\"IDS_CANNOTACTIONMAPAPPROVEDREPORT\"}))\r\n//     }\r\n// }}\r\n\r\nexport function getReportViewChildDataList(inputParam) {\r\n    return function (dispatch) {\r\n        // dispatch(initRequest(true));\r\n        return rsapi.post(\"reportview/getChildDataList\", { ...inputParam[\"inputData\"] })\r\n            .then(response => {\r\n                const controlList = inputParam.viewReportDesignConfigList;\r\n\r\n                const selectedRecord = inputParam.selectedRecord;\r\n\r\n                Object.keys(response.data).map(displayName => {\r\n                    const index = controlList.findIndex(item => displayName === item.sdisplayname);\r\n\r\n                    const comboMap = constructOptionList(response.data[displayName] || [], controlList[index].svaluemember,\r\n                        controlList[index].sdisplaymember, undefined, undefined, true);\r\n\r\n                    const comboList = comboMap.get(\"OptionList\");\r\n                    selectedRecord[controlList[index].svaluemember] = undefined;\r\n\r\n                    return controlList[index][\"dataList\"] = comboList;//response.data[displayName]\r\n                })\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        viewReportDesignConfigList: controlList,\r\n                        loading: false,\r\n                        inputFieldData: inputParam.inputData.inputfielddata,\r\n                        selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function viewReportDetailWithParameters(viewReportParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"reportview/viewReportWithParameters\", { ...viewReportParam })\r\n            .then(response => {\r\n                const masterData = {\r\n                    ...viewReportParam.masterData, ...response.data,\r\n                    ReportPDFFile: response.data[\"ReportPDFFile\"],\r\n                    SelectedReportDetails: response.data[\"SelectedReportDetails\"],\r\n                    ReportPDFPath: response.data[\"ReportPDFPath\"],\r\n                    ViewReportDesignConfig: undefined\r\n                };\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false, //openModal:false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getReportsByModule(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"reportview/getReportView\", {\r\n            nreportmodulecode: inputParam.nreportmodulecode,\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                const masterData = { ...inputParam.masterData, ...response.data };\r\n\r\n                // const  reportModuleMap  = constructOptionList(masterData.ViewReportModuleList ||[], \"nreportmodulecode\",\r\n                //                          \"smoduledisplayname\" , undefined, undefined, true);\r\n                // const  reportModuleList  = reportModuleMap.get(\"OptionList\");\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, //viewReportModuleList:reportModuleList,\r\n                        operation: null, modalName: undefined,\r\n                        loading: false, selectedRecord: inputParam.selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getControlButton(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"reportconfig/getControlButton\", {\r\n            nformcode: inputParam.ControlScreen.nformcode,\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                const controlButtonMap = constructOptionList(response.data || [], \"ncontrolcode\",\r\n                    \"scontrolids\", undefined, undefined, true);\r\n                const controlButtonList = controlButtonMap.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        controlButton: controlButtonList,//: response.data,                                            \r\n                        loading: false,\r\n                        selectedRecord: {\r\n                            ...inputParam.selectedRecord,\r\n                            nregsubtypecode: undefined\r\n                            //nregsubtypecode:{label:\"Please Select...\", value:-4}\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getReportRegSubType(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"reportconfig/getReportRegistrationSubType\", {\r\n            nregtypecode: inputParam.registrationType.nregtypecode,\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                const regSubTypeMap = constructOptionList(response.data || [], \"nregsubtypecode\",\r\n                    \"sregsubtypename\", undefined, undefined, true);\r\n                const regSubTypeList = regSubTypeMap.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        regSubTypeList,//: response.data,                                            \r\n                        loading: false,\r\n                        ApproveConfigList:[],                                           \r\n                        selectedRecord: {\r\n                            ...inputParam.selectedRecord,\r\n                            nregsubtypecode: undefined,\r\n                            napproveconfversioncode: undefined\r\n\r\n                            //nregsubtypecode:{label:\"Please Select...\", value:-4}\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getReportSubType(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"reportconfig/getReportSubType\", {\r\n            nreporttypecode: inputParam.reportType.nreporttypecode,\r\n            nreporttypecode: inputParam.reportType.nreporttypecode,\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n               // const reportSubTypeMap = constructOptionList(response.data.COAReportType || [], \"ncoareporttypecode\",\r\n               //     \"scoareporttypename\", undefined, undefined, true);\r\n               // const reportSubTypeList = reportSubTypeMap.get(\"OptionList\");\r\n\r\n                const certificateTypeMap = constructOptionList(response.data.CertificateType || [], \"ncertificatetypecode\",\r\n                    \"scertificatetype\", undefined, undefined, true);\r\n                const certificateTypeList = certificateTypeMap.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                       // reportSubTypeList,\r\n                        certificateTypeList,\r\n                        loading: false,\r\n                        selectedRecord: {\r\n                            ...inputParam.selectedRecord,\r\n                            ncoareporttypecode: undefined,\r\n                            ncertificatetypecode: \"\"\r\n                            // ncoareporttypecode:{label:\"Please Select...\", value:-4}\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\nexport function getReportSampletype(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"reportconfig/getReportSampleType\", {\r\n            nsampletypecode: inputParam.nsampletypecode, nreporttypecode: inputParam.reportType.nreporttypecode,\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                // const reportRegTypeMap  = constructOptionList(response.data.Regtype ||[], \"nregtypecode\",\r\n                //                          \"sregtypename\" , undefined, undefined, true);   \r\n                // const  reportRegTypeList = reportRegTypeMap.get(\"OptionList\");\r\n\r\n                // // const reportRegSubTypeMap  = constructOptionList(response.data.RegSubtype ||[], \"nregsubtypecode\",\r\n                // // \"sregsubtypename\" , undefined, undefined, true);   \r\n                // //   const  reportRegSubTypeList = reportRegSubTypeMap.get(\"OptionList\");\r\n                \r\n                const sampleTypeMap = constructOptionList(response.data[\"SampleType\"] || [], \"nsampletypecode\",\r\n                \"ssampletypename\", undefined, undefined, true);\r\n                const sampleTypeList = sampleTypeMap.get(\"OptionList\");\r\n                \r\n                const regTypeMap = constructOptionList(response.data[\"RegistrationType\"] || [], \"nregtypecode\",\r\n                    \"sregtypename\", undefined, undefined, true);\r\n                const regTypeList = regTypeMap.get(\"OptionList\");\r\n\r\n                // const regSubTypeMap = constructOptionList(response.data[\"RegistrationSubType\"] || [], \"nregsubtypecode\",\r\n                //     \"sregsubtypename\", undefined, undefined, true);\r\n                // const regSubTypeList = regSubTypeMap.get(\"OptionList\");\r\n\r\n                const coaReportTypeMap = constructOptionList(response.data.COAReportType || [], \"ncoareporttypecode\",\r\n                    \"scoareporttypename\", undefined, undefined, true);\r\n                const reportSubTypeList = coaReportTypeMap.get(\"OptionList\");\r\n\r\n                const certificateType = constructOptionList(response.data.CertificateType || [], \"ncertificatetypecode\",\r\n                    \"scertificatetype\", undefined, undefined, true);\r\n                const certificateTypeList = certificateType.get(\"OptionList\");\r\n\r\n\r\n                const nsampletypecode = getComboLabelValue(response.data[\"SelectedSampleType\"],\r\n                    response.data[\"SampleType\"], \"nsampletypecode\", \"ssampletypename\")\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        sampleTypeList,\r\n                        regTypeList,\r\n                      //  regSubTypeList,\r\n                        reportSubTypeList,\r\n                        loading: false,\r\n                        certificateTypeList,\r\n                        selectedRecord: {\r\n                            ...inputParam.selectedRecord,\r\n                            nsampletypecode: nsampletypecode, nregtypecode: undefined,\r\n                            ncoareporttypecode: undefined,\r\n                            ncertificatetypecode: \"\"\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getregtype(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"reportconfig/getRegistrationtypeForSample\", {\r\n            nsampletypecode: inputParam.sampleType.nsampletypecode,\r\n            nregtypecode: inputParam.nregtypecode, nreporttypecode: inputParam.selectedRecord.nreporttypecode.value,\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                // const reportRegTypeMap  = constructOptionList(response.data.Regtype ||[], \"nregtypecode\",\r\n                //                          \"sregtypename\" , undefined, undefined, true);   \r\n                // const  reportRegTypeList = reportRegTypeMap.get(\"OptionList\");\r\n\r\n                // // const reportRegSubTypeMap  = constructOptionList(response.data.RegSubtype ||[], \"nregsubtypecode\",\r\n                // // \"sregsubtypename\" , undefined, undefined, true);   \r\n                // //   const  reportRegSubTypeList = reportRegSubTypeMap.get(\"OptionList\");\r\n                // const sampleTypeMap = constructOptionList(response.data[\"SampleType\"] || [], \"nsampletypecode\",\r\n                // \"ssampletypename\", undefined, undefined, true);\r\n                // const sampleTypeList = sampleTypeMap.get(\"OptionList\");\r\n                \r\n                const regTypeMap = constructOptionList(response.data[\"RegistrationType\"] || [], \"nregtypecode\",\r\n                    \"sregtypename\", undefined, undefined, true);\r\n                const regTypeList = regTypeMap.get(\"OptionList\");\r\n\r\n                // const regSubTypeMap = constructOptionList(response.data[\"RegistrationSubType\"] || [], \"nregsubtypecode\",\r\n                //     \"sregsubtypename\", undefined, undefined, true);\r\n                // const regSubTypeList = regSubTypeMap.get(\"OptionList\");\r\n\r\n                const coaReportTypeMap = constructOptionList(response.data.COAReportType || [], \"ncoareporttypecode\",\r\n                    \"scoareporttypename\", undefined, undefined, true);\r\n                const reportSubTypeList = coaReportTypeMap.get(\"OptionList\");\r\n\r\n                const certificateType = constructOptionList(response.data.CertificateType || [], \"ncertificatetypecode\",\r\n                    \"scertificatetype\", undefined, undefined, true);\r\n                const certificateTypeList = certificateType.get(\"OptionList\");\r\n\r\n\r\n            //    const nregtypecode = getComboLabelValue(response.data[\"SelectedRegType\"],\r\n              //      response.data[\"RegistrationType\"], \"nregtypecode\", \"sregtypename\")\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                     //   sampleTypeList,\r\n                        regTypeList,\r\n                        regSubTypeList: [],\r\n                        ApproveConfigList:[],                                           \r\n                        reportSubTypeList,\r\n                        loading: false,\r\n                        certificateTypeList,\r\n                        selectedRecord: {\r\n                            ...inputParam.selectedRecord,\r\n                            nregtypecode: undefined, nregsubtypecode: undefined,\r\n                            ncoareporttypecode: undefined,\r\n                            ncertificatetypecode: \"\",\r\n                            napproveconfversioncode: undefined\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getReportRegSubTypeApproveConfigVersion(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"reportconfig/getReportRegSubTypeApproveConfigVersion\", {\r\n            nregtypecode: inputParam.selectedRecord.nregtypecode.value,\r\n            nregsubtypecode: inputParam.registrationsubType.nregsubtypecode,\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                const ApproveConfigVersionMap = constructOptionList(response.data || [], \"napproveconfversioncode\",\r\n                    \"sversionname\", undefined, undefined, false);\r\n                const ApproveConfigList = ApproveConfigVersionMap.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        ApproveConfigList,//: response.data,                                            \r\n                        loading: false,\r\n                        selectedRecord: {\r\n                            ...inputParam.selectedRecord,\r\n                            napproveconfversioncode: undefined\r\n\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}