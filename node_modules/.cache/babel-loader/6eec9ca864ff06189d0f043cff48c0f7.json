{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\credentialmanagement\\\\AddUserSite.js\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst AddUserSite = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sloginid\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LOGINID\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"sloginid\"\n    }),\n    defaultValue: props.selectedUser[\"sloginid\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 20,\n    readOnly: true,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nsitecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SITE\"\n    }),\n    placeholder: \"Please Select...\",\n    options: props.siteList,\n    optionId: \"nsitecode\",\n    optionValue: \"ssitename\",\n    value: props.selectedRecord[\"nsitecode\"],\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'nsitecode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    name: \"ndefaultsite\",\n    type: \"switch\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSITE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSITE\"\n    }),\n    defaultValue: props.selectedRecord[\"ndefaultsite\"] === transactionStatus.YES ? true : false,\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord[\"ndefaultsite\"] === transactionStatus.YES ? true : false,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default injectIntl(AddUserSite);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/credentialmanagement/AddUserSite.js"],"names":["React","injectIntl","Row","Col","FormInput","CustomSwitch","FormSelectSearch","transactionStatus","AddUserSite","props","intl","formatMessage","id","selectedUser","event","onInputOnChange","siteList","selectedRecord","onComboChange","YES"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport {transactionStatus} from '../../components/Enumeration';\r\n\r\nconst AddUserSite = (props) => {\r\n        \r\n        return(\r\n            <Row>                                \r\n                <Col md={12}>\r\n                    <FormInput\r\n                        name={\"sloginid\"}\r\n                        type=\"text\"\r\n                        label={ props.intl.formatMessage({ id:\"IDS_LOGINID\"})}                        \r\n                        placeholder={ props.intl.formatMessage({ id:\"sloginid\"})}\r\n                        defaultValue ={ props.selectedUser[\"sloginid\"] }\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={20}\r\n                        readOnly={true}\r\n                        onChange={(event)=> props.onInputOnChange(event)}                        \r\n                    />\r\n                {/* </Col>\r\n                <Col md={12}> */}\r\n                    <FormSelectSearch\r\n                            name={\"nsitecode\"}\r\n                            formLabel={ props.intl.formatMessage({ id:\"IDS_SITE\"})}                   \r\n                            placeholder=\"Please Select...\"                     \r\n                            options={ props.siteList}\r\n                            optionId=\"nsitecode\"\r\n                            optionValue=\"ssitename\"\r\n                            value = { props.selectedRecord[\"nsitecode\"]}\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}\r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                            onChange = {(event)=> props.onComboChange(event, 'nsitecode')}\r\n                        />\r\n                {/* </Col>\r\n               \r\n                <Col md={12}> */}\r\n                    <CustomSwitch\r\n                        name={\"ndefaultsite\"}\r\n                        type=\"switch\"                    \r\n                        label={ props.intl.formatMessage({ id:\"IDS_DEFAULTSITE\"})}                        \r\n                        placeholder={ props.intl.formatMessage({ id:\"IDS_DEFAULTSITE\"})}\r\n                        defaultValue ={ props.selectedRecord[\"ndefaultsite\"] === transactionStatus.YES ? true :false}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        checked={ props.selectedRecord[\"ndefaultsite\"] === transactionStatus.YES ? true :false}\r\n                        onChange={(event)=> props.onInputOnChange(event)}                        \r\n                        />  \r\n                </Col>\r\n\r\n        </Row>\r\n     )   \r\n}\r\n\r\nexport default injectIntl(AddUserSite);"]},"metadata":{},"sourceType":"module"}