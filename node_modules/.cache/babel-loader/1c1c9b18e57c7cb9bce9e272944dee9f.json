{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import{transactionStatus}from'../../../components/Enumeration';import DataGrid from'../../../components/data-grid/data-grid.component';var FilterStatusTab=function FilterStatusTab(props){var extractedColumnList=[{\"idsName\":\"IDS_FILTERSTATUS\",\"dataField\":\"sfilterstatus\",\"width\":\"250px\"},{\"idsName\":\"IDS_DEFAULTSTATUS\",\"dataField\":\"ndefaultstatus\",\"width\":\"250px\",\"componentName\":\"switch\",\"switchFieldName\":\"ndefaultstatus\",\"switchStatus\":transactionStatus.YES,\"needRights\":false}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{\"no-gutters\":true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"napprovalfiltercode\",data:props.filterData.data,dataResult:props.filterData//dataState={{skip:0}}\n,dataState:props.dataState,dataStateChange:props.dataStateChange,extractedColumnList:extractedColumnList,controlMap:new Map(),userRoleControlRights:{},inputParam:props.inputParam,isComponent:true,isActionRequired:false,isToolBarRequired:false,scrollable:\"scrollable\",hideColumnFilter:true,pageable:true,methodUrl:\"\",onSwitchChange:props.setDefault,switchParam:{operation:\"\",flag:1,napprovalconfigrolecode:props.selectedRole.napprovalconfigrolecode,napprovalsubtypecode:props.napprovalsubtypecode,userInfo:props.userInfo,masterData:props.masterData}}))));};export default injectIntl(FilterStatusTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/approvalconfig/FilterStatusTab.js"],"names":["React","Row","Col","injectIntl","transactionStatus","DataGrid","FilterStatusTab","props","extractedColumnList","YES","filterData","data","dataState","dataStateChange","Map","inputParam","setDefault","operation","flag","napprovalconfigrolecode","selectedRole","napprovalsubtypecode","userInfo","masterData"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,GAAR,CAAaC,GAAb,KAAuB,iBAAvB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,iBAAT,KAAkC,iCAAlC,CACA,MAAOC,CAAAA,QAAP,KAAqB,mDAArB,CACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,GAAMC,CAAAA,mBAAmB,CAAC,CACtB,CAAC,UAAU,kBAAX,CAA8B,YAAY,eAA1C,CAA0D,QAAQ,OAAlE,CADsB,CAEtB,CAAE,UAAW,mBAAb,CAAkC,YAAa,gBAA/C,CAAiE,QAAQ,OAAzE,CACA,gBAAiB,QADjB,CAC4B,kBAAmB,gBAD/C,CAEA,eAAgBJ,iBAAiB,CAACK,GAFlC,CAEuC,aAAc,KAFrD,CAFsB,CAA1B,CAMA,mBACI,qDACA,oBAAC,GAAD,EAAK,aAAY,IAAjB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eAwBI,oBAAC,QAAD,EACI,eAAe,CAAE,qBADrB,CAEI,IAAI,CAAEF,KAAK,CAACG,UAAN,CAAiBC,IAF3B,CAGI,UAAU,CAAEJ,KAAK,CAACG,UAClB;AAJJ,CAKI,SAAS,CAAIH,KAAK,CAACK,SALvB,CAMI,eAAe,CAAIL,KAAK,CAACM,eAN7B,CAOI,mBAAmB,CAAEL,mBAPzB,CAQI,UAAU,CAAE,GAAIM,CAAAA,GAAJ,EARhB,CASI,qBAAqB,CAAE,EAT3B,CAUI,UAAU,CAAEP,KAAK,CAACQ,UAVtB,CAWI,WAAW,CAAE,IAXjB,CAYI,gBAAgB,CAAE,KAZtB,CAaI,iBAAiB,CAAE,KAbvB,CAcI,UAAU,CAAE,YAdhB,CAeI,gBAAgB,CAAE,IAftB,CAgBI,QAAQ,CAAE,IAhBd,CAiBI,SAAS,CAAC,EAjBd,CAkBI,cAAc,CAAER,KAAK,CAACS,UAlB1B,CAmBI,WAAW,CAAE,CAACC,SAAS,CAAC,EAAX,CAAcC,IAAI,CAAC,CAAnB,CAAqBC,uBAAuB,CAACZ,KAAK,CAACa,YAAN,CAAmBD,uBAAhE,CAAwFE,oBAAoB,CAACd,KAAK,CAACc,oBAAnH,CAAwIC,QAAQ,CAACf,KAAK,CAACe,QAAvJ,CAAgKC,UAAU,CAAChB,KAAK,CAACgB,UAAjL,CAnBjB,EAxBJ,CADJ,CADA,CADJ,CAqDH,CA5DD,CA6DA,cAAepB,CAAAA,UAAU,CAACG,eAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { transactionStatus } from '../../../components/Enumeration';\r\nimport DataGrid from '../../../components/data-grid/data-grid.component';\r\nconst FilterStatusTab = (props) => {    \r\n    const extractedColumnList=[\r\n        {\"idsName\":\"IDS_FILTERSTATUS\",\"dataField\":\"sfilterstatus\",\"width\":\"250px\"},\r\n        { \"idsName\": \"IDS_DEFAULTSTATUS\", \"dataField\": \"ndefaultstatus\", \"width\":\"250px\",\r\n        \"componentName\": \"switch\",  \"switchFieldName\": \"ndefaultstatus\", \r\n        \"switchStatus\": transactionStatus.YES, \"needRights\": false}\r\n    ] \r\n    return(\r\n        <>\r\n        <Row no-gutters={true}>\r\n            <Col md={12}>\r\n                {/* <Grid data={props.filterData} >                                       \r\n                    <GridColumn \r\n                        title={props.intl.formatMessage({ id:\"IDS_FILTERSTATUS\"})}\r\n                        field={\"sfilterstatus\"}   \r\n                        cell={(row) =>  ( \r\n                            <td> \r\n                                {row[\"dataItem\"][\"sfilterstatus\"]} \r\n                            </td>)}\r\n                    />\r\n                    <GridColumn\r\n                        field={\"ndefaultstatus\"}\r\n                        \r\n                        title={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                        cell={(row) => (\r\n                            <td>\r\n                                <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"ndefaultstatus\"]}\r\n                                    onChange={(event) =>  props.setDefault(event, row[\"dataItem\"],1,props.selectedRole.napprovalconfigrolecode,props.napprovalsubtypecode\r\n                                    ,props.userInfo,props.masterData)}\r\n                                    checked={row[\"dataItem\"][\"ndefaultstatus\"] === transactionStatus.YES ? true : false}\r\n                                    name={row[\"dataItem\"][\"ntransactionstatus\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                            </td>)}\r\n                    />\r\n                </Grid>  */}\r\n                <DataGrid\r\n                    primaryKeyField={\"napprovalfiltercode\"}\r\n                    data={props.filterData.data}\r\n                    dataResult={props.filterData}\r\n                    //dataState={{skip:0}}\r\n                    dataState = {props.dataState}\r\n                    dataStateChange = {props.dataStateChange}\r\n                    extractedColumnList={extractedColumnList}\r\n                    controlMap={new Map()}\r\n                    userRoleControlRights={{}}\r\n                    inputParam={props.inputParam}                                                                                   \r\n                    isComponent={true}\r\n                    isActionRequired={false}\r\n                    isToolBarRequired={false}\r\n                    scrollable={\"scrollable\"}\r\n                    hideColumnFilter={true}\r\n                    pageable={true}\r\n                    methodUrl=\"\"\r\n                    onSwitchChange={props.setDefault}\r\n                    switchParam={{operation:\"\",flag:1,napprovalconfigrolecode:props.selectedRole.napprovalconfigrolecode,napprovalsubtypecode:props.napprovalsubtypecode,userInfo:props.userInfo,masterData:props.masterData}}\r\n                    \r\n                />\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(FilterStatusTab);"]},"metadata":{},"sourceType":"module"}