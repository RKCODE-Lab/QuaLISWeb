{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\PatientMaster.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { injectIntl, FormattedMessage } from \"react-intl\";\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport DataGrid from \"../../components/data-grid/data-grid.component\";\nimport Fields from \"../../components/PatientMasterFields.json\";\nimport { Query, Builder, BasicConfig, BasicFuncs, Utils as QbUtils } from \"react-awesome-query-builder\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, getPatientDetail, getPatientComboService, filterColumnData, getTestParameter, getPatientReport, getPatientDetailsByFilterQuery } from \"../../actions\";\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\nimport { showEsign, getControlMap, validatePhoneNumber, ageCalculate, formatInputDate, validateEmail, formatDate } from \"../../components/CommonScript\";\nimport { transactionStatus } from \"../../components/Enumeration\";\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport { ReactComponent as Reports } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/report-Icon.svg\";\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\nimport AddPatient from \"./AddPatient\";\nimport Esign from \"../audittrail/Esign\";\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\"; // import ReactTooltip from \"react-tooltip\";\n\nimport { process } from \"@progress/kendo-data-query\";\nimport FilterQueryBuilder from \"../../components/FilterQueryBuilder\";\nimport AddFilteredPatient from \"./AddFilteredPatient\"; //import Filtercomponent from '../../components/Filtercomponent';\n// import FilterDemo from \"./FilterDemo\";\n// import \"antd/dist/antd.css\";\n// import 'react-awesome-query-builder/css/styles.scss';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass PatientMaster extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      let obj = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openAdvFilter: true,\n          openModal: true,\n          slideResult: undefined\n        }\n      };\n      this.setState({\n        config: undefined,\n        tree: undefined\n      });\n      this.props.updateStore(obj);\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState\n      });\n    };\n\n    this.handlePageChange = event => {\n      this.setState({\n        kendoSkip: event.skip,\n        kendoTake: event.take\n      });\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deletePatient(\"Patient\", this.props.Login.masterData.SelectedPatient, \"delete\", deleteId));\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let openAdvFilter = this.props.Login.openAdvFilter;\n      let slideResult = this.props.Login.slideResult;\n      let tree = this.state.tree;\n      let config = this.state.config;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openAdvFilter = false;\n        openModal = false;\n        selectedRecord = {};\n        slideResult = {};\n        config = undefined;\n        tree = undefined;\n        this.setState({\n          config: config,\n          tree: tree\n        });\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          openAdvFilter,\n          slideResult,\n          config,\n          tree\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onChange = (immutableTree, config) => {\n      let selectedRecord = this.state.selectedRecord || {}; // this.setState({ tree: immutableTree, config: config });\n\n      selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config); // const jsonTree = QbUtils.getTree(immutableTree);\n      // <div>SQL where: <pre>{selectedRecord['filterquery']}</pre></div>\n\n      this.setState({\n        tree: immutableTree,\n        config: config,\n        selectedRecord: selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        if (event.target.name === \"sphoneno\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      const age = ageCalculate(dateValue);\n      selectedRecord[\"sage\"] = age;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveGetClick = () => {\n      let inputData = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      inputData[\"filterquery\"] = this.state.selectedRecord['filterquery'];\n\n      if (this.state.selectedRecord['filterquery'] !== undefined) {\n        this.searchRef.current.value = \"\";\n        let paramFlag = true;\n        const inputParam = {\n          classUrl: \"patient\",\n          methodUrl: \"ByPatient\",\n          inputData: inputData,\n          searchRef: this.searchRef,\n          isClearSearch: this.props.Login.isClearSearch\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              }\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.getPatientDetailsByFilterQuery(inputParam, masterData);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUES\"\n        }));\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      if (this.state.selectedRecord['semail'] && this.state.selectedRecord['semail'] !== \"\" && this.state.selectedRecord['semail'] !== \"null\" ? validateEmail(this.state.selectedRecord[\"semail\"]) : true) {\n        let patientData = [];\n        patientData[\"userinfo\"] = this.props.Login.userInfo;\n        let postParam = {\n          inputListName: \"PatientList\",\n          selectedObject: \"SelectedPatient\",\n          primaryKeyField: \"spatientid\"\n        };\n\n        if (this.props.Login.operation === \"update\") {\n          postParam[\"primaryKeyValue\"] = this.props.Login.masterData.SelectedPatient.spatientid;\n          patientData[\"patient\"] = {\n            spatientid: this.props.Login.masterData.SelectedPatient.spatientid,\n            sfirstname: this.state.selectedRecord.sfirstname,\n            slastname: this.state.selectedRecord.slastname,\n            sfathername: this.state.selectedRecord.sfathername,\n            ddob: formatInputDate(this.state.selectedRecord[\"ddob\"], false),\n            sage: this.state.selectedRecord.sage,\n            ngendercode: this.state.selectedRecord.ngendercode.value,\n            ncitycode: this.state.selectedRecord.ncitycode.value,\n            ncountrycode: this.state.selectedRecord.ncountrycode.value,\n            saddress: this.state.selectedRecord.saddress,\n            sdistrict: this.state.selectedRecord.sdistrict,\n            spostalcode: this.state.selectedRecord.spostalcode,\n            sphoneno: this.state.selectedRecord.sphoneno,\n            smobileno: this.state.selectedRecord.smobileno,\n            semail: this.state.selectedRecord.semail,\n            spassportno: this.state.selectedRecord.spassportno,\n            srefid: this.state.selectedRecord.srefid,\n            sexternalid: this.state.selectedRecord.sexternalid\n          };\n        } else {\n          patientData[\"patient\"] = {\n            nsitecode: this.props.Login.userInfo.nmastersitecode\n          };\n          this.patientFieldList.map(item => {\n            return patientData[\"patient\"][item] = this.state.selectedRecord[item] == \"\" || this.state.selectedRecord[item] == undefined ? undefined : this.state.selectedRecord[item];\n          });\n        }\n\n        patientData[\"patient\"][\"ngendercode\"] = this.state.selectedRecord[\"ngendercode\"] ? this.state.selectedRecord[\"ngendercode\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : transactionStatus.NA; // if (patientData[\"patient\"][\"ddob\"] !== undefined\n        //     && patientData[\"patient\"][\"ddob\"] !== null && patientData[\"patient\"][\"ddob\"] !== \"\") {\n        //     patientData[\"patient\"][\"ddob\"] = formatInputDate(patientData[\"patient\"][\"ddob\"],false);\n        // }\n\n        if (this.state.selectedRecord[\"ddob\"]) {\n          patientData[\"patient\"][\"sdob\"] = formatDate(this.state.selectedRecord[\"ddob\"], false);\n        }\n\n        const inputParam = {\n          classUrl: \"patient\",\n          methodUrl: \"Patient\",\n          inputData: patientData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef,\n          isClearSearch: this.props.Login.isClearSearch\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_ENTERVALIDEMAIL\"\n        }));\n      }\n    };\n\n    this.deletePatient = (methodUrl, selectedPatient, operation, ncontrolCode) => {\n      const postParam = {\n        inputListName: \"PatientList\",\n        selectedObject: \"SelectedPatient\",\n        primaryKeyField: \"npatientcode\",\n        primaryKeyValue: selectedPatient.npatientcode,\n        fetchUrl: \"patient/getPatient\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl,\n        postParam,\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          patient: selectedPatient\n        },\n        operation,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_PATIENTMASTER\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          userinfo: { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.handleExpandChange = (row, dataState) => {\n      const viewParam = {\n        userInfo: this.props.Login.userInfo,\n        primaryKeyField: \"npreregno\",\n        masterData: this.props.Login.masterData\n      };\n      this.props.getTestParameter({ ...viewParam,\n        dataState,\n        primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\n        viewRow: row[\"dataItem\"]\n      });\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"patient\",\n        methodUrl: \"Patient\",\n        displayName: \"IDS_PATIENTMASTER\",\n        userInfo: this.props.Login.userInfo,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.state = {\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      selectedPatient: undefined,\n      screenName: undefined,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      isClearSearch: false,\n      dataState: {\n        skip: 0,\n        take: 5\n      },\n      tree: undefined,\n      config: undefined,\n      kendoSkip: 0,\n      kendoTake: 5,\n      fields: {\n        \"patientmaster.sfirstname\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_FIRSTNAME\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter First Name\"\n          }\n        },\n        \"patientmaster.slastname\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_LASTNAME\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter Last Name\"\n          }\n        },\n        \"patientmaster.sfathername\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_FATHERNAME\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter Father Name\"\n          }\n        },\n        \"patientmaster.ngendercode\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_GENDER\"\n          }),\n          \"type\": \"select\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"listValues\": [{\n              \"value\": \"1\",\n              \"title\": \"Male\"\n            }, {\n              \"value\": \"2\",\n              \"title\": \"Female\"\n            }, {\n              \"value\": \"3\",\n              \"title\": \"Others\"\n            }]\n          }\n        },\n        // \"patientmaster.ncitycode\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_CITY\",\n        //   }),\n        //   \"type\": \"select\",\n        //   \"valueSources\": [\"value\"],\n        //   \"fieldSettings\": {\n        //     \"listValues\": [\n        //       { \"value\": \"1\", \"title\": \"Male\" },\n        //       { \"value\": \"2\", \"title\": \"Female\" },\n        //       { \"value\": \"3\", \"title\": \"Others\" }\n        //     ]\n        //   }\n        // },\n        // \"patientmaster.ncountrycode\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_COUNTRY\",\n        //   }),\n        //   \"type\": \"select\",\n        //   \"valueSources\": [\"value\"],\n        //   \"fieldSettings\": {\n        //     \"listValues\": [\n        //       { \"value\": \"1\", \"title\": \"Male\" },\n        //       { \"value\": \"2\", \"title\": \"Female\" },\n        //       { \"value\": \"3\", \"title\": \"Others\" }\n        //     ]\n        //   }\n        // },\n        \"patientmaster.ddob\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_DATEOFBIRTH\"\n          }),\n          \"type\": \"date\",\n          \"valueSources\": [\"value\"]\n        },\n        \"patientmaster.sage\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_AGE\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Age\",\n            \"valuePlaceholder\": \"Enter the Age\"\n          }\n        },\n        \"patientmaster.saddress\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_ADDRESS\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter Address\"\n          }\n        },\n        \"patientmaster.sdistrict\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_DISTRICT\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter District\"\n          }\n        },\n        \"patientmaster.spatientid\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_PATIENTID\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter Patient Id\"\n          }\n        },\n        \"patientmaster.spostalcode\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_POSTALCODE\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter Postal Code\"\n          }\n        },\n        \"patientmaster.sphoneno\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_PHONENO\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter Phoneno\"\n          }\n        },\n        \"patientmaster.smobileno\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_MOBILENO\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter Mobileno\"\n          }\n        },\n        \"patientmaster.semail\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_EMAIL\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter Email\"\n          }\n        },\n        \"patientmaster.srefid\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_REFERENCEID\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter ReferenceId\"\n          }\n        },\n        \"patientmaster.spassportno\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_PASSPORTNO\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter Passportno\"\n          }\n        },\n        \"patientmaster.sexternalid\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_EXTERNALID\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter ExternalID\"\n          }\n        }\n      }\n    };\n    this.searchRef = React.createRef();\n    this.emailRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.patientFieldList = [\"sfirstname\", \"slastname\", \"sfathername\", \"ddob\", \"sage\", \"saddress\", \"sdistrict\", \"spostalcode\", \"sphoneno\", \"smobileno\", \"semail\", \"srefid\", \"spassportno\", \"sexternalid\"];\n    this.searchFieldList = [\"saddress\", \"sage\", \"sdob\", \"sgendername\", \"sfathername\", \"spatientname\", \"spatientid\", \"sphoneno\", \"smobileno\", \"semail\", \"scityname\", \"sdistrict\", \"scountryname\", \"spostalcode\", \"srefid\", \"spassportno\", \"sexternalid\"];\n    this.columnList = [{\n      idsName: \"IDS_ARNO\",\n      dataField: \"sarno\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_PRODUCT\",\n      dataField: \"sproductname\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_SPECIFICATION\",\n      dataField: \"sspecname\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_SPECIMENCOLLECTIONTIME\",\n      dataField: \"scolleciondate\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_RECEIVEDDATE\",\n      dataField: \"sreceiveddate\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_STATUS\",\n      dataField: \"stransdisplaystatus\",\n      width: \"100px\"\n    }];\n    this.childColumnList = [{\n      idsName: \"IDS_TESTNAME\",\n      dataField: \"stestsynonym\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_PARAMETERNAME\",\n      dataField: \"sparametersynonym\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_RESULT\",\n      dataField: \"sresult\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_RESULTFLAG\",\n      dataField: \"sgradename\",\n      width: \"100px\"\n    }, {\n      idsName: \"IDS_RESULTDATE\",\n      dataField: \"sentereddate\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_STATUS\",\n      dataField: \"stransdisplaystatus\",\n      width: \"100px\"\n    }];\n    this.slideList = [{\n      title: this.props.intl.formatMessage({\n        id: \"IDS_PATIENTID\"\n      }),\n      filed: \"spatientid\",\n      width: \"250px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_FIRSTNAME\"\n      }),\n      filed: \"sfirstname\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_LASTNAME\"\n      }),\n      filed: \"slastname\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_FATHERNAME\"\n      }),\n      filed: \"sfathername\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_GENDER\"\n      }),\n      filed: \"sgendername\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_COUNTRY\"\n      }),\n      filed: \"scountryname\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_DATEOFBIRTH\"\n      }),\n      filed: \"sdob\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_DISTRICT\"\n      }),\n      filed: \"sdistrict\",\n      width: \"100px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_POSTALCODE\"\n      }),\n      filed: \"spostalcode\",\n      width: \"100px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_PHONENO\"\n      }),\n      filed: \"sphoneno\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_MOBILENO\"\n      }),\n      filed: \"smobileno\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EMAIL\"\n      }),\n      filed: \"semail\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_ADDRESS\"\n      }),\n      filed: \"saddress\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_REFID\"\n      }),\n      filed: \"srefid\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_PASSPORTNO\"\n      }),\n      filed: \"spassportno\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EXTERNALID\"\n      }),\n      filed: \"sexternalid\",\n      width: \"150px\"\n    }];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const addId = this.state.controlMap.has(\"AddPatient\") && this.state.controlMap.get(\"AddPatient\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditPatient\") && this.state.controlMap.get(\"EditPatient\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeletePatient\") && this.state.controlMap.get(\"DeletePatient\").ncontrolcode;\n    const patientReportId = this.state.controlMap.has(\"PatientReport\") && this.state.controlMap.get(\"PatientReport\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"PatientList\",\n      selectedObject: \"SelectedPatient\",\n      primaryKeyField: \"npatientcode\",\n      fetchUrl: \"patient/getPatient\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const addParam = {\n      screenName: \"IDS_PATIENTMASTER\",\n      operation: \"create\",\n      primaryKeyName: \"npatientcode\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: addId\n    };\n    const editParam = {\n      screenName: \"IDS_PATIENTMASTER\",\n      operation: \"update\",\n      primaryKeyName: \"spatientid\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: editId,\n      inputListName: \"PatientList\",\n      selectedObject: \"SelectedPatient\"\n    };\n    const mandatoryFields = [{\n      mandatory: true,\n      idsName: \"IDS_FIRSTNAME\",\n      dataField: \"sfirstname\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_LASTNAME\",\n      dataField: \"slastname\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, // {\n    //   mandatory: true,\n    //   idsName: \"IDS_FATHERGUARDIANNAME\",\n    //   dataField: \"sfathername\",\n    //   mandatoryLabel: \"IDS_ENTER\",\n    //   controlType: \"textbox\",\n    // },\n    {\n      mandatory: true,\n      idsName: \"IDS_DATEOFBIRTH\",\n      dataField: \"ddob\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, // {\n    //   mandatory: true,\n    //   idsName: \"IDS_AGE\",\n    //   dataField: \"sage\",\n    //   mandatoryLabel: \"IDS_ENTER\",\n    //   controlType: \"textbox\",\n    // },\n    {\n      mandatory: true,\n      idsName: \"IDS_GENDER\",\n      dataField: \"ngendercode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_ADDRESS\",\n      dataField: \"saddress\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    } // {\n    //   mandatory: true,\n    //   idsName: \"IDS_PHONENO\",\n    //   dataField: \"sphoneno\",\n    //   mandatoryLabel: \"IDS_ENTER\",\n    //   controlType: \"textbox\",\n    // },\n    ];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap  mtop-4 mtop-fixed-breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_PATIENTMASTER\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.PatientList,\n      getMasterDetail: user => this.props.getPatientDetail(user, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.SelectedPatient,\n      primaryKeyField: \"spatientid\",\n      mainField: \"spatientname\",\n      firstField: \"sage\",\n      secondField: \"sgendername\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getPatientComboService(addParam),\n      isMultiSelecct: false,\n      hidePaging: false,\n      isClearSearch: this.props.Login.isClearSearch,\n      showMicIcon: true,\n      showAdvFilterIcon: true,\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 17\n      }\n    }, this.props.Login.masterData.PatientList && this.props.Login.masterData.PatientList.length > 0 && this.props.Login.masterData.SelectedPatient ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.SelectedPatient.spatientname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editPatient\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.getPatientComboService(editParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deletePatient\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      name: \"patientReport\",\n      hidden: this.state.userRoleControlRights.indexOf(patientReportId) === -1,\n      onClick: () => this.props.getPatientReport(this.props.Login.masterData.SelectedPatient, this.props.Login.userInfo, patientReportId) //  data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PATIENTREPORT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Reports, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 33\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_FATHERNAME\",\n      message: \"Father Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sfathername == \"null\" ? \"-\" : this.props.Login.masterData.SelectedPatient.sfathername))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DATEOFBIRTH\",\n      message: \"Date Of Birth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sdob === \"null\" || this.props.Login.masterData.SelectedPatient.sdob.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sdob))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_AGE\",\n      message: \"Age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sage === \"null\" || this.props.Login.masterData.SelectedPatient.sage.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sage))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_GENDER\",\n      message: \"Gender\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sgendername === null || this.props.Login.masterData.SelectedPatient.sgendername.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sgendername))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MOBILENO\",\n      message: \"Mobile No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.smobileno === \"null\" || this.props.Login.masterData.SelectedPatient.smobileno.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.smobileno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PHONENO\",\n      message: \"Phone No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sphoneno == \"null\" || this.props.Login.masterData.SelectedPatient.sphoneno === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sphoneno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EMAILID\",\n      message: \"Email ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.semail == \"null\" || this.props.Login.masterData.SelectedPatient.semail.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.semail))), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDRESS\",\n      message: \"Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.saddress === \"null\" || this.props.Login.masterData.SelectedPatient.saddress.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.saddress))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CITY\",\n      message: \"City\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.scityname == \"null\" || this.props.Login.masterData.SelectedPatient.scityname.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.scityname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DISTRICT\",\n      message: \"District\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sdistrict == \"null\" || this.props.Login.masterData.SelectedPatient.sdistrict === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sdistrict))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_COUNTRY\",\n      message: \"COUNTRY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.scountryname == \"null\" || this.props.Login.masterData.SelectedPatient.scountryname.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.scountryname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_POSTALCODE\",\n      message: \"PostalCode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.spostalcode == \"null\" || this.props.Login.masterData.SelectedPatient.spostalcode.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.spostalcode))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REFERENCEID\",\n      message: \"Reference ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.srefid == \"null\" || this.props.Login.masterData.SelectedPatient.srefid.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.srefid))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PASSPORTNO\",\n      message: \"Passport No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.spassportno == \"null\" || this.props.Login.masterData.SelectedPatient.spassportno.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.spassportno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXTERNALID\",\n      message: \"External ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sexternalid == \"null\" || this.props.Login.masterData.SelectedPatient.sexternalid.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sexternalid)))))) : \"\"))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      className: this.props.Login.openAdvFilter ? \"wide-popup\" : \"\" // operation={this.props.Login.operation}\n      ,\n      size: this.props.Login.loadEsign ? \"lg\" : this.props.Login.openAdvFilter ? \"xl\" : \"lg\",\n      operation: this.props.Login.openAdvFilter ? \"\" : this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.Login.openAdvFilter ? this.onSaveGetClick : this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      showSubmit: this.props.Login.openAdvFilter ? true : false,\n      hideSave: this.props.Login.openAdvFilter ? true : false,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.openAdvFilter ? \"\" : this.props.Login.openModal ? mandatoryFields : \"\",\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 17\n        }\n      }) : this.props.Login.openAdvFilter ? /*#__PURE__*/React.createElement(FilterQueryBuilder //fields={Fields}\n      , {\n        fields: this.state.fields,\n        queryArray: this.state.queryArray,\n        skip: this.state.kendoSkip,\n        take: this.state.kendoTake,\n        onChange: this.onChange,\n        tree: this.state.tree,\n        config: this.state.config,\n        gridColumns: this.slideList,\n        filterData: this.props.Login.slideResult || [],\n        handlePageChange: this.handlePageChange,\n        static: true,\n        userInfo: this.props.Login.userInfo // controlMap={this.state.controlMap}\n        // dataState={this.state.dataState}\n        // dataStateChange={this.dataStateChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(AddPatient, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        handleDateChange: this.handleDateChange,\n        genderList: this.props.Login.genderList || [],\n        cityList: this.props.Login.cityList || [],\n        countryList: this.props.Login.countryList || [],\n        selectedPatient: this.props.Login.masterData.SelectedPatient || {},\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      let fields = this.state.fields;\n      let queryBuilderGender = [];\n      let queryBuilderCity = [];\n      let queryBuilderCountry = [];\n      this.props.Login.masterData.genderList && this.props.Login.masterData.genderList.map(item => queryBuilderGender.push({\n        \"value\": item.ngendercode,\n        \"title\": item.sgendername\n      }));\n      this.props.Login.masterData.cityList && this.props.Login.masterData.cityList.map(item => queryBuilderCity.push({\n        \"value\": item.ncitycode,\n        \"title\": item.scityname\n      }));\n      this.props.Login.masterData.countryList && this.props.Login.masterData.countryList.map(item => queryBuilderCountry.push({\n        \"value\": item.ncountrycode,\n        \"title\": item.scountryname\n      })); //this.setState({ queryArray: queryArray });\n\n      fields = { ...fields,\n        // \"patientmaster.ngendercode\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_GENDER\",\n        //   }),\n        //   \"type\": \"select\",\n        //   \"valueSources\": [\"value\"],\n        //   \"fieldSettings\": {\n        //     \"listValues\": queryBuilderGender\n        //   }\n        // },\n        \"patientmaster.ncitycode\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_CITY\"\n          }),\n          \"type\": \"select\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"listValues\": queryBuilderCity\n          }\n        },\n        \"patientmaster.ncountrycode\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_COUNTRY\"\n          }),\n          \"type\": \"select\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"listValues\": queryBuilderCountry\n          }\n        }\n      };\n      this.setState({\n        fields: fields\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getPatientDetail,\n  getPatientComboService,\n  filterColumnData,\n  getTestParameter,\n  getPatientReport,\n  getPatientDetailsByFilterQuery\n})(injectIntl(PatientMaster));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/contactmaster/PatientMaster.jsx"],"names":["React","connect","toast","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","DataGrid","Fields","Query","Builder","BasicConfig","BasicFuncs","Utils","QbUtils","callService","crudMaster","validateEsignCredential","updateStore","getPatientDetail","getPatientComboService","filterColumnData","getTestParameter","getPatientReport","getPatientDetailsByFilterQuery","DEFAULT_RETURN","showEsign","getControlMap","validatePhoneNumber","ageCalculate","formatInputDate","validateEmail","formatDate","transactionStatus","ListMaster","SlideOutModal","ReadOnlyText","ContentPanel","AddPatient","Esign","ConfirmMessage","process","FilterQueryBuilder","AddFilteredPatient","mapStateToProps","state","Login","PatientMaster","Component","constructor","props","handleClick","obj","typeName","data","openAdvFilter","openModal","slideResult","undefined","setState","config","tree","dataStateChange","event","dataState","handlePageChange","kendoSkip","skip","kendoTake","take","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deletePatient","masterData","SelectedPatient","closeModal","loadEsign","selectedRecord","operation","updateInfo","selectedId","onComboChange","comboData","fieldName","onNumericInputOnChange","value","name","onChange","immutableTree","sqlFormat","onInputOnChange","target","type","checked","YES","NO","handleDateChange","dateName","dateValue","age","onSaveGetClick","inputData","userInfo","searchRef","current","paramFlag","inputParam","classUrl","methodUrl","isClearSearch","userRoleControlRights","nformcode","ncontrolCode","screenData","warn","onSaveClick","saveType","formRef","patientData","postParam","inputListName","selectedObject","primaryKeyField","spatientid","sfirstname","slastname","sfathername","ddob","sage","ngendercode","ncitycode","ncountrycode","saddress","sdistrict","spostalcode","sphoneno","smobileno","semail","spassportno","srefid","sexternalid","nsitecode","nmastersitecode","patientFieldList","map","item","NA","selectedPatient","primaryKeyValue","npatientcode","fetchUrl","fecthInputObject","userinfo","patient","screenName","validateEsign","sreason","password","handleExpandChange","row","viewParam","viewRow","reloadData","displayName","masterStatus","error","controlMap","Map","fields","createRef","emailRef","searchFieldList","columnList","idsName","dataField","width","childColumnList","slideList","title","filed","getDerivedStateFromProps","render","addId","has","get","ncontrolcode","editId","patientReportId","filterParam","addParam","primaryKeyName","editParam","mandatoryFields","mandatory","mandatoryLabel","controlType","searchedData","PatientList","user","length","spatientname","indexOf","sdob","sgendername","scityname","scountryname","queryArray","genderList","cityList","countryList","currentTime","componentDidUpdate","previousProps","queryBuilderGender","queryBuilderCity","queryBuilderCountry","push","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,SAA9B,EAAyCC,SAAzC,QAA0D,iBAA1D;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,mCAAxC;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AACA,SACEC,KADF,EAEEC,OAFF,EAGEC,WAHF,EAGeC,UAHf,EAIEC,KAAK,IAAIC,OAJX,QAKO,6BALP;AAMA,SACEC,WADF,EAEEC,UAFF,EAGEC,uBAHF,EAIEC,WAJF,EAKEC,gBALF,EAMEC,sBANF,EAOEC,gBAPF,EAQEC,gBARF,EASEC,gBATF,EASoBC,8BATpB,QAUO,eAVP;AAWA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,mBAHF,EAIEC,YAJF,EAKEC,eALF,EAMEC,aANF,EAOEC,UAPF,QAQO,+BARP;AASA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,UAAP,MAAuB,oDAAvB;AACA,OAAOC,aAAP,MAA0B,gDAA1B;;AAEA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,6BAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,cAAP,MAA2B,0DAA3B,C,CACA;;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B,C,CACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,GAAP;AACD,CAFD;;AAIA,MAAMC,aAAN,SAA4BtD,KAAK,CAACuD,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA0XnBC,WA1XmB,GA0XL,MAAM;AAClB,UAAIC,GAAG,GAAG;AAAEC,QAAAA,QAAQ,EAAE5B,cAAZ;AAA4B6B,QAAAA,IAAI,EAAE;AAAEC,UAAAA,aAAa,EAAE,IAAjB;AAAuBC,UAAAA,SAAS,EAAE,IAAlC;AAAwCC,UAAAA,WAAW,EAAEC;AAArD;AAAlC,OAAV;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF,SAAV;AAAqBG,QAAAA,IAAI,EAAEH;AAA3B,OAAd;AACA,WAAKR,KAAL,CAAWhC,WAAX,CAAuBkC,GAAvB;AACD,KA9XkB;;AAAA,SA+XnBU,eA/XmB,GA+XAC,KAAD,IAAW;AAC3B,WAAKJ,QAAL,CAAc;AAAEK,QAAAA,SAAS,EAAED,KAAK,CAACC;AAAnB,OAAd;AACD,KAjYkB;;AAAA,SAmYnBC,gBAnYmB,GAmYCF,KAAD,IAAW;AAC5B,WAAKJ,QAAL,CAAc;AAAEO,QAAAA,SAAS,EAAEH,KAAK,CAACI,IAAnB;AAAyBC,QAAAA,SAAS,EAAEL,KAAK,CAACM;AAA1C,OAAd;AACH,KArYoB;;AAAA,SAokCnBC,aApkCmB,GAokCFC,QAAD,IAAc;AAC5B,WAAKC,cAAL,CAAoBC,OAApB,CACE,eADF,EAEE,KAAKvB,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFF,EAGE,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAHF,EAIE,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAJF,EAKE,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CALF,EAME,MACE,KAAKC,aAAL,CACE,SADF,EAEE,KAAK3B,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAF9B,EAGE,QAHF,EAIER,QAJF,CAPJ;AAcD,KAnlCkB;;AAAA,SAqlCnBS,UArlCmB,GAqlCN,MAAM;AACjB,UAAIC,SAAS,GAAG,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBmC,SAAjC;AACA,UAAIzB,SAAS,GAAG,KAAKN,KAAL,CAAWJ,KAAX,CAAiBU,SAAjC;AACA,UAAI0B,cAAc,GAAG,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,cAAtC;AACA,UAAI3B,aAAa,GAAG,KAAKL,KAAL,CAAWJ,KAAX,CAAiBS,aAArC;AACA,UAAIE,WAAW,GAAG,KAAKP,KAAL,CAAWJ,KAAX,CAAiBW,WAAnC;AACA,UAAII,IAAI,GAAG,KAAKhB,KAAL,CAAWgB,IAAtB;AAGA,UAAID,MAAM,GAAG,KAAKf,KAAL,CAAWe,MAAxB;;AAEA,UAAI,KAAKV,KAAL,CAAWJ,KAAX,CAAiBmC,SAArB,EAAgC;AAC9B,YAAI,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBqC,SAAjB,KAA+B,QAAnC,EAA6C;AAC3CF,UAAAA,SAAS,GAAG,KAAZ;AACAzB,UAAAA,SAAS,GAAG,KAAZ;AACA0B,UAAAA,cAAc,GAAG,EAAjB;AACD,SAJD,MAIO;AACLD,UAAAA,SAAS,GAAG,KAAZ;AACD;AACF,OARD,MAQO;AACL1B,QAAAA,aAAa,GAAG,KAAhB;AACAC,QAAAA,SAAS,GAAG,KAAZ;AACA0B,QAAAA,cAAc,GAAG,EAAjB;AACAzB,QAAAA,WAAW,GAAG,EAAd;AACAG,QAAAA,MAAM,GAAGF,SAAT;AACAG,QAAAA,IAAI,GAAGH,SAAP;AACA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,MAAM,EAAEA,MAAV;AAAkBC,UAAAA,IAAI,EAAEA;AAAxB,SAAd;AACD;;AAED,YAAMuB,UAAU,GAAG;AACjB/B,QAAAA,QAAQ,EAAE5B,cADO;AAEjB6B,QAAAA,IAAI,EAAE;AAAEE,UAAAA,SAAF;AAAayB,UAAAA,SAAb;AAAwBC,UAAAA,cAAxB;AAAwCG,UAAAA,UAAU,EAAE,IAApD;AAA0D9B,UAAAA,aAA1D;AAAyEE,UAAAA,WAAzE;AAAsFG,UAAAA,MAAtF;AAA8FC,UAAAA;AAA9F;AAFW,OAAnB;AAIA,WAAKX,KAAL,CAAWhC,WAAX,CAAuBkE,UAAvB;AACD,KAvnCkB;;AAAA,SAynCnBE,aAznCmB,GAynCH,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACxC,YAAMN,cAAc,GAAG,KAAKrC,KAAL,CAAWqC,cAAX,IAA6B,EAApD;AACAA,MAAAA,cAAc,CAACM,SAAD,CAAd,GAA4BD,SAA5B;AACA,WAAK5B,QAAL,CAAc;AAAEuB,QAAAA;AAAF,OAAd;AACD,KA7nCkB;;AAAA,SA+nCnBO,sBA/nCmB,GA+nCM,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACxC,YAAMT,cAAc,GAAG,KAAKrC,KAAL,CAAWqC,cAAX,IAA6B,EAApD;AACAA,MAAAA,cAAc,CAACS,IAAD,CAAd,GAAuBD,KAAvB;AACA,WAAK/B,QAAL,CAAc;AAAEuB,QAAAA;AAAF,OAAd;AACD,KAnoCkB;;AAAA,SA2oCnBU,QA3oCmB,GA2oCR,CAACC,aAAD,EAAgBjC,MAAhB,KAA2B;AACpC,UAAIsB,cAAc,GAAG,KAAKrC,KAAL,CAAWqC,cAAX,IAA6B,EAAlD,CADoC,CAGpC;;AACAA,MAAAA,cAAc,CAAC,aAAD,CAAd,GAAgCpE,OAAO,CAACgF,SAAR,CAAkBD,aAAlB,EAAiCjC,MAAjC,CAAhC,CAJoC,CAKpC;AACA;;AAEA,WAAKD,QAAL,CAAc;AAAEE,QAAAA,IAAI,EAAEgC,aAAR;AAAuBjC,QAAAA,MAAM,EAAEA,MAA/B;AAAuCsB,QAAAA,cAAc,EAAEA;AAAvD,OAAd;AAED,KArpCkB;;AAAA,SAspCnBa,eAtpCmB,GAspCAhC,KAAD,IAAW;AAC3B,YAAMmB,cAAc,GAAG,KAAKrC,KAAL,CAAWqC,cAAX,IAA6B,EAApD;;AAEA,UAAInB,KAAK,CAACiC,MAAN,CAAaC,IAAb,KAAsB,UAA1B,EAAsC;AACpCf,QAAAA,cAAc,CAACnB,KAAK,CAACiC,MAAN,CAAaL,IAAd,CAAd,GACE5B,KAAK,CAACiC,MAAN,CAAaE,OAAb,KAAyB,IAAzB,GACIjE,iBAAiB,CAACkE,GADtB,GAEIlE,iBAAiB,CAACmE,EAHxB;AAID,OALD,MAKO;AACL,YAAIrC,KAAK,CAACiC,MAAN,CAAaL,IAAb,KAAsB,UAA1B,EAAsC;AACpC,cAAI5B,KAAK,CAACiC,MAAN,CAAaN,KAAb,KAAuB,EAA3B,EAA+B;AAC7B3B,YAAAA,KAAK,CAACiC,MAAN,CAAaN,KAAb,GAAqB9D,mBAAmB,CAACmC,KAAK,CAACiC,MAAN,CAAaN,KAAd,CAAxC;AACAR,YAAAA,cAAc,CAACnB,KAAK,CAACiC,MAAN,CAAaL,IAAd,CAAd,GACE5B,KAAK,CAACiC,MAAN,CAAaN,KAAb,KAAuB,EAAvB,GACI3B,KAAK,CAACiC,MAAN,CAAaN,KADjB,GAEIR,cAAc,CAACnB,KAAK,CAACiC,MAAN,CAAaL,IAAd,CAHpB;AAID,WAND,MAMO;AACLT,YAAAA,cAAc,CAACnB,KAAK,CAACiC,MAAN,CAAaL,IAAd,CAAd,GAAoC5B,KAAK,CAACiC,MAAN,CAAaN,KAAjD;AACD;AACF,SAVD,MAUO;AACLR,UAAAA,cAAc,CAACnB,KAAK,CAACiC,MAAN,CAAaL,IAAd,CAAd,GAAoC5B,KAAK,CAACiC,MAAN,CAAaN,KAAjD;AACD;AACF;;AACD,WAAK/B,QAAL,CAAc;AAAEuB,QAAAA;AAAF,OAAd;AACD,KA9qCkB;;AAAA,SAgrCnBmB,gBAhrCmB,GAgrCA,CAACC,QAAD,EAAWC,SAAX,KAAyB;AAC1C,YAAM;AAAErB,QAAAA;AAAF,UAAqB,KAAKrC,KAAhC;AACAqC,MAAAA,cAAc,CAACoB,QAAD,CAAd,GAA2BC,SAA3B;AACA,YAAMC,GAAG,GAAG3E,YAAY,CAAC0E,SAAD,CAAxB;AACArB,MAAAA,cAAc,CAAC,MAAD,CAAd,GAAyBsB,GAAzB;AAEA,WAAK7C,QAAL,CAAc;AAAEuB,QAAAA;AAAF,OAAd;AACD,KAvrCkB;;AAAA,SA0rCnBuB,cA1rCmB,GA0rCF,MAAM;AACrB,UAAIC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKxD,KAAL,CAAWJ,KAAX,CAAiB6D,QAAzC;AACAD,MAAAA,SAAS,CAAC,aAAD,CAAT,GAA2B,KAAK7D,KAAL,CAAWqC,cAAX,CAA0B,aAA1B,CAA3B;;AACA,UAAG,KAAKrC,KAAL,CAAWqC,cAAX,CAA0B,aAA1B,MAA2CxB,SAA9C,EAAwD;AACxD,aAAKkD,SAAL,CAAeC,OAAf,CAAuBnB,KAAvB,GAA+B,EAA/B;AACA,YAAIoB,SAAS,GAAG,IAAhB;AAEA,cAAMC,UAAU,GAAG;AACjBC,UAAAA,QAAQ,EAAE,SADO;AAEjBC,UAAAA,SAAS,EAAE,WAFM;AAGjBP,UAAAA,SAAS,EAAEA,SAHM;AAIjBE,UAAAA,SAAS,EAAE,KAAKA,SAJC;AAKjBM,UAAAA,aAAa,EAAE,KAAKhE,KAAL,CAAWJ,KAAX,CAAiBoE;AALf,SAAnB;AAOA,cAAMpC,UAAU,GAAG,KAAK5B,KAAL,CAAWJ,KAAX,CAAiBgC,UAApC;;AAEA,YACEpD,SAAS,CACP,KAAKwB,KAAL,CAAWJ,KAAX,CAAiBqE,qBADV,EAEP,KAAKjE,KAAL,CAAWJ,KAAX,CAAiB6D,QAAjB,CAA0BS,SAFnB,EAGP,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBuE,YAHV,CADX,EAME;AACA,gBAAMjC,UAAU,GAAG;AACjB/B,YAAAA,QAAQ,EAAE5B,cADO;AAEjB6B,YAAAA,IAAI,EAAE;AACJ2B,cAAAA,SAAS,EAAE,IADP;AAEJqC,cAAAA,UAAU,EAAE;AAAEP,gBAAAA,UAAF;AAAcjC,gBAAAA;AAAd;AAFR;AAFW,WAAnB;AAOA,eAAK5B,KAAL,CAAWhC,WAAX,CAAuBkE,UAAvB;AACD,SAfD,MAeO;AACL,eAAKlC,KAAL,CAAW1B,8BAAX,CAA0CuF,UAA1C,EAAsDjC,UAAtD;AACD;AACD,OA/BA,MA+BI;AACHnF,QAAAA,KAAK,CAAC4H,IAAN,CAAW,KAAKrE,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACA;AACF,KAhuCkB;;AAAA,SAkuCpB4C,WAluCoB,GAkuCN,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACpC,UAAI,KAAK7E,KAAL,CAAWqC,cAAX,CAA0B,QAA1B,KAAuC,KAAKrC,KAAL,CAAWqC,cAAX,CAA0B,QAA1B,MAAwC,EAA/E,IAAsF,KAAKrC,KAAL,CAAWqC,cAAX,CAA0B,QAA1B,MAAwC,MAA9H,GAAuInD,aAAa,CAAC,KAAKc,KAAL,CAAWqC,cAAX,CAA0B,QAA1B,CAAD,CAApJ,GAA4L,IAAhM,EAAsM;AACpM,YAAIyC,WAAW,GAAG,EAAlB;AACAA,QAAAA,WAAW,CAAC,UAAD,CAAX,GAA0B,KAAKzE,KAAL,CAAWJ,KAAX,CAAiB6D,QAA3C;AAEA,YAAIiB,SAAS,GAAG;AACdC,UAAAA,aAAa,EAAE,aADD;AAEdC,UAAAA,cAAc,EAAE,iBAFF;AAGdC,UAAAA,eAAe,EAAE;AAHH,SAAhB;;AAMA,YAAI,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBqC,SAAjB,KAA+B,QAAnC,EAA6C;AAC3CyC,UAAAA,SAAS,CAAC,iBAAD,CAAT,GACE,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CiD,UAD9C;AAEEL,UAAAA,WAAW,CAAC,SAAD,CAAX,GAAyB;AACzBK,YAAAA,UAAU,EAAE,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CiD,UAD/B;AAEzBC,YAAAA,UAAU,EAAE,KAAKpF,KAAL,CAAWqC,cAAX,CAA0B+C,UAFb;AAGzBC,YAAAA,SAAS,EAAE,KAAKrF,KAAL,CAAWqC,cAAX,CAA0BgD,SAHZ;AAIzBC,YAAAA,WAAW,EAAE,KAAKtF,KAAL,CAAWqC,cAAX,CAA0BiD,WAJd;AAKzBC,YAAAA,IAAI,EAAEtG,eAAe,CAAC,KAAKe,KAAL,CAAWqC,cAAX,CAA0B,MAA1B,CAAD,EAAmC,KAAnC,CALI;AAMzBmD,YAAAA,IAAI,EAAE,KAAKxF,KAAL,CAAWqC,cAAX,CAA0BmD,IANP;AAOzBC,YAAAA,WAAW,EAAC,KAAKzF,KAAL,CAAWqC,cAAX,CAA0BoD,WAA1B,CAAsC5C,KAPzB;AAQzB6C,YAAAA,SAAS,EAAE,KAAK1F,KAAL,CAAWqC,cAAX,CAA0BqD,SAA1B,CAAoC7C,KARtB;AASzB8C,YAAAA,YAAY,EAAE,KAAK3F,KAAL,CAAWqC,cAAX,CAA0BsD,YAA1B,CAAuC9C,KAT5B;AAUzB+C,YAAAA,QAAQ,EAAE,KAAK5F,KAAL,CAAWqC,cAAX,CAA0BuD,QAVX;AAWzBC,YAAAA,SAAS,EAAE,KAAK7F,KAAL,CAAWqC,cAAX,CAA0BwD,SAXZ;AAYzBC,YAAAA,WAAW,EAAE,KAAK9F,KAAL,CAAWqC,cAAX,CAA0ByD,WAZd;AAazBC,YAAAA,QAAQ,EAAE,KAAK/F,KAAL,CAAWqC,cAAX,CAA0B0D,QAbX;AAczBC,YAAAA,SAAS,EAAE,KAAKhG,KAAL,CAAWqC,cAAX,CAA0B2D,SAdZ;AAezBC,YAAAA,MAAM,EAAE,KAAKjG,KAAL,CAAWqC,cAAX,CAA0B4D,MAfT;AAgBzBC,YAAAA,WAAW,EAAE,KAAKlG,KAAL,CAAWqC,cAAX,CAA0B6D,WAhBd;AAiBzBC,YAAAA,MAAM,EAAE,KAAKnG,KAAL,CAAWqC,cAAX,CAA0B8D,MAjBT;AAkBzBC,YAAAA,WAAW,EAAE,KAAKpG,KAAL,CAAWqC,cAAX,CAA0B+D;AAlBd,WAAzB;AAqBH,SAxBD,MAwBO;AACLtB,UAAAA,WAAW,CAAC,SAAD,CAAX,GAAyB;AACvBuB,YAAAA,SAAS,EAAE,KAAKhG,KAAL,CAAWJ,KAAX,CAAiB6D,QAAjB,CAA0BwC;AADd,WAAzB;AAIA,eAAKC,gBAAL,CAAsBC,GAAtB,CAA2BC,IAAD,IAAU;AAClC,mBAAQ3B,WAAW,CAAC,SAAD,CAAX,CAAuB2B,IAAvB,IAA+B,KAAKzG,KAAL,CAAWqC,cAAX,CAA0BoE,IAA1B,KAAmC,EAAnC,IAAyC,KAAKzG,KAAL,CAAWqC,cAAX,CAA0BoE,IAA1B,KAAmC5F,SAA5E,GACvCA,SADuC,GAC5B,KAAKb,KAAL,CAAWqC,cAAX,CAA0BoE,IAA1B,CADX;AAED,WAHD;AAID;;AAED3B,QAAAA,WAAW,CAAC,SAAD,CAAX,CAAuB,aAAvB,IAAwC,KAAK9E,KAAL,CAAWqC,cAAX,CAA0B,aAA1B,IAA2C,KAAKrC,KAAL,CAAWqC,cAAX,CAA0B,aAA1B,EAAyCQ,KAApF,GACpCzD,iBAAiB,CAACsH,EADtB;AAGA5B,QAAAA,WAAW,CAAC,SAAD,CAAX,CAAuB,WAAvB,IAAsC,KAAK9E,KAAL,CAAWqC,cAAX,CAA0B,WAA1B,IAAyC,KAAKrC,KAAL,CAAWqC,cAAX,CAA0B,WAA1B,EAAuCQ,KAAhF,GAClCzD,iBAAiB,CAACsH,EADtB;AAGA5B,QAAAA,WAAW,CAAC,SAAD,CAAX,CAAuB,cAAvB,IAAyC,KAAK9E,KAAL,CAAWqC,cAAX,CAA0B,cAA1B,IAA4C,KAAKrC,KAAL,CAAWqC,cAAX,CAA0B,cAA1B,EAA0CQ,KAAtF,GACrCzD,iBAAiB,CAACsH,EADtB,CAnDoM,CAsDpM;AACA;AACA;AAEA;;AACA,YAAI,KAAK1G,KAAL,CAAWqC,cAAX,CAA0B,MAA1B,CAAJ,EAAuC;AACrCyC,UAAAA,WAAW,CAAC,SAAD,CAAX,CAAuB,MAAvB,IAAiC3F,UAAU,CAAC,KAAKa,KAAL,CAAWqC,cAAX,CAA0B,MAA1B,CAAD,EAAmC,KAAnC,CAA3C;AACA;;AAEF,cAAM6B,UAAU,GAAG;AACjBC,UAAAA,QAAQ,EAAE,SADO;AAEjBC,UAAAA,SAAS,EAAE,SAFM;AAGjBP,UAAAA,SAAS,EAAEiB,WAHM;AAIjBxC,UAAAA,SAAS,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBqC,SAJX;AAKjBsC,UAAAA,QALiB;AAMjBC,UAAAA,OANiB;AAOjBE,UAAAA,SAPiB;AAQjBhB,UAAAA,SAAS,EAAE,KAAKA,SARC;AASjBM,UAAAA,aAAa,EAAE,KAAKhE,KAAL,CAAWJ,KAAX,CAAiBoE;AATf,SAAnB;AAWA,cAAMpC,UAAU,GAAG,KAAK5B,KAAL,CAAWJ,KAAX,CAAiBgC,UAApC;;AAEA,YAAIpD,SAAS,CAAC,KAAKwB,KAAL,CAAWJ,KAAX,CAAiBqE,qBAAlB,EAAwC,KAAKjE,KAAL,CAAWJ,KAAX,CAAiB6D,QAAjB,CAA0BS,SAAlE,EAA4E,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBuE,YAA7F,CAAb,EAAyH;AACvH,gBAAMjC,UAAU,GAAG;AACjB/B,YAAAA,QAAQ,EAAE5B,cADO;AAEjB6B,YAAAA,IAAI,EAAE;AACJ2B,cAAAA,SAAS,EAAE,IADP;AAEJqC,cAAAA,UAAU,EAAE;AAAEP,gBAAAA,UAAF;AAAcjC,gBAAAA;AAAd,eAFR;AAGJ2C,cAAAA;AAHI;AAFW,WAAnB;AAQA,eAAKvE,KAAL,CAAWhC,WAAX,CAAuBkE,UAAvB;AACD,SAVD,MAUO;AACL,eAAKlC,KAAL,CAAWlC,UAAX,CAAsB+F,UAAtB,EAAkCjC,UAAlC,EAA8C,WAA9C;AACD;AACF,OAzFD,MAyFK;AACDnF,QAAAA,KAAK,CAAC4H,IAAN,CAAW,KAAKrE,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACC;AACJ,KA/zCkB;;AAAA,SAi0CnBC,aAj0CmB,GAi0CH,CAACoC,SAAD,EAAYuC,eAAZ,EAA6BrE,SAA7B,EAAwCkC,YAAxC,KAAyD;AACvE,YAAMO,SAAS,GAAG;AAChBC,QAAAA,aAAa,EAAE,aADC;AAEhBC,QAAAA,cAAc,EAAE,iBAFA;AAGhBC,QAAAA,eAAe,EAAE,cAHD;AAIhB0B,QAAAA,eAAe,EAAED,eAAe,CAACE,YAJjB;AAKhBC,QAAAA,QAAQ,EAAE,oBALM;AAMhBC,QAAAA,gBAAgB,EAAE;AAAEC,UAAAA,QAAQ,EAAE,KAAK3G,KAAL,CAAWJ,KAAX,CAAiB6D;AAA7B;AANF,OAAlB;AASA,YAAMI,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE,KAAK9D,KAAL,CAAWJ,KAAX,CAAiBiE,UAAjB,CAA4BC,QADrB;AAEjBC,QAAAA,SAFiB;AAGjBW,QAAAA,SAHiB;AAIjBlB,QAAAA,SAAS,EAAE;AACTmD,UAAAA,QAAQ,EAAE,KAAK3G,KAAL,CAAWJ,KAAX,CAAiB6D,QADlB;AAETmD,UAAAA,OAAO,EAAEN;AAFA,SAJM;AAQjBrE,QAAAA,SARiB;AASjB+B,QAAAA,aAAa,EAAE,KAAKhE,KAAL,CAAWJ,KAAX,CAAiBoE;AATf,OAAnB;AAYA,YAAMpC,UAAU,GAAG,KAAK5B,KAAL,CAAWJ,KAAX,CAAiBgC,UAApC;;AAEA,UACEpD,SAAS,CACP,KAAKwB,KAAL,CAAWJ,KAAX,CAAiBqE,qBADV,EAEP,KAAKjE,KAAL,CAAWJ,KAAX,CAAiB6D,QAAjB,CAA0BS,SAFnB,EAGPC,YAHO,CADX,EAME;AACA,cAAMjC,UAAU,GAAG;AACjB/B,UAAAA,QAAQ,EAAE5B,cADO;AAEjB6B,UAAAA,IAAI,EAAE;AACJ2B,YAAAA,SAAS,EAAE,IADP;AAEJqC,YAAAA,UAAU,EAAE;AAAEP,cAAAA,UAAF;AAAcjC,cAAAA;AAAd,aAFR;AAGJtB,YAAAA,SAAS,EAAE,IAHP;AAIJuG,YAAAA,UAAU,EAAE,mBAJR;AAKJ5E,YAAAA;AALI;AAFW,SAAnB;AAUA,aAAKjC,KAAL,CAAWhC,WAAX,CAAuBkE,UAAvB;AACD,OAlBD,MAkBO;AACL,aAAKlC,KAAL,CAAWlC,UAAX,CAAsB+F,UAAtB,EAAkCjC,UAAlC,EAA8C,WAA9C;AACD;AACF,KA92CkB;;AAAA,SAg3CnBkF,aAh3CmB,GAg3CH,MAAM;AACpB,YAAMjD,UAAU,GAAG;AACjBL,QAAAA,SAAS,EAAE;AACTmD,UAAAA,QAAQ,EAAE,EACR,GAAG,KAAK3G,KAAL,CAAWJ,KAAX,CAAiB6D,QADZ;AAERsD,YAAAA,OAAO,EAAE,KAAKpH,KAAL,CAAWqC,cAAX,CAA0B,eAA1B;AAFD,WADD;AAKTgF,UAAAA,QAAQ,EAAE,KAAKrH,KAAL,CAAWqC,cAAX,CAA0B,eAA1B;AALD,SADM;AAQjBoC,QAAAA,UAAU,EAAE,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBwE;AARZ,OAAnB;AAUA,WAAKpE,KAAL,CAAWjC,uBAAX,CAAmC8F,UAAnC,EAA+C,WAA/C;AACD,KA53CkB;;AAAA,SA83CnBoD,kBA93CmB,GA83CE,CAACC,GAAD,EAAMpG,SAAN,KAAoB;AACvC,YAAMqG,SAAS,GAAG;AAChB1D,QAAAA,QAAQ,EAAE,KAAKzD,KAAL,CAAWJ,KAAX,CAAiB6D,QADX;AAEhBoB,QAAAA,eAAe,EAAE,WAFD;AAGhBjD,QAAAA,UAAU,EAAE,KAAK5B,KAAL,CAAWJ,KAAX,CAAiBgC;AAHb,OAAlB;AAMA,WAAK5B,KAAL,CAAW5B,gBAAX,CAA4B,EAC1B,GAAG+I,SADuB;AAE1BrG,QAAAA,SAF0B;AAG1ByF,QAAAA,eAAe,EAAEW,GAAG,CAAC,UAAD,CAAH,CAAgBC,SAAS,CAACtC,eAA1B,CAHS;AAI1BuC,QAAAA,OAAO,EAAEF,GAAG,CAAC,UAAD;AAJc,OAA5B;AAMD,KA34CkB;;AAAA,SA64CnBG,UA74CmB,GA64CN,MAAM;AACjB,WAAK3D,SAAL,CAAeC,OAAf,CAAuBnB,KAAvB,GAA+B,EAA/B;AAEA,YAAMqB,UAAU,GAAG;AACjBL,QAAAA,SAAS,EAAE;AAAEmD,UAAAA,QAAQ,EAAE,KAAK3G,KAAL,CAAWJ,KAAX,CAAiB6D;AAA7B,SADM;AAEjBK,QAAAA,QAAQ,EAAE,SAFO;AAGjBC,QAAAA,SAAS,EAAE,SAHM;AAIjBuD,QAAAA,WAAW,EAAE,mBAJI;AAKjB7D,QAAAA,QAAQ,EAAE,KAAKzD,KAAL,CAAWJ,KAAX,CAAiB6D,QALV;AAMjBO,QAAAA,aAAa,EAAE,KAAKhE,KAAL,CAAWJ,KAAX,CAAiBoE;AANf,OAAnB;AASA,WAAKhE,KAAL,CAAWnC,WAAX,CAAuBgG,UAAvB;AACD,KA15CkB;;AAGjB,SAAKlE,KAAL,GAAa;AACX4H,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXxF,MAAAA,cAAc,EAAE,EAHL;AAIXC,MAAAA,SAAS,EAAE,EAJA;AAKXqE,MAAAA,eAAe,EAAE9F,SALN;AAMXqG,MAAAA,UAAU,EAAErG,SAND;AAOXyD,MAAAA,qBAAqB,EAAE,EAPZ;AAQXwD,MAAAA,UAAU,EAAE,IAAIC,GAAJ,EARD;AASX1D,MAAAA,aAAa,EAAE,KATJ;AAUXlD,MAAAA,SAAS,EAAE;AAAEG,QAAAA,IAAI,EAAE,CAAR;AAAWE,QAAAA,IAAI,EAAE;AAAjB,OAVA;AAWXR,MAAAA,IAAI,EAAEH,SAXK;AAYXE,MAAAA,MAAM,EAAEF,SAZG;AAaXQ,MAAAA,SAAS,EAAC,CAbC;AAcXE,MAAAA,SAAS,EAAC,CAdC;AAeXyG,MAAAA,MAAM,EAAE;AACN,oCAA4B;AAC1B,mBAAS,KAAK3H,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADiB;AAI1B,kBAAQ,MAJkB;AAK1B,0BAAgB,CAAC,OAAD,EAAU,MAAV,CALU;AAO1B,6BAAmB;AACjB,0BAAc,MADG;AAEjB,gCAAoB;AAFH;AAPO,SADtB;AAcN,mCAA2B;AACzB,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADgB;AAIzB,kBAAQ,MAJiB;AAKzB,0BAAgB,CAAC,OAAD,EAAU,MAAV,CALS;AAMzB,6BAAmB;AACjB,0BAAc,MADG;AAEjB,gCAAoB;AAFH;AANM,SAdrB;AA2BN,qCAA6B;AAC3B,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADkB;AAI3B,kBAAQ,MAJmB;AAK3B,0BAAgB,CAAC,OAAD,EAAU,MAAV,CALW;AAM3B,6BAAmB;AACjB,0BAAc,MADG;AAEjB,gCAAoB;AAFH;AANQ,SA3BvB;AAwCN,qCAA6B;AAC3B,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADkB;AAI3B,kBAAQ,QAJmB;AAK3B,0BAAgB,CAAC,OAAD,CALW;AAM3B,2BAAiB;AACf,0BAAc,CACZ;AAAE,uBAAS,GAAX;AAAgB,uBAAS;AAAzB,aADY,EAEZ;AAAE,uBAAS,GAAX;AAAgB,uBAAS;AAAzB,aAFY,EAGZ;AAAE,uBAAS,GAAX;AAAgB,uBAAS;AAAzB,aAHY;AADC;AANU,SAxCvB;AAwDN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,8BAAsB;AACpB,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADW;AAIpB,kBAAQ,MAJY;AAKpB,0BAAgB,CAAC,OAAD;AALI,SAvFhB;AA+FN,8BAAsB;AACpB,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADW;AAIpB,kBAAQ,MAJY;AAKpB,0BAAgB,CAAC,OAAD,EAAU,MAAV,CALI;AAMpB,6BAAmB;AACjB,0BAAc,KADG;AAEjB,gCAAoB;AAFH;AANC,SA/FhB;AA4GN,kCAA0B;AACxB,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADe;AAIxB,kBAAQ,MAJgB;AAKxB,0BAAgB,CAAC,OAAD,EAAU,MAAV,CALQ;AAMxB,6BAAmB;AACjB,0BAAc,MADG;AAEjB,gCAAoB;AAFH;AANK,SA5GpB;AAyHN,mCAA2B;AACzB,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADgB;AAIzB,kBAAQ,MAJiB;AAKzB,0BAAgB,CAAC,OAAD,EAAU,MAAV,CALS;AAMzB,6BAAmB;AACjB,0BAAc,MADG;AAEjB,gCAAoB;AAFH;AANM,SAzHrB;AAsIN,oCAA4B;AAC1B,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADiB;AAI1B,kBAAQ,MAJkB;AAK1B,0BAAgB,CAAC,OAAD,EAAU,MAAV,CALU;AAM1B,6BAAmB;AACjB,0BAAc,MADG;AAEjB,gCAAoB;AAFH;AANO,SAtItB;AAkJN,qCAA6B;AAC3B,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADkB;AAI3B,kBAAQ,MAJmB;AAK3B,0BAAgB,CAAC,OAAD,EAAU,MAAV,CALW;AAM3B,6BAAmB;AACjB,0BAAc,MADG;AAEjB,gCAAoB;AAFH;AANQ,SAlJvB;AAgKN,kCAA0B;AACxB,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADe;AAIxB,kBAAQ,MAJgB;AAKxB,0BAAgB,CAAC,OAAD,CALQ;AAMxB,2BAAiB;AACf,mBAAO,CADQ;AAEf,gCAAoB;AAFL;AANO,SAhKpB;AA6KN,mCAA2B;AACzB,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADgB;AAIzB,kBAAQ,MAJiB;AAKzB,0BAAgB,CAAC,OAAD,CALS;AAMzB,2BAAiB;AACf,mBAAO,CADQ;AAEf,gCAAoB;AAFL;AANQ,SA7KrB;AA0LN,gCAAwB;AACtB,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADa;AAItB,kBAAQ,MAJc;AAKtB,0BAAgB,CAAC,OAAD,CALM;AAMtB,2BAAiB;AACf,mBAAO,CADQ;AAEf,gCAAoB;AAFL;AANK,SA1LlB;AAuMN,gCAAwB;AACtB,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADa;AAItB,kBAAQ,MAJc;AAKtB,0BAAgB,CAAC,OAAD,CALM;AAMtB,2BAAiB;AACf,mBAAO,CADQ;AAEf,gCAAoB;AAFL;AANK,SAvMlB;AAoNN,qCAA6B;AAC3B,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADkB;AAI3B,kBAAQ,MAJmB;AAK3B,0BAAgB,CAAC,OAAD,CALW;AAM3B,2BAAiB;AACf,mBAAO,CADQ;AAEf,gCAAoB;AAFL;AANU,SApNvB;AAiON,qCAA6B;AAC3B,mBAAS,KAAK1B,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADkB;AAI3B,kBAAQ,MAJmB;AAK3B,0BAAgB,CAAC,OAAD,CALW;AAM3B,2BAAiB;AACf,mBAAO,CADQ;AAEf,gCAAoB;AAFL;AANU;AAjOvB;AAfG,KAAb;AA+PA,SAAKgC,SAAL,GAAiBnH,KAAK,CAACqL,SAAN,EAAjB;AACA,SAAKC,QAAL,GAAgBtL,KAAK,CAACqL,SAAN,EAAhB;AACA,SAAKtG,cAAL,GAAsB,IAAIhC,cAAJ,EAAtB;AAEA,SAAK4G,gBAAL,GAAwB,CACtB,YADsB,EAEtB,WAFsB,EAGtB,aAHsB,EAItB,MAJsB,EAKtB,MALsB,EAMtB,UANsB,EAOtB,WAPsB,EAQtB,aARsB,EAStB,UATsB,EAUtB,WAVsB,EAWtB,QAXsB,EAYtB,QAZsB,EAatB,aAbsB,EActB,aAdsB,CAAxB;AAiBA,SAAK4B,eAAL,GAAuB,CACrB,UADqB,EAErB,MAFqB,EAGrB,MAHqB,EAIrB,aAJqB,EAKrB,aALqB,EAMtB,cANsB,EAOrB,YAPqB,EAQrB,UARqB,EASrB,WATqB,EAUrB,QAVqB,EAWrB,WAXqB,EAYrB,WAZqB,EAarB,cAbqB,EAcrB,aAdqB,EAerB,QAfqB,EAgBrB,aAhBqB,EAiBrB,aAjBqB,CAAvB;AAoBA,SAAKC,UAAL,GAAkB,CAChB;AAAEC,MAAAA,OAAO,EAAE,UAAX;AAAuBC,MAAAA,SAAS,EAAE,OAAlC;AAA2CC,MAAAA,KAAK,EAAE;AAAlD,KADgB,EAEhB;AAAEF,MAAAA,OAAO,EAAE,aAAX;AAA0BC,MAAAA,SAAS,EAAE,cAArC;AAAqDC,MAAAA,KAAK,EAAE;AAA5D,KAFgB,EAGhB;AAAEF,MAAAA,OAAO,EAAE,mBAAX;AAAgCC,MAAAA,SAAS,EAAE,WAA3C;AAAwDC,MAAAA,KAAK,EAAE;AAA/D,KAHgB,EAIhB;AACEF,MAAAA,OAAO,EAAE,4BADX;AAEEC,MAAAA,SAAS,EAAE,gBAFb;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAJgB,EAShB;AACEF,MAAAA,OAAO,EAAE,kBADX;AAEEC,MAAAA,SAAS,EAAE,eAFb;AAGEC,MAAAA,KAAK,EAAE;AAHT,KATgB,EAchB;AACEF,MAAAA,OAAO,EAAE,YADX;AAEEC,MAAAA,SAAS,EAAE,qBAFb;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAdgB,CAAlB;AAqBA,SAAKC,eAAL,GAAuB,CACrB;AAAEH,MAAAA,OAAO,EAAE,cAAX;AAA2BC,MAAAA,SAAS,EAAE,cAAtC;AAAsDC,MAAAA,KAAK,EAAE;AAA7D,KADqB,EAErB;AACEF,MAAAA,OAAO,EAAE,mBADX;AAEEC,MAAAA,SAAS,EAAE,mBAFb;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAFqB,EAOrB;AAAEF,MAAAA,OAAO,EAAE,YAAX;AAAyBC,MAAAA,SAAS,EAAE,SAApC;AAA+CC,MAAAA,KAAK,EAAE;AAAtD,KAPqB,EAQrB;AAAEF,MAAAA,OAAO,EAAE,gBAAX;AAA6BC,MAAAA,SAAS,EAAE,YAAxC;AAAsDC,MAAAA,KAAK,EAAE;AAA7D,KARqB,EASrB;AAAEF,MAAAA,OAAO,EAAE,gBAAX;AAA6BC,MAAAA,SAAS,EAAE,cAAxC;AAAwDC,MAAAA,KAAK,EAAE;AAA/D,KATqB,EAUrB;AACEF,MAAAA,OAAO,EAAE,YADX;AAEEC,MAAAA,SAAS,EAAE,qBAFb;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAVqB,CAAvB;AAgBA,SAAKE,SAAL,GAAiB,CACf;AAAEC,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAAiE4G,MAAAA,KAAK,EAAE,YAAxE;AAAsFJ,MAAAA,KAAK,EAAE;AAA7F,KADe,EAEf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAAiE4G,MAAAA,KAAK,EAAE,YAAxE;AAAsFJ,MAAAA,KAAK,EAAE;AAA7F,KAFe,EAGf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAAgE4G,MAAAA,KAAK,EAAE,WAAvE;AAAoFJ,MAAAA,KAAK,EAAE;AAA3F,KAHe,EAIf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAAkE4G,MAAAA,KAAK,EAAE,aAAzE;AAAwFJ,MAAAA,KAAK,EAAE;AAA/F,KAJe,EAKf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAA8D4G,MAAAA,KAAK,EAAE,aAArE;AAAoFJ,MAAAA,KAAK,EAAE;AAA3F,KALe,EAMf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAA+D4G,MAAAA,KAAK,EAAE,cAAtE;AAAsFJ,MAAAA,KAAK,EAAE;AAA7F,KANe,EAOf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAAmE4G,MAAAA,KAAK,EAAE,MAA1E;AAAkFJ,MAAAA,KAAK,EAAE;AAAzF,KAPe,EAQf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAAgE4G,MAAAA,KAAK,EAAE,WAAvE;AAAoFJ,MAAAA,KAAK,EAAE;AAA3F,KARe,EASf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAAkE4G,MAAAA,KAAK,EAAE,aAAzE;AAAwFJ,MAAAA,KAAK,EAAE;AAA/F,KATe,EAUf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAA+D4G,MAAAA,KAAK,EAAE,UAAtE;AAAkFJ,MAAAA,KAAK,EAAE;AAAzF,KAVe,EAWf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAAgE4G,MAAAA,KAAK,EAAE,WAAvE;AAAoFJ,MAAAA,KAAK,EAAE;AAA3F,KAXe,EAYf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAA6D4G,MAAAA,KAAK,EAAE,QAApE;AAA8EJ,MAAAA,KAAK,EAAE;AAArF,KAZe,EAaf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAA+D4G,MAAAA,KAAK,EAAE,UAAtE;AAAkFJ,MAAAA,KAAK,EAAE;AAAzF,KAbe,EAcf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAA6D4G,MAAAA,KAAK,EAAE,QAApE;AAA8EJ,MAAAA,KAAK,EAAE;AAArF,KAde,EAef;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAAkE4G,MAAAA,KAAK,EAAE,aAAzE;AAAwFJ,MAAAA,KAAK,EAAE;AAA/F,KAfe,EAgBf;AAAEG,MAAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAT;AAAkE4G,MAAAA,KAAK,EAAE,aAAzE;AAAwFJ,MAAAA,KAAK,EAAE;AAA/F,KAhBe,CAAjB;AAuBD;;AAE8B,SAAxBK,wBAAwB,CAACvI,KAAD,EAAQL,KAAR,EAAe;AAC5C,QACEK,KAAK,CAACJ,KAAN,CAAY2H,YAAZ,KAA6B,EAA7B,IACAvH,KAAK,CAACJ,KAAN,CAAY2H,YAAZ,KAA6B5H,KAAK,CAAC4H,YAFrC,EAGE;AACA9K,MAAAA,KAAK,CAAC4H,IAAN,CAAWrE,KAAK,CAACJ,KAAN,CAAY2H,YAAvB;AACAvH,MAAAA,KAAK,CAACJ,KAAN,CAAY2H,YAAZ,GAA2B,EAA3B;AACD;;AACD,QAAIvH,KAAK,CAACJ,KAAN,CAAY4H,KAAZ,KAAsB7H,KAAK,CAAC6H,KAAhC,EAAuC;AACrC/K,MAAAA,KAAK,CAAC+K,KAAN,CAAYxH,KAAK,CAACJ,KAAN,CAAY4H,KAAxB;AACAxH,MAAAA,KAAK,CAACJ,KAAN,CAAY4H,KAAZ,GAAoB,EAApB;AACD;;AACD,QAAIxH,KAAK,CAACJ,KAAN,CAAYoC,cAAZ,KAA+BxB,SAAnC,EAA8C;AAC5C,aAAO;AAAEwB,QAAAA,cAAc,EAAE;AAAlB,OAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAaDwG,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GACT,KAAK9I,KAAL,CAAW8H,UAAX,CAAsBiB,GAAtB,CAA0B,YAA1B,KACA,KAAK/I,KAAL,CAAW8H,UAAX,CAAsBkB,GAAtB,CAA0B,YAA1B,EAAwCC,YAF1C;AAGA,UAAMC,MAAM,GACV,KAAKlJ,KAAL,CAAW8H,UAAX,CAAsBiB,GAAtB,CAA0B,aAA1B,KACA,KAAK/I,KAAL,CAAW8H,UAAX,CAAsBkB,GAAtB,CAA0B,aAA1B,EAAyCC,YAF3C;AAGA,UAAMvH,QAAQ,GACZ,KAAK1B,KAAL,CAAW8H,UAAX,CAAsBiB,GAAtB,CAA0B,eAA1B,KACA,KAAK/I,KAAL,CAAW8H,UAAX,CAAsBkB,GAAtB,CAA0B,eAA1B,EAA2CC,YAF7C;AAGA,UAAME,eAAe,GACnB,KAAKnJ,KAAL,CAAW8H,UAAX,CAAsBiB,GAAtB,CAA0B,eAA1B,KACA,KAAK/I,KAAL,CAAW8H,UAAX,CAAsBkB,GAAtB,CAA0B,eAA1B,EAA2CC,YAF7C;AAIA,UAAMG,WAAW,GAAG;AAClBpE,MAAAA,aAAa,EAAE,aADG;AAElBC,MAAAA,cAAc,EAAE,iBAFE;AAGlBC,MAAAA,eAAe,EAAE,cAHC;AAIlB4B,MAAAA,QAAQ,EAAE,oBAJQ;AAKlBC,MAAAA,gBAAgB,EAAE;AAAEC,QAAAA,QAAQ,EAAE,KAAK3G,KAAL,CAAWJ,KAAX,CAAiB6D;AAA7B,OALA;AAMlB7B,MAAAA,UAAU,EAAE,KAAK5B,KAAL,CAAWJ,KAAX,CAAiBgC,UANX;AAOlBkG,MAAAA,eAAe,EAAE,KAAKA;AAPJ,KAApB;AAUA,UAAMkB,QAAQ,GAAG;AACfnC,MAAAA,UAAU,EAAE,mBADG;AAEf5E,MAAAA,SAAS,EAAE,QAFI;AAGfgH,MAAAA,cAAc,EAAE,cAHD;AAIfrH,MAAAA,UAAU,EAAE,KAAK5B,KAAL,CAAWJ,KAAX,CAAiBgC,UAJd;AAKf6B,MAAAA,QAAQ,EAAE,KAAKzD,KAAL,CAAWJ,KAAX,CAAiB6D,QALZ;AAMfmF,MAAAA,YAAY,EAAEH;AANC,KAAjB;AAQA,UAAMS,SAAS,GAAG;AAChBrC,MAAAA,UAAU,EAAE,mBADI;AAEhB5E,MAAAA,SAAS,EAAE,QAFK;AAGhBgH,MAAAA,cAAc,EAAE,YAHA;AAIhBrH,MAAAA,UAAU,EAAE,KAAK5B,KAAL,CAAWJ,KAAX,CAAiBgC,UAJb;AAKhB6B,MAAAA,QAAQ,EAAE,KAAKzD,KAAL,CAAWJ,KAAX,CAAiB6D,QALX;AAMhBmF,MAAAA,YAAY,EAAEC,MANE;AAOhBlE,MAAAA,aAAa,EAAE,aAPC;AAQhBC,MAAAA,cAAc,EAAE;AARA,KAAlB;AAUA,UAAMuE,eAAe,GAAG,CACtB;AACEC,MAAAA,SAAS,EAAE,IADb;AAEEpB,MAAAA,OAAO,EAAE,eAFX;AAGEC,MAAAA,SAAS,EAAE,YAHb;AAIEoB,MAAAA,cAAc,EAAE,WAJlB;AAKEC,MAAAA,WAAW,EAAE;AALf,KADsB,EAQtB;AACEF,MAAAA,SAAS,EAAE,IADb;AAEEpB,MAAAA,OAAO,EAAE,cAFX;AAGEC,MAAAA,SAAS,EAAE,WAHb;AAIEoB,MAAAA,cAAc,EAAE,WAJlB;AAKEC,MAAAA,WAAW,EAAE;AALf,KARsB,EAetB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEEF,MAAAA,SAAS,EAAE,IAFb;AAGEpB,MAAAA,OAAO,EAAE,iBAHX;AAIEC,MAAAA,SAAS,EAAE,MAJb;AAKEoB,MAAAA,cAAc,EAAE,YALlB;AAMEC,MAAAA,WAAW,EAAE;AANf,KAtBsB,EA8BtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEF,MAAAA,SAAS,EAAE,IADb;AAEEpB,MAAAA,OAAO,EAAE,YAFX;AAGEC,MAAAA,SAAS,EAAE,aAHb;AAIEoB,MAAAA,cAAc,EAAE,YAJlB;AAKEC,MAAAA,WAAW,EAAE;AALf,KArCsB,EA4CtB;AACEF,MAAAA,SAAS,EAAE,IADb;AAEEpB,MAAAA,OAAO,EAAE,aAFX;AAGEC,MAAAA,SAAS,EAAE,UAHb;AAIEoB,MAAAA,cAAc,EAAE,WAJlB;AAKEC,MAAAA,WAAW,EAAE;AALf,KA5CsB,CAmDtB;AACA;AACA;AACA;AACA;AACA;AACA;AAzDsB,KAAxB;AA4DA,wBACE,uDACE;AAAK,MAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAE,KAAKtJ,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACxCC,QAAAA,EAAE,EAAE;AADoC,OAA9B,CADd;AAIE,MAAA,UAAU,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBgC,UAJ/B;AAKE,MAAA,QAAQ,EAAE,KAAK5B,KAAL,CAAWJ,KAAX,CAAiB6D,QAL7B;AAME,MAAA,UAAU,EACR,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4B2H,YAA5B,IACA,KAAKvJ,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4B4H,WARhC;AAUE,MAAA,eAAe,EAAGC,IAAD,IACf,KAAKzJ,KAAL,CAAW/B,gBAAX,CACEwL,IADF,EAEE,KAAKzJ,KAAL,CAAWJ,KAAX,CAAiB6D,QAFnB,EAGE,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgC,UAHnB,CAXJ;AAiBE,MAAA,cAAc,EAAE,KAAK5B,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAjB9C;AAkBE,MAAA,eAAe,EAAC,YAlBlB;AAmBE,MAAA,SAAS,EAAC,cAnBZ;AAoBE,MAAA,UAAU,EAAC,MApBb;AAqBE,MAAA,WAAW,EAAC,aArBd;AAsBE,MAAA,gBAAgB,EAAE,KAAK7B,KAAL,CAAW7B,gBAtB/B;AAuBE,MAAA,WAAW,EAAE4K,WAvBf;AAwBE,MAAA,qBAAqB,EAAE,KAAKpJ,KAAL,CAAWsE,qBAxBpC;AAyBE,MAAA,KAAK,EAAEwE,KAzBT;AA0BE,MAAA,SAAS,EAAE,KAAK/E,SA1BlB;AA2BE,MAAA,UAAU,EAAE,KAAK2D,UA3BnB;AA4BE,MAAA,SAAS,EAAE,MAAM,KAAKrH,KAAL,CAAW9B,sBAAX,CAAkC8K,QAAlC,CA5BnB;AA6BE,MAAA,cAAc,EAAE,KA7BlB;AA8BE,MAAA,UAAU,EAAE,KA9Bd;AA+BE,MAAA,aAAa,EAAE,KAAKhJ,KAAL,CAAWJ,KAAX,CAAiBoE,aA/BlC;AAgCE,MAAA,WAAW,EAAE,IAhCf;AAiCE,MAAA,iBAAiB,EAAE,IAjCrB;AAkCE,MAAA,WAAW,EAAE,KAAK/D,WAlCpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAuCE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4B4H,WAA5B,IACC,KAAKxJ,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4B4H,WAA5B,CAAwCE,MAAxC,GAAiD,CADlD,IAEC,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAF7B,gBAGC,uDACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAK7B,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C8H,YAFhD,CANF,eAWE,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD,CAAK,IAAL;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,MAAM,EACJ,KAAKhK,KAAL,CAAWsE,qBAAX,CAAiC2F,OAAjC,CAAyCf,MAAzC,MAAqD,CAAC,CAH1D;AAKE,MAAA,SAAS,EAAC,kCALZ;AAME,kBAAU,KAAK7I,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACtCC,QAAAA,EAAE,EAAE;AADkC,OAA9B,CANZ,CASD;AATC;AAUE,MAAA,OAAO,EAAE,MACP,KAAK1B,KAAL,CAAW9B,sBAAX,CAAkCgL,SAAlC,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAcA,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE/L,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,CADF,eAkBE,oBAAC,GAAD,CAAK,IAAL;AACE,MAAA,IAAI,EAAC,eADP;AAEE,MAAA,SAAS,EAAC,oDAFZ;AAGE,kBAAU,KAAK6C,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACtCC,QAAAA,EAAE,EAAE;AADkC,OAA9B,CAHZ,CAMD;AANC;AAOE,MAAA,MAAM,EACJ,KAAK/B,KAAL,CAAWsE,qBAAX,CAAiC2F,OAAjC,CAAyCvI,QAAzC,MAAuD,CAAC,CAR5D;AAUE,MAAA,OAAO,EAAE,MAAM,KAAKD,aAAL,CAAmBC,QAAnB,CAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYA,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEjE,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,CAlBF,eAiCE,oBAAC,GAAD,CAAK,IAAL;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,IAAI,EAAC,eAFP;AAGE,MAAA,MAAM,EACJ,KAAKuC,KAAL,CAAWsE,qBAAX,CAAiC2F,OAAjC,CACEd,eADF,MAEM,CAAC,CANX;AAQE,MAAA,OAAO,EAAE,MACP,KAAK9I,KAAL,CAAW3B,gBAAX,CACE,KAAK2B,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAD9B,EAEE,KAAK7B,KAAL,CAAWJ,KAAX,CAAiB6D,QAFnB,EAGEqF,eAHF,CATJ,CAeA;AAfA;AAgBE,kBAAU,KAAK9I,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACtCC,QAAAA,EAAE,EAAE;AADkC,OAA9B,CAhBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAoBE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,KAAK,EAAC,IAFR;AAGE,MAAA,MAAM,EAAC,IAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,CAjCF,CAFF,CADF,CAXF,CADF,eA8EE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,OAAO,EAAC,aAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CoD,WAA5C,IAA2D,MAA3D,GAAoE,GAApE,GACA,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CoD,WAHhD,CAPF,CADF,CADF,eAiBE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,iBADL;AAEE,MAAA,OAAO,EAAC,eAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CgI,IAA5C,KAAqD,MAArD,IACC,KAAK7J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CgI,IAA5C,CAAiDH,MAAjD,KAA4D,CAD7D,GAEG,GAFH,GAGG,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CgI,IAJlD,CAPF,CADF,CAjBF,eAmCE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,SAArB;AAA+B,MAAA,OAAO,EAAC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK7J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CsD,IAA5C,KAAqD,MAArD,IACC,KAAKnF,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CsD,IAA5C,CAAiDuE,MAAjD,KAA4D,CAD7D,GAEG,GAFH,GAGG,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CsD,IAJlD,CAJF,CADF,CAnCF,eAkDE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,YAArB;AAAkC,MAAA,OAAO,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnF,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CiI,WAA5C,KAA4D,IAA5D,IACC,KAAK9J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CiI,WAA5C,CAAwDJ,MAAxD,KAAmE,CADpE,GAEG,GAFH,GAGG,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CiI,WAJlD,CAJF,CADF,CAlDF,eAiEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,OAAO,EAAC,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK9J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C8D,SAA5C,KAA0D,MAA1D,IACC,KAAK3F,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C8D,SAA5C,CAAsD+D,MAAtD,KAAiE,CADlE,GAEG,GAFH,GAGG,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CACC8D,SALP,CAPF,CADF,CAjEF,eAmFE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAK3F,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C6D,QAA5C,IAAwD,MAAxD,IACG,KAAK1F,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C6D,QAA5C,KAAyD,CAD5D,GACkE,GADlE,GAEA,KAAK1F,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C6D,QAJhD,CAPF,CADF,CAnFF,eAqGE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAK1F,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C+D,MAA5C,IAAsD,MAAtD,IACA,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C+D,MAA5C,CAAmD8D,MAAnD,KAA8D,CAD9D,GACiE,GADjE,GAEA,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C+D,MAJhD,CAPF,CADF,CArGF,eAuHE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,OAAO,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C0D,QAA5C,KAA0D,MAA1D,IACA,KAAKvF,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C0D,QAA5C,CAAqDmE,MAArD,KAAiE,CADjE,GACqE,GADrE,GAEE,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C0D,QAJlD,CAPF,CADF,CAvHF,eAyIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,OAAO,EAAC,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKvF,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CkI,SAA5C,IAAyD,MAAzD,IACA,KAAK/J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CkI,SAA5C,CAAsDL,MAAtD,KAAiE,CADjE,GACqE,GADrE,GAEA,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CkI,SAJhD,CAPF,CADF,CAzIF,eA2JE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAK/J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C2D,SAA5C,IAAyD,MAAzD,IACA,KAAKxF,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C2D,SAA5C,KAA0D,CAD1D,GAC6D,GAD7D,GAEA,KAAKxF,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C2D,SAJhD,CAPF,CADF,CA3JF,eA6KE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,OAAO,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKxF,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CmI,YAA5C,IAA4D,MAA5D,IACA,KAAKhK,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CmI,YAA5C,CAAyDN,MAAzD,KAAoE,CADpE,GACwE,GADxE,GAEA,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CmI,YAJhD,CAPF,CADF,CA7KF,eA+LE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,OAAO,EAAC,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKhK,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C4D,WAA5C,IAA2D,MAA3D,IACA,KAAKzF,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C4D,WAA5C,CAAwDiE,MAAxD,KAAmE,CADnE,GACuE,GADvE,GAEA,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4C4D,WAJhD,CAPF,CADF,CA/LF,eAiNE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,iBADL;AAEE,MAAA,OAAO,EAAC,cAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKzF,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CiE,MAA5C,IAAsD,MAAtD,IACA,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CiE,MAA5C,CAAmD4D,MAAnD,KAA8D,CAD9D,GACkE,GADlE,GAEA,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CiE,MAJhD,CAPF,CADF,CAjNF,eAmOE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,OAAO,EAAC,aAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CgE,WAA5C,IAA2D,MAA3D,IACA,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CgE,WAA5C,CAAwD6D,MAAxD,KAAmE,CADnE,GACuE,GADvE,GAEA,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CgE,WAJhD,CAPF,CADF,CAnOF,eAqPE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,OAAO,EAAC,aAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CkE,WAA5C,IAA2D,MAA3D,IACA,KAAK/F,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CkE,WAA5C,CAAwD2D,MAAxD,KAAmE,CADnE,GACuE,GADvE,GAEA,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,CAA4CkE,WAJhD,CAPF,CADF,CArPF,CADF,CA9EF,CAHD,GAqYC,EAtYJ,CADF,CADF,CAvCF,CADF,CADF,EAybG,KAAK/F,KAAL,CAAWJ,KAAX,CAAiBU,SAAjB,gBACC,oBAAC,aAAD;AACE,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWJ,KAAX,CAAiBU,SADzB;AAEE,MAAA,UAAU,EAAE,KAAKwB,UAFnB;AAGE,MAAA,SAAS,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBS,aAAjB,GAA+B,YAA/B,GAA4C,EAHzD,CAIC;AAJD;AAKE,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWJ,KAAX,CAAiBmC,SAAjB,GAA6B,IAA7B,GAAoC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBS,aAAjB,GAAiC,IAAjC,GAAwC,IALpF;AAME,MAAA,SAAS,EAAE,KAAKL,KAAL,CAAWJ,KAAX,CAAiBS,aAAjB,GAAiC,EAAjC,GAAsC,KAAKL,KAAL,CAAWJ,KAAX,CAAiBqC,SANpE;AAOE,MAAA,UAAU,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBiE,UAP/B;AAQE,MAAA,UAAU,EAAE,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBiH,UAR/B;AASE,MAAA,WAAW,EAAE,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBS,aAAjB,GAAiC,KAAKkD,cAAtC,GAAuD,KAAKe,WAT3E;AAUE,MAAA,KAAK,EAAE,KAAKtE,KAAL,CAAWJ,KAAX,CAAiBmC,SAV1B;AAWE,MAAA,aAAa,EAAE,KAAK+E,aAXtB;AAYE,MAAA,UAAU,EAAE,KAAK9G,KAAL,CAAWJ,KAAX,CAAiBS,aAAjB,GAAiC,IAAjC,GAAwC,KAZtD;AAaE,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWJ,KAAX,CAAiBS,aAAjB,GAAiC,IAAjC,GAAwC,KAbpD;AAcE,MAAA,YAAY,EAAE,KAAKL,KAAL,CAAWJ,KAAX,CAAiB2H,YAdjC;AAeE,MAAA,WAAW,EAAE,KAAKvH,KAAL,CAAWhC,WAf1B;AAgBE,MAAA,cAAc,EAAE,KAAK2B,KAAL,CAAWqC,cAAX,IAA6B,EAhB/C;AAiBE,MAAA,eAAe,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBS,aAAjB,GAAiC,EAAjC,GAAsC,KAAKL,KAAL,CAAWJ,KAAX,CAAiBU,SAAjB,GAA6B6I,eAA7B,GAA+C,EAjBxG;AAmBE,MAAA,YAAY,EACV,KAAKnJ,KAAL,CAAWJ,KAAX,CAAiBmC,SAAjB,gBACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBqC,SAD9B;AAEE,QAAA,eAAe,EAAE,KAAKY,eAFxB;AAGE,QAAA,UAAU,EAAE,KAAK7C,KAAL,CAAWJ,KAAX,CAAiBiE,UAH/B;AAIE,QAAA,cAAc,EAAE,KAAKlE,KAAL,CAAWqC,cAAX,IAA6B,EAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAOI,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBS,aAAjB,gBACF,oBAAC,kBAAD,CACE;AADF;AAEE,QAAA,MAAM,EAAE,KAAKV,KAAL,CAAWgI,MAFrB;AAGE,QAAA,UAAU,EAAE,KAAKhI,KAAL,CAAWsK,UAHzB;AAIE,QAAA,IAAI,EAAE,KAAKtK,KAAL,CAAWqB,SAJnB;AAKE,QAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWuB,SALnB;AAME,QAAA,QAAQ,EAAE,KAAKwB,QANjB;AAOE,QAAA,IAAI,EAAE,KAAK/C,KAAL,CAAWgB,IAPnB;AAQE,QAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWe,MARrB;AASE,QAAA,WAAW,EAAE,KAAK0H,SATpB;AAUE,QAAA,UAAU,EAAE,KAAKpI,KAAL,CAAWJ,KAAX,CAAiBW,WAAjB,IAA8B,EAV5C;AAWE,QAAA,gBAAgB,EAAE,KAAKQ,gBAXzB;AAYE,QAAA,MAAM,EAAE,IAZV;AAaE,QAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWJ,KAAX,CAAiB6D,QAb7B,CAcA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,gBAoBA,oBAAC,UAAD;AACE,QAAA,cAAc,EAAE,KAAK9D,KAAL,CAAWqC,cAAX,IAA6B,EAD/C;AAEE,QAAA,eAAe,EAAE,KAAKa,eAFxB;AAGE,QAAA,aAAa,EAAE,KAAKT,aAHtB;AAIE,QAAA,sBAAsB,EAAE,KAAKG,sBAJ/B;AAKE,QAAA,gBAAgB,EAAE,KAAKY,gBALzB;AAME,QAAA,UAAU,EAAE,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBsK,UAAjB,IAA+B,EAN7C;AAOE,QAAA,QAAQ,EAAE,KAAKlK,KAAL,CAAWJ,KAAX,CAAiBuK,QAAjB,IAA6B,EAPzC;AAQE,QAAA,WAAW,EAAE,KAAKnK,KAAL,CAAWJ,KAAX,CAAiBwK,WAAjB,IAAgC,EAR/C;AASE,QAAA,eAAe,EACb,KAAKpK,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BC,eAA5B,IAA+C,EAVnD;AAYE,QAAA,SAAS,EAAE,KAAK7B,KAAL,CAAWJ,KAAX,CAAiBqC,SAZ9B;AAaE,QAAA,UAAU,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBiE,UAb/B;AAcE,QAAA,QAAQ,EAAE,KAAK7D,KAAL,CAAWJ,KAAX,CAAiB6D,QAd7B;AAeE,QAAA,WAAW,EAAE,KAAKzD,KAAL,CAAWJ,KAAX,CAAiByK,WAfhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/CR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAqEC,EA9fJ,CADF;AAmgBD;;AAEDC,EAAAA,kBAAkB,CAACC,aAAD,EAAgB;AAChC,QAAI,KAAKvK,KAAL,CAAWJ,KAAX,CAAiBoC,cAAjB,KAAoCuI,aAAa,CAAC3K,KAAd,CAAoBoC,cAA5D,EAA4E;AAC1E,WAAKvB,QAAL,CAAc;AAAEuB,QAAAA,cAAc,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC;AAAnC,OAAd;AACC;;AAEH,QAAG,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,KAA8B2I,aAAa,CAAC3K,KAAd,CAAoBgC,UAArD,EAAgE;AAC5D,UAAI+F,MAAM,GAAG,KAAKhI,KAAL,CAAWgI,MAAxB;AACA,UAAI6C,kBAAkB,GAAC,EAAvB;AACA,UAAIC,gBAAgB,GAAE,EAAtB;AACA,UAAIC,mBAAmB,GAAC,EAAxB;AAEA,WAAK1K,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BsI,UAA5B,IAA0C,KAAKlK,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BsI,UAA5B,CAAuC/D,GAAvC,CACvCC,IAAD,IAAQoE,kBAAkB,CAACG,IAAnB,CAAwB;AAAC,iBAAQvE,IAAI,CAAChB,WAAd;AAA2B,iBAAQgB,IAAI,CAAC0D;AAAxC,OAAxB,CADgC,CAA1C;AAIA,WAAK9J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BuI,QAA5B,IAAwC,KAAKnK,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BuI,QAA5B,CAAqChE,GAArC,CACrCC,IAAD,IAAQqE,gBAAgB,CAACE,IAAjB,CAAsB;AAAC,iBAAQvE,IAAI,CAACf,SAAd;AAAyB,iBAAQe,IAAI,CAAC2D;AAAtC,OAAtB,CAD8B,CAAxC;AAIA,WAAK/J,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BwI,WAA5B,IAA2C,KAAKpK,KAAL,CAAWJ,KAAX,CAAiBgC,UAAjB,CAA4BwI,WAA5B,CAAwCjE,GAAxC,CACxCC,IAAD,IAAQsE,mBAAmB,CAACC,IAApB,CAAyB;AAAC,iBAAQvE,IAAI,CAACd,YAAd;AAA4B,iBAAQc,IAAI,CAAC4D;AAAzC,OAAzB,CADiC,CAA3C,CAd4D,CAiB5D;;AACArC,MAAAA,MAAM,GAAC,EACL,GAAGA,MADE;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mCAA2B;AACzB,mBAAS,KAAK3H,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADgB;AAIzB,kBAAQ,QAJiB;AAKzB,0BAAgB,CAAC,OAAD,CALS;AAMzB,2BAAiB;AACf,0BAAc+I;AADC;AANQ,SAbtB;AAwBL,sCAA8B;AAC9B,mBAAS,KAAKzK,KAAL,CAAWwB,IAAX,CAAgBC,aAAhB,CAA8B;AACrCC,YAAAA,EAAE,EAAE;AADiC,WAA9B,CADqB;AAI9B,kBAAQ,QAJsB;AAK9B,0BAAgB,CAAC,OAAD,CALc;AAM9B,2BAAiB;AACf,0BAAcgJ;AADC;AANa;AAxBzB,OAAP;AAmCA,WAAKjK,QAAL,CAAc;AAAEkH,QAAAA,MAAM,EAAEA;AAAV,OAAd;AACH;;AACD,QACE,KAAK3H,KAAL,CAAWJ,KAAX,CAAiB6D,QAAjB,CAA0BS,SAA1B,KACAqG,aAAa,CAAC3K,KAAd,CAAoB6D,QAApB,CAA6BS,SAF/B,EAGE;AACA,YAAMD,qBAAqB,GAAG,EAA9B;;AACA,UAAI,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBqE,qBAArB,EAA4C;AAC1C,aAAKjE,KAAL,CAAWJ,KAAX,CAAiBqE,qBAAjB,CACE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiB6D,QAAjB,CAA0BS,SAD5B,KAGE0G,MAAM,CAACC,MAAP,CACE,KAAK7K,KAAL,CAAWJ,KAAX,CAAiBqE,qBAAjB,CACA,KAAKjE,KAAL,CAAWJ,KAAX,CAAiB6D,QAAjB,CAA0BS,SAD1B,CADF,EAIEiC,GAJF,CAIOC,IAAD,IAAUnC,qBAAqB,CAAC0G,IAAtB,CAA2BvE,IAAI,CAACwC,YAAhC,CAJhB,CAHF;AAQD;;AACD,YAAMnB,UAAU,GAAGhJ,aAAa,CAC9B,KAAKuB,KAAL,CAAWJ,KAAX,CAAiBqE,qBADa,EAE9B,KAAKjE,KAAL,CAAWJ,KAAX,CAAiB6D,QAAjB,CAA0BS,SAFI,CAAhC;AAIA,WAAKzD,QAAL,CAAc;AAAEwD,QAAAA,qBAAF;AAAyBwD,QAAAA;AAAzB,OAAd;AACD;AACF;;AAnkCyC;;AA65C5C,eAAejL,OAAO,CAACkD,eAAD,EAAkB;AACtC7B,EAAAA,WADsC;AAEtCC,EAAAA,UAFsC;AAGtCC,EAAAA,uBAHsC;AAItCC,EAAAA,WAJsC;AAKtCC,EAAAA,gBALsC;AAMtCC,EAAAA,sBANsC;AAOtCC,EAAAA,gBAPsC;AAQtCC,EAAAA,gBARsC;AAStCC,EAAAA,gBATsC;AASpBC,EAAAA;AAToB,CAAlB,CAAP,CAUZ5B,UAAU,CAACmD,aAAD,CAVE,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataGrid from \"../../components/data-grid/data-grid.component\";\r\nimport Fields from \"../../components/PatientMasterFields.json\";\r\nimport {\r\n  Query,\r\n  Builder,\r\n  BasicConfig, BasicFuncs,\r\n  Utils as QbUtils,\r\n} from \"react-awesome-query-builder\";\r\nimport {\r\n  callService,\r\n  crudMaster,\r\n  validateEsignCredential,\r\n  updateStore,\r\n  getPatientDetail,\r\n  getPatientComboService,\r\n  filterColumnData,\r\n  getTestParameter,\r\n  getPatientReport, getPatientDetailsByFilterQuery\r\n} from \"../../actions\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport {\r\n  showEsign,\r\n  getControlMap,\r\n  validatePhoneNumber,\r\n  ageCalculate,\r\n  formatInputDate,\r\n  validateEmail,\r\n  formatDate\r\n} from \"../../components/CommonScript\";\r\nimport { transactionStatus } from \"../../components/Enumeration\";\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\nimport { ReactComponent as Reports } from \"../../assets/image/report-Icon.svg\";\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport AddPatient from \"./AddPatient\";\r\nimport Esign from \"../audittrail/Esign\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\n// import ReactTooltip from \"react-tooltip\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport FilterQueryBuilder from \"../../components/FilterQueryBuilder\";\r\nimport AddFilteredPatient from \"./AddFilteredPatient\";\r\n//import Filtercomponent from '../../components/Filtercomponent';\r\n// import FilterDemo from \"./FilterDemo\";\r\n// import \"antd/dist/antd.css\";\r\n// import 'react-awesome-query-builder/css/styles.scss';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\n\r\nclass PatientMaster extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      masterStatus: \"\",\r\n      error: \"\",\r\n      selectedRecord: {},\r\n      operation: \"\",\r\n      selectedPatient: undefined,\r\n      screenName: undefined,\r\n      userRoleControlRights: [],\r\n      controlMap: new Map(),\r\n      isClearSearch: false,\r\n      dataState: { skip: 0, take: 5 },\r\n      tree: undefined,\r\n      config: undefined,\r\n      kendoSkip:0,\r\n      kendoTake:5,\r\n      fields: {\r\n        \"patientmaster.sfirstname\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_FIRSTNAME\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter First Name\"\r\n          }\r\n\r\n        },\r\n        \"patientmaster.slastname\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_LASTNAME\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter Last Name\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.sfathername\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_FATHERNAME\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter Father Name\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.ngendercode\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_GENDER\",\r\n          }),\r\n          \"type\": \"select\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"listValues\": [\r\n              { \"value\": \"1\", \"title\": \"Male\" },\r\n              { \"value\": \"2\", \"title\": \"Female\" },\r\n              { \"value\": \"3\", \"title\": \"Others\" }\r\n            ]\r\n          }\r\n        },\r\n\r\n\r\n        // \"patientmaster.ncitycode\": {\r\n        //   \"label\": this.props.intl.formatMessage({\r\n        //     id: \"IDS_CITY\",\r\n        //   }),\r\n        //   \"type\": \"select\",\r\n        //   \"valueSources\": [\"value\"],\r\n        //   \"fieldSettings\": {\r\n        //     \"listValues\": [\r\n        //       { \"value\": \"1\", \"title\": \"Male\" },\r\n        //       { \"value\": \"2\", \"title\": \"Female\" },\r\n        //       { \"value\": \"3\", \"title\": \"Others\" }\r\n        //     ]\r\n        //   }\r\n        // },\r\n\r\n\r\n        // \"patientmaster.ncountrycode\": {\r\n        //   \"label\": this.props.intl.formatMessage({\r\n        //     id: \"IDS_COUNTRY\",\r\n        //   }),\r\n        //   \"type\": \"select\",\r\n        //   \"valueSources\": [\"value\"],\r\n        //   \"fieldSettings\": {\r\n        //     \"listValues\": [\r\n        //       { \"value\": \"1\", \"title\": \"Male\" },\r\n        //       { \"value\": \"2\", \"title\": \"Female\" },\r\n        //       { \"value\": \"3\", \"title\": \"Others\" }\r\n        //     ]\r\n        //   }\r\n        // },\r\n\r\n        \"patientmaster.ddob\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_DATEOFBIRTH\",\r\n          }),\r\n          \"type\": \"date\",\r\n          \"valueSources\": [\"value\"]\r\n        },\r\n\r\n        \"patientmaster.sage\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_AGE\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Age\",\r\n            \"valuePlaceholder\": \"Enter the Age\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.saddress\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_ADDRESS\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter Address\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.sdistrict\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_DISTRICT\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter District\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.spatientid\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_PATIENTID\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter Patient Id\"\r\n\r\n          }\r\n        },\r\n        \"patientmaster.spostalcode\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_POSTALCODE\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter Postal Code\"\r\n\r\n          }\r\n        },\r\n     \r\n        \r\n        \"patientmaster.sphoneno\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_PHONENO\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter Phoneno\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.smobileno\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_MOBILENO\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter Mobileno\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.semail\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_EMAIL\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter Email\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.srefid\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_REFERENCEID\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter ReferenceId\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.spassportno\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_PASSPORTNO\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter Passportno\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.sexternalid\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_EXTERNALID\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter ExternalID\"\r\n\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.emailRef = React.createRef();\r\n    this.confirmMessage = new ConfirmMessage();\r\n\r\n    this.patientFieldList = [\r\n      \"sfirstname\",\r\n      \"slastname\",\r\n      \"sfathername\",\r\n      \"ddob\",\r\n      \"sage\",\r\n      \"saddress\",\r\n      \"sdistrict\",\r\n      \"spostalcode\",\r\n      \"sphoneno\",\r\n      \"smobileno\",\r\n      \"semail\",\r\n      \"srefid\",\r\n      \"spassportno\",\r\n      \"sexternalid\"    \r\n    ];\r\n\r\n    this.searchFieldList = [\r\n      \"saddress\",\r\n      \"sage\",\r\n      \"sdob\",\r\n      \"sgendername\",\r\n      \"sfathername\",\r\n\t    \"spatientname\",\r\n      \"spatientid\",\r\n      \"sphoneno\",\r\n      \"smobileno\",\r\n      \"semail\",\r\n      \"scityname\",\r\n      \"sdistrict\",\r\n      \"scountryname\",\r\n      \"spostalcode\",\r\n      \"srefid\",\r\n      \"spassportno\",\r\n      \"sexternalid\"\r\n    ];\r\n\r\n    this.columnList = [\r\n      { idsName: \"IDS_ARNO\", dataField: \"sarno\", width: \"150px\" },\r\n      { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", width: \"250px\" },\r\n      { idsName: \"IDS_SPECIFICATION\", dataField: \"sspecname\", width: \"150px\" },\r\n      {\r\n        idsName: \"IDS_SPECIMENCOLLECTIONTIME\",\r\n        dataField: \"scolleciondate\",\r\n        width: \"150px\",\r\n      },\r\n      {\r\n        idsName: \"IDS_RECEIVEDDATE\",\r\n        dataField: \"sreceiveddate\",\r\n        width: \"150px\",\r\n      },\r\n      {\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"stransdisplaystatus\",\r\n        width: \"100px\",\r\n      },\r\n    ];\r\n\r\n    this.childColumnList = [\r\n      { idsName: \"IDS_TESTNAME\", dataField: \"stestsynonym\", width: \"250px\" },\r\n      {\r\n        idsName: \"IDS_PARAMETERNAME\",\r\n        dataField: \"sparametersynonym\",\r\n        width: \"250px\",\r\n      },\r\n      { idsName: \"IDS_RESULT\", dataField: \"sresult\", width: \"150px\" },\r\n      { idsName: \"IDS_RESULTFLAG\", dataField: \"sgradename\", width: \"100px\" },\r\n      { idsName: \"IDS_RESULTDATE\", dataField: \"sentereddate\", width: \"150px\" },\r\n      {\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"stransdisplaystatus\",\r\n        width: \"100px\",\r\n      },\r\n    ];\r\n    this.slideList = [\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_PATIENTID\" }), filed: \"spatientid\", width: \"250px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_FIRSTNAME\" }), filed: \"sfirstname\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_LASTNAME\" }), filed: \"slastname\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_FATHERNAME\" }), filed: \"sfathername\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_GENDER\" }), filed: \"sgendername\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_COUNTRY\" }), filed: \"scountryname\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_DATEOFBIRTH\" }), filed: \"sdob\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_DISTRICT\" }), filed: \"sdistrict\", width: \"100px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_POSTALCODE\" }), filed: \"spostalcode\", width: \"100px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_PHONENO\" }), filed: \"sphoneno\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_MOBILENO\" }), filed: \"smobileno\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_EMAIL\" }), filed: \"semail\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_ADDRESS\" }), filed: \"saddress\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_REFID\" }), filed: \"srefid\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_PASSPORTNO\" }), filed: \"spassportno\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_EXTERNALID\" }), filed: \"sexternalid\", width: \"150px\" },\r\n \r\n \r\n    ];\r\n\r\n\r\n\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.Login.masterStatus !== \"\" &&\r\n      props.Login.masterStatus !== state.masterStatus\r\n    ) {\r\n      toast.warn(props.Login.masterStatus);\r\n      props.Login.masterStatus = \"\";\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n      toast.error(props.Login.error);\r\n      props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n      return { selectedRecord: {} };\r\n    }\r\n    return null;\r\n  }\r\n  handleClick = () => {\r\n    let obj = { typeName: DEFAULT_RETURN, data: { openAdvFilter: true, openModal: true, slideResult: undefined } }\r\n    this.setState({ config: undefined, tree: undefined })\r\n    this.props.updateStore(obj);\r\n  }\r\n  dataStateChange = (event) => {\r\n    this.setState({ dataState: event.dataState })\r\n  }\r\n\r\n  handlePageChange = (event) => {\r\n    this.setState({ kendoSkip: event.skip, kendoTake: event.take });\r\n};\r\n  render() {\r\n    const addId =\r\n      this.state.controlMap.has(\"AddPatient\") &&\r\n      this.state.controlMap.get(\"AddPatient\").ncontrolcode;\r\n    const editId =\r\n      this.state.controlMap.has(\"EditPatient\") &&\r\n      this.state.controlMap.get(\"EditPatient\").ncontrolcode;\r\n    const deleteId =\r\n      this.state.controlMap.has(\"DeletePatient\") &&\r\n      this.state.controlMap.get(\"DeletePatient\").ncontrolcode;\r\n    const patientReportId =\r\n      this.state.controlMap.has(\"PatientReport\") &&\r\n      this.state.controlMap.get(\"PatientReport\").ncontrolcode;\r\n\r\n    const filterParam = {\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n      primaryKeyField: \"npatientcode\",\r\n      fetchUrl: \"patient/getPatient\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n\r\n    const addParam = {\r\n      screenName: \"IDS_PATIENTMASTER\",\r\n      operation: \"create\",\r\n      primaryKeyName: \"npatientcode\",\r\n      masterData: this.props.Login.masterData,\r\n      userInfo: this.props.Login.userInfo,\r\n      ncontrolcode: addId,\r\n    };\r\n    const editParam = {\r\n      screenName: \"IDS_PATIENTMASTER\",\r\n      operation: \"update\",\r\n      primaryKeyName: \"spatientid\",\r\n      masterData: this.props.Login.masterData,\r\n      userInfo: this.props.Login.userInfo,\r\n      ncontrolcode: editId,\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n    };\r\n    const mandatoryFields = [\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_FIRSTNAME\",\r\n        dataField: \"sfirstname\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_LASTNAME\",\r\n        dataField: \"slastname\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      // {\r\n      //   mandatory: true,\r\n      //   idsName: \"IDS_FATHERGUARDIANNAME\",\r\n      //   dataField: \"sfathername\",\r\n      //   mandatoryLabel: \"IDS_ENTER\",\r\n      //   controlType: \"textbox\",\r\n      // },\r\n      {\r\n\r\n        mandatory: true,\r\n        idsName: \"IDS_DATEOFBIRTH\",\r\n        dataField: \"ddob\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      // {\r\n      //   mandatory: true,\r\n      //   idsName: \"IDS_AGE\",\r\n      //   dataField: \"sage\",\r\n      //   mandatoryLabel: \"IDS_ENTER\",\r\n      //   controlType: \"textbox\",\r\n      // },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_GENDER\",\r\n        dataField: \"ngendercode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_ADDRESS\",\r\n        dataField: \"saddress\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      // {\r\n      //   mandatory: true,\r\n      //   idsName: \"IDS_PHONENO\",\r\n      //   dataField: \"sphoneno\",\r\n      //   mandatoryLabel: \"IDS_ENTER\",\r\n      //   controlType: \"textbox\",\r\n      // },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap  mtop-4 mtop-fixed-breadcrumb\">\r\n          <Row noGutters>\r\n            <Col md={4}>\r\n              <ListMaster\r\n                screenName={this.props.intl.formatMessage({\r\n                  id: \"IDS_PATIENTMASTER\",\r\n                })}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={\r\n                  this.props.Login.masterData.searchedData ||\r\n                  this.props.Login.masterData.PatientList\r\n                }\r\n                getMasterDetail={(user) =>\r\n                  this.props.getPatientDetail(\r\n                    user,\r\n                    this.props.Login.userInfo,\r\n                    this.props.Login.masterData\r\n                  )\r\n                }\r\n                selectedMaster={this.props.Login.masterData.SelectedPatient}\r\n                primaryKeyField=\"spatientid\"\r\n                mainField=\"spatientname\"\r\n                firstField=\"sage\"\r\n                secondField=\"sgendername\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                addId={addId}\r\n                searchRef={this.searchRef}\r\n                reloadData={this.reloadData}\r\n                openModal={() => this.props.getPatientComboService(addParam)}\r\n                isMultiSelecct={false}\r\n                hidePaging={false}\r\n                isClearSearch={this.props.Login.isClearSearch}\r\n                showMicIcon={true}\r\n                showAdvFilterIcon={true}\r\n                handleClick={this.handleClick}\r\n              />\r\n            </Col>\r\n            <Col md={8}>\r\n              <ContentPanel className=\"panel-main-content\">\r\n                <Card className=\"border-0\">\r\n                  {this.props.Login.masterData.PatientList &&\r\n                    this.props.Login.masterData.PatientList.length > 0 &&\r\n                    this.props.Login.masterData.SelectedPatient ? (\r\n                    <>\r\n                      <Card.Header>\r\n                        {/* <ReactTooltip\r\n                          place=\"bottom\"\r\n                          globalEventOff=\"click\"\r\n                          id=\"tooltip_list_wrap\"\r\n                        /> */}\r\n                        <Card.Title className=\"product-title-main\">\r\n                          {\r\n                            this.props.Login.masterData.SelectedPatient.spatientname\r\n                          }\r\n                        </Card.Title>\r\n                        <Card.Subtitle>\r\n                          <div className=\"d-flex product-category\">\r\n                            <h2 className=\"product-title-sub flex-grow-1\"></h2>\r\n                            <div className=\"d-inline\">\r\n                              <Nav.Link\r\n                                name=\"editPatient\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(editId) === -1                                \r\n                                }\r\n                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_EDIT\",\r\n                                })}\r\n                             //   data-for=\"tooltip_list_wrap\"\r\n                                onClick={() =>\r\n                                  this.props.getPatientComboService(editParam)\r\n                                }\r\n                              >\r\n                              <FontAwesomeIcon icon={faPencilAlt} />\r\n                              </Nav.Link>\r\n\r\n                              <Nav.Link\r\n                                name=\"deletePatient\"\r\n                                className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_DELETE\",\r\n                                })}\r\n                             //   data-for=\"tooltip_list_wrap\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(deleteId) === -1                                                                      \r\n                                }\r\n                                onClick={() => this.ConfirmDelete(deleteId)}\r\n                              >\r\n                              <FontAwesomeIcon icon={faTrashAlt} />\r\n                              </Nav.Link>\r\n\r\n                              <Nav.Link\r\n                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                name=\"patientReport\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(\r\n                                    patientReportId\r\n                                  ) === -1\r\n                                }\r\n                                onClick={() =>\r\n                                  this.props.getPatientReport(\r\n                                    this.props.Login.masterData.SelectedPatient,\r\n                                    this.props.Login.userInfo,\r\n                                    patientReportId\r\n                                  )\r\n                                }\r\n                              //  data-for=\"tooltip_list_wrap\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_PATIENTREPORT\",\r\n                                })}\r\n                              >\r\n                                <Reports\r\n                                  className=\"custom_icons\"\r\n                                  width=\"20\"\r\n                                  height=\"20\"\r\n                                />\r\n                              </Nav.Link>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Subtitle>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        <Row>\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_FATHERNAME\"\r\n                                  message=\"Father Name\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sfathername == \"null\" ? \"-\" :\r\n                                  this.props.Login.masterData.SelectedPatient.sfathername\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_DATEOFBIRTH\"\r\n                                  message=\"Date Of Birth\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient.sdob === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sdob.length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sdob\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage id=\"IDS_AGE\" message=\"Age\" />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient.sage === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sage.length === 0                                                                    \r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sage\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage id=\"IDS_GENDER\" message=\"Gender\" />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient.sgendername === null ||\r\n                                  this.props.Login.masterData.SelectedPatient.sgendername.length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sgendername\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_MOBILENO\"\r\n                                  message=\"Mobile No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient.smobileno === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.smobileno.length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient\r\n                                    .smobileno}\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_PHONENO\"\r\n                                  message=\"Phone No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sphoneno == \"null\" \r\n                                  || this.props.Login.masterData.SelectedPatient.sphoneno === 0   ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.sphoneno                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                         \r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_EMAILID\"\r\n                                  message=\"Email ID\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.semail == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.semail.length === 0 ?\"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.semail                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={8}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_ADDRESS\"\r\n                                  message=\"Address\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.saddress  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.saddress.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.saddress \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_CITY\"\r\n                                  message=\"City\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.scityname == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.scityname.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.scityname                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_DISTRICT\"\r\n                                  message=\"District\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrict == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrict === 0 ?\"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrict                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_COUNTRY\"\r\n                                  message=\"COUNTRY\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.scountryname == \"null\" || \r\n                                  this.props.Login.masterData.SelectedPatient.scountryname.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.scountryname                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_POSTALCODE\"\r\n                                  message=\"PostalCode\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcode == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcode.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcode                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_REFERENCEID\"\r\n                                  message=\"Reference ID\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.srefid == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.srefid.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.srefid                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_PASSPORTNO\"\r\n                                  message=\"Passport No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.spassportno == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.spassportno.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.spassportno                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_EXTERNALID\"\r\n                                  message=\"External ID\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sexternalid == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sexternalid.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.sexternalid                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        {/* <Row>\r\n                          <Col> */}\r\n                            {/* <DataGrid\r\n                              userRoleControlRights={\r\n                                this.state.userRoleControlRights\r\n                              }\r\n                              controlMap={this.state.controlMap}\r\n                              primaryKeyField={\"npreregno\"}\r\n                              data={\r\n                                this.props.Login.masterData &&\r\n                                this.props.Login.masterData[\"PatientHistory\"]\r\n                              }\r\n                              dataResult={process(\r\n                                this.props.Login.masterData &&\r\n                                (this.props.Login.masterData[\r\n                                  \"PatientHistory\"\r\n                                ] ||\r\n                                  []),\r\n                                this.state.dataState\r\n                              )}\r\n                              dataState={this.state.dataState}\r\n                              dataStateChange={this.dataStateChange}\r\n                              extractedColumnList={this.columnList}\r\n                              inputParam={this.props.Login.inputParam}\r\n                              userInfo={this.props.Login.userInfo}\r\n                              methodUrl={this.props.Login.inputParam.methodUrl}\r\n                              pageable={true}\r\n                              scrollable={\"scrollable\"}\r\n                              isActionRequired={false}\r\n                              isToolBarRequired={false}\r\n                              selectedId={null}\r\n                              hideColumnFilter={false}\r\n                              expandField={\"expanded\"}\r\n                              handleExpandChange={this.handleExpandChange}\r\n                              hasChild={true}\r\n                              childColumnList={this.childColumnList}\r\n                              childMappingField={\"npreregno\"}\r\n                              childList={this.props.Login.testMap || new Map()}\r\n                            />\r\n                          </Col>\r\n                        </Row> */}\r\n                      </Card.Body>\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Card>\r\n              </ContentPanel>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        {this.props.Login.openModal ? (\r\n          <SlideOutModal\r\n            show={this.props.Login.openModal}\r\n            closeModal={this.closeModal}\r\n            className={this.props.Login.openAdvFilter?\"wide-popup\":\"\"}\r\n           // operation={this.props.Login.operation}\r\n            size={this.props.Login.loadEsign ? \"lg\" : this.props.Login.openAdvFilter ? \"xl\" : \"lg\"}\r\n            operation={this.props.Login.openAdvFilter ? \"\" : this.props.Login.operation}\r\n            inputParam={this.props.Login.inputParam}\r\n            screenName={this.props.Login.screenName}\r\n            onSaveClick={this.props.Login.openAdvFilter ? this.onSaveGetClick : this.onSaveClick}\r\n            esign={this.props.Login.loadEsign}\r\n            validateEsign={this.validateEsign}\r\n            showSubmit={this.props.Login.openAdvFilter ? true : false}\r\n            hideSave={this.props.Login.openAdvFilter ? true : false}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            mandatoryFields={this.props.Login.openAdvFilter ? \"\" : this.props.Login.openModal ? mandatoryFields : \"\"}\r\n\r\n            addComponent={\r\n              this.props.Login.loadEsign ? (\r\n                <Esign\r\n                  operation={this.props.Login.operation}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  inputParam={this.props.Login.inputParam}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                />\r\n              ) : this.props.Login.openAdvFilter ? (\r\n                <FilterQueryBuilder\r\n                  //fields={Fields}\r\n                  fields={this.state.fields}\r\n                  queryArray={this.state.queryArray}\r\n                  skip={this.state.kendoSkip}\r\n                  take={this.state.kendoTake}\r\n                  onChange={this.onChange}\r\n                  tree={this.state.tree}\r\n                  config={this.state.config}\r\n                  gridColumns={this.slideList}\r\n                  filterData={this.props.Login.slideResult||[]}\r\n                  handlePageChange={this.handlePageChange}\r\n                  static={true}\r\n                  userInfo={this.props.Login.userInfo}\r\n                // controlMap={this.state.controlMap}\r\n                // dataState={this.state.dataState}\r\n                // dataStateChange={this.dataStateChange}\r\n                />)\r\n                : \r\n                  <AddPatient\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    onInputOnChange={this.onInputOnChange}\r\n                    onComboChange={this.onComboChange}\r\n                    onNumericInputOnChange={this.onNumericInputOnChange}\r\n                    handleDateChange={this.handleDateChange}\r\n                    genderList={this.props.Login.genderList || []}\r\n                    cityList={this.props.Login.cityList || []}\r\n                    countryList={this.props.Login.countryList || []}\r\n                    selectedPatient={\r\n                      this.props.Login.masterData.SelectedPatient || {}\r\n                    }\r\n                    operation={this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    currentTime={this.props.Login.currentTime}\r\n                  />\r\n                \r\n            }\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(previousProps) {\r\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n      this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n      }\r\n\r\n    if(this.props.Login.masterData!==previousProps.Login.masterData){\r\n        let fields = this.state.fields;\r\n        let queryBuilderGender=[];\r\n        let queryBuilderCity =[];\r\n        let queryBuilderCountry=[];\r\n\r\n        this.props.Login.masterData.genderList && this.props.Login.masterData.genderList.map(\r\n          (item)=>queryBuilderGender.push({\"value\":item.ngendercode ,\"title\":item.sgendername})\r\n        )\r\n\r\n        this.props.Login.masterData.cityList && this.props.Login.masterData.cityList.map(\r\n          (item)=>queryBuilderCity.push({\"value\":item.ncitycode ,\"title\":item.scityname})\r\n        )\r\n\r\n        this.props.Login.masterData.countryList && this.props.Login.masterData.countryList.map(\r\n          (item)=>queryBuilderCountry.push({\"value\":item.ncountrycode ,\"title\":item.scountryname})\r\n        )\r\n        //this.setState({ queryArray: queryArray });\r\n        fields={\r\n          ...fields,\r\n          // \"patientmaster.ngendercode\": {\r\n          //   \"label\": this.props.intl.formatMessage({\r\n          //     id: \"IDS_GENDER\",\r\n          //   }),\r\n          //   \"type\": \"select\",\r\n          //   \"valueSources\": [\"value\"],\r\n          //   \"fieldSettings\": {\r\n          //     \"listValues\": queryBuilderGender\r\n          //   }\r\n          // },\r\n\r\n          \"patientmaster.ncitycode\": {\r\n            \"label\": this.props.intl.formatMessage({\r\n              id: \"IDS_CITY\",\r\n            }),\r\n            \"type\": \"select\",\r\n            \"valueSources\": [\"value\"],\r\n            \"fieldSettings\": {\r\n              \"listValues\": queryBuilderCity\r\n            }\r\n          },\r\n\r\n          \"patientmaster.ncountrycode\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_COUNTRY\",\r\n          }),\r\n          \"type\": \"select\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"listValues\": queryBuilderCountry\r\n          }\r\n        }\r\n      }\r\n        this.setState({ fields: fields });\r\n    }\r\n    if (\r\n      this.props.Login.userInfo.nformcode !==\r\n      previousProps.Login.userInfo.nformcode\r\n    ) {\r\n      const userRoleControlRights = [];\r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[\r\n          this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n            this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      const controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      this.setState({ userRoleControlRights, controlMap });\r\n    }\r\n  }\r\n\r\n  ConfirmDelete = (deleteId) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.deletePatient(\r\n          \"Patient\",\r\n          this.props.Login.masterData.SelectedPatient,\r\n          \"delete\",\r\n          deleteId\r\n        )\r\n    );\r\n  };\r\n\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    let openAdvFilter = this.props.Login.openAdvFilter;\r\n    let slideResult = this.props.Login.slideResult;\r\n    let tree = this.state.tree;\r\n\r\n\r\n    let config = this.state.config;\r\n\r\n    if (this.props.Login.loadEsign) {\r\n      if (this.props.Login.operation === \"delete\") {\r\n        loadEsign = false;\r\n        openModal = false;\r\n        selectedRecord = {};\r\n      } else {\r\n        loadEsign = false;\r\n      }\r\n    } else {\r\n      openAdvFilter = false;\r\n      openModal = false;\r\n      selectedRecord = {};\r\n      slideResult = {};\r\n      config = undefined;\r\n      tree = undefined;\r\n      this.setState({ config: config, tree: tree })\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, loadEsign, selectedRecord, selectedId: null, openAdvFilter, slideResult, config, tree },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onComboChange = (comboData, fieldName) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = comboData;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  onNumericInputOnChange = (value, name) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[name] = value;\r\n    this.setState({ selectedRecord });\r\n  };\r\n  // onFilterInputChange(immutableTree,){\r\n\r\n  //  let QbUtilss=JSON.stringify(QbUtils.sqlFormat(immutableTree, config));\r\n  //   console.log('QbUtils',QbUtilss)\r\n  // return QbUtilss\r\n\r\n  // };\r\n  onChange = (immutableTree, config) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n\r\n    // this.setState({ tree: immutableTree, config: config });\r\n    selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\r\n    // const jsonTree = QbUtils.getTree(immutableTree);\r\n    // <div>SQL where: <pre>{selectedRecord['filterquery']}</pre></div>\r\n\r\n    this.setState({ tree: immutableTree, config: config, selectedRecord: selectedRecord });\r\n\r\n  };\r\n  onInputOnChange = (event) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n\r\n    if (event.target.type === \"checkbox\") {\r\n      selectedRecord[event.target.name] =\r\n        event.target.checked === true\r\n          ? transactionStatus.YES\r\n          : transactionStatus.NO;\r\n    } else {\r\n      if (event.target.name === \"sphoneno\") {\r\n        if (event.target.value !== \"\") {\r\n          event.target.value = validatePhoneNumber(event.target.value);\r\n          selectedRecord[event.target.name] =\r\n            event.target.value !== \"\"\r\n              ? event.target.value\r\n              : selectedRecord[event.target.name];\r\n        } else {\r\n          selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n      } else {\r\n        selectedRecord[event.target.name] = event.target.value;\r\n      }\r\n    }\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    const age = ageCalculate(dateValue);\r\n    selectedRecord[\"sage\"] = age;\r\n\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n\r\n  onSaveGetClick = () => {\r\n    let inputData = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    inputData[\"filterquery\"] = this.state.selectedRecord['filterquery'];\r\n    if(this.state.selectedRecord['filterquery']!==undefined){\r\n    this.searchRef.current.value = \"\";\r\n    let paramFlag = true;\r\n\r\n    const inputParam = {\r\n      classUrl: \"patient\",\r\n      methodUrl: \"ByPatient\",\r\n      inputData: inputData,\r\n      searchRef: this.searchRef,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        this.props.Login.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData }\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.getPatientDetailsByFilterQuery(inputParam, masterData);\r\n    }\r\n   }else{\r\n     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUES\" }));\r\n    }\r\n  };\r\n\r\n onSaveClick = (saveType, formRef) => {\r\n  if (this.state.selectedRecord['semail'] && this.state.selectedRecord['semail'] !== \"\" &&  this.state.selectedRecord['semail'] !== \"null\" ? validateEmail(this.state.selectedRecord[\"semail\"]) : true) {\r\n    let patientData = [];\r\n    patientData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n    let postParam = {\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n      primaryKeyField: \"spatientid\",\r\n    };\r\n\r\n    if (this.props.Login.operation === \"update\") {\r\n      postParam[\"primaryKeyValue\"] =\r\n        this.props.Login.masterData.SelectedPatient.spatientid;\r\n        patientData[\"patient\"] = {\r\n        spatientid: this.props.Login.masterData.SelectedPatient.spatientid,\r\n        sfirstname: this.state.selectedRecord.sfirstname,\r\n        slastname: this.state.selectedRecord.slastname,\r\n        sfathername: this.state.selectedRecord.sfathername,\r\n        ddob: formatInputDate(this.state.selectedRecord[\"ddob\"],false),\r\n        sage: this.state.selectedRecord.sage,\r\n        ngendercode:this.state.selectedRecord.ngendercode.value,\r\n        ncitycode: this.state.selectedRecord.ncitycode.value,\r\n        ncountrycode: this.state.selectedRecord.ncountrycode.value,\r\n        saddress: this.state.selectedRecord.saddress,\r\n        sdistrict: this.state.selectedRecord.sdistrict,\r\n        spostalcode: this.state.selectedRecord.spostalcode,\r\n        sphoneno: this.state.selectedRecord.sphoneno,\r\n        smobileno: this.state.selectedRecord.smobileno,\r\n        semail: this.state.selectedRecord.semail,\r\n        spassportno: this.state.selectedRecord.spassportno,\r\n        srefid: this.state.selectedRecord.srefid,\r\n        sexternalid: this.state.selectedRecord.sexternalid,    \r\n      };\r\n\r\n    } else {\r\n      patientData[\"patient\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n\r\n      this.patientFieldList.map((item) => {\r\n        return (patientData[\"patient\"][item] = this.state.selectedRecord[item] == \"\" || this.state.selectedRecord[item] == undefined ?\r\n        undefined :this.state.selectedRecord[item]);\r\n      });\r\n    }\r\n\r\n    patientData[\"patient\"][\"ngendercode\"] = this.state.selectedRecord[\"ngendercode\"] ? this.state.selectedRecord[\"ngendercode\"].value\r\n      : transactionStatus.NA;\r\n\r\n    patientData[\"patient\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value\r\n      : transactionStatus.NA;\r\n\r\n    patientData[\"patient\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value\r\n      : transactionStatus.NA;\r\n\r\n    // if (patientData[\"patient\"][\"ddob\"] !== undefined\r\n    //     && patientData[\"patient\"][\"ddob\"] !== null && patientData[\"patient\"][\"ddob\"] !== \"\") {\r\n    //     patientData[\"patient\"][\"ddob\"] = formatInputDate(patientData[\"patient\"][\"ddob\"],false);\r\n\r\n    // }\r\n    if (this.state.selectedRecord[\"ddob\"]) {\r\n      patientData[\"patient\"][\"sdob\"] = formatDate(this.state.selectedRecord[\"ddob\"],false);\r\n     }\r\n\r\n    const inputParam = {\r\n      classUrl: \"patient\",\r\n      methodUrl: \"Patient\",\r\n      inputData: patientData,\r\n      operation: this.props.Login.operation,\r\n      saveType,\r\n      formRef,\r\n      postParam,\r\n      searchRef: this.searchRef,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,this.props.Login.ncontrolCode)) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          saveType,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n  }else{\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }));\r\n      }\r\n  };\r\n\r\n  deletePatient = (methodUrl, selectedPatient, operation, ncontrolCode) => {\r\n    const postParam = {\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n      primaryKeyField: \"npatientcode\",\r\n      primaryKeyValue: selectedPatient.npatientcode,\r\n      fetchUrl: \"patient/getPatient\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n    };\r\n\r\n    const inputParam = {\r\n      classUrl: this.props.Login.inputParam.classUrl,\r\n      methodUrl,\r\n      postParam,\r\n      inputData: {\r\n        userinfo: this.props.Login.userInfo,\r\n        patient: selectedPatient,\r\n      },\r\n      operation,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openModal: true,\r\n          screenName: \"IDS_PATIENTMASTER\",\r\n          operation,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n  };\r\n\r\n  validateEsign = () => {\r\n    const inputParam = {\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedRecord[\"esigncomments\"],\r\n        },\r\n        password: this.state.selectedRecord[\"esignpassword\"],\r\n      },\r\n      screenData: this.props.Login.screenData,\r\n    };\r\n    this.props.validateEsignCredential(inputParam, \"openModal\");\r\n  };\r\n\r\n  handleExpandChange = (row, dataState) => {\r\n    const viewParam = {\r\n      userInfo: this.props.Login.userInfo,\r\n      primaryKeyField: \"npreregno\",\r\n      masterData: this.props.Login.masterData,\r\n    };\r\n\r\n    this.props.getTestParameter({\r\n      ...viewParam,\r\n      dataState,\r\n      primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\r\n      viewRow: row[\"dataItem\"],\r\n    });\r\n  };\r\n\r\n  reloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n    const inputParam = {\r\n      inputData: { userinfo: this.props.Login.userInfo },\r\n      classUrl: \"patient\",\r\n      methodUrl: \"Patient\",\r\n      displayName: \"IDS_PATIENTMASTER\",\r\n      userInfo: this.props.Login.userInfo,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n\r\n    this.props.callService(inputParam);\r\n  };\r\n}\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  validateEsignCredential,\r\n  updateStore,\r\n  getPatientDetail,\r\n  getPatientComboService,\r\n  filterColumnData,\r\n  getTestParameter,\r\n  getPatientReport, getPatientDetailsByFilterQuery\r\n})(injectIntl(PatientMaster));\r\n"]},"metadata":{},"sourceType":"module"}