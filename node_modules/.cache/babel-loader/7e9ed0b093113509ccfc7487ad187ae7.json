{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{FormattedMessage,injectIntl}from'react-intl';import{Button,Card,Form,Modal}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSave}from'@fortawesome/free-regular-svg-icons';import{toast}from'react-toastify';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{ModalInner}from'../../components/App.styles';import{transactionStatus}from'../../components/Enumeration';import{faCalculator}from'@fortawesome/free-solid-svg-icons';import{comboChild,convertDateTimetoString,getSameRecordFromTwoArrays,rearrangeDateFormat,showEsign,validateEmail}from'../../components/CommonScript';import RegisterSlideOut from'./RegisterSlideOut';import AddSpecification from'./AddSpecification';import AddTest from'./AddTest';import{connect}from'react-redux';import{getPreviewTemplate,getChildValues,getNewRegSpecification,AddComponents,updateStore,EditComponent,getTest,addsubSample,editSubSample,insertRegistration,updateRegistration,addSubSampleSaveContinue,componentTest}from'../../actions';import AddComponentPopUp from'./AddComponentPopUp';import AddSubSample from'./AddSubSample';import{getRegistration,getRegistrationSubSample,SubSample,TestListManipulation}from'./RegistrationValidation';//import SplitterLayout from 'react-splitter-layout';\nvar mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var PreRegisterSlideOutModal=/*#__PURE__*/function(_React$Component){_inherits(PreRegisterSlideOutModal,_React$Component);var _super=_createSuper(PreRegisterSlideOutModal);function PreRegisterSlideOutModal(props){var _this;_classCallCheck(this,PreRegisterSlideOutModal);_this=_super.call(this,props);_this.formRef=React.createRef();_this.state={failedControls:[],testDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},subSampleDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},selectedRecord:{},selectedSpec:{},selectComponent:{},selectedTest:{},selectedTestData:{},SubSamplecomboComponents:[],SubSamplewithoutCombocomponent:[],// selectedTestData: [],\nparentSubSampleColumnList:[],specBasedComponent:false};_this.handleSaveClick=function(saveType){var failedControls=[];var startLabel=[];var label=\"IDS_ENTER\";var mandatoryFields=[];var selectedRecord=_this.state.selectedRecord;if(_this.props.Login.loadComponent){mandatoryFields=[{\"idsName\":\"IDS_COMPONENT\",\"dataField\":\"ncomponentcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"},{\"idsName\":\"IDS_RECEIVEDDATE\",\"dataField\":\"dreceiveddate\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"},{\"idsName\":\"IDS_TIMEZONE\",\"dataField\":\"ntzdreceivedate\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}];selectedRecord=_this.state.selectComponent;}else if(_this.props.Login.loadSubSample){if(_this.state.specBasedComponent)mandatoryFields=[{\"idsName\":\"IDS_SPECIMEN\",\"dataField\":\"ncomponentcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}];_this.props.Login.masterData.SubSampleTemplate&&_this.props.Login.masterData.SubSampleTemplate.jsondata.map(function(row){row.children.map(function(column){return column.children.map(function(component){return component.hasOwnProperty(\"children\")?component.children.map(function(componentrow){if(componentrow.mandatory===true){if(componentrow.inputtype===\"email\"){mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"});}else{mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"mandatoryLabel\":componentrow.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":componentrow.inputtype===\"combo\"?\"selectbox\":\"textbox\"});}}else{if(componentrow.inputtype===\"email\"){_this.state.selectComponent[componentrow.label]&&_this.state.selectComponent[componentrow.label]!==\"\"&&mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"});}}return null;}):component.mandatory===true?component.inputtype===\"email\"?mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}):mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"mandatoryLabel\":component.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":component.inputtype===\"combo\"?\"selectbox\":\"textbox\"}):_this.state.selectComponent[component.label]?component.inputtype===\"email\"?mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}):\"\":\"\";});});});selectedRecord=_this.state.selectComponent;}else if(_this.props.Login.loadTest){mandatoryFields=[{\"idsName\":\"IDS_TEST\",\"dataField\":\"ntestgrouptestcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}];selectedRecord=_this.props.Login.selectedTestData;}else if(_this.props.Login.loadSpec){mandatoryFields=[{\"idsName\":\"IDS_SPECIFICATION\",\"dataField\":\"nallottedspeccode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}];}else{_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.jsondata.map(function(row){return row.children.map(function(column){return column.children.map(function(component){return component.hasOwnProperty(\"children\")?component.children.map(function(componentrow){if(componentrow.mandatory===true){if(componentrow.inputtype===\"email\"){mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"});}else{mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"mandatoryLabel\":componentrow.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":componentrow.inputtype===\"combo\"?\"selectbox\":\"textbox\"});}}else{if(componentrow.inputtype===\"email\"){selectedRecord[componentrow.label]&&selectedRecord[componentrow.label]!==\"\"&&mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"});}}return null;}):component.mandatory===true?component.inputtype===\"email\"?mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}):mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"mandatoryLabel\":component.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":component.inputtype===\"combo\"?\"selectbox\":\"textbox\"}):selectedRecord[component.label]?component.inputtype===\"email\"?mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}):\"\":\"\";});});});}if(_this.props.esign){mandatoryFields=[{\"idsName\":\"IDS_PASSWORD\",\"dataField\":\"esignpassword\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"esigncomments\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];}mandatoryFields.forEach(function(item){if(selectedRecord[item.dataField]===undefined||selectedRecord[item.dataField]===null){var alertMessage=(item.alertPreFix?item.alertPreFix+\" \":'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?\" \"+item.alertSuffix:'');failedControls.push(alertMessage);startLabel.push(item.mandatoryLabel);//\"IDS_PROVIDE\";\n}else{if(item.validateFunction){var validateData=item.validateFunction;if(validateData(selectedRecord[item.dataField])===false){var _alertMessage=(item.alertPreFix?item.alertPreFix+\" \":'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?\" \"+item.alertSuffix:'');failedControls.push(_alertMessage);startLabel.push(item.mandatoryLabel);}}else{if(typeof selectedRecord[item.dataField]===\"object\"){//to validate FormSelectSearch component\nif(selectedRecord[item.dataField].length===0){var _alertMessage2=(item.alertPreFix?item.alertPreFix+\" \":'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?\" \"+item.alertSuffix:'');failedControls.push(_alertMessage2);startLabel.push(item.mandatoryLabel);//\"IDS_SELECT\";\n}}else if(typeof selectedRecord[item.dataField]===\"string\"){//to handle string field -- added trim function\nif(selectedRecord[item.dataField].trim().length===0){var _alertMessage3=(item.alertPreFix?item.alertPreFix+\" \":'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?\" \"+item.alertSuffix:'');failedControls.push(_alertMessage3);startLabel.push(item.mandatoryLabel);}}else{//number field\nif(selectedRecord[item.dataField].length===0){var _alertMessage4=(item.alertPreFix?item.alertPreFix+\" \":'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?\" \"+item.alertSuffix:'');failedControls.push(_alertMessage4);startLabel.push(item.mandatoryLabel);}}}}// else{\n//     const alertMessage=(item.alertPreFix?item.alertPreFix:'')+this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'')\n//     failedControls.push(alertMessage);\n// }\n});// console.log(\"validationPassed:\", failedControls);\nif(failedControls.length===0){if(saveType===4){_this.props.onExecuteClick(_this.formRef);}else if(saveType===3){if(selectedRecord.agree&&selectedRecord.agree===transactionStatus.NO){toast.info(_this.props.intl.formatMessage({id:\"IDS_CHECKAGREE\"}));}else{_this.props.validateEsign();}}else{if(_this.props.Login.loadSpec){var selectedSpec=_this.state.selectedSpec;selectedSpec[\"nallottedspeccode\"]=_this.state.selectedRecord[\"nallottedspeccode\"];selectedSpec[\"sversion\"]=_this.state.selectedRecord[\"sversion\"];selectedSpec[\"ntemplatemanipulationcode\"]=_this.state.selectedRecord[\"ntemplatemanipulationcode\"];var specBasedComponent=selectedSpec[\"nallottedspeccode\"]&&selectedSpec[\"nallottedspeccode\"].item.ncomponentrequired===3?true:false;_this.subSampleDataGridList=[];if(specBasedComponent){_this.subSampleDataGridList=[{\"idsName\":\"IDS_SPECIMEN\",\"dataField\":\"scomponentname\",width:\"200px\"}];}_this.props.Login.masterData.SubSampleTemplate&&_this.props.Login.masterData.SubSampleTemplate.jsondata.map(function(row){return row.children.map(function(column){return column.children.map(function(component){// let label = ''\nif(component.hasOwnProperty(\"children\")){component.children.map(function(componentrow){if(componentrow.mandatory===true){// label = label + '&' + componentrow.label\n_this.subSampleDataGridList.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,width:\"150px\"});}return _this.subSampleDataGridList;});}else{if(component.mandatory)_this.subSampleDataGridList.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,width:\"150px\"});return _this.subSampleDataGridList;}});});});//  this.setState({ selectedSpec: this.props.Login.selectedSpec,\n//      specBasedComponent });\n// this.setState({\n//     selectedTestData: [], loadSpec: false, SelectedTest: [], Test: [], Component: [], selectedSpec\n// })\nvar updateInfo={typeName:DEFAULT_RETURN,data:{selectedTestData:[],selectComponent:[],selectedComponent:{},loadSpec:false,SelectedTest:[],Test:[],Component:[],subSampleDataGridList:[],selectedSpec:selectedSpec,screenName:_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename,specBasedComponent:specBasedComponent}};_this.props.updateStore(updateInfo);}else if(_this.props.Login.loadComponent){_this.onSaveComponentClick(saveType,_this.formRef);}else if(_this.props.Login.loadTest){_this.onSaveTestClick(saveType,_this.formRef);}else if(_this.props.Login.loadSubSample){_this.onSaveSubSampleClick(saveType,_this.formRef);}else{_this.onSaveClick(saveType,_this.formRef);}}}else{label=startLabel[0]===undefined?label:startLabel[0];toast.info(\"\".concat(_this.props.intl.formatMessage({id:label}),\" \").concat(failedControls[0]));}};_this.TestChange=function(comboData,fieldName){var selectedTestData=_this.state.selectedTestData||{};selectedTestData[fieldName]=comboData;_this.setState({selectedTestData:selectedTestData});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { selectedTestData }\n// }\n// this.props.updateStore(updateInfo);\n};_this.onComboChange=function(comboData,control,customName){var parentList=[];var childComboList=[];var childColumnList={};var comboName=customName||control.label;var selectedRecord=_this.state.selectedRecord||{};var product=false;var productCategory=false;var nproductcatcode=-1;var nproductcode=-1;var materialType=false;var instrument=false;var instrumentCategory=false;// let ninstrumentcatcode = -1\n//let ninstrumentcode = -1\nvar material=false;var materialCategory=false;//  let nmaterialcatcode = -1\n// let nmaterialcode = -1\nvar nsampletypecode=parseInt(_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode);var inputParem={child:control.child,source:control.source,primarykeyField:control.valuemember,value:comboData.value,item:comboData.item,label:comboName,nameofdefaultcomp:control.name};if(comboData){selectedRecord[comboName]=comboData;}else{selectedRecord[comboName]=[];}if(control.name==='Product'){var ProductCategory=_this.props.comboComponents.filter(function(x){return x.name===\"Product Category\";});var ncategorybasedflow=selectedRecord[ProductCategory[0].label]&&selectedRecord[ProductCategory[0].label]['item']['jsondata']['ncategorybasedflow'];nproductcatcode=selectedRecord[ProductCategory[0].label]&&selectedRecord[ProductCategory[0].label].value;if(ncategorybasedflow!==3){product=true;nproductcode=selectedRecord[comboName]&&selectedRecord[comboName].value;}}else if(control.name==='Instrument'){var InstrumentCategory=_this.props.comboComponents.filter(function(x){return x.name===\"Instrument Category\";});var _ncategorybasedflow=selectedRecord[InstrumentCategory[0].label]&&selectedRecord[InstrumentCategory[0].label]['item']['jsondata']['ncategorybasedflow'];nproductcatcode=selectedRecord[InstrumentCategory[0].label]&&selectedRecord[InstrumentCategory[0].label].value;if(_ncategorybasedflow!==3){instrument=true;nproductcode=selectedRecord[comboName]&&selectedRecord[comboName].value;}}else if(control.name==='Material'){var MaterialCategory=_this.props.comboComponents.filter(function(x){return x.name===\"Material Category\";});var _ncategorybasedflow2=selectedRecord[MaterialCategory[0].label]&&selectedRecord[MaterialCategory[0].label]['item']['jsondata']['ncategorybasedflow'];nproductcatcode=selectedRecord[MaterialCategory[0].label]&&selectedRecord[MaterialCategory[0].label].value;if(_ncategorybasedflow2!==3){material=true;nproductcode=selectedRecord[comboName]&&selectedRecord[comboName].value;}}else if(control.name==='Product Category'){var Product=_this.props.comboComponents.filter(function(x){return x.name===\"Product\";});nproductcatcode=comboData.value;var _ncategorybasedflow3=comboData&&comboData['item']['jsondata']['ncategorybasedflow'];if(_ncategorybasedflow3===3){productCategory=true;}else{inputParem[\"ProductName\"]=Product[0].label;// nproductcode = selectedRecord[comboName] &&\n// selectedRecord[comboName].value;\nproduct=true;}}else if(control.name==='Instrument Category'){var Instrument=_this.props.comboComponents.filter(function(x){return x.name===\"Instrument\";});nproductcatcode=comboData.value;var _ncategorybasedflow4=comboData&&comboData['item']['jsondata']['ncategorybasedflow'];if(_ncategorybasedflow4===3){instrumentCategory=true;}else{inputParem[\"InstrumentName\"]=Instrument[0].label;// nproductcode = selectedRecord[comboName] &&\n// selectedRecord[comboName].value;\ninstrument=true;}}else if(control.name==='Material Category'){var Material=_this.props.comboComponents.filter(function(x){return x.name===\"Material\";});nproductcatcode=comboData.value;var _ncategorybasedflow5=comboData&&comboData['item']['jsondata']['ncategorybasedflow'];if(_ncategorybasedflow5===3){materialCategory=true;}else{inputParem[\"MaterialName\"]=Material[0].label;// nproductcode = selectedRecord[comboName] &&\n// selectedRecord[comboName].value;\nmaterial=true;}}else if(control.name==='Material Type'){var _MaterialCategory=_this.props.comboComponents.filter(function(x){return x.name===\"Material Category\";});//nproductcatcode = -1;\n// const ncategorybasedflow = comboData &&\n//     comboData['item']['jsondata']['ncategorybasedflow'];\n// if (ncategorybasedflow === 3) {\n//     productCategory = true\n// } else {\ninputParem[\"MaterialCategoryName\"]=_MaterialCategory[0].label;// nproductcode = selectedRecord[comboName] &&\n// selectedRecord[comboName].value;\nmaterialType=true;//  }\n}if(control.child&&control.child.length>0){childComboList=getSameRecordFromTwoArrays(_this.props.comboComponents,control.child,\"label\");childColumnList={};childComboList.map(function(columnList){var val=comboChild(_this.props.comboComponents,columnList,childColumnList,false);childColumnList=val.childColumnList;return null;});parentList=getSameRecordFromTwoArrays(_this.props.withoutCombocomponent,control.child,\"label\");var mapOfFilter={nproductcode:nproductcode,nproductcatcode:nproductcatcode,nsampletypecode:nsampletypecode};_this.props.getChildValues(inputParem,_this.props.Login.userInfo,selectedRecord,_this.props.Login.comboData,childComboList,childColumnList,_this.props.withoutCombocomponent,[].concat(_toConsumableArray(childComboList),_toConsumableArray(parentList)),productCategory,product,mapOfFilter,instrumentCategory,instrument,materialCategory,material,materialType);}else{// if (productCategory) {\n//     const ncategorybasedflow = selectedRecord[comboName] &&\n//         selectedRecord[comboName].value;\n// } else if\nif(product||productCategory||instrument||material||materialCategory||instrumentCategory||materialType){// const nproductcode = selectedRecord[comboName] &&\n//     selectedRecord[comboName].value;\nvar _mapOfFilter={nproductcode:nproductcode,nproductcatcode:nproductcatcode,nsampletypecode:nsampletypecode};_this.props.getChildValues(inputParem,_this.props.Login.userInfo,selectedRecord,_this.props.Login.comboData,childComboList,childColumnList,_this.props.withoutCombocomponent,[].concat(_toConsumableArray(childComboList),_toConsumableArray(parentList)),productCategory,product,_mapOfFilter,instrumentCategory,instrument,materialCategory,material);}else{var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);}}};_this.onInputOnChange=function(event,radiotext){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name==='timeonly'){selectedRecord['dateonly']=false;}if(event.target.name==='dateonly'){selectedRecord['timeonly']=false;}var value=selectedRecord[event.target.name];if(value!==''&&value!==undefined){if(value.includes(radiotext)){var index=value.indexOf(radiotext);if(index!==-1){if(index===0){var indexcomma=value.indexOf(\",\");if(indexcomma!==-1){selectedRecord[event.target.name]=value.slice(indexcomma+1);}else{selectedRecord[event.target.name]=\"\";}}else{if(value.slice(index).indexOf(\",\")!==-1){selectedRecord[event.target.name]=value.slice(0,index)+value.slice(index+value.slice(index).indexOf(\",\")+1);}else{selectedRecord[event.target.name]=value.slice(0,index-1);}}}}else{selectedRecord[event.target.name]=value+','+radiotext;}}else{selectedRecord[event.target.name]=radiotext;}}else if(event.target.type==='radio'){selectedRecord[event.target.name]=radiotext;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onInputOnSubSampleChange=function(event,radiotext){var selectComponent=_this.state.selectComponent||{};if(event.target.type==='checkbox'){if(event.target.name==='timeonly'){selectComponent['dateonly']=false;}if(event.target.name==='dateonly'){selectComponent['timeonly']=false;}var value=selectComponent[event.target.name];if(value!==''&&value!==undefined){if(value.includes(radiotext)){var index=value.indexOf(radiotext);if(index!==-1){if(index===0){var indexcomma=value.indexOf(\",\");if(indexcomma!==-1){selectComponent[event.target.name]=value.slice(indexcomma+1);}else{selectComponent[event.target.name]=\"\";}}else{//  const  indexcomma= value.indexOf(\",\")\nif(value.slice(index).indexOf(\",\")!==-1){selectComponent[event.target.name]=value.slice(0,index)+value.slice(index+value.slice(index).indexOf(\",\")+1);}else{selectComponent[event.target.name]=value.slice(0,index-1);}}}}else{selectComponent[event.target.name]=value+','+radiotext;}}else{selectComponent[event.target.name]=radiotext;}}else{selectComponent[event.target.name]=event.target.value;}_this.setState({selectComponent:selectComponent});};_this.onComboSubSampleChange=function(comboData,control,customName){var parentList=[];var childComboList=[];var childColumnList={};var comboName=customName||control.label;var selectComponent=_this.state.selectComponent||{};var inputParem={child:control.child,source:control.source,primarykeyField:control.valuemember,value:comboData.value,item:comboData.item,label:comboName,nameofdefaultcomp:control.name};if(comboData){selectComponent[comboName]=comboData;}else{selectComponent[comboName]=[];}if(control.child&&control.child.length>0){childComboList=getSameRecordFromTwoArrays(_this.state.SubSamplecomboComponents,control.child,\"label\");childColumnList={};childColumnList=childComboList.map(function(columnList){var val=comboChild(_this.state.SubSamplecomboComponents,columnList,childColumnList,false);return val.childColumnList;});parentList=getSameRecordFromTwoArrays(_this.state.SubSamplewithoutCombocomponent,control.child,\"label\");_this.props.getChildValues(inputParem,_this.props.Login.userInfo,selectComponent,_this.props.Login.SubSamplecomboData,childComboList,childColumnList,_this.state.SubSamplewithoutCombocomponent,[].concat(_toConsumableArray(childComboList),_toConsumableArray(parentList)));}else{var updateInfo={typeName:DEFAULT_RETURN,data:{selectComponent:selectComponent}};_this.props.updateStore(updateInfo);}};_this.onNumericInputChange=function(value,name){var selectedRecord=_this.state.selectedRecord;selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onNumericInputSubSampleChange=function(value,name){var selectComponent=_this.state.selectComponent;selectComponent[name]=value;_this.setState({selectComponent:selectComponent});};_this.handleDateChangeComp=function(dateValue,dateName,screenName){var selectedRecord=_this.state.selectedRecord;if(screenName==='component'){var selectComponent=_this.state.selectComponent;selectComponent[dateName]=dateValue;var updateInfo={typeName:DEFAULT_RETURN,data:{selectComponent:selectComponent}};_this.props.updateStore(updateInfo);}else{selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});}};_this.handleDateChange=function(dateValue,dateName){var selectedRecord=_this.state.selectedRecord;selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.handleDateSubSampleChange=function(dateValue,dateName){var selectComponent=_this.state.selectComponent;selectComponent[dateName]=dateValue;_this.setState({selectComponent:selectComponent});};_this.openFilter=function(){var showFilter=!_this.state.showFilter;_this.setState({showFilter:showFilter});};_this.closeFilter=function(){_this.setState({showFilter:false});};_this.AddSpec=function(e){// this.setState({\n//     loadSpec: true\n// })\nvar updateInfo={typeName:DEFAULT_RETURN,data:{loadSpec:true,screenName:\"Specification\"}};_this.props.updateStore(updateInfo);};_this.addTestslide=function(selectedComponent,nneedsubsample,specBasedComponent){if(nneedsubsample){if(selectedComponent&&Object.keys(selectedComponent).length>0){delete selectedComponent[\"selected\"];_this.props.getTest(selectedComponent,_this.props.Login,nneedsubsample,specBasedComponent);}else{toast.warn(_this.props.intl.formatMessage({id:nneedsubsample?\"IDS_SELECTSUBSAMPLETOADDTEST\":\"IDS_SELECTCOMPONENTTOADDTEST\"}));}}else{var selectedComponent1={nallottedspeccode:_this.state.selectedSpec[\"nallottedspeccode\"]?_this.state.selectedSpec[\"nallottedspeccode\"].value:-1,slno:1};_this.props.getTest(selectedComponent1,_this.props.Login,nneedsubsample,specBasedComponent);}};_this.closeSpec=function(e){// this.setState({\n//     loadSpec: false,\n//      selectedRecord: { ...this.state.selectedRecord, ...this.state.selectedSpec },\n//      screenName:\"Specification\"\n// })\nvar updateInfo={typeName:DEFAULT_RETURN,data:{loadSpec:false,selectedRecord:_objectSpread(_objectSpread({},_this.state.selectedRecord),_this.state.selectedSpec),screenName:_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename}};_this.props.updateStore(updateInfo);};_this.closeComponent=function(e){var updateInfo={typeName:DEFAULT_RETURN,data:{loadComponent:false,selectComponent:{}}};_this.props.updateStore(updateInfo);};_this.closeTest=function(e){var updateInfo={typeName:DEFAULT_RETURN,data:{loadTest:false,selectedTestData:{},screenName:_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename}};_this.props.updateStore(updateInfo);};_this.closeSubSample=function(e){var updateInfo={typeName:DEFAULT_RETURN,data:{loadSubSample:false,selectedSubSample:{},showSaveContinue:false,selectComponent:{},selectedTestData:{},screenName:_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename}};_this.props.updateStore(updateInfo);};_this.onspecChange=function(event,fieldName){if(event!==null){var selectedRecord=_this.state.selectedRecord;// const oldpromarycode = this.state.selectedRecord[\"nallottedspeccode\"] !== undefined ?\n//     this.state.selectedRecord[\"nallottedspeccode\"].value : undefined;\nselectedRecord[\"sversion\"]=parseInt(event.item.sversion);selectedRecord[\"nallottedspeccode\"]=event;//  if(this.props.Login.Component.length=== 0 ){\n_this.setState({selectedRecord:selectedRecord});// }else{\n//     if(event.value!== oldpromarycode ){\n//     this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to clear the Existing Components ?\",\n//     \"ok\", \"cancel\", () => this.setState({ selectedRecord }));\n//     }\n// }\n}};_this.onTreeClick=function(event){var inputParam={methodUrl:\"TestGroupSpecification\",screenName:\"IDS_REGISTRATION\",operation:\"get\",activeKey:event.key,focusKey:event.key,keyName:\"treetemplatemanipulation\",userinfo:_this.props.Login.userInfo,selectedNode:event.item,selectedRecord:_this.state.selectedRecord,primaryKey:event.primaryKey};if(event.primaryKey!==_this.state.selectedRecord[\"ntemplatemanipulationcode\"]){_this.props.getNewRegSpecification(inputParam,_this.props.Login.masterData);}// if (this.props.Login.Component === undefined || this.props.Login.Component.length === 0) {\n//     //   this.props.getRegSpecification(inputParam, this.props.Login.masterData, getComponents);\n// } else {\n//     // if(event.key!== this.props.Login.ActiveKey ){\n//     // this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to clear the Existing Components ?\",\n//     // \"ok\", \"cancel\", () =>  this.props.getRegSpecification(inputParam, this.props.Login.masterData, getComponents));\n//     // }\n// }\n};_this.handleComponentRowClick=function(event){var selectedComponent=event.dataItem;var SelectedTest=_this.props.Login.Test&&_this.props.Login.Test[selectedComponent.slno]?_this.props.Login.Test[selectedComponent.slno]:[];var updateInfo={typeName:DEFAULT_RETURN,data:{SelectedTest:SelectedTest,selectedComponent:selectedComponent,testDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5}}};_this.props.updateStore(updateInfo);};_this.AddComponent=function(){var Map={};if(_this.state.selectedSpec.nallottedspeccode!==undefined&&_this.state.selectedSpec.nallottedspeccode!==\"\"){Map[\"ntemplatemanipulationcode\"]=_this.state.selectedSpec.ntemplatemanipulationcode;Map[\"nallottedspeccode\"]=_this.state.selectedSpec.nallottedspeccode.value;Map[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"testrequired\"]=false;Map[\"userinfo\"]=_this.props.Login.userInfo;_this.props.AddComponents(Map);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};_this.onComponentChange=function(comboData,fieldName,nneedsubsample){if(comboData!==null){//  if (!nneedsubsample) {\nvar selectComponent=_this.state.selectComponent||{};if(fieldName==='ntzdreceivedate'){selectComponent[\"ntzdreceivedate\"]=comboData;_this.setState({selectComponent:selectComponent});}else{// const oldspecsampletypecode = selectComponent.nspecsampletypecode\n// if (oldspecsampletypecode !== comboData.item.nspecsampletypecode) {\n//     //selectComponent[\"nneedservice\"] = true;\n// }\nselectComponent[fieldName]=comboData;selectComponent[\"Sample Name\"]=comboData.label;selectComponent[\"nspecsampletypecode\"]=comboData.item.nspecsampletypecode;_this.props.componentTest(selectComponent,false,_this.state.specBasedComponent,_this.props.Login.Component);}// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         selectComponent\n//     }\n// }\n// this.props.updateStore(updateInfo);\n// } else {\n//     const selectComponent = this.state.selectComponent || {};\n//     selectComponent[fieldName] = comboData;\n//     // selectComponent[\"nspecsampletypecode\"] = comboData.item.nspecsampletypecode ?  comboData.item.nspecsampletypecode : -1;\n//     this.setState({ selectComponent })\n// }\n}};_this.onInputComponentOnChange=function(event){var selectComponent=_this.state.selectComponent||{};if(event.target.type==='checkbox'){selectComponent[event.target.name]=event.target.checked===true?3:4;}else{selectComponent[event.target.name]=event.target.value;}_this.setState({selectComponent:selectComponent});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         selectComponent\n//     }\n// }\n// this.props.updateStore(updateInfo);\n};_this.onSaveComponentClick=function(saveType,formRef){var childoperation=_this.props.Login.childoperation;if(childoperation===\"create\"){if(saveType===1){_this.ComponentObjectAfterSave();}else if(saveType===2){_this.ComponentObject();}}else{var Component=_this.props.Login.Component;var Test=_this.props.Login.Test;var testrequired=_this.state.selectedRecord.ntransactionstatus;var selectedComponent=_objectSpread({},_this.state.selectComponent);var objcomponent={};objcomponent[\"scomponentname\"]=selectedComponent[\"ncomponentcode\"].label;objcomponent[\"ncomponentcode\"]=selectedComponent[\"ncomponentcode\"]?selectedComponent[\"ncomponentcode\"].value:-1;var dreceiveddate=selectedComponent[\"dreceiveddate\"];objcomponent[\"dreceiveddate\"]=dreceiveddate;objcomponent[\"sreceiveddate\"]=convertDateTimetoString(dreceiveddate,_this.props.Login.userInfo);objcomponent[\"ntzdreceivedate\"]=selectedComponent[\"ntzdreceivedate\"]?selectedComponent[\"ntzdreceivedate\"].value:-1;objcomponent[\"stzdreceivedate\"]=selectedComponent[\"ntzdreceivedate\"]?selectedComponent[\"ntzdreceivedate\"].label:\"\";objcomponent[\"jsondata\"]=\"\";selectedComponent=_objectSpread(_objectSpread({},selectedComponent),objcomponent);var index=Component.findIndex(function(x){return x.slno===selectedComponent.slno;});if(index>-1){Component.splice(index,1,selectedComponent);}if(testrequired===3){_this.props.getTestByComponentChange(Component,selectedComponent,_this.props.Login);}else if(selectedComponent[\"nneedservice\"]===true){_this.props.getTestByComponentChange(Component,selectedComponent,_this.props.Login,true);}else{delete selectedComponent.nneedservice;var updateInfo={typeName:DEFAULT_RETURN,data:{Component:Component,selectedComponent:selectedComponent,loadComponent:false,openChildModal:false,selectComponent:undefined,parentPopUpSize:\"xl\",Test:Test,SelectedTest:Test[selectedComponent.slno]}};_this.props.updateStore(updateInfo);}}};_this.onSaveSubSampleClick=function(saveType,formRef){var childoperation=_this.props.Login.childoperation;if(childoperation===\"create\"){if(saveType===1){_this.SubSampleObjectAfterSave();}else if(saveType===2){_this.SubSampleObject();}}else{var Component=_this.props.Login.Component;var Test=_this.props.Login.Test;var testrequired=_this.state.selectedRecord.ntransactionstatus;// const defaulttimezone = this.props.Login.defaulttimezone;\n// const userInfo = this.props.Login.userInfo;\nvar selectedComponent=_objectSpread({},_this.state.selectComponent);var objcomponent={};objcomponent[\"slno\"]=selectedComponent[\"slno\"]?selectedComponent[\"slno\"]:\"\";// objcomponent[\"nallottedspeccode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"].value : -1;\n// if(this.props.specBasedComponent){\n//     objcomponent[\"scomponentname\"] = selectedComponent[\"ncomponentcode\"].label;\n//     objcomponent[\"ncomponentcode\"] = selectedComponent[\"ncomponentcode\"] ? selectedComponent[\"ncomponentcode\"].value : -1;\n//     objcomponent[\"nspecsampletypecode\"] = selectedComponent[\"nspecsampletypecode\"] ?selectedComponent[\"nspecsampletypecode\"]  : -1;\n// }else{\n//     objcomponent[\"nspecsampletypecode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\n// }\nvar subSampleDetail=getRegistrationSubSample(selectedComponent,_this.props.Login.masterData.SubSampleTemplate.jsondata,_this.props.Login.userInfo,_this.props.Login.defaulttimezone,true,_this.state.specBasedComponent,_this.state.selectedSpec);objcomponent=_objectSpread(_objectSpread({},objcomponent),subSampleDetail.sampleRegistration);var subSampleDataGridList=_this.props.Login.subSampleDataGridList||[];var index1=subSampleDataGridList.findIndex(function(x){return x.slno===objcomponent.slno;});if(index1!==-1)subSampleDataGridList[index1]=_objectSpread(_objectSpread({},objcomponent['jsonuidata']),objcomponent);// objcomponent[\"jsondata\"] = {}\n// objcomponent[\"jsonuidata\"] = {}\n// this.props.Login.masterData.SubSampleTemplate &&\n//     this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\n//         row.children.map(column => {\n//             column.children.map(component => {\n//                 if (component.hasOwnProperty(\"children\")) {\n//                    // let componentrowlabel = ''\n//                  //   let componentrowvalue = ''\n//                     component.children.map(componentrow => {\n//                         if (componentrow.inputtype === \"combo\") {\n//                             objcomponent[\"jsondata\"][componentrow.label] = selectedComponent[componentrow.label] ?\n//                                 { value: selectedComponent[componentrow.label].value, label: selectedComponent[componentrow.label].label } : -1\n//                            // if (componentrow.mandatory || selectedComponent[componentrow.label]) {\n//                               //  componentrowlabel = componentrowlabel + '&' + componentrow.label\n//                                // componentrowvalue = componentrowvalue + ' ' + selectedComponent[componentrow.label].label\n//                           //  }\n//                             objcomponent[\"jsonuidata\"][componentrow.label]=selectedComponent[componentrow.label]?selectedComponent[componentrow.label].label:\"\"\n//                         }\n//                         else if (componentrow.inputtype === \"date\") {\n//                             if (componentrow.mandatory) {\n//                                 selectedComponent[\"jsondata\"][componentrow.label] = convertDateTimetoString(selectedComponent[componentrow.label] ?\n//                                     selectedComponent[componentrow.label] : new Date(), userInfo);\n//                                     selectedComponent[\"jsonuidata\"][componentrow.label]=selectedComponent[\"jsondata\"][componentrow.label]\n//                             } else {\n//                                 objcomponent[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\n//                                     convertDateTimetoString(selectedComponent[componentrow.label] ?\n//                                         selectedComponent[componentrow.label] : new Date(), userInfo) :\n//                                     selectedComponent[componentrow.label] ? convertDateTimetoString(selectedComponent[componentrow.label] ?\n//                                         selectedComponent[componentrow.label] : new Date(), userInfo) : \"\";\n//                                         selectedComponent[\"jsonuidata\"][componentrow.label]=selectedComponent[\"jsondata\"][componentrow.label]\n//                             }\n//                             if (componentrow.timezone) {\n//                                 selectedComponent[\"jsondata\"][`tz${componentrow.label}`] = selectedComponent[`tz${componentrow.label}`] ?\n//                                     { value: selectedComponent[`tz${componentrow.label}`].value, label: selectedComponent[`tz${componentrow.label}`].label } :\n//                                     defaulttimezone ? defaulttimezone : -1\n//                                     selectedComponent[\"jsonuidata\"][`tz${componentrow.label}`]=selectedComponent[\"jsondata\"][`tz${componentrow.label}`]\n//                             }\n//                             // dateList.push(componentrow.label)\n//                         }\n//                         else {\n//                             objcomponent[\"jsondata\"][componentrow.label] = selectedComponent[componentrow.label] ?\n//                                 selectedComponent[componentrow.label] : \"\"\n//                                 objcomponent[\"jsonuidata\"][componentrow.label]=objcomponent[\"jsondata\"][componentrow.label]\n//                             // if (selectedComponent[componentrow.label]) {\n//                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n//                             //     componentrowvalue = componentrowvalue + ' ' + selectedComponent[componentrow.label]\n//                             // }\n//                         }\n//                     })\n//                    // objcomponent[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\n//                 }\n//                 else {\n//                     if (component.inputtype === \"combo\") {\n//                         objcomponent[\"jsondata\"][component.label] = selectedComponent[component.label] ?\n//                             { value: selectedComponent[component.label].value, label: selectedComponent[component.label].label } : -1\n//                             objcomponent[\"jsonuidata\"][component.label] =selectedComponent[component.label] ? selectedComponent[component.label].label :\"\"\n//                     }\n//                     else if (component.inputtype === \"date\") {\n//                         if (component.mandatory) {\n//                             objcomponent[\"jsondata\"][component.label] = convertDateTimetoString(selectedComponent[component.label] ?\n//                                 selectedComponent[component.label] : new Date(), userInfo);\n//                                 objcomponent[\"jsonuidata\"][component.label] = objcomponent[\"jsondata\"][component.label]\n//                         } else {\n//                             objcomponent[\"jsondata\"][component.label] = component.loadcurrentdate ?\n//                                 convertDateTimetoString(selectedComponent[component.label] ?\n//                                     selectedComponent[component.label] : new Date(), userInfo) :\n//                                 selectedComponent[component.label] ? convertDateTimetoString(selectedComponent[component.label] ?\n//                                     selectedComponent[component.label] : new Date(), userInfo) : \"\";\n//                                     objcomponent[\"jsonuidata\"][component.label] = objcomponent[\"jsondata\"][component.label]\n//                         }\n//                         if (component.timezone) {\n//                             objcomponent[\"jsondata\"][`tz${component.label}`] = selectedComponent[`tz${component.label}`] ?\n//                                 { value: selectedComponent[`tz${component.label}`].value, label: selectedComponent[`tz${component.label}`].label } :\n//                                 defaulttimezone ? defaulttimezone : -1\n//                                 objcomponent[\"jsonuidata\"][`tz${component.label}`]  = objcomponent[\"jsondata\"][`tz${component.label}`] \n//                         }\n//                         //dateList.push(component.label)\n//                     }\n//                     else {\n//                         objcomponent[\"jsondata\"][component.label] = selectedComponent[component.label] ?\n//                             selectedComponent[component.label] : \"\"\n//                             objcomponent[\"jsonuidata\"][component.label] = objcomponent[\"jsondata\"][component.label]\n//                     }\n//                 }\n//             }\n//             )\n//         })\n//     })\nselectedComponent=_objectSpread({},objcomponent);var index=Component.findIndex(function(x){return x.slno===selectedComponent.slno;});if(index>-1){Component.splice(index,1,selectedComponent);}if(testrequired===3){_this.props.getTestByComponentChange(Component,selectedComponent,_this.props.Login);}else if(selectedComponent[\"nneedservice\"]===true){_this.props.getTestByComponentChange(Component,selectedComponent,_this.props.Login,true);}else{delete selectedComponent.nneedservice;var updateInfo={typeName:DEFAULT_RETURN,data:{Component:Component,selectedComponent:selectedComponent,loadSubSample:false,openChildModal:false,selectComponent:{},parentPopUpSize:\"xl\",Test:Test,SelectedTest:Test[selectedComponent.slno],screenName:_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename,subSampleDataGridList:subSampleDataGridList}};_this.props.updateStore(updateInfo);}}};_this.addSubSampleSaveContinue=function(updateInfo,selectedTestData){var Map={};Map[\"ntemplatemanipulationcode\"]=_this.state.selectedSpec.ntemplatemanipulationcode;Map[\"nallottedspeccode\"]=_this.state.selectedSpec.nallottedspeccode.value;Map[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"testrequired\"]=false;Map[\"userinfo\"]=_this.props.Login.userInfo;Map[\"nspecsampletypecode\"]=updateInfo.selectedComponent[\"nspecsampletypecode\"]?updateInfo.selectedComponent[\"nspecsampletypecode\"]:-1;_this.props.addSubSampleSaveContinue(updateInfo,Map,_this.state.specBasedComponent,_this.props.Login.Components,selectedTestData,_this.props.Login.lstComponent);};_this.editComponent=function(editselectedcomponent){var inputData={};var objComponent=_objectSpread({},editselectedcomponent);inputData[\"ntemplatemanipulationcode\"]=_this.state.selectedSpec.ntemplatemanipulationcode;inputData[\"nallottedspeccode\"]=_this.state.selectedSpec.nallottedspeccode.value;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_this.props.EditComponent(inputData,objComponent,_this.props.Login.userInfo,_this.props.Login);};_this.editSubSample=function(editselectedcomponent,specBasedComponent){var inputData={};var objComponent=_objectSpread({},editselectedcomponent);var defaulttimezone=_this.props.Login.defaulttimezone;var userInfo=_this.props.Login.userInfo;inputData[\"ntemplatemanipulationcode\"]=_this.state.selectedSpec.ntemplatemanipulationcode;inputData[\"nallottedspeccode\"]=_this.state.selectedSpec.nallottedspeccode.value;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;var selectComponent=_this.state.selectComponent;selectComponent['nspecsampletypecode']=objComponent['nspecsampletypecode']?objComponent['nspecsampletypecode']:-1;if(specBasedComponent){selectComponent['ncomponentcode']={value:objComponent['ncomponentcode']?objComponent['ncomponentcode']:-1,label:objComponent['scomponentname']?objComponent['scomponentname']:\"\"};}selectComponent['slno']=objComponent['slno'];_this.props.Login.masterData.SubSampleTemplate&&_this.props.Login.masterData.SubSampleTemplate.jsondata.map(function(row){return row.children.map(function(column){return column.children.map(function(component){if(component.hasOwnProperty(\"children\")){return component.children.map(function(componentrow){if(componentrow.inputtype===\"combo\"){selectComponent[componentrow.label]=objComponent[\"jsondata\"][componentrow.label]?objComponent[\"jsondata\"][componentrow.label]:\"\";}else if(componentrow.inputtype===\"date\"){selectComponent[componentrow.label]=objComponent[\"jsondata\"][componentrow.label]?rearrangeDateFormat(userInfo,objComponent[\"jsondata\"][componentrow.label]):new Date();if(componentrow.timezone){selectComponent[\"tz\".concat(componentrow.label)]=objComponent[\"jsondata\"][\"tz\".concat(componentrow.label)]?objComponent[\"jsondata\"][\"tz\".concat(componentrow.label)]:defaulttimezone?defaulttimezone:-1;}}else{selectComponent[componentrow.label]=objComponent[\"jsondata\"][componentrow.label]?objComponent[\"jsondata\"][componentrow.label]:\"\";}return null;});}else{if(component.inputtype===\"combo\"){selectComponent[component.label]=objComponent[\"jsondata\"][component.label]?objComponent[\"jsondata\"][component.label]:-1;}else if(component.inputtype===\"date\"){selectComponent[component.label]=objComponent[\"jsondata\"][component.label]?rearrangeDateFormat(userInfo,objComponent[\"jsondata\"][component.label]):new Date();if(component.timezone){selectComponent[\"tz\".concat(component.label)]=objComponent[\"jsondata\"][\"tz\".concat(component.label)]?objComponent[\"jsondata\"][\"tz\".concat(component.label)]:defaulttimezone?defaulttimezone:-1;}}else{selectComponent[component.label]=objComponent[\"jsondata\"][component.label]?objComponent[\"jsondata\"][component.label]:\"\";}return selectComponent;}});});});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         loadSubSample: true, childoperation: \"update\",\n//         ChildscreenName: \"SubSample\",\n//         screenName: \"SubSample\",\n//         openChildModal: false, selectComponent,\n//         parentPopUpSize: \"lg\", loading: false\n//     }\n// }\n// this.props.updateStore(updateInfo)\n_this.props.editSubSample(inputData,selectComponent,_this.props.Login.userInfo,specBasedComponent);};_this.deleteComponent=function(event){var dataItem=event;var Component=_this.props.Login.Component;var subSampleDataGridList=_this.props.Login.subSampleDataGridList;var Test=_this.props.Login.Test;var SelectedTest=_this.props.Login.SelectedTest;var index=Component.findIndex(function(x){return x.slno===dataItem.slno;});if(index>-1){Component.splice(index,1);subSampleDataGridList.splice(index,1);}Test&&Test[dataItem.slno]&&delete Test[dataItem.slno];SelectedTest=Test&&Object.keys(Test).length>0&&Test[Component[0].slno];var updateInfo={typeName:DEFAULT_RETURN,data:{Component:Component,selectedComponent:Component[0],Test:Test,SelectedTest:SelectedTest}};_this.props.updateStore(updateInfo);};_this.deleteTest=function(event){var dataItem=event;var SelectedTest=_this.props.Login.SelectedTest;var selectedComponent=_this.props.Login.selectedComponent;var Test=_this.props.Login.Test;var index=SelectedTest.findIndex(function(x){return x.ntestgrouptestcode===dataItem.ntestgrouptestcode;});if(index>-1){SelectedTest.splice(index,1);}Test[selectedComponent.slno]=SelectedTest;var updateInfo={typeName:DEFAULT_RETURN,data:{Test:Test,SelectedTest:SelectedTest}};_this.props.updateStore(updateInfo);};_this.onSaveTestClick=function(saveType,formRef){var selectedTestData=_this.props.Login.selectedTestData[\"ntestgrouptestcode\"];var selectedTestArray=[];selectedTestData.map(function(item){return selectedTestArray.push(item.item);});var updateInfo={};var selectedComponent=_this.props.Login.selectedComponent;var Test=_this.props.Login.Test||[];if(_this.props.Login.masterData.nneedsubsample){var ArrayTest=Test[selectedComponent.slno]?Test[selectedComponent.slno]:[];//  ArrayTest.push(selectedTestArray);\nTest[selectedComponent.slno]=[].concat(_toConsumableArray(ArrayTest),selectedTestArray);updateInfo={typeName:DEFAULT_RETURN,data:{SelectedTest:Test[selectedComponent.slno],Test:Test,selectedTestData:{},loadTest:false,parentPopUpSize:\"xl\"}};}else{selectedComponent={subsamplename:\"NA\",slno:1};var Component=[selectedComponent];var _ArrayTest=Test[selectedComponent.slno]?Test[selectedComponent.slno]:[];//  ArrayTest.push(selectedTestArray);\nTest[selectedComponent.slno]=[].concat(_toConsumableArray(_ArrayTest),selectedTestArray);updateInfo={typeName:DEFAULT_RETURN,data:{selectedComponent:selectedComponent,Component:Component,SelectedTest:Test[selectedComponent.slno],Test:Test,selectedTestData:{},loadTest:false,parentPopUpSize:\"xl\",screenName:_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename}};}_this.props.updateStore(updateInfo);};_this.componentDataStateChange=function(event){_this.setState({componentDataState:event.dataState});};_this.testDataStateChange=function(event){_this.setState({testDataState:event.dataState});};_this.subSampleDataStateChange=function(event){_this.setState({subSampleDataState:event.dataState});};_this.addsubSample=function(specBasedComponent){var Map={};if(_this.state.selectedSpec.nallottedspeccode!==undefined&&_this.state.selectedSpec.nallottedspeccode!==\"\"){Map[\"ntemplatemanipulationcode\"]=_this.state.selectedSpec.ntemplatemanipulationcode;Map[\"nallottedspeccode\"]=_this.state.selectedSpec.nallottedspeccode.value;Map[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"testrequired\"]=false;Map[\"userinfo\"]=_this.props.Login.userInfo;var data=_this.state.SubSamplecomboComponents||[];var SubSamplewithoutCombocomponent=_this.state.SubSamplewithoutCombocomponent||[];var Layout=_this.props.Login.masterData.SubSampleTemplate&&_this.props.Login.masterData.SubSampleTemplate.jsondata;if(SubSamplewithoutCombocomponent.length===0||data.length===0){if(Layout!==undefined){Layout.map(function(row){return row.children.map(function(column){return column.children.map(function(component){return component.hasOwnProperty(\"children\")?component.children.map(function(componentrow){if(componentrow.inputtype===\"combo\"){data.push(componentrow);}else{SubSamplewithoutCombocomponent.push(componentrow);}return null;}):component.inputtype===\"combo\"?data.push(component):SubSamplewithoutCombocomponent.push(component);});});});var SubSamplecomboComponents=data;var childColumnList={};data.map(function(columnList){var val=comboChild(data,columnList,childColumnList,true);data=val.data;childColumnList=val.childColumnList;return null;});_this.props.addsubSample(_this.props.Login.masterData,_this.props.Login.userInfo,data,_this.state.selectComponent,childColumnList,SubSamplecomboComponents,SubSamplewithoutCombocomponent,specBasedComponent,Map,_this.props.Login.Component,true);//  this.props.addsubSample(this.props.Login.userInfo, specBasedComponent, Map)\n}}else{_this.props.addsubSample(_this.props.Login.masterData,_this.props.Login.userInfo,data,_this.state.selectComponent,_this.state.parentSubSampleColumnList,_this.state.SubSamplecomboComponents,_this.state.SubSamplewithoutCombocomponent,specBasedComponent,Map,_this.props.Login.Component,false,_this.props.Login.SubSamplecomboData,_this.props.Login.TestCombined);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};_this.onSaveClick=function(saveType,formRef){var operation=_this.props.Login.operation;if(operation===\"update\"){_this.onUpdateRegistration(saveType,formRef,operation);}else{if(operation===\"create\"){_this.insertRegistration(true);}}};_this.onNumericInputChange=function(value,name){var selectedRecord=_this.state.selectedRecord;selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.myRef=React.createRef();_this.PrevoiusLoginData=_this.props.PrevoiusLoginData;_this.subSampleDataGridList=[];_this.componentColumnList=[{\"idsName\":\"IDS_SPECIMEN\",\"dataField\":\"scomponentname\",width:\"200px\"},{\"idsName\":\"IDS_DATERECEIVED\",\"dataField\":\"sreceiveddate\",width:\"250px\"},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",width:\"200px\"}];_this.sampleeditable=JSON.parse(_this.props.Login.masterData.DynamicDesign.jsondata.value);return _this;}_createClass(PreRegisterSlideOutModal,[{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this2=this;var masterStatus=this.props.masterStatus;// const {selectedRecord,selectedSpec,selectedTestData,selectComponent} =this.state\nvar check=false;if(this.props.Login.selectedRecord!==this.PrevoiusLoginData.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});check=true;}if(this.props.Login.selectedSpec!==this.PrevoiusLoginData.Login.selectedSpec){var specBasedComponent=this.props.Login.selectedSpec[\"nallottedspeccode\"]&&this.props.Login.selectedSpec[\"nallottedspeccode\"].item.ncomponentrequired===3?true:false;this.subSampleDataGridList=[];if(specBasedComponent){this.subSampleDataGridList=[{\"idsName\":\"IDS_SPECIMEN\",\"dataField\":\"scomponentname\",width:\"200px\"}];}this.props.Login.masterData.SubSampleTemplate&&this.props.Login.masterData.SubSampleTemplate.jsondata.map(function(row){return row.children.map(function(column){return column.children.map(function(component){// let label = ''\nif(component.hasOwnProperty(\"children\")){component.children.map(function(componentrow){if(componentrow.mandatory===true){// label = label + '&' + componentrow.label\n_this2.subSampleDataGridList.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,width:\"150px\"});}return _this2.subSampleDataGridList;});}else{if(component.mandatory)_this2.subSampleDataGridList.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,width:\"150px\"});return _this2.subSampleDataGridList;}// if (label !== '') {\n//     this.subSampleDataGridList.push({ \"mandatory\": true, \"idsName\": label.substring(1), \"dataField\": label.substring(1),width: \"150px\" })\n// }\n});});});this.setState({selectedSpec:this.props.Login.selectedSpec,specBasedComponent:specBasedComponent});check=true;}if(this.props.Login.selectedTestData!==this.PrevoiusLoginData.Login.selectedTestData){this.setState({selectedTestData:this.props.Login.selectedTestData});check=true;}if(this.props.Login.selectComponent!==this.PrevoiusLoginData.Login.selectComponent){this.setState({selectComponent:this.props.Login.selectComponent});check=true;}if(this.props.Login.specBasedComponent!==this.PrevoiusLoginData.Login.specBasedComponent){this.setState({specBasedComponent:this.props.Login.specBasedComponent});check=true;}if(this.props.Login.SubSamplewithoutCombocomponent!==this.PrevoiusLoginData.Login.SubSamplewithoutCombocomponent){this.setState({SubSamplewithoutCombocomponent:this.props.Login.SubSamplewithoutCombocomponent});check=true;}if(this.props.Login.SubSamplecomboComponents!==this.PrevoiusLoginData.Login.SubSamplecomboComponents){this.setState({SubSamplecomboComponents:this.props.Login.SubSamplecomboComponents});check=true;}if(this.props.Login.parentSubSampleColumnList!==this.PrevoiusLoginData.Login.parentSubSampleColumnList){this.setState({parentSubSampleColumnList:this.props.Login.parentSubSampleColumnList});check=true;}if(check){this.PrevoiusLoginData=previousProps;}if(masterStatus!==\"\"&&masterStatus!==undefined){toast.warn(masterStatus);var updateInfo={typeName:DEFAULT_RETURN,data:{masterStatus:\"\"}};this.props.updateStore(updateInfo);masterStatus=\"\";}if(this.props.innerPopup!==this.state.innerTop){setTimeout(function(){var scrollDoc=_this2.props.modalEvent&&_this2.props.modalEvent.id?document.getElementById(_this2.props.modalEvent.id):null;if(_this2.myRef&&_this2.myRef.current){_this2.myRef.current.scrollIntoView({behavior:'smooth'});}if(scrollDoc){scrollDoc.scrollIntoView({behavior:'smooth'});}},100);this.setState({innerTop:this.props.innerPopup});}}},{key:\"ComponentObjectAfterSave\",value:function ComponentObjectAfterSave(){var testrequired=this.state.selectedRecord.ntransactionstatus;var objcomponent=this.state.selectComponent;delete objcomponent.nneedservice;if(testrequired===3){this.props.getTestfromDB(objcomponent,this.props.Login,2);}else{var Component=this.props.Login.Component||[];var saveComponent=_objectSpread({},objcomponent);saveComponent[\"slno\"]=this.props.Login.Component?Object.keys(this.props.Login.Component).length+1:1;saveComponent[\"scomponentname\"]=objcomponent[\"ncomponentcode\"].label;saveComponent[\"ncomponentcode\"]=objcomponent[\"ncomponentcode\"]?objcomponent[\"ncomponentcode\"].value:-1;var dreceiveddate=objcomponent[\"dreceiveddate\"];saveComponent[\"dreceiveddate\"]=dreceiveddate;saveComponent[\"sreceiveddate\"]=convertDateTimetoString(dreceiveddate,this.props.Login.userInfo);saveComponent[\"nallottedspeccode\"]=objcomponent[\"nallottedspeccode\"]?objcomponent[\"nallottedspeccode\"]:-1;saveComponent[\"ntzdreceivedate\"]=objcomponent[\"ntzdreceivedate\"]?objcomponent[\"ntzdreceivedate\"].value:-1;saveComponent[\"stzdreceivedate\"]=objcomponent[\"ntzdreceivedate\"]?objcomponent[\"ntzdreceivedate\"].label:\"\";saveComponent[\"jsondata\"]=\"\";Component.unshift(saveComponent);var updateInfo={typeName:DEFAULT_RETURN,data:{Component:Component,openChildModal:false,selectedComponent:saveComponent,SelectedTest:[],selectComponent:{},showSaveContinue:false,loadComponent:false,parentPopUpSize:\"xl\"}};this.props.updateStore(updateInfo);}}},{key:\"ComponentObject\",value:function ComponentObject(){var testrequired=this.state.selectedRecord.ntransactionstatus;var objcomponent=this.state.selectComponent;delete objcomponent.nneedservice;var objcomponent1=_objectSpread({},this.state.selectComponent);if(testrequired===3){this.props.getTestfromDB(objcomponent,this.props.Login,1);}else{var Component=this.props.Login.Component||[];var saveComponent=_objectSpread({},objcomponent);saveComponent[\"scomponentname\"]=objcomponent[\"ncomponentcode\"].label;saveComponent[\"slno\"]=this.props.Login.Component?Object.keys(this.props.Login.Component).length+1:1;saveComponent[\"ncomponentcode\"]=objcomponent[\"ncomponentcode\"]?objcomponent[\"ncomponentcode\"].value:-1;var dreceiveddate=objcomponent[\"dreceiveddate\"];saveComponent[\"dreceiveddate\"]=dreceiveddate;saveComponent[\"sreceiveddate\"]=convertDateTimetoString(dreceiveddate,this.props.Login.userInfo);saveComponent[\"ntzdreceivedate\"]=objcomponent[\"ntzdreceivedate\"]?objcomponent[\"ntzdreceivedate\"].value:-1;saveComponent[\"stzdreceivedate\"]=objcomponent[\"ntzdreceivedate\"]?objcomponent[\"ntzdreceivedate\"].label:\"\";saveComponent[\"nallottedspeccode\"]=objcomponent[\"nallottedspeccode\"]?objcomponent[\"nallottedspeccode\"]:-1;saveComponent[\"jsondata\"]=\"\";Component.unshift(saveComponent);objcomponent1[\"scomments\"]=\"\";var updateInfo={typeName:DEFAULT_RETURN,data:{Component:Component,selectedComponent:saveComponent,SelectedTest:[],selectComponent:objcomponent1}};this.props.updateStore(updateInfo);}}},{key:\"SubSampleObjectAfterSave\",value:function SubSampleObjectAfterSave(){var testrequired=this.state.selectedRecord.ntransactionstatus;var objcomponent=this.state.selectComponent;delete objcomponent.nneedservice;// const defaulttimezone = this.props.Login.defaulttimezone;\n// const userInfo = this.props.Login.userInfo;\nif(testrequired===3){this.props.getTestfromDB(objcomponent,this.props.Login,2);}else{var Component=this.props.Login.Component||[];var saveComponent={};// saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\n//saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\nsaveComponent[\"slno\"]=this.props.Login.Component?Object.keys(this.props.Login.Component).length+1:1;// if(this.props.specBasedComponent){\n//     saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\n//     saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\n//     saveComponent[\"nspecsampletypecode\"] = objcomponent[\"nspecsampletypecode\"] ?objcomponent[\"nspecsampletypecode\"]  : -1;\n// }else{\n//     saveComponent[\"nspecsampletypecode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\n// }\nvar subSampleDetail=getRegistrationSubSample(objcomponent,this.props.Login.masterData.SubSampleTemplate.jsondata,this.props.Login.userInfo,this.props.Login.defaulttimezone,true,this.state.specBasedComponent,this.state.selectedSpec);saveComponent=_objectSpread(_objectSpread({},saveComponent),subSampleDetail.sampleRegistration);var subSampleDataGridList=this.props.Login.subSampleDataGridList||[];subSampleDataGridList.push(_objectSpread(_objectSpread({},saveComponent['jsonuidata']),saveComponent));// saveComponent[\"jsondata\"] = {}\n// saveComponent[\"jsonuidata\"] = {}\n// this.props.Login.masterData.SubSampleTemplate &&\n//     this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\n//         row.children.map(column => {\n//             column.children.map(component => {\n//                 if (component.hasOwnProperty(\"children\")) {\n//                    // let componentrowlabel = ''\n//                    // let componentrowvalue = ''\n//                     component.children.map(componentrow => {\n//                         if (componentrow.inputtype === \"combo\") {\n//                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\n//                                 { value: objcomponent[componentrow.label].value, label: objcomponent[componentrow.label].label } : -1\n//                             // if (componentrow.mandatory || objcomponent[componentrow.label]) {\n//                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n//                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label].label\n//                             // }\n//                             saveComponent[\"jsonuidata\"][componentrow.label] = objcomponent[componentrow.label] ? objcomponent[componentrow.label].label  : \"\"\n//                         }\n//                         else if (componentrow.inputtype === \"date\") {\n//                             if (componentrow.mandatory) {\n//                                 saveComponent[\"jsondata\"][componentrow.label] = convertDateTimetoString(objcomponent[componentrow.label] ?\n//                                     objcomponent[componentrow.label] : new Date(), userInfo);\n//                                     saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\n//                             } else {\n//                                 saveComponent[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\n//                                     convertDateTimetoString(objcomponent[componentrow.label] ?\n//                                         objcomponent[componentrow.label] : new Date(), userInfo) :\n//                                     objcomponent[componentrow.label] ? convertDateTimetoString(objcomponent[componentrow.label] ?\n//                                         objcomponent[componentrow.label] : new Date(), userInfo) : \"\";\n//                                         saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\n//                             }\n//                             if (componentrow.timezone) {\n//                                 saveComponent[\"jsondata\"][`tz${componentrow.label}`] = objcomponent[`tz${componentrow.label}`] ?\n//                                     { value: objcomponent[`tz${componentrow.label}`].value, label: objcomponent[`tz${componentrow.label}`].label } :\n//                                     defaulttimezone ? defaulttimezone : -1\n//                                     saveComponent[\"jsonuidata\"][`tz${componentrow.label}`] = saveComponent[\"jsondata\"][`tz${componentrow.label}`]\n//                             }\n//                             // dateList.push(componentrow.label)\n//                         }\n//                         else {\n//                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\n//                                 objcomponent[componentrow.label] : \"\"\n//                                 saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\n//                             // if (objcomponent[componentrow.label]) {\n//                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n//                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label]\n//                             // }\n//                         }\n//                     })\n//                     //saveComponent[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\n//                 }\n//                 else {\n//                     if (component.inputtype === \"combo\") {\n//                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\n//                             { value: objcomponent[component.label].value, label: objcomponent[component.label].label } : -1\n//                             saveComponent[\"jsonuidata\"][component.label] = objcomponent[component.label] ? objcomponent[component.label].label  :\"\"\n//                         }\n//                     else if (component.inputtype === \"date\") {\n//                         if (component.mandatory) {\n//                             saveComponent[\"jsondata\"][component.label] = convertDateTimetoString(objcomponent[component.label] ?\n//                                 objcomponent[component.label] : new Date(), userInfo);\n//                                 saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\n//                         } else {\n//                             saveComponent[\"jsondata\"][component.label] = component.loadcurrentdate ?\n//                                 convertDateTimetoString(objcomponent[component.label] ?\n//                                     objcomponent[component.label] : new Date(), userInfo) :\n//                                 objcomponent[component.label] ? convertDateTimetoString(objcomponent[component.label] ?\n//                                     objcomponent[component.label] : new Date(), userInfo) : \"\";\n//                                     saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\n//                                 }\n//                         if (component.timezone) {\n//                             saveComponent[\"jsondata\"][`tz${component.label}`] = objcomponent[`tz${component.label}`] ?\n//                                 { value: objcomponent[`tz${component.label}`].value, label: objcomponent[`tz${component.label}`].label } :\n//                                 defaulttimezone ? defaulttimezone : -1\n//                                 saveComponent[\"jsonuidata\"][`tz${component.label}`]=  saveComponent[\"jsondata\"][`tz${component.label}`]\n//                         }\n//                         //dateList.push(component.label)\n//                     }\n//                     else {\n//                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\n//                             objcomponent[component.label] : \"\"\n//                             saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\n//                     }\n//                 }\n//             }\n//             )\n//         })\n//     })\n//  saveComponent[\"nallottedspeccode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"].value : -1;\nComponent.unshift(saveComponent);var selectedTestData=this.state.selectedTestData[\"ntestgrouptestcode\"];var selectedTestArray=[];selectedTestData&&selectedTestData.map(function(item){item.item['slno']=saveComponent.slno;return selectedTestArray.push(item.item);});// selectedTestArray.map((item,i)=>{\n//    selectedTestArray[i]['slno']=saveComponent.slno;\n// })\n// let selectedComponent = this.props.Login.selectedComponent;\nvar Test=this.props.Login.Test||[];var ArrayTest=Test[saveComponent.slno]?Test[saveComponent.slno]:[];//  ArrayTest.push(selectedTestArray);\nTest[saveComponent.slno]=[].concat(_toConsumableArray(ArrayTest),selectedTestArray);var updateInfo={typeName:DEFAULT_RETURN,data:{Component:Component,openChildModal:false,selectedComponent:saveComponent,loadSubSample:false,selectComponent:{},showSaveContinue:false,parentPopUpSize:\"xl\",SelectedTest:Test[saveComponent.slno],Test:Test,selectedTestData:{},screenName:this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename,subSampleDataGridList:subSampleDataGridList}};this.props.updateStore(updateInfo);}}},{key:\"SubSampleObject\",value:function SubSampleObject(){var testrequired=this.state.selectedRecord.ntransactionstatus;var objcomponent=this.state.selectComponent;delete objcomponent.nneedservice;var objcomponent1=_objectSpread({},this.state.selectComponent);// const defaulttimezone = this.props.Login.defaulttimezone;\n// const userInfo = this.props.Login.userInfo;\nif(testrequired===3){this.props.getTestfromDB(objcomponent,this.props.Login,1);}else{var Component=this.props.Login.Component||[];var saveComponent={};// if(this.props.specBasedComponent){\n//     saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\n//     saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\n//     saveComponent[\"nspecsampletypecode\"] = objcomponent[\"nspecsampletypecode\"] ?objcomponent[\"nspecsampletypecode\"]  : -1;\n// }else{\n//     saveComponent[\"nspecsampletypecode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\n// }\nsaveComponent[\"slno\"]=this.props.Login.Component?Object.keys(this.props.Login.Component).length+1:1;var subSampleDetail=getRegistrationSubSample(objcomponent,this.props.Login.masterData.SubSampleTemplate.jsondata,this.props.Login.userInfo,this.props.Login.defaulttimezone,true,this.state.specBasedComponent,this.state.selectedSpec);saveComponent=_objectSpread(_objectSpread({},saveComponent),subSampleDetail.sampleRegistration);var subSampleDataGridList=this.props.Login.subSampleDataGridList||[];subSampleDataGridList.push(_objectSpread(_objectSpread({},saveComponent['jsonuidata']),saveComponent));// saveComponent[\"jsondata\"] = {}\n// saveComponent[\"jsonuidata\"] = {}\n// this.props.Login.masterData.SubSampleTemplate &&\n//   this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\n//         row.children.map(column => {\n//             column.children.map(component => {\n//                 if (component.hasOwnProperty(\"children\")) {\n//                    // let componentrowlabel = ''\n//                    // let componentrowvalue = ''\n//                     component.children.map(componentrow => {\n//                         if (componentrow.inputtype === \"combo\") {\n//                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\n//                                 { value: objcomponent[componentrow.label].value, label: objcomponent[componentrow.label].label } : -1\n//                             // if (componentrow.mandatory || objcomponent[componentrow.label]) {\n//                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n//                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label].label\n//                             // }\n//                             saveComponent[\"jsonuidata\"][componentrow.label] = objcomponent[componentrow.label] ? objcomponent[componentrow.label].label  : \"\"\n//                         }\n//                         else if (componentrow.inputtype === \"date\") {\n//                             if (componentrow.mandatory) {\n//                                 saveComponent[\"jsondata\"][componentrow.label] = convertDateTimetoString(objcomponent[componentrow.label] ?\n//                                     objcomponent[componentrow.label] : new Date(), userInfo);\n//                                     saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\n//                             } else {\n//                                 saveComponent[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\n//                                     convertDateTimetoString(objcomponent[componentrow.label] ?\n//                                         objcomponent[componentrow.label] : new Date(), userInfo) :\n//                                     objcomponent[componentrow.label] ? convertDateTimetoString(objcomponent[componentrow.label] ?\n//                                         objcomponent[componentrow.label] : new Date(), userInfo) : \"\";\n//                                         saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\n//                             }\n//                             if (componentrow.timezone) {\n//                                 saveComponent[\"jsondata\"][`tz${componentrow.label}`] = objcomponent[`tz${componentrow.label}`] ?\n//                                     { value: objcomponent[`tz${componentrow.label}`].value, label: objcomponent[`tz${componentrow.label}`].label } :\n//                                     defaulttimezone ? defaulttimezone : -1\n//                                     saveComponent[\"jsonuidata\"][`tz${componentrow.label}`] = saveComponent[\"jsondata\"][`tz${componentrow.label}`]\n//                             }\n//                             // dateList.push(componentrow.label)\n//                         }\n//                         else {\n//                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\n//                                 objcomponent[componentrow.label] : \"\"\n//                                 saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\n//                             // if (objcomponent[componentrow.label]) {\n//                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n//                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label]\n//                             // }\n//                         }\n//                     })\n//                     //saveComponent[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\n//                 }\n//                 else {\n//                     if (component.inputtype === \"combo\") {\n//                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\n//                             { value: objcomponent[component.label].value, label: objcomponent[component.label].label } : -1\n//                             saveComponent[\"jsonuidata\"][component.label] = objcomponent[component.label] ? objcomponent[component.label].label  :\"\"\n//                         }\n//                     else if (component.inputtype === \"date\") {\n//                         if (component.mandatory) {\n//                             saveComponent[\"jsondata\"][component.label] = convertDateTimetoString(objcomponent[component.label] ?\n//                                 objcomponent[component.label] : new Date(), userInfo);\n//                                 saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\n//                         } else {\n//                             saveComponent[\"jsondata\"][component.label] = component.loadcurrentdate ?\n//                                 convertDateTimetoString(objcomponent[component.label] ?\n//                                     objcomponent[component.label] : new Date(), userInfo) :\n//                                 objcomponent[component.label] ? convertDateTimetoString(objcomponent[component.label] ?\n//                                     objcomponent[component.label] : new Date(), userInfo) : \"\";\n//                                     saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\n//                                 }\n//                         if (component.timezone) {\n//                             saveComponent[\"jsondata\"][`tz${component.label}`] = objcomponent[`tz${component.label}`] ?\n//                                 { value: objcomponent[`tz${component.label}`].value, label: objcomponent[`tz${component.label}`].label } :\n//                                 defaulttimezone ? defaulttimezone : -1\n//                                 saveComponent[\"jsonuidata\"][`tz${component.label}`]=  saveComponent[\"jsondata\"][`tz${component.label}`]\n//                         }\n//                         //dateList.push(component.label)\n//                     }\n//                     else {\n//                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\n//                             objcomponent[component.label] : \"\"\n//                             saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\n//                     }\n//                 }\n//             }\n//             )\n//         })\n//     })\n//   saveComponent[\"nallottedspeccode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ?\n//     this.state.selectedSpec[\"nallottedspeccode\"].value : -1;\nComponent.unshift(saveComponent);// objcomponent1[\"scomments\"] = \"\";\n//objcomponent1[\"ssubsamplename\"] = \"\";\nvar selectedTestData=this.state.selectedTestData[\"ntestgrouptestcode\"];var selectedTestArray=[];selectedTestData&&selectedTestData.map(function(item){item.item['slno']=saveComponent.slno;return selectedTestArray.push(item.item);});// selectedTestArray.map((item,i)=>{\n//     selectedTestArray[i]['slno']=saveComponent.slno;\n// })\nvar Test=this.props.Login.Test||[];var ArrayTest=Test[saveComponent.slno]?Test[saveComponent.slno]:[];Test[saveComponent.slno]=[].concat(_toConsumableArray(ArrayTest),selectedTestArray);var updateInfo={Component:Component,selectedComponent:saveComponent,selectComponent:objcomponent1,SelectedTest:Test[saveComponent.slno],Test:Test,subSampleDataGridList:subSampleDataGridList//, selectedTestData: {}\n};this.addSubSampleSaveContinue(updateInfo,selectedTestData);// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         Component, selectedComponent: saveComponent,\n//         selectComponent: objcomponent1,\n//         SelectedTest: Test[saveComponent.slno],\n//         Test: Test, selectedTestData: {}\n//     }\n// }\n// this.props.updateStore(updateInfo);\n}}},{key:\"onUpdateRegistration\",value:function onUpdateRegistration(saveType,formRef,operation,flag){var inputData={userinfo:this.props.Login.userInfo};var initialParam={nfilterstatus:this.props.Login.masterData.FilterStatusValue.ntransactionstatus,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,fromdate:\"\",todate:\"\",nflag:2,ntype:2,npreregno:String(this.state.selectedRecord.npreregno),ndesigntemplatemappingcode:this.props.Login.masterData.RealDesignTemplateMappingValue&&this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,nneedsubsample:this.props.Login.masterData&&this.props.Login.masterData.nneedsubsample,checkBoxOperation:3,activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\"};inputData[\"initialparam\"]=initialParam;// inputData[\"samplebeforeedit\"] = JSON.parse(JSON.stringify(this.props.Login.regRecordToEdit));\n//inputData[\"registration\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\nvar param=getRegistration(this.props.Login.masterData,this.state.selectedRecord,this.state.selectedSpec,this.props.Login.masterData.registrationTemplate.jsondata,this.props.Login.userInfo,this.props.Login.defaulttimezone,operation,this.props.comboComponents);inputData[\"registration\"]=param.sampleRegistration;inputData[\"DateList\"]=param.dateList;inputData['sampledateconstraints']=this.sampleeditable.sampledateconstraints;inputData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.RealDesignTemplateMappingValue&&this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;inputData[\"nneedsubsample\"]=this.props.Login.masterData&&this.props.Login.masterData.nneedsubsample;inputData[\"checkBoxOperation\"]=3;inputData[\"activeSampleTab\"]=this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\";inputData[\"activeTestTab\"]=this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\";// Object.keys(this.state.selectedRecord).map(key => {\n//     if (typeof this.state.selectedRecord[key] === \"object\") {\n//         if (this.state.selectedRecord[key] === null) {\n//             return inputData[\"registration\"][key] = this.state.selectedRecord[key];\n//         }\n//         else if (this.state.selectedRecord[key] instanceof Date) {\n//             return inputData[\"registration\"][key] = formatInputDate(this.state.selectedRecord[key], false);\n//         }\n//         else {\n//             return inputData[\"registration\"][key] = this.state.selectedRecord[key].value\n//         }\n//     }\n//     else {\n//         return inputData[\"registration\"][key] = this.state.selectedRecord[key];\n//     }\n// }\n//  )\n// console.log(\"edit:\", inputData);\n// if (inputData[\"registration\"] ) {\n//     delete inputData[\"registration\"][\"esignpassword\"]\n//     delete inputData[\"registration\"][\"esigncomments\"]\n//     delete inputData[\"registration\"][\"agree\"]\n// }\nvar inputParam={classUrl:this.props.Login.inputParam.classUrl,methodUrl:\"Registration\",displayName:this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,action:'editSample',showConfirmAlert:false,resultDataState:this.state.resultDataState,testCommentDataState:this.state.testCommentDataState// dataState:undefined, selectedId\n};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:this.props.Login.masterData},saveType:saveType,parentPopUpSize:\"lg\"}};this.props.updateStore(updateInfo);}else{//this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\nthis.props.updateRegistration(inputParam,this.props.Login.masterData,\"openModal\");}}},{key:\"findSubsampleDateList\",value:function findSubsampleDateList(subsampletemplate){var dateList=[];subsampletemplate&&subsampletemplate.map(function(row){return row.children.map(function(column){return column.children.map(function(component){if(component.hasOwnProperty(\"children\")){return component.children.map(function(componentrow){if(componentrow.inputtype===\"date\"){dateList.push(componentrow.label);}});}else{if(component.inputtype===\"date\"){dateList.push(component.label);}return dateList;}});});});return dateList;}},{key:\"insertRegistration\",value:function insertRegistration(){var Components=this.props.Login.Component;if(Components&&Components.length>0){var Test=this.props.Login.Test;var _Map={};_Map[\"testgrouptest\"]=TestListManipulation(Components,Test);_Map[\"RegistrationSample\"]=SubSample(this.props.Login.Component?this.props.Login.Component:[],this.state.specBasedComponent);_Map[\"subsampleDateList\"]=this.findSubsampleDateList(this.props.Login.masterData.SubSampleTemplate.jsondata);//Map[\"FromDate\"] = rearrangeDateFormat(this.props.Login.userInfo, this.props.fromDate);//formatDate(this.fromDate);\n// Map[\"ToDate\"] = rearrangeDateFormat(this.props.Login.userInfo, this.props.toDate);//formatDate(this.toDate);\n_Map[\"FromDate\"]=\"\";_Map[\"ToDate\"]=\"\";_Map[\"nregtypecode\"]=this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map[\"nregsubtypecode\"]=this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;_Map[\"nsampletypecode\"]=this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;_Map[\"nfilterstatus\"]=transactionStatus.PREREGISTER;_Map[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;_Map[\"nneedsubsample\"]=this.props.Login.masterData&&this.props.Login.masterData.nneedsubsample;_Map[\"checkBoxOperation\"]=3;var param=getRegistration(this.props.Login.masterData,this.state.selectedRecord,this.state.selectedSpec,this.props.Login.masterData.registrationTemplate.jsondata,this.props.Login.userInfo,this.props.Login.defaultTimeZone,'create',this.props.comboComponents);_Map[\"Registration\"]=param.sampleRegistration;_Map[\"DateList\"]=param.dateList;_Map['sampledateconstraints']=this.sampleeditable.sampledateconstraints;_Map[\"userinfo\"]=this.props.Login.userInfo;_Map[\"nflag\"]=2;// Map[\"ntype\"] = 2;\n_Map[\"activeTestTab\"]=this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\";_Map[\"activeSampleTab\"]=this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\";_Map[\"multipleselectionFlag\"]=this.props.Login.settings&&parseInt(this.props.Login.settings[7])===3?true:false;var inputParam={inputData:_Map,postParamList:this.props.postParamList,action:\"preregister\"};this.props.insertRegistration(inputParam,this.props.Login.masterData);}else{toast.warn(this.props.intl.formatMessage({id:\"IDS_ADDSUBSAMPLETOPREREGISTER\"}));}}},{key:\"render\",value:function render(){var _this3=this;var saveType=1;if(this.props.ignoreFormValidation){saveType=5;}var buttonLabel=\"Save\";var idsLabel=\"IDS_SAVE\";if(this.props.buttonLabel){buttonLabel=this.props.buttonLabel;idsLabel='IDS_'.concat(buttonLabel.toUpperCase());}// const testColumnList = [\n//     { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", width: \"200px\" },\n//     { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", width: \"150px\" },\n//     { \"idsName\": \"IDS_SOURCE\", \"dataField\": \"ssourcename\", width: \"150px\" },\n//     { \"idsName\": \"IDS_METHOD\", \"dataField\": \"smethodname\", width: \"150px\" },\n//     { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", width: \"200px\" }]\nreturn/*#__PURE__*/React.createElement(Modal,{size:this.props.Login.loadComponent?'lg':this.props.Login.loadSpec?'lg':this.props.Login.loadTest?'lg':this.props.Login.loadSubSample?'lg':'xl'// size={this.props.templateData[0] ?\n//     this.props.templateData[0].children ?\n//         this.props.templateData[0].children.length >= 2 ? 'xl' : 'lg' : 'lg' : 'lg'}\n,backdrop:\"static\"//className={this.props.className || \"registrationModel\"}\n,className:this.props.className||\"\",show:this.props.Login.openPortal,onHide:this.props.closeModal,enforceFocus:false,dialogClassName:\"modal-dialog-slideout freakerstop\",\"aria-labelledby\":\"add-user\"},/*#__PURE__*/React.createElement(Modal.Header,{className:\"d-flex align-items-center\"},/*#__PURE__*/React.createElement(Modal.Title,{id:\"add-user\",className:\"header-primary flex-grow-1\"},this.props.graphView===true?\"\":this.props.Login.inputParam?this.props.Login.esign===true?/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ESIGN\",defaultMessage:\"Esign\"}):this.props.loginoperation?/*#__PURE__*/React.createElement(FormattedMessage,{id:this.props.Login.screenName}):/*#__PURE__*/React.createElement(React.Fragment,null,this.props.operation?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:this.props.Login.operation&&\"IDS_\".concat(this.props.Login.operation.toUpperCase()),defaultMessage:\"Add\"}),\" \",this.props.Login.screenName?/*#__PURE__*/React.createElement(FormattedMessage,{id:this.props.Login.screenName}):\"\"):this.props.Login.screenName?/*#__PURE__*/React.createElement(FormattedMessage,{id:this.props.Login.screenName}):\"\"):\"\"),/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-cancel\",variant:\"\",onClick:this.props.Login.loadSpec?this.closeSpec:this.props.Login.loadTest?this.closeTest:this.props.Login.loadComponent?this.closeComponent:this.props.Login.loadSubSample?this.closeSubSample:this.props.closeModal},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CANCEL\",defaultMessage:\"Cancel\"})),this.props.esign===true?/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(3);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SUBMIT\",defaultMessage:\"Submit\"})):(this.props.operation===\"create\"||this.props.operation===\"update\")&&this.props.showValidate?/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(4);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_VALIDATE\",defaultMessage:\"Validate\"})):this.props.showCalculate?/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(saveType);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CALCULATE\",defaultMessage:\"Calculate\"})):this.props.showParam===true&&this.props.showExecute?/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(4);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCalculator}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_EXECUTE\",defaultMessage:\"Execute\"})):this.props.noSave||this.props.graphView?this.props.operation===\"view\"?\"\":/*#__PURE__*/React.createElement(Button,{className:\"btn btn-user btn-primary-blue\",role:\"button\",onClick:this.props.resetView},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RESET\",defaultMessage:\"Reset\"})):this.props.hideSave?\"\":/*#__PURE__*/React.createElement(Button,{className:\" btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(saveType);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:idsLabel,defaultMessage:buttonLabel})),this.props.Login.operation===\"create\"&&this.props.Login.showSaveContinue?/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(2);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SAVECONTINUE\",defaultMessage:\"Save & Continue\"})):\"\",(this.props.operation===\"create\"||this.props.operation===\"update\")&&this.props.esign!==true&&this.props.showExecute===true&&this.props.showSave?/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(1);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SAVE\",defaultMessage:\"Save\"})):\"\"),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(ModalInner,{ref:this.myRef},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Form,{ref:this.formRef},this.props.Login.loadSpec?/*#__PURE__*/React.createElement(AddSpecification,{AgaramTree:this.props.Login.AgaramTree,openNodes:this.props.Login.OpenNodes,handleTreeClick:this.onTreeClick,focusKey:this.props.Login.FocusKey,activeKey:this.props.Login.ActiveKey,Specification:this.props.Login.Specification,selectedSpec:this.state.selectedSpec,selectedRecord:this.state.selectedRecord,onSpecChange:this.onspecChange}):this.props.Login.loadTest?/*#__PURE__*/React.createElement(AddTest,{TestCombined:this.props.Login.TestCombined||[],TestChange:this.TestChange,selectedTestData:this.props.Login.selectedTestData}):this.props.Login.loadComponent?/*#__PURE__*/React.createElement(AddComponentPopUp,{ref:this.myScrollRef,selectComponent:this.state.selectComponent||{},RealSampleTypeValue:this.props.Login.masterData.RealSampleTypeValue||{},RealRegTypeValue:this.props.Login.masterData.RealRegTypeValue||{},RealRegSubTypeValue:this.props.Login.masterData.RealRegSubTypeValue||{},RealFilterStatusValue:this.props.Login.masterData.RealFilterStatusValue||{},formatMessage:this.props.intl.formatMessage,handleDateChange:this.handleDateChangeComp,Component:this.props.Login.lstComponent||[],onInputComponentOnChange:this.onInputComponentOnChange// onComboChange={this.onComponentComboChange}\n,timeZoneList:this.props.Login.timeZoneList,onComponentChange:this.onComponentChange,userInfo:this.props.Login.userInfo,sreceiveddate:this.props.Login.sreceiveddate||[],CurrentTime:this.props.Login.CurrentTime}):this.props.Login.loadSubSample?/*#__PURE__*/React.createElement(AddSubSample,{Component:this.props.Login.lstComponent||[],selectComponent:this.state.selectComponent// Unit={this.props.Login.Unit || []}\n,onComponentChange:this.onComponentChange,onInputComponentOnChange:this.onInputComponentOnChange,templateData:this.props.Login.masterData.SubSampleTemplate&&this.props.Login.masterData.SubSampleTemplate.jsondata,userInfo:this.props.Login.userInfo,timeZoneList:this.props.Login.timeZoneList,defaultTimeZone:this.props.Login.defaultTimeZone,handleDateChange:this.handleDateSubSampleChange,onInputOnChange:this.onInputOnSubSampleChange,onNumericInputChange:this.onNumericInputSubSampleChange,comboData:this.props.Login.SubSamplecomboData,onComboChange:this.onComboSubSampleChange,TestCombined:this.props.Login.TestCombined||[],TestChange:this.TestChange,selectedTestData:this.state.selectedTestData,childoperation:this.props.Login.childoperation,specBasedComponent:this.state.specBasedComponent}):/*#__PURE__*/React.createElement(RegisterSlideOut,{editfield:this.sampleeditable&&this.sampleeditable['sampleeditable'],ntransactionstatus:this.props.Login.masterData&&this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.length>0&&this.props.Login.masterData.selectedSample[0].ntransactionstatus,loadPreregister:this.props.Login.loadPreregister,selectedSpec:this.state.selectedSpec,selectedRecord:this.state.selectedRecord,selectedComponent:this.props.Login.selectedComponent,subSampleDataGridList:this.props.Login.subSampleDataGridList||[],SelectedTest:this.props.Login.SelectedTest,selectedTestData:this.state.selectedTestData,userRoleControlRights:this.props.userRoleControlRights,templateData:this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.jsondata,handleChange:this.props.handleChange,handleDateChange:this.handleDateChange,onInputOnChange:this.onInputOnChange,onNumericInputChange:this.onNumericInputChange,comboData:this.props.Login.comboData,onComboChange:this.onComboChange,userInfo:this.props.Login.userInfo,timeZoneList:this.props.Login.timeZoneList,defaultTimeZone:this.props.Login.defaultTimeZone,AddSpec:this.AddSpec,addTest:this.addTestslide,handleComponentRowClick:this.handleComponentRowClick,nneedsubsample:this.props.Login.masterData&&this.props.Login.masterData.nneedsubsample,specBasedComponent:this.state.specBasedComponent,AddComponent:this.AddComponent,deleteComponent:this.deleteComponent,deleteTest:this.deleteTest,editComponent:this.editComponent,componentColumnList:this.componentColumnList,Component:this.props.Login.Component,TestChange:this.TestChange,testDataState:this.state.testDataState,subSampleDataState:this.state.subSampleDataState//componentDataState={this.state.componentDataState}\n,testDataStateChange:this.testDataStateChange//componentDataStateChange={this.componentDataStateChange}\n,subSampleDataStateChange:this.subSampleDataStateChange,addsubSample:this.addsubSample,editSubSample:this.editSubSample// onNumericInputChange={this.onNumericInputChange}\n,subSampleDataGridFields:this.subSampleDataGridList,operation:this.props.Login.operation})))))));}}]);return PreRegisterSlideOutModal;}(React.Component);export default connect(mapStateToProps,{getChildValues:getChildValues,getPreviewTemplate:getPreviewTemplate,getNewRegSpecification:getNewRegSpecification,AddComponents:AddComponents,updateStore:updateStore,EditComponent:EditComponent,getTest:getTest,addsubSample:addsubSample,editSubSample:editSubSample,insertRegistration:insertRegistration,updateRegistration:updateRegistration,addSubSampleSaveContinue:addSubSampleSaveContinue,componentTest:componentTest})(injectIntl(PreRegisterSlideOutModal));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/PreRegisterSlideOutModal.jsx"],"names":["React","FormattedMessage","injectIntl","Button","Card","Form","Modal","FontAwesomeIcon","faSave","toast","DEFAULT_RETURN","ModalInner","transactionStatus","faCalculator","comboChild","convertDateTimetoString","getSameRecordFromTwoArrays","rearrangeDateFormat","showEsign","validateEmail","RegisterSlideOut","AddSpecification","AddTest","connect","getPreviewTemplate","getChildValues","getNewRegSpecification","AddComponents","updateStore","EditComponent","getTest","addsubSample","editSubSample","insertRegistration","updateRegistration","addSubSampleSaveContinue","componentTest","AddComponentPopUp","AddSubSample","getRegistration","getRegistrationSubSample","SubSample","TestListManipulation","mapStateToProps","state","Login","PreRegisterSlideOutModal","props","formRef","createRef","failedControls","testDataState","skip","take","settings","parseInt","subSampleDataState","selectedRecord","selectedSpec","selectComponent","selectedTest","selectedTestData","SubSamplecomboComponents","SubSamplewithoutCombocomponent","parentSubSampleColumnList","specBasedComponent","handleSaveClick","saveType","startLabel","label","mandatoryFields","loadComponent","loadSubSample","masterData","SubSampleTemplate","jsondata","map","row","children","column","component","hasOwnProperty","componentrow","mandatory","inputtype","push","intl","formatMessage","id","loadTest","loadSpec","registrationTemplate","esign","forEach","item","dataField","undefined","alertMessage","alertPreFix","idsName","alertSuffix","mandatoryLabel","validateFunction","validateData","length","trim","onExecuteClick","agree","NO","info","validateEsign","ncomponentrequired","subSampleDataGridList","width","updateInfo","typeName","data","selectedComponent","SelectedTest","Test","Component","screenName","RealRegSubTypeValue","sregsubtypename","onSaveComponentClick","onSaveTestClick","onSaveSubSampleClick","onSaveClick","TestChange","comboData","fieldName","setState","onComboChange","control","customName","parentList","childComboList","childColumnList","comboName","product","productCategory","nproductcatcode","nproductcode","materialType","instrument","instrumentCategory","material","materialCategory","nsampletypecode","RealSampleTypeValue","inputParem","child","source","primarykeyField","valuemember","value","nameofdefaultcomp","name","ProductCategory","comboComponents","filter","x","ncategorybasedflow","InstrumentCategory","MaterialCategory","Product","Instrument","Material","columnList","val","withoutCombocomponent","mapOfFilter","userInfo","onInputOnChange","event","radiotext","target","type","includes","index","indexOf","indexcomma","slice","onInputOnSubSampleChange","onComboSubSampleChange","SubSamplecomboData","onNumericInputChange","onNumericInputSubSampleChange","handleDateChangeComp","dateValue","dateName","handleDateChange","handleDateSubSampleChange","openFilter","showFilter","closeFilter","AddSpec","e","addTestslide","nneedsubsample","Object","keys","warn","selectedComponent1","nallottedspeccode","slno","closeSpec","closeComponent","closeTest","closeSubSample","selectedSubSample","showSaveContinue","onspecChange","sversion","onTreeClick","inputParam","methodUrl","operation","activeKey","key","focusKey","keyName","userinfo","selectedNode","primaryKey","handleComponentRowClick","dataItem","AddComponent","Map","ntemplatemanipulationcode","RealRegTypeValue","nregtypecode","onComponentChange","nspecsampletypecode","onInputComponentOnChange","checked","childoperation","ComponentObjectAfterSave","ComponentObject","testrequired","ntransactionstatus","objcomponent","dreceiveddate","findIndex","splice","getTestByComponentChange","nneedservice","openChildModal","parentPopUpSize","SubSampleObjectAfterSave","SubSampleObject","subSampleDetail","defaulttimezone","sampleRegistration","index1","Components","lstComponent","editComponent","editselectedcomponent","inputData","objComponent","Date","timezone","deleteComponent","deleteTest","ntestgrouptestcode","selectedTestArray","ArrayTest","subsamplename","componentDataStateChange","componentDataState","dataState","testDataStateChange","subSampleDataStateChange","Layout","TestCombined","onUpdateRegistration","myRef","PrevoiusLoginData","componentColumnList","sampleeditable","JSON","parse","DynamicDesign","previousProps","masterStatus","check","innerPopup","innerTop","setTimeout","scrollDoc","modalEvent","document","getElementById","current","scrollIntoView","behavior","getTestfromDB","saveComponent","unshift","objcomponent1","flag","initialParam","nfilterstatus","FilterStatusValue","nregsubtypecode","fromdate","todate","nflag","ntype","npreregno","String","ndesigntemplatemappingcode","RealDesignTemplateMappingValue","checkBoxOperation","activeSampleTab","activeTestTab","param","dateList","sampledateconstraints","classUrl","displayName","action","showConfirmAlert","resultDataState","testCommentDataState","userRoleControlRights","nformcode","ncontrolCode","loadEsign","screenData","subsampletemplate","findSubsampleDateList","PREREGISTER","defaultTimeZone","postParamList","ignoreFormValidation","buttonLabel","idsLabel","concat","toUpperCase","className","openPortal","closeModal","graphView","loginoperation","showValidate","showCalculate","showParam","showExecute","noSave","resetView","hideSave","showSave","AgaramTree","OpenNodes","FocusKey","ActiveKey","Specification","myScrollRef","RealFilterStatusValue","timeZoneList","sreceiveddate","CurrentTime","selectedSample","loadPreregister","handleChange"],"mappings":"67BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,CAA2BC,UAA3B,KAA6C,YAA7C,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,IAAvB,CAA6BC,KAA7B,KAA0C,iBAA1C,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,MAAT,KAAuB,qCAAvB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,cAAT,KAA+B,0BAA/B,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,OAASC,iBAAT,KAAkC,8BAAlC,CACA,OAASC,YAAT,KAA6B,mCAA7B,CACA,OACIC,UADJ,CACgBC,uBADhB,CAEIC,0BAFJ,CAEgCC,mBAFhC,CAEqDC,SAFrD,CAEgEC,aAFhE,KAGO,+BAHP,CAIA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OACIC,kBADJ,CACwBC,cADxB,CAEIC,sBAFJ,CAE4BC,aAF5B,CAE2CC,WAF3C,CAGIC,aAHJ,CAGmBC,OAHnB,CAG4BC,YAH5B,CAG0CC,aAH1C,CAIIC,kBAJJ,CAIwBC,kBAJxB,CAI4CC,wBAJ5C,CAKIC,aALJ,KAMO,eANP,CAOA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OACIC,eADJ,CACqBC,wBADrB,CAC+CC,SAD/C,CAC0DC,oBAD1D,KAEO,0BAFP,CAGA;AAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHC,KAAK,CAAED,KAAK,CAACC,KADV,CAAP,CAGH,CAJD,C,GAKMC,CAAAA,wB,gJACF,kCAAYC,KAAZ,CAAmB,0DACf,uBAAMA,KAAN,EADe,MAanBC,OAbmB,CAaThD,KAAK,CAACiD,SAAN,EAbS,OAcnBL,KAdmB,CAcX,CACJM,cAAc,CAAE,EADZ,CAEJC,aAAa,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,MAAKN,KAAL,CAAWF,KAAX,CAAiBS,QAAjB,CAA4BC,QAAQ,CAAC,MAAKR,KAAL,CAAWF,KAAX,CAAiBS,QAAjB,CAA0B,EAA1B,CAAD,CAApC,CAAsE,CAAvF,CAFX,CAGJE,kBAAkB,CAAE,CAAEJ,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,MAAKN,KAAL,CAAWF,KAAX,CAAiBS,QAAjB,CAA4BC,QAAQ,CAAC,MAAKR,KAAL,CAAWF,KAAX,CAAiBS,QAAjB,CAA0B,EAA1B,CAAD,CAApC,CAAsE,CAAvF,CAHhB,CAIJG,cAAc,CAAE,EAJZ,CAKJC,YAAY,CAAE,EALV,CAMJC,eAAe,CAAE,EANb,CAOJC,YAAY,CAAE,EAPV,CAQJC,gBAAgB,CAAE,EARd,CASJC,wBAAwB,CAAE,EATtB,CAUJC,8BAA8B,CAAE,EAV5B,CAWJ;AACAC,yBAAyB,CAAE,EAZvB,CAaJC,kBAAkB,CAAC,KAbf,CAdW,OAgCnBC,eAhCmB,CAgCD,SAACC,QAAD,CAAc,CAC5B,GAAMjB,CAAAA,cAAc,CAAG,EAAvB,CACA,GAAMkB,CAAAA,UAAU,CAAG,EAAnB,CACA,GAAIC,CAAAA,KAAK,CAAG,WAAZ,CACA,GAAIC,CAAAA,eAAe,CAAG,EAAtB,CACA,GAAIb,CAAAA,cAAc,CAAG,MAAKb,KAAL,CAAWa,cAAhC,CAGA,GAAI,MAAKV,KAAL,CAAWF,KAAX,CAAiB0B,aAArB,CAAoC,CAChCD,eAAe,CAAG,CACd,CAAE,UAAW,eAAb,CAA8B,YAAa,gBAA3C,CAA6D,iBAAkB,YAA/E,CAA6F,cAAe,OAA5G,CADc,CAEd,CAAE,UAAW,kBAAb,CAAiC,YAAa,eAA9C,CAA+D,iBAAkB,YAAjF,CAA+F,cAAe,OAA9G,CAFc,CAGd,CAAE,UAAW,cAAb,CAA6B,YAAa,iBAA1C,CAA6D,iBAAkB,YAA/E,CAA6F,cAAe,OAA5G,CAHc,CAAlB,CAKAb,cAAc,CAAG,MAAKb,KAAL,CAAWe,eAA5B,CACH,CAPD,IAQK,IAAI,MAAKZ,KAAL,CAAWF,KAAX,CAAiB2B,aAArB,CAAoC,CAErC,GAAI,MAAK5B,KAAL,CAAWqB,kBAAf,CACIK,eAAe,CAAG,CAAC,CAAE,UAAW,cAAb,CAA6B,YAAa,gBAA1C,CAA4D,iBAAkB,YAA9E,CAA4F,cAAe,OAA3G,CAAD,CAAlB,CAEJ,MAAKvB,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,EACI,MAAK3B,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,CAA8CC,QAA9C,CAAuDC,GAAvD,CAA2D,SAAAC,GAAG,CAAI,CAC9DA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAiB,SAAAG,MAAM,CAAI,CACvB,MAAOA,CAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAoB,SAAAI,SAAS,CAAI,CACpC,MAAOA,CAAAA,SAAS,CAACC,cAAV,CAAyB,UAAzB,EACHD,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CAAuB,SAAAM,YAAY,CAAI,CAEnC,GAAIA,YAAY,CAACC,SAAb,GAA2B,IAA/B,CAAqC,CACjC,GAAID,YAAY,CAACE,SAAb,GAA2B,OAA/B,CAAwC,CACpCd,eAAe,CAACe,IAAhB,CAAqB,CACjB,YAAa,IADI,CACE,UAAWH,YAAY,CAACb,KAD1B,CAEjB,YAAaa,YAAY,CAACb,KAFT,CAGjB,cAAe,MAAKtB,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,WAAN,CAA9B,CAHE,CAIjB,mBAAoBrE,aAJH,CAKjB,iBAAkB,WALD,CAMjB,cAAe,SANE,CAArB,EAQH,CATD,IASO,CACHmD,eAAe,CAACe,IAAhB,CAAqB,CACjB,YAAa,IADI,CAEjB,UAAWH,YAAY,CAACb,KAFP,CAGjB,YAAaa,YAAY,CAACb,KAHT,CAIjB,iBAAkBa,YAAY,CAACE,SAAb,GAA2B,OAA3B,CACd,YADc,CACC,WALF,CAMjB,cAAeF,YAAY,CAACE,SAAb,GAA2B,OAA3B,CACX,WADW,CACG,SAPD,CAArB,EASH,CAEJ,CAtBD,IAsBO,CACH,GAAIF,YAAY,CAACE,SAAb,GAA2B,OAA/B,CAAwC,CAEpC,MAAKxC,KAAL,CAAWe,eAAX,CAA2BuB,YAAY,CAACb,KAAxC,GACI,MAAKzB,KAAL,CAAWe,eAAX,CAA2BuB,YAAY,CAACb,KAAxC,IAAmD,EADvD,EAEIC,eAAe,CAACe,IAAhB,CAAqB,CACjB,YAAa,IADI,CACE,UAAWH,YAAY,CAACb,KAD1B,CAEjB,YAAaa,YAAY,CAACb,KAFT,CAGjB,cAAe,MAAKtB,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,WAAN,CAA9B,CAHE,CAIjB,mBAAoBrE,aAJH,CAKjB,iBAAkB,WALD,CAMjB,cAAe,SANE,CAArB,CAFJ,CAUH,CACJ,CACD,MAAO,KAAP,CACH,CAxCD,CADG,CA0CD6D,SAAS,CAACG,SAAV,GAAwB,IAAxB,CACEH,SAAS,CAACI,SAAV,GAAwB,OAAxB,CACId,eAAe,CAACe,IAAhB,CAAqB,CACjB,YAAa,IADI,CAEjB,UAAWL,SAAS,CAACX,KAFJ,CAEW,YAAaW,SAAS,CAACX,KAFlC,CAGjB,cAAe,MAAKtB,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,WAAN,CAA9B,CAHE,CAIjB,mBAAoBrE,aAJH,CAKjB,iBAAkB,WALD,CAMjB,cAAe,SANE,CAArB,CADJ,CAUImD,eAAe,CAACe,IAAhB,CAAqB,CACjB,YAAa,IADI,CAEjB,UAAWL,SAAS,CAACX,KAFJ,CAEW,YAAaW,SAAS,CAACX,KAFlC,CAGjB,iBAAkBW,SAAS,CAACI,SAAV,GAAwB,OAAxB,CACd,YADc,CACC,WAJF,CAKjB,cAAeJ,SAAS,CAACI,SAAV,GAAwB,OAAxB,CAAkC,WAAlC,CAAgD,SAL9C,CAArB,CAXN,CAkBI,MAAKxC,KAAL,CAAWe,eAAX,CAA2BqB,SAAS,CAACX,KAArC,EAA8CW,SAAS,CAACI,SAAV,GAAwB,OAAxB,CAC5Cd,eAAe,CAACe,IAAhB,CAAqB,CACjB,YAAa,IADI,CAEjB,UAAWL,SAAS,CAACX,KAFJ,CAEW,YAAaW,SAAS,CAACX,KAFlC,CAGjB,cAAe,MAAKtB,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,WAAN,CAA9B,CAHE,CAIjB,mBAAoBrE,aAJH,CAKjB,iBAAkB,WALD,CAMjB,cAAe,SANE,CAArB,CAD4C,CAQvC,EARP,CAQY,EApEtB,CAuEH,CAxEM,CAAP,CAyEH,CA1ED,EA2EH,CA5ED,CADJ,CA+EAsC,cAAc,CAAG,MAAKb,KAAL,CAAWe,eAA5B,CACH,CArFI,IAsFA,IAAI,MAAKZ,KAAL,CAAWF,KAAX,CAAiB4C,QAArB,CAA+B,CAChCnB,eAAe,CAAG,CAAC,CAAE,UAAW,UAAb,CAAyB,YAAa,oBAAtC,CAA4D,iBAAkB,YAA9E,CAA4F,cAAe,OAA3G,CAAD,CAAlB,CACAb,cAAc,CAAG,MAAKV,KAAL,CAAWF,KAAX,CAAiBgB,gBAAlC,CACH,CAHI,IAIA,IAAI,MAAKd,KAAL,CAAWF,KAAX,CAAiB6C,QAArB,CAA+B,CAChCpB,eAAe,CAAG,CACd,CAAE,UAAW,mBAAb,CAAkC,YAAa,mBAA/C,CAAoE,iBAAkB,YAAtF,CAAoG,cAAe,OAAnH,CADc,CAAlB,CAGH,CAJI,IAIE,CACH,MAAKvB,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BkB,oBAA5B,EACI,MAAK5C,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BkB,oBAA5B,CAAiDhB,QAAjD,CAA0DC,GAA1D,CAA8D,SAAAC,GAAG,CAAI,CACjE,MAAOA,CAAAA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAiB,SAAAG,MAAM,CAAI,CAC9B,MAAOA,CAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAoB,SAAAI,SAAS,CAAI,CACpC,MAAOA,CAAAA,SAAS,CAACC,cAAV,CAAyB,UAAzB,EACHD,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CAAuB,SAAAM,YAAY,CAAI,CAEnC,GAAIA,YAAY,CAACC,SAAb,GAA2B,IAA/B,CAAqC,CACjC,GAAID,YAAY,CAACE,SAAb,GAA2B,OAA/B,CAAwC,CACpCd,eAAe,CAACe,IAAhB,CAAqB,CACjB,YAAa,IADI,CACE,UAAWH,YAAY,CAACb,KAD1B,CAEjB,YAAaa,YAAY,CAACb,KAFT,CAGjB,cAAe,MAAKtB,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,WAAN,CAA9B,CAHE,CAIjB,mBAAoBrE,aAJH,CAKjB,iBAAkB,WALD,CAMjB,cAAe,SANE,CAArB,EAQH,CATD,IASO,CACHmD,eAAe,CAACe,IAAhB,CAAqB,CACjB,YAAa,IADI,CAEjB,UAAWH,YAAY,CAACb,KAFP,CAGjB,YAAaa,YAAY,CAACb,KAHT,CAIjB,iBAAkBa,YAAY,CAACE,SAAb,GAA2B,OAA3B,CACd,YADc,CACC,WALF,CAMjB,cAAeF,YAAY,CAACE,SAAb,GAA2B,OAA3B,CACX,WADW,CACG,SAPD,CAArB,EASH,CAEJ,CAtBD,IAsBO,CACH,GAAIF,YAAY,CAACE,SAAb,GAA2B,OAA/B,CAAwC,CAEpC3B,cAAc,CAACyB,YAAY,CAACb,KAAd,CAAd,EACIZ,cAAc,CAACyB,YAAY,CAACb,KAAd,CAAd,GAAuC,EAD3C,EAEIC,eAAe,CAACe,IAAhB,CAAqB,CACjB,YAAa,IADI,CACE,UAAWH,YAAY,CAACb,KAD1B,CAEjB,YAAaa,YAAY,CAACb,KAFT,CAGjB,cAAe,MAAKtB,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,WAAN,CAA9B,CAHE,CAIjB,mBAAoBrE,aAJH,CAKjB,iBAAkB,WALD,CAMjB,cAAe,SANE,CAArB,CAFJ,CAUH,CACJ,CACD,MAAO,KAAP,CACH,CAxCD,CADG,CA0CD6D,SAAS,CAACG,SAAV,GAAwB,IAAxB,CACEH,SAAS,CAACI,SAAV,GAAwB,OAAxB,CACId,eAAe,CAACe,IAAhB,CAAqB,CACjB,YAAa,IADI,CAEjB,UAAWL,SAAS,CAACX,KAFJ,CAEW,YAAaW,SAAS,CAACX,KAFlC,CAGjB,cAAe,MAAKtB,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,WAAN,CAA9B,CAHE,CAIjB,mBAAoBrE,aAJH,CAKjB,iBAAkB,WALD,CAMjB,cAAe,SANE,CAArB,CADJ,CAUImD,eAAe,CAACe,IAAhB,CAAqB,CACjB,YAAa,IADI,CAEjB,UAAWL,SAAS,CAACX,KAFJ,CAEW,YAAaW,SAAS,CAACX,KAFlC,CAGjB,iBAAkBW,SAAS,CAACI,SAAV,GAAwB,OAAxB,CACd,YADc,CACC,WAJF,CAKjB,cAAeJ,SAAS,CAACI,SAAV,GAAwB,OAAxB,CAAkC,WAAlC,CAAgD,SAL9C,CAArB,CAXN,CAkBI3B,cAAc,CAACuB,SAAS,CAACX,KAAX,CAAd,CAAkCW,SAAS,CAACI,SAAV,GAAwB,OAAxB,CAChCd,eAAe,CAACe,IAAhB,CAAqB,CACjB,YAAa,IADI,CAEjB,UAAWL,SAAS,CAACX,KAFJ,CAEW,YAAaW,SAAS,CAACX,KAFlC,CAGjB,cAAe,MAAKtB,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,WAAN,CAA9B,CAHE,CAIjB,mBAAoBrE,aAJH,CAKjB,iBAAkB,WALD,CAMjB,cAAe,SANE,CAArB,CADgC,CAQ3B,EARP,CAQY,EApEtB,CAqEH,CAtEM,CAAP,CAuEH,CAxEM,CAAP,CAyEH,CA1ED,CADJ,CA4EH,CACD,GAAI,MAAK4B,KAAL,CAAW6C,KAAf,CAAsB,CAClBtB,eAAe,CAAG,CACd,CAAE,UAAW,cAAb,CAA6B,YAAa,eAA1C,CAA2D,iBAAkB,WAA7E,CAA0F,cAAe,SAAzG,CADc,CAEd,CAAE,UAAW,cAAb,CAA6B,YAAa,eAA1C,CAA2D,iBAAkB,WAA7E,CAA0F,cAAe,SAAzG,CAFc,CAAlB,CAIH,CACDA,eAAe,CAACuB,OAAhB,CAAwB,SAAAC,IAAI,CAAI,CAC5B,GAAIrC,cAAc,CAACqC,IAAI,CAACC,SAAN,CAAd,GAAmCC,SAAnC,EAAgDvC,cAAc,CAACqC,IAAI,CAACC,SAAN,CAAd,GAAmC,IAAvF,CAA6F,CACzF,GAAME,CAAAA,YAAY,CAAG,CAACH,IAAI,CAACI,WAAL,CAAmBJ,IAAI,CAACI,WAAL,CAAmB,GAAtC,CAA4C,EAA7C,EAAmD,MAAKnD,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAEM,IAAI,CAACK,OAAX,CAA9B,CAAnD,EAA0GL,IAAI,CAACM,WAAL,CAAmB,IAAMN,IAAI,CAACM,WAA9B,CAA4C,EAAtJ,CAArB,CACAlD,cAAc,CAACmC,IAAf,CAAoBY,YAApB,EACA7B,UAAU,CAACiB,IAAX,CAAgBS,IAAI,CAACO,cAArB,EAAoC;AACvC,CAJD,IAKK,CACD,GAAIP,IAAI,CAACQ,gBAAT,CAA2B,CACvB,GAAMC,CAAAA,YAAY,CAAGT,IAAI,CAACQ,gBAA1B,CACA,GAAIC,YAAY,CAAC9C,cAAc,CAACqC,IAAI,CAACC,SAAN,CAAf,CAAZ,GAAiD,KAArD,CAA4D,CACxD,GAAME,CAAAA,aAAY,CAAG,CAACH,IAAI,CAACI,WAAL,CAAmBJ,IAAI,CAACI,WAAL,CAAmB,GAAtC,CAA4C,EAA7C,EAAmD,MAAKnD,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAEM,IAAI,CAACK,OAAX,CAA9B,CAAnD,EAA0GL,IAAI,CAACM,WAAL,CAAmB,IAAMN,IAAI,CAACM,WAA9B,CAA4C,EAAtJ,CAArB,CACAlD,cAAc,CAACmC,IAAf,CAAoBY,aAApB,EACA7B,UAAU,CAACiB,IAAX,CAAgBS,IAAI,CAACO,cAArB,EACH,CACJ,CAPD,IAQK,CACD,GAAI,MAAO5C,CAAAA,cAAc,CAACqC,IAAI,CAACC,SAAN,CAArB,GAA0C,QAA9C,CAAwD,CACpD;AACA,GAAItC,cAAc,CAACqC,IAAI,CAACC,SAAN,CAAd,CAA+BS,MAA/B,GAA0C,CAA9C,CAAiD,CAC7C,GAAMP,CAAAA,cAAY,CAAG,CAACH,IAAI,CAACI,WAAL,CAAmBJ,IAAI,CAACI,WAAL,CAAmB,GAAtC,CAA4C,EAA7C,EAAmD,MAAKnD,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAEM,IAAI,CAACK,OAAX,CAA9B,CAAnD,EAA0GL,IAAI,CAACM,WAAL,CAAmB,IAAMN,IAAI,CAACM,WAA9B,CAA4C,EAAtJ,CAArB,CACAlD,cAAc,CAACmC,IAAf,CAAoBY,cAApB,EACA7B,UAAU,CAACiB,IAAX,CAAgBS,IAAI,CAACO,cAArB,EAAoC;AACvC,CACJ,CAPD,IAQK,IAAI,MAAO5C,CAAAA,cAAc,CAACqC,IAAI,CAACC,SAAN,CAArB,GAA0C,QAA9C,CAAwD,CACzD;AACA,GAAItC,cAAc,CAACqC,IAAI,CAACC,SAAN,CAAd,CAA+BU,IAA/B,GAAsCD,MAAtC,GAAiD,CAArD,CAAwD,CACpD,GAAMP,CAAAA,cAAY,CAAG,CAACH,IAAI,CAACI,WAAL,CAAmBJ,IAAI,CAACI,WAAL,CAAmB,GAAtC,CAA4C,EAA7C,EAAmD,MAAKnD,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAEM,IAAI,CAACK,OAAX,CAA9B,CAAnD,EAA0GL,IAAI,CAACM,WAAL,CAAmB,IAAMN,IAAI,CAACM,WAA9B,CAA4C,EAAtJ,CAArB,CACAlD,cAAc,CAACmC,IAAf,CAAoBY,cAApB,EACA7B,UAAU,CAACiB,IAAX,CAAgBS,IAAI,CAACO,cAArB,EACH,CACJ,CAPI,IAQA,CACD;AACA,GAAI5C,cAAc,CAACqC,IAAI,CAACC,SAAN,CAAd,CAA+BS,MAA/B,GAA0C,CAA9C,CAAiD,CAC7C,GAAMP,CAAAA,cAAY,CAAG,CAACH,IAAI,CAACI,WAAL,CAAmBJ,IAAI,CAACI,WAAL,CAAmB,GAAtC,CAA4C,EAA7C,EAAmD,MAAKnD,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAEM,IAAI,CAACK,OAAX,CAA9B,CAAnD,EAA0GL,IAAI,CAACM,WAAL,CAAmB,IAAMN,IAAI,CAACM,WAA9B,CAA4C,EAAtJ,CAArB,CACAlD,cAAc,CAACmC,IAAf,CAAoBY,cAApB,EACA7B,UAAU,CAACiB,IAAX,CAAgBS,IAAI,CAACO,cAArB,EACH,CACJ,CACJ,CACJ,CACD;AACA;AACA;AACA;AACH,CA9CD,EA+CA;AAEA,GAAInD,cAAc,CAACsD,MAAf,GAA0B,CAA9B,CAAiC,CAC7B,GAAIrC,QAAQ,GAAK,CAAjB,CAAoB,CAChB,MAAKpB,KAAL,CAAW2D,cAAX,CAA0B,MAAK1D,OAA/B,EACH,CAFD,IAGK,IAAImB,QAAQ,GAAK,CAAjB,CAAoB,CACrB,GAAIV,cAAc,CAACkD,KAAf,EAAwBlD,cAAc,CAACkD,KAAf,GAAyB/F,iBAAiB,CAACgG,EAAvE,CAA2E,CAEvEnG,KAAK,CAACoG,IAAN,CAAW,MAAK9D,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,gBAAN,CAA9B,CAAX,EAEH,CAJD,IAIO,CAEH,MAAKzC,KAAL,CAAW+D,aAAX,GACH,CACJ,CATI,IAUA,CACD,GAAI,MAAK/D,KAAL,CAAWF,KAAX,CAAiB6C,QAArB,CAA+B,CAC3B,GAAIhC,CAAAA,YAAY,CAAG,MAAKd,KAAL,CAAWc,YAA9B,CACAA,YAAY,CAAC,mBAAD,CAAZ,CAAoC,MAAKd,KAAL,CAAWa,cAAX,CAA0B,mBAA1B,CAApC,CACAC,YAAY,CAAC,UAAD,CAAZ,CAA2B,MAAKd,KAAL,CAAWa,cAAX,CAA0B,UAA1B,CAA3B,CACAC,YAAY,CAAC,2BAAD,CAAZ,CAA4C,MAAKd,KAAL,CAAWa,cAAX,CAA0B,2BAA1B,CAA5C,CAEA,GAAMQ,CAAAA,kBAAkB,CAACP,YAAY,CAAC,mBAAD,CAAZ,EACzBA,YAAY,CAAC,mBAAD,CAAZ,CAAkCoC,IAAlC,CAAuCiB,kBAAvC,GAA4D,CADnC,CACqC,IADrC,CAC0C,KADnE,CAEC,MAAKC,qBAAL,CAA6B,EAA7B,CACA,GAAI/C,kBAAJ,CAAwB,CACpB,MAAK+C,qBAAL,CAA6B,CACzB,CAAE,UAAW,cAAb,CAA6B,YAAa,gBAA1C,CAA4DC,KAAK,CAAE,OAAnE,CADyB,CAA7B,CAGH,CAED,MAAKlE,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,EACI,MAAK3B,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,CAA8CC,QAA9C,CAAuDC,GAAvD,CAA2D,SAAAC,GAAG,CAAI,CAC9D,MAAOA,CAAAA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAiB,SAAAG,MAAM,CAAI,CAC9B,MAAOA,CAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAoB,SAAAI,SAAS,CAAI,CACpC;AACA,GAAIA,SAAS,CAACC,cAAV,CAAyB,UAAzB,CAAJ,CAA0C,CACtCD,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CAAuB,SAAAM,YAAY,CAAI,CACnC,GAAIA,YAAY,CAACC,SAAb,GAA2B,IAA/B,CAAqC,CACjC;AACA,MAAK6B,qBAAL,CAA2B3B,IAA3B,CAAgC,CAAE,YAAa,IAAf,CAAqB,UAAWH,YAAY,CAACb,KAA7C,CAAoD,YAAaa,YAAY,CAACb,KAA9E,CAAqF4C,KAAK,CAAE,OAA5F,CAAhC,EACH,CACD,MAAO,OAAKD,qBAAZ,CACH,CAND,EAOH,CARD,IAQO,CACH,GAAIhC,SAAS,CAACG,SAAd,CACI,MAAK6B,qBAAL,CAA2B3B,IAA3B,CAAgC,CAAE,YAAa,IAAf,CAAqB,UAAWL,SAAS,CAACX,KAA1C,CAAiD,YAAaW,SAAS,CAACX,KAAxE,CAA+E4C,KAAK,CAAE,OAAtF,CAAhC,EAEJ,MAAO,OAAKD,qBAAZ,CACH,CAEJ,CAjBM,CAAP,CAmBH,CApBM,CAAP,CAqBH,CAtBD,CADJ,CAyBD;AACA;AAEA;AACA;AACA;AACA,GAAME,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACFvD,gBAAgB,CAAE,EADhB,CAEFF,eAAe,CAAE,EAFf,CAGF0D,iBAAiB,CAAE,EAHjB,CAIF3B,QAAQ,CAAE,KAJR,CAKF4B,YAAY,CAAE,EALZ,CAMFC,IAAI,CAAE,EANJ,CAOFC,SAAS,CAAE,EAPT,CAQFR,qBAAqB,CAAC,EARpB,CASFtD,YAAY,CAAZA,YATE,CAUF+D,UAAU,CAAE,MAAK1E,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BiD,mBAA5B,CAAgDC,eAV1D,CAWF1D,kBAAkB,CAAlBA,kBAXE,CAFS,CAAnB,CAgBA,MAAKlB,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EAGH,CAjED,IAkEK,IAAI,MAAKnE,KAAL,CAAWF,KAAX,CAAiB0B,aAArB,CAAoC,CACrC,MAAKqD,oBAAL,CAA0BzD,QAA1B,CAAoC,MAAKnB,OAAzC,EACH,CAFI,IAGA,IAAI,MAAKD,KAAL,CAAWF,KAAX,CAAiB4C,QAArB,CAA+B,CAChC,MAAKoC,eAAL,CAAqB1D,QAArB,CAA+B,MAAKnB,OAApC,EACH,CAFI,IAGA,IAAI,MAAKD,KAAL,CAAWF,KAAX,CAAiB2B,aAArB,CAAoC,CACrC,MAAKsD,oBAAL,CAA0B3D,QAA1B,CAAoC,MAAKnB,OAAzC,EACH,CAFI,IAGA,CACD,MAAK+E,WAAL,CAAiB5D,QAAjB,CAA2B,MAAKnB,OAAhC,EACH,CAEJ,CACJ,CA/FD,IAgGK,CACDqB,KAAK,CAAGD,UAAU,CAAC,CAAD,CAAV,GAAkB4B,SAAlB,CAA8B3B,KAA9B,CAAsCD,UAAU,CAAC,CAAD,CAAxD,CACA3D,KAAK,CAACoG,IAAN,WAAc,MAAK9D,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAEnB,KAAN,CAA9B,CAAd,aAA8DnB,cAAc,CAAC,CAAD,CAA5E,GACH,CAEJ,CAxXkB,OA0XnB8E,UA1XmB,CA0XN,SAACC,SAAD,CAAYC,SAAZ,CAA0B,CACnC,GAAMrE,CAAAA,gBAAgB,CAAG,MAAKjB,KAAL,CAAWiB,gBAAX,EAA+B,EAAxD,CACAA,gBAAgB,CAACqE,SAAD,CAAhB,CAA8BD,SAA9B,CACA,MAAKE,QAAL,CAAc,CAAEtE,gBAAgB,CAAhBA,gBAAF,CAAd,EACA;AACA;AACA;AACA;AACA;AACH,CAnYkB,OAqYnBuE,aArYmB,CAqYH,SAACH,SAAD,CAAYI,OAAZ,CAAqBC,UAArB,CAAoC,CAChD,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,cAAc,CAAG,EAArB,CACA,GAAIC,CAAAA,eAAe,CAAG,EAAtB,CAEA,GAAIC,CAAAA,SAAS,CAAGJ,UAAU,EAAID,OAAO,CAAChE,KAAtC,CACA,GAAMZ,CAAAA,cAAc,CAAG,MAAKb,KAAL,CAAWa,cAAX,EAA6B,EAApD,CACA,GAAIkF,CAAAA,OAAO,CAAG,KAAd,CACA,GAAIC,CAAAA,eAAe,CAAG,KAAtB,CACA,GAAIC,CAAAA,eAAe,CAAG,CAAC,CAAvB,CACA,GAAIC,CAAAA,YAAY,CAAG,CAAC,CAApB,CAEA,GAAIC,CAAAA,YAAY,CAAG,KAAnB,CACA,GAAIC,CAAAA,UAAU,CAAG,KAAjB,CACA,GAAIC,CAAAA,kBAAkB,CAAG,KAAzB,CACA;AACA;AAEA,GAAIC,CAAAA,QAAQ,CAAG,KAAf,CACA,GAAIC,CAAAA,gBAAgB,CAAG,KAAvB,CACA;AACA;AACA,GAAMC,CAAAA,eAAe,CAAG7F,QAAQ,CAAC,MAAKR,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B4E,mBAA5B,CAAgDD,eAAjD,CAAhC,CACA,GAAME,CAAAA,UAAU,CAAG,CACfC,KAAK,CAAElB,OAAO,CAACkB,KADA,CAEfC,MAAM,CAAEnB,OAAO,CAACmB,MAFD,CAGfC,eAAe,CAAEpB,OAAO,CAACqB,WAHV,CAIfC,KAAK,CAAE1B,SAAS,CAAC0B,KAJF,CAKf7D,IAAI,CAAEmC,SAAS,CAACnC,IALD,CAMfzB,KAAK,CAAEqE,SANQ,CAOfkB,iBAAiB,CAAEvB,OAAO,CAACwB,IAPZ,CAAnB,CASA,GAAI5B,SAAJ,CAAe,CACXxE,cAAc,CAACiF,SAAD,CAAd,CAA4BT,SAA5B,CACH,CAFD,IAEO,CACHxE,cAAc,CAACiF,SAAD,CAAd,CAA4B,EAA5B,CACH,CACD,GAAIL,OAAO,CAACwB,IAAR,GAAiB,SAArB,CAAgC,CAC5B,GAAMC,CAAAA,eAAe,CAAG,MAAK/G,KAAL,CAAWgH,eAAX,CAA2BC,MAA3B,CAAkC,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACJ,IAAF,GAAW,kBAAf,EAAnC,CAAxB,CACA,GAAMK,CAAAA,kBAAkB,CAAGzG,cAAc,CAACqG,eAAe,CAAC,CAAD,CAAf,CAAmBzF,KAApB,CAAd,EACvBZ,cAAc,CAACqG,eAAe,CAAC,CAAD,CAAf,CAAmBzF,KAApB,CAAd,CAAyC,MAAzC,EAAiD,UAAjD,EAA6D,oBAA7D,CADJ,CAEAwE,eAAe,CAAGpF,cAAc,CAACqG,eAAe,CAAC,CAAD,CAAf,CAAmBzF,KAApB,CAAd,EACdZ,cAAc,CAACqG,eAAe,CAAC,CAAD,CAAf,CAAmBzF,KAApB,CAAd,CAAyCsF,KAD7C,CAEA,GAAIO,kBAAkB,GAAK,CAA3B,CAA8B,CAC1BvB,OAAO,CAAG,IAAV,CACAG,YAAY,CAAGrF,cAAc,CAACiF,SAAD,CAAd,EACXjF,cAAc,CAACiF,SAAD,CAAd,CAA0BiB,KAD9B,CAEH,CAEJ,CAZD,IAaK,IAAItB,OAAO,CAACwB,IAAR,GAAiB,YAArB,CAAmC,CACpC,GAAMM,CAAAA,kBAAkB,CAAG,MAAKpH,KAAL,CAAWgH,eAAX,CAA2BC,MAA3B,CAAkC,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACJ,IAAF,GAAW,qBAAf,EAAnC,CAA3B,CACA,GAAMK,CAAAA,mBAAkB,CAAGzG,cAAc,CAAC0G,kBAAkB,CAAC,CAAD,CAAlB,CAAsB9F,KAAvB,CAAd,EACvBZ,cAAc,CAAC0G,kBAAkB,CAAC,CAAD,CAAlB,CAAsB9F,KAAvB,CAAd,CAA4C,MAA5C,EAAoD,UAApD,EAAgE,oBAAhE,CADJ,CAEAwE,eAAe,CAAGpF,cAAc,CAAC0G,kBAAkB,CAAC,CAAD,CAAlB,CAAsB9F,KAAvB,CAAd,EACdZ,cAAc,CAAC0G,kBAAkB,CAAC,CAAD,CAAlB,CAAsB9F,KAAvB,CAAd,CAA4CsF,KADhD,CAEA,GAAIO,mBAAkB,GAAK,CAA3B,CAA8B,CAC1BlB,UAAU,CAAG,IAAb,CACAF,YAAY,CAAGrF,cAAc,CAACiF,SAAD,CAAd,EACXjF,cAAc,CAACiF,SAAD,CAAd,CAA0BiB,KAD9B,CAEH,CAEJ,CAZI,IAaA,IAAItB,OAAO,CAACwB,IAAR,GAAiB,UAArB,CAAiC,CAClC,GAAMO,CAAAA,gBAAgB,CAAG,MAAKrH,KAAL,CAAWgH,eAAX,CAA2BC,MAA3B,CAAkC,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACJ,IAAF,GAAW,mBAAf,EAAnC,CAAzB,CACA,GAAMK,CAAAA,oBAAkB,CAAGzG,cAAc,CAAC2G,gBAAgB,CAAC,CAAD,CAAhB,CAAoB/F,KAArB,CAAd,EACvBZ,cAAc,CAAC2G,gBAAgB,CAAC,CAAD,CAAhB,CAAoB/F,KAArB,CAAd,CAA0C,MAA1C,EAAkD,UAAlD,EAA8D,oBAA9D,CADJ,CAEAwE,eAAe,CAAGpF,cAAc,CAAC2G,gBAAgB,CAAC,CAAD,CAAhB,CAAoB/F,KAArB,CAAd,EACdZ,cAAc,CAAC2G,gBAAgB,CAAC,CAAD,CAAhB,CAAoB/F,KAArB,CAAd,CAA0CsF,KAD9C,CAEA,GAAIO,oBAAkB,GAAK,CAA3B,CAA8B,CAC1BhB,QAAQ,CAAG,IAAX,CACAJ,YAAY,CAAGrF,cAAc,CAACiF,SAAD,CAAd,EACXjF,cAAc,CAACiF,SAAD,CAAd,CAA0BiB,KAD9B,CAEH,CAEJ,CAZI,IAaA,IAAItB,OAAO,CAACwB,IAAR,GAAiB,kBAArB,CAAyC,CAC1C,GAAMQ,CAAAA,OAAO,CAAG,MAAKtH,KAAL,CAAWgH,eAAX,CAA2BC,MAA3B,CAAkC,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACJ,IAAF,GAAW,SAAf,EAAnC,CAAhB,CACAhB,eAAe,CAAGZ,SAAS,CAAC0B,KAA5B,CACA,GAAMO,CAAAA,oBAAkB,CAAGjC,SAAS,EAChCA,SAAS,CAAC,MAAD,CAAT,CAAkB,UAAlB,EAA8B,oBAA9B,CADJ,CAEA,GAAIiC,oBAAkB,GAAK,CAA3B,CAA8B,CAC1BtB,eAAe,CAAG,IAAlB,CACH,CAFD,IAEO,CACHU,UAAU,CAAC,aAAD,CAAV,CAA4Be,OAAO,CAAC,CAAD,CAAP,CAAWhG,KAAvC,CACA;AACA;AACAsE,OAAO,CAAG,IAAV,CACH,CACJ,CAbI,IAcA,IAAIN,OAAO,CAACwB,IAAR,GAAiB,qBAArB,CAA4C,CAC7C,GAAMS,CAAAA,UAAU,CAAG,MAAKvH,KAAL,CAAWgH,eAAX,CAA2BC,MAA3B,CAAkC,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACJ,IAAF,GAAW,YAAf,EAAnC,CAAnB,CACAhB,eAAe,CAAGZ,SAAS,CAAC0B,KAA5B,CACA,GAAMO,CAAAA,oBAAkB,CAAGjC,SAAS,EAChCA,SAAS,CAAC,MAAD,CAAT,CAAkB,UAAlB,EAA8B,oBAA9B,CADJ,CAEA,GAAIiC,oBAAkB,GAAK,CAA3B,CAA8B,CAC1BjB,kBAAkB,CAAG,IAArB,CACH,CAFD,IAEO,CACHK,UAAU,CAAC,gBAAD,CAAV,CAA+BgB,UAAU,CAAC,CAAD,CAAV,CAAcjG,KAA7C,CACA;AACA;AACA2E,UAAU,CAAG,IAAb,CACH,CACJ,CAbI,IAcA,IAAIX,OAAO,CAACwB,IAAR,GAAiB,mBAArB,CAA0C,CAC3C,GAAMU,CAAAA,QAAQ,CAAG,MAAKxH,KAAL,CAAWgH,eAAX,CAA2BC,MAA3B,CAAkC,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACJ,IAAF,GAAW,UAAf,EAAnC,CAAjB,CACAhB,eAAe,CAAGZ,SAAS,CAAC0B,KAA5B,CACA,GAAMO,CAAAA,oBAAkB,CAAGjC,SAAS,EAChCA,SAAS,CAAC,MAAD,CAAT,CAAkB,UAAlB,EAA8B,oBAA9B,CADJ,CAEA,GAAIiC,oBAAkB,GAAK,CAA3B,CAA8B,CAC1Bf,gBAAgB,CAAG,IAAnB,CACH,CAFD,IAEO,CACHG,UAAU,CAAC,cAAD,CAAV,CAA6BiB,QAAQ,CAAC,CAAD,CAAR,CAAYlG,KAAzC,CACA;AACA;AACA6E,QAAQ,CAAG,IAAX,CACH,CACJ,CAbI,IAcA,IAAIb,OAAO,CAACwB,IAAR,GAAiB,eAArB,CAAsC,CACvC,GAAMO,CAAAA,iBAAgB,CAAG,MAAKrH,KAAL,CAAWgH,eAAX,CAA2BC,MAA3B,CAAkC,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACJ,IAAF,GAAW,mBAAf,EAAnC,CAAzB,CACA;AACA;AACA;AACA;AACA;AACA;AACAP,UAAU,CAAC,sBAAD,CAAV,CAAqCc,iBAAgB,CAAC,CAAD,CAAhB,CAAoB/F,KAAzD,CACA;AACA;AACA0E,YAAY,CAAG,IAAf,CACA;AACH,CAED,GAAIV,OAAO,CAACkB,KAAR,EAAiBlB,OAAO,CAACkB,KAAR,CAAc/C,MAAd,CAAuB,CAA5C,CAA+C,CAC3CgC,cAAc,CAAGxH,0BAA0B,CAAC,MAAK+B,KAAL,CAAWgH,eAAZ,CAA6B1B,OAAO,CAACkB,KAArC,CAA4C,OAA5C,CAA3C,CACAd,eAAe,CAAG,EAAlB,CACAD,cAAc,CAAC5D,GAAf,CAAmB,SAAA4F,UAAU,CAAI,CAC7B,GAAMC,CAAAA,GAAG,CAAG3J,UAAU,CAAC,MAAKiC,KAAL,CAAWgH,eAAZ,CAA6BS,UAA7B,CAAyC/B,eAAzC,CAA0D,KAA1D,CAAtB,CACAA,eAAe,CAAGgC,GAAG,CAAChC,eAAtB,CACA,MAAO,KAAP,CACH,CAJD,EAMAF,UAAU,CAAGvH,0BAA0B,CAAC,MAAK+B,KAAL,CAAW2H,qBAAZ,CAAmCrC,OAAO,CAACkB,KAA3C,CAAkD,OAAlD,CAAvC,CACA,GAAMoB,CAAAA,WAAW,CAAG,CAChB7B,YAAY,CAAZA,YADgB,CACFD,eAAe,CAAfA,eADE,CAEhBO,eAAe,CAAEA,eAFD,CAApB,CAIA,MAAKrG,KAAL,CAAWtB,cAAX,CAA0B6H,UAA1B,CACI,MAAKvG,KAAL,CAAWF,KAAX,CAAiB+H,QADrB,CAC+BnH,cAD/B,CAC+C,MAAKV,KAAL,CAAWF,KAAX,CAAiBoF,SADhE,CAEIO,cAFJ,CAEoBC,eAFpB,CAEqC,MAAK1F,KAAL,CAAW2H,qBAFhD,8BAGQlC,cAHR,qBAG2BD,UAH3B,GAGwCK,eAHxC,CAGyDD,OAHzD,CAGkEgC,WAHlE,CAII1B,kBAJJ,CAIwBD,UAJxB,CAIoCG,gBAJpC,CAIsDD,QAJtD,CAIgEH,YAJhE,EAKH,CAnBD,IAmBO,CAEH;AACA;AACA;AAEA;AACA,GAAIJ,OAAO,EAAIC,eAAX,EAA8BI,UAA9B,EACAE,QADA,EACYC,gBADZ,EACgCF,kBADhC,EACsDF,YAD1D,CACwE,CACpE;AACA;AACA,GAAM4B,CAAAA,YAAW,CAAG,CAChB7B,YAAY,CAAZA,YADgB,CACFD,eAAe,CAAfA,eADE,CAEhBO,eAAe,CAAEA,eAFD,CAApB,CAKA,MAAKrG,KAAL,CAAWtB,cAAX,CAA0B6H,UAA1B,CACI,MAAKvG,KAAL,CAAWF,KAAX,CAAiB+H,QADrB,CAC+BnH,cAD/B,CAC+C,MAAKV,KAAL,CAAWF,KAAX,CAAiBoF,SADhE,CAEIO,cAFJ,CAEoBC,eAFpB,CAEqC,MAAK1F,KAAL,CAAW2H,qBAFhD,8BAGQlC,cAHR,qBAG2BD,UAH3B,GAGwCK,eAHxC,CAGyDD,OAHzD,CAGkEgC,YAHlE,CAII1B,kBAJJ,CAIwBD,UAJxB,CAIoCG,gBAJpC,CAIsDD,QAJtD,EAKH,CAdD,IAcO,CACH,GAAMhC,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CAAE3D,cAAc,CAAdA,cAAF,CAFS,CAAnB,CAIA,MAAKV,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CAGJ,CACJ,CA5jBkB,OA8jBnB2D,eA9jBmB,CA8jBD,SAACC,KAAD,CAAQC,SAAR,CAAsB,CACpC,GAAMtH,CAAAA,cAAc,CAAG,MAAKb,KAAL,CAAWa,cAAX,EAA6B,EAApD,CACA,GAAIqH,KAAK,CAACE,MAAN,CAAaC,IAAb,GAAsB,UAA1B,CAAsC,CAClC,GAAIH,KAAK,CAACE,MAAN,CAAanB,IAAb,GAAsB,UAA1B,CAAsC,CAClCpG,cAAc,CAAC,UAAD,CAAd,CAA6B,KAA7B,CACH,CACD,GAAIqH,KAAK,CAACE,MAAN,CAAanB,IAAb,GAAsB,UAA1B,CAAsC,CAClCpG,cAAc,CAAC,UAAD,CAAd,CAA6B,KAA7B,CACH,CACD,GAAMkG,CAAAA,KAAK,CAAGlG,cAAc,CAACqH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAA5B,CACA,GAAIF,KAAK,GAAK,EAAV,EAAgBA,KAAK,GAAK3D,SAA9B,CAAyC,CACrC,GAAI2D,KAAK,CAACuB,QAAN,CAAeH,SAAf,CAAJ,CAA+B,CAC3B,GAAMI,CAAAA,KAAK,CAAGxB,KAAK,CAACyB,OAAN,CAAcL,SAAd,CAAd,CACA,GAAII,KAAK,GAAK,CAAC,CAAf,CAAkB,CACd,GAAIA,KAAK,GAAK,CAAd,CAAiB,CACb,GAAME,CAAAA,UAAU,CAAG1B,KAAK,CAACyB,OAAN,CAAc,GAAd,CAAnB,CACA,GAAIC,UAAU,GAAK,CAAC,CAApB,CAAuB,CACnB5H,cAAc,CAACqH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAd,CAAoCF,KAAK,CAAC2B,KAAN,CAAYD,UAAU,CAAG,CAAzB,CAApC,CAEH,CAHD,IAGO,CACH5H,cAAc,CAACqH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAd,CAAoC,EAApC,CACH,CACJ,CARD,IAQO,CACH,GAAIF,KAAK,CAAC2B,KAAN,CAAYH,KAAZ,EAAmBC,OAAnB,CAA2B,GAA3B,IAAoC,CAAC,CAAzC,CAA4C,CACxC3H,cAAc,CAACqH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAd,CAAoCF,KAAK,CAAC2B,KAAN,CAAY,CAAZ,CAAeH,KAAf,EAAwBxB,KAAK,CAAC2B,KAAN,CAAYH,KAAK,CAAGxB,KAAK,CAAC2B,KAAN,CAAYH,KAAZ,EAAmBC,OAAnB,CAA2B,GAA3B,CAAR,CAA0C,CAAtD,CAA5D,CACH,CAFD,IAEO,CACH3H,cAAc,CAACqH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAd,CAAoCF,KAAK,CAAC2B,KAAN,CAAY,CAAZ,CAAeH,KAAK,CAAG,CAAvB,CAApC,CACH,CAEJ,CACJ,CAEJ,CArBD,IAqBO,CACH1H,cAAc,CAACqH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAd,CAAoCF,KAAK,CAAG,GAAR,CAAcoB,SAAlD,CACH,CAEJ,CA1BD,IA0BO,CACHtH,cAAc,CAACqH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAd,CAAoCkB,SAApC,CACH,CACJ,CArCD,IAsCK,IAAID,KAAK,CAACE,MAAN,CAAaC,IAAb,GAAsB,OAA1B,CAAmC,CACpCxH,cAAc,CAACqH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAd,CAAoCkB,SAApC,CACH,CAFI,IAGA,CACDtH,cAAc,CAACqH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAd,CAAoCiB,KAAK,CAACE,MAAN,CAAarB,KAAjD,CACH,CACD,MAAKxB,QAAL,CAAc,CAAE1E,cAAc,CAAdA,cAAF,CAAd,EACH,CA7mBkB,OA+mBnB8H,wBA/mBmB,CA+mBQ,SAACT,KAAD,CAAQC,SAAR,CAAsB,CAC7C,GAAMpH,CAAAA,eAAe,CAAG,MAAKf,KAAL,CAAWe,eAAX,EAA8B,EAAtD,CACA,GAAImH,KAAK,CAACE,MAAN,CAAaC,IAAb,GAAsB,UAA1B,CAAsC,CAClC,GAAIH,KAAK,CAACE,MAAN,CAAanB,IAAb,GAAsB,UAA1B,CAAsC,CAClClG,eAAe,CAAC,UAAD,CAAf,CAA8B,KAA9B,CACH,CACD,GAAImH,KAAK,CAACE,MAAN,CAAanB,IAAb,GAAsB,UAA1B,CAAsC,CAClClG,eAAe,CAAC,UAAD,CAAf,CAA8B,KAA9B,CACH,CACD,GAAMgG,CAAAA,KAAK,CAAGhG,eAAe,CAACmH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAA7B,CACA,GAAIF,KAAK,GAAK,EAAV,EAAgBA,KAAK,GAAK3D,SAA9B,CAAyC,CACrC,GAAI2D,KAAK,CAACuB,QAAN,CAAeH,SAAf,CAAJ,CAA+B,CAC3B,GAAMI,CAAAA,KAAK,CAAGxB,KAAK,CAACyB,OAAN,CAAcL,SAAd,CAAd,CACA,GAAII,KAAK,GAAK,CAAC,CAAf,CAAkB,CACd,GAAIA,KAAK,GAAK,CAAd,CAAiB,CACb,GAAME,CAAAA,UAAU,CAAG1B,KAAK,CAACyB,OAAN,CAAc,GAAd,CAAnB,CACA,GAAIC,UAAU,GAAK,CAAC,CAApB,CAAuB,CACnB1H,eAAe,CAACmH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAf,CAAqCF,KAAK,CAAC2B,KAAN,CAAYD,UAAU,CAAG,CAAzB,CAArC,CAEH,CAHD,IAGO,CACH1H,eAAe,CAACmH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAf,CAAqC,EAArC,CACH,CACJ,CARD,IAQO,CACH;AACA,GAAIF,KAAK,CAAC2B,KAAN,CAAYH,KAAZ,EAAmBC,OAAnB,CAA2B,GAA3B,IAAoC,CAAC,CAAzC,CAA4C,CACxCzH,eAAe,CAACmH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAf,CAAqCF,KAAK,CAAC2B,KAAN,CAAY,CAAZ,CAAeH,KAAf,EAAwBxB,KAAK,CAAC2B,KAAN,CAAYH,KAAK,CAAGxB,KAAK,CAAC2B,KAAN,CAAYH,KAAZ,EAAmBC,OAAnB,CAA2B,GAA3B,CAAR,CAA0C,CAAtD,CAA7D,CACH,CAFD,IAEO,CACHzH,eAAe,CAACmH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAf,CAAqCF,KAAK,CAAC2B,KAAN,CAAY,CAAZ,CAAeH,KAAK,CAAG,CAAvB,CAArC,CACH,CAEJ,CACJ,CAEJ,CAtBD,IAsBO,CACHxH,eAAe,CAACmH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAf,CAAqCF,KAAK,CAAG,GAAR,CAAcoB,SAAnD,CACH,CAEJ,CA3BD,IA2BO,CACHpH,eAAe,CAACmH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAf,CAAqCkB,SAArC,CACH,CACJ,CAtCD,IAuCK,CACDpH,eAAe,CAACmH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAf,CAAqCiB,KAAK,CAACE,MAAN,CAAarB,KAAlD,CACH,CACD,MAAKxB,QAAL,CAAc,CAAExE,eAAe,CAAfA,eAAF,CAAd,EACH,CA5pBkB,OA+pBnB6H,sBA/pBmB,CA+pBM,SAACvD,SAAD,CAAYI,OAAZ,CAAqBC,UAArB,CAAoC,CACzD,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,cAAc,CAAG,EAArB,CACA,GAAIC,CAAAA,eAAe,CAAG,EAAtB,CAEA,GAAIC,CAAAA,SAAS,CAAGJ,UAAU,EAAID,OAAO,CAAChE,KAAtC,CACA,GAAMV,CAAAA,eAAe,CAAG,MAAKf,KAAL,CAAWe,eAAX,EAA8B,EAAtD,CACA,GAAM2F,CAAAA,UAAU,CAAG,CACfC,KAAK,CAAElB,OAAO,CAACkB,KADA,CAEfC,MAAM,CAAEnB,OAAO,CAACmB,MAFD,CAGfC,eAAe,CAAEpB,OAAO,CAACqB,WAHV,CAIfC,KAAK,CAAE1B,SAAS,CAAC0B,KAJF,CAKf7D,IAAI,CAAEmC,SAAS,CAACnC,IALD,CAMfzB,KAAK,CAAEqE,SANQ,CAOfkB,iBAAiB,CAAEvB,OAAO,CAACwB,IAPZ,CAAnB,CASA,GAAI5B,SAAJ,CAAe,CACXtE,eAAe,CAAC+E,SAAD,CAAf,CAA6BT,SAA7B,CACH,CAFD,IAEO,CACHtE,eAAe,CAAC+E,SAAD,CAAf,CAA6B,EAA7B,CACH,CACD,GAAIL,OAAO,CAACkB,KAAR,EAAiBlB,OAAO,CAACkB,KAAR,CAAc/C,MAAd,CAAuB,CAA5C,CAA+C,CAC3CgC,cAAc,CAAGxH,0BAA0B,CAAC,MAAK4B,KAAL,CAAWkB,wBAAZ,CACvCuE,OAAO,CAACkB,KAD+B,CACxB,OADwB,CAA3C,CAEAd,eAAe,CAAG,EAAlB,CACAA,eAAe,CAAGD,cAAc,CAAC5D,GAAf,CAAmB,SAAA4F,UAAU,CAAI,CAC/C,GAAMC,CAAAA,GAAG,CAAG3J,UAAU,CAAC,MAAK8B,KAAL,CAAWkB,wBAAZ,CAClB0G,UADkB,CACN/B,eADM,CACW,KADX,CAAtB,CAEA,MAAOgC,CAAAA,GAAG,CAAChC,eAAX,CACH,CAJiB,CAAlB,CAMAF,UAAU,CAAGvH,0BAA0B,CAAC,MAAK4B,KAAL,CAAWmB,8BAAZ,CACnCsE,OAAO,CAACkB,KAD2B,CACpB,OADoB,CAAvC,CAGA,MAAKxG,KAAL,CAAWtB,cAAX,CAA0B6H,UAA1B,CACI,MAAKvG,KAAL,CAAWF,KAAX,CAAiB+H,QADrB,CAC+BjH,eAD/B,CACgD,MAAKZ,KAAL,CAAWF,KAAX,CAAiB4I,kBADjE,CAEIjD,cAFJ,CAEoBC,eAFpB,CAEqC,MAAK7F,KAAL,CAAWmB,8BAFhD,8BAGQyE,cAHR,qBAG2BD,UAH3B,IAIH,CAjBD,IAiBO,CAEH,GAAMrB,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CAAEzD,eAAe,CAAfA,eAAF,CAFS,CAAnB,CAIA,MAAKZ,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CACJ,CA7sBkB,OA+sBnBwE,oBA/sBmB,CA+sBI,SAAC/B,KAAD,CAAQE,IAAR,CAAiB,CACpC,GAAIpG,CAAAA,cAAc,CAAG,MAAKb,KAAL,CAAWa,cAAhC,CACAA,cAAc,CAACoG,IAAD,CAAd,CAAuBF,KAAvB,CACA,MAAKxB,QAAL,CAAc,CAAE1E,cAAc,CAAdA,cAAF,CAAd,EACH,CAntBkB,OAqtBnBkI,6BArtBmB,CAqtBa,SAAChC,KAAD,CAAQE,IAAR,CAAiB,CAC7C,GAAIlG,CAAAA,eAAe,CAAG,MAAKf,KAAL,CAAWe,eAAjC,CACAA,eAAe,CAACkG,IAAD,CAAf,CAAwBF,KAAxB,CACA,MAAKxB,QAAL,CAAc,CAAExE,eAAe,CAAfA,eAAF,CAAd,EACH,CAztBkB,OA2tBnBiI,oBA3tBmB,CA2tBI,SAACC,SAAD,CAAYC,QAAZ,CAAsBrE,UAAtB,CAAqC,CACxD,GAAQhE,CAAAA,cAAR,CAA2B,MAAKb,KAAhC,CAAQa,cAAR,CACA,GAAIgE,UAAU,GAAK,WAAnB,CAAgC,CAC5B,GAAM9D,CAAAA,eAAe,CAAG,MAAKf,KAAL,CAAWe,eAAnC,CACAA,eAAe,CAACmI,QAAD,CAAf,CAA4BD,SAA5B,CACA,GAAM3E,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACFzD,eAAe,CAAfA,eADE,CAFS,CAAnB,CAMA,MAAKZ,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CAVD,IAUO,CACHzD,cAAc,CAACqI,QAAD,CAAd,CAA2BD,SAA3B,CACA,MAAK1D,QAAL,CAAc,CAAE1E,cAAc,CAAdA,cAAF,CAAd,EACH,CAEJ,CA5uBkB,OA8uBnBsI,gBA9uBmB,CA8uBA,SAACF,SAAD,CAAYC,QAAZ,CAAyB,CACxC,GAAQrI,CAAAA,cAAR,CAA2B,MAAKb,KAAhC,CAAQa,cAAR,CACAA,cAAc,CAACqI,QAAD,CAAd,CAA2BD,SAA3B,CACA,MAAK1D,QAAL,CAAc,CAAE1E,cAAc,CAAdA,cAAF,CAAd,EACH,CAlvBkB,OAovBnBuI,yBApvBmB,CAovBS,SAACH,SAAD,CAAYC,QAAZ,CAAyB,CACjD,GAAQnI,CAAAA,eAAR,CAA4B,MAAKf,KAAjC,CAAQe,eAAR,CACAA,eAAe,CAACmI,QAAD,CAAf,CAA4BD,SAA5B,CACA,MAAK1D,QAAL,CAAc,CAAExE,eAAe,CAAfA,eAAF,CAAd,EACH,CAxvBkB,OAu2BnBsI,UAv2BmB,CAu2BN,UAAM,CACf,GAAIC,CAAAA,UAAU,CAAG,CAAC,MAAKtJ,KAAL,CAAWsJ,UAA7B,CACA,MAAK/D,QAAL,CAAc,CACV+D,UAAU,CAAVA,UADU,CAAd,EAGH,CA52BkB,OA82BnBC,WA92BmB,CA82BL,UAAM,CAEhB,MAAKhE,QAAL,CAAc,CACV+D,UAAU,CAAE,KADF,CAAd,EAGH,CAn3BkB,OAo3BnBE,OAp3BmB,CAo3BT,SAACC,CAAD,CAAO,CACb;AACA;AACA;AACA,GAAMnF,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACF1B,QAAQ,CAAE,IADR,CAEF+B,UAAU,CAAE,eAFV,CAFS,CAAnB,CAOA,MAAK1E,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CAh4BkB,OAu4BnBoF,YAv4BmB,CAu4BJ,SAACjF,iBAAD,CAAoBkF,cAApB,CAAoCtI,kBAApC,CAA2D,CACtE,GAAIsI,cAAJ,CAAoB,CAChB,GAAIlF,iBAAiB,EAAImF,MAAM,CAACC,IAAP,CAAYpF,iBAAZ,EAA+Bb,MAA/B,CAAwC,CAAjE,CAAoE,CAChE,MAAOa,CAAAA,iBAAiB,CAAC,UAAD,CAAxB,CACA,MAAKtE,KAAL,CAAWjB,OAAX,CAAmBuF,iBAAnB,CAAsC,MAAKtE,KAAL,CAAWF,KAAjD,CACI0J,cADJ,CACoBtI,kBADpB,EAEH,CAJD,IAIO,CACHxD,KAAK,CAACiM,IAAN,CAAW,MAAK3J,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE+G,cAAc,CAAG,8BAAH,CAAoC,8BAAxD,CAA9B,CAAX,EACH,CACJ,CARD,IAQO,CACH,GAAMI,CAAAA,kBAAkB,CAAG,CACvBC,iBAAiB,CAAE,MAAKhK,KAAL,CAAWc,YAAX,CAAwB,mBAAxB,EAA+C,MAAKd,KAAL,CAAWc,YAAX,CAAwB,mBAAxB,EAA6CiG,KAA5F,CAAoG,CAAC,CADjG,CAEvBkD,IAAI,CAAE,CAFiB,CAA3B,CAIA,MAAK9J,KAAL,CAAWjB,OAAX,CAAmB6K,kBAAnB,CACI,MAAK5J,KAAL,CAAWF,KADf,CAEI0J,cAFJ,CAEoBtI,kBAFpB,EAGH,CACJ,CAz5BkB,OA25BnB6I,SA35BmB,CA25BP,SAACT,CAAD,CAAO,CACf;AACA;AACA;AACA;AACA;AACA,GAAMnF,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACF1B,QAAQ,CAAE,KADR,CAEFjC,cAAc,gCAAO,MAAKb,KAAL,CAAWa,cAAlB,EAAqC,MAAKb,KAAL,CAAWc,YAAhD,CAFZ,CAGF+D,UAAU,CAAE,MAAK1E,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BiD,mBAA5B,CAAgDC,eAH1D,CAFS,CAAnB,CASA,MAAK5E,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CA36BkB,OA66BnB6F,cA76BmB,CA66BF,SAACV,CAAD,CAAO,CACpB,GAAMnF,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACF7C,aAAa,CAAE,KADb,CAEFZ,eAAe,CAAE,EAFf,CAFS,CAAnB,CAOA,MAAKZ,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CAt7BkB,OAw7BnB8F,SAx7BmB,CAw7BP,SAACX,CAAD,CAAO,CACf,GAAMnF,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACF3B,QAAQ,CAAE,KADR,CAEF5B,gBAAgB,CAAE,EAFhB,CAGF4D,UAAU,CAAE,MAAK1E,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BiD,mBAA5B,CAAgDC,eAH1D,CAFS,CAAnB,CAQA,MAAK5E,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CAl8BkB,OAo8BnB+F,cAp8BmB,CAo8BF,SAACZ,CAAD,CAAO,CACpB,GAAMnF,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACF5C,aAAa,CAAE,KADb,CAEF0I,iBAAiB,CAAE,EAFjB,CAGFC,gBAAgB,CAAE,KAHhB,CAIFxJ,eAAe,CAAE,EAJf,CAKFE,gBAAgB,CAAE,EALhB,CAMF4D,UAAU,CAAE,MAAK1E,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BiD,mBAA5B,CAAgDC,eAN1D,CAFS,CAAnB,CAWA,MAAK5E,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CAj9BkB,OAk9BnBkG,YAl9BmB,CAk9BJ,SAACtC,KAAD,CAAQ5C,SAAR,CAAsB,CACjC,GAAI4C,KAAK,GAAK,IAAd,CAAoB,CAChB,GAAMrH,CAAAA,cAAc,CAAG,MAAKb,KAAL,CAAWa,cAAlC,CACA;AACA;AACAA,cAAc,CAAC,UAAD,CAAd,CAA6BF,QAAQ,CAACuH,KAAK,CAAChF,IAAN,CAAWuH,QAAZ,CAArC,CACA5J,cAAc,CAAC,mBAAD,CAAd,CAAsCqH,KAAtC,CACA;AACA,MAAK3C,QAAL,CAAc,CAAE1E,cAAc,CAAdA,cAAF,CAAd,EACA;AACA;AACA;AACA;AACA;AACA;AAEH,CACJ,CAn+BkB,OAq+BnB6J,WAr+BmB,CAq+BL,SAACxC,KAAD,CAAW,CACrB,GAAMyC,CAAAA,UAAU,CAAG,CACfC,SAAS,CAAE,wBADI,CAEf/F,UAAU,CAAE,kBAFG,CAGfgG,SAAS,CAAE,KAHI,CAIfC,SAAS,CAAE5C,KAAK,CAAC6C,GAJF,CAKfC,QAAQ,CAAE9C,KAAK,CAAC6C,GALD,CAMfE,OAAO,CAAE,0BANM,CAOfC,QAAQ,CAAE,MAAK/K,KAAL,CAAWF,KAAX,CAAiB+H,QAPZ,CAQfmD,YAAY,CAAEjD,KAAK,CAAChF,IARL,CASfrC,cAAc,CAAE,MAAKb,KAAL,CAAWa,cATZ,CAWfuK,UAAU,CAAElD,KAAK,CAACkD,UAXH,CAAnB,CAaA,GAAIlD,KAAK,CAACkD,UAAN,GAAqB,MAAKpL,KAAL,CAAWa,cAAX,CAA0B,2BAA1B,CAAzB,CAAiF,CAC7E,MAAKV,KAAL,CAAWrB,sBAAX,CAAkC6L,UAAlC,CAA8C,MAAKxK,KAAL,CAAWF,KAAX,CAAiB4B,UAA/D,EACH,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAhgCkB,OAmgCnBwJ,uBAngCmB,CAmgCO,SAACnD,KAAD,CAAW,CACjC,GAAIzD,CAAAA,iBAAiB,CAAGyD,KAAK,CAACoD,QAA9B,CACA,GAAI5G,CAAAA,YAAY,CAAG,MAAKvE,KAAL,CAAWF,KAAX,CAAiB0E,IAAjB,EAAyB,MAAKxE,KAAL,CAAWF,KAAX,CAAiB0E,IAAjB,CAAsBF,iBAAiB,CAACwF,IAAxC,CAAzB,CAAyE,MAAK9J,KAAL,CAAWF,KAAX,CAAiB0E,IAAjB,CAAsBF,iBAAiB,CAACwF,IAAxC,CAAzE,CAAyH,EAA5I,CACA,GAAM3F,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACFE,YAAY,CAAZA,YADE,CACYD,iBAAiB,CAAjBA,iBADZ,CAEFlE,aAAa,CAAE,CACXC,IAAI,CAAE,CADK,CACFC,IAAI,CAAE,MAAKN,KAAL,CAAWF,KAAX,CAAiBS,QAAjB,CACXC,QAAQ,CAAC,MAAKR,KAAL,CAAWF,KAAX,CAAiBS,QAAjB,CAA0B,EAA1B,CAAD,CADG,CAC+B,CAFnC,CAFb,CAFS,CAAnB,CAUA,MAAKP,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EAEH,CAlhCkB,OAqhCnBiH,YArhCmB,CAqhCJ,UAAM,CACjB,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACA,GAAI,MAAKxL,KAAL,CAAWc,YAAX,CAAwBkJ,iBAAxB,GAA8C5G,SAA9C,EACG,MAAKpD,KAAL,CAAWc,YAAX,CAAwBkJ,iBAAxB,GAA8C,EADrD,CACyD,CACrDwB,GAAG,CAAC,2BAAD,CAAH,CAAmC,MAAKxL,KAAL,CAAWc,YAAX,CAAwB2K,yBAA3D,CACAD,GAAG,CAAC,mBAAD,CAAH,CAA2B,MAAKxL,KAAL,CAAWc,YAAX,CAAwBkJ,iBAAxB,CAA0CjD,KAArE,CACAyE,GAAG,CAAC,cAAD,CAAH,CAAsB,MAAKrL,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B6J,gBAA5B,CAA6CC,YAAnE,CACAH,GAAG,CAAC,cAAD,CAAH,CAAsB,KAAtB,CACAA,GAAG,CAAC,UAAD,CAAH,CAAkB,MAAKrL,KAAL,CAAWF,KAAX,CAAiB+H,QAAnC,CACA,MAAK7H,KAAL,CAAWpB,aAAX,CAAyByM,GAAzB,EACH,CARD,IAQO,CACH3N,KAAK,CAACiM,IAAN,CAAW,MAAK3J,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,yBAAN,CAA9B,CAAX,EACH,CAEJ,CAniCkB,OAqiCnBgJ,iBAriCmB,CAqiCC,SAACvG,SAAD,CAAYC,SAAZ,CAAuBqE,cAAvB,CAA0C,CAC1D,GAAItE,SAAS,GAAK,IAAlB,CAAwB,CACpB;AACA,GAAMtE,CAAAA,eAAe,CAAG,MAAKf,KAAL,CAAWe,eAAX,EAA8B,EAAtD,CACA,GAAIuE,SAAS,GAAK,iBAAlB,CAAqC,CACjCvE,eAAe,CAAC,iBAAD,CAAf,CAAqCsE,SAArC,CACA,MAAKE,QAAL,CAAc,CAAExE,eAAe,CAAfA,eAAF,CAAd,EACH,CAHD,IAGO,CACH;AACA;AACA;AACA;AACAA,eAAe,CAACuE,SAAD,CAAf,CAA6BD,SAA7B,CACAtE,eAAe,CAAC,aAAD,CAAf,CAAiCsE,SAAS,CAAC5D,KAA3C,CACAV,eAAe,CAAC,qBAAD,CAAf,CAAyCsE,SAAS,CAACnC,IAAV,CAAe2I,mBAAxD,CACA,MAAK1L,KAAL,CAAWX,aAAX,CAAyBuB,eAAzB,CAA0C,KAA1C,CAAiD,MAAKf,KAAL,CAAWqB,kBAA5D,CACI,MAAKlB,KAAL,CAAWF,KAAX,CAAiB2E,SADrB,EAEH,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAEJ,CAvkCkB,OAwkCnBkH,wBAxkCmB,CAwkCQ,SAAC5D,KAAD,CAAW,CAClC,GAAMnH,CAAAA,eAAe,CAAG,MAAKf,KAAL,CAAWe,eAAX,EAA8B,EAAtD,CACA,GAAImH,KAAK,CAACE,MAAN,CAAaC,IAAb,GAAsB,UAA1B,CAAsC,CAClCtH,eAAe,CAACmH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAf,CAAqCiB,KAAK,CAACE,MAAN,CAAa2D,OAAb,GAAyB,IAAzB,CAAgC,CAAhC,CAAoC,CAAzE,CACH,CAFD,IAGK,CACDhL,eAAe,CAACmH,KAAK,CAACE,MAAN,CAAanB,IAAd,CAAf,CAAqCiB,KAAK,CAACE,MAAN,CAAarB,KAAlD,CACH,CACD,MAAKxB,QAAL,CAAc,CAAExE,eAAe,CAAfA,eAAF,CAAd,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAxlCkB,OA0lCnBiE,oBA1lCmB,CA0lCI,SAACzD,QAAD,CAAWnB,OAAX,CAAuB,CAC1C,GAAM4L,CAAAA,cAAc,CAAG,MAAK7L,KAAL,CAAWF,KAAX,CAAiB+L,cAAxC,CACA,GAAIA,cAAc,GAAK,QAAvB,CAAiC,CAC7B,GAAIzK,QAAQ,GAAK,CAAjB,CAAoB,CAChB,MAAK0K,wBAAL,GACH,CAFD,IAEO,IAAI1K,QAAQ,GAAK,CAAjB,CAAoB,CACvB,MAAK2K,eAAL,GACH,CACJ,CAND,IAMO,CACH,GAAMtH,CAAAA,SAAS,CAAG,MAAKzE,KAAL,CAAWF,KAAX,CAAiB2E,SAAnC,CACA,GAAMD,CAAAA,IAAI,CAAG,MAAKxE,KAAL,CAAWF,KAAX,CAAiB0E,IAA9B,CACA,GAAMwH,CAAAA,YAAY,CAAG,MAAKnM,KAAL,CAAWa,cAAX,CAA0BuL,kBAA/C,CAEA,GAAI3H,CAAAA,iBAAiB,kBAAQ,MAAKzE,KAAL,CAAWe,eAAnB,CAArB,CACA,GAAIsL,CAAAA,YAAY,CAAG,EAAnB,CACAA,YAAY,CAAC,gBAAD,CAAZ,CAAiC5H,iBAAiB,CAAC,gBAAD,CAAjB,CAAoChD,KAArE,CACA4K,YAAY,CAAC,gBAAD,CAAZ,CAAiC5H,iBAAiB,CAAC,gBAAD,CAAjB,CAAsCA,iBAAiB,CAAC,gBAAD,CAAjB,CAAoCsC,KAA1E,CAAkF,CAAC,CAApH,CACA,GAAMuF,CAAAA,aAAa,CAAG7H,iBAAiB,CAAC,eAAD,CAAvC,CACA4H,YAAY,CAAC,eAAD,CAAZ,CAAgCC,aAAhC,CACAD,YAAY,CAAC,eAAD,CAAZ,CAAgClO,uBAAuB,CAACmO,aAAD,CAAgB,MAAKnM,KAAL,CAAWF,KAAX,CAAiB+H,QAAjC,CAAvD,CACAqE,YAAY,CAAC,iBAAD,CAAZ,CAAkC5H,iBAAiB,CAAC,iBAAD,CAAjB,CAAuCA,iBAAiB,CAAC,iBAAD,CAAjB,CAAqCsC,KAA5E,CAAoF,CAAC,CAAvH,CACAsF,YAAY,CAAC,iBAAD,CAAZ,CAAkC5H,iBAAiB,CAAC,iBAAD,CAAjB,CAAuCA,iBAAiB,CAAC,iBAAD,CAAjB,CAAqChD,KAA5E,CAAoF,EAAtH,CACA4K,YAAY,CAAC,UAAD,CAAZ,CAA2B,EAA3B,CACA5H,iBAAiB,gCAAQA,iBAAR,EAA8B4H,YAA9B,CAAjB,CAEA,GAAM9D,CAAAA,KAAK,CAAG3D,SAAS,CAAC2H,SAAV,CAAoB,SAAAlF,CAAC,QAAIA,CAAAA,CAAC,CAAC4C,IAAF,GAAWxF,iBAAiB,CAACwF,IAAjC,EAArB,CAAd,CACA,GAAI1B,KAAK,CAAG,CAAC,CAAb,CAAgB,CACZ3D,SAAS,CAAC4H,MAAV,CAAiBjE,KAAjB,CAAwB,CAAxB,CAA2B9D,iBAA3B,EACH,CACD,GAAI0H,YAAY,GAAK,CAArB,CAAwB,CACpB,MAAKhM,KAAL,CAAWsM,wBAAX,CAAoC7H,SAApC,CAA+CH,iBAA/C,CAAkE,MAAKtE,KAAL,CAAWF,KAA7E,EACH,CAFD,IAGK,IAAIwE,iBAAiB,CAAC,cAAD,CAAjB,GAAsC,IAA1C,CAAgD,CACjD,MAAKtE,KAAL,CAAWsM,wBAAX,CAAoC7H,SAApC,CAA+CH,iBAA/C,CAAkE,MAAKtE,KAAL,CAAWF,KAA7E,CAAoF,IAApF,EACH,CAFI,IAEE,CACH,MAAOwE,CAAAA,iBAAiB,CAACiI,YAAzB,CACA,GAAMpI,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACFI,SAAS,CAATA,SADE,CACSH,iBAAiB,CAAEA,iBAD5B,CAC+C9C,aAAa,CAAE,KAD9D,CACqEgL,cAAc,CAAE,KADrF,CAEF5L,eAAe,CAAEqC,SAFf,CAE0BwJ,eAAe,CAAE,IAF3C,CAEiDjI,IAAI,CAAJA,IAFjD,CAEuDD,YAAY,CAAEC,IAAI,CAACF,iBAAiB,CAACwF,IAAnB,CAFzE,CAFS,CAAnB,CAOA,MAAK9J,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CACJ,CAEJ,CAzoCkB,OAwsCnBY,oBAxsCmB,CAwsCI,SAAC3D,QAAD,CAAWnB,OAAX,CAAuB,CAC1C,GAAM4L,CAAAA,cAAc,CAAG,MAAK7L,KAAL,CAAWF,KAAX,CAAiB+L,cAAxC,CACA,GAAIA,cAAc,GAAK,QAAvB,CAAiC,CAC7B,GAAIzK,QAAQ,GAAK,CAAjB,CAAoB,CAChB,MAAKsL,wBAAL,GACH,CAFD,IAEO,IAAItL,QAAQ,GAAK,CAAjB,CAAoB,CACvB,MAAKuL,eAAL,GACH,CACJ,CAND,IAMO,CACH,GAAMlI,CAAAA,SAAS,CAAG,MAAKzE,KAAL,CAAWF,KAAX,CAAiB2E,SAAnC,CACA,GAAMD,CAAAA,IAAI,CAAG,MAAKxE,KAAL,CAAWF,KAAX,CAAiB0E,IAA9B,CACA,GAAMwH,CAAAA,YAAY,CAAG,MAAKnM,KAAL,CAAWa,cAAX,CAA0BuL,kBAA/C,CACA;AACA;AACA,GAAI3H,CAAAA,iBAAiB,kBAAQ,MAAKzE,KAAL,CAAWe,eAAnB,CAArB,CACA,GAAIsL,CAAAA,YAAY,CAAG,EAAnB,CAEAA,YAAY,CAAC,MAAD,CAAZ,CAAuB5H,iBAAiB,CAAC,MAAD,CAAjB,CAA4BA,iBAAiB,CAAC,MAAD,CAA7C,CAAwD,EAA/E,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,GAAMsI,CAAAA,eAAe,CAAGnN,wBAAwB,CAAC6E,iBAAD,CAC5C,MAAKtE,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,CAA8CC,QADF,CACY,MAAK5B,KAAL,CAAWF,KAAX,CAAiB+H,QAD7B,CAE5C,MAAK7H,KAAL,CAAWF,KAAX,CAAiB+M,eAF2B,CAEV,IAFU,CAEJ,MAAKhN,KAAL,CAAWqB,kBAFP,CAE2B,MAAKrB,KAAL,CAAWc,YAFtC,CAAhD,CAIAuL,YAAY,gCAAQA,YAAR,EAAyBU,eAAe,CAACE,kBAAzC,CAAZ,CAEA,GAAI7I,CAAAA,qBAAqB,CAAG,MAAKjE,KAAL,CAAWF,KAAX,CAAiBmE,qBAAjB,EAA0C,EAAtE,CACA,GAAM8I,CAAAA,MAAM,CAAG9I,qBAAqB,CAACmI,SAAtB,CAAgC,SAAAlF,CAAC,QAAIA,CAAAA,CAAC,CAAC4C,IAAF,GAAWoC,YAAY,CAACpC,IAA5B,EAAjC,CAAf,CACA,GAAIiD,MAAM,GAAK,CAAC,CAAhB,CACI9I,qBAAqB,CAAC8I,MAAD,CAArB,gCAAqCb,YAAY,CAAC,YAAD,CAAjD,EAAoEA,YAApE,EAEJ;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA5H,iBAAiB,kBAAQ4H,YAAR,CAAjB,CAEA,GAAM9D,CAAAA,KAAK,CAAG3D,SAAS,CAAC2H,SAAV,CAAoB,SAAAlF,CAAC,QAAIA,CAAAA,CAAC,CAAC4C,IAAF,GAAWxF,iBAAiB,CAACwF,IAAjC,EAArB,CAAd,CACA,GAAI1B,KAAK,CAAG,CAAC,CAAb,CAAgB,CACZ3D,SAAS,CAAC4H,MAAV,CAAiBjE,KAAjB,CAAwB,CAAxB,CAA2B9D,iBAA3B,EACH,CACD,GAAI0H,YAAY,GAAK,CAArB,CAAwB,CACpB,MAAKhM,KAAL,CAAWsM,wBAAX,CAAoC7H,SAApC,CAA+CH,iBAA/C,CAAkE,MAAKtE,KAAL,CAAWF,KAA7E,EACH,CAFD,IAGK,IAAIwE,iBAAiB,CAAC,cAAD,CAAjB,GAAsC,IAA1C,CAAgD,CACjD,MAAKtE,KAAL,CAAWsM,wBAAX,CAAoC7H,SAApC,CAA+CH,iBAA/C,CAAkE,MAAKtE,KAAL,CAAWF,KAA7E,CAAoF,IAApF,EACH,CAFI,IAEE,CACH,MAAOwE,CAAAA,iBAAiB,CAACiI,YAAzB,CACA,GAAMpI,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACFI,SAAS,CAATA,SADE,CAEFH,iBAAiB,CAAEA,iBAFjB,CAGF7C,aAAa,CAAE,KAHb,CAGoB+K,cAAc,CAAE,KAHpC,CAIF5L,eAAe,CAAE,EAJf,CAImB6L,eAAe,CAAE,IAJpC,CAKFjI,IAAI,CAAJA,IALE,CAKID,YAAY,CAAEC,IAAI,CAACF,iBAAiB,CAACwF,IAAnB,CALtB,CAMFpF,UAAU,CAAE,MAAK1E,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BiD,mBAA5B,CAAgDC,eAN1D,CAOFX,qBAAqB,CAArBA,qBAPE,CAFS,CAAnB,CAYA,MAAKjE,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CACJ,CAEJ,CAr3CkB,OAwtDnB/E,wBAxtDmB,CAwtDQ,SAAC+E,UAAD,CAAarD,gBAAb,CAAkC,CACzD,GAAMuK,CAAAA,GAAG,CAAG,EAAZ,CACAA,GAAG,CAAC,2BAAD,CAAH,CAAmC,MAAKxL,KAAL,CAAWc,YAAX,CAAwB2K,yBAA3D,CACAD,GAAG,CAAC,mBAAD,CAAH,CAA2B,MAAKxL,KAAL,CAAWc,YAAX,CAAwBkJ,iBAAxB,CAA0CjD,KAArE,CACAyE,GAAG,CAAC,cAAD,CAAH,CAAsB,MAAKrL,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B6J,gBAA5B,CAA6CC,YAAnE,CACAH,GAAG,CAAC,cAAD,CAAH,CAAsB,KAAtB,CACAA,GAAG,CAAC,UAAD,CAAH,CAAkB,MAAKrL,KAAL,CAAWF,KAAX,CAAiB+H,QAAnC,CACAwD,GAAG,CAAC,qBAAD,CAAH,CAA6BlH,UAAU,CAACG,iBAAX,CAA6B,qBAA7B,EACzBH,UAAU,CAACG,iBAAX,CAA6B,qBAA7B,CADyB,CAC6B,CAAC,CAD3D,CAEA,MAAKtE,KAAL,CAAWZ,wBAAX,CAAoC+E,UAApC,CAAgDkH,GAAhD,CAAqD,MAAKxL,KAAL,CAAWqB,kBAAhE,CACI,MAAKlB,KAAL,CAAWF,KAAX,CAAiBkN,UADrB,CACiClM,gBADjC,CACmD,MAAKd,KAAL,CAAWF,KAAX,CAAiBmN,YADpE,EAEH,CAnuDkB,OAquDnBC,aAruDmB,CAquDH,SAACC,qBAAD,CAA2B,CACvC,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,YAAY,kBAAQF,qBAAR,CAAhB,CACAC,SAAS,CAAC,2BAAD,CAAT,CAAyC,MAAKvN,KAAL,CAAWc,YAAX,CAAwB2K,yBAAjE,CACA8B,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAKvN,KAAL,CAAWc,YAAX,CAAwBkJ,iBAAxB,CAA0CjD,KAA3E,CACAwG,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAKpN,KAAL,CAAWF,KAAX,CAAiB+H,QAAzC,CACAuF,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAKpN,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B6J,gBAA5B,CAA6CC,YAAzE,CACA,MAAKxL,KAAL,CAAWlB,aAAX,CAAyBsO,SAAzB,CAAoCC,YAApC,CAAkD,MAAKrN,KAAL,CAAWF,KAAX,CAAiB+H,QAAnE,CAA6E,MAAK7H,KAAL,CAAWF,KAAxF,EACH,CA7uDkB,OAgvDnBb,aAhvDmB,CAgvDH,SAACkO,qBAAD,CAAwBjM,kBAAxB,CAA+C,CAC3D,GAAIkM,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,YAAY,kBAAQF,qBAAR,CAAhB,CACA,GAAMN,CAAAA,eAAe,CAAG,MAAK7M,KAAL,CAAWF,KAAX,CAAiB+M,eAAzC,CACA,GAAMhF,CAAAA,QAAQ,CAAG,MAAK7H,KAAL,CAAWF,KAAX,CAAiB+H,QAAlC,CACAuF,SAAS,CAAC,2BAAD,CAAT,CAAyC,MAAKvN,KAAL,CAAWc,YAAX,CAAwB2K,yBAAjE,CACA8B,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAKvN,KAAL,CAAWc,YAAX,CAAwBkJ,iBAAxB,CAA0CjD,KAA3E,CACAwG,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAKpN,KAAL,CAAWF,KAAX,CAAiB+H,QAAzC,CACAuF,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAKpN,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B6J,gBAA5B,CAA6CC,YAAzE,CAIA,GAAI5K,CAAAA,eAAe,CAAG,MAAKf,KAAL,CAAWe,eAAjC,CACAA,eAAe,CAAC,qBAAD,CAAf,CAAyCyM,YAAY,CAAC,qBAAD,CAAZ,CACrCA,YAAY,CAAC,qBAAD,CADyB,CACC,CAAC,CAD3C,CAEA,GAAInM,kBAAJ,CAAwB,CACpBN,eAAe,CAAC,gBAAD,CAAf,CAAoC,CAAEgG,KAAK,CAAEyG,YAAY,CAAC,gBAAD,CAAZ,CAAiCA,YAAY,CAAC,gBAAD,CAA7C,CAAkE,CAAC,CAA5E,CAA+E/L,KAAK,CAAE+L,YAAY,CAAC,gBAAD,CAAZ,CAAiCA,YAAY,CAAC,gBAAD,CAA7C,CAAkE,EAAxJ,CAApC,CAEH,CACDzM,eAAe,CAAC,MAAD,CAAf,CAA0ByM,YAAY,CAAC,MAAD,CAAtC,CACA,MAAKrN,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,EACI,MAAK3B,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,CAA8CC,QAA9C,CAAuDC,GAAvD,CAA2D,SAAAC,GAAG,CAAI,CAC9D,MAAOA,CAAAA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAiB,SAAAG,MAAM,CAAI,CAC9B,MAAOA,CAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAoB,SAAAI,SAAS,CAAI,CACpC,GAAIA,SAAS,CAACC,cAAV,CAAyB,UAAzB,CAAJ,CAA0C,CACtC,MAAOD,CAAAA,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CAAuB,SAAAM,YAAY,CAAI,CAC1C,GAAIA,YAAY,CAACE,SAAb,GAA2B,OAA/B,CAAwC,CACpCzB,eAAe,CAACuB,YAAY,CAACb,KAAd,CAAf,CAAsC+L,YAAY,CAAC,UAAD,CAAZ,CAAyBlL,YAAY,CAACb,KAAtC,EAClC+L,YAAY,CAAC,UAAD,CAAZ,CAAyBlL,YAAY,CAACb,KAAtC,CADkC,CACa,EADnD,CAEH,CAHD,IAIK,IAAIa,YAAY,CAACE,SAAb,GAA2B,MAA/B,CAAuC,CAExCzB,eAAe,CAACuB,YAAY,CAACb,KAAd,CAAf,CAAsC+L,YAAY,CAAC,UAAD,CAAZ,CAAyBlL,YAAY,CAACb,KAAtC,EAClCpD,mBAAmB,CAAC2J,QAAD,CAAWwF,YAAY,CAAC,UAAD,CAAZ,CAAyBlL,YAAY,CAACb,KAAtC,CAAX,CADe,CAC4C,GAAIgM,CAAAA,IAAJ,EADlF,CAGA,GAAInL,YAAY,CAACoL,QAAjB,CAA2B,CACvB3M,eAAe,aAAMuB,YAAY,CAACb,KAAnB,EAAf,CAA6C+L,YAAY,CAAC,UAAD,CAAZ,aAA8BlL,YAAY,CAACb,KAA3C,GACzC+L,YAAY,CAAC,UAAD,CAAZ,aAA8BlL,YAAY,CAACb,KAA3C,EADyC,CAEzCuL,eAAe,CAAGA,eAAH,CAAqB,CAAC,CAFzC,CAGH,CACJ,CAVI,IAWA,CACDjM,eAAe,CAACuB,YAAY,CAACb,KAAd,CAAf,CAAsC+L,YAAY,CAAC,UAAD,CAAZ,CAAyBlL,YAAY,CAACb,KAAtC,EAClC+L,YAAY,CAAC,UAAD,CAAZ,CAAyBlL,YAAY,CAACb,KAAtC,CADkC,CACa,EADnD,CAEH,CACF,MAAO,KAAP,CACF,CArBM,CAAP,CAsBH,CAvBD,IAwBK,CACD,GAAIW,SAAS,CAACI,SAAV,GAAwB,OAA5B,CAAqC,CACjCzB,eAAe,CAACqB,SAAS,CAACX,KAAX,CAAf,CAAmC+L,YAAY,CAAC,UAAD,CAAZ,CAAyBpL,SAAS,CAACX,KAAnC,EAC/B+L,YAAY,CAAC,UAAD,CAAZ,CAAyBpL,SAAS,CAACX,KAAnC,CAD+B,CACa,CAAC,CADjD,CAEH,CAHD,IAIK,IAAIW,SAAS,CAACI,SAAV,GAAwB,MAA5B,CAAoC,CAErCzB,eAAe,CAACqB,SAAS,CAACX,KAAX,CAAf,CAAmC+L,YAAY,CAAC,UAAD,CAAZ,CAAyBpL,SAAS,CAACX,KAAnC,EAC/BpD,mBAAmB,CAAC2J,QAAD,CAAWwF,YAAY,CAAC,UAAD,CAAZ,CAAyBpL,SAAS,CAACX,KAAnC,CAAX,CADY,CAC4C,GAAIgM,CAAAA,IAAJ,EAD/E,CAGA,GAAIrL,SAAS,CAACsL,QAAd,CAAwB,CACpB3M,eAAe,aAAMqB,SAAS,CAACX,KAAhB,EAAf,CAA0C+L,YAAY,CAAC,UAAD,CAAZ,aAA8BpL,SAAS,CAACX,KAAxC,GACtC+L,YAAY,CAAC,UAAD,CAAZ,aAA8BpL,SAAS,CAACX,KAAxC,EADsC,CAEtCuL,eAAe,CAAGA,eAAH,CAAqB,CAAC,CAFzC,CAGH,CACJ,CAVI,IAWA,CACDjM,eAAe,CAACqB,SAAS,CAACX,KAAX,CAAf,CAAmC+L,YAAY,CAAC,UAAD,CAAZ,CAAyBpL,SAAS,CAACX,KAAnC,EAC/B+L,YAAY,CAAC,UAAD,CAAZ,CAAyBpL,SAAS,CAACX,KAAnC,CAD+B,CACa,EADhD,CAEH,CACD,MAAOV,CAAAA,eAAP,CACH,CACJ,CA/CM,CAAP,CAiDH,CAlDM,CAAP,CAmDH,CApDD,CADJ,CAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAKZ,KAAL,CAAWf,aAAX,CAAyBmO,SAAzB,CAAoCxM,eAApC,CACI,MAAKZ,KAAL,CAAWF,KAAX,CAAiB+H,QADrB,CAC+B3G,kBAD/B,EAEH,CAx0DkB,OA00DnBsM,eA10DmB,CA00DD,SAACzF,KAAD,CAAW,CACzB,GAAMoD,CAAAA,QAAQ,CAAGpD,KAAjB,CACA,GAAMtD,CAAAA,SAAS,CAAG,MAAKzE,KAAL,CAAWF,KAAX,CAAiB2E,SAAnC,CACA,GAAMR,CAAAA,qBAAqB,CAAG,MAAKjE,KAAL,CAAWF,KAAX,CAAiBmE,qBAA/C,CACA,GAAMO,CAAAA,IAAI,CAAG,MAAKxE,KAAL,CAAWF,KAAX,CAAiB0E,IAA9B,CACA,GAAID,CAAAA,YAAY,CAAG,MAAKvE,KAAL,CAAWF,KAAX,CAAiByE,YAApC,CACA,GAAM6D,CAAAA,KAAK,CAAG3D,SAAS,CAAC2H,SAAV,CAAoB,SAAAlF,CAAC,QAAIA,CAAAA,CAAC,CAAC4C,IAAF,GAAWqB,QAAQ,CAACrB,IAAxB,EAArB,CAAd,CACA,GAAI1B,KAAK,CAAG,CAAC,CAAb,CAAgB,CACZ3D,SAAS,CAAC4H,MAAV,CAAiBjE,KAAjB,CAAwB,CAAxB,EACAnE,qBAAqB,CAACoI,MAAtB,CAA6BjE,KAA7B,CAAoC,CAApC,EACH,CACD5D,IAAI,EAAIA,IAAI,CAAC2G,QAAQ,CAACrB,IAAV,CAAZ,EAA+B,MAAOtF,CAAAA,IAAI,CAAC2G,QAAQ,CAACrB,IAAV,CAA1C,CACAvF,YAAY,CAAGC,IAAI,EAAIiF,MAAM,CAACC,IAAP,CAAYlF,IAAZ,EAAkBf,MAAlB,CAA2B,CAAnC,EAAwCe,IAAI,CAACC,SAAS,CAAC,CAAD,CAAT,CAAaqF,IAAd,CAA3D,CACA,GAAM3F,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CAAEI,SAAS,CAATA,SAAF,CAAaH,iBAAiB,CAAEG,SAAS,CAAC,CAAD,CAAzC,CAA8CD,IAAI,CAAJA,IAA9C,CAAoDD,YAAY,CAAZA,YAApD,CAFS,CAAnB,CAIA,MAAKvE,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CA51DkB,OA81DnBsJ,UA91DmB,CA81DN,SAAC1F,KAAD,CAAW,CACpB,GAAMoD,CAAAA,QAAQ,CAAGpD,KAAjB,CACA,GAAIxD,CAAAA,YAAY,CAAG,MAAKvE,KAAL,CAAWF,KAAX,CAAiByE,YAApC,CACA,GAAID,CAAAA,iBAAiB,CAAG,MAAKtE,KAAL,CAAWF,KAAX,CAAiBwE,iBAAzC,CACA,GAAME,CAAAA,IAAI,CAAG,MAAKxE,KAAL,CAAWF,KAAX,CAAiB0E,IAA9B,CACA,GAAM4D,CAAAA,KAAK,CAAG7D,YAAY,CAAC6H,SAAb,CAAuB,SAAAlF,CAAC,QAAIA,CAAAA,CAAC,CAACwG,kBAAF,GAAyBvC,QAAQ,CAACuC,kBAAtC,EAAxB,CAAd,CACA,GAAItF,KAAK,CAAG,CAAC,CAAb,CAAgB,CACZ7D,YAAY,CAAC8H,MAAb,CAAoBjE,KAApB,CAA2B,CAA3B,EACH,CACD5D,IAAI,CAACF,iBAAiB,CAACwF,IAAnB,CAAJ,CAA+BvF,YAA/B,CAEA,GAAMJ,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CAAEG,IAAI,CAAJA,IAAF,CAAQD,YAAY,CAAZA,YAAR,CAFS,CAAnB,CAIA,MAAKvE,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CA92DkB,OAg3DnBW,eAh3DmB,CAg3DD,SAAC1D,QAAD,CAAWnB,OAAX,CAAuB,CACrC,GAAIa,CAAAA,gBAAgB,CAAG,MAAKd,KAAL,CAAWF,KAAX,CAAiBgB,gBAAjB,CAAkC,oBAAlC,CAAvB,CACA,GAAI6M,CAAAA,iBAAiB,CAAG,EAAxB,CACA7M,gBAAgB,CAACe,GAAjB,CAAqB,SAACkB,IAAD,CAAU,CAC3B,MAAO4K,CAAAA,iBAAiB,CAACrL,IAAlB,CAAuBS,IAAI,CAACA,IAA5B,CAAP,CACH,CAFD,EAGA,GAAIoB,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIG,CAAAA,iBAAiB,CAAG,MAAKtE,KAAL,CAAWF,KAAX,CAAiBwE,iBAAzC,CACA,GAAIE,CAAAA,IAAI,CAAG,MAAKxE,KAAL,CAAWF,KAAX,CAAiB0E,IAAjB,EAAyB,EAApC,CACA,GAAI,MAAKxE,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B8H,cAAhC,CAAgD,CAC5C,GAAMoE,CAAAA,SAAS,CAAGpJ,IAAI,CAACF,iBAAiB,CAACwF,IAAnB,CAAJ,CAA+BtF,IAAI,CAACF,iBAAiB,CAACwF,IAAnB,CAAnC,CAA8D,EAAhF,CACA;AACAtF,IAAI,CAACF,iBAAiB,CAACwF,IAAnB,CAAJ,8BAAmC8D,SAAnC,EAAiDD,iBAAjD,EAEAxJ,UAAU,CAAG,CACTC,QAAQ,CAAEzG,cADD,CAET0G,IAAI,CAAE,CAAEE,YAAY,CAAEC,IAAI,CAACF,iBAAiB,CAACwF,IAAnB,CAApB,CAA8CtF,IAAI,CAAEA,IAApD,CAA0D1D,gBAAgB,CAAE,EAA5E,CAAgF4B,QAAQ,CAAE,KAA1F,CAAiG+J,eAAe,CAAE,IAAlH,CAFG,CAAb,CAIH,CATD,IASO,CACHnI,iBAAiB,CAAG,CAAEuJ,aAAa,CAAE,IAAjB,CAAuB/D,IAAI,CAAE,CAA7B,CAApB,CACA,GAAMrF,CAAAA,SAAS,CAAG,CAACH,iBAAD,CAAlB,CACA,GAAMsJ,CAAAA,UAAS,CAAGpJ,IAAI,CAACF,iBAAiB,CAACwF,IAAnB,CAAJ,CAA+BtF,IAAI,CAACF,iBAAiB,CAACwF,IAAnB,CAAnC,CAA8D,EAAhF,CACA;AACAtF,IAAI,CAACF,iBAAiB,CAACwF,IAAnB,CAAJ,8BAAmC8D,UAAnC,EAAiDD,iBAAjD,EACAxJ,UAAU,CAAG,CACTC,QAAQ,CAAEzG,cADD,CAET0G,IAAI,CAAE,CACFC,iBAAiB,CAAjBA,iBADE,CAEFG,SAAS,CAATA,SAFE,CAGFF,YAAY,CAAEC,IAAI,CAACF,iBAAiB,CAACwF,IAAnB,CAHhB,CAIFtF,IAAI,CAAEA,IAJJ,CAIU1D,gBAAgB,CAAE,EAJ5B,CAIgC4B,QAAQ,CAAE,KAJ1C,CAKF+J,eAAe,CAAE,IALf,CAMA/H,UAAU,CAAE,MAAK1E,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BiD,mBAA5B,CAAgDC,eAN5D,CAFG,CAAb,CAWH,CACD,MAAK5E,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CAr5DkB,OAu5DnB2J,wBAv5DmB,CAu5DQ,SAAC/F,KAAD,CAAW,CAClC,MAAK3C,QAAL,CAAc,CACV2I,kBAAkB,CAAEhG,KAAK,CAACiG,SADhB,CAAd,EAGH,CA35DkB,OA65DnBC,mBA75DmB,CA65DG,SAAClG,KAAD,CAAW,CAC7B,MAAK3C,QAAL,CAAc,CACVhF,aAAa,CAAE2H,KAAK,CAACiG,SADX,CAAd,EAGH,CAj6DkB,OAm6DnBE,wBAn6DmB,CAm6DQ,SAACnG,KAAD,CAAW,CAClC,MAAK3C,QAAL,CAAc,CACV3E,kBAAkB,CAAEsH,KAAK,CAACiG,SADhB,CAAd,EAGH,CAv6DkB,OAy6DnBhP,YAz6DmB,CAy6DJ,SAACkC,kBAAD,CAAwB,CACnC,GAAImK,CAAAA,GAAG,CAAG,EAAV,CACA,GAAI,MAAKxL,KAAL,CAAWc,YAAX,CAAwBkJ,iBAAxB,GAA8C5G,SAA9C,EACG,MAAKpD,KAAL,CAAWc,YAAX,CAAwBkJ,iBAAxB,GAA8C,EADrD,CACyD,CACrDwB,GAAG,CAAC,2BAAD,CAAH,CAAmC,MAAKxL,KAAL,CAAWc,YAAX,CAAwB2K,yBAA3D,CACAD,GAAG,CAAC,mBAAD,CAAH,CAA2B,MAAKxL,KAAL,CAAWc,YAAX,CAAwBkJ,iBAAxB,CAA0CjD,KAArE,CACAyE,GAAG,CAAC,cAAD,CAAH,CAAsB,MAAKrL,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B6J,gBAA5B,CAA6CC,YAAnE,CACAH,GAAG,CAAC,cAAD,CAAH,CAAsB,KAAtB,CACAA,GAAG,CAAC,UAAD,CAAH,CAAkB,MAAKrL,KAAL,CAAWF,KAAX,CAAiB+H,QAAnC,CAEA,GAAIxD,CAAAA,IAAI,CAAG,MAAKxE,KAAL,CAAWkB,wBAAX,EAAuC,EAAlD,CACA,GAAMC,CAAAA,8BAA8B,CAAG,MAAKnB,KAAL,CAAWmB,8BAAX,EAA6C,EAApF,CACA,GAAMmN,CAAAA,MAAM,CAAG,MAAKnO,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,EACR,MAAK3B,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,CAA8CC,QADrD,CAEA,GAAIZ,8BAA8B,CAACyC,MAA/B,GAA0C,CAA1C,EAA+CY,IAAI,CAACZ,MAAL,GAAgB,CAAnE,CAAsE,CAClE,GAAI0K,MAAM,GAAKlL,SAAf,CAA0B,CACtBkL,MAAM,CAACtM,GAAP,CAAW,SAAAC,GAAG,CAAI,CACd,MAAOA,CAAAA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAiB,SAAAG,MAAM,CAAI,CAC9B,MAAOA,CAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAoB,SAAAI,SAAS,CAAI,CACpC,MAAOA,CAAAA,SAAS,CAACC,cAAV,CAAyB,UAAzB,EACHD,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CAAuB,SAAAM,YAAY,CAAI,CACnC,GAAIA,YAAY,CAACE,SAAb,GAA2B,OAA/B,CAAwC,CACpCgC,IAAI,CAAC/B,IAAL,CAAUH,YAAV,EACH,CAFD,IAEO,CACHnB,8BAA8B,CAACsB,IAA/B,CAAoCH,YAApC,EACH,CACD,MAAO,KAAP,CACH,CAPD,CADG,CASDF,SAAS,CAACI,SAAV,GAAwB,OAAxB,CAAkCgC,IAAI,CAAC/B,IAAL,CAAUL,SAAV,CAAlC,CACEjB,8BAA8B,CAACsB,IAA/B,CAAoCL,SAApC,CAVR,CAWH,CAZM,CAAP,CAaH,CAdM,CAAP,CAeH,CAhBD,EAiBA,GAAMlB,CAAAA,wBAAwB,CAAGsD,IAAjC,CACA,GAAIqB,CAAAA,eAAe,CAAG,EAAtB,CACArB,IAAI,CAACxC,GAAL,CAAS,SAAA4F,UAAU,CAAI,CACnB,GAAMC,CAAAA,GAAG,CAAG3J,UAAU,CAACsG,IAAD,CAAOoD,UAAP,CAAmB/B,eAAnB,CAAoC,IAApC,CAAtB,CACArB,IAAI,CAAGqD,GAAG,CAACrD,IAAX,CACAqB,eAAe,CAAGgC,GAAG,CAAChC,eAAtB,CACA,MAAO,KAAP,CACH,CALD,EAOA,MAAK1F,KAAL,CAAWhB,YAAX,CAAwB,MAAKgB,KAAL,CAAWF,KAAX,CAAiB4B,UAAzC,CACI,MAAK1B,KAAL,CAAWF,KAAX,CAAiB+H,QADrB,CAC+BxD,IAD/B,CACqC,MAAKxE,KAAL,CAAWe,eADhD,CAEI8E,eAFJ,CAEqB3E,wBAFrB,CAGIC,8BAHJ,CAGoCE,kBAHpC,CAIImK,GAJJ,CAIS,MAAKrL,KAAL,CAAWF,KAAX,CAAiB2E,SAJ1B,CAIqC,IAJrC,EAMA;AACH,CACJ,CApCD,IAoCO,CACH,MAAKzE,KAAL,CAAWhB,YAAX,CAAwB,MAAKgB,KAAL,CAAWF,KAAX,CAAiB4B,UAAzC,CACI,MAAK1B,KAAL,CAAWF,KAAX,CAAiB+H,QADrB,CAC+BxD,IAD/B,CACqC,MAAKxE,KAAL,CAAWe,eADhD,CAEI,MAAKf,KAAL,CAAWoB,yBAFf,CAE0C,MAAKpB,KAAL,CAAWkB,wBAFrD,CAGI,MAAKlB,KAAL,CAAWmB,8BAHf,CAG+CE,kBAH/C,CAGmEmK,GAHnE,CAII,MAAKrL,KAAL,CAAWF,KAAX,CAAiB2E,SAJrB,CAIgC,KAJhC,CAIuC,MAAKzE,KAAL,CAAWF,KAAX,CAAiB4I,kBAJxD,CAKI,MAAK1I,KAAL,CAAWF,KAAX,CAAiBsO,YALrB,EAMH,CACJ,CAxDD,IAwDO,CACH1Q,KAAK,CAACiM,IAAN,CAAW,MAAK3J,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,yBAAN,CAA9B,CAAX,EACH,CAEJ,CAv+DkB,OAy+DnBuC,WAz+DmB,CAy+DL,SAAC5D,QAAD,CAAWnB,OAAX,CAAuB,CACjC,GAAIyK,CAAAA,SAAS,CAAG,MAAK1K,KAAL,CAAWF,KAAX,CAAiB4K,SAAjC,CACA,GAAIA,SAAS,GAAK,QAAlB,CAA4B,CACxB,MAAK2D,oBAAL,CAA0BjN,QAA1B,CAAoCnB,OAApC,CAA6CyK,SAA7C,EACH,CAFD,IAGK,CACD,GAAIA,SAAS,GAAK,QAAlB,CAA4B,CACxB,MAAKxL,kBAAL,CAAwB,IAAxB,EACH,CACJ,CACJ,CAn/DkB,OA6pEnByJ,oBA7pEmB,CA6pEI,SAAC/B,KAAD,CAAQE,IAAR,CAAiB,CACpC,GAAIpG,CAAAA,cAAc,CAAG,MAAKb,KAAL,CAAWa,cAAhC,CACAA,cAAc,CAACoG,IAAD,CAAd,CAAuBF,KAAvB,CACA,MAAKxB,QAAL,CAAc,CAAE1E,cAAc,CAAdA,cAAF,CAAd,EACH,CAjqEkB,CAEf,MAAK4N,KAAL,CAAarR,KAAK,CAACiD,SAAN,EAAb,CACA,MAAKqO,iBAAL,CAAyB,MAAKvO,KAAL,CAAWuO,iBAApC,CACA,MAAKtK,qBAAL,CAA6B,EAA7B,CACA,MAAKuK,mBAAL,CAA2B,CACvB,CAAE,UAAW,cAAb,CAA6B,YAAa,gBAA1C,CAA4DtK,KAAK,CAAE,OAAnE,CADuB,CAEvB,CAAE,UAAW,kBAAb,CAAiC,YAAa,eAA9C,CAA+DA,KAAK,CAAE,OAAtE,CAFuB,CAGvB,CAAE,UAAW,cAAb,CAA6B,YAAa,WAA1C,CAAuDA,KAAK,CAAE,OAA9D,CAHuB,CAA3B,CAKA,MAAKuK,cAAL,CAAsBC,IAAI,CAACC,KAAL,CAAW,MAAK3O,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BkN,aAA5B,CAA0ChN,QAA1C,CAAmDgF,KAA9D,CAAtB,CAVe,aAYlB,C,uEA8uBD,4BAAmBiI,aAAnB,CAAkC,iBAC9B,GAAIC,CAAAA,YAAY,CAAG,KAAK9O,KAAL,CAAW8O,YAA9B,CACA;AACA,GAAIC,CAAAA,KAAK,CAAG,KAAZ,CACA,GAAI,KAAK/O,KAAL,CAAWF,KAAX,CAAiBY,cAAjB,GAAoC,KAAK6N,iBAAL,CAAuBzO,KAAvB,CAA6BY,cAArE,CAAqF,CACjF,KAAK0E,QAAL,CAAc,CAAE1E,cAAc,CAAE,KAAKV,KAAL,CAAWF,KAAX,CAAiBY,cAAnC,CAAd,EACAqO,KAAK,CAAG,IAAR,CACH,CACD,GAAI,KAAK/O,KAAL,CAAWF,KAAX,CAAiBa,YAAjB,GAAkC,KAAK4N,iBAAL,CAAuBzO,KAAvB,CAA6Ba,YAAnE,CAAiF,CAE9E,GAAMO,CAAAA,kBAAkB,CAAC,KAAKlB,KAAL,CAAWF,KAAX,CAAiBa,YAAjB,CAA8B,mBAA9B,GACzB,KAAKX,KAAL,CAAWF,KAAX,CAAiBa,YAAjB,CAA8B,mBAA9B,EAAmDoC,IAAnD,CAAwDiB,kBAAxD,GAA6E,CADpD,CACsD,IADtD,CAC2D,KADpF,CAIC,KAAKC,qBAAL,CAA6B,EAA7B,CACA,GAAI/C,kBAAJ,CAAwB,CACpB,KAAK+C,qBAAL,CAA6B,CACzB,CAAE,UAAW,cAAb,CAA6B,YAAa,gBAA1C,CAA4DC,KAAK,CAAE,OAAnE,CADyB,CAA7B,CAGH,CAED,KAAKlE,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,EACI,KAAK3B,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,CAA8CC,QAA9C,CAAuDC,GAAvD,CAA2D,SAAAC,GAAG,CAAI,CAC9D,MAAOA,CAAAA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAiB,SAAAG,MAAM,CAAI,CAC9B,MAAOA,CAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAoB,SAAAI,SAAS,CAAI,CACpC;AACA,GAAIA,SAAS,CAACC,cAAV,CAAyB,UAAzB,CAAJ,CAA0C,CACtCD,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CAAuB,SAAAM,YAAY,CAAI,CACnC,GAAIA,YAAY,CAACC,SAAb,GAA2B,IAA/B,CAAqC,CACjC;AACA,MAAI,CAAC6B,qBAAL,CAA2B3B,IAA3B,CAAgC,CAAE,YAAa,IAAf,CAAqB,UAAWH,YAAY,CAACb,KAA7C,CAAoD,YAAaa,YAAY,CAACb,KAA9E,CAAqF4C,KAAK,CAAE,OAA5F,CAAhC,EACH,CACD,MAAO,CAAA,MAAI,CAACD,qBAAZ,CACH,CAND,EAOH,CARD,IAQO,CACH,GAAIhC,SAAS,CAACG,SAAd,CACI,MAAI,CAAC6B,qBAAL,CAA2B3B,IAA3B,CAAgC,CAAE,YAAa,IAAf,CAAqB,UAAWL,SAAS,CAACX,KAA1C,CAAiD,YAAaW,SAAS,CAACX,KAAxE,CAA+E4C,KAAK,CAAE,OAAtF,CAAhC,EAEJ,MAAO,CAAA,MAAI,CAACD,qBAAZ,CACH,CACD;AACA;AACA;AACH,CAnBM,CAAP,CAqBH,CAtBM,CAAP,CAuBH,CAxBD,CADJ,CA2BA,KAAKmB,QAAL,CAAc,CAAEzE,YAAY,CAAE,KAAKX,KAAL,CAAWF,KAAX,CAAiBa,YAAjC,CACVO,kBAAkB,CAAlBA,kBADU,CAAd,EAEA6N,KAAK,CAAG,IAAR,CACH,CACD,GAAI,KAAK/O,KAAL,CAAWF,KAAX,CAAiBgB,gBAAjB,GAAsC,KAAKyN,iBAAL,CAAuBzO,KAAvB,CAA6BgB,gBAAvE,CAAyF,CACrF,KAAKsE,QAAL,CAAc,CAAEtE,gBAAgB,CAAE,KAAKd,KAAL,CAAWF,KAAX,CAAiBgB,gBAArC,CAAd,EACAiO,KAAK,CAAG,IAAR,CACH,CACD,GAAI,KAAK/O,KAAL,CAAWF,KAAX,CAAiBc,eAAjB,GAAqC,KAAK2N,iBAAL,CAAuBzO,KAAvB,CAA6Bc,eAAtE,CAAuF,CACnF,KAAKwE,QAAL,CAAc,CAAExE,eAAe,CAAE,KAAKZ,KAAL,CAAWF,KAAX,CAAiBc,eAApC,CAAd,EACAmO,KAAK,CAAG,IAAR,CACH,CAED,GAAI,KAAK/O,KAAL,CAAWF,KAAX,CAAiBoB,kBAAjB,GAAwC,KAAKqN,iBAAL,CAAuBzO,KAAvB,CAA6BoB,kBAAzE,CAA6F,CACzF,KAAKkE,QAAL,CAAc,CAAElE,kBAAkB,CAAE,KAAKlB,KAAL,CAAWF,KAAX,CAAiBoB,kBAAvC,CAAd,EACA6N,KAAK,CAAG,IAAR,CACH,CAED,GAAI,KAAK/O,KAAL,CAAWF,KAAX,CAAiBkB,8BAAjB,GAAoD,KAAKuN,iBAAL,CAAuBzO,KAAvB,CAA6BkB,8BAArF,CAAqH,CACjH,KAAKoE,QAAL,CAAc,CAAEpE,8BAA8B,CAAE,KAAKhB,KAAL,CAAWF,KAAX,CAAiBkB,8BAAnD,CAAd,EACA+N,KAAK,CAAG,IAAR,CACH,CACD,GAAI,KAAK/O,KAAL,CAAWF,KAAX,CAAiBiB,wBAAjB,GAA8C,KAAKwN,iBAAL,CAAuBzO,KAAvB,CAA6BiB,wBAA/E,CAAyG,CACrG,KAAKqE,QAAL,CAAc,CAAErE,wBAAwB,CAAE,KAAKf,KAAL,CAAWF,KAAX,CAAiBiB,wBAA7C,CAAd,EACAgO,KAAK,CAAG,IAAR,CACH,CACD,GAAI,KAAK/O,KAAL,CAAWF,KAAX,CAAiBmB,yBAAjB,GAA+C,KAAKsN,iBAAL,CAAuBzO,KAAvB,CAA6BmB,yBAAhF,CAA2G,CACvG,KAAKmE,QAAL,CAAc,CAAEnE,yBAAyB,CAAE,KAAKjB,KAAL,CAAWF,KAAX,CAAiBmB,yBAA9C,CAAd,EACA8N,KAAK,CAAG,IAAR,CACH,CAID,GAAIA,KAAJ,CAAW,CACP,KAAKR,iBAAL,CAAyBM,aAAzB,CACH,CACD,GAAIC,YAAY,GAAK,EAAjB,EAAuBA,YAAY,GAAK7L,SAA5C,CAAuD,CACnDvF,KAAK,CAACiM,IAAN,CAAWmF,YAAX,EACA,GAAM3K,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CAAEyK,YAAY,CAAE,EAAhB,CAFS,CAAnB,CAIA,KAAK9O,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACA2K,YAAY,CAAG,EAAf,CACH,CACD,GAAI,KAAK9O,KAAL,CAAWgP,UAAX,GAA0B,KAAKnP,KAAL,CAAWoP,QAAzC,CAAmD,CAC/CC,UAAU,CAAC,UAAM,CACb,GAAIC,CAAAA,SAAS,CAAG,MAAI,CAACnP,KAAL,CAAWoP,UAAX,EAAyB,MAAI,CAACpP,KAAL,CAAWoP,UAAX,CAAsB3M,EAA/C,CAAoD4M,QAAQ,CAACC,cAAT,CAAwB,MAAI,CAACtP,KAAL,CAAWoP,UAAX,CAAsB3M,EAA9C,CAApD,CAAwG,IAAxH,CACA,GAAI,MAAI,CAAC6L,KAAL,EAAc,MAAI,CAACA,KAAL,CAAWiB,OAA7B,CAAsC,CAClC,MAAI,CAACjB,KAAL,CAAWiB,OAAX,CAAmBC,cAAnB,CAAkC,CAAEC,QAAQ,CAAE,QAAZ,CAAlC,EACH,CACD,GAAIN,SAAJ,CAAe,CACXA,SAAS,CAACK,cAAV,CAAyB,CAAEC,QAAQ,CAAE,QAAZ,CAAzB,EACH,CACJ,CARS,CAQP,GARO,CAAV,CASA,KAAKrK,QAAL,CAAc,CACV6J,QAAQ,CAAE,KAAKjP,KAAL,CAAWgP,UADX,CAAd,EAGH,CACJ,C,wCAuSD,mCAA2B,CACvB,GAAMhD,CAAAA,YAAY,CAAG,KAAKnM,KAAL,CAAWa,cAAX,CAA0BuL,kBAA/C,CACA,GAAIC,CAAAA,YAAY,CAAG,KAAKrM,KAAL,CAAWe,eAA9B,CACA,MAAOsL,CAAAA,YAAY,CAACK,YAApB,CACA,GAAIP,YAAY,GAAK,CAArB,CAAwB,CACpB,KAAKhM,KAAL,CAAW0P,aAAX,CAAyBxD,YAAzB,CAAuC,KAAKlM,KAAL,CAAWF,KAAlD,CAAyD,CAAzD,EACH,CAFD,IAEO,CACH,GAAM2E,CAAAA,SAAS,CAAG,KAAKzE,KAAL,CAAWF,KAAX,CAAiB2E,SAAjB,EAA8B,EAAhD,CACA,GAAIkL,CAAAA,aAAa,kBAAQzD,YAAR,CAAjB,CACAyD,aAAa,CAAC,MAAD,CAAb,CAAwB,KAAK3P,KAAL,CAAWF,KAAX,CAAiB2E,SAAjB,CAA6BgF,MAAM,CAACC,IAAP,CAAY,KAAK1J,KAAL,CAAWF,KAAX,CAAiB2E,SAA7B,EAAwChB,MAAxC,CAAiD,CAA9E,CAAkF,CAA1G,CACAkM,aAAa,CAAC,gBAAD,CAAb,CAAkCzD,YAAY,CAAC,gBAAD,CAAZ,CAA+B5K,KAAjE,CACAqO,aAAa,CAAC,gBAAD,CAAb,CAAkCzD,YAAY,CAAC,gBAAD,CAAZ,CAAiCA,YAAY,CAAC,gBAAD,CAAZ,CAA+BtF,KAAhE,CAAwE,CAAC,CAA3G,CACA,GAAMuF,CAAAA,aAAa,CAAGD,YAAY,CAAC,eAAD,CAAlC,CACAyD,aAAa,CAAC,eAAD,CAAb,CAAiCxD,aAAjC,CACAwD,aAAa,CAAC,eAAD,CAAb,CAAiC3R,uBAAuB,CAACmO,aAAD,CAAgB,KAAKnM,KAAL,CAAWF,KAAX,CAAiB+H,QAAjC,CAAxD,CACA8H,aAAa,CAAC,mBAAD,CAAb,CAAqCzD,YAAY,CAAC,mBAAD,CAAZ,CAAoCA,YAAY,CAAC,mBAAD,CAAhD,CAAwE,CAAC,CAA9G,CACAyD,aAAa,CAAC,iBAAD,CAAb,CAAmCzD,YAAY,CAAC,iBAAD,CAAZ,CAAkCA,YAAY,CAAC,iBAAD,CAAZ,CAAgCtF,KAAlE,CAA0E,CAAC,CAA9G,CACA+I,aAAa,CAAC,iBAAD,CAAb,CAAmCzD,YAAY,CAAC,iBAAD,CAAZ,CAAkCA,YAAY,CAAC,iBAAD,CAAZ,CAAgC5K,KAAlE,CAA0E,EAA7G,CACAqO,aAAa,CAAC,UAAD,CAAb,CAA4B,EAA5B,CACAlL,SAAS,CAACmL,OAAV,CAAkBD,aAAlB,EACA,GAAMxL,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACFI,SAAS,CAATA,SADE,CACS+H,cAAc,CAAE,KADzB,CACgClI,iBAAiB,CAAEqL,aADnD,CAEFpL,YAAY,CAAE,EAFZ,CAEgB3D,eAAe,CAAE,EAFjC,CAEqCwJ,gBAAgB,CAAE,KAFvD,CAE8D5I,aAAa,CAAE,KAF7E,CAEoFiL,eAAe,CAAE,IAFrG,CAFS,CAAnB,CAOA,KAAKzM,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CACJ,C,+BACD,0BAAkB,CACd,GAAM6H,CAAAA,YAAY,CAAG,KAAKnM,KAAL,CAAWa,cAAX,CAA0BuL,kBAA/C,CACA,GAAIC,CAAAA,YAAY,CAAG,KAAKrM,KAAL,CAAWe,eAA9B,CACA,MAAOsL,CAAAA,YAAY,CAACK,YAApB,CACA,GAAIsD,CAAAA,aAAa,kBAAQ,KAAKhQ,KAAL,CAAWe,eAAnB,CAAjB,CACA,GAAIoL,YAAY,GAAK,CAArB,CAAwB,CACpB,KAAKhM,KAAL,CAAW0P,aAAX,CAAyBxD,YAAzB,CAAuC,KAAKlM,KAAL,CAAWF,KAAlD,CAAyD,CAAzD,EACH,CAFD,IAEO,CACH,GAAM2E,CAAAA,SAAS,CAAG,KAAKzE,KAAL,CAAWF,KAAX,CAAiB2E,SAAjB,EAA8B,EAAhD,CACA,GAAIkL,CAAAA,aAAa,kBAAQzD,YAAR,CAAjB,CACAyD,aAAa,CAAC,gBAAD,CAAb,CAAkCzD,YAAY,CAAC,gBAAD,CAAZ,CAA+B5K,KAAjE,CACAqO,aAAa,CAAC,MAAD,CAAb,CAAwB,KAAK3P,KAAL,CAAWF,KAAX,CAAiB2E,SAAjB,CAA6BgF,MAAM,CAACC,IAAP,CAAY,KAAK1J,KAAL,CAAWF,KAAX,CAAiB2E,SAA7B,EAAwChB,MAAxC,CAAiD,CAA9E,CAAkF,CAA1G,CACAkM,aAAa,CAAC,gBAAD,CAAb,CAAkCzD,YAAY,CAAC,gBAAD,CAAZ,CAAiCA,YAAY,CAAC,gBAAD,CAAZ,CAA+BtF,KAAhE,CAAwE,CAAC,CAA3G,CACA,GAAMuF,CAAAA,aAAa,CAAGD,YAAY,CAAC,eAAD,CAAlC,CACAyD,aAAa,CAAC,eAAD,CAAb,CAAiCxD,aAAjC,CACAwD,aAAa,CAAC,eAAD,CAAb,CAAiC3R,uBAAuB,CAACmO,aAAD,CAAgB,KAAKnM,KAAL,CAAWF,KAAX,CAAiB+H,QAAjC,CAAxD,CACA8H,aAAa,CAAC,iBAAD,CAAb,CAAmCzD,YAAY,CAAC,iBAAD,CAAZ,CAAkCA,YAAY,CAAC,iBAAD,CAAZ,CAAgCtF,KAAlE,CAA0E,CAAC,CAA9G,CACA+I,aAAa,CAAC,iBAAD,CAAb,CAAmCzD,YAAY,CAAC,iBAAD,CAAZ,CAAkCA,YAAY,CAAC,iBAAD,CAAZ,CAAgC5K,KAAlE,CAA0E,EAA7G,CACAqO,aAAa,CAAC,mBAAD,CAAb,CAAqCzD,YAAY,CAAC,mBAAD,CAAZ,CAAoCA,YAAY,CAAC,mBAAD,CAAhD,CAAwE,CAAC,CAA9G,CACAyD,aAAa,CAAC,UAAD,CAAb,CAA4B,EAA5B,CACAlL,SAAS,CAACmL,OAAV,CAAkBD,aAAlB,EACAE,aAAa,CAAC,WAAD,CAAb,CAA6B,EAA7B,CACA,GAAM1L,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CAAEI,SAAS,CAATA,SAAF,CAAaH,iBAAiB,CAAEqL,aAAhC,CAA+CpL,YAAY,CAAE,EAA7D,CAAiE3D,eAAe,CAAEiP,aAAlF,CAFS,CAAnB,CAIA,KAAK7P,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CACJ,C,wCAkLD,mCAA2B,CACvB,GAAM6H,CAAAA,YAAY,CAAG,KAAKnM,KAAL,CAAWa,cAAX,CAA0BuL,kBAA/C,CACA,GAAIC,CAAAA,YAAY,CAAG,KAAKrM,KAAL,CAAWe,eAA9B,CACA,MAAOsL,CAAAA,YAAY,CAACK,YAApB,CACA;AACA;AACA,GAAIP,YAAY,GAAK,CAArB,CAAwB,CACpB,KAAKhM,KAAL,CAAW0P,aAAX,CAAyBxD,YAAzB,CAAuC,KAAKlM,KAAL,CAAWF,KAAlD,CAAyD,CAAzD,EACH,CAFD,IAEO,CACH,GAAM2E,CAAAA,SAAS,CAAG,KAAKzE,KAAL,CAAWF,KAAX,CAAiB2E,SAAjB,EAA8B,EAAhD,CACA,GAAIkL,CAAAA,aAAa,CAAG,EAApB,CACA;AACA;AAGAA,aAAa,CAAC,MAAD,CAAb,CAAwB,KAAK3P,KAAL,CAAWF,KAAX,CAAiB2E,SAAjB,CAA6BgF,MAAM,CAACC,IAAP,CAAY,KAAK1J,KAAL,CAAWF,KAAX,CAAiB2E,SAA7B,EAAwChB,MAAxC,CAAiD,CAA9E,CAAkF,CAA1G,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMmJ,CAAAA,eAAe,CAAGnN,wBAAwB,CAACyM,YAAD,CAC5C,KAAKlM,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,CAA8CC,QADF,CACY,KAAK5B,KAAL,CAAWF,KAAX,CAAiB+H,QAD7B,CAE5C,KAAK7H,KAAL,CAAWF,KAAX,CAAiB+M,eAF2B,CAEV,IAFU,CAEJ,KAAKhN,KAAL,CAAWqB,kBAFP,CAE2B,KAAKrB,KAAL,CAAWc,YAFtC,CAAhD,CAIAgP,aAAa,gCAAQA,aAAR,EAA0B/C,eAAe,CAACE,kBAA1C,CAAb,CAEA,GAAI7I,CAAAA,qBAAqB,CAAG,KAAKjE,KAAL,CAAWF,KAAX,CAAiBmE,qBAAjB,EAA0C,EAAtE,CACAA,qBAAqB,CAAC3B,IAAtB,gCAAgCqN,aAAa,CAAC,YAAD,CAA7C,EAAgEA,aAAhE,GAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACAlL,SAAS,CAACmL,OAAV,CAAkBD,aAAlB,EAEA,GAAI7O,CAAAA,gBAAgB,CAAG,KAAKjB,KAAL,CAAWiB,gBAAX,CAA4B,oBAA5B,CAAvB,CACA,GAAM6M,CAAAA,iBAAiB,CAAG,EAA1B,CACA7M,gBAAgB,EAAIA,gBAAgB,CAACe,GAAjB,CAAqB,SAACkB,IAAD,CAAU,CAC7CA,IAAI,CAACA,IAAL,CAAU,MAAV,EAAkB4M,aAAa,CAAC7F,IAAhC,CACF,MAAO6D,CAAAA,iBAAiB,CAACrL,IAAlB,CAAuBS,IAAI,CAACA,IAA5B,CAAP,CACH,CAHmB,CAApB,CAIA;AACA;AACA;AACA;AACA,GAAMyB,CAAAA,IAAI,CAAG,KAAKxE,KAAL,CAAWF,KAAX,CAAiB0E,IAAjB,EAAyB,EAAtC,CAEA,GAAMoJ,CAAAA,SAAS,CAAGpJ,IAAI,CAACmL,aAAa,CAAC7F,IAAf,CAAJ,CAA2BtF,IAAI,CAACmL,aAAa,CAAC7F,IAAf,CAA/B,CAAsD,EAAxE,CACA;AACAtF,IAAI,CAACmL,aAAa,CAAC7F,IAAf,CAAJ,8BAA+B8D,SAA/B,EAA6CD,iBAA7C,EAEA,GAAMxJ,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACFI,SAAS,CAATA,SADE,CACS+H,cAAc,CAAE,KADzB,CAEFlI,iBAAiB,CAAEqL,aAFjB,CAGFlO,aAAa,CAAE,KAHb,CAIFb,eAAe,CAAE,EAJf,CAKFwJ,gBAAgB,CAAE,KALhB,CAMFqC,eAAe,CAAE,IANf,CAOFlI,YAAY,CAAEC,IAAI,CAACmL,aAAa,CAAC7F,IAAf,CAPhB,CAQFtF,IAAI,CAAEA,IARJ,CAQU1D,gBAAgB,CAAE,EAR5B,CASF4D,UAAU,CAAE,KAAK1E,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BiD,mBAA5B,CAAgDC,eAT1D,CAUFX,qBAAqB,CAArBA,qBAVE,CAFS,CAAnB,CAeA,KAAKjE,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CACJ,C,+BAED,0BAAkB,CACd,GAAM6H,CAAAA,YAAY,CAAG,KAAKnM,KAAL,CAAWa,cAAX,CAA0BuL,kBAA/C,CACA,GAAIC,CAAAA,YAAY,CAAG,KAAKrM,KAAL,CAAWe,eAA9B,CACA,MAAOsL,CAAAA,YAAY,CAACK,YAApB,CACA,GAAIsD,CAAAA,aAAa,kBAAQ,KAAKhQ,KAAL,CAAWe,eAAnB,CAAjB,CACA;AACA;AACA,GAAIoL,YAAY,GAAK,CAArB,CAAwB,CACpB,KAAKhM,KAAL,CAAW0P,aAAX,CAAyBxD,YAAzB,CAAuC,KAAKlM,KAAL,CAAWF,KAAlD,CAAyD,CAAzD,EACH,CAFD,IAEO,CACH,GAAM2E,CAAAA,SAAS,CAAG,KAAKzE,KAAL,CAAWF,KAAX,CAAiB2E,SAAjB,EAA8B,EAAhD,CACA,GAAIkL,CAAAA,aAAa,CAAG,EAApB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,aAAa,CAAC,MAAD,CAAb,CAAwB,KAAK3P,KAAL,CAAWF,KAAX,CAAiB2E,SAAjB,CAA6BgF,MAAM,CAACC,IAAP,CAAY,KAAK1J,KAAL,CAAWF,KAAX,CAAiB2E,SAA7B,EAAwChB,MAAxC,CAAiD,CAA9E,CAAkF,CAA1G,CAGA,GAAMmJ,CAAAA,eAAe,CAAGnN,wBAAwB,CAACyM,YAAD,CAC5C,KAAKlM,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,CAA8CC,QADF,CACY,KAAK5B,KAAL,CAAWF,KAAX,CAAiB+H,QAD7B,CAE5C,KAAK7H,KAAL,CAAWF,KAAX,CAAiB+M,eAF2B,CAEV,IAFU,CAEJ,KAAKhN,KAAL,CAAWqB,kBAFP,CAG5C,KAAKrB,KAAL,CAAWc,YAHiC,CAAhD,CAKAgP,aAAa,gCAAQA,aAAR,EAA0B/C,eAAe,CAACE,kBAA1C,CAAb,CAEA,GAAI7I,CAAAA,qBAAqB,CAAG,KAAKjE,KAAL,CAAWF,KAAX,CAAiBmE,qBAAjB,EAA0C,EAAtE,CACAA,qBAAqB,CAAC3B,IAAtB,gCAAgCqN,aAAa,CAAC,YAAD,CAA7C,EAAgEA,aAAhE,GAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACAlL,SAAS,CAACmL,OAAV,CAAkBD,aAAlB,EACA;AACA;AAEA,GAAI7O,CAAAA,gBAAgB,CAAG,KAAKjB,KAAL,CAAWiB,gBAAX,CAA4B,oBAA5B,CAAvB,CACA,GAAI6M,CAAAA,iBAAiB,CAAG,EAAxB,CACA7M,gBAAgB,EAAIA,gBAAgB,CAACe,GAAjB,CAAqB,SAACkB,IAAD,CAAU,CAC9CA,IAAI,CAACA,IAAL,CAAU,MAAV,EAAkB4M,aAAa,CAAC7F,IAAhC,CACD,MAAO6D,CAAAA,iBAAiB,CAACrL,IAAlB,CAAuBS,IAAI,CAACA,IAA5B,CAAP,CACH,CAHmB,CAApB,CAIA;AACA;AACA;AACA,GAAIyB,CAAAA,IAAI,CAAG,KAAKxE,KAAL,CAAWF,KAAX,CAAiB0E,IAAjB,EAAyB,EAApC,CAEA,GAAMoJ,CAAAA,SAAS,CAAGpJ,IAAI,CAACmL,aAAa,CAAC7F,IAAf,CAAJ,CAA2BtF,IAAI,CAACmL,aAAa,CAAC7F,IAAf,CAA/B,CAAsD,EAAxE,CAEAtF,IAAI,CAACmL,aAAa,CAAC7F,IAAf,CAAJ,8BAA+B8D,SAA/B,EAA6CD,iBAA7C,EAEA,GAAMxJ,CAAAA,UAAU,CAAG,CACfM,SAAS,CAATA,SADe,CACJH,iBAAiB,CAAEqL,aADf,CAEf/O,eAAe,CAAEiP,aAFF,CAGftL,YAAY,CAAEC,IAAI,CAACmL,aAAa,CAAC7F,IAAf,CAHH,CAIftF,IAAI,CAAEA,IAJS,CAIHP,qBAAqB,CAArBA,qBAAqB;AAJlB,CAAnB,CAMA,KAAK7E,wBAAL,CAA8B+E,UAA9B,CAA0CrD,gBAA1C,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CACJ,C,oCA+RD,8BAAqBM,QAArB,CAA+BnB,OAA/B,CAAwCyK,SAAxC,CAAmDoF,IAAnD,CAAyD,CACrD,GAAM1C,CAAAA,SAAS,CAAG,CAAErC,QAAQ,CAAE,KAAK/K,KAAL,CAAWF,KAAX,CAAiB+H,QAA7B,CAAlB,CAEA,GAAIkI,CAAAA,YAAY,CAAG,CACfC,aAAa,CAAE,KAAKhQ,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BuO,iBAA5B,CAA8ChE,kBAD9C,CAEflB,QAAQ,CAAE,KAAK/K,KAAL,CAAWF,KAAX,CAAiB+H,QAFZ,CAGfxB,eAAe,CAAE,KAAKrG,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B4E,mBAA5B,CAAgDD,eAHlD,CAIfmF,YAAY,CAAE,KAAKxL,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B6J,gBAA5B,CAA6CC,YAJ5C,CAKf0E,eAAe,CAAE,KAAKlQ,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BiD,mBAA5B,CAAgDuL,eALlD,CAMfC,QAAQ,CAAE,EANK,CAOfC,MAAM,CAAE,EAPO,CAQfC,KAAK,CAAE,CARQ,CASfC,KAAK,CAAE,CATQ,CAUfC,SAAS,CAAEC,MAAM,CAAC,KAAK3Q,KAAL,CAAWa,cAAX,CAA0B6P,SAA3B,CAVF,CAWfE,0BAA0B,CAAE,KAAKzQ,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BgP,8BAA5B,EACrB,KAAK1Q,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BgP,8BAA5B,CAA2DD,0BAZnD,CAafjH,cAAc,CAAE,KAAKxJ,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,EACT,KAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B8H,cAdpB,CAefmH,iBAAiB,CAAE,CAfJ,CAgBfC,eAAe,CAAE,KAAK5Q,KAAL,CAAWF,KAAX,CAAiB8Q,eAAjB,EAAkC,uBAhBpC,CAiBfC,aAAa,CAAE,KAAK7Q,KAAL,CAAWF,KAAX,CAAiB+Q,aAAjB,EAAiC,sBAjBjC,CAAnB,CAqBAzD,SAAS,CAAC,cAAD,CAAT,CAA4B2C,YAA5B,CACA;AACA;AACA,GAAMe,CAAAA,KAAK,CAAGtR,eAAe,CAAC,KAAKQ,KAAL,CAAWF,KAAX,CAAiB4B,UAAlB,CACzB,KAAK7B,KAAL,CAAWa,cADc,CACE,KAAKb,KAAL,CAAWc,YADb,CAEzB,KAAKX,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BkB,oBAA5B,CAAiDhB,QAFxB,CAGzB,KAAK5B,KAAL,CAAWF,KAAX,CAAiB+H,QAHQ,CAGE,KAAK7H,KAAL,CAAWF,KAAX,CAAiB+M,eAHnB,CAIzBnC,SAJyB,CAIf,KAAK1K,KAAL,CAAWgH,eAJI,CAA7B,CAMAoG,SAAS,CAAC,cAAD,CAAT,CAA4B0D,KAAK,CAAChE,kBAAlC,CACAM,SAAS,CAAC,UAAD,CAAT,CAAwB0D,KAAK,CAACC,QAA9B,CACA3D,SAAS,CAAC,uBAAD,CAAT,CAAqC,KAAKqB,cAAL,CAAoBuC,qBAAzD,CACA5D,SAAS,CAAC,4BAAD,CAAT,CAA0C,KAAKpN,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BgP,8BAA5B,EACnC,KAAK1Q,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BgP,8BAA5B,CAA2DD,0BADlE,CAEArD,SAAS,CAAC,gBAAD,CAAT,CAA8B,KAAKpN,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,EACvB,KAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B8H,cADnC,CAEA4D,SAAS,CAAC,mBAAD,CAAT,CAAiC,CAAjC,CACAA,SAAS,CAAC,iBAAD,CAAT,CAA+B,KAAKpN,KAAL,CAAWF,KAAX,CAAiB8Q,eAAjB,EAAkC,uBAAjE,CACAxD,SAAS,CAAC,eAAD,CAAT,CAA6B,KAAKpN,KAAL,CAAWF,KAAX,CAAiB+Q,aAAjB,EAAiC,sBAA9D,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,GAAMrG,CAAAA,UAAU,CAAG,CACfyG,QAAQ,CAAE,KAAKjR,KAAL,CAAWF,KAAX,CAAiB0K,UAAjB,CAA4ByG,QADvB,CAEfxG,SAAS,CAAE,cAFI,CAGfyG,WAAW,CAAE,KAAKlR,KAAL,CAAWF,KAAX,CAAiB0K,UAAjB,CAA4B0G,WAH1B,CAIf9D,SAAS,CAAEA,SAJI,CAKf1C,SAAS,CAAEA,SALI,CAKOtJ,QAAQ,CAARA,QALP,CAKiBnB,OAAO,CAAPA,OALjB,CAMfkR,MAAM,CAAE,YANO,CAOfC,gBAAgB,CAAE,KAPH,CAQfC,eAAe,CAAE,KAAKxR,KAAL,CAAWwR,eARb,CASfC,oBAAoB,CAAE,KAAKzR,KAAL,CAAWyR,oBACjC;AAVe,CAAnB,CAYA,GAAInT,SAAS,CAAC,KAAK6B,KAAL,CAAWF,KAAX,CAAiByR,qBAAlB,CAAyC,KAAKvR,KAAL,CAAWF,KAAX,CAAiB+H,QAAjB,CAA0B2J,SAAnE,CAA8E,KAAKxR,KAAL,CAAWF,KAAX,CAAiB2R,YAA/F,CAAb,CAA2H,CACvH,GAAMtN,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEzG,cADK,CAEf0G,IAAI,CAAE,CACFqN,SAAS,CAAE,IADT,CACeC,UAAU,CAAE,CAAEnH,UAAU,CAAVA,UAAF,CAAc9I,UAAU,CAAE,KAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,UAA3C,CAD3B,CAEFN,QAAQ,CAARA,QAFE,CAEQqL,eAAe,CAAE,IAFzB,CAFS,CAAnB,CAOA,KAAKzM,KAAL,CAAWnB,WAAX,CAAuBsF,UAAvB,EACH,CATD,IAUK,CACD;AACA,KAAKnE,KAAL,CAAWb,kBAAX,CAA8BqL,UAA9B,CAA0C,KAAKxK,KAAL,CAAWF,KAAX,CAAiB4B,UAA3D,CAAuE,WAAvE,EACH,CACJ,C,qCAED,+BAAsBkQ,iBAAtB,CAAyC,CACrC,GAAMb,CAAAA,QAAQ,CAAG,EAAjB,CACAa,iBAAiB,EAAIA,iBAAiB,CAAC/P,GAAlB,CAAsB,SAAAC,GAAG,CAAI,CAC9C,MAAOA,CAAAA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAiB,SAAAG,MAAM,CAAI,CAC9B,MAAOA,CAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAoB,SAAAI,SAAS,CAAI,CACpC,GAAIA,SAAS,CAACC,cAAV,CAAyB,UAAzB,CAAJ,CAA0C,CACtC,MAAOD,CAAAA,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CAAuB,SAAAM,YAAY,CAAI,CAC1C,GAAIA,YAAY,CAACE,SAAb,GAA2B,MAA/B,CAAuC,CACnC0O,QAAQ,CAACzO,IAAT,CAAcH,YAAY,CAACb,KAA3B,EACH,CACJ,CAJM,CAAP,CAKH,CAND,IAOK,CACD,GAAIW,SAAS,CAACI,SAAV,GAAwB,MAA5B,CAAoC,CAChC0O,QAAQ,CAACzO,IAAT,CAAcL,SAAS,CAACX,KAAxB,EACH,CACD,MAAOyP,CAAAA,QAAP,CACH,CACJ,CAdM,CAAP,CAgBH,CAjBM,CAAP,CAkBH,CAnBoB,CAArB,CAoBA,MAAOA,CAAAA,QAAP,CACH,C,kCAED,6BAAqB,CACjB,GAAI/D,CAAAA,UAAU,CAAG,KAAKhN,KAAL,CAAWF,KAAX,CAAiB2E,SAAlC,CACA,GAAIuI,UAAU,EAAIA,UAAU,CAACvJ,MAAX,CAAoB,CAAtC,CAAyC,CACrC,GAAIe,CAAAA,IAAI,CAAG,KAAKxE,KAAL,CAAWF,KAAX,CAAiB0E,IAA5B,CACA,GAAI6G,CAAAA,IAAG,CAAG,EAAV,CACAA,IAAG,CAAC,eAAD,CAAH,CAAuB1L,oBAAoB,CAACqN,UAAD,CAAaxI,IAAb,CAA3C,CACA6G,IAAG,CAAC,oBAAD,CAAH,CAA4B3L,SAAS,CAAC,KAAKM,KAAL,CAAWF,KAAX,CAAiB2E,SAAjB,CAA6B,KAAKzE,KAAL,CAAWF,KAAX,CAAiB2E,SAA9C,CAA0D,EAA3D,CAA+D,KAAK5E,KAAL,CAAWqB,kBAA1E,CAArC,CACAmK,IAAG,CAAC,mBAAD,CAAH,CAA2B,KAAKwG,qBAAL,CAA2B,KAAK7R,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,CAA8CC,QAAzE,CAA3B,CACA;AACA;AACAyJ,IAAG,CAAC,UAAD,CAAH,CAAkB,EAAlB,CACAA,IAAG,CAAC,QAAD,CAAH,CAAgB,EAAhB,CACAA,IAAG,CAAC,cAAD,CAAH,CAAsB,KAAKrL,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B6J,gBAA5B,CAA6CC,YAAnE,CACAH,IAAG,CAAC,iBAAD,CAAH,CAAyB,KAAKrL,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BiD,mBAA5B,CAAgDuL,eAAzE,CACA7E,IAAG,CAAC,iBAAD,CAAH,CAAyB,KAAKrL,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B4E,mBAA5B,CAAgDD,eAAzE,CACAgF,IAAG,CAAC,eAAD,CAAH,CAAuBxN,iBAAiB,CAACiU,WAAzC,CACAzG,IAAG,CAAC,4BAAD,CAAH,CAAoC,KAAKrL,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BkB,oBAA5B,EAC7B,KAAK5C,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BkB,oBAA5B,CAAiD6N,0BADxD,CAEApF,IAAG,CAAC,gBAAD,CAAH,CAAwB,KAAKrL,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,EAA+B,KAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B8H,cAAnF,CACA6B,IAAG,CAAC,mBAAD,CAAH,CAA2B,CAA3B,CAGA,GAAMyF,CAAAA,KAAK,CAAGtR,eAAe,CAAC,KAAKQ,KAAL,CAAWF,KAAX,CAAiB4B,UAAlB,CACzB,KAAK7B,KAAL,CAAWa,cADc,CACE,KAAKb,KAAL,CAAWc,YADb,CAEzB,KAAKX,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BkB,oBAA5B,CAAiDhB,QAFxB,CAGzB,KAAK5B,KAAL,CAAWF,KAAX,CAAiB+H,QAHQ,CAGE,KAAK7H,KAAL,CAAWF,KAAX,CAAiBiS,eAHnB,CAGmC,QAHnC,CAIzB,KAAK/R,KAAL,CAAWgH,eAJc,CAA7B,CAKAqE,IAAG,CAAC,cAAD,CAAH,CAAsByF,KAAK,CAAChE,kBAA5B,CACAzB,IAAG,CAAC,UAAD,CAAH,CAAkByF,KAAK,CAACC,QAAxB,CACA1F,IAAG,CAAC,uBAAD,CAAH,CAA+B,KAAKoD,cAAL,CAAoBuC,qBAAnD,CACA3F,IAAG,CAAC,UAAD,CAAH,CAAkB,KAAKrL,KAAL,CAAWF,KAAX,CAAiB+H,QAAnC,CACAwD,IAAG,CAAC,OAAD,CAAH,CAAe,CAAf,CACA;AACAA,IAAG,CAAC,eAAD,CAAH,CAAuB,KAAKrL,KAAL,CAAWF,KAAX,CAAiB+Q,aAAjB,EAAkC,sBAAzD,CACAxF,IAAG,CAAC,iBAAD,CAAH,CAAyB,KAAKrL,KAAL,CAAWF,KAAX,CAAiB8Q,eAAjB,EAAoC,uBAA7D,CACAvF,IAAG,CAAC,uBAAD,CAAH,CAA+B,KAAKrL,KAAL,CAAWF,KAAX,CAAiBS,QAAjB,EAA6BC,QAAQ,CAAC,KAAKR,KAAL,CAAWF,KAAX,CAAiBS,QAAjB,CAA0B,CAA1B,CAAD,CAAR,GAA2C,CAAxE,CAA4E,IAA5E,CAAmF,KAAlH,CAEA,GAAMiK,CAAAA,UAAU,CAAG,CACf4C,SAAS,CAAE/B,IADI,CAEf2G,aAAa,CAAE,KAAKhS,KAAL,CAAWgS,aAFX,CAGfb,MAAM,CAAE,aAHO,CAAnB,CAKA,KAAKnR,KAAL,CAAWd,kBAAX,CAA8BsL,UAA9B,CAA0C,KAAKxK,KAAL,CAAWF,KAAX,CAAiB4B,UAA3D,EACH,CAzCD,IAyCO,CACHhE,KAAK,CAACiM,IAAN,CAAW,KAAK3J,KAAL,CAAWuC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,+BAAN,CAA9B,CAAX,EACH,CAEJ,C,sBAOD,iBAAS,iBAEL,GAAIrB,CAAAA,QAAQ,CAAG,CAAf,CACA,GAAI,KAAKpB,KAAL,CAAWiS,oBAAf,CAAqC,CACjC7Q,QAAQ,CAAG,CAAX,CACH,CACD,GAAI8Q,CAAAA,WAAW,CAAG,MAAlB,CACA,GAAIC,CAAAA,QAAQ,CAAG,UAAf,CACA,GAAI,KAAKnS,KAAL,CAAWkS,WAAf,CAA4B,CACxBA,WAAW,CAAG,KAAKlS,KAAL,CAAWkS,WAAzB,CACAC,QAAQ,CAAG,OAAOC,MAAP,CAAcF,WAAW,CAACG,WAAZ,EAAd,CAAX,CACH,CACD;AACA;AACA;AACA;AACA;AACA;AACA,mBACI,oBAAC,KAAD,EACI,IAAI,CAAE,KAAKrS,KAAL,CAAWF,KAAX,CAAiB0B,aAAjB,CACF,IADE,CACK,KAAKxB,KAAL,CAAWF,KAAX,CAAiB6C,QAAjB,CAA4B,IAA5B,CACH,KAAK3C,KAAL,CAAWF,KAAX,CAAiB4C,QAAjB,CAA4B,IAA5B,CACI,KAAK1C,KAAL,CAAWF,KAAX,CAAiB2B,aAAjB,CAAiC,IAAjC,CAAwC,IACpD;AACA;AACA;AAPJ,CAQI,QAAQ,CAAC,QACT;AATJ,CAUI,SAAS,CAAE,KAAKzB,KAAL,CAAWsS,SAAX,EAAwB,EAVvC,CAWI,IAAI,CAAE,KAAKtS,KAAL,CAAWF,KAAX,CAAiByS,UAX3B,CAYI,MAAM,CAAE,KAAKvS,KAAL,CAAWwS,UAZvB,CAaI,YAAY,CAAE,KAblB,CAcI,eAAe,CAAC,mCAdpB,CAeI,kBAAgB,UAfpB,eAiBI,oBAAC,KAAD,CAAO,MAAP,EAAc,SAAS,CAAC,2BAAxB,eACI,oBAAC,KAAD,CAAO,KAAP,EAAa,EAAE,CAAC,UAAhB,CAA2B,SAAS,CAAC,4BAArC,EACK,KAAKxS,KAAL,CAAWyS,SAAX,GAAyB,IAAzB,CAAgC,EAAhC,CAAqC,KAAKzS,KAAL,CAAWF,KAAX,CAAiB0K,UAAjB,CAClC,KAAKxK,KAAL,CAAWF,KAAX,CAAiB+C,KAAjB,GAA2B,IAA3B,cACI,oBAAC,gBAAD,EAAkB,EAAE,CAAE,WAAtB,CAAmC,cAAc,CAAC,OAAlD,EADJ,CAEM,KAAK7C,KAAL,CAAW0S,cAAX,cACE,oBAAC,gBAAD,EAAkB,EAAE,CAAE,KAAK1S,KAAL,CAAWF,KAAX,CAAiB4E,UAAvC,EADF,cAEI,wCACG,KAAK1E,KAAL,CAAW0K,SAAX,cACG,qDACI,oBAAC,gBAAD,EAAkB,EAAE,CAAE,KAAK1K,KAAL,CAAWF,KAAX,CAAiB4K,SAAjB,EAA8B,OAAO0H,MAAP,CAAc,KAAKpS,KAAL,CAAWF,KAAX,CAAiB4K,SAAjB,CAA2B2H,WAA3B,EAAd,CAApD,CACI,cAAc,CAAC,KADnB,EADJ,CAGK,GAHL,CAKQ,KAAKrS,KAAL,CAAWF,KAAX,CAAiB4E,UAAjB,cACI,oBAAC,gBAAD,EAAkB,EAAE,CAAE,KAAK1E,KAAL,CAAWF,KAAX,CAAiB4E,UAAvC,EADJ,CAEM,EAPd,CADH,CAYG,KAAK1E,KAAL,CAAWF,KAAX,CAAiB4E,UAAjB,cACI,oBAAC,gBAAD,EAAkB,EAAE,CAAE,KAAK1E,KAAL,CAAWF,KAAX,CAAiB4E,UAAvC,EADJ,CAEM,EAfZ,CALwB,CAsBhC,EAvBV,CADJ,cA0BI,oBAAC,MAAD,EAAQ,SAAS,CAAC,qBAAlB,CAAwC,OAAO,CAAC,EAAhD,CAAmD,OAAO,CAAE,KAAK1E,KAAL,CAAWF,KAAX,CAAiB6C,QAAjB,CACxD,KAAKoH,SADmD,CACvC,KAAK/J,KAAL,CAAWF,KAAX,CAAiB4C,QAAjB,CAA4B,KAAKuH,SAAjC,CAA6C,KAAKjK,KAAL,CAAWF,KAAX,CAAiB0B,aAAjB,CAC1D,KAAKwI,cADqD,CACpC,KAAKhK,KAAL,CAAWF,KAAX,CAAiB2B,aAAjB,CAAiC,KAAKyI,cAAtC,CAClB,KAAKlK,KAAL,CAAWwS,UAHvB,eAII,oBAAC,gBAAD,EAAkB,EAAE,CAAC,YAArB,CAAkC,cAAc,CAAC,QAAjD,EAJJ,CA1BJ,CAgCK,KAAKxS,KAAL,CAAW6C,KAAX,GAAqB,IAArB,cACG,oBAAC,MAAD,EAAQ,SAAS,CAAC,2BAAlB,CAA8C,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC1B,eAAL,CAAqB,CAArB,CAAN,EAAvD,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAE1D,MAAvB,EADJ,kBAEI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,YAArB,CAAkC,cAAc,CAAC,QAAjD,EAFJ,CADH,CAMG,CAAC,KAAKuC,KAAL,CAAW0K,SAAX,GAAyB,QAAzB,EAAqC,KAAK1K,KAAL,CAAW0K,SAAX,GAAyB,QAA/D,GAA4E,KAAK1K,KAAL,CAAW2S,YAAvF,cACI,oBAAC,MAAD,EAAQ,SAAS,CAAC,2BAAlB,CAA8C,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACxR,eAAL,CAAqB,CAArB,CAAN,EAAvD,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAE1D,MAAvB,EADJ,kBAEI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,cAArB,CAAoC,cAAc,CAAC,UAAnD,EAFJ,CADJ,CAKI,KAAKuC,KAAL,CAAW4S,aAAX,cACI,oBAAC,MAAD,EAAQ,SAAS,CAAC,2BAAlB,CAA8C,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACzR,eAAL,CAAqBC,QAArB,CAAN,EAAvD,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAE3D,MAAvB,EADJ,kBAEI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,eAArB,CAAqC,cAAc,CAAC,WAApD,EAFJ,CADJ,CAKI,KAAKuC,KAAL,CAAW6S,SAAX,GAAyB,IAAzB,EAAiC,KAAK7S,KAAL,CAAW8S,WAA5C,cACI,oBAAC,MAAD,EAAQ,SAAS,CAAC,2BAAlB,CAA8C,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC3R,eAAL,CAAqB,CAArB,CAAN,EAAvD,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAErD,YAAvB,EADJ,kBAEI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,aAArB,CAAmC,cAAc,CAAC,SAAlD,EAFJ,CADJ,CAKI,KAAKkC,KAAL,CAAW+S,MAAX,EAAqB,KAAK/S,KAAL,CAAWyS,SAAhC,CACI,KAAKzS,KAAL,CAAW0K,SAAX,GAAyB,MAAzB,CAAkC,EAAlC,cACM,oBAAC,MAAD,EAAQ,SAAS,CAAC,+BAAlB,CAAkD,IAAI,CAAC,QAAvD,CACE,OAAO,CAAE,KAAK1K,KAAL,CAAWgT,SADtB,eAGE,oBAAC,gBAAD,EAAkB,EAAE,CAAE,WAAtB,CAAmC,cAAc,CAAC,OAAlD,EAHF,CAFV,CAOM,KAAKhT,KAAL,CAAWiT,QAAX,CAAsB,EAAtB,cACE,oBAAC,MAAD,EAAQ,SAAS,CAAC,4BAAlB,CAA+C,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC9R,eAAL,CAAqBC,QAArB,CAAN,EAAxD,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAE3D,MAAvB,EADJ,kBAEI,oBAAC,gBAAD,EAAkB,EAAE,CAAE0U,QAAtB,CAAgC,cAAc,CAAED,WAAhD,EAFJ,CA7D5B,CAkEK,KAAKlS,KAAL,CAAWF,KAAX,CAAiB4K,SAAjB,GAA+B,QAA/B,EAA2C,KAAK1K,KAAL,CAAWF,KAAX,CAAiBsK,gBAA5D,cACG,oBAAC,MAAD,EAAQ,SAAS,CAAC,2BAAlB,CAA8C,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACjJ,eAAL,CAAqB,CAArB,CAAN,EAAvD,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAE1D,MAAvB,EADJ,kBAEI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,kBAArB,CAAwC,cAAc,CAAC,iBAAvD,EAFJ,CADH,CAKK,EAvEV,CAyEK,CAAC,KAAKuC,KAAL,CAAW0K,SAAX,GAAyB,QAAzB,EAAqC,KAAK1K,KAAL,CAAW0K,SAAX,GAAyB,QAA/D,GACM,KAAK1K,KAAL,CAAW6C,KAAX,GAAqB,IAD3B,EACmC,KAAK7C,KAAL,CAAW8S,WAAX,GAA2B,IAD9D,EACsE,KAAK9S,KAAL,CAAWkT,QADjF,cAEG,oBAAC,MAAD,EAAQ,SAAS,CAAC,2BAAlB,CAA8C,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC/R,eAAL,CAAqB,CAArB,CAAN,EAAvD,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAE1D,MAAvB,EADJ,kBAEI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,UAArB,CAAgC,cAAc,CAAC,MAA/C,EAFJ,CAFH,CAMK,EA/EV,CAjBJ,cAkGI,oBAAC,KAAD,CAAO,IAAP,mBACI,oBAAC,UAAD,EAAY,GAAG,CAAE,KAAK6Q,KAAtB,eACI,oBAAC,IAAD,CAAM,IAAN,mBASI,oBAAC,KAAD,CAAO,QAAP,mBACI,oBAAC,IAAD,EAAM,GAAG,CAAE,KAAKrO,OAAhB,EAEQ,KAAKD,KAAL,CAAWF,KAAX,CAAiB6C,QAAjB,cACI,oBAAC,gBAAD,EACI,UAAU,CAAE,KAAK3C,KAAL,CAAWF,KAAX,CAAiBqT,UADjC,CAEI,SAAS,CAAE,KAAKnT,KAAL,CAAWF,KAAX,CAAiBsT,SAFhC,CAGI,eAAe,CAAE,KAAK7I,WAH1B,CAII,QAAQ,CAAE,KAAKvK,KAAL,CAAWF,KAAX,CAAiBuT,QAJ/B,CAKI,SAAS,CAAE,KAAKrT,KAAL,CAAWF,KAAX,CAAiBwT,SALhC,CAMI,aAAa,CAAE,KAAKtT,KAAL,CAAWF,KAAX,CAAiByT,aANpC,CAOI,YAAY,CAAE,KAAK1T,KAAL,CAAWc,YAP7B,CAQI,cAAc,CAAE,KAAKd,KAAL,CAAWa,cAR/B,CASI,YAAY,CAAE,KAAK2J,YATvB,EADJ,CAYM,KAAKrK,KAAL,CAAWF,KAAX,CAAiB4C,QAAjB,cACE,oBAAC,OAAD,EACI,YAAY,CAAE,KAAK1C,KAAL,CAAWF,KAAX,CAAiBsO,YAAjB,EAAiC,EADnD,CAEI,UAAU,CAAE,KAAKnJ,UAFrB,CAGI,gBAAgB,CAAE,KAAKjF,KAAL,CAAWF,KAAX,CAAiBgB,gBAHvC,EADF,CAKO,KAAKd,KAAL,CAAWF,KAAX,CAAiB0B,aAAjB,cACD,oBAAC,iBAAD,EACI,GAAG,CAAE,KAAKgS,WADd,CAEI,eAAe,CAAE,KAAK3T,KAAL,CAAWe,eAAX,EAA8B,EAFnD,CAGI,mBAAmB,CAAE,KAAKZ,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B4E,mBAA5B,EAAmD,EAH5E,CAII,gBAAgB,CAAE,KAAKtG,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B6J,gBAA5B,EAAgD,EAJtE,CAKI,mBAAmB,CAAE,KAAKvL,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BiD,mBAA5B,EAAmD,EAL5E,CAMI,qBAAqB,CAAE,KAAK3E,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B+R,qBAA5B,EAAqD,EANhF,CAOI,aAAa,CAAE,KAAKzT,KAAL,CAAWuC,IAAX,CAAgBC,aAPnC,CAQI,gBAAgB,CAAE,KAAKqG,oBAR3B,CASI,SAAS,CAAE,KAAK7I,KAAL,CAAWF,KAAX,CAAiBmN,YAAjB,EAAiC,EAThD,CAUI,wBAAwB,CAAE,KAAKtB,wBAC/B;AAXJ,CAYI,YAAY,CAAE,KAAK3L,KAAL,CAAWF,KAAX,CAAiB4T,YAZnC,CAaI,iBAAiB,CAAE,KAAKjI,iBAb5B,CAcI,QAAQ,CAAE,KAAKzL,KAAL,CAAWF,KAAX,CAAiB+H,QAd/B,CAeI,aAAa,CAAE,KAAK7H,KAAL,CAAWF,KAAX,CAAiB6T,aAAjB,EAAkC,EAfrD,CAgBI,WAAW,CAAE,KAAK3T,KAAL,CAAWF,KAAX,CAAiB8T,WAhBlC,EADC,CAmBC,KAAK5T,KAAL,CAAWF,KAAX,CAAiB2B,aAAjB,cACE,oBAAC,YAAD,EACI,SAAS,CAAE,KAAKzB,KAAL,CAAWF,KAAX,CAAiBmN,YAAjB,EAAiC,EADhD,CAEI,eAAe,CAAE,KAAKpN,KAAL,CAAWe,eAC5B;AAHJ,CAII,iBAAiB,CAAE,KAAK6K,iBAJ5B,CAKI,wBAAwB,CAAE,KAAKE,wBALnC,CAMI,YAAY,CAAE,KAAK3L,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,EACV,KAAK3B,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BC,iBAA5B,CAA8CC,QAPtD,CAQI,QAAQ,CAAE,KAAK5B,KAAL,CAAWF,KAAX,CAAiB+H,QAR/B,CASI,YAAY,CAAE,KAAK7H,KAAL,CAAWF,KAAX,CAAiB4T,YATnC,CAUI,eAAe,CAAE,KAAK1T,KAAL,CAAWF,KAAX,CAAiBiS,eAVtC,CAWI,gBAAgB,CAAE,KAAK9I,yBAX3B,CAYI,eAAe,CAAE,KAAKT,wBAZ1B,CAaI,oBAAoB,CAAE,KAAKI,6BAb/B,CAcI,SAAS,CAAE,KAAK5I,KAAL,CAAWF,KAAX,CAAiB4I,kBAdhC,CAeI,aAAa,CAAE,KAAKD,sBAfxB,CAgBI,YAAY,CAAE,KAAKzI,KAAL,CAAWF,KAAX,CAAiBsO,YAAjB,EAAiC,EAhBnD,CAiBI,UAAU,CAAE,KAAKnJ,UAjBrB,CAkBI,gBAAgB,CAAE,KAAKpF,KAAL,CAAWiB,gBAlBjC,CAmBI,cAAc,CAAE,KAAKd,KAAL,CAAWF,KAAX,CAAiB+L,cAnBrC,CAoBI,kBAAkB,CAAE,KAAKhM,KAAL,CAAWqB,kBApBnC,EADF,cAuBI,oBAAC,gBAAD,EACE,SAAS,CAAE,KAAKuN,cAAL,EACP,KAAKA,cAAL,CAAoB,gBAApB,CAFN,CAGE,kBAAkB,CAAE,KAAKzO,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,EAA+B,KAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BmS,cAA3D,EAChB,KAAK7T,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BmS,cAA5B,CAA2CpQ,MAA3C,CAAoD,CADpC,EACyC,KAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BmS,cAA5B,CAA2C,CAA3C,EAA8C5H,kBAJ7G,CAKE,eAAe,CAAE,KAAKjM,KAAL,CAAWF,KAAX,CAAiBgU,eALpC,CAME,YAAY,CAAE,KAAKjU,KAAL,CAAWc,YAN3B,CAOE,cAAc,CAAE,KAAKd,KAAL,CAAWa,cAP7B,CAQE,iBAAiB,CAAE,KAAKV,KAAL,CAAWF,KAAX,CAAiBwE,iBARtC,CASE,qBAAqB,CAAE,KAAKtE,KAAL,CAAWF,KAAX,CAAiBmE,qBAAjB,EAA0C,EATnE,CAUE,YAAY,CAAE,KAAKjE,KAAL,CAAWF,KAAX,CAAiByE,YAVjC,CAWE,gBAAgB,CAAE,KAAK1E,KAAL,CAAWiB,gBAX/B,CAYE,qBAAqB,CAAE,KAAKd,KAAL,CAAWuR,qBAZpC,CAaE,YAAY,CAAE,KAAKvR,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BkB,oBAA5B,EACV,KAAK5C,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4BkB,oBAA5B,CAAiDhB,QAdvD,CAeE,YAAY,CAAE,KAAK5B,KAAL,CAAW+T,YAf3B,CAgBE,gBAAgB,CAAE,KAAK/K,gBAhBzB,CAiBE,eAAe,CAAE,KAAKlB,eAjBxB,CAkBE,oBAAoB,CAAE,KAAKa,oBAlB7B,CAmBE,SAAS,CAAE,KAAK3I,KAAL,CAAWF,KAAX,CAAiBoF,SAnB9B,CAoBE,aAAa,CAAE,KAAKG,aApBtB,CAqBE,QAAQ,CAAE,KAAKrF,KAAL,CAAWF,KAAX,CAAiB+H,QArB7B,CAsBE,YAAY,CAAE,KAAK7H,KAAL,CAAWF,KAAX,CAAiB4T,YAtBjC,CAuBE,eAAe,CAAE,KAAK1T,KAAL,CAAWF,KAAX,CAAiBiS,eAvBpC,CAwBE,OAAO,CAAE,KAAK1I,OAxBhB,CAyBE,OAAO,CAAE,KAAKE,YAzBhB,CA0BE,uBAAuB,CAAE,KAAK2B,uBA1BhC,CA2BE,cAAc,CAAE,KAAKlL,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,EACT,KAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,UAAjB,CAA4B8H,cA5BrC,CA6BE,kBAAkB,CAAE,KAAK3J,KAAL,CAAWqB,kBA7BjC,CA8BE,YAAY,CAAE,KAAKkK,YA9BrB,CA+BE,eAAe,CAAE,KAAKoC,eA/BxB,CAgCE,UAAU,CAAE,KAAKC,UAhCnB,CAiCE,aAAa,CAAE,KAAKP,aAjCtB,CAkCE,mBAAmB,CAAE,KAAKsB,mBAlC5B,CAmCE,SAAS,CAAE,KAAKxO,KAAL,CAAWF,KAAX,CAAiB2E,SAnC9B,CAoCE,UAAU,CAAE,KAAKQ,UApCnB,CAqCE,aAAa,CAAE,KAAKpF,KAAL,CAAWO,aArC5B,CAsCE,kBAAkB,CAAE,KAAKP,KAAL,CAAWY,kBAC/B;AAvCF,CAwCE,mBAAmB,CAAE,KAAKwN,mBAC1B;AAzCF,CA0CE,wBAAwB,CAAE,KAAKC,wBA1CjC,CA2CE,YAAY,CAAE,KAAKlP,YA3CrB,CA4CE,aAAa,CAAE,KAAKC,aACpB;AA7CF,CA8CE,uBAAuB,CAAE,KAAKgF,qBA9ChC,CA+CC,SAAS,CAAE,KAAKjE,KAAL,CAAWF,KAAX,CAAiB4K,SA/C7B,EA7D1B,CADJ,CATJ,CADJ,CADJ,CAlGJ,CADJ,CAwOH,C,sCA95EkCzN,KAAK,CAACwH,S,EAm6E7C,cAAejG,CAAAA,OAAO,CAACoB,eAAD,CAAkB,CACpClB,cAAc,CAAdA,cADoC,CAEpCD,kBAAkB,CAAlBA,kBAFoC,CAEhBE,sBAAsB,CAAtBA,sBAFgB,CAGpCC,aAAa,CAAbA,aAHoC,CAGrBC,WAAW,CAAXA,WAHqB,CAGRC,aAAa,CAAbA,aAHQ,CAGOC,OAAO,CAAPA,OAHP,CAIpCC,YAAY,CAAZA,YAJoC,CAItBC,aAAa,CAAbA,aAJsB,CAIPC,kBAAkB,CAAlBA,kBAJO,CAKpCC,kBAAkB,CAAlBA,kBALoC,CAKhBC,wBAAwB,CAAxBA,wBALgB,CAKUC,aAAa,CAAbA,aALV,CAAlB,CAAP,CAOblC,UAAU,CAAC4C,wBAAD,CAPG,CAAf","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Button, Card, Form, Modal } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ModalInner } from '../../components/App.styles';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    comboChild, convertDateTimetoString,\r\n    getSameRecordFromTwoArrays, rearrangeDateFormat, showEsign, validateEmail\r\n} from '../../components/CommonScript';\r\nimport RegisterSlideOut from './RegisterSlideOut';\r\nimport AddSpecification from './AddSpecification';\r\nimport AddTest from './AddTest';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getPreviewTemplate, getChildValues,\r\n    getNewRegSpecification, AddComponents, updateStore,\r\n    EditComponent, getTest, addsubSample, editSubSample,\r\n    insertRegistration, updateRegistration, addSubSampleSaveContinue,\r\n    componentTest\r\n} from '../../actions'\r\nimport AddComponentPopUp from './AddComponentPopUp';\r\nimport AddSubSample from './AddSubSample';\r\nimport {\r\n    getRegistration, getRegistrationSubSample, SubSample, TestListManipulation\r\n} from './RegistrationValidation';\r\n//import SplitterLayout from 'react-splitter-layout';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\nclass PreRegisterSlideOutModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.myRef = React.createRef()\r\n        this.PrevoiusLoginData = this.props.PrevoiusLoginData;\r\n        this.subSampleDataGridList = [];\r\n        this.componentColumnList = [\r\n            { \"idsName\": \"IDS_SPECIMEN\", \"dataField\": \"scomponentname\", width: \"200px\" },\r\n            { \"idsName\": \"IDS_DATERECEIVED\", \"dataField\": \"sreceiveddate\", width: \"250px\" },\r\n            { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", width: \"200px\" },\r\n        ];\r\n        this.sampleeditable = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n      \r\n    }\r\n    formRef = React.createRef();\r\n    state = {\r\n        failedControls: [],\r\n        testDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n        subSampleDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n        selectedRecord: {},\r\n        selectedSpec: {},\r\n        selectComponent: {},\r\n        selectedTest: {},\r\n        selectedTestData: {},\r\n        SubSamplecomboComponents: [],\r\n        SubSamplewithoutCombocomponent: [],\r\n        // selectedTestData: [],\r\n        parentSubSampleColumnList: [],\r\n        specBasedComponent:false\r\n    }\r\n\r\n\r\n\r\n    handleSaveClick = (saveType) => {\r\n        const failedControls = [];\r\n        const startLabel = [];\r\n        let label = \"IDS_ENTER\";\r\n        let mandatoryFields = [];\r\n        let selectedRecord = this.state.selectedRecord\r\n\r\n\r\n        if (this.props.Login.loadComponent) {\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_COMPONENT\", \"dataField\": \"ncomponentcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n                { \"idsName\": \"IDS_RECEIVEDDATE\", \"dataField\": \"dreceiveddate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n                { \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"ntzdreceivedate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n            ]\r\n            selectedRecord = this.state.selectComponent\r\n        }\r\n        else if (this.props.Login.loadSubSample) {\r\n\r\n            if (this.state.specBasedComponent)\r\n                mandatoryFields = [{ \"idsName\": \"IDS_SPECIMEN\", \"dataField\": \"ncomponentcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" }]\r\n\r\n            this.props.Login.masterData.SubSampleTemplate &&\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n                    row.children.map(column => {\r\n                        return column.children.map(component => {\r\n                            return component.hasOwnProperty(\"children\") ?\r\n                                component.children.map(componentrow => {\r\n\r\n                                    if (componentrow.mandatory === true) {\r\n                                        if (componentrow.inputtype === \"email\") {\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                \"dataField\": componentrow.label,\r\n                                                \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                \"validateFunction\": validateEmail,\r\n                                                \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                \"controlType\": \"textbox\"\r\n                                            })\r\n                                        } else {\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true,\r\n                                                \"idsName\": componentrow.label,\r\n                                                \"dataField\": componentrow.label,\r\n                                                \"mandatoryLabel\": componentrow.inputtype === \"combo\" ?\r\n                                                    \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                \"controlType\": componentrow.inputtype === \"combo\" ?\r\n                                                    \"selectbox\" : \"textbox\"\r\n                                            })\r\n                                        }\r\n\r\n                                    } else {\r\n                                        if (componentrow.inputtype === \"email\") {\r\n\r\n                                            this.state.selectComponent[componentrow.label] &&\r\n                                                this.state.selectComponent[componentrow.label] !== \"\" &&\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                    \"dataField\": componentrow.label,\r\n                                                    \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                    \"validateFunction\": validateEmail,\r\n                                                    \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                    \"controlType\": \"textbox\"\r\n                                                })\r\n                                        }\r\n                                    }\r\n                                    return null;\r\n                                })\r\n                                : component.mandatory === true ?\r\n                                    component.inputtype === \"email\" ?\r\n                                        mandatoryFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": component.label, \"dataField\": component.label,\r\n                                            \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                            \"validateFunction\": validateEmail,\r\n                                            \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                            \"controlType\": \"textbox\"\r\n                                        })\r\n                                        :\r\n                                        mandatoryFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": component.label, \"dataField\": component.label,\r\n                                            \"mandatoryLabel\": component.inputtype === \"combo\" ?\r\n                                                \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                            \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\r\n                                        })\r\n                                    : this.state.selectComponent[component.label] ? component.inputtype === \"email\" ?\r\n                                        mandatoryFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": component.label, \"dataField\": component.label,\r\n                                            \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                            \"validateFunction\": validateEmail,\r\n                                            \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                            \"controlType\": \"textbox\"\r\n                                        }) : \"\" : \"\"\r\n\r\n\r\n                        })\r\n                    })\r\n                })\r\n\r\n            selectedRecord = this.state.selectComponent\r\n        }\r\n        else if (this.props.Login.loadTest) {\r\n            mandatoryFields = [{ \"idsName\": \"IDS_TEST\", \"dataField\": \"ntestgrouptestcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },]\r\n            selectedRecord = this.props.Login.selectedTestData\r\n        }\r\n        else if (this.props.Login.loadSpec) {\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_SPECIFICATION\", \"dataField\": \"nallottedspeccode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n            ]\r\n        } else {\r\n            this.props.Login.masterData.registrationTemplate &&\r\n                this.props.Login.masterData.registrationTemplate.jsondata.map(row => {\r\n                    return row.children.map(column => {\r\n                        return column.children.map(component => {\r\n                            return component.hasOwnProperty(\"children\") ?\r\n                                component.children.map(componentrow => {\r\n\r\n                                    if (componentrow.mandatory === true) {\r\n                                        if (componentrow.inputtype === \"email\") {\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                \"dataField\": componentrow.label,\r\n                                                \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                \"validateFunction\": validateEmail,\r\n                                                \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                \"controlType\": \"textbox\"\r\n                                            })\r\n                                        } else {\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true,\r\n                                                \"idsName\": componentrow.label,\r\n                                                \"dataField\": componentrow.label,\r\n                                                \"mandatoryLabel\": componentrow.inputtype === \"combo\" ?\r\n                                                    \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                \"controlType\": componentrow.inputtype === \"combo\" ?\r\n                                                    \"selectbox\" : \"textbox\"\r\n                                            })\r\n                                        }\r\n\r\n                                    } else {\r\n                                        if (componentrow.inputtype === \"email\") {\r\n\r\n                                            selectedRecord[componentrow.label] &&\r\n                                                selectedRecord[componentrow.label] !== \"\" &&\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                    \"dataField\": componentrow.label,\r\n                                                    \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                    \"validateFunction\": validateEmail,\r\n                                                    \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                    \"controlType\": \"textbox\"\r\n                                                })\r\n                                        }\r\n                                    }\r\n                                    return null;\r\n                                })\r\n                                : component.mandatory === true ?\r\n                                    component.inputtype === \"email\" ?\r\n                                        mandatoryFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": component.label, \"dataField\": component.label,\r\n                                            \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                            \"validateFunction\": validateEmail,\r\n                                            \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                            \"controlType\": \"textbox\"\r\n                                        })\r\n                                        :\r\n                                        mandatoryFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": component.label, \"dataField\": component.label,\r\n                                            \"mandatoryLabel\": component.inputtype === \"combo\" ?\r\n                                                \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                            \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\r\n                                        })\r\n                                    : selectedRecord[component.label] ? component.inputtype === \"email\" ?\r\n                                        mandatoryFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": component.label, \"dataField\": component.label,\r\n                                            \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                            \"validateFunction\": validateEmail,\r\n                                            \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                            \"controlType\": \"textbox\"\r\n                                        }) : \"\" : \"\"\r\n                        })\r\n                    })\r\n                })\r\n        }\r\n        if (this.props.esign) {\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"esignpassword\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"esigncomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n            ]\r\n        }\r\n        mandatoryFields.forEach(item => {\r\n            if (selectedRecord[item.dataField] === undefined || selectedRecord[item.dataField] === null) {\r\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                failedControls.push(alertMessage);\r\n                startLabel.push(item.mandatoryLabel)//\"IDS_PROVIDE\";\r\n            }\r\n            else {\r\n                if (item.validateFunction) {\r\n                    const validateData = item.validateFunction;\r\n                    if (validateData(selectedRecord[item.dataField]) === false) {\r\n                        const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                        failedControls.push(alertMessage);\r\n                        startLabel.push(item.mandatoryLabel)\r\n                    }\r\n                }\r\n                else {\r\n                    if (typeof selectedRecord[item.dataField] === \"object\") {\r\n                        //to validate FormSelectSearch component\r\n                        if (selectedRecord[item.dataField].length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)//\"IDS_SELECT\";\r\n                        }\r\n                    }\r\n                    else if (typeof selectedRecord[item.dataField] === \"string\") {\r\n                        //to handle string field -- added trim function\r\n                        if (selectedRecord[item.dataField].trim().length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)\r\n                        }\r\n                    }\r\n                    else {\r\n                        //number field\r\n                        if (selectedRecord[item.dataField].length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // else{\r\n            //     const alertMessage=(item.alertPreFix?item.alertPreFix:'')+this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'')\r\n            //     failedControls.push(alertMessage);\r\n            // }\r\n        });\r\n        // console.log(\"validationPassed:\", failedControls);\r\n\r\n        if (failedControls.length === 0) {\r\n            if (saveType === 4) {\r\n                this.props.onExecuteClick(this.formRef);\r\n            }\r\n            else if (saveType === 3) {\r\n                if (selectedRecord.agree && selectedRecord.agree === transactionStatus.NO) {\r\n\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_CHECKAGREE\" }));\r\n\r\n                } else {\r\n\r\n                    this.props.validateEsign();\r\n                }\r\n            }\r\n            else {\r\n                if (this.props.Login.loadSpec) {\r\n                    let selectedSpec = this.state.selectedSpec\r\n                    selectedSpec[\"nallottedspeccode\"] = this.state.selectedRecord[\"nallottedspeccode\"]\r\n                    selectedSpec[\"sversion\"] = this.state.selectedRecord[\"sversion\"]\r\n                    selectedSpec[\"ntemplatemanipulationcode\"] = this.state.selectedRecord[\"ntemplatemanipulationcode\"]\r\n                 \r\n                    const specBasedComponent=selectedSpec[\"nallottedspeccode\"]&&\r\n                    selectedSpec[\"nallottedspeccode\"].item.ncomponentrequired===3?true:false \r\n                     this.subSampleDataGridList = []\r\n                     if (specBasedComponent) {\r\n                         this.subSampleDataGridList = [\r\n                             { \"idsName\": \"IDS_SPECIMEN\", \"dataField\": \"scomponentname\", width: \"200px\" }\r\n                         ]\r\n                     }\r\n             \r\n                     this.props.Login.masterData.SubSampleTemplate &&\r\n                         this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n                             return row.children.map(column => {\r\n                                 return column.children.map(component => {\r\n                                     // let label = ''\r\n                                     if (component.hasOwnProperty(\"children\")) {\r\n                                         component.children.map(componentrow => {\r\n                                             if (componentrow.mandatory === true) {\r\n                                                 // label = label + '&' + componentrow.label\r\n                                                 this.subSampleDataGridList.push({ \"mandatory\": true, \"idsName\": componentrow.label, \"dataField\": componentrow.label, width: \"150px\" })\r\n                                             }\r\n                                             return this.subSampleDataGridList;\r\n                                         })\r\n                                     } else {\r\n                                         if (component.mandatory)\r\n                                             this.subSampleDataGridList.push({ \"mandatory\": true, \"idsName\": component.label, \"dataField\": component.label, width: \"150px\" });\r\n             \r\n                                         return this.subSampleDataGridList\r\n                                     }\r\n                                    \r\n                                 })\r\n             \r\n                             })\r\n                         })\r\n         \r\n                    //  this.setState({ selectedSpec: this.props.Login.selectedSpec,\r\n                    //      specBasedComponent });\r\n                  \r\n                    // this.setState({\r\n                    //     selectedTestData: [], loadSpec: false, SelectedTest: [], Test: [], Component: [], selectedSpec\r\n                    // })\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            selectedTestData: [],\r\n                            selectComponent: [],\r\n                            selectedComponent: {},\r\n                            loadSpec: false,\r\n                            SelectedTest: [],\r\n                            Test: [],\r\n                            Component: [],\r\n                            subSampleDataGridList:[],\r\n                            selectedSpec,\r\n                            screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename,\r\n                            specBasedComponent\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n\r\n\r\n                }\r\n                else if (this.props.Login.loadComponent) {\r\n                    this.onSaveComponentClick(saveType, this.formRef)\r\n                }\r\n                else if (this.props.Login.loadTest) {\r\n                    this.onSaveTestClick(saveType, this.formRef)\r\n                }\r\n                else if (this.props.Login.loadSubSample) {\r\n                    this.onSaveSubSampleClick(saveType, this.formRef)\r\n                }\r\n                else {\r\n                    this.onSaveClick(saveType, this.formRef);\r\n                }\r\n\r\n            }\r\n        }\r\n        else {\r\n            label = startLabel[0] === undefined ? label : startLabel[0];\r\n            toast.info(`${this.props.intl.formatMessage({ id: label })} ${failedControls[0]}`);\r\n        }\r\n\r\n    }\r\n\r\n    TestChange = (comboData, fieldName) => {\r\n        const selectedTestData = this.state.selectedTestData || {};\r\n        selectedTestData[fieldName] = comboData;\r\n        this.setState({ selectedTestData });\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { selectedTestData }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onComboChange = (comboData, control, customName) => {\r\n        let parentList = []\r\n        let childComboList = []\r\n        let childColumnList = {}\r\n\r\n        let comboName = customName || control.label;\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let product = false;\r\n        let productCategory = false;\r\n        let nproductcatcode = -1\r\n        let nproductcode = -1\r\n\r\n        let materialType = false;\r\n        let instrument = false;\r\n        let instrumentCategory = false;\r\n        // let ninstrumentcatcode = -1\r\n        //let ninstrumentcode = -1\r\n\r\n        let material = false;\r\n        let materialCategory = false;\r\n        //  let nmaterialcatcode = -1\r\n        // let nmaterialcode = -1\r\n        const nsampletypecode = parseInt(this.props.Login.masterData.RealSampleTypeValue.nsampletypecode)\r\n        const inputParem = {\r\n            child: control.child,\r\n            source: control.source,\r\n            primarykeyField: control.valuemember,\r\n            value: comboData.value,\r\n            item: comboData.item,\r\n            label: comboName,\r\n            nameofdefaultcomp: control.name\r\n        }\r\n        if (comboData) {\r\n            selectedRecord[comboName] = comboData;\r\n        } else {\r\n            selectedRecord[comboName] = []\r\n        }\r\n        if (control.name === 'Product') {\r\n            const ProductCategory = this.props.comboComponents.filter(x => x.name === \"Product Category\");\r\n            const ncategorybasedflow = selectedRecord[ProductCategory[0].label] &&\r\n                selectedRecord[ProductCategory[0].label]['item']['jsondata']['ncategorybasedflow'];\r\n            nproductcatcode = selectedRecord[ProductCategory[0].label] &&\r\n                selectedRecord[ProductCategory[0].label].value\r\n            if (ncategorybasedflow !== 3) {\r\n                product = true\r\n                nproductcode = selectedRecord[comboName] &&\r\n                    selectedRecord[comboName].value;\r\n            }\r\n\r\n        }\r\n        else if (control.name === 'Instrument') {\r\n            const InstrumentCategory = this.props.comboComponents.filter(x => x.name === \"Instrument Category\");\r\n            const ncategorybasedflow = selectedRecord[InstrumentCategory[0].label] &&\r\n                selectedRecord[InstrumentCategory[0].label]['item']['jsondata']['ncategorybasedflow'];\r\n            nproductcatcode = selectedRecord[InstrumentCategory[0].label] &&\r\n                selectedRecord[InstrumentCategory[0].label].value\r\n            if (ncategorybasedflow !== 3) {\r\n                instrument = true\r\n                nproductcode = selectedRecord[comboName] &&\r\n                    selectedRecord[comboName].value;\r\n            }\r\n\r\n        }\r\n        else if (control.name === 'Material') {\r\n            const MaterialCategory = this.props.comboComponents.filter(x => x.name === \"Material Category\");\r\n            const ncategorybasedflow = selectedRecord[MaterialCategory[0].label] &&\r\n                selectedRecord[MaterialCategory[0].label]['item']['jsondata']['ncategorybasedflow'];\r\n            nproductcatcode = selectedRecord[MaterialCategory[0].label] &&\r\n                selectedRecord[MaterialCategory[0].label].value\r\n            if (ncategorybasedflow !== 3) {\r\n                material = true\r\n                nproductcode = selectedRecord[comboName] &&\r\n                    selectedRecord[comboName].value;\r\n            }\r\n\r\n        }\r\n        else if (control.name === 'Product Category') {\r\n            const Product = this.props.comboComponents.filter(x => x.name === \"Product\");\r\n            nproductcatcode = comboData.value;\r\n            const ncategorybasedflow = comboData &&\r\n                comboData['item']['jsondata']['ncategorybasedflow'];\r\n            if (ncategorybasedflow === 3) {\r\n                productCategory = true\r\n            } else {\r\n                inputParem[\"ProductName\"] = Product[0].label\r\n                // nproductcode = selectedRecord[comboName] &&\r\n                // selectedRecord[comboName].value;\r\n                product = true\r\n            }\r\n        }\r\n        else if (control.name === 'Instrument Category') {\r\n            const Instrument = this.props.comboComponents.filter(x => x.name === \"Instrument\");\r\n            nproductcatcode = comboData.value;\r\n            const ncategorybasedflow = comboData &&\r\n                comboData['item']['jsondata']['ncategorybasedflow'];\r\n            if (ncategorybasedflow === 3) {\r\n                instrumentCategory = true\r\n            } else {\r\n                inputParem[\"InstrumentName\"] = Instrument[0].label\r\n                // nproductcode = selectedRecord[comboName] &&\r\n                // selectedRecord[comboName].value;\r\n                instrument = true\r\n            }\r\n        }\r\n        else if (control.name === 'Material Category') {\r\n            const Material = this.props.comboComponents.filter(x => x.name === \"Material\");\r\n            nproductcatcode = comboData.value;\r\n            const ncategorybasedflow = comboData &&\r\n                comboData['item']['jsondata']['ncategorybasedflow'];\r\n            if (ncategorybasedflow === 3) {\r\n                materialCategory = true\r\n            } else {\r\n                inputParem[\"MaterialName\"] = Material[0].label\r\n                // nproductcode = selectedRecord[comboName] &&\r\n                // selectedRecord[comboName].value;\r\n                material = true\r\n            }\r\n        }\r\n        else if (control.name === 'Material Type') {\r\n            const MaterialCategory = this.props.comboComponents.filter(x => x.name === \"Material Category\");\r\n            //nproductcatcode = -1;\r\n            // const ncategorybasedflow = comboData &&\r\n            //     comboData['item']['jsondata']['ncategorybasedflow'];\r\n            // if (ncategorybasedflow === 3) {\r\n            //     productCategory = true\r\n            // } else {\r\n            inputParem[\"MaterialCategoryName\"] = MaterialCategory[0].label\r\n            // nproductcode = selectedRecord[comboName] &&\r\n            // selectedRecord[comboName].value;\r\n            materialType = true\r\n            //  }\r\n        }\r\n\r\n        if (control.child && control.child.length > 0) {\r\n            childComboList = getSameRecordFromTwoArrays(this.props.comboComponents, control.child, \"label\")\r\n            childColumnList = {};\r\n            childComboList.map(columnList => {\r\n                const val = comboChild(this.props.comboComponents, columnList, childColumnList, false);\r\n                childColumnList = val.childColumnList\r\n                return null;\r\n            })\r\n\r\n            parentList = getSameRecordFromTwoArrays(this.props.withoutCombocomponent, control.child, \"label\")\r\n            const mapOfFilter = {\r\n                nproductcode, nproductcatcode,\r\n                nsampletypecode: nsampletypecode,\r\n            }\r\n            this.props.getChildValues(inputParem,\r\n                this.props.Login.userInfo, selectedRecord, this.props.Login.comboData,\r\n                childComboList, childColumnList, this.props.withoutCombocomponent,\r\n                [...childComboList, ...parentList], productCategory, product, mapOfFilter,\r\n                instrumentCategory, instrument, materialCategory, material, materialType)\r\n        } else {\r\n\r\n            // if (productCategory) {\r\n            //     const ncategorybasedflow = selectedRecord[comboName] &&\r\n            //         selectedRecord[comboName].value;\r\n\r\n            // } else if\r\n            if (product || productCategory || instrument ||\r\n                material || materialCategory || instrumentCategory || materialType) {\r\n                // const nproductcode = selectedRecord[comboName] &&\r\n                //     selectedRecord[comboName].value;\r\n                const mapOfFilter = {\r\n                    nproductcode, nproductcatcode,\r\n                    nsampletypecode: nsampletypecode,\r\n                }\r\n\r\n                this.props.getChildValues(inputParem,\r\n                    this.props.Login.userInfo, selectedRecord, this.props.Login.comboData,\r\n                    childComboList, childColumnList, this.props.withoutCombocomponent,\r\n                    [...childComboList, ...parentList], productCategory, product, mapOfFilter,\r\n                    instrumentCategory, instrument, materialCategory, material)\r\n            } else {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event, radiotext) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === 'timeonly') {\r\n                selectedRecord['dateonly'] = false;\r\n            }\r\n            if (event.target.name === 'dateonly') {\r\n                selectedRecord['timeonly'] = false;\r\n            }\r\n            const value = selectedRecord[event.target.name];\r\n            if (value !== '' && value !== undefined) {\r\n                if (value.includes(radiotext)) {\r\n                    const index = value.indexOf(radiotext);\r\n                    if (index !== -1) {\r\n                        if (index === 0) {\r\n                            const indexcomma = value.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(indexcomma + 1)\r\n\r\n                            } else {\r\n                                selectedRecord[event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            if (value.slice(index).indexOf(\",\") !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = value.slice(0, index - 1)\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectedRecord[event.target.name] = value + ',' + radiotext;\r\n                }\r\n\r\n            } else {\r\n                selectedRecord[event.target.name] = radiotext;\r\n            }\r\n        }\r\n        else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = radiotext;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnSubSampleChange = (event, radiotext) => {\r\n        const selectComponent = this.state.selectComponent || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === 'timeonly') {\r\n                selectComponent['dateonly'] = false;\r\n            }\r\n            if (event.target.name === 'dateonly') {\r\n                selectComponent['timeonly'] = false;\r\n            }\r\n            const value = selectComponent[event.target.name];\r\n            if (value !== '' && value !== undefined) {\r\n                if (value.includes(radiotext)) {\r\n                    const index = value.indexOf(radiotext);\r\n                    if (index !== -1) {\r\n                        if (index === 0) {\r\n                            const indexcomma = value.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectComponent[event.target.name] = value.slice(indexcomma + 1)\r\n\r\n                            } else {\r\n                                selectComponent[event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            //  const  indexcomma= value.indexOf(\",\")\r\n                            if (value.slice(index).indexOf(\",\") !== -1) {\r\n                                selectComponent[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectComponent[event.target.name] = value.slice(0, index - 1)\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectComponent[event.target.name] = value + ',' + radiotext;\r\n                }\r\n\r\n            } else {\r\n                selectComponent[event.target.name] = radiotext;\r\n            }\r\n        }\r\n        else {\r\n            selectComponent[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectComponent });\r\n    }\r\n\r\n\r\n    onComboSubSampleChange = (comboData, control, customName) => {\r\n        let parentList = []\r\n        let childComboList = []\r\n        let childColumnList = {}\r\n\r\n        let comboName = customName || control.label;\r\n        const selectComponent = this.state.selectComponent || {};\r\n        const inputParem = {\r\n            child: control.child,\r\n            source: control.source,\r\n            primarykeyField: control.valuemember,\r\n            value: comboData.value,\r\n            item: comboData.item,\r\n            label: comboName,\r\n            nameofdefaultcomp: control.name\r\n        }\r\n        if (comboData) {\r\n            selectComponent[comboName] = comboData;\r\n        } else {\r\n            selectComponent[comboName] = []\r\n        }\r\n        if (control.child && control.child.length > 0) {\r\n            childComboList = getSameRecordFromTwoArrays(this.state.SubSamplecomboComponents,\r\n                control.child, \"label\")\r\n            childColumnList = {};\r\n            childColumnList = childComboList.map(columnList => {\r\n                const val = comboChild(this.state.SubSamplecomboComponents,\r\n                    columnList, childColumnList, false);\r\n                return val.childColumnList\r\n            })\r\n\r\n            parentList = getSameRecordFromTwoArrays(this.state.SubSamplewithoutCombocomponent,\r\n                control.child, \"label\")\r\n\r\n            this.props.getChildValues(inputParem,\r\n                this.props.Login.userInfo, selectComponent, this.props.Login.SubSamplecomboData,\r\n                childComboList, childColumnList, this.state.SubSamplewithoutCombocomponent,\r\n                [...childComboList, ...parentList])\r\n        } else {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectComponent }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onNumericInputSubSampleChange = (value, name) => {\r\n        let selectComponent = this.state.selectComponent\r\n        selectComponent[name] = value;\r\n        this.setState({ selectComponent });\r\n    }\r\n\r\n    handleDateChangeComp = (dateValue, dateName, screenName) => {\r\n        const { selectedRecord } = this.state;\r\n        if (screenName === 'component') {\r\n            const selectComponent = this.state.selectComponent;\r\n            selectComponent[dateName] = dateValue;\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    selectComponent\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            selectedRecord[dateName] = dateValue;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n    handleDateChange = (dateValue, dateName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleDateSubSampleChange = (dateValue, dateName) => {\r\n        const { selectComponent } = this.state;\r\n        selectComponent[dateName] = dateValue;\r\n        this.setState({ selectComponent });\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let masterStatus = this.props.masterStatus;\r\n        // const {selectedRecord,selectedSpec,selectedTestData,selectComponent} =this.state\r\n        let check = false;\r\n        if (this.props.Login.selectedRecord !== this.PrevoiusLoginData.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n            check = true\r\n        }\r\n        if (this.props.Login.selectedSpec !== this.PrevoiusLoginData.Login.selectedSpec) {\r\n\r\n           const specBasedComponent=this.props.Login.selectedSpec[\"nallottedspeccode\"]&&\r\n           this.props.Login.selectedSpec[\"nallottedspeccode\"].item.ncomponentrequired===3?true:false \r\n\r\n          \r\n            this.subSampleDataGridList = []\r\n            if (specBasedComponent) {\r\n                this.subSampleDataGridList = [\r\n                    { \"idsName\": \"IDS_SPECIMEN\", \"dataField\": \"scomponentname\", width: \"200px\" }\r\n                ]\r\n            }\r\n    \r\n            this.props.Login.masterData.SubSampleTemplate &&\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n                    return row.children.map(column => {\r\n                        return column.children.map(component => {\r\n                            // let label = ''\r\n                            if (component.hasOwnProperty(\"children\")) {\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.mandatory === true) {\r\n                                        // label = label + '&' + componentrow.label\r\n                                        this.subSampleDataGridList.push({ \"mandatory\": true, \"idsName\": componentrow.label, \"dataField\": componentrow.label, width: \"150px\" })\r\n                                    }\r\n                                    return this.subSampleDataGridList;\r\n                                })\r\n                            } else {\r\n                                if (component.mandatory)\r\n                                    this.subSampleDataGridList.push({ \"mandatory\": true, \"idsName\": component.label, \"dataField\": component.label, width: \"150px\" });\r\n    \r\n                                return this.subSampleDataGridList\r\n                            }\r\n                            // if (label !== '') {\r\n                            //     this.subSampleDataGridList.push({ \"mandatory\": true, \"idsName\": label.substring(1), \"dataField\": label.substring(1),width: \"150px\" })\r\n                            // }\r\n                        })\r\n    \r\n                    })\r\n                })\r\n\r\n            this.setState({ selectedSpec: this.props.Login.selectedSpec,\r\n                specBasedComponent });\r\n            check = true\r\n        }\r\n        if (this.props.Login.selectedTestData !== this.PrevoiusLoginData.Login.selectedTestData) {\r\n            this.setState({ selectedTestData: this.props.Login.selectedTestData });\r\n            check = true\r\n        }\r\n        if (this.props.Login.selectComponent !== this.PrevoiusLoginData.Login.selectComponent) {\r\n            this.setState({ selectComponent: this.props.Login.selectComponent });\r\n            check = true\r\n        }\r\n\r\n        if (this.props.Login.specBasedComponent !== this.PrevoiusLoginData.Login.specBasedComponent) {\r\n            this.setState({ specBasedComponent: this.props.Login.specBasedComponent });\r\n            check = true\r\n        }\r\n\r\n        if (this.props.Login.SubSamplewithoutCombocomponent !== this.PrevoiusLoginData.Login.SubSamplewithoutCombocomponent) {\r\n            this.setState({ SubSamplewithoutCombocomponent: this.props.Login.SubSamplewithoutCombocomponent });\r\n            check = true\r\n        }\r\n        if (this.props.Login.SubSamplecomboComponents !== this.PrevoiusLoginData.Login.SubSamplecomboComponents) {\r\n            this.setState({ SubSamplecomboComponents: this.props.Login.SubSamplecomboComponents });\r\n            check = true\r\n        }\r\n        if (this.props.Login.parentSubSampleColumnList !== this.PrevoiusLoginData.Login.parentSubSampleColumnList) {\r\n            this.setState({ parentSubSampleColumnList: this.props.Login.parentSubSampleColumnList });\r\n            check = true\r\n        }\r\n\r\n\r\n\r\n        if (check) {\r\n            this.PrevoiusLoginData = previousProps\r\n        }\r\n        if (masterStatus !== \"\" && masterStatus !== undefined) {\r\n            toast.warn(masterStatus);\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { masterStatus: \"\" }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n            masterStatus = \"\";\r\n        }\r\n        if (this.props.innerPopup !== this.state.innerTop) {\r\n            setTimeout(() => {\r\n                let scrollDoc = this.props.modalEvent && this.props.modalEvent.id ? document.getElementById(this.props.modalEvent.id) : null;\r\n                if (this.myRef && this.myRef.current) {\r\n                    this.myRef.current.scrollIntoView({ behavior: 'smooth' })\r\n                }\r\n                if (scrollDoc) {\r\n                    scrollDoc.scrollIntoView({ behavior: 'smooth' })\r\n                }\r\n            }, 100)\r\n            this.setState({\r\n                innerTop: this.props.innerPopup\r\n            })\r\n        }\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.state.showFilter\r\n        this.setState({\r\n            showFilter\r\n        })\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        this.setState({\r\n            showFilter: false\r\n        })\r\n    }\r\n    AddSpec = (e) => {\r\n        // this.setState({\r\n        //     loadSpec: true\r\n        // })\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadSpec: true,\r\n                screenName: \"Specification\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    // addTestslide = (e) => {\r\n    //     this.setState({\r\n    //         loadTest: true\r\n    //     })\r\n    // }\r\n\r\n    addTestslide = (selectedComponent, nneedsubsample, specBasedComponent) => {\r\n        if (nneedsubsample) {\r\n            if (selectedComponent && Object.keys(selectedComponent).length > 0) {\r\n                delete selectedComponent[\"selected\"];\r\n                this.props.getTest(selectedComponent, this.props.Login,\r\n                    nneedsubsample, specBasedComponent);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: nneedsubsample ? \"IDS_SELECTSUBSAMPLETOADDTEST\" : \"IDS_SELECTCOMPONENTTOADDTEST\" }));\r\n            }\r\n        } else {\r\n            const selectedComponent1 = {\r\n                nallottedspeccode: this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"].value : -1,\r\n                slno: 1\r\n            }\r\n            this.props.getTest(selectedComponent1,\r\n                this.props.Login,\r\n                nneedsubsample, specBasedComponent);\r\n        }\r\n    }\r\n\r\n    closeSpec = (e) => {\r\n        // this.setState({\r\n        //     loadSpec: false,\r\n        //      selectedRecord: { ...this.state.selectedRecord, ...this.state.selectedSpec },\r\n        //      screenName:\"Specification\"\r\n        // })\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadSpec: false,\r\n                selectedRecord: { ...this.state.selectedRecord, ...this.state.selectedSpec },\r\n                screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeComponent = (e) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadComponent: false,\r\n                selectComponent: {}\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeTest = (e) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadTest: false,\r\n                selectedTestData: {},\r\n                screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeSubSample = (e) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadSubSample: false,\r\n                selectedSubSample: {},\r\n                showSaveContinue: false,\r\n                selectComponent: {},\r\n                selectedTestData: {},\r\n                screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onspecChange = (event, fieldName) => {\r\n        if (event !== null) {\r\n            const selectedRecord = this.state.selectedRecord;\r\n            // const oldpromarycode = this.state.selectedRecord[\"nallottedspeccode\"] !== undefined ?\r\n            //     this.state.selectedRecord[\"nallottedspeccode\"].value : undefined;\r\n            selectedRecord[\"sversion\"] = parseInt(event.item.sversion);\r\n            selectedRecord[\"nallottedspeccode\"] = event;\r\n            //  if(this.props.Login.Component.length=== 0 ){\r\n            this.setState({ selectedRecord });\r\n            // }else{\r\n            //     if(event.value!== oldpromarycode ){\r\n            //     this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to clear the Existing Components ?\",\r\n            //     \"ok\", \"cancel\", () => this.setState({ selectedRecord }));\r\n            //     }\r\n            // }\r\n\r\n        }\r\n    }\r\n\r\n    onTreeClick = (event) => {\r\n        const inputParam = {\r\n            methodUrl: \"TestGroupSpecification\",\r\n            screenName: \"IDS_REGISTRATION\",\r\n            operation: \"get\",\r\n            activeKey: event.key,\r\n            focusKey: event.key,\r\n            keyName: \"treetemplatemanipulation\",\r\n            userinfo: this.props.Login.userInfo,\r\n            selectedNode: event.item,\r\n            selectedRecord: this.state.selectedRecord,\r\n\r\n            primaryKey: event.primaryKey\r\n        };\r\n        if (event.primaryKey !== this.state.selectedRecord[\"ntemplatemanipulationcode\"]) {\r\n            this.props.getNewRegSpecification(inputParam, this.props.Login.masterData);\r\n        }\r\n\r\n\r\n        // if (this.props.Login.Component === undefined || this.props.Login.Component.length === 0) {\r\n        //     //   this.props.getRegSpecification(inputParam, this.props.Login.masterData, getComponents);\r\n        // } else {\r\n        //     // if(event.key!== this.props.Login.ActiveKey ){\r\n        //     // this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to clear the Existing Components ?\",\r\n        //     // \"ok\", \"cancel\", () =>  this.props.getRegSpecification(inputParam, this.props.Login.masterData, getComponents));\r\n        //     // }\r\n        // }\r\n    }\r\n\r\n\r\n    handleComponentRowClick = (event) => {\r\n        let selectedComponent = event.dataItem;\r\n        let SelectedTest = this.props.Login.Test && this.props.Login.Test[selectedComponent.slno] ? this.props.Login.Test[selectedComponent.slno] : [];\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                SelectedTest, selectedComponent,\r\n                testDataState: {\r\n                    skip: 0, take: this.props.Login.settings ?\r\n                        parseInt(this.props.Login.settings[14]) : 5\r\n                }\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    };\r\n\r\n\r\n    AddComponent = () => {\r\n        let Map = {};\r\n        if (this.state.selectedSpec.nallottedspeccode !== undefined\r\n            && this.state.selectedSpec.nallottedspeccode !== \"\") {\r\n            Map[\"ntemplatemanipulationcode\"] = this.state.selectedSpec.ntemplatemanipulationcode;\r\n            Map[\"nallottedspeccode\"] = this.state.selectedSpec.nallottedspeccode.value;\r\n            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n            Map[\"testrequired\"] = false;\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n            this.props.AddComponents(Map);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n        }\r\n\r\n    }\r\n\r\n    onComponentChange = (comboData, fieldName, nneedsubsample) => {\r\n        if (comboData !== null) {\r\n            //  if (!nneedsubsample) {\r\n            const selectComponent = this.state.selectComponent || {};\r\n            if (fieldName === 'ntzdreceivedate') {\r\n                selectComponent[\"ntzdreceivedate\"] = comboData;\r\n                this.setState({ selectComponent })\r\n            } else {\r\n                // const oldspecsampletypecode = selectComponent.nspecsampletypecode\r\n                // if (oldspecsampletypecode !== comboData.item.nspecsampletypecode) {\r\n                //     //selectComponent[\"nneedservice\"] = true;\r\n                // }\r\n                selectComponent[fieldName] = comboData;\r\n                selectComponent[\"Sample Name\"] = comboData.label;\r\n                selectComponent[\"nspecsampletypecode\"] = comboData.item.nspecsampletypecode;\r\n                this.props.componentTest(selectComponent, false, this.state.specBasedComponent,\r\n                    this.props.Login.Component);\r\n            }\r\n\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: {\r\n            //         selectComponent\r\n            //     }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n            // } else {\r\n            //     const selectComponent = this.state.selectComponent || {};\r\n            //     selectComponent[fieldName] = comboData;\r\n            //     // selectComponent[\"nspecsampletypecode\"] = comboData.item.nspecsampletypecode ?  comboData.item.nspecsampletypecode : -1;\r\n            //     this.setState({ selectComponent })\r\n            // }\r\n        }\r\n\r\n    }\r\n    onInputComponentOnChange = (event) => {\r\n        const selectComponent = this.state.selectComponent || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectComponent[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        }\r\n        else {\r\n            selectComponent[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectComponent })\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         selectComponent\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onSaveComponentClick = (saveType, formRef) => {\r\n        const childoperation = this.props.Login.childoperation;\r\n        if (childoperation === \"create\") {\r\n            if (saveType === 1) {\r\n                this.ComponentObjectAfterSave();\r\n            } else if (saveType === 2) {\r\n                this.ComponentObject();\r\n            }\r\n        } else {\r\n            const Component = this.props.Login.Component;\r\n            const Test = this.props.Login.Test;\r\n            const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n\r\n            let selectedComponent = { ...this.state.selectComponent };\r\n            let objcomponent = {};\r\n            objcomponent[\"scomponentname\"] = selectedComponent[\"ncomponentcode\"].label;\r\n            objcomponent[\"ncomponentcode\"] = selectedComponent[\"ncomponentcode\"] ? selectedComponent[\"ncomponentcode\"].value : -1;\r\n            const dreceiveddate = selectedComponent[\"dreceiveddate\"];\r\n            objcomponent[\"dreceiveddate\"] = dreceiveddate;\r\n            objcomponent[\"sreceiveddate\"] = convertDateTimetoString(dreceiveddate, this.props.Login.userInfo);\r\n            objcomponent[\"ntzdreceivedate\"] = selectedComponent[\"ntzdreceivedate\"] ? selectedComponent[\"ntzdreceivedate\"].value : -1;\r\n            objcomponent[\"stzdreceivedate\"] = selectedComponent[\"ntzdreceivedate\"] ? selectedComponent[\"ntzdreceivedate\"].label : \"\";\r\n            objcomponent[\"jsondata\"] = \"\"\r\n            selectedComponent = { ...selectedComponent, ...objcomponent }\r\n\r\n            const index = Component.findIndex(x => x.slno === selectedComponent.slno);\r\n            if (index > -1) {\r\n                Component.splice(index, 1, selectedComponent);\r\n            }\r\n            if (testrequired === 3) {\r\n                this.props.getTestByComponentChange(Component, selectedComponent, this.props.Login);\r\n            }\r\n            else if (selectedComponent[\"nneedservice\"] === true) {\r\n                this.props.getTestByComponentChange(Component, selectedComponent, this.props.Login, true);\r\n            } else {\r\n                delete selectedComponent.nneedservice;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        Component, selectedComponent: selectedComponent, loadComponent: false, openChildModal: false,\r\n                        selectComponent: undefined, parentPopUpSize: \"xl\", Test, SelectedTest: Test[selectedComponent.slno]\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    ComponentObjectAfterSave() {\r\n        const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n        let objcomponent = this.state.selectComponent;\r\n        delete objcomponent.nneedservice;\r\n        if (testrequired === 3) {\r\n            this.props.getTestfromDB(objcomponent, this.props.Login, 2);\r\n        } else {\r\n            const Component = this.props.Login.Component || [];\r\n            let saveComponent = { ...objcomponent };\r\n            saveComponent[\"slno\"] = this.props.Login.Component ? Object.keys(this.props.Login.Component).length + 1 : 1;\r\n            saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\r\n            saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\r\n            const dreceiveddate = objcomponent[\"dreceiveddate\"];\r\n            saveComponent[\"dreceiveddate\"] = dreceiveddate;\r\n            saveComponent[\"sreceiveddate\"] = convertDateTimetoString(dreceiveddate, this.props.Login.userInfo);\r\n            saveComponent[\"nallottedspeccode\"] = objcomponent[\"nallottedspeccode\"] ? objcomponent[\"nallottedspeccode\"] : -1;\r\n            saveComponent[\"ntzdreceivedate\"] = objcomponent[\"ntzdreceivedate\"] ? objcomponent[\"ntzdreceivedate\"].value : -1;\r\n            saveComponent[\"stzdreceivedate\"] = objcomponent[\"ntzdreceivedate\"] ? objcomponent[\"ntzdreceivedate\"].label : \"\";\r\n            saveComponent[\"jsondata\"] = \"\"\r\n            Component.unshift(saveComponent);\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    Component, openChildModal: false, selectedComponent: saveComponent,\r\n                    SelectedTest: [], selectComponent: {}, showSaveContinue: false, loadComponent: false, parentPopUpSize: \"xl\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n    ComponentObject() {\r\n        const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n        let objcomponent = this.state.selectComponent;\r\n        delete objcomponent.nneedservice;\r\n        let objcomponent1 = { ...this.state.selectComponent };\r\n        if (testrequired === 3) {\r\n            this.props.getTestfromDB(objcomponent, this.props.Login, 1);\r\n        } else {\r\n            const Component = this.props.Login.Component || [];\r\n            let saveComponent = { ...objcomponent };\r\n            saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\r\n            saveComponent[\"slno\"] = this.props.Login.Component ? Object.keys(this.props.Login.Component).length + 1 : 1;\r\n            saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\r\n            const dreceiveddate = objcomponent[\"dreceiveddate\"];\r\n            saveComponent[\"dreceiveddate\"] = dreceiveddate;\r\n            saveComponent[\"sreceiveddate\"] = convertDateTimetoString(dreceiveddate, this.props.Login.userInfo);\r\n            saveComponent[\"ntzdreceivedate\"] = objcomponent[\"ntzdreceivedate\"] ? objcomponent[\"ntzdreceivedate\"].value : -1;\r\n            saveComponent[\"stzdreceivedate\"] = objcomponent[\"ntzdreceivedate\"] ? objcomponent[\"ntzdreceivedate\"].label : \"\";\r\n            saveComponent[\"nallottedspeccode\"] = objcomponent[\"nallottedspeccode\"] ? objcomponent[\"nallottedspeccode\"] : -1;\r\n            saveComponent[\"jsondata\"] = \"\"\r\n            Component.unshift(saveComponent);\r\n            objcomponent1[\"scomments\"] = \"\";\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { Component, selectedComponent: saveComponent, SelectedTest: [], selectComponent: objcomponent1 }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onSaveSubSampleClick = (saveType, formRef) => {\r\n        const childoperation = this.props.Login.childoperation;\r\n        if (childoperation === \"create\") {\r\n            if (saveType === 1) {\r\n                this.SubSampleObjectAfterSave();\r\n            } else if (saveType === 2) {\r\n                this.SubSampleObject();\r\n            }\r\n        } else {\r\n            const Component = this.props.Login.Component;\r\n            const Test = this.props.Login.Test;\r\n            const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n            // const defaulttimezone = this.props.Login.defaulttimezone;\r\n            // const userInfo = this.props.Login.userInfo;\r\n            let selectedComponent = { ...this.state.selectComponent };\r\n            let objcomponent = {};\r\n\r\n            objcomponent[\"slno\"] = selectedComponent[\"slno\"] ? selectedComponent[\"slno\"] : \"\"\r\n            // objcomponent[\"nallottedspeccode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"].value : -1;\r\n            // if(this.props.specBasedComponent){\r\n            //     objcomponent[\"scomponentname\"] = selectedComponent[\"ncomponentcode\"].label;\r\n            //     objcomponent[\"ncomponentcode\"] = selectedComponent[\"ncomponentcode\"] ? selectedComponent[\"ncomponentcode\"].value : -1;\r\n            //     objcomponent[\"nspecsampletypecode\"] = selectedComponent[\"nspecsampletypecode\"] ?selectedComponent[\"nspecsampletypecode\"]  : -1;\r\n            // }else{\r\n            //     objcomponent[\"nspecsampletypecode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\r\n            // }\r\n\r\n\r\n\r\n            const subSampleDetail = getRegistrationSubSample(selectedComponent,\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata, this.props.Login.userInfo,\r\n                this.props.Login.defaulttimezone, true, this.state.specBasedComponent, this.state.selectedSpec)\r\n\r\n            objcomponent = { ...objcomponent, ...subSampleDetail.sampleRegistration }\r\n\r\n            let subSampleDataGridList = this.props.Login.subSampleDataGridList || []\r\n            const index1 = subSampleDataGridList.findIndex(x => x.slno === objcomponent.slno)\r\n            if (index1 !== -1)\r\n                subSampleDataGridList[index1] = { ...objcomponent['jsonuidata'], ...objcomponent }\r\n\r\n            // objcomponent[\"jsondata\"] = {}\r\n            // objcomponent[\"jsonuidata\"] = {}\r\n\r\n\r\n            // this.props.Login.masterData.SubSampleTemplate &&\r\n            //     this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n            //         row.children.map(column => {\r\n            //             column.children.map(component => {\r\n            //                 if (component.hasOwnProperty(\"children\")) {\r\n            //                    // let componentrowlabel = ''\r\n            //                  //   let componentrowvalue = ''\r\n            //                     component.children.map(componentrow => {\r\n            //                         if (componentrow.inputtype === \"combo\") {\r\n            //                             objcomponent[\"jsondata\"][componentrow.label] = selectedComponent[componentrow.label] ?\r\n            //                                 { value: selectedComponent[componentrow.label].value, label: selectedComponent[componentrow.label].label } : -1\r\n            //                            // if (componentrow.mandatory || selectedComponent[componentrow.label]) {\r\n            //                               //  componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n            //                                // componentrowvalue = componentrowvalue + ' ' + selectedComponent[componentrow.label].label\r\n            //                           //  }\r\n            //                             objcomponent[\"jsonuidata\"][componentrow.label]=selectedComponent[componentrow.label]?selectedComponent[componentrow.label].label:\"\"\r\n            //                         }\r\n            //                         else if (componentrow.inputtype === \"date\") {\r\n            //                             if (componentrow.mandatory) {\r\n            //                                 selectedComponent[\"jsondata\"][componentrow.label] = convertDateTimetoString(selectedComponent[componentrow.label] ?\r\n            //                                     selectedComponent[componentrow.label] : new Date(), userInfo);\r\n\r\n            //                                     selectedComponent[\"jsonuidata\"][componentrow.label]=selectedComponent[\"jsondata\"][componentrow.label]\r\n            //                             } else {\r\n            //                                 objcomponent[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n            //                                     convertDateTimetoString(selectedComponent[componentrow.label] ?\r\n            //                                         selectedComponent[componentrow.label] : new Date(), userInfo) :\r\n            //                                     selectedComponent[componentrow.label] ? convertDateTimetoString(selectedComponent[componentrow.label] ?\r\n            //                                         selectedComponent[componentrow.label] : new Date(), userInfo) : \"\";\r\n\r\n            //                                         selectedComponent[\"jsonuidata\"][componentrow.label]=selectedComponent[\"jsondata\"][componentrow.label]\r\n\r\n            //                             }\r\n            //                             if (componentrow.timezone) {\r\n            //                                 selectedComponent[\"jsondata\"][`tz${componentrow.label}`] = selectedComponent[`tz${componentrow.label}`] ?\r\n            //                                     { value: selectedComponent[`tz${componentrow.label}`].value, label: selectedComponent[`tz${componentrow.label}`].label } :\r\n            //                                     defaulttimezone ? defaulttimezone : -1\r\n\r\n            //                                     selectedComponent[\"jsonuidata\"][`tz${componentrow.label}`]=selectedComponent[\"jsondata\"][`tz${componentrow.label}`]\r\n            //                             }\r\n            //                             // dateList.push(componentrow.label)\r\n            //                         }\r\n\r\n            //                         else {\r\n            //                             objcomponent[\"jsondata\"][componentrow.label] = selectedComponent[componentrow.label] ?\r\n            //                                 selectedComponent[componentrow.label] : \"\"\r\n            //                                 objcomponent[\"jsonuidata\"][componentrow.label]=objcomponent[\"jsondata\"][componentrow.label]\r\n            //                             // if (selectedComponent[componentrow.label]) {\r\n            //                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n            //                             //     componentrowvalue = componentrowvalue + ' ' + selectedComponent[componentrow.label]\r\n            //                             // }\r\n            //                         }\r\n            //                     })\r\n            //                    // objcomponent[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\r\n            //                 }\r\n            //                 else {\r\n            //                     if (component.inputtype === \"combo\") {\r\n            //                         objcomponent[\"jsondata\"][component.label] = selectedComponent[component.label] ?\r\n            //                             { value: selectedComponent[component.label].value, label: selectedComponent[component.label].label } : -1\r\n\r\n            //                             objcomponent[\"jsonuidata\"][component.label] =selectedComponent[component.label] ? selectedComponent[component.label].label :\"\"\r\n            //                     }\r\n            //                     else if (component.inputtype === \"date\") {\r\n            //                         if (component.mandatory) {\r\n            //                             objcomponent[\"jsondata\"][component.label] = convertDateTimetoString(selectedComponent[component.label] ?\r\n            //                                 selectedComponent[component.label] : new Date(), userInfo);\r\n\r\n            //                                 objcomponent[\"jsonuidata\"][component.label] = objcomponent[\"jsondata\"][component.label]\r\n            //                         } else {\r\n            //                             objcomponent[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n            //                                 convertDateTimetoString(selectedComponent[component.label] ?\r\n            //                                     selectedComponent[component.label] : new Date(), userInfo) :\r\n            //                                 selectedComponent[component.label] ? convertDateTimetoString(selectedComponent[component.label] ?\r\n            //                                     selectedComponent[component.label] : new Date(), userInfo) : \"\";\r\n\r\n            //                                     objcomponent[\"jsonuidata\"][component.label] = objcomponent[\"jsondata\"][component.label]\r\n            //                         }\r\n            //                         if (component.timezone) {\r\n            //                             objcomponent[\"jsondata\"][`tz${component.label}`] = selectedComponent[`tz${component.label}`] ?\r\n            //                                 { value: selectedComponent[`tz${component.label}`].value, label: selectedComponent[`tz${component.label}`].label } :\r\n            //                                 defaulttimezone ? defaulttimezone : -1\r\n\r\n            //                                 objcomponent[\"jsonuidata\"][`tz${component.label}`]  = objcomponent[\"jsondata\"][`tz${component.label}`] \r\n            //                         }\r\n            //                         //dateList.push(component.label)\r\n            //                     }\r\n            //                     else {\r\n            //                         objcomponent[\"jsondata\"][component.label] = selectedComponent[component.label] ?\r\n            //                             selectedComponent[component.label] : \"\"\r\n\r\n            //                             objcomponent[\"jsonuidata\"][component.label] = objcomponent[\"jsondata\"][component.label]\r\n            //                     }\r\n            //                 }\r\n\r\n            //             }\r\n            //             )\r\n            //         })\r\n            //     })\r\n\r\n\r\n            selectedComponent = { ...objcomponent }\r\n\r\n            const index = Component.findIndex(x => x.slno === selectedComponent.slno);\r\n            if (index > -1) {\r\n                Component.splice(index, 1, selectedComponent);\r\n            }\r\n            if (testrequired === 3) {\r\n                this.props.getTestByComponentChange(Component, selectedComponent, this.props.Login);\r\n            }\r\n            else if (selectedComponent[\"nneedservice\"] === true) {\r\n                this.props.getTestByComponentChange(Component, selectedComponent, this.props.Login, true);\r\n            } else {\r\n                delete selectedComponent.nneedservice;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        Component,\r\n                        selectedComponent: selectedComponent,\r\n                        loadSubSample: false, openChildModal: false,\r\n                        selectComponent: {}, parentPopUpSize: \"xl\",\r\n                        Test, SelectedTest: Test[selectedComponent.slno],\r\n                        screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename,\r\n                        subSampleDataGridList\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    SubSampleObjectAfterSave() {\r\n        const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n        let objcomponent = this.state.selectComponent;\r\n        delete objcomponent.nneedservice;\r\n        // const defaulttimezone = this.props.Login.defaulttimezone;\r\n        // const userInfo = this.props.Login.userInfo;\r\n        if (testrequired === 3) {\r\n            this.props.getTestfromDB(objcomponent, this.props.Login, 2);\r\n        } else {\r\n            const Component = this.props.Login.Component || [];\r\n            let saveComponent = {};\r\n            // saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\r\n            //saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\r\n\r\n\r\n            saveComponent[\"slno\"] = this.props.Login.Component ? Object.keys(this.props.Login.Component).length + 1 : 1;\r\n            // if(this.props.specBasedComponent){\r\n            //     saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\r\n            //     saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\r\n            //     saveComponent[\"nspecsampletypecode\"] = objcomponent[\"nspecsampletypecode\"] ?objcomponent[\"nspecsampletypecode\"]  : -1;\r\n            // }else{\r\n            //     saveComponent[\"nspecsampletypecode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\r\n            // }\r\n\r\n            const subSampleDetail = getRegistrationSubSample(objcomponent,\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata, this.props.Login.userInfo,\r\n                this.props.Login.defaulttimezone, true, this.state.specBasedComponent, this.state.selectedSpec)\r\n\r\n            saveComponent = { ...saveComponent, ...subSampleDetail.sampleRegistration }\r\n\r\n            let subSampleDataGridList = this.props.Login.subSampleDataGridList || []\r\n            subSampleDataGridList.push({ ...saveComponent['jsonuidata'], ...saveComponent })\r\n\r\n            // saveComponent[\"jsondata\"] = {}\r\n            // saveComponent[\"jsonuidata\"] = {}\r\n\r\n            // this.props.Login.masterData.SubSampleTemplate &&\r\n            //     this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n            //         row.children.map(column => {\r\n            //             column.children.map(component => {\r\n            //                 if (component.hasOwnProperty(\"children\")) {\r\n            //                    // let componentrowlabel = ''\r\n            //                    // let componentrowvalue = ''\r\n            //                     component.children.map(componentrow => {\r\n            //                         if (componentrow.inputtype === \"combo\") {\r\n            //                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\r\n            //                                 { value: objcomponent[componentrow.label].value, label: objcomponent[componentrow.label].label } : -1\r\n            //                             // if (componentrow.mandatory || objcomponent[componentrow.label]) {\r\n            //                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n            //                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label].label\r\n            //                             // }\r\n            //                             saveComponent[\"jsonuidata\"][componentrow.label] = objcomponent[componentrow.label] ? objcomponent[componentrow.label].label  : \"\"\r\n\r\n            //                         }\r\n            //                         else if (componentrow.inputtype === \"date\") {\r\n            //                             if (componentrow.mandatory) {\r\n            //                                 saveComponent[\"jsondata\"][componentrow.label] = convertDateTimetoString(objcomponent[componentrow.label] ?\r\n            //                                     objcomponent[componentrow.label] : new Date(), userInfo);\r\n\r\n            //                                     saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\r\n            //                             } else {\r\n            //                                 saveComponent[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n            //                                     convertDateTimetoString(objcomponent[componentrow.label] ?\r\n            //                                         objcomponent[componentrow.label] : new Date(), userInfo) :\r\n            //                                     objcomponent[componentrow.label] ? convertDateTimetoString(objcomponent[componentrow.label] ?\r\n            //                                         objcomponent[componentrow.label] : new Date(), userInfo) : \"\";\r\n\r\n            //                                         saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\r\n            //                             }\r\n            //                             if (componentrow.timezone) {\r\n            //                                 saveComponent[\"jsondata\"][`tz${componentrow.label}`] = objcomponent[`tz${componentrow.label}`] ?\r\n            //                                     { value: objcomponent[`tz${componentrow.label}`].value, label: objcomponent[`tz${componentrow.label}`].label } :\r\n            //                                     defaulttimezone ? defaulttimezone : -1\r\n\r\n            //                                     saveComponent[\"jsonuidata\"][`tz${componentrow.label}`] = saveComponent[\"jsondata\"][`tz${componentrow.label}`]\r\n            //                             }\r\n            //                             // dateList.push(componentrow.label)\r\n            //                         }\r\n\r\n            //                         else {\r\n            //                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\r\n            //                                 objcomponent[componentrow.label] : \"\"\r\n\r\n            //                                 saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\r\n            //                             // if (objcomponent[componentrow.label]) {\r\n            //                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n            //                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label]\r\n            //                             // }\r\n            //                         }\r\n            //                     })\r\n            //                     //saveComponent[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\r\n            //                 }\r\n            //                 else {\r\n            //                     if (component.inputtype === \"combo\") {\r\n            //                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\r\n            //                             { value: objcomponent[component.label].value, label: objcomponent[component.label].label } : -1\r\n\r\n            //                             saveComponent[\"jsonuidata\"][component.label] = objcomponent[component.label] ? objcomponent[component.label].label  :\"\"\r\n\r\n            //                         }\r\n            //                     else if (component.inputtype === \"date\") {\r\n            //                         if (component.mandatory) {\r\n            //                             saveComponent[\"jsondata\"][component.label] = convertDateTimetoString(objcomponent[component.label] ?\r\n            //                                 objcomponent[component.label] : new Date(), userInfo);\r\n\r\n            //                                 saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\r\n            //                         } else {\r\n            //                             saveComponent[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n            //                                 convertDateTimetoString(objcomponent[component.label] ?\r\n            //                                     objcomponent[component.label] : new Date(), userInfo) :\r\n            //                                 objcomponent[component.label] ? convertDateTimetoString(objcomponent[component.label] ?\r\n            //                                     objcomponent[component.label] : new Date(), userInfo) : \"\";\r\n            //                                     saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\r\n\r\n            //                                 }\r\n            //                         if (component.timezone) {\r\n            //                             saveComponent[\"jsondata\"][`tz${component.label}`] = objcomponent[`tz${component.label}`] ?\r\n            //                                 { value: objcomponent[`tz${component.label}`].value, label: objcomponent[`tz${component.label}`].label } :\r\n            //                                 defaulttimezone ? defaulttimezone : -1\r\n\r\n            //                                 saveComponent[\"jsonuidata\"][`tz${component.label}`]=  saveComponent[\"jsondata\"][`tz${component.label}`]\r\n            //                         }\r\n            //                         //dateList.push(component.label)\r\n            //                     }\r\n            //                     else {\r\n            //                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\r\n            //                             objcomponent[component.label] : \"\"\r\n\r\n            //                             saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\r\n            //                     }\r\n            //                 }\r\n\r\n            //             }\r\n            //             )\r\n            //         })\r\n            //     })\r\n\r\n            //  saveComponent[\"nallottedspeccode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"].value : -1;\r\n            Component.unshift(saveComponent);\r\n\r\n            let selectedTestData = this.state.selectedTestData[\"ntestgrouptestcode\"];\r\n            const selectedTestArray = [];\r\n            selectedTestData && selectedTestData.map((item) => {\r\n                  item.item['slno']=saveComponent.slno;\r\n                return selectedTestArray.push(item.item);\r\n            });\r\n            // selectedTestArray.map((item,i)=>{\r\n            //    selectedTestArray[i]['slno']=saveComponent.slno;\r\n            // })\r\n            // let selectedComponent = this.props.Login.selectedComponent;\r\n            const Test = this.props.Login.Test || [];\r\n\r\n            const ArrayTest = Test[saveComponent.slno] ? Test[saveComponent.slno] : [];\r\n            //  ArrayTest.push(selectedTestArray);\r\n            Test[saveComponent.slno] = [...ArrayTest, ...selectedTestArray]\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    Component, openChildModal: false,\r\n                    selectedComponent: saveComponent,\r\n                    loadSubSample: false,\r\n                    selectComponent: {},\r\n                    showSaveContinue: false,\r\n                    parentPopUpSize: \"xl\",\r\n                    SelectedTest: Test[saveComponent.slno],\r\n                    Test: Test, selectedTestData: {},\r\n                    screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename,\r\n                    subSampleDataGridList\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    SubSampleObject() {\r\n        const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n        let objcomponent = this.state.selectComponent;\r\n        delete objcomponent.nneedservice;\r\n        let objcomponent1 = { ...this.state.selectComponent };\r\n        // const defaulttimezone = this.props.Login.defaulttimezone;\r\n        // const userInfo = this.props.Login.userInfo;\r\n        if (testrequired === 3) {\r\n            this.props.getTestfromDB(objcomponent, this.props.Login, 1);\r\n        } else {\r\n            const Component = this.props.Login.Component || [];\r\n            let saveComponent = {};\r\n            // if(this.props.specBasedComponent){\r\n            //     saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\r\n            //     saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\r\n            //     saveComponent[\"nspecsampletypecode\"] = objcomponent[\"nspecsampletypecode\"] ?objcomponent[\"nspecsampletypecode\"]  : -1;\r\n            // }else{\r\n            //     saveComponent[\"nspecsampletypecode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\r\n            // }\r\n            saveComponent[\"slno\"] = this.props.Login.Component ? Object.keys(this.props.Login.Component).length + 1 : 1;\r\n\r\n\r\n            const subSampleDetail = getRegistrationSubSample(objcomponent,\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata, this.props.Login.userInfo,\r\n                this.props.Login.defaulttimezone, true, this.state.specBasedComponent, \r\n                this.state.selectedSpec)\r\n\r\n            saveComponent = { ...saveComponent, ...subSampleDetail.sampleRegistration }\r\n\r\n            let subSampleDataGridList = this.props.Login.subSampleDataGridList || []\r\n            subSampleDataGridList.push({ ...saveComponent['jsonuidata'], ...saveComponent })\r\n\r\n            // saveComponent[\"jsondata\"] = {}\r\n            // saveComponent[\"jsonuidata\"] = {}\r\n\r\n            // this.props.Login.masterData.SubSampleTemplate &&\r\n            //   this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n            //         row.children.map(column => {\r\n            //             column.children.map(component => {\r\n            //                 if (component.hasOwnProperty(\"children\")) {\r\n            //                    // let componentrowlabel = ''\r\n            //                    // let componentrowvalue = ''\r\n            //                     component.children.map(componentrow => {\r\n            //                         if (componentrow.inputtype === \"combo\") {\r\n            //                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\r\n            //                                 { value: objcomponent[componentrow.label].value, label: objcomponent[componentrow.label].label } : -1\r\n            //                             // if (componentrow.mandatory || objcomponent[componentrow.label]) {\r\n            //                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n            //                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label].label\r\n            //                             // }\r\n            //                             saveComponent[\"jsonuidata\"][componentrow.label] = objcomponent[componentrow.label] ? objcomponent[componentrow.label].label  : \"\"\r\n\r\n            //                         }\r\n            //                         else if (componentrow.inputtype === \"date\") {\r\n            //                             if (componentrow.mandatory) {\r\n            //                                 saveComponent[\"jsondata\"][componentrow.label] = convertDateTimetoString(objcomponent[componentrow.label] ?\r\n            //                                     objcomponent[componentrow.label] : new Date(), userInfo);\r\n\r\n            //                                     saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\r\n            //                             } else {\r\n            //                                 saveComponent[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n            //                                     convertDateTimetoString(objcomponent[componentrow.label] ?\r\n            //                                         objcomponent[componentrow.label] : new Date(), userInfo) :\r\n            //                                     objcomponent[componentrow.label] ? convertDateTimetoString(objcomponent[componentrow.label] ?\r\n            //                                         objcomponent[componentrow.label] : new Date(), userInfo) : \"\";\r\n\r\n            //                                         saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\r\n            //                             }\r\n            //                             if (componentrow.timezone) {\r\n            //                                 saveComponent[\"jsondata\"][`tz${componentrow.label}`] = objcomponent[`tz${componentrow.label}`] ?\r\n            //                                     { value: objcomponent[`tz${componentrow.label}`].value, label: objcomponent[`tz${componentrow.label}`].label } :\r\n            //                                     defaulttimezone ? defaulttimezone : -1\r\n\r\n            //                                     saveComponent[\"jsonuidata\"][`tz${componentrow.label}`] = saveComponent[\"jsondata\"][`tz${componentrow.label}`]\r\n            //                             }\r\n            //                             // dateList.push(componentrow.label)\r\n            //                         }\r\n\r\n            //                         else {\r\n            //                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\r\n            //                                 objcomponent[componentrow.label] : \"\"\r\n\r\n            //                                 saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\r\n            //                             // if (objcomponent[componentrow.label]) {\r\n            //                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n            //                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label]\r\n            //                             // }\r\n            //                         }\r\n            //                     })\r\n            //                     //saveComponent[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\r\n            //                 }\r\n            //                 else {\r\n            //                     if (component.inputtype === \"combo\") {\r\n            //                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\r\n            //                             { value: objcomponent[component.label].value, label: objcomponent[component.label].label } : -1\r\n\r\n            //                             saveComponent[\"jsonuidata\"][component.label] = objcomponent[component.label] ? objcomponent[component.label].label  :\"\"\r\n\r\n            //                         }\r\n            //                     else if (component.inputtype === \"date\") {\r\n            //                         if (component.mandatory) {\r\n            //                             saveComponent[\"jsondata\"][component.label] = convertDateTimetoString(objcomponent[component.label] ?\r\n            //                                 objcomponent[component.label] : new Date(), userInfo);\r\n\r\n            //                                 saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\r\n            //                         } else {\r\n            //                             saveComponent[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n            //                                 convertDateTimetoString(objcomponent[component.label] ?\r\n            //                                     objcomponent[component.label] : new Date(), userInfo) :\r\n            //                                 objcomponent[component.label] ? convertDateTimetoString(objcomponent[component.label] ?\r\n            //                                     objcomponent[component.label] : new Date(), userInfo) : \"\";\r\n            //                                     saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\r\n\r\n            //                                 }\r\n            //                         if (component.timezone) {\r\n            //                             saveComponent[\"jsondata\"][`tz${component.label}`] = objcomponent[`tz${component.label}`] ?\r\n            //                                 { value: objcomponent[`tz${component.label}`].value, label: objcomponent[`tz${component.label}`].label } :\r\n            //                                 defaulttimezone ? defaulttimezone : -1\r\n\r\n            //                                 saveComponent[\"jsonuidata\"][`tz${component.label}`]=  saveComponent[\"jsondata\"][`tz${component.label}`]\r\n            //                         }\r\n            //                         //dateList.push(component.label)\r\n            //                     }\r\n            //                     else {\r\n            //                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\r\n            //                             objcomponent[component.label] : \"\"\r\n\r\n            //                             saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\r\n            //                     }\r\n            //                 }\r\n\r\n            //             }\r\n            //             )\r\n            //         })\r\n            //     })\r\n\r\n            //   saveComponent[\"nallottedspeccode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ?\r\n            //     this.state.selectedSpec[\"nallottedspeccode\"].value : -1;\r\n            Component.unshift(saveComponent);\r\n            // objcomponent1[\"scomments\"] = \"\";\r\n            //objcomponent1[\"ssubsamplename\"] = \"\";\r\n\r\n            let selectedTestData = this.state.selectedTestData[\"ntestgrouptestcode\"];\r\n            let selectedTestArray = [];\r\n            selectedTestData && selectedTestData.map((item) => {\r\n                 item.item['slno']=saveComponent.slno;\r\n                return selectedTestArray.push(item.item);\r\n            });\r\n            // selectedTestArray.map((item,i)=>{\r\n            //     selectedTestArray[i]['slno']=saveComponent.slno;\r\n            // })\r\n            let Test = this.props.Login.Test || [];\r\n\r\n            const ArrayTest = Test[saveComponent.slno] ? Test[saveComponent.slno] : [];\r\n\r\n            Test[saveComponent.slno] = [...ArrayTest, ...selectedTestArray]\r\n\r\n            const updateInfo = {\r\n                Component, selectedComponent: saveComponent,\r\n                selectComponent: objcomponent1,\r\n                SelectedTest: Test[saveComponent.slno],\r\n                Test: Test, subSampleDataGridList//, selectedTestData: {}\r\n            }\r\n            this.addSubSampleSaveContinue(updateInfo, selectedTestData)\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: {\r\n            //         Component, selectedComponent: saveComponent,\r\n            //         selectComponent: objcomponent1,\r\n            //         SelectedTest: Test[saveComponent.slno],\r\n            //         Test: Test, selectedTestData: {}\r\n            //     }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    addSubSampleSaveContinue = (updateInfo, selectedTestData) => {\r\n        const Map = {}\r\n        Map[\"ntemplatemanipulationcode\"] = this.state.selectedSpec.ntemplatemanipulationcode;\r\n        Map[\"nallottedspeccode\"] = this.state.selectedSpec.nallottedspeccode.value;\r\n        Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n        Map[\"testrequired\"] = false;\r\n        Map[\"userinfo\"] = this.props.Login.userInfo;\r\n        Map[\"nspecsampletypecode\"] = updateInfo.selectedComponent[\"nspecsampletypecode\"] ?\r\n            updateInfo.selectedComponent[\"nspecsampletypecode\"] : -1\r\n        this.props.addSubSampleSaveContinue(updateInfo, Map, this.state.specBasedComponent,\r\n            this.props.Login.Components, selectedTestData, this.props.Login.lstComponent)\r\n    }\r\n\r\n    editComponent = (editselectedcomponent) => {\r\n        let inputData = {};\r\n        let objComponent = { ...editselectedcomponent };\r\n        inputData[\"ntemplatemanipulationcode\"] = this.state.selectedSpec.ntemplatemanipulationcode;\r\n        inputData[\"nallottedspeccode\"] = this.state.selectedSpec.nallottedspeccode.value;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n        this.props.EditComponent(inputData, objComponent, this.props.Login.userInfo, this.props.Login);\r\n    }\r\n\r\n\r\n    editSubSample = (editselectedcomponent, specBasedComponent) => {\r\n        let inputData = {};\r\n        let objComponent = { ...editselectedcomponent };\r\n        const defaulttimezone = this.props.Login.defaulttimezone;\r\n        const userInfo = this.props.Login.userInfo;\r\n        inputData[\"ntemplatemanipulationcode\"] = this.state.selectedSpec.ntemplatemanipulationcode;\r\n        inputData[\"nallottedspeccode\"] = this.state.selectedSpec.nallottedspeccode.value;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n\r\n\r\n\r\n        let selectComponent = this.state.selectComponent;\r\n        selectComponent['nspecsampletypecode'] = objComponent['nspecsampletypecode'] ?\r\n            objComponent['nspecsampletypecode'] : -1\r\n        if (specBasedComponent) {\r\n            selectComponent['ncomponentcode'] = { value: objComponent['ncomponentcode'] ? objComponent['ncomponentcode'] : -1, label: objComponent['scomponentname'] ? objComponent['scomponentname'] : \"\" }\r\n\r\n        }\r\n        selectComponent['slno'] = objComponent['slno']\r\n        this.props.Login.masterData.SubSampleTemplate &&\r\n            this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n                return row.children.map(column => {\r\n                    return column.children.map(component => {\r\n                        if (component.hasOwnProperty(\"children\")) {\r\n                            return component.children.map(componentrow => {\r\n                                if (componentrow.inputtype === \"combo\") {\r\n                                    selectComponent[componentrow.label] = objComponent[\"jsondata\"][componentrow.label] ?\r\n                                        objComponent[\"jsondata\"][componentrow.label] : \"\"\r\n                                }\r\n                                else if (componentrow.inputtype === \"date\") {\r\n\r\n                                    selectComponent[componentrow.label] = objComponent[\"jsondata\"][componentrow.label] ?\r\n                                        rearrangeDateFormat(userInfo, objComponent[\"jsondata\"][componentrow.label]) : new Date();\r\n\r\n                                    if (componentrow.timezone) {\r\n                                        selectComponent[`tz${componentrow.label}`] = objComponent[\"jsondata\"][`tz${componentrow.label}`] ?\r\n                                            objComponent[\"jsondata\"][`tz${componentrow.label}`] :\r\n                                            defaulttimezone ? defaulttimezone : -1\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    selectComponent[componentrow.label] = objComponent[\"jsondata\"][componentrow.label] ?\r\n                                        objComponent[\"jsondata\"][componentrow.label] : \"\"\r\n                                }\r\n                               return null;\r\n                            })\r\n                        }\r\n                        else {\r\n                            if (component.inputtype === \"combo\") {\r\n                                selectComponent[component.label] = objComponent[\"jsondata\"][component.label] ?\r\n                                    objComponent[\"jsondata\"][component.label] : -1\r\n                            }\r\n                            else if (component.inputtype === \"date\") {\r\n\r\n                                selectComponent[component.label] = objComponent[\"jsondata\"][component.label] ?\r\n                                    rearrangeDateFormat(userInfo, objComponent[\"jsondata\"][component.label]) : new Date();\r\n\r\n                                if (component.timezone) {\r\n                                    selectComponent[`tz${component.label}`] = objComponent[\"jsondata\"][`tz${component.label}`] ?\r\n                                        objComponent[\"jsondata\"][`tz${component.label}`] :\r\n                                        defaulttimezone ? defaulttimezone : -1\r\n                                }\r\n                            }\r\n                            else {\r\n                                selectComponent[component.label] = objComponent[\"jsondata\"][component.label] ?\r\n                                    objComponent[\"jsondata\"][component.label] : \"\"\r\n                            }\r\n                            return selectComponent;\r\n                        }\r\n                    }\r\n                    )\r\n                })\r\n            })\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         loadSubSample: true, childoperation: \"update\",\r\n        //         ChildscreenName: \"SubSample\",\r\n        //         screenName: \"SubSample\",\r\n        //         openChildModal: false, selectComponent,\r\n        //         parentPopUpSize: \"lg\", loading: false\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo)\r\n        this.props.editSubSample(inputData, selectComponent,\r\n            this.props.Login.userInfo, specBasedComponent);\r\n    }\r\n\r\n    deleteComponent = (event) => {\r\n        const dataItem = event;\r\n        const Component = this.props.Login.Component;\r\n        const subSampleDataGridList = this.props.Login.subSampleDataGridList;\r\n        const Test = this.props.Login.Test;\r\n        let SelectedTest = this.props.Login.SelectedTest;\r\n        const index = Component.findIndex(x => x.slno === dataItem.slno);\r\n        if (index > -1) {\r\n            Component.splice(index, 1);\r\n            subSampleDataGridList.splice(index, 1);\r\n        }\r\n        Test && Test[dataItem.slno] && delete Test[dataItem.slno]\r\n        SelectedTest = Test && Object.keys(Test).length > 0 && Test[Component[0].slno];\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { Component, selectedComponent: Component[0], Test, SelectedTest }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    deleteTest = (event) => {\r\n        const dataItem = event;\r\n        let SelectedTest = this.props.Login.SelectedTest;\r\n        let selectedComponent = this.props.Login.selectedComponent;\r\n        const Test = this.props.Login.Test;\r\n        const index = SelectedTest.findIndex(x => x.ntestgrouptestcode === dataItem.ntestgrouptestcode);\r\n        if (index > -1) {\r\n            SelectedTest.splice(index, 1);\r\n        }\r\n        Test[selectedComponent.slno] = SelectedTest;\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { Test, SelectedTest }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onSaveTestClick = (saveType, formRef) => {\r\n        let selectedTestData = this.props.Login.selectedTestData[\"ntestgrouptestcode\"];\r\n        let selectedTestArray = [];\r\n        selectedTestData.map((item) => {\r\n            return selectedTestArray.push(item.item);\r\n        });\r\n        let updateInfo = {}\r\n        let selectedComponent = this.props.Login.selectedComponent;\r\n        let Test = this.props.Login.Test || [];\r\n        if (this.props.Login.masterData.nneedsubsample) {\r\n            const ArrayTest = Test[selectedComponent.slno] ? Test[selectedComponent.slno] : [];\r\n            //  ArrayTest.push(selectedTestArray);\r\n            Test[selectedComponent.slno] = [...ArrayTest, ...selectedTestArray]\r\n\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { SelectedTest: Test[selectedComponent.slno], Test: Test, selectedTestData: {}, loadTest: false, parentPopUpSize: \"xl\" }\r\n            }\r\n        } else {\r\n            selectedComponent = { subsamplename: \"NA\", slno: 1 }\r\n            const Component = [selectedComponent]\r\n            const ArrayTest = Test[selectedComponent.slno] ? Test[selectedComponent.slno] : [];\r\n            //  ArrayTest.push(selectedTestArray);\r\n            Test[selectedComponent.slno] = [...ArrayTest, ...selectedTestArray]\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    selectedComponent,\r\n                    Component,\r\n                    SelectedTest: Test[selectedComponent.slno],\r\n                    Test: Test, selectedTestData: {}, loadTest: false,\r\n                    parentPopUpSize: \"xl\"\r\n                    , screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n                }\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    componentDataStateChange = (event) => {\r\n        this.setState({\r\n            componentDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    testDataStateChange = (event) => {\r\n        this.setState({\r\n            testDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    subSampleDataStateChange = (event) => {\r\n        this.setState({\r\n            subSampleDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    addsubSample = (specBasedComponent) => {\r\n        let Map = {};\r\n        if (this.state.selectedSpec.nallottedspeccode !== undefined\r\n            && this.state.selectedSpec.nallottedspeccode !== \"\") {\r\n            Map[\"ntemplatemanipulationcode\"] = this.state.selectedSpec.ntemplatemanipulationcode;\r\n            Map[\"nallottedspeccode\"] = this.state.selectedSpec.nallottedspeccode.value;\r\n            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n            Map[\"testrequired\"] = false;\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n            let data = this.state.SubSamplecomboComponents || []\r\n            const SubSamplewithoutCombocomponent = this.state.SubSamplewithoutCombocomponent || []\r\n            const Layout = this.props.Login.masterData.SubSampleTemplate\r\n                && this.props.Login.masterData.SubSampleTemplate.jsondata\r\n            if (SubSamplewithoutCombocomponent.length === 0 || data.length === 0) {\r\n                if (Layout !== undefined) {\r\n                    Layout.map(row => {\r\n                        return row.children.map(column => {\r\n                            return column.children.map(component => {\r\n                                return component.hasOwnProperty(\"children\") ?\r\n                                    component.children.map(componentrow => {\r\n                                        if (componentrow.inputtype === \"combo\") {\r\n                                            data.push(componentrow)\r\n                                        } else {\r\n                                            SubSamplewithoutCombocomponent.push(componentrow)\r\n                                        }\r\n                                        return null;\r\n                                    })\r\n                                    : component.inputtype === \"combo\" ? data.push(component) :\r\n                                        SubSamplewithoutCombocomponent.push(component)\r\n                            })\r\n                        })\r\n                    })\r\n                    const SubSamplecomboComponents = data\r\n                    let childColumnList = {};\r\n                    data.map(columnList => {\r\n                        const val = comboChild(data, columnList, childColumnList, true);\r\n                        data = val.data;\r\n                        childColumnList = val.childColumnList\r\n                        return null;\r\n                    })\r\n\r\n                    this.props.addsubSample(this.props.Login.masterData,\r\n                        this.props.Login.userInfo, data, this.state.selectComponent,\r\n                        childColumnList, SubSamplecomboComponents,\r\n                        SubSamplewithoutCombocomponent, specBasedComponent,\r\n                        Map, this.props.Login.Component, true)\r\n\r\n                    //  this.props.addsubSample(this.props.Login.userInfo, specBasedComponent, Map)\r\n                }\r\n            } else {\r\n                this.props.addsubSample(this.props.Login.masterData,\r\n                    this.props.Login.userInfo, data, this.state.selectComponent,\r\n                    this.state.parentSubSampleColumnList, this.state.SubSamplecomboComponents,\r\n                    this.state.SubSamplewithoutCombocomponent, specBasedComponent, Map,\r\n                    this.props.Login.Component, false, this.props.Login.SubSamplecomboData,\r\n                    this.props.Login.TestCombined)\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n        }\r\n\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let operation = this.props.Login.operation;\r\n        if (operation === \"update\") {\r\n            this.onUpdateRegistration(saveType, formRef, operation);\r\n        }\r\n        else {\r\n            if (operation === \"create\") {\r\n                this.insertRegistration(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    onUpdateRegistration(saveType, formRef, operation, flag) {\r\n        const inputData = { userinfo: this.props.Login.userInfo };\r\n\r\n        let initialParam = {\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            fromdate: \"\",\r\n            todate: \"\",\r\n            nflag: 2,\r\n            ntype: 2,\r\n            npreregno: String(this.state.selectedRecord.npreregno),\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            nneedsubsample: this.props.Login.masterData\r\n                && this.props.Login.masterData.nneedsubsample,\r\n            checkBoxOperation: 3,\r\n            activeSampleTab: this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",\r\n            activeTestTab: this.props.Login.activeTestTab|| \"IDS_PARAMETERRESULTS\"\r\n\r\n        }\r\n\r\n        inputData[\"initialparam\"] = initialParam;\r\n        // inputData[\"samplebeforeedit\"] = JSON.parse(JSON.stringify(this.props.Login.regRecordToEdit));\r\n        //inputData[\"registration\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n        const param = getRegistration(this.props.Login.masterData,\r\n            this.state.selectedRecord, this.state.selectedSpec,\r\n            this.props.Login.masterData.registrationTemplate.jsondata,\r\n            this.props.Login.userInfo, this.props.Login.defaulttimezone, \r\n            operation,this.props.comboComponents);\r\n\r\n        inputData[\"registration\"] = param.sampleRegistration\r\n        inputData[\"DateList\"] = param.dateList;\r\n        inputData['sampledateconstraints'] = this.sampleeditable.sampledateconstraints;\r\n        inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue\r\n            && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        inputData[\"nneedsubsample\"] = this.props.Login.masterData\r\n            && this.props.Login.masterData.nneedsubsample;\r\n        inputData[\"checkBoxOperation\"] = 3;\r\n        inputData[\"activeSampleTab\"] = this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\"\r\n        inputData[\"activeTestTab\"] = this.props.Login.activeTestTab|| \"IDS_PARAMETERRESULTS\"\r\n        // Object.keys(this.state.selectedRecord).map(key => {\r\n        //     if (typeof this.state.selectedRecord[key] === \"object\") {\r\n        //         if (this.state.selectedRecord[key] === null) {\r\n        //             return inputData[\"registration\"][key] = this.state.selectedRecord[key];\r\n        //         }\r\n        //         else if (this.state.selectedRecord[key] instanceof Date) {\r\n        //             return inputData[\"registration\"][key] = formatInputDate(this.state.selectedRecord[key], false);\r\n        //         }\r\n        //         else {\r\n        //             return inputData[\"registration\"][key] = this.state.selectedRecord[key].value\r\n        //         }\r\n        //     }\r\n        //     else {\r\n        //         return inputData[\"registration\"][key] = this.state.selectedRecord[key];\r\n        //     }\r\n        // }\r\n        //  )\r\n        // console.log(\"edit:\", inputData);\r\n\r\n        // if (inputData[\"registration\"] ) {\r\n        //     delete inputData[\"registration\"][\"esignpassword\"]\r\n        //     delete inputData[\"registration\"][\"esigncomments\"]\r\n        //     delete inputData[\"registration\"][\"agree\"]\r\n        // }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Registration\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef,\r\n            action: 'editSample',\r\n            showConfirmAlert: false,\r\n            resultDataState: this.state.resultDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            // dataState:undefined, selectedId\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    saveType, parentPopUpSize: \"lg\",\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            this.props.updateRegistration(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    findSubsampleDateList(subsampletemplate) {\r\n        const dateList = []\r\n        subsampletemplate && subsampletemplate.map(row => {\r\n            return row.children.map(column => {\r\n                return column.children.map(component => {\r\n                    if (component.hasOwnProperty(\"children\")) {\r\n                        return component.children.map(componentrow => {\r\n                            if (componentrow.inputtype === \"date\") {\r\n                                dateList.push(componentrow.label)\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        if (component.inputtype === \"date\") {\r\n                            dateList.push(component.label)\r\n                        }\r\n                        return dateList\r\n                    }\r\n                }\r\n                )\r\n            })\r\n        })\r\n        return dateList;\r\n    }\r\n\r\n    insertRegistration() {\r\n        let Components = this.props.Login.Component;\r\n        if (Components && Components.length > 0) {\r\n            let Test = this.props.Login.Test;\r\n            let Map = {};\r\n            Map[\"testgrouptest\"] = TestListManipulation(Components, Test);\r\n            Map[\"RegistrationSample\"] = SubSample(this.props.Login.Component ? this.props.Login.Component : [], this.state.specBasedComponent);\r\n            Map[\"subsampleDateList\"] = this.findSubsampleDateList(this.props.Login.masterData.SubSampleTemplate.jsondata);\r\n            //Map[\"FromDate\"] = rearrangeDateFormat(this.props.Login.userInfo, this.props.fromDate);//formatDate(this.fromDate);\r\n            // Map[\"ToDate\"] = rearrangeDateFormat(this.props.Login.userInfo, this.props.toDate);//formatDate(this.toDate);\r\n            Map[\"FromDate\"] = \"\";\r\n            Map[\"ToDate\"] = \"\";\r\n            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n            Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n            Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n            Map[\"nfilterstatus\"] = transactionStatus.PREREGISTER;\r\n            Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.registrationTemplate\r\n                && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;\r\n            Map[\"nneedsubsample\"] = this.props.Login.masterData && this.props.Login.masterData.nneedsubsample;\r\n            Map[\"checkBoxOperation\"] = 3;\r\n\r\n\r\n            const param = getRegistration(this.props.Login.masterData,\r\n                this.state.selectedRecord, this.state.selectedSpec,\r\n                this.props.Login.masterData.registrationTemplate.jsondata,\r\n                this.props.Login.userInfo, this.props.Login.defaultTimeZone,'create',\r\n                this.props.comboComponents);\r\n            Map[\"Registration\"] = param.sampleRegistration\r\n            Map[\"DateList\"] = param.dateList\r\n            Map['sampledateconstraints'] = this.sampleeditable.sampledateconstraints;\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n            Map[\"nflag\"] = 2;\r\n            // Map[\"ntype\"] = 2;\r\n            Map[\"activeTestTab\"] = this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\";\r\n            Map[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n            Map[\"multipleselectionFlag\"] = this.props.Login.settings && parseInt(this.props.Login.settings[7]) === 3 ? true : false;\r\n\r\n            const inputParam = {\r\n                inputData: Map,\r\n                postParamList: this.props.postParamList,\r\n                action: \"preregister\"\r\n            }\r\n            this.props.insertRegistration(inputParam, this.props.Login.masterData)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_ADDSUBSAMPLETOPREREGISTER\" }));\r\n        }\r\n\r\n    }\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    render() {\r\n\r\n        let saveType = 1;\r\n        if (this.props.ignoreFormValidation) {\r\n            saveType = 5;\r\n        }\r\n        let buttonLabel = \"Save\";\r\n        let idsLabel = \"IDS_SAVE\";\r\n        if (this.props.buttonLabel) {\r\n            buttonLabel = this.props.buttonLabel;\r\n            idsLabel = 'IDS_'.concat(buttonLabel.toUpperCase());\r\n        }\r\n        // const testColumnList = [\r\n        //     { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", width: \"200px\" },\r\n        //     { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", width: \"150px\" },\r\n        //     { \"idsName\": \"IDS_SOURCE\", \"dataField\": \"ssourcename\", width: \"150px\" },\r\n        //     { \"idsName\": \"IDS_METHOD\", \"dataField\": \"smethodname\", width: \"150px\" },\r\n        //     { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", width: \"200px\" }]\r\n        return (\r\n            <Modal\r\n                size={this.props.Login.loadComponent ?\r\n                    'lg' : this.props.Login.loadSpec ? 'lg' :\r\n                        this.props.Login.loadTest ? 'lg' :\r\n                            this.props.Login.loadSubSample ? 'lg' : 'xl'}\r\n                // size={this.props.templateData[0] ?\r\n                //     this.props.templateData[0].children ?\r\n                //         this.props.templateData[0].children.length >= 2 ? 'xl' : 'lg' : 'lg' : 'lg'}\r\n                backdrop=\"static\"\r\n                //className={this.props.className || \"registrationModel\"}\r\n                className={this.props.className || \"\"}\r\n                show={this.props.Login.openPortal}\r\n                onHide={this.props.closeModal}\r\n                enforceFocus={false}\r\n                dialogClassName=\"modal-dialog-slideout freakerstop\"\r\n                aria-labelledby=\"add-user\">\r\n                {/* <Modal.Header className=\"d-flex align-items-center mb-2\"> */}\r\n                <Modal.Header className=\"d-flex align-items-center\">\r\n                    <Modal.Title id=\"add-user\" className=\"header-primary flex-grow-1\">\r\n                        {this.props.graphView === true ? \"\" : this.props.Login.inputParam ?\r\n                            this.props.Login.esign === true ?\r\n                                <FormattedMessage id={\"IDS_ESIGN\"} defaultMessage=\"Esign\" />\r\n                                : this.props.loginoperation ?\r\n                                    <FormattedMessage id={this.props.Login.screenName} />\r\n                                    : <>\r\n                                        {this.props.operation ?\r\n                                            <>\r\n                                                <FormattedMessage id={this.props.Login.operation && \"IDS_\".concat(this.props.Login.operation.toUpperCase())}\r\n                                                    defaultMessage='Add' />\r\n                                                {\" \"}\r\n                                                {\r\n                                                    this.props.Login.screenName ?\r\n                                                        <FormattedMessage id={this.props.Login.screenName} />\r\n                                                        : \"\"\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            this.props.Login.screenName ?\r\n                                                <FormattedMessage id={this.props.Login.screenName} />\r\n                                                : \"\"}\r\n                                    </>\r\n                            : \"\"}\r\n                    </Modal.Title>\r\n                    <Button className=\"btn-user btn-cancel\" variant=\"\" onClick={this.props.Login.loadSpec ?\r\n                        this.closeSpec : this.props.Login.loadTest ? this.closeTest : this.props.Login.loadComponent ?\r\n                            this.closeComponent : this.props.Login.loadSubSample ? this.closeSubSample :\r\n                                this.props.closeModal}>\r\n                        <FormattedMessage id='IDS_CANCEL' defaultMessage='Cancel' />\r\n                    </Button>\r\n                    {this.props.esign === true ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(3)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SUBMIT' defaultMessage='Submit' />\r\n                        </Button>\r\n                        :\r\n                        (this.props.operation === \"create\" || this.props.operation === \"update\") && this.props.showValidate ?\r\n                            <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(4)}>\r\n                                <FontAwesomeIcon icon={faSave} /> { }\r\n                                <FormattedMessage id='IDS_VALIDATE' defaultMessage='Validate' />\r\n                            </Button> :\r\n                            this.props.showCalculate ?\r\n                                <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(saveType)}>\r\n                                    <FontAwesomeIcon icon={faSave} /> { }\r\n                                    <FormattedMessage id='IDS_CALCULATE' defaultMessage='Calculate' />\r\n                                </Button> :\r\n                                this.props.showParam === true && this.props.showExecute ?\r\n                                    <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(4)}>\r\n                                        <FontAwesomeIcon icon={faCalculator} /> { }\r\n                                        <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' />\r\n                                    </Button> :\r\n                                    this.props.noSave || this.props.graphView ?\r\n                                        this.props.operation === \"view\" ? \"\"\r\n                                            : <Button className=\"btn btn-user btn-primary-blue\" role=\"button\"\r\n                                                onClick={this.props.resetView}\r\n                                            >\r\n                                                <FormattedMessage id={\"IDS_RESET\"} defaultMessage='Reset' />\r\n                                            </Button>\r\n                                        : this.props.hideSave ? \"\" :\r\n                                            <Button className=\" btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(saveType)}>\r\n                                                <FontAwesomeIcon icon={faSave} /> { }\r\n                                                <FormattedMessage id={idsLabel} defaultMessage={buttonLabel} />\r\n                                            </Button>\r\n                    }\r\n                    {this.props.Login.operation === \"create\" && this.props.Login.showSaveContinue ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(2)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SAVECONTINUE' defaultMessage='Save & Continue' />\r\n                        </Button>\r\n                        : \"\"\r\n                    }\r\n                    {(this.props.operation === \"create\" || this.props.operation === \"update\")\r\n                        && this.props.esign !== true && this.props.showExecute === true && this.props.showSave ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(1)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SAVE' defaultMessage='Save' />\r\n                        </Button>\r\n                        : \"\"}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ModalInner ref={this.myRef}>\r\n                        <Card.Body>\r\n                            {/* <SplitterLayout borderColor=\"#999\"\r\n                                primaryIndex={1} percentage={true}\r\n                                secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                                primaryMinSize={40}\r\n                                secondaryMinSize={20}\r\n                                vertical={true}\r\n                            > */}\r\n                            <React.Fragment>\r\n                                <Form ref={this.formRef}>\r\n                                    {\r\n                                        this.props.Login.loadSpec ?\r\n                                            <AddSpecification\r\n                                                AgaramTree={this.props.Login.AgaramTree}\r\n                                                openNodes={this.props.Login.OpenNodes}\r\n                                                handleTreeClick={this.onTreeClick}\r\n                                                focusKey={this.props.Login.FocusKey}\r\n                                                activeKey={this.props.Login.ActiveKey}\r\n                                                Specification={this.props.Login.Specification}\r\n                                                selectedSpec={this.state.selectedSpec}\r\n                                                selectedRecord={this.state.selectedRecord}\r\n                                                onSpecChange={this.onspecChange}\r\n                                            />\r\n                                            : this.props.Login.loadTest ?\r\n                                                <AddTest\r\n                                                    TestCombined={this.props.Login.TestCombined || []}\r\n                                                    TestChange={this.TestChange}\r\n                                                    selectedTestData={this.props.Login.selectedTestData}\r\n                                                /> : this.props.Login.loadComponent ?\r\n                                                    <AddComponentPopUp\r\n                                                        ref={this.myScrollRef}\r\n                                                        selectComponent={this.state.selectComponent || {}}\r\n                                                        RealSampleTypeValue={this.props.Login.masterData.RealSampleTypeValue || {}}\r\n                                                        RealRegTypeValue={this.props.Login.masterData.RealRegTypeValue || {}}\r\n                                                        RealRegSubTypeValue={this.props.Login.masterData.RealRegSubTypeValue || {}}\r\n                                                        RealFilterStatusValue={this.props.Login.masterData.RealFilterStatusValue || {}}\r\n                                                        formatMessage={this.props.intl.formatMessage}\r\n                                                        handleDateChange={this.handleDateChangeComp}\r\n                                                        Component={this.props.Login.lstComponent || []}\r\n                                                        onInputComponentOnChange={this.onInputComponentOnChange}\r\n                                                        // onComboChange={this.onComponentComboChange}\r\n                                                        timeZoneList={this.props.Login.timeZoneList}\r\n                                                        onComponentChange={this.onComponentChange}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        sreceiveddate={this.props.Login.sreceiveddate || []}\r\n                                                        CurrentTime={this.props.Login.CurrentTime}\r\n                                                    />\r\n                                                    : this.props.Login.loadSubSample ?\r\n                                                        <AddSubSample\r\n                                                            Component={this.props.Login.lstComponent || []}\r\n                                                            selectComponent={this.state.selectComponent}\r\n                                                            // Unit={this.props.Login.Unit || []}\r\n                                                            onComponentChange={this.onComponentChange}\r\n                                                            onInputComponentOnChange={this.onInputComponentOnChange}\r\n                                                            templateData={this.props.Login.masterData.SubSampleTemplate &&\r\n                                                                this.props.Login.masterData.SubSampleTemplate.jsondata}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n                                                            timeZoneList={this.props.Login.timeZoneList}\r\n                                                            defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                                            handleDateChange={this.handleDateSubSampleChange}\r\n                                                            onInputOnChange={this.onInputOnSubSampleChange}\r\n                                                            onNumericInputChange={this.onNumericInputSubSampleChange}\r\n                                                            comboData={this.props.Login.SubSamplecomboData}\r\n                                                            onComboChange={this.onComboSubSampleChange}\r\n                                                            TestCombined={this.props.Login.TestCombined || []}\r\n                                                            TestChange={this.TestChange}\r\n                                                            selectedTestData={this.state.selectedTestData}\r\n                                                            childoperation={this.props.Login.childoperation}\r\n                                                            specBasedComponent={this.state.specBasedComponent}\r\n                                                        />\r\n                                                        : <RegisterSlideOut\r\n                                                            editfield={this.sampleeditable &&\r\n                                                                this.sampleeditable['sampleeditable']}\r\n                                                            ntransactionstatus={this.props.Login.masterData && this.props.Login.masterData.selectedSample &&\r\n                                                                this.props.Login.masterData.selectedSample.length > 0 && this.props.Login.masterData.selectedSample[0].ntransactionstatus}\r\n                                                            loadPreregister={this.props.Login.loadPreregister}\r\n                                                            selectedSpec={this.state.selectedSpec}\r\n                                                            selectedRecord={this.state.selectedRecord}\r\n                                                            selectedComponent={this.props.Login.selectedComponent}\r\n                                                            subSampleDataGridList={this.props.Login.subSampleDataGridList || []}\r\n                                                            SelectedTest={this.props.Login.SelectedTest}\r\n                                                            selectedTestData={this.state.selectedTestData}\r\n                                                            userRoleControlRights={this.props.userRoleControlRights}\r\n                                                            templateData={this.props.Login.masterData.registrationTemplate &&\r\n                                                                this.props.Login.masterData.registrationTemplate.jsondata}\r\n                                                            handleChange={this.props.handleChange}\r\n                                                            handleDateChange={this.handleDateChange}\r\n                                                            onInputOnChange={this.onInputOnChange}\r\n                                                            onNumericInputChange={this.onNumericInputChange}\r\n                                                            comboData={this.props.Login.comboData}\r\n                                                            onComboChange={this.onComboChange}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n                                                            timeZoneList={this.props.Login.timeZoneList}\r\n                                                            defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                                            AddSpec={this.AddSpec}\r\n                                                            addTest={this.addTestslide}\r\n                                                            handleComponentRowClick={this.handleComponentRowClick}\r\n                                                            nneedsubsample={this.props.Login.masterData\r\n                                                                && this.props.Login.masterData.nneedsubsample}\r\n                                                            specBasedComponent={this.state.specBasedComponent}\r\n                                                            AddComponent={this.AddComponent}\r\n                                                            deleteComponent={this.deleteComponent}\r\n                                                            deleteTest={this.deleteTest}\r\n                                                            editComponent={this.editComponent}\r\n                                                            componentColumnList={this.componentColumnList}\r\n                                                            Component={this.props.Login.Component}\r\n                                                            TestChange={this.TestChange}\r\n                                                            testDataState={this.state.testDataState}\r\n                                                            subSampleDataState={this.state.subSampleDataState}\r\n                                                            //componentDataState={this.state.componentDataState}\r\n                                                            testDataStateChange={this.testDataStateChange}\r\n                                                            //componentDataStateChange={this.componentDataStateChange}\r\n                                                            subSampleDataStateChange={this.subSampleDataStateChange}\r\n                                                            addsubSample={this.addsubSample}\r\n                                                            editSubSample={this.editSubSample}\r\n                                                            // onNumericInputChange={this.onNumericInputChange}\r\n                                                            subSampleDataGridFields={this.subSampleDataGridList}\r\n                                                           operation={this.props.Login.operation}\r\n\r\n                                                        />\r\n                                    }\r\n                                </Form>\r\n                            </React.Fragment>\r\n                            {/* </SplitterLayout> */}\r\n                        </Card.Body>\r\n                    </ModalInner>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getChildValues,\r\n    getPreviewTemplate, getNewRegSpecification,\r\n    AddComponents, updateStore, EditComponent, getTest,\r\n    addsubSample, editSubSample, insertRegistration,\r\n    updateRegistration, addSubSampleSaveContinue, componentTest\r\n}\r\n)(injectIntl(PreRegisterSlideOutModal));"]},"metadata":{},"sourceType":"module"}