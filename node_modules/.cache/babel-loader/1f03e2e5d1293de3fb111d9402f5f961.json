{"ast":null,"code":"import _slicedToArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import DataGrid from'../../components/data-grid/data-grid.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{ListWrapper}from'../../components/client-group.styles';import AddTemporaryStorage from'../storagemanagement//AddTemporaryStorage';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import{transactionStatus}from'../../components/Enumeration';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{callService,crudMaster,updateStore,validateEsignCredential,getComboTemporaryStorage,getBarcodeDataTemporaryStorage,saveTemporaryStorage,getActiveTemporaryStorageById,getTemporaryStorage,validateEsignCredentialTemporaryStorage}from'../../actions';// import { DEFAULT_RETURN } from '../../../actions/LoginTypes';\nimport{sortData,getControlMap,getStartOfDay,getEndOfDay,convertDateValuetoString,rearrangeDateFormat,constructOptionList,Lims_JSON_stringify,formatInputDate,showEsign}from'../../components/CommonScript';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var TemporaryStorage=/*#__PURE__*/function(_React$Component){_inherits(TemporaryStorage,_React$Component);var _super=_createSuper(TemporaryStorage);function TemporaryStorage(props){var _this;_classCallCheck(this,TemporaryStorage);_this=_super.call(this,props);_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esignreason']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};if(_this.props.Login.operation==='update'){_this.props.validateEsignCredentialTemporaryStorage(inputParam,\"openModal\");}else{_this.props.validateEsignCredential(inputParam,\"openModal\");}};_this.deleteRecord=function(deleteParam){var _inputData;var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:(_inputData={},_defineProperty(_inputData,_this.props.Login.inputParam.methodUrl.toLowerCase(),deleteParam.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_defineProperty(_inputData,\"fromDate\",fromDate),_defineProperty(_inputData,\"toDate\",toDate),_defineProperty(_inputData,\"nprojecttypecode\",_this.props.Login.masterData.selectedProjectType.value||-1),_defineProperty(_inputData,\"ntemporarystoragecode\",deleteParam.selectedRecord['ntemporarystoragecode']),_inputData),operation:deleteParam.operation,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:\"IDS_TEMPORARYSTOARGE\"}),operation:deleteParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.onSaveClick=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord||{};var sbarcodeid=_this.props.Login.masterData.jsondataBarcodeData;if(selectedRecord[\"sbarcodeid\"]&&selectedRecord[\"sbarcodeid\"].length===parseInt(_this.props.Login.masterData.nbarcodelength&&_this.props.Login.masterData.nbarcodelength)){if(sbarcodeid!=undefined&&sbarcodeid!=''){var inputData={};inputData[\"temporarystorage\"]={};if(_this.props.Login.operation===\"create\"){inputData[\"temporarystorage\"][\"nunitcode\"]=selectedRecord[\"nunitcode\"]?selectedRecord[\"nunitcode\"].value:-1;inputData[\"temporarystorage\"][\"nsampleqty\"]=selectedRecord[\"nsampleqty\"]?Number(selectedRecord[\"nsampleqty\"]):-1;inputData[\"temporarystorage\"][\"jsondata\"]=Lims_JSON_stringify(JSON.stringify(_this.props.Login.masterData.jsondataBarcodeData));}inputData[\"temporarystorage\"][\"nprojecttypecode\"]=_this.props.Login.masterData.selectedProjectType.value||transactionStatus.NA;if(_this.props.Login.operation===\"update\"){inputData[\"temporarystorage\"][\"ntemporarystoragecode\"]=_this.props.Login.selectedId;}inputData[\"temporarystorage\"][\"sbarcodeid\"]=selectedRecord[\"sbarcodeid\"]?selectedRecord[\"sbarcodeid\"]:-1;inputData[\"temporarystorage\"][\"dstoragedatetime\"]=formatInputDate(selectedRecord[\"dstoragedatetime\"],false);inputData[\"temporarystorage\"][\"scomments\"]=selectedRecord[\"scomments\"]&&selectedRecord[\"scomments\"]||\"\";inputData[\"temporarystorage\"][\"ntzstoragedatetime\"]=selectedRecord[\"ntzstoragedatetime\"]&&selectedRecord[\"ntzstoragedatetime\"].value||transactionStatus.NA;inputData[\"temporarystorage\"][\"noffsetstoragedatetime\"]=selectedRecord[\"noffsetstoragedatetime\"]&&selectedRecord[\"noffsetstoragedatetime\"].value||transactionStatus.NA;var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;inputData[\"fromDate\"]=fromDate;inputData[\"toDate\"]=toDate;inputData[\"nprojecttypecode\"]=_this.props.Login.masterData.selectedProjectType.value||transactionStatus.NA;inputData[\"userinfo\"]=_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sformname:Lims_JSON_stringify(_this.props.Login.userInfo.sformname),smodulename:Lims_JSON_stringify(_this.props.Login.userInfo.smodulename)});var inputParam={nformcode:_this.props.Login.userInfo.nformcode,classUrl:\"temporarystorage\",methodUrl:\"TemporaryStorage\",inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,selectedRecord:_this.state.selectedRecord||{}};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.saveTemporaryStorage(inputParam,masterData);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_CLICKENTERTOJSONRECORD\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_INVALIDABARCODE\"//ALPD-4500 Changed IDS value to throw alert correctly by VISHAKH\n}));}};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};if(fieldName===\"nprojecttypecode\"){var inputData=[];var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;inputData[\"fromDate\"]=fromDate;inputData[\"toDate\"]=toDate;inputData={userinfo:_this.props.Login.userInfo,nprojecttypecode:parseInt(comboData.value),selectedProjectType:comboData,toDate:toDate,fromDate:fromDate};var masterData=_objectSpread({},_this.props.Login.masterData);var inputParam={masterData:masterData,inputData:inputData};_this.props.getTemporaryStorage(inputParam);}else{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}};_this.handleDateChangeSlidout=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.autoSaveGetDataTempoaryStorage=function(event){var selectedRecord=_this.state.selectedRecord||{};event.stopPropagation();//let invalidbarcode = event.target.value.substring(1, 2);\nif(parseInt(selectedRecord[\"sbarcodeid\"]&&selectedRecord[\"sbarcodeid\"].length)===parseInt(_this.props.Login.masterData.nbarcodelength&&_this.props.Login.masterData.nbarcodelength)&&event.keyCode===13){// if (parseInt(invalidbarcode) === 3) {\nvar inputParam={nprojecttypecode:_this.props.Login.masterData.selectedProjectType.value,spositionvalue:event.target.value,userinfo:_this.props.Login.userInfo,nbarcodeLength:_this.props.Login.settings&&parseInt(_this.props.Login.settings[37]),jsondata:{},masterData:_this.props.Login.masterData,selectedRecord:selectedRecord||{}};_this.props.getBarcodeDataTemporaryStorage(inputParam);/*}\r\n            else {\r\n                toast.warn(\r\n                    this.props.intl.formatMessage({\r\n                        id: \"IDS_INVALIDBARCODEID\",\r\n                    })\r\n                );\r\n            }*/}/*  else {\r\n             toast.warn(\r\n                 this.props.intl.formatMessage({\r\n                     id: \"IDS_INVALIDBARCODELENGTH\",\r\n                 })\r\n             );\r\n         }*/};_this.onInputOnChange=function(event,fieldname){var selectedRecord=_this.state.selectedRecord||{};if(fieldname==='nsampleqty'){if(/^\\d{0,3}(\\.\\d{0,2})?$/.test(event.target.value)||event.target.value===\"\"){selectedRecord[fieldname]=event.target.value;}}else if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}if(dateName==='todate'){selectedRecord[dateName]=dateValue;}else{selectedRecord[dateName]=dateValue;}selectedRecord[dateName]=dateValue;// this.setState({ selectedRecord });\n// this.reloadData(selectedRecord, true);\nvar dateObj={};var obj=convertDateValuetoString(selectedRecord['fromdate']&&selectedRecord['fromdate']||_this.props.Login.masterData.FromDate,selectedRecord['todate']&&selectedRecord['todate']||_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:fromDate,toDate:toDate,nprojecttypecode:_this.props.Login.masterData.selectedProjectType&&_this.props.Login.masterData.selectedProjectType.value||-1,selectedProjectType:_this.props.Login.masterData.selectedProjectType}};_this.props.getTemporaryStorage(inputParam);};_this.reloadData=function(){//this.searchRef.current.value = \"\";\nvar fromDate=_this.props.Login.masterData.FromDate;var toDate=_this.props.Login.masterData.ToDate;var obj=convertDateValuetoString(fromDate,toDate,_this.props.Login.userInfo,true);var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:obj.fromDate,toDate:obj.toDate,\"nprojecttypecode\":_this.props.Login.masterData.selectedProjectType.value||-1// currentdate: isDateChange === true ? null : formatInputDate(new Date(), true)\n},classUrl:'temporarystorage',methodUrl:\"TemporaryStorage\",displayName:\"IDS_TEMPORARYSTOARGE\",userInfo:_this.props.Login.userInfo,selectedRecord:_this.state.selectedRecord||{}};_this.props.getTemporaryStorage(inputParam);};_this.searchRef=React.createRef();var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,userRoleControlRights:[],controlMap:new Map(),showSaveContinue:true};return _this;}_createClass(TemporaryStorage,[{key:\"gridfillingColumn\",value:function gridfillingColumn(data,barcodeFields){//  const tempArray = [];\nvar temparray1=[{idsName:'IDS_BARCODEID',dataField:'sbarcodeid',width:'250px',mandatoryLabel:'IDS_ENTER',controlType:'textinput'},//  { idsName: 'IDS_SAMPLEQTY', dataField: 'nsampleqty', width: '250px', mandatoryLabel: 'IDS_ENTER', controlType: 'textinput' },\n//  { idsName: 'IDS_UNIT', dataField: 'sunitname', width: '250px', mandatoryLabel: 'IDS_SELECT', controlType: 'selectbox' },\n{idsName:'IDS_STORAGEDATETIME',dataField:'sstoragedatetime',width:'250px'}];/*let temparray2 = []\r\n        barcodeFields&&barcodeFields.forEach(item=>{\r\n            data && data.forEach((item) => {\r\n                const entries = Object.entries(item.jsondata);\r\n                if (entries.length > 0) {\r\n                    entries.forEach(([key]) => {\r\n                        const keyExists = temparray2.some(column => column.idsName === key);\r\n                        if (!keyExists) {\r\n                            if(item.sfieldname===key){\r\n                                temparray2.push({\r\n                                    idsName: key,\r\n                                    dataField: key,\r\n                                    width: '250px'\r\n                                });\r\n                            }\r\n                           \r\n                        }\r\n    \r\n    \r\n                    });\r\n                }\r\n            });\r\n        });*/var temparray2=[];barcodeFields&&barcodeFields.forEach(function(barcodeItem){data&&data.forEach(function(dataItem){var entries=Object.entries(dataItem.jsondata);if(entries.length>0){entries.forEach(function(_ref){var _ref2=_slicedToArray(_ref,1),key=_ref2[0];var keyExists=temparray2.some(function(column){return column.idsName===key;});if(!keyExists){if(barcodeItem.sfieldname===key){temparray2.push({idsName:key,dataField:key,width:'250px'});}}});}});});var newArray=[].concat(temparray1,temparray2);newArray.push({idsName:'IDS_COMMENTS',dataField:'scomments',width:'250px'});return newArray;}},{key:\"render\",value:function render(){var _this2=this;// console.log(\"Temporary Storage\", this.props.Login.masterData.TemporaryStorage)\nconsole.log(\"masterData\",this.props.Login.masterData);//console.log(\"controlMap\", this.state.controlMap)\nvar fromDate=\"\";var toDate=\"\";var extractedColumnList=this.gridfillingColumn(this.props.Login.masterData.TemporaryStorage&&this.props.Login.masterData.TemporaryStorage||[],this.props.Login.masterData.jsondataBarcodeFields&&this.props.Login.masterData.jsondataBarcodeFields);this.extractedColumnList=extractedColumnList;var addId=this.state.controlMap.has(\"AddTemporaryStorage\")&&this.state.controlMap.get(\"AddTemporaryStorage\").ncontrolcode;var editId=this.state.controlMap.has(\"EditTemporaryStorage\")&&this.state.controlMap.get(\"EditTemporaryStorage\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteTemporaryStorage\")&&this.state.controlMap.get(\"DeleteTemporaryStorage\").ncontrolcode;var editParam={screenName:this.props.Login.displayName,operation:\"update\",userInfo:this.props.Login.userInfo,ncontrolcode:editId,masterData:this.props.Login.masterData,inputParam:this.props.Login.inputParam,primaryKeyField:\"ntemporarystoragecode\",selectedRecord:this.state.selectedRecord||{},dataState:this.state.dataState};var addParam={screenName:this.props.Login.displayName,primaryKeyField:\"ntemporarystoragecode\",primaryKeyValue:undefined,operation:\"create\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolcode:addId,selectedRecord:this.state.selectedRecord,masterData:this.props.Login.masterData};//ALPD-4618--Vignesh R(01-08-2024)\nvar deleteParam={operation:\"delete\",ncontrolcode:deleteId,selectedRecord:this.state.selectedRecord};if(this.props.Login.masterData&&this.props.Login.masterData.FromDate){fromDate=this.state.selectedRecord[\"fromdate\"]&&getStartOfDay(this.state.selectedRecord[\"fromdate\"])||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.FromDate);toDate=this.state.selectedRecord[\"todate\"]&&getEndOfDay(this.state.selectedRecord[\"todate\"])||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"fromdate\",label:this.props.intl.formatMessage({id:\"IDS_FROM\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.state.selectedRecord[\"fromdate\"]||fromDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this2.handleDateChange(\"fromdate\",date);},value:this.state.selectedRecord[\"fromdate\"]||fromDate})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"todate\",label:this.props.intl.formatMessage({id:\"IDS_TO\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.state.selectedRecord[\"todate\"]||toDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this2.handleDateChange(\"todate\",date);},value:this.state.selectedRecord[\"todate\"]||toDate})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_PROJECTTYPE\"}),isSearchable:true,name:\"nprojecttypecode\",isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:this.state.projectType,value:this.state.selectedRecord[\"nprojecttypecode\"]&&this.state.selectedRecord[\"nprojecttypecode\"]||this.props.Login.masterData.selectedProjectType,defaultValue:this.state.selectedRecord[\"nprojecttypecode\"],onChange:function onChange(event){return _this2.onComboChange(event,\"nprojecttypecode\");},closeMenuOnSelect:true})),\"    \"),this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"ntemporarystoragecode\",data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,reloadData:this.reloadData,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,scrollable:\"scrollable\",pageable:true,isComponent:true,gridHeight:'600px',isToolBarRequired:true,isActionRequired:true,expandField:\"expanded\",selectedId:this.props.Login.selectedId,addRecord:function addRecord(){return _this2.props.getComboTemporaryStorage(addParam);},deleteParam:deleteParam,deleteRecord:this.deleteRecord,fetchRecord:this.props.getActiveTemporaryStorageById,editParam:editParam//ATE234 Janakumar ALPD-5577 Sample Storage-->while download the pdf, screen getting freezed\n,isDownloadPDFRequired:false,isDownloadExcelRequired:true}):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,size:'lg',esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},showSaveContinue:true,mandatoryFields:[{\"mandatory\":true,\"idsName\":\"IDS_BARCODEID\",\"dataField\":\"sbarcodeid\",\"width\":\"250px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textinput\"},// { \"mandatory\": true, \"idsName\": \"IDS_SAMPLEQTY\", \"dataField\": \"nsampleqty\", \"width\": \"250px\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textinput\" },\n// { \"mandatory\": true, \"idsName\": \"IDS_UNIT\", \"dataField\": \"nunitcode\", \"width\": \"250px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }]}\n{\"mandatory\":true,\"idsName\":\"IDS_STORAGEDATETIME\",\"dataField\":\"dstoragedatetime\",\"width\":\"250px\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}],addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddTemporaryStorage,{autoSaveGetDataTempoaryStorage:this.autoSaveGetDataTempoaryStorage,barcodedata:this.props.Login.masterData.jsondataBarcodeData,barcodeFields:this.props.Login.masterData.jsondataBarcodeFields,selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,formatMessage:this.props.intl.formatMessage,operation:this.props.Login.operation//  unit={this.props.Login.unit}\n,userInfo:this.props.Login.userInfo,handleDateChangeSlidout:this.handleDateChangeSlidout,selectedProjectType:this.props.Login.masterData.selectedProjectType})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var projectType=this.state.projectType;var bool=false;if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.masterData.projectType!==previousProps.Login.masterData.projectType){var projectTypeMap=constructOptionList(this.props.Login.masterData.projectType||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,undefined);projectType=projectTypeMap.get(\"OptionList\");bool=true;}if(this.props.Login.masterData.selectedProjectType!==previousProps.Login.masterData.selectedProjectType){var _projectTypeMap=constructOptionList(this.props.Login.masterData.projectType||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,undefined);projectType=_projectTypeMap.get(\"OptionList\");bool=true;}// if (this.props.Login.masterData.TemporaryStorage !== previousProps.Login.masterData.TemporaryStorage) {\n//     let temporaryStorage = [];\n//     temporaryStorage =\n//         this.props.Login.masterData.TemporaryStorage && this.props.Login.masterData.TemporaryStorage.map(sampleItem => {\n//             const entries = Object.entries(sampleItem.jsondata);\n//             if (entries.length > 0) {\n//                 const newItem = { ...sampleItem };\n//                 entries.forEach(([key, value]) => {\n//                     newItem[key] = value;\n//                 });\n//                 return newItem;\n//             }\n//             return sampleItem;\n//         });\n//     let { dataState } = this.state;\n//     if (dataState === undefined) {\n//         dataState = { skip: 0, take: this.state.dataState.take }\n//     }\n//     if (this.state.dataResult.data) {\n//         if (this.state.dataResult.data.length === 1) {\n//             let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\n//                 this.state.dataState.skip\n//             dataState = { skip: skipcount, take: this.state.dataState.take }\n//         }\n//     }\n//     this.setState({\n//         data: temporaryStorage,\n//         dataState,\n//         dataResult: process(temporaryStorage || [], dataState),\n//     });\n// }\nif(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);var temporaryStorage=[];temporaryStorage=this.props.Login.masterData.TemporaryStorage&&this.props.Login.masterData.TemporaryStorage.map(function(sampleItem){var entries=Object.entries(sampleItem.jsondata);if(entries.length>0){var newItem=_objectSpread({},sampleItem);entries.forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],value=_ref4[1];newItem[key]=value;});return newItem;}return sampleItem;});var dataState=this.state.dataState;if(dataState===undefined){dataState={skip:0,take:this.state.dataState.take};}if(this.state.dataResult.data){if(this.state.dataResult.data.length===1){var skipcount=this.state.dataState.skip>0?this.state.dataState.skip-this.state.dataState.take:this.state.dataState.skip;dataState={skip:skipcount,take:this.state.dataState.take};}}this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:temporaryStorage,dataState:dataState,dataResult:process(temporaryStorage||[],dataState)});}else{//jana ALPD-4694 Temporary Storage-->While Try to Delete the Records the Fields are Align Wrongly\nvar temporaryStoragedata=[];temporaryStoragedata=this.props.Login.masterData.TemporaryStorage&&this.props.Login.masterData.TemporaryStorage.map(function(sampleItem){var entries=Object.entries(sampleItem.jsondata);if(entries.length>0){var newItem=_objectSpread({},sampleItem);entries.forEach(function(_ref5){var _ref6=_slicedToArray(_ref5,2),key=_ref6[0],value=_ref6[1];newItem[key]=value;});return newItem;}return sampleItem;});var _dataState=this.state.dataState;if(this.props.Login.dataState===undefined||this.props.Login.masterData.selectedProjectType!==previousProps.Login.masterData.selectedProjectType){_dataState={skip:0,take:this.state.dataState.take};}if(this.state.dataResult.data){if(this.state.dataResult.data.length===1){var _skipcount=this.state.dataState.skip>0?this.state.dataState.skip-this.state.dataState.take:this.state.dataState.skip;_dataState={skip:_skipcount,take:this.state.dataState.take};}}this.setState({data:temporaryStoragedata,selectedRecord:this.props.Login.selectedRecord,dataResult:process(temporaryStoragedata||[],_dataState),dataState:_dataState});}if(this.props.Login.masterData.jsondataBarcodeFields!==previousProps.Login.masterData.jsondataBarcodeFields){var retrievedData=sortData(this.props.Login.masterData.jsondataBarcodeFields,\"ascending\",\"nsorter\");this.setState({jsondataBarcodeFields:retrievedData});}/*  else {\r\n                      if (this.props.Login.masterData.TemporaryStorage) {\r\n                          let temporaryStorage = [];\r\n                          temporaryStorage =\r\n                              this.props.Login.masterData.TemporaryStorage && this.props.Login.masterData.TemporaryStorage.map(sampleItem => {\r\n                                  const entries = Object.entries(sampleItem.jsondata);\r\n                                  if (entries.length > 0) {\r\n                                      const newItem = { ...sampleItem };\r\n                                      entries.forEach(([key, value]) => {\r\n      \r\n                                          newItem[key] = value;\r\n      \r\n                                      });\r\n                                      return newItem;\r\n                                  }\r\n                                  return sampleItem;\r\n                              });\r\n      \r\n                          this.setState({\r\n                              data: temporaryStorage,\r\n                              dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n                              dataResult: process(temporaryStorage || [], { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }),\r\n                          });\r\n                      }\r\n                  }*/}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}/*  else {\r\n                  if (this.props.Login.masterData.TemporaryStorage) {\r\n                      let temporaryStorage = [];\r\n                      temporaryStorage =\r\n                          this.props.Login.masterData.TemporaryStorage && this.props.Login.masterData.TemporaryStorage.map(sampleItem => {\r\n                              const entries = Object.entries(sampleItem.jsondata);\r\n                              if (entries.length > 0) {\r\n                                  const newItem = { ...sampleItem };\r\n                                  entries.forEach(([key, value]) => {\r\n  \r\n                                      newItem[key] = value;\r\n  \r\n                                  });\r\n                                  return newItem;\r\n                              }\r\n                              return sampleItem;\r\n                          });\r\n  \r\n                      this.setState({\r\n                          data: temporaryStorage,\r\n                          dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n                          dataResult: process(temporaryStorage || [], { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }),\r\n                      });\r\n                  }\r\n              }*/ //ALPD-4993:while merging close barces not commented now  have commented by rukshana \n//} \nelse if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(bool){this.setState({projectType:projectType});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return TemporaryStorage;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,validateEsignCredential:validateEsignCredential,getComboTemporaryStorage:getComboTemporaryStorage,getBarcodeDataTemporaryStorage:getBarcodeDataTemporaryStorage,saveTemporaryStorage:saveTemporaryStorage,getTemporaryStorage:getTemporaryStorage,getActiveTemporaryStorageById:getActiveTemporaryStorageById,validateEsignCredentialTemporaryStorage:validateEsignCredentialTemporaryStorage})(injectIntl(TemporaryStorage));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/storagemanagement/TemporaryStorage.jsx"],"names":["React","connect","injectIntl","Row","Col","toast","process","DataGrid","DateTimePicker","ListWrapper","AddTemporaryStorage","SlideOutModal","Esign","transactionStatus","DEFAULT_RETURN","FormSelectSearch","callService","crudMaster","updateStore","validateEsignCredential","getComboTemporaryStorage","getBarcodeDataTemporaryStorage","saveTemporaryStorage","getActiveTemporaryStorageById","getTemporaryStorage","validateEsignCredentialTemporaryStorage","sortData","getControlMap","getStartOfDay","getEndOfDay","convertDateValuetoString","rearrangeDateFormat","constructOptionList","Lims_JSON_stringify","formatInputDate","showEsign","mapStateToProps","state","Login","TemporaryStorage","props","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","data","dataStateChange","event","setState","dataResult","dataState","validateEsign","inputParam","inputData","userInfo","sreason","nreasoncode","value","spredefinedreason","label","password","screenData","deleteRecord","deleteParam","obj","masterData","FromDate","ToDate","fromDate","toDate","classUrl","methodUrl","displayName","toLowerCase","selectedProjectType","userRoleControlRights","nformcode","ncontrolCode","screenName","intl","formatMessage","id","onSaveClick","saveType","formRef","sbarcodeid","jsondataBarcodeData","length","parseInt","nbarcodelength","undefined","Number","JSON","stringify","NA","selectedId","sformname","smodulename","ncontrolcode","warn","onComboChange","comboData","fieldName","userinfo","nprojecttypecode","handleDateChangeSlidout","dateName","dateValue","autoSaveGetDataTempoaryStorage","stopPropagation","keyCode","spositionvalue","target","nbarcodeLength","settings","jsondata","onInputOnChange","fieldname","test","type","name","checked","YES","NO","handleDateChange","Date","dateObj","reloadData","searchRef","createRef","skip","take","masterStatus","error","controlMap","Map","showSaveContinue","barcodeFields","temparray1","idsName","dataField","width","mandatoryLabel","controlType","temparray2","forEach","barcodeItem","dataItem","entries","Object","key","keyExists","some","column","sfieldname","push","newArray","console","log","extractedColumnList","gridfillingColumn","jsondataBarcodeFields","addId","has","get","editId","deleteId","editParam","primaryKeyField","addParam","primaryKeyValue","ssitedate","date","projectType","previousProps","bool","projectTypeMap","values","map","item","temporaryStorage","sampleItem","newItem","skipcount","temporaryStoragedata","retrievedData","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport AddTemporaryStorage from '../storagemanagement//AddTemporaryStorage';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nimport {\r\n    callService, crudMaster,\r\n    updateStore, validateEsignCredential, getComboTemporaryStorage, getBarcodeDataTemporaryStorage, saveTemporaryStorage, getActiveTemporaryStorageById, getTemporaryStorage, validateEsignCredentialTemporaryStorage\r\n} from '../../actions';\r\n// import { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport { sortData,getControlMap, getStartOfDay, getEndOfDay, convertDateValuetoString, rearrangeDateFormat, constructOptionList, Lims_JSON_stringify, formatInputDate, showEsign } from '../../components/CommonScript'\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass TemporaryStorage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showSaveContinue: true\r\n        };\r\n\r\n\r\n\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord }\r\n        }\r\n\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    gridfillingColumn(data, barcodeFields) {\r\n        //  const tempArray = [];\r\n        const temparray1 = [{ idsName: 'IDS_BARCODEID', dataField: 'sbarcodeid', width: '250px', mandatoryLabel: 'IDS_ENTER', controlType: 'textinput' },\r\n        //  { idsName: 'IDS_SAMPLEQTY', dataField: 'nsampleqty', width: '250px', mandatoryLabel: 'IDS_ENTER', controlType: 'textinput' },\r\n        //  { idsName: 'IDS_UNIT', dataField: 'sunitname', width: '250px', mandatoryLabel: 'IDS_SELECT', controlType: 'selectbox' },\r\n        { idsName: 'IDS_STORAGEDATETIME', dataField: 'sstoragedatetime', width: '250px' }\r\n\r\n        ];\r\n        /*let temparray2 = []\r\n        barcodeFields&&barcodeFields.forEach(item=>{\r\n            data && data.forEach((item) => {\r\n                const entries = Object.entries(item.jsondata);\r\n                if (entries.length > 0) {\r\n                    entries.forEach(([key]) => {\r\n                        const keyExists = temparray2.some(column => column.idsName === key);\r\n                        if (!keyExists) {\r\n                            if(item.sfieldname===key){\r\n                                temparray2.push({\r\n                                    idsName: key,\r\n                                    dataField: key,\r\n                                    width: '250px'\r\n                                });\r\n                            }\r\n                           \r\n                        }\r\n    \r\n    \r\n                    });\r\n                }\r\n            });\r\n        });*/\r\n        let temparray2 = [];\r\n        barcodeFields && barcodeFields.forEach(barcodeItem => {\r\n            data && data.forEach(dataItem => {\r\n                const entries = Object.entries(dataItem.jsondata);\r\n                if (entries.length > 0) {\r\n                    entries.forEach(([key]) => {\r\n                        const keyExists = temparray2.some(column => column.idsName === key);\r\n                        if (!keyExists) {\r\n                            if (barcodeItem.sfieldname === key) {\r\n                                temparray2.push({\r\n                                    idsName: key,\r\n                                    dataField: key,\r\n                                    width: '250px'\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        const newArray = [...temparray1, ...temparray2]\r\n        newArray.push({ idsName: 'IDS_COMMENTS', dataField: 'scomments', width: '250px' });\r\n        return newArray;\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if (this.props.Login.operation === 'update') {\r\n            this.props.validateEsignCredentialTemporaryStorage(inputParam, \"openModal\");\r\n        }\r\n\r\n        else {\r\n            this.props.validateEsignCredential(inputParam, \"openModal\");\r\n        }\r\n    }\r\n    render() {\r\n        // console.log(\"Temporary Storage\", this.props.Login.masterData.TemporaryStorage)\r\n        console.log(\"masterData\", this.props.Login.masterData)\r\n\r\n        //console.log(\"controlMap\", this.state.controlMap)\r\n\r\n        let fromDate = \"\";\r\n        let toDate = \"\";\r\n        const extractedColumnList = this.gridfillingColumn(this.props.Login.masterData.TemporaryStorage && this.props.Login.masterData.TemporaryStorage || [], this.props.Login.masterData.jsondataBarcodeFields && this.props.Login.masterData.jsondataBarcodeFields);\r\n\r\n\r\n\r\n\r\n        this.extractedColumnList = extractedColumnList;\r\n\r\n\r\n        const addId = this.state.controlMap.has(\"AddTemporaryStorage\") && this.state.controlMap.get(\"AddTemporaryStorage\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditTemporaryStorage\") && this.state.controlMap.get(\"EditTemporaryStorage\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteTemporaryStorage\") && this.state.controlMap.get(\"DeleteTemporaryStorage\").ncontrolcode;\r\n        const editParam = {\r\n            screenName: this.props.Login.displayName,\r\n            operation: \"update\",\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: editId,\r\n            masterData: this.props.Login.masterData,\r\n            inputParam: this.props.Login.inputParam,\r\n            primaryKeyField: \"ntemporarystoragecode\",\r\n            selectedRecord: this.state.selectedRecord || {},\r\n            dataState: this.state.dataState\r\n\r\n        };\r\n        const addParam = {\r\n            screenName: this.props.Login.displayName, primaryKeyField: \"ntemporarystoragecode\", primaryKeyValue: undefined,\r\n            operation: \"create\", inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolcode: addId,\r\n            selectedRecord: this.state.selectedRecord,\r\n            masterData: this.props.Login.masterData\r\n        };\r\n        //ALPD-4618--Vignesh R(01-08-2024)\r\n        const deleteParam = { operation: \"delete\", ncontrolcode: deleteId, selectedRecord: this.state.selectedRecord };\r\n\r\n        if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\r\n            fromDate = (this.state.selectedRecord[\"fromdate\"] && getStartOfDay(this.state.selectedRecord[\"fromdate\"])) || rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\r\n            toDate = (this.state.selectedRecord[\"todate\"] && getEndOfDay(this.state.selectedRecord[\"todate\"])) || rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate);\r\n        }\r\n        return (\r\n            <>\r\n                {/* <Preloader loadng={this.props.Login.loading}/> */}\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <DateTimePicker\r\n                                        name={\"fromdate\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"fromdate\"] || fromDate}\r\n                                        dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                        isClearable={false}\r\n                                        onChange={date => this.handleDateChange(\"fromdate\", date)}\r\n                                        value={this.state.selectedRecord[\"fromdate\"] || fromDate}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <DateTimePicker\r\n                                        name={\"todate\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"todate\"] || toDate}\r\n                                        dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                        isClearable={false}\r\n                                        onChange={date => this.handleDateChange(\"todate\", date)}\r\n                                        value={this.state.selectedRecord[\"todate\"] || toDate}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"nprojecttypecode\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={this.state.projectType}\r\n                                        value={this.state.selectedRecord[\"nprojecttypecode\"] && this.state.selectedRecord[\"nprojecttypecode\"] || this.props.Login.masterData.selectedProjectType}\r\n                                        defaultValue={this.state.selectedRecord[\"nprojecttypecode\"]}\r\n                                        onChange={(event) => this.onComboChange(event, \"nprojecttypecode\")}\r\n                                        closeMenuOnSelect={true}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>    {/* <Col></Col> */}\r\n                            </Row>\r\n\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={\"ntemporarystoragecode\"}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    scrollable={\"scrollable\"}\r\n                                    pageable={true}\r\n                                    isComponent={true}\r\n                                    gridHeight={'600px'}\r\n                                    isToolBarRequired={true}\r\n                                    isActionRequired={true}\r\n                                    expandField=\"expanded\"\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    addRecord={() => this.props.getComboTemporaryStorage(addParam)}\r\n                                    deleteParam={deleteParam}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    fetchRecord={this.props.getActiveTemporaryStorageById}\r\n                                    editParam={editParam}\r\n                                    //ATE234 Janakumar ALPD-5577 Sample Storage-->while download the pdf, screen getting freezed\r\n                                    isDownloadPDFRequired={false}\r\n                                    isDownloadExcelRequired={true}\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        size={'lg'}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        showSaveContinue={true}\r\n                        mandatoryFields={[\r\n                            { \"mandatory\": true, \"idsName\": \"IDS_BARCODEID\", \"dataField\": \"sbarcodeid\", \"width\": \"250px\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textinput\" },\r\n                            // { \"mandatory\": true, \"idsName\": \"IDS_SAMPLEQTY\", \"dataField\": \"nsampleqty\", \"width\": \"250px\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textinput\" },\r\n                            // { \"mandatory\": true, \"idsName\": \"IDS_UNIT\", \"dataField\": \"nunitcode\", \"width\": \"250px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }]}\r\n                            { \"mandatory\": true, \"idsName\": \"IDS_STORAGEDATETIME\", \"dataField\": \"dstoragedatetime\", \"width\": \"250px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }]}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddTemporaryStorage\r\n                                autoSaveGetDataTempoaryStorage={this.autoSaveGetDataTempoaryStorage}\r\n                                barcodedata={this.props.Login.masterData.jsondataBarcodeData}\r\n                                barcodeFields={this.props.Login.masterData.jsondataBarcodeFields}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                operation={this.props.Login.operation}\r\n                                //  unit={this.props.Login.unit}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                handleDateChangeSlidout={this.handleDateChangeSlidout}\r\n                                selectedProjectType={this.props.Login.masterData.selectedProjectType}\r\n\r\n                            />}\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n    deleteRecord = (deleteParam) => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                [this.props.Login.inputParam.methodUrl.toLowerCase()]: deleteParam.selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"fromDate\": fromDate,\r\n                \"toDate\": toDate,\r\n                \"nprojecttypecode\": this.props.Login.masterData.selectedProjectType.value || -1,\r\n                \"ntemporarystoragecode\": deleteParam.selectedRecord['ntemporarystoragecode']\r\n\r\n            },\r\n            operation: deleteParam.operation,\r\n            dataState: this.state.dataState\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_TEMPORARYSTOARGE\" }),\r\n                    operation: deleteParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        const sbarcodeid = this.props.Login.masterData.jsondataBarcodeData;\r\n\r\n        if (selectedRecord[\"sbarcodeid\"] && selectedRecord[\"sbarcodeid\"].length === parseInt(this.props.Login.masterData.nbarcodelength && this.props.Login.masterData.nbarcodelength)) {\r\n\r\n            if (sbarcodeid != undefined && sbarcodeid != '') {\r\n\r\n                let inputData = {};\r\n                inputData[\"temporarystorage\"] = {};\r\n                if (this.props.Login.operation === \"create\") {\r\n\r\n                    inputData[\"temporarystorage\"][\"nunitcode\"] = selectedRecord[\"nunitcode\"] ? selectedRecord[\"nunitcode\"].value : -1;\r\n                    inputData[\"temporarystorage\"][\"nsampleqty\"] = selectedRecord[\"nsampleqty\"] ? Number(selectedRecord[\"nsampleqty\"]) : -1;\r\n                    inputData[\"temporarystorage\"][\"jsondata\"] = Lims_JSON_stringify(JSON.stringify(this.props.Login.masterData.jsondataBarcodeData));\r\n                }\r\n                inputData[\"temporarystorage\"][\"nprojecttypecode\"] = this.props.Login.masterData.selectedProjectType.value || transactionStatus.NA;\r\n                if (this.props.Login.operation === \"update\") {\r\n                    inputData[\"temporarystorage\"][\"ntemporarystoragecode\"] = this.props.Login.selectedId;\r\n                }\r\n                inputData[\"temporarystorage\"][\"sbarcodeid\"] = selectedRecord[\"sbarcodeid\"] ? selectedRecord[\"sbarcodeid\"] : -1;\r\n\r\n                inputData[\"temporarystorage\"][\"dstoragedatetime\"] = formatInputDate(selectedRecord[\"dstoragedatetime\"], false);\r\n                inputData[\"temporarystorage\"][\"scomments\"] = selectedRecord[\"scomments\"] && selectedRecord[\"scomments\"] || \"\";\r\n                inputData[\"temporarystorage\"][\"ntzstoragedatetime\"] = selectedRecord[\"ntzstoragedatetime\"] && selectedRecord[\"ntzstoragedatetime\"].value || transactionStatus.NA\r\n                inputData[\"temporarystorage\"][\"noffsetstoragedatetime\"] = selectedRecord[\"noffsetstoragedatetime\"] && selectedRecord[\"noffsetstoragedatetime\"].value || transactionStatus.NA\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n                let fromDate = obj.fromDate;\r\n                let toDate = obj.toDate;\r\n                inputData[\"fromDate\"] = fromDate;\r\n                inputData[\"toDate\"] = toDate;\r\n                inputData[\"nprojecttypecode\"] = this.props.Login.masterData.selectedProjectType.value || transactionStatus.NA;\r\n                inputData[\"userinfo\"] = {\r\n                    ...this.props.Login.userInfo,\r\n                    sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename)\r\n                }\r\n\r\n\r\n\r\n                const inputParam = {\r\n                    nformcode: this.props.Login.userInfo.nformcode,\r\n                    classUrl: \"temporarystorage\",\r\n                    methodUrl: \"TemporaryStorage\",\r\n                    inputData: inputData,\r\n                    operation: this.props.Login.operation,\r\n                    saveType, formRef,\r\n                    selectedRecord: this.state.selectedRecord || {}\r\n                }\r\n\r\n                const masterData = this.props.Login.masterData;\r\n\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.saveTemporaryStorage(inputParam, masterData);\r\n                }\r\n            } else {\r\n                toast.warn(\r\n                    this.props.intl.formatMessage({\r\n                        id: \"IDS_CLICKENTERTOJSONRECORD\",\r\n                    })\r\n                );\r\n            }\r\n        } else {\r\n            toast.warn(\r\n                this.props.intl.formatMessage({\r\n                    id: \"IDS_INVALIDABARCODE\",\t//ALPD-4500 Changed IDS value to throw alert correctly by VISHAKH\r\n                })\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (fieldName === \"nprojecttypecode\") {\r\n            let inputData = [];\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n            let fromDate = obj.fromDate;\r\n            let toDate = obj.toDate;\r\n            inputData[\"fromDate\"] = fromDate;\r\n            inputData[\"toDate\"] = toDate;\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                nprojecttypecode: parseInt(comboData.value),\r\n                selectedProjectType: comboData,\r\n                toDate: toDate,\r\n                fromDate: fromDate\r\n            }\r\n            const masterData = { ...this.props.Login.masterData }\r\n            const inputParam = { masterData, inputData }\r\n            this.props.getTemporaryStorage(inputParam)\r\n        } else {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n    handleDateChangeSlidout = (dateName, dateValue) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    };\r\n    autoSaveGetDataTempoaryStorage = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {}\r\n        event.stopPropagation();\r\n        //let invalidbarcode = event.target.value.substring(1, 2);\r\n        if (parseInt(selectedRecord[\"sbarcodeid\"] && selectedRecord[\"sbarcodeid\"].length) === parseInt(this.props.Login.masterData.nbarcodelength && this.props.Login.masterData.nbarcodelength) && event.keyCode === 13) {\r\n\r\n            // if (parseInt(invalidbarcode) === 3) {\r\n\r\n            let inputParam = {\r\n                nprojecttypecode: this.props.Login.masterData.selectedProjectType.value,\r\n                spositionvalue: event.target.value,\r\n                userinfo: this.props.Login.userInfo,\r\n                nbarcodeLength: this.props.Login.settings && parseInt(this.props.Login.settings[37]),\r\n                jsondata: {},\r\n                masterData: this.props.Login.masterData,\r\n                selectedRecord: selectedRecord || {}\r\n            }\r\n            this.props.getBarcodeDataTemporaryStorage(inputParam);\r\n            /*}\r\n            else {\r\n                toast.warn(\r\n                    this.props.intl.formatMessage({\r\n                        id: \"IDS_INVALIDBARCODEID\",\r\n                    })\r\n                );\r\n            }*/\r\n\r\n        }\r\n        /*  else {\r\n             toast.warn(\r\n                 this.props.intl.formatMessage({\r\n                     id: \"IDS_INVALIDBARCODELENGTH\",\r\n                 })\r\n             );\r\n         }*/\r\n    };\r\n    onInputOnChange = (event, fieldname) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (fieldname === 'nsampleqty') {\r\n            if (/^\\d{0,3}(\\.\\d{0,2})?$/.test(event.target.value) || event.target.value === \"\") {\r\n\r\n                selectedRecord[fieldname] = event.target.value;\r\n\r\n            }\r\n        }\r\n        else if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let { projectType } = this.state;\r\n        let bool = false;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n        if (this.props.Login.masterData.projectType !== previousProps.Login.masterData.projectType) {\r\n            const projectTypeMap = constructOptionList(this.props.Login.masterData.projectType || [], \"nprojecttypecode\",\r\n                \"sprojecttypename\", undefined, undefined, undefined);\r\n            projectType = projectTypeMap.get(\"OptionList\");\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData.selectedProjectType !== previousProps.Login.masterData.selectedProjectType) {\r\n            const projectTypeMap = constructOptionList(this.props.Login.masterData.projectType || [], \"nprojecttypecode\",\r\n                \"sprojecttypename\", undefined, undefined, undefined);\r\n            projectType = projectTypeMap.get(\"OptionList\");\r\n            bool = true;\r\n\r\n        }\r\n\r\n        // if (this.props.Login.masterData.TemporaryStorage !== previousProps.Login.masterData.TemporaryStorage) {\r\n        //     let temporaryStorage = [];\r\n        //     temporaryStorage =\r\n        //         this.props.Login.masterData.TemporaryStorage && this.props.Login.masterData.TemporaryStorage.map(sampleItem => {\r\n        //             const entries = Object.entries(sampleItem.jsondata);\r\n        //             if (entries.length > 0) {\r\n        //                 const newItem = { ...sampleItem };\r\n        //                 entries.forEach(([key, value]) => {\r\n\r\n        //                     newItem[key] = value;\r\n\r\n        //                 });\r\n        //                 return newItem;\r\n        //             }\r\n        //             return sampleItem;\r\n        //         });\r\n        //     let { dataState } = this.state;\r\n        //     if (dataState === undefined) {\r\n        //         dataState = { skip: 0, take: this.state.dataState.take }\r\n        //     }\r\n        //     if (this.state.dataResult.data) {\r\n        //         if (this.state.dataResult.data.length === 1) {\r\n        //             let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\r\n        //                 this.state.dataState.skip\r\n        //             dataState = { skip: skipcount, take: this.state.dataState.take }\r\n        //         }\r\n        //     }\r\n\r\n        //     this.setState({\r\n        //         data: temporaryStorage,\r\n        //         dataState,\r\n        //         dataResult: process(temporaryStorage || [], dataState),\r\n        //     });\r\n        // }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                let temporaryStorage = [];\r\n                temporaryStorage =\r\n                    this.props.Login.masterData.TemporaryStorage && this.props.Login.masterData.TemporaryStorage.map(sampleItem => {\r\n                        const entries = Object.entries(sampleItem.jsondata);\r\n                        if (entries.length > 0) {\r\n                            const newItem = { ...sampleItem };\r\n                            entries.forEach(([key, value]) => {\r\n\r\n                                newItem[key] = value;\r\n\r\n                            });\r\n                            return newItem;\r\n                        }\r\n                        return sampleItem;\r\n                    });\r\n                let { dataState } = this.state;\r\n                if (dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.state.dataState.take }\r\n                }\r\n                if (this.state.dataResult.data) {\r\n                    if (this.state.dataResult.data.length === 1) {\r\n                        let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\r\n                            this.state.dataState.skip\r\n                        dataState = { skip: skipcount, take: this.state.dataState.take }\r\n                    }\r\n                }\r\n\r\n                    this.setState({\r\n                        userRoleControlRights, controlMap, data: temporaryStorage, dataState,\r\n                        dataResult: process(temporaryStorage || [], dataState),\r\n                    });\r\n                }else {\r\n\r\n                //jana ALPD-4694 Temporary Storage-->While Try to Delete the Records the Fields are Align Wrongly\r\n\r\n                let temporaryStoragedata = [];\r\n                temporaryStoragedata =\r\n                    this.props.Login.masterData.TemporaryStorage && this.props.Login.masterData.TemporaryStorage.map(sampleItem => {\r\n                        const entries = Object.entries(sampleItem.jsondata);\r\n                        if (entries.length > 0) {\r\n                            const newItem = { ...sampleItem };\r\n                            entries.forEach(([key, value]) => {\r\n\r\n                                newItem[key] = value;\r\n\r\n                            });\r\n                            return newItem;\r\n                        }\r\n                        return sampleItem;\r\n                    });\r\n\r\n\r\n                    let {dataState}=this.state;\r\n\r\n                    if (this.props.Login.dataState === undefined || this.props.Login.masterData.selectedProjectType !== previousProps.Login.masterData.selectedProjectType) {\r\n                        dataState = { skip: 0, take: this.state.dataState.take }\r\n                    }\r\n                    if (this.state.dataResult.data) {\r\n                        if (this.state.dataResult.data.length === 1) {\r\n                            let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\r\n                                this.state.dataState.skip\r\n                            dataState = { skip: skipcount, take: this.state.dataState.take }\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        data: temporaryStoragedata, selectedRecord: this.props.Login.selectedRecord,\r\n                        dataResult: process(temporaryStoragedata || [], dataState),\r\n                        dataState\r\n                    });\r\n\r\n                }\r\n\r\n                if (this.props.Login.masterData.jsondataBarcodeFields !== previousProps.Login.masterData.jsondataBarcodeFields) {\r\n                    const retrievedData = sortData(this.props.Login.masterData.jsondataBarcodeFields,\"ascending\",\"nsorter\");\r\n                    this.setState({ jsondataBarcodeFields: retrievedData });\r\n                }\r\n                /*  else {\r\n                      if (this.props.Login.masterData.TemporaryStorage) {\r\n                          let temporaryStorage = [];\r\n                          temporaryStorage =\r\n                              this.props.Login.masterData.TemporaryStorage && this.props.Login.masterData.TemporaryStorage.map(sampleItem => {\r\n                                  const entries = Object.entries(sampleItem.jsondata);\r\n                                  if (entries.length > 0) {\r\n                                      const newItem = { ...sampleItem };\r\n                                      entries.forEach(([key, value]) => {\r\n      \r\n                                          newItem[key] = value;\r\n      \r\n                                      });\r\n                                      return newItem;\r\n                                  }\r\n                                  return sampleItem;\r\n                              });\r\n      \r\n                          this.setState({\r\n                              data: temporaryStorage,\r\n                              dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n                              dataResult: process(temporaryStorage || [], { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }),\r\n                          });\r\n                      }\r\n                  }*/\r\n            } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n                this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n            }\r\n\r\n            \r\n            /*  else {\r\n                  if (this.props.Login.masterData.TemporaryStorage) {\r\n                      let temporaryStorage = [];\r\n                      temporaryStorage =\r\n                          this.props.Login.masterData.TemporaryStorage && this.props.Login.masterData.TemporaryStorage.map(sampleItem => {\r\n                              const entries = Object.entries(sampleItem.jsondata);\r\n                              if (entries.length > 0) {\r\n                                  const newItem = { ...sampleItem };\r\n                                  entries.forEach(([key, value]) => {\r\n  \r\n                                      newItem[key] = value;\r\n  \r\n                                  });\r\n                                  return newItem;\r\n                              }\r\n                              return sampleItem;\r\n                          });\r\n  \r\n                      this.setState({\r\n                          data: temporaryStorage,\r\n                          dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n                          dataResult: process(temporaryStorage || [], { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }),\r\n                      });\r\n                  }\r\n              }*/\r\n             //ALPD-4993:while merging close barces not commented now  have commented by rukshana \r\n        //} \r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n        if (bool) {\r\n            this.setState({\r\n                projectType\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        if (dateName === 'todate') {\r\n            selectedRecord[dateName] = dateValue;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[dateName] = dateValue;\r\n\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        // this.setState({ selectedRecord });\r\n        // this.reloadData(selectedRecord, true);\r\n\r\n        let dateObj = {};\r\n        let obj = convertDateValuetoString(selectedRecord['fromdate'] && selectedRecord['fromdate'] || this.props.Login.masterData.FromDate, selectedRecord['todate'] && selectedRecord['todate'] || this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate: fromDate,\r\n                toDate: toDate,\r\n                nprojecttypecode: this.props.Login.masterData.selectedProjectType && this.props.Login.masterData.selectedProjectType.value || -1,\r\n                selectedProjectType: this.props.Login.masterData.selectedProjectType\r\n            }\r\n\r\n        };\r\n        this.props.getTemporaryStorage(inputParam)\r\n    }\r\n\r\n    reloadData = () => {\r\n        //this.searchRef.current.value = \"\";\r\n        let fromDate = this.props.Login.masterData.FromDate;\r\n        let toDate = this.props.Login.masterData.ToDate;\r\n\r\n        let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo, true);\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate: obj.fromDate,\r\n                toDate: obj.toDate,\r\n                \"nprojecttypecode\": this.props.Login.masterData.selectedProjectType.value || -1\r\n                // currentdate: isDateChange === true ? null : formatInputDate(new Date(), true)\r\n            },\r\n            classUrl: 'temporarystorage',\r\n            methodUrl: \"TemporaryStorage\",\r\n            displayName: \"IDS_TEMPORARYSTOARGE\",\r\n            userInfo: this.props.Login.userInfo,\r\n            selectedRecord: this.state.selectedRecord || {}\r\n        };\r\n        this.props.getTemporaryStorage(inputParam);\r\n    }\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster,\r\n    updateStore, validateEsignCredential, getComboTemporaryStorage, getBarcodeDataTemporaryStorage, saveTemporaryStorage, getTemporaryStorage, getActiveTemporaryStorageById, validateEsignCredentialTemporaryStorage\r\n})(injectIntl(TemporaryStorage));"]},"metadata":{},"sourceType":"module"}