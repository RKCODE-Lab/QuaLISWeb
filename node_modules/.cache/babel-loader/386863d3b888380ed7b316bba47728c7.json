{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\credentialmanagement\\\\AddUser.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\nimport DropZone from '../../components/dropzone/dropzone.component';\n\nconst AddUser = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sloginid\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LOGINID\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LOGINID\"\n    }),\n    value: props.selectedRecord[\"sloginid\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 20 //readOnly={props.userLogged}\n    //SMTL-29\n    ,\n    readOnly: props.operation === \"create\" ? false : true,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sfirstname\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FIRSTNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FIRSTNAME\"\n    }),\n    value: props.selectedRecord[\"sfirstname\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"slastname\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LASTNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LASTNAME\"\n    }),\n    value: props.selectedRecord[\"slastname\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sempid\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_EMPID\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_EMPID\"\n    }),\n    value: props.selectedRecord[\"sempid\"],\n    isMandatory: false,\n    required: true,\n    maxLength: 20,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"ddateofjoin\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DATEOFJOIN\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"ddateofjoin\"] || \"\" // dateFormat={\"dd/MM/yyyy\"}\n    ,\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: true,\n    onChange: date => props.handleDateChange(\"ddateofjoin\", date),\n    value: props.selectedRecord[\"ddateofjoin\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ndesignationcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_DESIGNATION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.designationList // optionId=\"ndesignationcode\"\n    // optionValue=\"sdesignationname\"\n    ,\n    value: props.selectedRecord[\"ndesignationcode\"] // defaultValue={props.selectedRecord[\"ndesignationcode\"]}\n    ,\n    isMandatory: false,\n    isClearable: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true //alphabeticalSort={false}\n    ,\n    onChange: event => props.onComboChange(event, 'ndesignationcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ndeptcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_DEPARTMENT\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.departmentList // optionId=\"ndeptcode\"\n    // optionValue=\"sdeptname\"                            \n    ,\n    value: props.selectedRecord[\"ndeptcode\"] // defaultValue = { props.selectedRecord[\"ndeptcode\"]}\n    ,\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}                    \n    ,\n    onChange: event => props.onComboChange(event, 'ndeptcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"saddress1\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDRESS1\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ADDRESS1\"\n    }),\n    value: props.selectedRecord[\"saddress1\"],\n    rows: \"2\",\n    isMandatory: true,\n    required: true,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"saddress2\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDRESS2\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ADDRESS2\"\n    }),\n    value: props.selectedRecord[\"saddress2\"],\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"saddress3\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDRESS3\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ADDRESS3\"\n    }),\n    value: props.selectedRecord[\"saddress3\"],\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 31\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"squalification\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_QUALIFICATION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_QUALIFICATION\"\n    }),\n    value: props.selectedRecord[\"squalification\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 10,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sbloodgroup\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_BLOODGROUP\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_BLOODGROUP\"\n    }),\n    value: props.selectedRecord[\"sbloodgroup\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 10,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sjobdescription\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_JOBDESCRIPTION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_JOBDESCRIPTION\"\n    }),\n    value: props.selectedRecord[\"sjobdescription\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"semail\",\n    type: \"email\",\n    ref: props.emailRef,\n    label: props.intl.formatMessage({\n      id: \"IDS_EMAIL\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_EMAIL\"\n    }),\n    value: props.selectedRecord[\"semail\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event) //onBlur={(event)=>props.validateEmail(event, props.emailRef)}                            \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sphoneno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PHONENO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PHONENO\"\n    }),\n    value: props.selectedRecord[\"sphoneno\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"smobileno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_MOBILENO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MOBILENO\"\n    }),\n    value: props.selectedRecord[\"smobileno\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ncountrycode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_COUNTRY\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.countryList //   optionId='ncountrycode'\n    //   optionValue='scountryname'\n    ,\n    value: props.selectedRecord[\"ncountrycode\"] // defaultValue = { props.selectedRecord[\"ncountrycode\"]}\n    ,\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    onChange: event => props.onComboChange(event, 'ncountrycode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 31\n    }\n  }), props.operation === \"create\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"usersite\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SITE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.siteList //  optionId=\"nsitecode\"\n    //  optionValue=\"ssitename\"\n    ,\n    value: props.selectedRecord[\"usersite\"],\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    onChange: event => props.onComboChange(event, 'usersite'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nuserrolecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_USERROLE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.roleList // optionId=\"nuserrolecode\"\n    // optionValue=\"suserrolename\"\n    ,\n    value: props.selectedRecord[\"nuserrolecode\"],\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    onChange: event => props.onComboChange(event, 'nuserrolecode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 36\n    }\n  })) : \" \")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    name: \"ntransactionstatus\",\n    type: \"switch\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ISACTIVE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ISACTIVE\"\n    }),\n    defaultValue: props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false,\n    isMandatory: false,\n    required: false //   disabled={props.selectedRecord[\"nlogintypecode\"] === transactionStatus.LOGINTYPE_ADS}\n    ,\n    checked: props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    name: \"nlockmode\",\n    type: \"switch\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LOCKMODE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LOCKMODE\"\n    }),\n    defaultValue: props.selectedRecord[\"nlockmode\"] === transactionStatus.UNLOCK ? true : false,\n    isMandatory: false,\n    required: false //    disabled={props.selectedRecord[\"nlogintypecode\"] === transactionStatus.LOGINTYPE_ADS}\n    ,\n    checked: props.selectedRecord[\"nlockmode\"] === transactionStatus.UNLOCK ? true : false,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 31\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }, Object.keys(props.selectedRecord).length > 0 && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DropZone, {\n    name: \"ssignimgname\",\n    label: props.intl.formatMessage({\n      id: \"IDS_SSIGNIMGNAME\"\n    }),\n    maxFiles: 1,\n    accept: \"image/*\",\n    minSize: 0,\n    maxSize: 1,\n    onDrop: event => props.onDropImage(event, \"ssignimgname\", 1),\n    multiple: false,\n    editFiles: props.selectedRecord ? props.selectedRecord : {},\n    attachmentTypeCode: props.operation === \"update\" ? attachmentType.OTHERS : \"\",\n    fileName: \"ssignimgname\",\n    deleteAttachment: props.deleteUserFile //deleteAttachment={(event)=>props.deleteUserFile(event, \"ssignimgname\")}\n    //deleteAttachment={()=>props.deleteUserFile(\"ssignimgname\")}\n    ,\n    actionType: props.actionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 26\n    }\n  })), Object.keys(props.selectedRecord).length > 0 && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DropZone, {\n    name: \"suserimgname\",\n    label: props.intl.formatMessage({\n      id: \"IDS_SUSERIMGNAME\"\n    }),\n    maxFiles: 1,\n    accept: \"image/*\",\n    minSize: 0,\n    maxSize: 1,\n    onDrop: event => props.onDropImage(event, \"suserimgname\", 1),\n    multiple: false,\n    editFiles: props.selectedRecord ? props.selectedRecord : {},\n    attachmentTypeCode: props.operation === \"update\" ? attachmentType.OTHERS : \"\",\n    fileName: \"suserimgname\",\n    deleteAttachment: props.deleteUserFile //deleteAttachment={(event)=>props.deleteUserFile(event, \"suserimgname\")}\n    //deleteAttachment={()=>props.deleteUserFile(\"suserimgname\")}\n    ,\n    actionType: props.actionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 26\n    }\n  }))));\n};\n\nexport default injectIntl(AddUser);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/credentialmanagement/AddUser.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","DateTimePicker","transactionStatus","attachmentType","DropZone","AddUser","props","intl","formatMessage","id","selectedRecord","operation","event","onInputOnChange","userInfo","ssitedate","date","handleDateChange","designationList","onComboChange","departmentList","emailRef","countryList","siteList","roleList","ACTIVE","UNLOCK","Object","keys","length","onDropImage","OTHERS","deleteUserFile","actionType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\n\r\nconst AddUser = (props) => {\r\n     return (<>\r\n          <Row>\r\n               <Col md={6}>\r\n                    <Row>\r\n                         <Col md={12}>\r\n                              <FormInput\r\n                                   name={\"sloginid\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_LOGINID\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_LOGINID\" })}\r\n                                   value={props.selectedRecord[\"sloginid\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={20}\r\n                                   //readOnly={props.userLogged}\r\n                                   //SMTL-29\r\n                                   readOnly={props.operation === \"create\" ? false:true}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n\r\n                              <FormInput\r\n                                   name={\"sfirstname\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_FIRSTNAME\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_FIRSTNAME\" })}\r\n                                   value={props.selectedRecord[\"sfirstname\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={50}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                         <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"slastname\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_LASTNAME\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_LASTNAME\" })}\r\n                                   value={props.selectedRecord[\"slastname\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={50}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sempid\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_EMPID\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_EMPID\" })}\r\n                                   value={props.selectedRecord[\"sempid\"]}\r\n                                   isMandatory={false}\r\n                                   required={true}\r\n                                   maxLength={20}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                              <Col md={12}>                      */}\r\n\r\n                              <DateTimePicker\r\n                                   name={\"ddateofjoin\"}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_DATEOFJOIN\" })}\r\n                                   className='form-control'\r\n                                   placeholderText=\"Select date..\"\r\n                                   selected={props.selectedRecord[\"ddateofjoin\"] || \"\"}\r\n                                   // dateFormat={\"dd/MM/yyyy\"}\r\n                                   dateFormat={props.userInfo.ssitedate}\r\n                                   isClearable={true}\r\n                                   onChange={date => props.handleDateChange(\"ddateofjoin\", date)}\r\n                                   value={props.selectedRecord[\"ddateofjoin\"]}\r\n\r\n                              />\r\n\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormSelectSearch\r\n                                   name={\"ndesignationcode\"}\r\n                                   formLabel={props.intl.formatMessage({ id: \"IDS_DESIGNATION\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                   options={props.designationList}\r\n                                   // optionId=\"ndesignationcode\"\r\n                                   // optionValue=\"sdesignationname\"\r\n                                   value={props.selectedRecord[\"ndesignationcode\"]}\r\n                                   // defaultValue={props.selectedRecord[\"ndesignationcode\"]}\r\n                                   isMandatory={false}\r\n                                   isClearable={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   //alphabeticalSort={false}\r\n                                   onChange={(event) => props.onComboChange(event, 'ndesignationcode')}\r\n                              />\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormSelectSearch\r\n                                   name={\"ndeptcode\"}\r\n                                   formLabel={props.intl.formatMessage({ id: \"IDS_DEPARTMENT\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                   options={props.departmentList}\r\n                                   // optionId=\"ndeptcode\"\r\n                                   // optionValue=\"sdeptname\"                            \r\n                                   value={props.selectedRecord[\"ndeptcode\"]}\r\n                                   // defaultValue = { props.selectedRecord[\"ndeptcode\"]}\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   //alphabeticalSort={true}                    \r\n                                   onChange={(event) => props.onComboChange(event, 'ndeptcode')}\r\n                              />\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormTextarea\r\n                                   name={\"saddress1\"}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_ADDRESS1\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS1\" })}\r\n                                   value={props.selectedRecord[\"saddress1\"]}\r\n                                   rows=\"2\"\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={255}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormTextarea\r\n                                   name={\"saddress2\"}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_ADDRESS2\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS2\" })}\r\n                                   value={props.selectedRecord[\"saddress2\"]}\r\n                                   rows=\"2\"\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={255}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormTextarea\r\n                                   name={\"saddress3\"}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_ADDRESS3\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS3\" })}\r\n                                   value={props.selectedRecord[\"saddress3\"]}\r\n                                   rows=\"2\"\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={255}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         </Col>\r\n                    </Row>\r\n               </Col>\r\n               <Col md={6}>\r\n                    <Row>\r\n                         <Col md={12}>\r\n                              <FormInput\r\n                                   name={\"squalification\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_QUALIFICATION\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_QUALIFICATION\" })}\r\n                                   value={props.selectedRecord[\"squalification\"]}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={10}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                    <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sbloodgroup\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_BLOODGROUP\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_BLOODGROUP\" })}\r\n                                   value={props.selectedRecord[\"sbloodgroup\"]}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={10}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                    <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sjobdescription\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_JOBDESCRIPTION\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_JOBDESCRIPTION\" })}\r\n                                   value={props.selectedRecord[\"sjobdescription\"]}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={255}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                    <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"semail\"}\r\n                                   type=\"email\"\r\n                                   ref={props.emailRef}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_EMAIL\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_EMAIL\" })}\r\n                                   value={props.selectedRecord[\"semail\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={50}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              //onBlur={(event)=>props.validateEmail(event, props.emailRef)}                            \r\n                              />\r\n                              {/* </Col>\r\n                    <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sphoneno\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_PHONENO\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_PHONENO\" })}\r\n                                   value={props.selectedRecord[\"sphoneno\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={50}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n\r\n                              {/* </Col>\r\n                    <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"smobileno\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_MOBILENO\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_MOBILENO\" })}\r\n                                   value={props.selectedRecord[\"smobileno\"]}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={50}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                              {/* </Col>\r\n                    <Col md={12}> */}\r\n\r\n                              <FormSelectSearch\r\n                                   name={\"ncountrycode\"}\r\n                                   formLabel={props.intl.formatMessage({ id: \"IDS_COUNTRY\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                   options={props.countryList}\r\n                                   //   optionId='ncountrycode'\r\n                                   //   optionValue='scountryname'\r\n                                   value={props.selectedRecord[\"ncountrycode\"]}\r\n                                   // defaultValue = { props.selectedRecord[\"ncountrycode\"]}\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   //alphabeticalSort={true}\r\n                                   onChange={(event) => props.onComboChange(event, 'ncountrycode')}\r\n                              />\r\n                              {/* </Col> */}\r\n                              {props.operation === \"create\" ? <>\r\n                                   {/* <Col md={12}> */}\r\n                                   <FormSelectSearch\r\n                                        name={\"usersite\"}\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_SITE\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        options={props.siteList}\r\n                                        //  optionId=\"nsitecode\"\r\n                                        //  optionValue=\"ssitename\"\r\n                                        value={props.selectedRecord[\"usersite\"]}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isSearchable={true}\r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        //alphabeticalSort={true}\r\n                                        onChange={(event) => props.onComboChange(event, 'usersite')}\r\n                                   />\r\n                                   {/* </Col>\r\n                        <Col md={12}> */}\r\n                                   <FormSelectSearch\r\n                                        name={\"nuserrolecode\"}\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_USERROLE\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        options={props.roleList}\r\n                                        // optionId=\"nuserrolecode\"\r\n                                        // optionValue=\"suserrolename\"\r\n                                        value={props.selectedRecord[\"nuserrolecode\"]}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isSearchable={true}\r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        //alphabeticalSort={true}\r\n                                        onChange={(event) => props.onComboChange(event, 'nuserrolecode')}\r\n                                   />\r\n                                   {/* </Col> */}\r\n                              </>\r\n                                   : \" \"\r\n                              }\r\n                         </Col>\r\n                    </Row>\r\n                    <Row>\r\n                         <Col md={6}>\r\n                              <CustomSwitch\r\n                                   name={\"ntransactionstatus\"}\r\n                                   type=\"switch\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_ISACTIVE\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_ISACTIVE\" })}\r\n                                   defaultValue={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   //   disabled={props.selectedRecord[\"nlogintypecode\"] === transactionStatus.LOGINTYPE_ADS}\r\n                                   checked={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         </Col>\r\n                         <Col md={6}>\r\n                              <CustomSwitch\r\n                                   name={\"nlockmode\"}\r\n                                   type=\"switch\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_LOCKMODE\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_LOCKMODE\" })}\r\n                                   defaultValue={props.selectedRecord[\"nlockmode\"] === transactionStatus.UNLOCK ? true : false}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   //    disabled={props.selectedRecord[\"nlogintypecode\"] === transactionStatus.LOGINTYPE_ADS}\r\n                                   checked={props.selectedRecord[\"nlockmode\"] === transactionStatus.UNLOCK ? true : false}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         </Col>\r\n\r\n                    </Row>\r\n               </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n               {Object.keys(props.selectedRecord).length > 0 &&\r\n                    <Col md={6}>\r\n                         <DropZone\r\n                              name={\"ssignimgname\"}\r\n                              label={props.intl.formatMessage({ id: \"IDS_SSIGNIMGNAME\" })}\r\n                              maxFiles={1}\r\n                              accept=\"image/*\"\r\n                              minSize={0}\r\n                              maxSize={1}\r\n                              onDrop={(event) => props.onDropImage(event, \"ssignimgname\", 1)}\r\n                              multiple={false}\r\n                              editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                              attachmentTypeCode={props.operation === \"update\" ? attachmentType.OTHERS : \"\"}\r\n                              fileName=\"ssignimgname\"\r\n                              deleteAttachment={props.deleteUserFile}\r\n                              //deleteAttachment={(event)=>props.deleteUserFile(event, \"ssignimgname\")}\r\n                              //deleteAttachment={()=>props.deleteUserFile(\"ssignimgname\")}\r\n                              actionType={props.actionType}\r\n                         />\r\n                    </Col>}\r\n               {Object.keys(props.selectedRecord).length > 0 &&\r\n                    <Col md={6}>\r\n                         <DropZone\r\n                              name={\"suserimgname\"}\r\n                              label={props.intl.formatMessage({ id: \"IDS_SUSERIMGNAME\" })}\r\n                              maxFiles={1}\r\n                              accept=\"image/*\"\r\n                              minSize={0}\r\n                              maxSize={1}\r\n                              onDrop={(event) => props.onDropImage(event, \"suserimgname\", 1)}\r\n                              multiple={false}\r\n                              editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                              attachmentTypeCode={props.operation === \"update\" ? attachmentType.OTHERS : \"\"}\r\n                              fileName=\"suserimgname\"\r\n                              deleteAttachment={props.deleteUserFile}\r\n                              //deleteAttachment={(event)=>props.deleteUserFile(event, \"suserimgname\")}\r\n                              //deleteAttachment={()=>props.deleteUserFile(\"suserimgname\")}\r\n                              actionType={props.actionType}\r\n                         />\r\n                    </Col>}\r\n          </Row></>\r\n     )\r\n}\r\nexport default injectIntl(AddUser);\r\n"]},"metadata":{},"sourceType":"module"}