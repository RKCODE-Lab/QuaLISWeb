{"ast":null,"code":"import { create_UUID } from \"../../../components/CommonScript\";\nimport { attachmentType, transactionStatus } from \"../../../components/Enumeration\";\nexport function onSaveSampleAttachment(saveParam, selectedMaster) {\n  const formData = new FormData();\n  const selectedRecord = saveParam.selectedRecord;\n  const acceptedFiles = selectedRecord.sfilename;\n  const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n  let isFileEdited = transactionStatus.NO;\n  let fileArray = [];\n  let samindex = {\n    index: 0\n  };\n\n  if (nattachmenttypecode === attachmentType.FTP) {\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n      acceptedFiles.forEach((file, index) => {\n        const splittedFileName = file.name.split('.');\n        const fileExtension = file.name.split('.')[splittedFileName.length - 1]; // const uniquefilename = nattachmenttypecode === attachmentType.FTP? selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode>0 \n        //         ? selectedRecord.ssystemfilename: create_UUID()+'.'+fileExtension: \"\";\n\n        selectedMaster.forEach((sample, sampleindex) => {\n          const fileName = selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n          const uniquefilename = fileName + '.' + fileExtension;\n          const tempData = {};\n          tempData['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\n          tempData[\"npreregno\"] = sample.npreregno;\n          tempData['nformcode'] = saveParam.userInfo.nformcode;\n          tempData['nusercode'] = saveParam.userInfo.nusercode;\n          tempData['nuserrolecode'] = saveParam.userInfo.nuserrole;\n          tempData[\"nlinkcode\"] = transactionStatus.NA; // tempData[\"nfilesize\"] = file.size;\n\n          tempData['jsondata'] = {\n            susername: saveParam.userInfo.susername,\n            suserrolename: saveParam.userInfo.suserrolename,\n            ssystemfilename: uniquefilename,\n            sfilename: file.name.trim(),\n            nfilesize: file.size,\n            sdescription: selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\",\n            slinkname: \"\"\n          };\n          tempData['nattachmenttypecode'] = nattachmenttypecode; // tempData[\"ssystemfilename\"] = uniquefilename;\n          // tempData[\"sfilename\"] = file.name.trim();\n          // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n          tempData['nstatus'] = transactionStatus.ACTIVE;\n          formData.append(\"uploadedFile\" + samindex[\"index\"], file);\n          formData.append(\"uniquefilename\" + samindex[\"index\"], uniquefilename);\n          fileArray.push(tempData);\n          samindex[\"index\"] = samindex[\"index\"] + 1;\n        });\n      });\n      formData.append(\"filecount\", acceptedFiles.length * selectedMaster.length);\n      isFileEdited = transactionStatus.YES;\n    } else {\n      selectedMaster.forEach(sample => {\n        let sampleFile = {};\n        sampleFile['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\n        sampleFile[\"npreregno\"] = sample.npreregno;\n        sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n        sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n        sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n        sampleFile[\"nlinkcode\"] = transactionStatus.NA; // sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\n\n        sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n        sampleFile['jsondata'] = {\n          susername: saveParam.userInfo.susername,\n          suserrolename: saveParam.userInfo.suserrolename,\n          ssystemfilename: selectedRecord.ssystemfilename,\n          sfilename: selectedRecord.sfilename.trim(),\n          nfilesize: selectedRecord.nfilesize,\n          sdescription: selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\",\n          slinkname: \"\"\n        };\n        sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim(); // sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n        sampleFile['nstatus'] = transactionStatus.ACTIVE;\n        fileArray.push(sampleFile);\n      });\n    }\n  } else {\n    selectedMaster.forEach(sample => {\n      let sampleFile = {};\n      sampleFile['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\n      sampleFile[\"npreregno\"] = sample.npreregno;\n      sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n      sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n      sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n      sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n      sampleFile['jsondata'] = {\n        susername: saveParam.userInfo.susername,\n        suserrolename: saveParam.userInfo.suserrolename,\n        ssystemfilename: \"\",\n        sfilename: selectedRecord.slinkfilename.trim(),\n        nfilesize: 0,\n        slinkname: selectedRecord.nlinkcode.label,\n        sdescription: selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\"\n      };\n      sampleFile['nattachmenttypecode'] = nattachmenttypecode; // sampleFile[\"ssystemfilename\"] = \"\";\n\n      sampleFile['nstatus'] = transactionStatus.ACTIVE;\n      fileArray.push(sampleFile);\n    });\n  }\n\n  formData.append(\"ncontrolCode\", saveParam.ncontrolCode);\n  formData.append(\"isFileEdited\", isFileEdited);\n  formData.append(\"sampleattachment\", JSON.stringify(fileArray));\n  formData.append(\"nattachmenttypecode\", nattachmenttypecode);\n  formData.append(\"npreregno\", saveParam.npreregno);\n  formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\n  const inputParam = {\n    inputData: {\n      userinfo: saveParam.userInfo\n    },\n    formData: formData,\n    isFileupload: true,\n    operation: saveParam.operation,\n    classUrl: \"attachment\",\n    saveType: saveParam.saveType,\n    formRef: saveParam.formRef,\n    methodUrl: \"SampleAttachment\"\n  };\n  return inputParam;\n}\nexport function onSaveTestAttachment(saveParam, selectedMaster) {\n  const formData = new FormData();\n  const selectedRecord = saveParam.selectedRecord;\n  const acceptedFiles = selectedRecord.sfilename;\n  const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n  let isFileEdited = transactionStatus.NO;\n  let fileArray = [];\n  let testindex1 = {\n    index: 0\n  };\n\n  if (nattachmenttypecode === attachmentType.FTP) {\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n      acceptedFiles.forEach((file, index) => {\n        const splittedFileName = file.name.split('.');\n        const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n        selectedMaster.forEach((test, testindex) => {\n          const fileName = selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n          const uniquefilename = fileName + '.' + fileExtension;\n          const tempData = {};\n          tempData['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\n          tempData[\"ntransactiontestcode\"] = test.ntransactiontestcode;\n          tempData[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\n          tempData[\"npreregno\"] = test.npreregno;\n          tempData['nformcode'] = saveParam.userInfo.nformcode;\n          tempData['nusercode'] = saveParam.userInfo.nusercode;\n          tempData['nuserrolecode'] = saveParam.userInfo.nuserrole;\n          tempData[\"nlinkcode\"] = transactionStatus.NA;\n          tempData['nattachmenttypecode'] = nattachmenttypecode;\n          tempData['jsondata'] = {\n            stestsynonym: test.stestsynonym,\n            susername: saveParam.userInfo.susername,\n            suserrolename: saveParam.userInfo.suserrolename,\n            nfilesize: file.size,\n            ssystemfilename: uniquefilename,\n            sfilename: file.name.trim(),\n            slinkname: \"\",\n            sdescription: selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\"\n          }; // tempData[\"nfilesize\"] = file.size;\n          // tempData[\"ssystemfilename\"] = uniquefilename;\n          // tempData[\"sfilename\"] = file.name.trim();\n          // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n          tempData['nstatus'] = transactionStatus.ACTIVE;\n          formData.append(\"uploadedFile\" + testindex1[\"index\"], file);\n          formData.append(\"uniquefilename\" + testindex1[\"index\"], uniquefilename);\n          fileArray.push(tempData);\n          testindex1[\"index\"] = testindex1[\"index\"] + 1;\n        });\n      });\n      formData.append(\"filecount\", acceptedFiles.length * selectedMaster.length);\n      isFileEdited = transactionStatus.YES;\n    } else {\n      selectedMaster.forEach(test => {\n        let sampleFile = {};\n        sampleFile['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\n        sampleFile[\"ntransactiontestcode\"] = test.ntransactiontestcode;\n        sampleFile[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\n        sampleFile[\"npreregno\"] = test.npreregno;\n        sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n        sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n        sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n        sampleFile[\"nlinkcode\"] = transactionStatus.NA; // sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\n\n        sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n        sampleFile['jsondata'] = {\n          stestsynonym: test.jsondata.stestsynonym,\n          susername: saveParam.userInfo.susername,\n          suserrolename: saveParam.userInfo.suserrolename,\n          nfilesize: selectedRecord.size,\n          ssystemfilename: selectedRecord.ssystemfilename,\n          sfilename: selectedRecord.sfilename.trim(),\n          slinkname: \"\",\n          sdescription: selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\"\n        }; // sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        // sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\n        // sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n        sampleFile['nstatus'] = transactionStatus.ACTIVE;\n        fileArray.push(sampleFile);\n      });\n    }\n  } else {\n    selectedMaster.forEach(test => {\n      let sampleFile = {};\n      sampleFile['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\n      sampleFile[\"ntransactiontestcode\"] = test.ntransactiontestcode;\n      sampleFile[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\n      sampleFile[\"npreregno\"] = test.npreregno;\n      sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n      sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n      sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n      sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n      sampleFile[\"jsondata\"] = {\n        stestsynonym: test.stestsynonym,\n        susername: saveParam.userInfo.susername,\n        suserrolename: saveParam.userInfo.suserrolename,\n        ssystemfilename: \"\",\n        sfilename: selectedRecord.slinkfilename.trim(),\n        nfilesize: 0,\n        slinkname: selectedRecord.nlinkcode.label,\n        sdescription: selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\"\n      };\n      sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n      sampleFile['nstatus'] = transactionStatus.ACTIVE;\n      fileArray.push(sampleFile);\n    });\n  }\n\n  formData.append(\"isFileEdited\", isFileEdited);\n  formData.append(\"testattachment\", JSON.stringify(fileArray));\n  formData.append(\"nattachmenttypecode\", nattachmenttypecode);\n  formData.append(\"ntransactiontestcode\", saveParam.ntransactiontestcode);\n  formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\n  const inputParam = {\n    inputData: {\n      userinfo: saveParam.userInfo\n    },\n    formData: formData,\n    isFileupload: true,\n    operation: saveParam.operation,\n    classUrl: \"attachment\",\n    saveType: saveParam.saveType,\n    formRef: saveParam.formRef,\n    methodUrl: \"TestAttachment\"\n  };\n  return inputParam;\n}\nexport function onSaveBatchAttachment(saveParam, selectedMaster) {\n  const formData = new FormData();\n  const selectedRecord = saveParam.selectedRecord;\n  const acceptedFiles = selectedRecord.sfilename;\n  const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n  let isFileEdited = transactionStatus.NO;\n  let fileArray = [];\n  let nreleasebatchcode = selectedMaster.nreleasebatchcode;\n\n  if (nattachmenttypecode === attachmentType.FTP) {\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n      acceptedFiles.forEach((file, index) => {\n        const splittedFileName = file.name.split('.');\n        const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n        const fileName = selectedRecord.nbatchfilecode && selectedRecord.nbatchfilecode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n        const uniquefilename = fileName + '.' + fileExtension; //selectedMaster.forEach(sample=>{\n\n        const tempData = {};\n        tempData['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\n        tempData[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\n        tempData['nattachmenttypecode'] = nattachmenttypecode;\n        tempData[\"ssystemfilename\"] = uniquefilename;\n        tempData[\"sfilename\"] = file.name.trim();\n        tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n        tempData['nstatus'] = transactionStatus.ACTIVE;\n        formData.append(\"uploadedFile\" + index, file);\n        formData.append(\"uniquefilename\" + index, uniquefilename);\n        fileArray.push(tempData); //nreleasebatchcode.push(selectedMaster.releasebatchcode)\n        //})\n      });\n      formData.append(\"filecount\", acceptedFiles.length);\n      isFileEdited = transactionStatus.YES;\n    } else {\n      // selectedMaster.forEach(sample=>{\n      let sampleFile = {};\n      sampleFile['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\n      sampleFile[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\n      sampleFile[\"nlinkcode\"] = transactionStatus.NA;\n      sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n      sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n      sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\n      sampleFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n      sampleFile['nstatus'] = transactionStatus.ACTIVE; //npreregno.push(sample.npreregno)\n\n      fileArray.push(sampleFile); // })\n    }\n  } else {\n    //selectedMaster.forEach(sample=>{\n    let sampleFile = {};\n    sampleFile['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\n    sampleFile[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\n    sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n    sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n    sampleFile[\"ssystemfilename\"] = \"\";\n    sampleFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n    sampleFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\n    sampleFile['nstatus'] = transactionStatus.ACTIVE;\n    fileArray.push(sampleFile); //npreregno.push(sample.npreregno)\n    //})  \n  }\n\n  formData.append(\"isFileEdited\", isFileEdited);\n  formData.append(\"batchcreationfile\", JSON.stringify(fileArray));\n  formData.append(\"nattachmenttypecode\", nattachmenttypecode);\n  formData.append(\"nreleasebatchcode\", nreleasebatchcode);\n  formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\n  const inputParam = {\n    inputData: {\n      userinfo: saveParam.userInfo\n    },\n    formData: formData,\n    isFileupload: true,\n    operation: saveParam.operation,\n    classUrl: \"attachment\",\n    saveType: saveParam.saveType,\n    formRef: saveParam.formRef,\n    methodUrl: \"BatchCreationFile\"\n  };\n  return inputParam;\n}\nexport function onSaveSubSampleAttachment(saveParam, selectedMaster) {\n  const formData = new FormData();\n  const selectedRecord = saveParam.selectedRecord;\n  const acceptedFiles = selectedRecord.sfilename;\n  const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n  let isFileEdited = transactionStatus.NO;\n  let fileArray = [];\n  let samindex = {\n    index: 0\n  };\n\n  if (nattachmenttypecode === attachmentType.FTP) {\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n      acceptedFiles.forEach((file, index) => {\n        const splittedFileName = file.name.split('.');\n        const fileExtension = file.name.split('.')[splittedFileName.length - 1]; // const uniquefilename = nattachmenttypecode === attachmentType.FTP? selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode>0 \n        //         ? selectedRecord.ssystemfilename: create_UUID()+'.'+fileExtension: \"\";\n\n        selectedMaster.forEach((sample, sampleindex) => {\n          const fileName = selectedRecord.nsampleattachmentcode && selectedRecord.nsampleattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n          const uniquefilename = fileName + '.' + fileExtension;\n          const tempData = {};\n          tempData['nsampleattachmentcode'] = selectedRecord.nsampleattachmentcode ? selectedRecord.nsampleattachmentcode : 0;\n          tempData[\"npreregno\"] = sample.npreregno;\n          tempData[\"ntransactionsamplecode\"] = sample.ntransactionsamplecode;\n          tempData['nformcode'] = saveParam.userInfo.nformcode;\n          tempData['nusercode'] = saveParam.userInfo.nusercode;\n          tempData['nuserrolecode'] = saveParam.userInfo.nuserrole;\n          tempData[\"nlinkcode\"] = transactionStatus.NA; // tempData[\"nfilesize\"] = file.size;\n\n          tempData['jsondata'] = {\n            susername: saveParam.userInfo.susername,\n            suserrolename: saveParam.userInfo.suserrolename,\n            ssystemfilename: uniquefilename,\n            sfilename: file.name.trim(),\n            nfilesize: file.size,\n            sdescription: selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\",\n            slinkname: \"\"\n          };\n          tempData['nattachmenttypecode'] = nattachmenttypecode; // tempData[\"ssystemfilename\"] = uniquefilename;\n          // tempData[\"sfilename\"] = file.name.trim();\n          // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n          tempData['nstatus'] = transactionStatus.ACTIVE;\n          formData.append(\"uploadedFile\" + samindex[\"index\"], file);\n          formData.append(\"uniquefilename\" + samindex[\"index\"], uniquefilename);\n          fileArray.push(tempData);\n          samindex[\"index\"] = samindex[\"index\"] + 1;\n        });\n      });\n      formData.append(\"filecount\", acceptedFiles.length * selectedMaster.length);\n      isFileEdited = transactionStatus.YES;\n    } else {\n      selectedMaster.forEach(sample => {\n        let sampleFile = {};\n        sampleFile['nsampleattachmentcode'] = selectedRecord.nsampleattachmentcode ? selectedRecord.nsampleattachmentcode : 0;\n        sampleFile[\"npreregno\"] = sample.npreregno;\n        sampleFile[\"ntransactionsamplecode\"] = sample.ntransactionsamplecode;\n        sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n        sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n        sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n        sampleFile[\"nlinkcode\"] = transactionStatus.NA; // sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\n\n        sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n        sampleFile['jsondata'] = {\n          susername: saveParam.userInfo.susername,\n          suserrolename: saveParam.userInfo.suserrolename,\n          ssystemfilename: selectedRecord.ssystemfilename,\n          sfilename: selectedRecord.sfilename.trim(),\n          nfilesize: selectedRecord.nfilesize,\n          sdescription: selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\",\n          slinkname: \"\"\n        };\n        sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim(); // sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n        sampleFile['nstatus'] = transactionStatus.ACTIVE;\n        fileArray.push(sampleFile);\n      });\n    }\n  } else {\n    selectedMaster.forEach(sample => {\n      let sampleFile = {};\n      sampleFile['nsampleattachmentcode'] = selectedRecord.nsampleattachmentcode ? selectedRecord.nsampleattachmentcode : 0;\n      sampleFile[\"npreregno\"] = sample.npreregno;\n      sampleFile[\"ntransactionsamplecode\"] = sample.ntransactionsamplecode;\n      sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n      sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n      sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n      sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n      sampleFile['jsondata'] = {\n        susername: saveParam.userInfo.susername,\n        suserrolename: saveParam.userInfo.suserrolename,\n        ssystemfilename: \"\",\n        sfilename: selectedRecord.slinkfilename.trim(),\n        nfilesize: 0,\n        slinkname: selectedRecord.nlinkcode.label,\n        sdescription: selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\"\n      };\n      sampleFile['nattachmenttypecode'] = nattachmenttypecode; // sampleFile[\"ssystemfilename\"] = \"\";\n\n      sampleFile['nstatus'] = transactionStatus.ACTIVE;\n      fileArray.push(sampleFile);\n    });\n  }\n\n  formData.append(\"ncontrolCode\", saveParam.ncontrolCode);\n  formData.append(\"isFileEdited\", isFileEdited);\n  formData.append(\"sampleattachment\", JSON.stringify(fileArray));\n  formData.append(\"nattachmenttypecode\", nattachmenttypecode);\n  formData.append(\"npreregno\", saveParam.npreregno);\n  formData.append(\"ntransactionsamplecode\", saveParam.ntransactionsamplecode);\n  formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\n  const inputParam = {\n    inputData: {\n      userinfo: saveParam.userInfo\n    },\n    formData: formData,\n    isFileupload: true,\n    operation: saveParam.operation,\n    classUrl: \"attachment\",\n    saveType: saveParam.saveType,\n    formRef: saveParam.formRef,\n    methodUrl: \"SubSampleAttachment\"\n  };\n  return inputParam;\n}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/attachmentscomments/attachments/AttachmentFunctions.js"],"names":["create_UUID","attachmentType","transactionStatus","onSaveSampleAttachment","saveParam","selectedMaster","formData","FormData","selectedRecord","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","NO","fileArray","samindex","index","FTP","Array","isArray","length","forEach","file","splittedFileName","name","split","fileExtension","sample","sampleindex","fileName","nregattachmentcode","ssystemfilename","uniquefilename","tempData","npreregno","userInfo","nformcode","nusercode","nuserrole","NA","susername","suserrolename","trim","nfilesize","size","sdescription","slinkname","ACTIVE","append","push","YES","sampleFile","nlinkcode","value","slinkfilename","label","slinkdescription","ncontrolCode","JSON","stringify","inputParam","inputData","userinfo","isFileupload","operation","classUrl","saveType","formRef","methodUrl","onSaveTestAttachment","testindex1","test","testindex","ntestattachmentcode","ntransactiontestcode","ntransactionsamplecode","stestsynonym","jsondata","onSaveBatchAttachment","nreleasebatchcode","nbatchfilecode","onSaveSubSampleAttachment","nsampleattachmentcode"],"mappings":"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","sourcesContent":["import { create_UUID } from \"../../../components/CommonScript\";\r\nimport { attachmentType, transactionStatus } from \"../../../components/Enumeration\";\r\n\r\nexport function onSaveSampleAttachment(saveParam, selectedMaster) {\r\n\r\n    const formData = new FormData();\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n    let isFileEdited = transactionStatus.NO;\r\n    let fileArray = [];\r\n    let samindex = {\r\n        index: 0\r\n    };\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n            acceptedFiles.forEach((file, index) => {\r\n\r\n                const splittedFileName = file.name.split('.');\r\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                // const uniquefilename = nattachmenttypecode === attachmentType.FTP? selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode>0 \r\n                //         ? selectedRecord.ssystemfilename: create_UUID()+'.'+fileExtension: \"\";\r\n\r\n\r\n                selectedMaster.forEach((sample, sampleindex) => {\r\n                    const fileName = selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID()\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\r\n                    tempData[\"npreregno\"] = sample.npreregno;\r\n                    tempData['nformcode'] = saveParam.userInfo.nformcode\r\n                    tempData['nusercode'] = saveParam.userInfo.nusercode\r\n                    tempData['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    // tempData[\"nfilesize\"] = file.size;\r\n                    tempData['jsondata'] = {\r\n                        susername: saveParam.userInfo.susername,\r\n                        suserrolename: saveParam.userInfo.suserrolename,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename: file.name.trim(),\r\n                        nfilesize: file.size,\r\n                        sdescription: selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\",\r\n                        slinkname: \"\"\r\n                    }\r\n                    tempData['nattachmenttypecode'] = nattachmenttypecode\r\n                    // tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    // tempData[\"sfilename\"] = file.name.trim();\r\n                    // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                    tempData['nstatus'] = transactionStatus.ACTIVE;\r\n\r\n\r\n\r\n                    formData.append(\"uploadedFile\" + samindex[\"index\"], file);\r\n                    formData.append(\"uniquefilename\" + samindex[\"index\"], uniquefilename);\r\n                    fileArray.push(tempData);\r\n                    samindex[\"index\"] = samindex[\"index\"] + 1;\r\n                })\r\n            });\r\n            formData.append(\"filecount\", (acceptedFiles.length * selectedMaster.length));\r\n\r\n            isFileEdited = transactionStatus.YES;\r\n        } else {\r\n            selectedMaster.forEach(sample => {\r\n                let sampleFile = {};\r\n                sampleFile['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\r\n                sampleFile[\"npreregno\"] = sample.npreregno;\r\n                sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n                sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n                sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                sampleFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                // sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n                sampleFile['jsondata'] = {\r\n                    susername: saveParam.userInfo.susername,\r\n                    suserrolename: saveParam.userInfo.suserrolename,\r\n                    ssystemfilename: selectedRecord.ssystemfilename,\r\n                    sfilename: selectedRecord.sfilename.trim(),\r\n                    nfilesize: selectedRecord.nfilesize,\r\n                    sdescription: selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\",\r\n                    slinkname: \"\"\r\n                }\r\n                sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\r\n                // sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n                fileArray.push(sampleFile);\r\n            })\r\n        }\r\n    } else {\r\n        selectedMaster.forEach(sample => {\r\n            let sampleFile = {};\r\n            sampleFile['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\r\n            sampleFile[\"npreregno\"] = sample.npreregno;\r\n            sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n            sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n            sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n            sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            sampleFile['jsondata'] = {\r\n                susername: saveParam.userInfo.susername,\r\n                suserrolename: saveParam.userInfo.suserrolename,\r\n                ssystemfilename: \"\",\r\n                sfilename: selectedRecord.slinkfilename.trim(),\r\n                nfilesize: 0,\r\n                slinkname: selectedRecord.nlinkcode.label,\r\n                sdescription: selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\"\r\n            }\r\n            sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n            // sampleFile[\"ssystemfilename\"] = \"\";\r\n            sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n            fileArray.push(sampleFile);\r\n        })\r\n    }\r\n    formData.append(\"ncontrolCode\", saveParam.ncontrolCode);\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"sampleattachment\", JSON.stringify(fileArray));\r\n    formData.append(\"nattachmenttypecode\", nattachmenttypecode);\r\n    formData.append(\"npreregno\", saveParam.npreregno);\r\n    formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\r\n    const inputParam = {\r\n        inputData: { userinfo: saveParam.userInfo },\r\n        formData: formData,\r\n        isFileupload: true,\r\n        operation: saveParam.operation,\r\n        classUrl: \"attachment\",\r\n        saveType: saveParam.saveType,\r\n        formRef: saveParam.formRef,\r\n        methodUrl: \"SampleAttachment\"\r\n    }\r\n    return inputParam;\r\n}\r\nexport function onSaveTestAttachment(saveParam, selectedMaster) {\r\n\r\n    const formData = new FormData();\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n    let isFileEdited = transactionStatus.NO;\r\n    let fileArray = [];\r\n    let testindex1 = {\r\n        index: 0\r\n    };\r\n\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n            acceptedFiles.forEach((file, index) => {\r\n\r\n                const splittedFileName = file.name.split('.');\r\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n\r\n\r\n                selectedMaster.forEach((test, testindex) => {\r\n                    const fileName = selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID()\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\r\n                    tempData[\"ntransactiontestcode\"] = test.ntransactiontestcode;\r\n                    tempData[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\r\n                    tempData[\"npreregno\"] = test.npreregno;\r\n                    tempData['nformcode'] = saveParam.userInfo.nformcode\r\n                    tempData['nusercode'] = saveParam.userInfo.nusercode\r\n                    tempData['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData['nattachmenttypecode'] = nattachmenttypecode\r\n                    tempData['jsondata'] = {\r\n                        stestsynonym:test.stestsynonym,\r\n                        susername: saveParam.userInfo.susername,\r\n                        suserrolename: saveParam.userInfo.suserrolename,\r\n                        nfilesize: file.size,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename: file.name.trim(),\r\n                        slinkname: \"\",\r\n                        sdescription: selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\"\r\n                    }\r\n                    // tempData[\"nfilesize\"] = file.size;\r\n                    // tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    // tempData[\"sfilename\"] = file.name.trim();\r\n                    // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                    tempData['nstatus'] = transactionStatus.ACTIVE;\r\n\r\n\r\n                    formData.append(\"uploadedFile\" + testindex1[\"index\"], file);\r\n                    formData.append(\"uniquefilename\" + testindex1[\"index\"], uniquefilename);\r\n                    fileArray.push(tempData);\r\n                    testindex1[\"index\"] = testindex1[\"index\"] + 1;\r\n                })\r\n            });\r\n            formData.append(\"filecount\", (acceptedFiles.length * selectedMaster.length));\r\n            isFileEdited = transactionStatus.YES;\r\n        } else {\r\n            selectedMaster.forEach(test => {\r\n                let sampleFile = {};\r\n                sampleFile['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\r\n                sampleFile[\"ntransactiontestcode\"] = test.ntransactiontestcode;\r\n                sampleFile[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\r\n                sampleFile[\"npreregno\"] = test.npreregno;\r\n                sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n                sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n                sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                sampleFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                // sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n                sampleFile['jsondata'] = {\r\n                    stestsynonym:test.jsondata.stestsynonym,\r\n                    susername: saveParam.userInfo.susername,\r\n                    suserrolename: saveParam.userInfo.suserrolename,\r\n                    nfilesize: selectedRecord.size,\r\n                    ssystemfilename: selectedRecord.ssystemfilename,\r\n                    sfilename: selectedRecord.sfilename.trim(),\r\n                    slinkname: \"\",\r\n                    sdescription: selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\"\r\n                }\r\n                // sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                // sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\r\n                // sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n                fileArray.push(sampleFile);\r\n            })\r\n        }\r\n    } else {\r\n        selectedMaster.forEach(test => {\r\n            let sampleFile = {};\r\n            sampleFile['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\r\n            sampleFile[\"ntransactiontestcode\"] = test.ntransactiontestcode;\r\n            sampleFile[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\r\n            sampleFile[\"npreregno\"] = test.npreregno;\r\n            sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n            sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n            sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n            sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            sampleFile[\"jsondata\"] = {\r\n                stestsynonym:test.stestsynonym,\r\n                susername: saveParam.userInfo.susername,\r\n                suserrolename: saveParam.userInfo.suserrolename,\r\n                ssystemfilename: \"\",\r\n                sfilename: selectedRecord.slinkfilename.trim(),\r\n                nfilesize: 0,\r\n                slinkname: selectedRecord.nlinkcode.label,\r\n                sdescription: selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\"\r\n            };\r\n            sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n            sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n            fileArray.push(sampleFile);\r\n        })\r\n    }\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"testattachment\", JSON.stringify(fileArray));\r\n    formData.append(\"nattachmenttypecode\", nattachmenttypecode);\r\n    formData.append(\"ntransactiontestcode\", saveParam.ntransactiontestcode);\r\n    formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\r\n    const inputParam = {\r\n        inputData: { userinfo: saveParam.userInfo },\r\n        formData: formData,\r\n        isFileupload: true,\r\n        operation: saveParam.operation,\r\n        classUrl: \"attachment\",\r\n        saveType: saveParam.saveType,\r\n        formRef: saveParam.formRef,\r\n        methodUrl: \"TestAttachment\"\r\n    }\r\n    return inputParam;\r\n}\r\n\r\n\r\nexport function onSaveBatchAttachment(saveParam, selectedMaster) {\r\n\r\n    const formData = new FormData();\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n    let isFileEdited = transactionStatus.NO;\r\n    let fileArray = [];\r\n    let nreleasebatchcode = selectedMaster.nreleasebatchcode;\r\n\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n            acceptedFiles.forEach((file, index) => {\r\n\r\n                const splittedFileName = file.name.split('.');\r\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                const fileName = selectedRecord.nbatchfilecode && selectedRecord.nbatchfilecode > 0 &&\r\n                    selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                    selectedRecord.ssystemfilename.split('.')[0] : create_UUID()\r\n                const uniquefilename = fileName + '.' + fileExtension;\r\n\r\n                //selectedMaster.forEach(sample=>{\r\n\r\n                const tempData = {};\r\n                tempData['nbatchfilecode'] = selectedRecord.nbatchfilecode ?\r\n                    selectedRecord.nbatchfilecode : 0;\r\n                tempData[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\r\n                tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                tempData['nattachmenttypecode'] = nattachmenttypecode;\r\n                tempData[\"ssystemfilename\"] = uniquefilename;\r\n                tempData[\"sfilename\"] = file.name.trim();\r\n                tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\r\n                tempData['nstatus'] = transactionStatus.ACTIVE;\r\n\r\n\r\n                formData.append(\"uploadedFile\" + index, file);\r\n                formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                fileArray.push(tempData);\r\n                //nreleasebatchcode.push(selectedMaster.releasebatchcode)\r\n                //})\r\n            });\r\n            formData.append(\"filecount\", acceptedFiles.length);\r\n            isFileEdited = transactionStatus.YES;\r\n        }\r\n        else {\r\n            // selectedMaster.forEach(sample=>{\r\n            let sampleFile = {};\r\n            sampleFile['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\r\n            sampleFile[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\r\n            sampleFile[\"nlinkcode\"] = transactionStatus.NA;\r\n            sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n            sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n            sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\r\n            sampleFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\r\n            sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n\r\n            //npreregno.push(sample.npreregno)\r\n            fileArray.push(sampleFile);\r\n            // })\r\n        }\r\n    } else {\r\n        //selectedMaster.forEach(sample=>{\r\n        let sampleFile = {};\r\n        sampleFile['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\r\n        sampleFile[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\r\n        sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n        sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n        sampleFile[\"ssystemfilename\"] = \"\";\r\n        sampleFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n        sampleFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\r\n        sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n        fileArray.push(sampleFile);\r\n        //npreregno.push(sample.npreregno)\r\n        //})  \r\n    }\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"batchcreationfile\", JSON.stringify(fileArray));\r\n    formData.append(\"nattachmenttypecode\", nattachmenttypecode);\r\n    formData.append(\"nreleasebatchcode\", nreleasebatchcode);\r\n    formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\r\n\r\n    const inputParam = {\r\n        inputData: { userinfo: saveParam.userInfo },\r\n        formData: formData,\r\n        isFileupload: true,\r\n        operation: saveParam.operation,\r\n        classUrl: \"attachment\",\r\n        saveType: saveParam.saveType,\r\n        formRef: saveParam.formRef,\r\n        methodUrl: \"BatchCreationFile\"\r\n    }\r\n    return inputParam;\r\n}\r\n\r\nexport function onSaveSubSampleAttachment(saveParam, selectedMaster) {\r\n\r\n    const formData = new FormData();\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n    let isFileEdited = transactionStatus.NO;\r\n    let fileArray = [];\r\n    let samindex = {\r\n        index: 0\r\n    };\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n            acceptedFiles.forEach((file, index) => {\r\n\r\n                const splittedFileName = file.name.split('.');\r\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                // const uniquefilename = nattachmenttypecode === attachmentType.FTP? selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode>0 \r\n                //         ? selectedRecord.ssystemfilename: create_UUID()+'.'+fileExtension: \"\";\r\n\r\n\r\n                selectedMaster.forEach((sample, sampleindex) => {\r\n                    const fileName = selectedRecord.nsampleattachmentcode && selectedRecord.nsampleattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID()\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData['nsampleattachmentcode'] = selectedRecord.nsampleattachmentcode ? selectedRecord.nsampleattachmentcode : 0;\r\n                    tempData[\"npreregno\"] = sample.npreregno;\r\n                    tempData[\"ntransactionsamplecode\"] = sample.ntransactionsamplecode;\r\n                    tempData['nformcode'] = saveParam.userInfo.nformcode\r\n                    tempData['nusercode'] = saveParam.userInfo.nusercode\r\n                    tempData['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    // tempData[\"nfilesize\"] = file.size;\r\n                    tempData['jsondata'] = {\r\n                        susername: saveParam.userInfo.susername,\r\n                        suserrolename: saveParam.userInfo.suserrolename,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename: file.name.trim(),\r\n                        nfilesize: file.size,\r\n                        sdescription: selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\",\r\n                        slinkname: \"\"\r\n                    }\r\n                    tempData['nattachmenttypecode'] = nattachmenttypecode\r\n                    // tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    // tempData[\"sfilename\"] = file.name.trim();\r\n                    // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                    tempData['nstatus'] = transactionStatus.ACTIVE;\r\n\r\n\r\n\r\n                    formData.append(\"uploadedFile\" + samindex[\"index\"], file);\r\n                    formData.append(\"uniquefilename\" + samindex[\"index\"], uniquefilename);\r\n                    fileArray.push(tempData);\r\n                    samindex[\"index\"] = samindex[\"index\"] + 1;\r\n                })\r\n            });\r\n            formData.append(\"filecount\", (acceptedFiles.length * selectedMaster.length));\r\n\r\n            isFileEdited = transactionStatus.YES;\r\n        } else {\r\n            selectedMaster.forEach(sample => {\r\n                let sampleFile = {};\r\n                sampleFile['nsampleattachmentcode'] = selectedRecord.nsampleattachmentcode ? selectedRecord.nsampleattachmentcode : 0;\r\n                sampleFile[\"npreregno\"] = sample.npreregno;\r\n                sampleFile[\"ntransactionsamplecode\"] = sample.ntransactionsamplecode;\r\n                sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n                sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n                sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                sampleFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                // sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n                sampleFile['jsondata'] = {\r\n                    susername: saveParam.userInfo.susername,\r\n                    suserrolename: saveParam.userInfo.suserrolename,\r\n                    ssystemfilename: selectedRecord.ssystemfilename,\r\n                    sfilename: selectedRecord.sfilename.trim(),\r\n                    nfilesize: selectedRecord.nfilesize,\r\n                    sdescription: selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\",\r\n                    slinkname: \"\"\r\n                }\r\n                sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\r\n                // sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n                fileArray.push(sampleFile);\r\n            })\r\n        }\r\n    } else {\r\n        selectedMaster.forEach(sample => {\r\n            let sampleFile = {};\r\n            sampleFile['nsampleattachmentcode'] = selectedRecord.nsampleattachmentcode ? selectedRecord.nsampleattachmentcode : 0;\r\n            sampleFile[\"npreregno\"] = sample.npreregno;\r\n            sampleFile[\"ntransactionsamplecode\"] = sample.ntransactionsamplecode;\r\n            sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n            sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n            sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n            sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            sampleFile['jsondata'] = {\r\n                susername: saveParam.userInfo.susername,\r\n                suserrolename: saveParam.userInfo.suserrolename,\r\n                ssystemfilename: \"\",\r\n                sfilename: selectedRecord.slinkfilename.trim(),\r\n                nfilesize: 0,\r\n                slinkname: selectedRecord.nlinkcode.label,\r\n                sdescription: selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\"\r\n            }\r\n            sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n            // sampleFile[\"ssystemfilename\"] = \"\";\r\n            sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n            fileArray.push(sampleFile);\r\n        })\r\n    }\r\n    formData.append(\"ncontrolCode\", saveParam.ncontrolCode);\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"sampleattachment\", JSON.stringify(fileArray));\r\n    formData.append(\"nattachmenttypecode\", nattachmenttypecode);\r\n    formData.append(\"npreregno\", saveParam.npreregno);\r\n    formData.append(\"ntransactionsamplecode\", saveParam.ntransactionsamplecode);\r\n    formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\r\n    const inputParam = {\r\n        inputData: { userinfo: saveParam.userInfo },\r\n        formData: formData,\r\n        isFileupload: true,\r\n        operation: saveParam.operation,\r\n        classUrl: \"attachment\",\r\n        saveType: saveParam.saveType,\r\n        formRef: saveParam.formRef,\r\n        methodUrl: \"SubSampleAttachment\"\r\n    }\r\n    return inputParam;\r\n}"]},"metadata":{},"sourceType":"module"}