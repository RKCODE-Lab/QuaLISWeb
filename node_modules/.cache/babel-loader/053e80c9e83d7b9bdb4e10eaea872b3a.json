{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import{process}from'@progress/kendo-data-query';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{toast}from'react-toastify';import Esign from'../audittrail/Esign';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import CustomTabs from'../../components/custom-tabs/custom-tabs.component';import{designComponents,transactionStatus}from'../../components/Enumeration';import{showEsign,formatInputDate,sortData}from'../../components/CommonScript';import AddDesign from'../../components/add-design/add-design.component';import ParameterMapping from'../../components/add-design/parameter-mapping.component';import{intl}from'../../components/App';import DashBoardDynamicControls from'./DashBoardDynamicControls';import DesignParameterTab from'./DesignParameterTab';import ParameterMappingTab from'./ParameterMappingTab';import DefaultValueTab from'./DefaultValueTab';//import AddDesign from '../dashboardtypes/AddDesign';\nvar DashBoardDesignConfig=/*#__PURE__*/function(_React$Component){_inherits(DashBoardDesignConfig,_React$Component);var _super=_createSuper(DashBoardDesignConfig);function DashBoardDesignConfig(props){var _this;_classCallCheck(this,DashBoardDesignConfig);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.masterData[\"selectedDesignConfig\"],event.data),dataState:event.data});};_this.closeModal=function(){var loadEsign=_this.props.loadEsign;var openChildModal=_this.props.openChildModal;var selectedRecord=_this.props.selectedRecord;if(_this.props.loadEsign){if(_this.props.operation===\"delete\"){loadEsign=false;openChildModal=false;selectedRecord={};}else{loadEsign=false;}}else{openChildModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openChildModal:openChildModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null,gridData:{},addDesignParam:{}}};_this.props.updateStore(updateInfo);};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName}};_this.props.updateStore(updateInfo);};_this.tabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_DESIGNPARAMETERS\",/*#__PURE__*/React.createElement(DesignParameterTab,{masterData:_this.props.masterData,dataResult:sortData(_this.props.masterData[\"selectedDesignConfig\"]||[],\"ascending\",\"ndashboarddesigncode\"),dataState:{skip:0,take:_this.props.masterData[\"selectedDesignConfig\"]?_this.props.masterData[\"selectedDesignConfig\"].length:10}// dataState={this.state.dataState}\n//dataStateChange={this.dataStateChange}\n,extractedColumnList:_this.gridColumnList,controlMap:_this.props.controlMap,userRoleControlRights:_this.props.userRoleControlRights,inputParam:_this.props.inputParam,userInfo:_this.props.userInfo//selectedId={this.props.selectedId}\n,getAddDashboardDesign:_this.props.getAddDashboardDesign,name:\"IDS_DESIGNPARAMETERS\"}));tabMap.set(\"IDS_PARAMETERMAPPING\",/*#__PURE__*/React.createElement(ParameterMappingTab,{masterData:_this.props.masterData,dataResult:_this.props.masterData[\"DashBoardParameterMapping\"]||[],dataState:{skip:0,take:_this.props.masterData[\"DashBoardParameterMapping\"]?_this.props.masterData[\"DashBoardParameterMapping\"].length:0}// dataState={this.state.dataState}\n// dataStateChange={this.dataStateChange}\n,extractedColumnList:_this.mappingGridFieldList,controlMap:_this.props.controlMap,userRoleControlRights:_this.props.userRoleControlRights,inputParam:_this.props.inputParam,userInfo:_this.props.userInfo// selectedId={this.props.selectedId} \n,getDashBoardParameterMappingComboService:_this.props.getDashBoardParameterMappingComboService,name:\"IDS_PARAMETERMAPPING\"}));tabMap.set(\"IDS_DEFAULTVALUE\",/*#__PURE__*/React.createElement(DefaultValueTab,{masterData:_this.props.masterData// dataResult={this.state[\"dashBoardDefaultValue\"] || []}\n// dataState={{skip:0, take: this.state[\"dashBoardDefaultValue\"] \n//     ? this.state[\"dashBoardDefaultValue\"].length:0}}     \n,dataResult:sortData(_this.props.masterData[\"DashboardDesignDefaultList\"]||[],\"ascending\",\"ndashboarddesigncode\"),dataState:{skip:0,take:_this.props.masterData[\"DashboardDesignDefaultList\"]?_this.props.masterData[\"DashboardDesignDefaultList\"].length:0}// dataState={this.state.dataState}\n,extractedColumnList:_this.defaultValueGridFieldList,controlMap:_this.props.controlMap,userRoleControlRights:_this.props.userRoleControlRights,inputParam:_this.props.inputParam,userInfo:_this.props.userInfo//  selectedId={this.props.selectedId}  \n,checkParametersAvailableForDefaultValue:_this.props.checkParametersAvailableForDefaultValue,name:\"IDS_DEFAULTVALUE\"}));return tabMap;};_this.bindActionParameter=function(rowItem,event){var gridMappingParam=_this.state.mappingGridData;if(event.target.checked){gridMappingParam.forEach(function(item){if(item.nchilddashboarddesigncode===rowItem.selectedRecord.nchilddashboarddesigncode){if(item.nparentdashboarddesigncode===rowItem.selectedRecord.nparentdashboarddesigncode){return item.nisactionparent=transactionStatus.YES;}else{return item.nisactionparent=transactionStatus.NO;}}});}else{var index=gridMappingParam.findIndex(function(item){return item.nchilddashboarddesigncode===rowItem.selectedRecord.nchilddashboarddesigncode&&item.nparentdashboarddesigncode===rowItem.selectedRecord.nparentdashboarddesigncode;});gridMappingParam[index][\"nisactionparent\"]=transactionStatus.NO;}_this.setState({mappingGridData:gridMappingParam});};_this.unbindMappingParametersFromDataGrid=function(selectedItem){var addMappingParamNew=_this.state.addMappingParam.filter(function(item){if(typeof item.nchilddashboarddesigncode===\"number\"){if(item.nchilddashboarddesigncode===selectedItem.nchilddashboarddesigncode){return item.nparentdashboarddesigncode!==selectedItem.nparentdashboarddesigncode;}else return item;}else{if(item.nchilddashboarddesigncode.value===selectedItem.nchilddashboarddesigncode){return item.nparentdashboarddesigncode.value!==selectedItem.nparentdashboarddesigncode;}else return item;}});var mappingGridDataNew=_this.state.mappingGridData.filter(function(item){if(typeof item.nchilddashboarddesigncode===\"number\"){if(item.nchilddashboarddesigncode===selectedItem.nchilddashboarddesigncode){return item.nparentdashboarddesigncode!==selectedItem.nparentdashboarddesigncode;}else return item;}else{if(item.nchilddashboarddesigncode.value===selectedItem.nchilddashboarddesigncode){return item.nparentdashboarddesigncode.value!==selectedItem.nparentdashboarddesigncode;}else return item;}});_this.setState({addMappingParam:addMappingParamNew,mappingGridData:mappingGridDataNew});};_this.bindMappingParametersToDataGrid=function(selectedRecord){if(selectedRecord[\"sfieldname\"]&&selectedRecord[\"nparentdashboarddesigncode\"]&&selectedRecord[\"nchilddashboarddesigncode\"]){if(selectedRecord&&selectedRecord.nparentdashboarddesigncode!==undefined){var copySelected=_objectSpread({},selectedRecord);var addMappingParam=_this.state.addMappingParam;var index=addMappingParam.findIndex(function(item){return item.nparentdashboarddesigncode===copySelected.nparentdashboarddesigncode.value&&item.nchilddashboarddesigncode===copySelected.nchilddashboarddesigncode.value&&item.sfieldname===copySelected.sfieldname.value;});if(index===-1){addMappingParam.push(copySelected);var mappingGridData=_this.state.mappingGridData;;mappingGridData.push({nparentdashboarddesigncode:copySelected.nparentdashboarddesigncode.value,nchilddashboarddesigncode:copySelected.nchilddashboarddesigncode.value,sparentparametername:copySelected.nparentdashboarddesigncode.label,schildparametername:copySelected.nchilddashboarddesigncode.label,sfieldname:copySelected.sfieldname.value,nactionparameter:transactionStatus.NO});_this.setState({addMappingParam:addMappingParam,//actionGridData,\nselectedRecord:{// nactionreportdesigncode:{label:\"\", value:-1},\nnparentdashboarddesigncode:{label:\"\",value:-1},sfieldname:{label:\"\",value:-1},nchilddashboarddesigncode:{label:\"\",value:-1}},mappingGridData:mappingGridData});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_DUPLICATEMAPPING\"}));_this.setState({selectedRecord:{nparentdashboarddesigncode:{label:\"\",value:-1},sfieldname:{label:\"\",value:-1},nchilddashboarddesigncode:{label:\"\",value:-1}}});}}}else{//toast.warn(this.props.intl.formatMessage({id:\"IDS_FILLMANDATORY\"}));\nif(selectedRecord[\"nchilddashboarddesigncode\"]===undefined||selectedRecord[\"nchilddashboarddesigncode\"].length===0){toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \").concat(_this.props.intl.formatMessage({id:\"IDS_PARAMETER\"})));}else if(selectedRecord[\"sfieldname\"]===undefined||selectedRecord[\"sfieldname\"].length===0){toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \").concat(_this.props.intl.formatMessage({id:\"IDS_FIELDNAME\"})));}else if(selectedRecord[\"nparentdashboarddesigncode\"]===undefined||selectedRecord[\"nparentdashboarddesigncode\"].length===0){toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \").concat(_this.props.intl.formatMessage({id:\"IDS_PARENTPARAMETER\"})));}}};_this.removeParametersInDataGrid=function(selectedItem){var addDesignParamNew=_this.state.addDesignParam.filter(function(item){return item.sfieldname!==selectedItem.sfieldname;});var gridDataNew=_this.state.gridData.filter(function(item){return item.sfieldname!==selectedItem.sfieldname;});_this.setState({addDesignParam:addDesignParamNew,gridData:gridDataNew});};_this.addParametersInDataGrid=function(selectedRecord){// if (this.state.addDesignParam.length === this.props.sqlQueryForParams.length)\n// {   \n//     toast.warn(\"You cannot add more than Dashboard Parameters count\");\n// }\n// if  {\nvar validData=false;if(selectedRecord[\"sdisplayname\"]&&selectedRecord[\"sdisplayname\"].trim().length!==0&&selectedRecord[\"sfieldname\"]&&selectedRecord[\"ndesigncomponentcode\"]){validData=true;if(selectedRecord[\"ndesigncomponentcode\"].value===designComponents.COMBOBOX){if(selectedRecord[\"nsqlquerycode\"]&&selectedRecord[\"nsqlquerycode\"].length!==0){validData=true;}else{validData=false;}}if(selectedRecord[\"ndesigncomponentcode\"].value===designComponents.DATEPICKER){if(selectedRecord[\"ndays\"]&&selectedRecord[\"ndays\"].length!==0){validData=true;}else{validData=false;}}}if(validData){if(selectedRecord&&selectedRecord.sfieldname!==undefined){var check=_this.state.gridData.filter(function(item){return item.sfieldname===selectedRecord.sfieldname.label;});if(check&&check.length>0){toast.warn(intl.formatMessage({id:\"IDS_PARAMETERALREADYEXIST\"}));return;}var copySelected=_objectSpread({},selectedRecord);var addDesignParam=_this.state.addDesignParam||[];addDesignParam.push(copySelected);var gridData=_this.state.gridData;;gridData.push({sfieldname:copySelected.sfieldname.label,sdisplayname:copySelected.sdisplayname,sdesigncomponentname:copySelected.ndesigncomponentcode.label,ndesigncomponentcode:copySelected.ndesigncomponentcode.value,ndays:selectedRecord[\"ndesigncomponentcode\"].value===designComponents.DATEPICKER?copySelected.ndays:0});_this.setState({addDesignParam:addDesignParam,selectedRecord:{ndays:\"\",// nsqlquerycode: { label: \"\", value: -1 },\n//  sfieldname: { label: \"\", value: \"\" },\nsdisplayname:\"\"//  ndesigncomponentcode: { label: \"\", value: -1 }\n},gridData:gridData});}}else{if(selectedRecord[\"sfieldname\"]===undefined||selectedRecord[\"sfieldname\"].label===\"\"){toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \").concat(_this.props.intl.formatMessage({id:\"IDS_PARAMETERS\"})));}else if(selectedRecord[\"sdisplayname\"]===undefined||selectedRecord[\"sdisplayname\"]===\"\"){toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \").concat(_this.props.intl.formatMessage({id:\"IDS_DISPLAYNAME\"})));}else if(selectedRecord[\"ndesigncomponentcode\"]===undefined||selectedRecord[\"ndesigncomponentcode\"].value===0){toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \").concat(_this.props.intl.formatMessage({id:\"IDS_INPUTTYPE\"})));}else{if(selectedRecord[\"ndesigncomponentcode\"].value===designComponents.COMBOBOX){if(selectedRecord[\"nsqlquerycode\"]===undefined||selectedRecord[\"nsqlquerycode\"].length===0){toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \").concat(_this.props.intl.formatMessage({id:\"IDS_EXISTINGLINKTABLE\"})));}}else if(selectedRecord[\"ndesigncomponentcode\"].value===designComponents.DATEPICKER){if(selectedRecord[\"ndays\"]===undefined||selectedRecord[\"ndays\"].length===0){toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \").concat(_this.props.intl.formatMessage({id:\"IDS_DAYS\"})));}}}}// }\n};_this.handleChangeDesign=function(value,valueParam){if(value!==null){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[valueParam]=value;_this.setState({selectedRecord:selectedRecord});}};_this.onInputOnChangeDesign=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};if(fieldName===\"nchilddashboarddesigncode\"){selectedRecord[fieldName]=comboData;var sqlquery=comboData.item.ssqlquery;var firstIndex=sqlquery.indexOf(\"P$\");var lastIndex=sqlquery.lastIndexOf(\"P$\");var param=[];var first=sqlquery.indexOf(\"P$\");var endFirst=sqlquery.indexOf(\"$P\");do{var second=sqlquery.indexOf(\"P$\",first+1);var endSecond=sqlquery.indexOf(\"$P\",endFirst+1);var parameter=sqlquery.substring(first+2,endFirst);param.push({label:parameter,value:parameter});first=second;endFirst=endSecond;firstIndex=second;}while(firstIndex===lastIndex);_this.setState({selectedRecord:selectedRecord,optionalParameterList:param});}else{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}};_this.onNumericInputOnChange=function(value,name,item){var _objectSpread2;var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.inputFieldData),{},(_objectSpread2={},_defineProperty(_objectSpread2,name,value),_defineProperty(_objectSpread2,name.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread2,name.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread2)),parentcode:value.toString(),parentid:item.ndashboarddesigncode,userinfo:_this.props.userInfo,ndashboardtypecode:_this.props.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);};_this.onInputOnChange=function(event,item){var _objectSpread3;var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.Login.inputFieldData),{},(_objectSpread3={},_defineProperty(_objectSpread3,event.target.name,selectedRecord[event.target.name]),_defineProperty(_objectSpread3,event.target.name.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread3,event.target.name.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread3)),parentcode:selectedRecord[event.target.name].toString(),parentid:item.ndashboarddesigncode,userinfo:_this.props.Login.userInfo,ndashboardtypecode:_this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.Login.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);};_this.handleDateChange=function(dateName,dateValue,item){var _objectSpread4;var selectedRecord=_this.state.selectedRecord;selectedRecord[dateName]=dateValue;var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.inputFieldData),{},(_objectSpread4={},_defineProperty(_objectSpread4,dateName,formatInputDate(dateValue,true)),_defineProperty(_objectSpread4,dateName.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread4,dateName.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread4)),parentcode:formatInputDate(dateValue,true),parentid:item.ndashboarddesigncode,userinfo:_this.props.userInfo,ndashboardtypecode:_this.props.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);};_this.onInputOnChangeDefault=function(event,item){var _objectSpread5;var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.inputFieldData),{},(_objectSpread5={},_defineProperty(_objectSpread5,event.target.name,selectedRecord[event.target.name]),_defineProperty(_objectSpread5,event.target.name.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread5,event.target.name.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread5)),parentcode:selectedRecord[event.target.name].toString(),parentid:item.ndashboarddesigncode,userinfo:_this.props.userInfo,ndashboardtypecode:_this.props.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);};_this.onComboChangeDefaultValue=function(comboData,fieldName,item){var selectedRecord=_this.state.selectedRecord||{};if(comboData!==null){var _objectSpread6;selectedRecord[fieldName]=comboData;var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.inputFieldData),{},(_objectSpread6={},_defineProperty(_objectSpread6,fieldName,comboData.value),_defineProperty(_objectSpread6,fieldName.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread6,fieldName.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread6)),parentcode:comboData.value.toString(),parentid:item.ndashboarddesigncode,userinfo:_this.props.userInfo,ndashboardtypecode:_this.props.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);}else{selectedRecord[fieldName]=\"\";_this.setState({selectedRecord:selectedRecord});}};_this.onSaveClick=function(saveType,formRef){if(_this.props.screenName===\"IDS_PARAMETERMAPPING\"){_this.onSaveParameterMapping(saveType,formRef);}else if(_this.props.screenName===\"IDS_DEFAULTVALUE\"){_this.onSaveClickDefaultValue(saveType,formRef);}else{if(_this.state.addDesignParam&&_this.state.addDesignParam.length===0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLEASEADDPARAMETER\"}));}else{_this.onSaveClickAddDesign(saveType,formRef);}}};_this.onSaveParameterMapping=function(saveType,formRef){var operation=_this.props.operation;var inputData=[];var selectedId=null;inputData[\"userinfo\"]=_this.props.userInfo;inputData[\"dashboardparametermapping\"]=[];//inputData[\"reportparameteraction\"] = [];\n_this.state.mappingGridData.forEach(function(item){inputData[\"dashboardparametermapping\"].push({\"ndashboardtypecode\":_this.props.masterData.selectedDashBoardTypes.ndashboardtypecode,\"nparentdashboarddesigncode\":item.nparentdashboarddesigncode,\"nchilddashboarddesigncode\":item.nchilddashboarddesigncode,\"sfieldname\":item.sfieldname,\"nisactionparent\":item.nisactionparent});});var inputParam={classUrl:_this.props.inputParam.classUrl,methodUrl:\"DashBoardParameterMapping\",displayName:_this.props.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,dataState:undefined,selectedId:selectedId};if(showEsign(_this.props.userRoleControlRights,_this.props.userInfo.nformcode,_this.props.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.masterData},saveType:saveType//openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\n///operation: this.props.Login.operation\n}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.masterData,\"openChildModal\");}};_this.onSaveClickAddDesign=function(saveType,formRef){var dataState=undefined;var operation=_this.props.operation;var inputData=[];var selectedId=null;var data=[];if(_this.state.addDesignParam.length===_this.props.sqlQueryForParams.length){inputData[\"userinfo\"]=_this.props.userInfo;_this.state.addDesignParam.map(function(item){data.push({\"ndashboardtypecode\":_this.props.masterData.selectedDashBoardTypes.ndashboardtypecode,\"ndesigncomponentcode\":item.ndesigncomponentcode&&item.ndesigncomponentcode.value?item.ndesigncomponentcode.value:item.ndesigncomponentcode,\"sfieldname\":item.sfieldname.label&&item.sfieldname.label?item.sfieldname.label:item.sfieldname,\"nsqlquerycode\":item.nsqlquerycode&&item.nsqlquerycode.value?item.nsqlquerycode.value:-1,\"sdisplayname\":item.sdisplayname,\"ndays\":item.ndays?item.ndays:0,\"nmandatory\":item.nmandatory&&item.nmandatory?item.nmandatory:item.sfieldname.item.Mandatory});return null;});inputData[\"dashboarddesignconfig\"]=data;inputData[\"ndashboardtypecode\"]=_this.props.masterData.selectedDashBoardTypes.ndashboardtypecode;var inputParam={classUrl:_this.props.inputParam.classUrl,methodUrl:\"DashBoardDesignConfig\",displayName:_this.props.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,dataState:dataState,selectedId:selectedId};if(showEsign(_this.props.userRoleControlRights,_this.props.userInfo.nformcode,_this.props.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.masterData},openChildModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.inputParam.displayName}),operation:_this.props.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.masterData,\"openChildModal\");}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_CONFIGUREALLPARAMETERS\"}));}};_this.onSaveClickDefaultValue=function(){// let dataState = undefined;\n// let operation = this.props.operation;\nvar inputData=[];// let selectedId = null;\nvar data=[];inputData[\"userinfo\"]=_this.props.userInfo;_this.props.masterData.viewDashBoardDesignConfigList.map(function(item){data.push({\"ndashboarddesigncode\":item.ndashboarddesigncode,\"ndashboardtypecode\":item.ndashboardtypecode,\"ndesigncomponentcode\":item.ndesigncomponentcode,\"sfieldname\":item.sfieldname,\"nsqlquerycode\":item.nsqlquerycode?item.nsqlquerycode:-1,\"sdisplayname\":item.sdisplayname,\"ndays\":item.ndays?item.ndays:0,\"sdefaultvalue\":item.ndesigncomponentcode===designComponents.COMBOBOX?_this.state.selectedRecord[item.sfieldname]&&_this.state.selectedRecord[item.sfieldname].value?_this.state.selectedRecord[item.sfieldname].value:\"\":_this.state.selectedRecord[item.sfieldname]===undefined?\"\":_this.state.selectedRecord[item.sfieldname]});return null;});inputData[\"dashboarddesignconfig\"]=data;inputData[\"ndashboardtypecode\"]=_this.props.masterData.selectedDashBoardTypes.ndashboardtypecode;_this.props.updateDashBoarddesignDefaultValue(inputData,_this.props.masterData);// const inputParam = {\n//     classUrl: this.props.inputParam.classUrl,\n//     methodUrl: \"DashBoardDesignConfig\",\n//     displayName: this.props.inputParam.displayName,\n//     inputData: inputData,\n//     operation: operation, saveType, formRef, dataState, selectedId\n// }\n// if (showEsign(this.props.userRoleControlRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true, screenData: { inputParam, masterData: this.props.masterData },\n//             openChildModal: true, screenName: this.props.intl.formatMessage({ id: this.props.inputParam.displayName }),\n//             operation: this.props.operation\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n// else {\n//     this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\n// }\n};var _dataState={skip:0,take:10};_this.state={isOpen:false,selectedRecord:{},dataResult:[],dataState:_dataState,addDesignParam:[],gridData:[],addMappingParam:[],mappingGridData:[]};_this.extractedColumnList=[{\"idsName\":\"IDS_DASHBOARDNAME\",\"dataField\":\"sdashboardtypename\",\"width\":\"200px\"},{\"idsName\":\"IDS_INPUTTYPE\",\"dataField\":\"ndesigncomponentcode\",\"width\":\"200px\",\"listName\":\"designComponentList\",\"optionId\":\"ndesigncomponentcode\",\"optionValue\":\"sdesigncomponentname\"},{\"idsName\":\"IDS_PARAMETERS\",\"dataField\":\"sfieldname\",\"width\":\"300px\",\"listName\":\"reportParameterList\",\"optionId\":\"sqlQueryParams\",\"optionValue\":\"sqlQueryParams\"},{\"idsName\":\"IDS_EXISTINGLINKTABLE\",\"dataField\":\"nsqlquerycode\",\"width\":\"200px\",\"listName\":\"sqlQueryList\",\"optionId\":\"nsqlquerycode\",\"optionValue\":\"ssqlqueryname\"},{\"idsName\":\"IDS_DISPLAYNAME\",\"dataField\":\"sdisplayname\",\"width\":\"200px\"},{\"idsName\":\"IDS_DAYS\",\"dataField\":\"ndays\",\"width\":\"200px\"},{\"idsName\":\"IDS_MANDATORY\",\"dataField\":\"nmandatory\"}];_this.gridColumnList=[{\"idsName\":\"IDS_PARAMETERS\",\"dataField\":\"sfieldname\",\"width\":\"250px\"},{\"idsName\":\"IDS_DISPLAYNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"},{\"idsName\":\"IDS_INPUTTYPE\",\"dataField\":\"sdesigncomponentname\",\"width\":\"200px\"},{\"idsName\":\"IDS_DAYS\",\"dataField\":\"ndays\",\"width\":\"150px\"}];_this.mappingInputFieldList=[{\"idsName\":\"IDS_PARAMETER\",\"dataField\":\"nchilddashboarddesigncode\",\"listName\":\"childComponentList\",\"optionId\":\"ndashboarddesigncode\",\"optionValue\":\"sdisplayname\"},{\"idsName\":\"IDS_FIELDNAME\",\"dataField\":\"sfieldname\",\"listName\":\"optionalParameterList\",\"optionId\":\"value\",\"optionValue\":\"label\"},{\"idsName\":\"IDS_PARENTPARAMETER\",\"dataField\":\"nparentdashboarddesigncode\",\"listName\":\"parentComponentList\",\"optionId\":\"ndashboarddesigncode\",\"optionValue\":\"sdisplayname\"}];_this.mappingGridFieldList=[{\"idsName\":\"IDS_PARAMETERS\",\"dataField\":\"schildparametername\",\"width\":\"200px\"},{\"idsName\":\"IDS_FIELDNAME\",\"dataField\":\"sfieldname\",\"width\":\"200px\"},{\"idsName\":\"IDS_PARENTPARAMETER\",\"dataField\":\"sparentparametername\",\"width\":\"300px\"},{\"idsName\":\"IDS_ACTIONPARAMETER\",\"dataField\":\"sisactionparent\",\"width\":\"200px\"}];_this.defaultValueGridFieldList=[{\"idsName\":\"IDS_DISPLAYNAME\",\"dataField\":\"sdisplayname\",\"width\":\"300px\"},{\"idsName\":\"IDS_DEFAULTVALUE\",\"dataField\":\"sdisplaymember\",\"width\":\"300px\"}];_this.detailedGridFieldList=[{\"idsName\":\"IDS_FIELDNAME\",\"dataField\":\"sfieldname\",\"width\":\"200px\"},{\"idsName\":\"IDS_PARENTPARAMETER\",\"dataField\":\"sparentparametername\",\"width\":\"200px\"},{\"idsName\":\"IDS_ACTIONPARAMETER\",\"dataField\":\"nisactionparent\",\"width\":\"200px\",\"componentName\":\"switch\",\"switchFieldName\":\"nisactionparent\",\"switchStatus\":transactionStatus.YES,\"needRights\":false//\"controlName\": \"DefaultTestSection\"\n}];return _this;}_createClass(DashBoardDesignConfig,[{key:\"render\",value:function render(){// const addDesignId = this.props.controlMap.has(\"AddDashBoardDesignConfig\") && this.props.controlMap.get(\"AddDashBoardDesignConfig\").ncontrolcode\n// const parameterMapId = this.props.controlMap.has(\"AddDashBoardParameterMapping\") && this.props.controlMap.get(\"AddDashBoardParameterMapping\").ncontrolcode;\n// const addDesignParam = {\n//     screenName: \"Add Design\", operation: \"create\", primaryKeyField: \"ndashboarddesigncode\",\n//     masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addDesignId\n// };\n//console.log(\"master data:\", this.props.masterData, this.props.screenName);\nvar mandatoryFields=[];if(this.props.screenName===\"IDS_DEFAULTVALUE\"){var fieldList=this.props.masterData.viewDashBoardDesignConfigList||[];fieldList.forEach(function(item){if(item.nmandatory===transactionStatus.YES){mandatoryFields.push({\"idsName\":item.sdisplayname,\"dataField\":item.sfieldname,\"mandatoryLabel\":\"IDS_PROVIDE\",\"controlType\":\"textbox\"});}});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:\"no-gutters\"},/*#__PURE__*/React.createElement(Col,{md:12},this.props.masterData[\"DashBoardTypes\"]&&/*#__PURE__*/ // (this.props.screenName === \"\" ||  this.props.screenName === \"IDS_DASHBOARDTYPES\")?\n// <CustomTabs tabDetail={this.tabDetail()} activeKey=\"IDS_DESIGNPARAMETERS\" onTabChange={this.onTabChange} />\n// :\nReact.createElement(CustomTabs,{tabDetail:this.tabDetail()//activeKey={this.props.screenName}\n,onTabChange:this.onTabChange}))),this.props.openChildModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.openChildModal,closeModal:this.closeModal,operation:this.props.operation,inputParam:this.props.inputParam,screenName:this.props.screenName,onSaveClick:this.onSaveClick,updateStore:this.props.updateStore,esign:this.props.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,ignoreFormValidation:this.props.screenName===\"IDS_DESIGNPARAMETERS\",addComponent:this.props.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.operation,formatMessage:this.props.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.screenName===\"IDS_PARAMETERMAPPING\"?/*#__PURE__*/React.createElement(ParameterMapping,{operation:this.props.operation,parentComponentList:this.props.parentComponentList||[],childComponentList:this.props.childComponentList||[],optionalParameterList:this.state.optionalParameterList||[],onInputOnChange:this.onInputOnChangeDesign,handleChange:this.onComboChange,selectedRecord:this.state.selectedRecord||{},addMappingParam:this.state.addMappingParam||this.props.masterData.DashBoardParameterMapping,mappingGridData:this.state.mappingGridData||this.props.masterData.DashBoardParameterMapping,addParametersInDataGrid:this.bindMappingParametersToDataGrid,deleteRecordWORights:this.unbindMappingParametersFromDataGrid,inputColumnList:this.mappingInputFieldList,mappingGridColumnList:this.mappingGridFieldList,controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,detailedFieldList:this.detailedGridFieldList,bindActionParameter:this.bindActionParameter}):this.props.screenName===\"IDS_DEFAULTVALUE\"?/*#__PURE__*/React.createElement(DashBoardDynamicControls,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChangeDefault,onNumericInputOnChange:this.onNumericInputOnChange,onComboChange:this.onComboChangeDefaultValue,handleDateChange:this.handleDateChange,viewDashBoardDesignConfigList:this.props.masterData.viewDashBoardDesignConfigList||[],operation:this.props.operation,userInfo:this.props.userInfo}):this.props.screenName===\"IDS_DESIGNPARAMETERS\"?/*#__PURE__*/React.createElement(AddDesign,{designName:this.props.masterData.selectedDashBoardTypes.sdashboardtypename,gridPrimaryKey:\"ndesigncomponentcode\",operation:this.props.operation//selectedReportMaster={this.props.Login.masterData.SelectedReportMaster || {}}\n,reportParameterList:this.props.sqlQueryForParams||[],designComponentList:this.props.designComponents||[],sqlQueryList:this.props.sqlQueryForExistingLinkTable||[],onInputOnChange:this.onInputOnChangeDesign,handleChange:this.handleChangeDesign,selectedRecord:this.state.selectedRecord||{}//handleChange={this.handleChangeDesign}\n,addDesignParam:this.state.addDesignParam||[],gridData:this.state.gridData||[],addParametersInDataGrid:this.addParametersInDataGrid,deleteRecordWORights:this.removeParametersInDataGrid,inputColumnList:this.extractedColumnList,gridColumnList:this.gridColumnList,controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights}):/*#__PURE__*/React.createElement(React.Fragment,null)}));}// onTabChange = (tabProps) => {\n//     const screenName = tabProps.name;\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: { screenName }\n//     }\n//     if (screenName === \"IDS_DEFAULTVALUE\") {\n//         this.props.showDefaultValueInDataGrid(\n//             this.props.masterData.selectedDashBoardTypes,\n//             this.props.userInfo,\n//             this.props.masterData)\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.masterData!==previousProps.masterData){var dataState=this.state.dataState;if(this.props.dataState===undefined){dataState={skip:0,take:10};}var isOpen=false;if(this.props.errorCode!==undefined&&(this.state.operation===\"create\"||this.state.operation===\"update\")){isOpen=true;}// const addDesignParam = [];\n// const gridData = [];\n// this.props.masterData.selectedDesignConfig &&\n//     this.props.masterData.selectedDesignConfig.forEach(item => {\n//         addDesignParam.push({\n//             ...item,\n//             ndesigncomponentcode: { label: item.sdesigncomponentname, value: item.ndesigncomponentcode },\n//             nsqlquerycode: { label: item.ssqlqueryname, value: item.nsqlquerycode }\n//         });\n//         gridData.push({\n//             ...item,\n//             ndesigncomponentcode: { label: item.sdesigncomponentname, value: item.ndesigncomponentcode },\n//             nsqlquerycode: { label: item.ssqlqueryname, value: item.nsqlquerycode }\n//         });\n//     });\n// const addMappingParam = [];\n// const mappingGridData = [];\n// this.props.masterData.DashBoardParameterMapping &&\n//     this.props.masterData.DashBoardParameterMapping.forEach(item => {\n//         addMappingParam.push({ ...item });\n//         mappingGridData.push({ ...item });\n//     });\nthis.setState({isOpen:isOpen,dataState:dataState//addDesignParam, gridData,\n//addMappingParam, mappingGridData, \n//dashBoardDefaultValue \n});}if(this.props.addDesignParam!==previousProps.addDesignParam||this.props.gridData!==previousProps.gridData){this.setState({addDesignParam:this.props.addDesignParam,gridData:this.props.gridData,addMappingParam:this.props.addMappingParam,mappingGridData:this.props.mappingGridData});}if(this.props.selectedRecord!==previousProps.selectedRecord){this.setState({selectedRecord:this.props.selectedRecord});}}}]);return DashBoardDesignConfig;}(React.Component);export default injectIntl(DashBoardDesignConfig);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dashboardtypes/DashBoardDesignConfig.jsx"],"names":["React","Row","Col","injectIntl","process","SlideOutModal","toast","Esign","DEFAULT_RETURN","CustomTabs","designComponents","transactionStatus","showEsign","formatInputDate","sortData","AddDesign","ParameterMapping","intl","DashBoardDynamicControls","DesignParameterTab","ParameterMappingTab","DefaultValueTab","DashBoardDesignConfig","props","dataStateChange","event","setState","dataResult","masterData","data","dataState","closeModal","loadEsign","openChildModal","selectedRecord","operation","updateInfo","typeName","selectedId","gridData","addDesignParam","updateStore","onTabChange","tabProps","screenName","tabDetail","tabMap","Map","set","skip","take","length","gridColumnList","controlMap","userRoleControlRights","inputParam","userInfo","getAddDashboardDesign","mappingGridFieldList","getDashBoardParameterMappingComboService","defaultValueGridFieldList","checkParametersAvailableForDefaultValue","bindActionParameter","rowItem","gridMappingParam","state","mappingGridData","target","checked","forEach","item","nchilddashboarddesigncode","nparentdashboarddesigncode","nisactionparent","YES","NO","index","findIndex","unbindMappingParametersFromDataGrid","selectedItem","addMappingParamNew","addMappingParam","filter","value","mappingGridDataNew","bindMappingParametersToDataGrid","undefined","copySelected","sfieldname","push","sparentparametername","label","schildparametername","nactionparameter","warn","formatMessage","id","info","removeParametersInDataGrid","addDesignParamNew","gridDataNew","addParametersInDataGrid","validData","trim","COMBOBOX","DATEPICKER","check","sdisplayname","sdesigncomponentname","ndesigncomponentcode","ndays","handleChangeDesign","valueParam","onInputOnChangeDesign","type","name","onComboChange","comboData","fieldName","sqlquery","ssqlquery","firstIndex","indexOf","lastIndex","lastIndexOf","param","first","endFirst","second","endSecond","parameter","substring","optionalParameterList","onNumericInputOnChange","inputData","dashboarddesignconfig","inputfielddata","inputFieldData","concat","parentcode","toString","parentid","ndashboarddesigncode","userinfo","ndashboardtypecode","selectedDashBoardTypes","viewDashBoardDesignConfigList","getReportViewChildDataListForDashBoard","onInputOnChange","Login","handleDateChange","dateName","dateValue","onInputOnChangeDefault","onComboChangeDefaultValue","onSaveClick","saveType","formRef","onSaveParameterMapping","onSaveClickDefaultValue","onSaveClickAddDesign","classUrl","methodUrl","displayName","nformcode","ncontrolCode","screenData","crudMaster","sqlQueryForParams","map","nsqlquerycode","nmandatory","Mandatory","updateDashBoarddesignDefaultValue","isOpen","extractedColumnList","mappingInputFieldList","detailedGridFieldList","mandatoryFields","fieldList","validateEsign","parentComponentList","childComponentList","DashBoardParameterMapping","sdashboardtypename","sqlQueryForExistingLinkTable","previousProps","errorCode","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col} from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { toast } from 'react-toastify';\r\nimport Esign from '../audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport { designComponents, transactionStatus } from '../../components/Enumeration';\r\nimport { showEsign, formatInputDate, sortData} from '../../components/CommonScript';\r\nimport AddDesign from '../../components/add-design/add-design.component';\r\nimport ParameterMapping from '../../components/add-design/parameter-mapping.component';\r\nimport { intl } from '../../components/App';\r\nimport DashBoardDynamicControls from './DashBoardDynamicControls';\r\nimport DesignParameterTab from './DesignParameterTab';\r\nimport ParameterMappingTab from './ParameterMappingTab';\r\nimport DefaultValueTab from './DefaultValueTab';\r\n\r\n//import AddDesign from '../dashboardtypes/AddDesign';\r\n\r\nclass DashBoardDesignConfig extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10,\r\n        };\r\n        this.state = {\r\n            isOpen: false, selectedRecord: {}, dataResult: [],\r\n            dataState: dataState, addDesignParam: [], gridData: [],\r\n            addMappingParam: [], mappingGridData: []\r\n        };\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_DASHBOARDNAME\", \"dataField\": \"sdashboardtypename\", \"width\": \"200px\" },\r\n            {\r\n                \"idsName\": \"IDS_INPUTTYPE\", \"dataField\": \"ndesigncomponentcode\", \"width\": \"200px\", \"listName\": \"designComponentList\",\r\n                \"optionId\": \"ndesigncomponentcode\", \"optionValue\": \"sdesigncomponentname\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_PARAMETERS\", \"dataField\": \"sfieldname\", \"width\": \"300px\", \"listName\": \"reportParameterList\",\r\n                \"optionId\": \"sqlQueryParams\", \"optionValue\": \"sqlQueryParams\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_EXISTINGLINKTABLE\", \"dataField\": \"nsqlquerycode\", \"width\": \"200px\", \"listName\": \"sqlQueryList\",\r\n                \"optionId\": \"nsqlquerycode\", \"optionValue\": \"ssqlqueryname\"\r\n            },\r\n            { \"idsName\": \"IDS_DISPLAYNAME\", \"dataField\": \"sdisplayname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_DAYS\", \"dataField\": \"ndays\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_MANDATORY\", \"dataField\": \"nmandatory\" }\r\n        ];\r\n        this.gridColumnList = [\r\n            { \"idsName\": \"IDS_PARAMETERS\", \"dataField\": \"sfieldname\", \"width\": \"250px\" },\r\n            { \"idsName\": \"IDS_DISPLAYNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" },\r\n            { \"idsName\": \"IDS_INPUTTYPE\", \"dataField\": \"sdesigncomponentname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_DAYS\", \"dataField\": \"ndays\", \"width\": \"150px\" },\r\n        ];\r\n\r\n        this.mappingInputFieldList = [\r\n            {\r\n                \"idsName\": \"IDS_PARAMETER\", \"dataField\": \"nchilddashboarddesigncode\", \"listName\": \"childComponentList\",\r\n                \"optionId\": \"ndashboarddesigncode\", \"optionValue\": \"sdisplayname\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_FIELDNAME\", \"dataField\": \"sfieldname\", \"listName\": \"optionalParameterList\",\r\n                \"optionId\": \"value\", \"optionValue\": \"label\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_PARENTPARAMETER\", \"dataField\": \"nparentdashboarddesigncode\", \"listName\": \"parentComponentList\",\r\n                \"optionId\": \"ndashboarddesigncode\", \"optionValue\": \"sdisplayname\"\r\n            },\r\n\r\n\r\n        ];\r\n        this.mappingGridFieldList = [\r\n            { \"idsName\": \"IDS_PARAMETERS\", \"dataField\": \"schildparametername\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_FIELDNAME\", \"dataField\": \"sfieldname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_PARENTPARAMETER\", \"dataField\": \"sparentparametername\", \"width\": \"300px\" },\r\n            { \"idsName\": \"IDS_ACTIONPARAMETER\", \"dataField\": \"sisactionparent\", \"width\": \"200px\" }\r\n        ];\r\n        this.defaultValueGridFieldList = [\r\n            { \"idsName\": \"IDS_DISPLAYNAME\", \"dataField\": \"sdisplayname\", \"width\": \"300px\" },\r\n            { \"idsName\": \"IDS_DEFAULTVALUE\", \"dataField\": \"sdisplaymember\", \"width\": \"300px\" }\r\n        ];\r\n        this.detailedGridFieldList = [\r\n            { \"idsName\": \"IDS_FIELDNAME\", \"dataField\": \"sfieldname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_PARENTPARAMETER\", \"dataField\": \"sparentparametername\", \"width\": \"200px\" },\r\n            {\r\n                \"idsName\": \"IDS_ACTIONPARAMETER\", \"dataField\": \"nisactionparent\", \"width\": \"200px\",\r\n                \"componentName\": \"switch\", \"switchFieldName\": \"nisactionparent\",\r\n                \"switchStatus\": transactionStatus.YES, \"needRights\": false, //\"controlName\": \"DefaultTestSection\"\r\n            },\r\n\r\n        ];\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.masterData[\"selectedDesignConfig\"], event.data),\r\n            dataState: event.data\r\n        });\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.loadEsign;\r\n        let openChildModal = this.props.openChildModal;\r\n        let selectedRecord = this.props.selectedRecord;\r\n        if (this.props.loadEsign) {\r\n            if (this.props.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openChildModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openChildModal, loadEsign, selectedRecord, selectedId: null, gridData: {}, addDesignParam: {} }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    render() {\r\n        // const addDesignId = this.props.controlMap.has(\"AddDashBoardDesignConfig\") && this.props.controlMap.get(\"AddDashBoardDesignConfig\").ncontrolcode\r\n        // const parameterMapId = this.props.controlMap.has(\"AddDashBoardParameterMapping\") && this.props.controlMap.get(\"AddDashBoardParameterMapping\").ncontrolcode;\r\n        // const addDesignParam = {\r\n        //     screenName: \"Add Design\", operation: \"create\", primaryKeyField: \"ndashboarddesigncode\",\r\n        //     masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addDesignId\r\n        // };\r\n        //console.log(\"master data:\", this.props.masterData, this.props.screenName);\r\n        const mandatoryFields = [];\r\n\r\n        if (this.props.screenName === \"IDS_DEFAULTVALUE\") {\r\n            const fieldList = this.props.masterData.viewDashBoardDesignConfigList || [];\r\n            fieldList.forEach(item => {\r\n                if (item.nmandatory === transactionStatus.YES) {\r\n                    mandatoryFields.push({ \"idsName\": item.sdisplayname, \"dataField\": item.sfieldname , \"mandatoryLabel\":\"IDS_PROVIDE\", \"controlType\": \"textbox\" })\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                <Row className=\"no-gutters\">\r\n                    <Col md={12}>\r\n                        {/* <Card>\r\n                            <Card.Header className=\"add-txt-btn\">\r\n                                <strong> <FormattedMessage id=\"IDS_ADDDESIGN\" defaultMessage=\"Add Design\" /></strong>\r\n                            </Card.Header>\r\n                            <Card.Body>                               \r\n                                <Row className=\"no-gutters\">\r\n                                    <Col md={12}> */}\r\n                                        {this.props.masterData[\"DashBoardTypes\"] &&\r\n\r\n                                            // (this.props.screenName === \"\" ||  this.props.screenName === \"IDS_DASHBOARDTYPES\")?\r\n                                            // <CustomTabs tabDetail={this.tabDetail()} activeKey=\"IDS_DESIGNPARAMETERS\" onTabChange={this.onTabChange} />\r\n                                            // :\r\n                                            <CustomTabs tabDetail={this.tabDetail()} //activeKey={this.props.screenName}\r\n                                                 onTabChange={this.onTabChange} />\r\n\r\n                                        }\r\n                                    {/* </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card> */}\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    this.props.openChildModal &&\r\n                    <SlideOutModal show={this.props.openChildModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.operation}\r\n                        inputParam={this.props.inputParam}\r\n                        screenName={this.props.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        updateStore={this.props.updateStore}\r\n                        esign={this.props.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        ignoreFormValidation={this.props.screenName === \"IDS_DESIGNPARAMETERS\"}\r\n                        addComponent={this.props.loadEsign ?\r\n                            <Esign operation={this.props.operation}\r\n                                formatMessage={this.props.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.props.screenName === \"IDS_PARAMETERMAPPING\" ?\r\n                                <ParameterMapping\r\n                                    operation={this.props.operation}\r\n                                    parentComponentList={this.props.parentComponentList || []}\r\n                                    childComponentList={this.props.childComponentList || []}\r\n                                    optionalParameterList={this.state.optionalParameterList || []}\r\n                                    onInputOnChange={this.onInputOnChangeDesign}\r\n                                    handleChange={this.onComboChange}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    addMappingParam={this.state.addMappingParam || this.props.masterData.DashBoardParameterMapping}\r\n                                    mappingGridData={this.state.mappingGridData || this.props.masterData.DashBoardParameterMapping}\r\n                                    addParametersInDataGrid={this.bindMappingParametersToDataGrid}\r\n                                    deleteRecordWORights={this.unbindMappingParametersFromDataGrid}\r\n                                    inputColumnList={this.mappingInputFieldList}\r\n                                    mappingGridColumnList={this.mappingGridFieldList}\r\n                                    controlMap={this.props.controlMap}\r\n                                    userRoleControlRights={this.props.userRoleControlRights}\r\n                                    detailedFieldList={this.detailedGridFieldList}\r\n                                    bindActionParameter={this.bindActionParameter}\r\n                                />\r\n                                : this.props.screenName === \"IDS_DEFAULTVALUE\" ?\r\n\r\n                                    <DashBoardDynamicControls\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChangeDefault}\r\n                                        onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                        onComboChange={this.onComboChangeDefaultValue}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        viewDashBoardDesignConfigList={this.props.masterData.viewDashBoardDesignConfigList || []}\r\n                                        operation={this.props.operation}\r\n                                        userInfo={this.props.userInfo}\r\n                                    />\r\n                                    : this.props.screenName === \"IDS_DESIGNPARAMETERS\" ?\r\n                                        <AddDesign\r\n                                            designName={this.props.masterData.selectedDashBoardTypes.sdashboardtypename}\r\n                                            gridPrimaryKey={\"ndesigncomponentcode\"}\r\n                                            operation={this.props.operation}\r\n                                            //selectedReportMaster={this.props.Login.masterData.SelectedReportMaster || {}}\r\n                                            reportParameterList={this.props.sqlQueryForParams || []}\r\n                                            designComponentList={this.props.designComponents || []}\r\n                                            sqlQueryList={this.props.sqlQueryForExistingLinkTable || []}\r\n                                            onInputOnChange={this.onInputOnChangeDesign}\r\n                                            handleChange={this.handleChangeDesign}\r\n                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                            //handleChange={this.handleChangeDesign}\r\n                                            addDesignParam={this.state.addDesignParam || []}\r\n                                            gridData={this.state.gridData || []}\r\n                                            addParametersInDataGrid={this.addParametersInDataGrid}\r\n                                            deleteRecordWORights={this.removeParametersInDataGrid}\r\n                                            inputColumnList={this.extractedColumnList}\r\n                                            gridColumnList={this.gridColumnList}\r\n                                            controlMap={this.props.controlMap}\r\n                                            userRoleControlRights={this.props.userRoleControlRights}\r\n                                        />\r\n                                        :\r\n                                        <></>\r\n                        }\r\n\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n    // onTabChange = (tabProps) => {\r\n    //     const screenName = tabProps.name;\r\n    //     const updateInfo = {\r\n    //         typeName: DEFAULT_RETURN,\r\n    //         data: { screenName }\r\n    //     }\r\n    //     if (screenName === \"IDS_DEFAULTVALUE\") {\r\n    //         this.props.showDefaultValueInDataGrid(\r\n    //             this.props.masterData.selectedDashBoardTypes,\r\n    //             this.props.userInfo,\r\n    //             this.props.masterData)\r\n    //     }\r\n    //     this.props.updateStore(updateInfo);\r\n    // }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n\r\n        tabMap.set(\"IDS_DESIGNPARAMETERS\",        \r\n            <DesignParameterTab \r\n                masterData={this.props.masterData}  \r\n                dataResult={sortData(this.props.masterData[\"selectedDesignConfig\"] || [],\"ascending\", \"ndashboarddesigncode\")}           \r\n                dataState={{skip:0, take: this.props.masterData[\"selectedDesignConfig\"] \r\n                            ? this.props.masterData[\"selectedDesignConfig\"].length:10}}           \r\n                 \r\n               // dataState={this.state.dataState}\r\n                //dataStateChange={this.dataStateChange}\r\n                extractedColumnList={this.gridColumnList}\r\n                controlMap={this.props.controlMap}\r\n                userRoleControlRights={this.props.userRoleControlRights}\r\n                inputParam={this.props.inputParam}\r\n                userInfo={this.props.userInfo}               \r\n                //selectedId={this.props.selectedId}\r\n                getAddDashboardDesign={this.props.getAddDashboardDesign}\r\n                name=\"IDS_DESIGNPARAMETERS\"\r\n               \r\n            />)\r\n\r\n        tabMap.set(\"IDS_PARAMETERMAPPING\",\r\n            <ParameterMappingTab \r\n               masterData={this.props.masterData}                \r\n                dataResult={this.props.masterData[\"DashBoardParameterMapping\"] || []}\r\n                dataState={{skip:0, take: this.props.masterData[\"DashBoardParameterMapping\"] \r\n                                ? this.props.masterData[\"DashBoardParameterMapping\"].length:0}}      \r\n                // dataState={this.state.dataState}\r\n                // dataStateChange={this.dataStateChange}\r\n                extractedColumnList={this.mappingGridFieldList}\r\n                controlMap={this.props.controlMap}\r\n                userRoleControlRights={this.props.userRoleControlRights}\r\n                inputParam={this.props.inputParam}\r\n                userInfo={this.props.userInfo}               \r\n               // selectedId={this.props.selectedId} \r\n                getDashBoardParameterMappingComboService={this.props.getDashBoardParameterMappingComboService}               \r\n                name=\"IDS_PARAMETERMAPPING\"              \r\n            />);\r\n        tabMap.set(\"IDS_DEFAULTVALUE\",\r\n            <DefaultValueTab \r\n                masterData={this.props.masterData}   \r\n                // dataResult={this.state[\"dashBoardDefaultValue\"] || []}\r\n                // dataState={{skip:0, take: this.state[\"dashBoardDefaultValue\"] \r\n                //     ? this.state[\"dashBoardDefaultValue\"].length:0}}     \r\n               dataResult={sortData(this.props.masterData[\"DashboardDesignDefaultList\"] || [], \"ascending\", \"ndashboarddesigncode\")}\r\n               dataState={{skip:0, take: this.props.masterData[\"DashboardDesignDefaultList\"] \r\n                               ? this.props.masterData[\"DashboardDesignDefaultList\"].length:0}}      \r\n               // dataState={this.state.dataState}\r\n                extractedColumnList={this.defaultValueGridFieldList}\r\n                controlMap={this.props.controlMap}\r\n                userRoleControlRights={this.props.userRoleControlRights}\r\n                inputParam={this.props.inputParam}\r\n                userInfo={this.props.userInfo}               \r\n              //  selectedId={this.props.selectedId}  \r\n                checkParametersAvailableForDefaultValue= {this.props.checkParametersAvailableForDefaultValue}             \r\n                name=\"IDS_DEFAULTVALUE\"\r\n               \r\n            />);\r\n        return tabMap;\r\n    }\r\n\r\n    bindActionParameter = (rowItem, event) => {\r\n\r\n        const gridMappingParam = this.state.mappingGridData;\r\n        if (event.target.checked) {\r\n            gridMappingParam.forEach(item => {\r\n                if (item.nchilddashboarddesigncode === rowItem.selectedRecord.nchilddashboarddesigncode) {\r\n                    if (item.nparentdashboarddesigncode === rowItem.selectedRecord.nparentdashboarddesigncode) {\r\n                        return item.nisactionparent = transactionStatus.YES;\r\n                    }\r\n                    else {\r\n                        return item.nisactionparent = transactionStatus.NO;\r\n                    }\r\n                }\r\n            })\r\n\r\n        }\r\n        else {\r\n            const index = gridMappingParam.findIndex(item => item.nchilddashboarddesigncode === rowItem.selectedRecord.nchilddashboarddesigncode\r\n                && item.nparentdashboarddesigncode === rowItem.selectedRecord.nparentdashboarddesigncode);\r\n            gridMappingParam[index][\"nisactionparent\"] = transactionStatus.NO\r\n        }\r\n\r\n\r\n        this.setState({ mappingGridData: gridMappingParam });\r\n    }\r\n\r\n    unbindMappingParametersFromDataGrid = (selectedItem) => {\r\n\r\n        const addMappingParamNew = this.state.addMappingParam.filter(item => {\r\n            if (typeof item.nchilddashboarddesigncode === \"number\") {\r\n                if (item.nchilddashboarddesigncode === selectedItem.nchilddashboarddesigncode) {\r\n                    return (item.nparentdashboarddesigncode !== selectedItem.nparentdashboarddesigncode)\r\n                }\r\n                else\r\n                    return item;\r\n            }\r\n            else {\r\n                if (item.nchilddashboarddesigncode.value === selectedItem.nchilddashboarddesigncode) {\r\n                    return (item.nparentdashboarddesigncode.value !== selectedItem.nparentdashboarddesigncode)\r\n                }\r\n                else\r\n                    return item;\r\n            }\r\n        });\r\n        const mappingGridDataNew = this.state.mappingGridData.filter(item => {\r\n            if (typeof item.nchilddashboarddesigncode === \"number\") {\r\n                if (item.nchilddashboarddesigncode === selectedItem.nchilddashboarddesigncode) {\r\n                    return (item.nparentdashboarddesigncode !== selectedItem.nparentdashboarddesigncode)\r\n                }\r\n                else\r\n                    return item;\r\n            }\r\n            else {\r\n                if (item.nchilddashboarddesigncode.value === selectedItem.nchilddashboarddesigncode) {\r\n                    return (item.nparentdashboarddesigncode.value !== selectedItem.nparentdashboarddesigncode)\r\n                }\r\n                else\r\n                    return item;\r\n            }\r\n        });\r\n\r\n        this.setState({ addMappingParam: addMappingParamNew, mappingGridData: mappingGridDataNew });\r\n\r\n    }\r\n\r\n    bindMappingParametersToDataGrid = (selectedRecord) => {\r\n\r\n        if (selectedRecord[\"sfieldname\"] && selectedRecord[\"nparentdashboarddesigncode\"]\r\n            && selectedRecord[\"nchilddashboarddesigncode\"]) {\r\n            if (selectedRecord && selectedRecord.nparentdashboarddesigncode !== undefined) {\r\n                let copySelected = { ...selectedRecord };\r\n\r\n                const addMappingParam = this.state.addMappingParam;\r\n                const index = addMappingParam.findIndex(item =>\r\n                    item.nparentdashboarddesigncode === copySelected.nparentdashboarddesigncode.value\r\n                    && item.nchilddashboarddesigncode === copySelected.nchilddashboarddesigncode.value\r\n                    && item.sfieldname === copySelected.sfieldname.value);\r\n                if (index === -1) {\r\n                    addMappingParam.push(copySelected);\r\n                    const mappingGridData = this.state.mappingGridData;;\r\n                    mappingGridData.push({\r\n                        nparentdashboarddesigncode: copySelected.nparentdashboarddesigncode.value,\r\n                        nchilddashboarddesigncode: copySelected.nchilddashboarddesigncode.value,\r\n                        sparentparametername: copySelected.nparentdashboarddesigncode.label,\r\n                        schildparametername: copySelected.nchilddashboarddesigncode.label,\r\n                        sfieldname: copySelected.sfieldname.value,\r\n                        nactionparameter: transactionStatus.NO\r\n                    })\r\n\r\n                    this.setState({\r\n                        addMappingParam,\r\n                        //actionGridData,\r\n                        selectedRecord: {\r\n                            // nactionreportdesigncode:{label:\"\", value:-1},\r\n                            nparentdashboarddesigncode: { label: \"\", value: -1 },\r\n                            sfieldname: { label: \"\", value: -1 },\r\n                            nchilddashboarddesigncode: { label: \"\", value: -1 }\r\n                        },\r\n                        mappingGridData\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_DUPLICATEMAPPING\" }));\r\n                    this.setState({\r\n                        selectedRecord: {\r\n                            nparentdashboarddesigncode: { label: \"\", value: -1 },\r\n                            sfieldname: { label: \"\", value: -1 },\r\n                            nchilddashboarddesigncode: { label: \"\", value: -1 }\r\n                        },\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //toast.warn(this.props.intl.formatMessage({id:\"IDS_FILLMANDATORY\"}));\r\n\r\n            if (selectedRecord[\"nchilddashboarddesigncode\"] === undefined\r\n                || selectedRecord[\"nchilddashboarddesigncode\"].length === 0) {\r\n                toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${this.props.intl.formatMessage({ id: \"IDS_PARAMETER\" })}`);\r\n            }\r\n            else if (selectedRecord[\"sfieldname\"] === undefined\r\n                || selectedRecord[\"sfieldname\"].length === 0) {\r\n                toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${this.props.intl.formatMessage({ id: \"IDS_FIELDNAME\" })}`);\r\n            }\r\n            else if (selectedRecord[\"nparentdashboarddesigncode\"] === undefined\r\n                || selectedRecord[\"nparentdashboarddesigncode\"].length === 0) {\r\n                toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${this.props.intl.formatMessage({ id: \"IDS_PARENTPARAMETER\" })}`);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    removeParametersInDataGrid = (selectedItem) => {\r\n        const addDesignParamNew = this.state.addDesignParam.filter\r\n            (item => item.sfieldname !== selectedItem.sfieldname);\r\n\r\n        const gridDataNew = this.state.gridData.filter\r\n            (item => item.sfieldname !== selectedItem.sfieldname);\r\n\r\n        this.setState({ addDesignParam: addDesignParamNew, gridData: gridDataNew });\r\n\r\n    }\r\n\r\n    addParametersInDataGrid = (selectedRecord) => {\r\n\r\n        // if (this.state.addDesignParam.length === this.props.sqlQueryForParams.length)\r\n        // {   \r\n        //     toast.warn(\"You cannot add more than Dashboard Parameters count\");\r\n        // }\r\n        // if  {\r\n        let validData = false;\r\n        if (selectedRecord[\"sdisplayname\"] && selectedRecord[\"sdisplayname\"].trim().length !== 0\r\n            && selectedRecord[\"sfieldname\"] && selectedRecord[\"ndesigncomponentcode\"]) {\r\n            validData = true;\r\n            if (selectedRecord[\"ndesigncomponentcode\"].value === designComponents.COMBOBOX) {\r\n                if (selectedRecord[\"nsqlquerycode\"] && selectedRecord[\"nsqlquerycode\"].length !== 0) {\r\n                    validData = true;\r\n                }\r\n                else {\r\n                    validData = false;\r\n                }\r\n            }\r\n            if (selectedRecord[\"ndesigncomponentcode\"].value === designComponents.DATEPICKER) {\r\n                if (selectedRecord[\"ndays\"] && selectedRecord[\"ndays\"].length !== 0) {\r\n                    validData = true;\r\n                } else {\r\n                    validData = false;\r\n                }\r\n            }\r\n        }\r\n        if (validData) {\r\n            if (selectedRecord && selectedRecord.sfieldname !== undefined) {\r\n\r\n                const check = this.state.gridData.filter\r\n                    (item => item.sfieldname === selectedRecord.sfieldname.label);\r\n\r\n                if (check && check.length > 0) {\r\n\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_PARAMETERALREADYEXIST\" }));\r\n                    return;\r\n                }\r\n\r\n                let copySelected = { ...selectedRecord };\r\n                let addDesignParam = this.state.addDesignParam || [];\r\n\r\n                addDesignParam.push(copySelected);\r\n                const gridData = this.state.gridData;;\r\n                gridData.push({\r\n                    sfieldname: copySelected.sfieldname.label, sdisplayname: copySelected.sdisplayname,\r\n                    sdesigncomponentname: copySelected.ndesigncomponentcode.label,\r\n                    ndesigncomponentcode: copySelected.ndesigncomponentcode.value,\r\n                    ndays : selectedRecord[\"ndesigncomponentcode\"].value === designComponents.DATEPICKER ? copySelected.ndays :0\r\n                });\r\n\r\n                this.setState({\r\n                    addDesignParam,\r\n                    selectedRecord: {\r\n                        ndays: \"\",\r\n                       // nsqlquerycode: { label: \"\", value: -1 },\r\n                      //  sfieldname: { label: \"\", value: \"\" },\r\n                        sdisplayname: \"\",\r\n                      //  ndesigncomponentcode: { label: \"\", value: -1 }\r\n                    },\r\n                    gridData: gridData\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (selectedRecord[\"sfieldname\"] === undefined ||\r\n                selectedRecord[\"sfieldname\"].label === \"\") {\r\n                toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${this.props.intl.formatMessage({ id: \"IDS_PARAMETERS\" })}`);\r\n            }\r\n            else if (selectedRecord[\"sdisplayname\"] === undefined\r\n                || selectedRecord[\"sdisplayname\"] === \"\") {\r\n                toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${this.props.intl.formatMessage({ id: \"IDS_DISPLAYNAME\" })}`);\r\n            }\r\n            else if (selectedRecord[\"ndesigncomponentcode\"] === undefined\r\n                || selectedRecord[\"ndesigncomponentcode\"].value === 0) {\r\n                toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${this.props.intl.formatMessage({ id: \"IDS_INPUTTYPE\" })}`);\r\n            }\r\n            else {\r\n                if (selectedRecord[\"ndesigncomponentcode\"].value === designComponents.COMBOBOX) {\r\n                    if (selectedRecord[\"nsqlquerycode\"] === undefined || selectedRecord[\"nsqlquerycode\"].length === 0) {\r\n                        toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${this.props.intl.formatMessage({ id: \"IDS_EXISTINGLINKTABLE\" })}`);\r\n                    }\r\n                }\r\n                else if (selectedRecord[\"ndesigncomponentcode\"].value === designComponents.DATEPICKER) {\r\n                    if (selectedRecord[\"ndays\"] === undefined || selectedRecord[\"ndays\"].length === 0) {\r\n                        toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${this.props.intl.formatMessage({ id: \"IDS_DAYS\" })}`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // }\r\n\r\n    }\r\n\r\n    handleChangeDesign = (value, valueParam) => {\r\n\r\n        if (value !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n\r\n            selectedRecord[valueParam] = value;\r\n\r\n            this.setState({ selectedRecord });\r\n\r\n        }\r\n    }\r\n\r\n    onInputOnChangeDesign = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (fieldName === \"nchilddashboarddesigncode\") {\r\n            selectedRecord[fieldName] = comboData;\r\n\r\n            const sqlquery = comboData.item.ssqlquery;\r\n            let firstIndex = sqlquery.indexOf(\"P$\");\r\n            const lastIndex = sqlquery.lastIndexOf(\"P$\");\r\n\r\n            const param = [];\r\n            let first = sqlquery.indexOf(\"P$\");\r\n            let endFirst = sqlquery.indexOf(\"$P\");\r\n            do {\r\n\r\n                let second = sqlquery.indexOf(\"P$\", first + 1);\r\n                let endSecond = sqlquery.indexOf(\"$P\", endFirst + 1);\r\n                const parameter = sqlquery.substring(first + 2, endFirst);\r\n                param.push({ label: parameter, value: parameter });\r\n\r\n                first = second;\r\n                endFirst = endSecond;\r\n                firstIndex = second;\r\n            }\r\n            while (firstIndex === lastIndex)\r\n\r\n            this.setState({ selectedRecord, optionalParameterList: param });\r\n        }\r\n        else {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name, item) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n\r\n        const inputData = {\r\n            dashboarddesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.props.inputFieldData,\r\n                [name]: value,\r\n                [name.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [name.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: value.toString(),\r\n            parentid: item.ndashboarddesigncode,\r\n            userinfo: this.props.userInfo,\r\n            ndashboardtypecode: this.props.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewDashBoardDesignConfigList: this.props.masterData.viewDashBoardDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    }\r\n\r\n    onInputOnChange = (event, item) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        const inputData = {\r\n            dashboarddesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.props.Login.inputFieldData,\r\n                [event.target.name]: selectedRecord[event.target.name],\r\n                [event.target.name.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [event.target.name.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: selectedRecord[event.target.name].toString(),\r\n            parentid: item.ndashboarddesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndashboardtypecode: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewDashBoardDesignConfigList: this.props.Login.masterData.viewDashBoardDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue, item) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n\r\n        const inputData = {\r\n            dashboarddesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.props.inputFieldData,\r\n                [dateName]: formatInputDate(dateValue, true),\r\n                [dateName.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [dateName.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: formatInputDate(dateValue, true),\r\n            parentid: item.ndashboarddesigncode,\r\n            userinfo: this.props.userInfo,\r\n            ndashboardtypecode: this.props.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewDashBoardDesignConfigList: this.props.masterData.viewDashBoardDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    }\r\n\r\n    onInputOnChangeDefault = (event, item) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        const inputData = {\r\n            dashboarddesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.props.inputFieldData,\r\n                [event.target.name]: selectedRecord[event.target.name],\r\n                [event.target.name.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [event.target.name.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: selectedRecord[event.target.name].toString(),\r\n            parentid: item.ndashboarddesigncode,\r\n            userinfo: this.props.userInfo,\r\n            ndashboardtypecode: this.props.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewDashBoardDesignConfigList: this.props.masterData.viewDashBoardDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    }\r\n\r\n    onComboChangeDefaultValue = (comboData, fieldName, item) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if(comboData !== null)\r\n        {\r\n\r\n            selectedRecord[fieldName] = comboData;\r\n    \r\n            const inputData = {\r\n                dashboarddesignconfig: item,\r\n                inputfielddata: {\r\n                    ...this.props.inputFieldData,\r\n                    [fieldName]: comboData.value,\r\n                    [fieldName.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                    [fieldName.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n    \r\n                },\r\n                parentcode: comboData.value.toString(),\r\n                parentid: item.ndashboarddesigncode,\r\n                userinfo: this.props.userInfo,\r\n                ndashboardtypecode: this.props.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n    \r\n            }\r\n            const inputParam = {\r\n                viewDashBoardDesignConfigList: this.props.masterData.viewDashBoardDesignConfigList,\r\n                selectedRecord,\r\n                inputData\r\n            }\r\n    \r\n            this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n        }\r\n        else\r\n        {\r\n            selectedRecord[fieldName] = \"\";\r\n            this.setState({selectedRecord});\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.masterData !== previousProps.masterData) {\r\n            let { dataState } = this.state;\r\n            if (this.props.dataState === undefined) {\r\n                dataState = { skip: 0, take: 10 }\r\n            }\r\n\r\n            let isOpen = false;\r\n            if (this.props.errorCode !== undefined && (this.state.operation === \"create\" || this.state.operation === \"update\")) {\r\n                isOpen = true;\r\n            }\r\n\r\n            // const addDesignParam = [];\r\n            // const gridData = [];\r\n\r\n            // this.props.masterData.selectedDesignConfig &&\r\n            //     this.props.masterData.selectedDesignConfig.forEach(item => {\r\n            //         addDesignParam.push({\r\n            //             ...item,\r\n            //             ndesigncomponentcode: { label: item.sdesigncomponentname, value: item.ndesigncomponentcode },\r\n            //             nsqlquerycode: { label: item.ssqlqueryname, value: item.nsqlquerycode }\r\n            //         });\r\n            //         gridData.push({\r\n            //             ...item,\r\n            //             ndesigncomponentcode: { label: item.sdesigncomponentname, value: item.ndesigncomponentcode },\r\n            //             nsqlquerycode: { label: item.ssqlqueryname, value: item.nsqlquerycode }\r\n            //         });\r\n            //     });\r\n\r\n            // const addMappingParam = [];\r\n            // const mappingGridData = [];\r\n\r\n            // this.props.masterData.DashBoardParameterMapping &&\r\n            //     this.props.masterData.DashBoardParameterMapping.forEach(item => {\r\n            //         addMappingParam.push({ ...item });\r\n            //         mappingGridData.push({ ...item });\r\n            //     });\r\n            this.setState({isOpen, dataState, \r\n                            //addDesignParam, gridData,\r\n                            //addMappingParam, mappingGridData, \r\n                            //dashBoardDefaultValue \r\n                        });\r\n        }\r\n        if ( this.props.addDesignParam !== previousProps.addDesignParam || this.props.gridData !== previousProps.gridData){\r\n            this.setState({\r\n                addDesignParam :this.props.addDesignParam, gridData:this.props.gridData,\r\n                addMappingParam:this.props.addMappingParam, mappingGridData:this.props.mappingGridData\r\n            });\r\n        }\r\n        if (this.props.selectedRecord !== previousProps.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.screenName === \"IDS_PARAMETERMAPPING\") {\r\n            this.onSaveParameterMapping(saveType, formRef);\r\n        }\r\n        else if (this.props.screenName === \"IDS_DEFAULTVALUE\") {\r\n            this.onSaveClickDefaultValue(saveType, formRef);           \r\n        }\r\n        else {\r\n            if (this.state.addDesignParam && this.state.addDesignParam.length === 0) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEADDPARAMETER\" }));\r\n            }\r\n            else {\r\n                this.onSaveClickAddDesign(saveType, formRef);\r\n            }\r\n        }\r\n    }\r\n\r\n    onSaveParameterMapping = (saveType, formRef) => {\r\n\r\n        let operation = this.props.operation;\r\n        let inputData = [];\r\n        let selectedId = null;\r\n\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        inputData[\"dashboardparametermapping\"] = [];\r\n        //inputData[\"reportparameteraction\"] = [];\r\n\r\n        this.state.mappingGridData.forEach(item => {\r\n            inputData[\"dashboardparametermapping\"].push({\r\n                \"ndashboardtypecode\": this.props.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n                \"nparentdashboarddesigncode\": item.nparentdashboarddesigncode,\r\n                \"nchilddashboarddesigncode\": item.nchilddashboarddesigncode,\r\n                \"sfieldname\": item.sfieldname,\r\n                \"nisactionparent\": item.nisactionparent\r\n            });\r\n        })\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.inputParam.classUrl,\r\n            methodUrl: \"DashBoardParameterMapping\",\r\n            displayName: this.props.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef, dataState: undefined, selectedId\r\n        }\r\n        if (showEsign(this.props.userRoleControlRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.masterData }, saveType\r\n                    //openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    ///operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\r\n        }\r\n    }\r\n\r\n    onSaveClickAddDesign = (saveType, formRef) => {\r\n\r\n        let dataState = undefined;\r\n        let operation = this.props.operation;\r\n        let inputData = [];\r\n        let selectedId = null;\r\n        let data = [];\r\n\r\n        if(this.state.addDesignParam.length === this.props.sqlQueryForParams.length)\r\n        {\r\n            inputData[\"userinfo\"] = this.props.userInfo;\r\n            this.state.addDesignParam.map(item => {\r\n                data.push({\r\n                    \"ndashboardtypecode\": this.props.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n                    \"ndesigncomponentcode\": item.ndesigncomponentcode && item.ndesigncomponentcode.value ? item.ndesigncomponentcode.value : item.ndesigncomponentcode,\r\n                    \"sfieldname\": item.sfieldname.label && item.sfieldname.label ? item.sfieldname.label : item.sfieldname,\r\n                    \"nsqlquerycode\": item.nsqlquerycode && item.nsqlquerycode.value ? item.nsqlquerycode.value : -1,\r\n                    \"sdisplayname\": item.sdisplayname,\r\n                    \"ndays\": item.ndays ? item.ndays : 0,\r\n                    \"nmandatory\": item.nmandatory && item.nmandatory ? item.nmandatory : item.sfieldname.item.Mandatory\r\n                });\r\n                return null;\r\n            })\r\n            inputData[\"dashboarddesignconfig\"] = data;\r\n            inputData[\"ndashboardtypecode\"] = this.props.masterData.selectedDashBoardTypes.ndashboardtypecode;\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.inputParam.classUrl,\r\n                methodUrl: \"DashBoardDesignConfig\",\r\n                displayName: this.props.inputParam.displayName,\r\n                inputData: inputData,\r\n                operation: operation, saveType, formRef, dataState, selectedId\r\n            }\r\n            if (showEsign(this.props.userRoleControlRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.masterData },\r\n                        openChildModal: true, screenName: this.props.intl.formatMessage({ id: this.props.inputParam.displayName }),\r\n                        operation: this.props.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\r\n            }  \r\n        }\r\n        else\r\n        {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CONFIGUREALLPARAMETERS\" }))\r\n        }\r\n    }\r\n    \r\n    onSaveClickDefaultValue = () => {\r\n\r\n        // let dataState = undefined;\r\n        // let operation = this.props.operation;\r\n        let inputData = [];\r\n        // let selectedId = null;\r\n        let data = [];\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n\r\n        this.props.masterData.viewDashBoardDesignConfigList.map(item => {\r\n            data.push({\r\n                \"ndashboarddesigncode\": item.ndashboarddesigncode,\r\n                \"ndashboardtypecode\": item.ndashboardtypecode,\r\n                \"ndesigncomponentcode\": item.ndesigncomponentcode,\r\n                \"sfieldname\": item.sfieldname,\r\n                \"nsqlquerycode\": item.nsqlquerycode ? item.nsqlquerycode : -1,\r\n                \"sdisplayname\": item.sdisplayname,\r\n                \"ndays\": item.ndays ? item.ndays : 0,\r\n                \"sdefaultvalue\": item.ndesigncomponentcode === designComponents.COMBOBOX ?\r\n                    this.state.selectedRecord[item.sfieldname] && this.state.selectedRecord[item.sfieldname].value ? this.state.selectedRecord[item.sfieldname].value : \"\"\r\n                    : this.state.selectedRecord[item.sfieldname] === undefined ? \"\" : this.state.selectedRecord[item.sfieldname]\r\n\r\n            });\r\n            return null;\r\n        })\r\n        inputData[\"dashboarddesignconfig\"] = data;\r\n        inputData[\"ndashboardtypecode\"] = this.props.masterData.selectedDashBoardTypes.ndashboardtypecode;\r\n\r\n        this.props.updateDashBoarddesignDefaultValue(inputData, this.props.masterData);\r\n        // const inputParam = {\r\n        //     classUrl: this.props.inputParam.classUrl,\r\n        //     methodUrl: \"DashBoardDesignConfig\",\r\n        //     displayName: this.props.inputParam.displayName,\r\n        //     inputData: inputData,\r\n        //     operation: operation, saveType, formRef, dataState, selectedId\r\n        // }\r\n        // if (showEsign(this.props.userRoleControlRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             loadEsign: true, screenData: { inputParam, masterData: this.props.masterData },\r\n        //             openChildModal: true, screenName: this.props.intl.formatMessage({ id: this.props.inputParam.displayName }),\r\n        //             operation: this.props.operation\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\r\n        // }\r\n\r\n    }\r\n}\r\nexport default injectIntl(DashBoardDesignConfig);"]},"metadata":{},"sourceType":"module"}