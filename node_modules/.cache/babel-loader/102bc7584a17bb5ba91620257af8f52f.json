{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl,FormattedMessage}from'react-intl';import{toast}from'react-toastify';import{callService,crudMaster}from'../../../actions';import{Row,Col,Card,Nav,FormGroup,FormLabel}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faCopy,faThumbsUp,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{sortData,getControlMap,showEsign,constructOptionList}from'../../../components/CommonScript';import{process}from'@progress/kendo-data-query';import ListMaster from'../../../components/list-master/list-master.component';import Esign from'../../audittrail/Esign';import SampleFilter from'./SampleFilter';import AddApprovalConfig from'./AddApprovalConfig';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import{ReadOnlyText,ContentPanel}from'../../../components/App.styles';import{openModal,updateStore,getApprovalConfigVersion,getApprovalConfigEditData,copyVersion,setDefault,validateEsignCredential,getFilterChange,getRoleDetails,getCopySubType,filterColumnData,getApprovalConfigurationVersion,approveVersion}from'../../../actions';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import{ApprovalSubType,designProperties,transactionStatus}from'../../../components/Enumeration';import FilterStatusTab from'./FilterStatusTab';import ValidationStatusTab from'./ValidationStatusTab';import UserRoleAccordion from'./UserRoleAccordion';import CustomAccordion from'../../../components/custom-accordion/custom-accordion.component';import DecisionStatusTab from'./DecisionStatusTab';import ActionStatusTab from'./ActionStatusTab';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport BreadcrumbComponent from'../../../components/Breadcrumb.Component';import ConfirmMessage from'../../../components/confirm-alert/confirm-message.component';import{Affix}from'rsuite';import FormInput from'../../../components/form-input/form-input.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';// import ReactTooltip from 'react-tooltip';\nvar mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var ApprovalConfig=/*#__PURE__*/function(_React$Component){_inherits(ApprovalConfig,_React$Component);var _super=_createSuper(ApprovalConfig);function ApprovalConfig(props){var _this;_classCallCheck(this,ApprovalConfig);_this=_super.call(this,props);_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.handleClose=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"approve\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.deleteApprovalConfigVersion=function(deleteId){if(_this.props.Login.masterData.selectedVersion.ntransactionstatus===transactionStatus.APPROVED||_this.props.Login.masterData.selectedVersion.ntransactionstatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}else{var postParam={inputListName:\"versionData\",selectedObject:\"selectedVersion\",primaryKeyField:\"napproveconfversioncode\",primaryKeyValue:_this.props.Login.masterData.selectedVersion.napproveconfversioncode,fetchUrl:\"approvalconfig/getApprovalConfigVersion\",fecthInputObject:{napprovalsubtypecode:_this.approvalSubTypeValue.value,userinfo:_this.props.Login.userInfo}// unchangeList: [\"approvalsubtype\", \"approvalSubTypeValue\", \"registrationType\",\n//  \"registrationTypeValue\", \"registrationSubType\", \"registrationSubTypeValue\",\n//     \"ApprovalsubtypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\"]\n};var inputData={'approvalconfigversion':{napprovalconfigversioncode:_this.props.Login.masterData.selectedVersion.napproveconfversioncode,napprovalconfigcode:_this.props.Login.masterData.realApprovalConfigCode,napprovalsubtypecode:_this.approvalSubTypeValue.value,ntreeversiontempcode:_this.props.Login.masterData.realTreeVersionTemplateValue.value,userinfo:_this.props.Login.userInfo}};inputData['userinfo']=_this.props.Login.userInfo;var inputParam={methodUrl:'ApprovalConfigVersion',classUrl:_this.props.Login.inputParam.classUrl,displayName:\"IDS_APPROVALCONFIG\",inputData:inputData,postParam:postParam,operation:\"delete\"};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:\"delete\",openModal:true,screenName:_this.props.intl.formatMessage({id:\"IDS_APPROVALCONFIG\"})}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}};_this.approveVersion=function(approveId){if(_this.props.Login.masterData.selectedVersion.ntransactionstatus===transactionStatus.APPROVED||_this.props.Login.masterData.selectedVersion.ntransactionstatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}else{if(_this.approvalSubTypeValue.value===2){var inputData={// 'approvalconfigversion': {\nnapprovalconfigversioncode:_this.props.Login.masterData.selectedVersion.napproveconfversioncode,napprovalconfigcode:_this.props.Login.masterData.realApprovalConfigCode,napprovalsubtypecode:_this.approvalSubTypeValue.value,ntreeversiontempcode:_this.props.Login.masterData.realTreeVersionTemplateValue?_this.props.Login.masterData.realTreeVersionTemplateValue.value:-1,userinfo:_this.props.Login.userInfo,nregsubtypecode:_this.props.Login.masterData.registrationSubTypeValue?_this.props.Login.masterData.registrationSubTypeValue.value:-1,sregsubtypename:_this.props.Login.masterData.registrationSubTypeValue?_this.props.Login.masterData.registrationSubTypeValue.label:\"\",nregtypecode:_this.props.Login.masterData.registrationTypeValue?_this.props.Login.masterData.registrationTypeValue.value:-1// nregtypecode:this.props.Login.masterData.registrationTypeValue ? this.props.Login.masterData.registrationTypeValue.value : -1,\n// }\n};inputData['userinfo']=_this.props.Login.userInfo;//  inputData['userinfo'] = this.props.Login.userInfo\nvar inputParam={methodUrl:'ApprovalConfigVersion',classUrl:_this.props.Login.inputParam.classUrl,displayName:\"IDS_APPROVALCONFIG\",inputData:inputData,operation:\"approve\",ncontrolcode:approveId};//const masterData = this.props.Login.masterData;\n_this.props.approveVersion(inputParam);// if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId)) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true, screenData: { inputParam, masterData },\n//             openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" }), operation: \"approve\"\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n// else {\n//     this.props.crudMaster(inputParam, masterData, \"openModal\");\n// }\n}else{var _inputData={'approvalconfigversion':{napprovalconfigversioncode:_this.props.Login.masterData.selectedVersion.napproveconfversioncode,napprovalconfigcode:_this.props.Login.masterData.realApprovalConfigCode,napprovalsubtypecode:_this.approvalSubTypeValue.value,ntreeversiontempcode:_this.props.Login.masterData.realTreeVersionTemplateValue?_this.props.Login.masterData.realTreeVersionTemplateValue.value:-1,userinfo:_this.props.Login.userInfo,nregsubtypecode:_this.props.Login.masterData.registrationSubTypeValue?_this.props.Login.masterData.registrationSubTypeValue.value:-1,sregsubtypename:_this.props.Login.masterData.registrationSubTypeValue?_this.props.Login.masterData.registrationSubTypeValue.label:\"\",nregtypecode:_this.props.Login.masterData.registrationTypeValue?_this.props.Login.masterData.registrationTypeValue.value:-1}};_inputData['userinfo']=_this.props.Login.userInfo;var _inputParam={methodUrl:'ApprovalConfigVersion',classUrl:_this.props.Login.inputParam.classUrl,displayName:\"IDS_APPROVALCONFIG\",inputData:_inputData,operation:\"updateapprove\",ncontrolcode:approveId};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,approveId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:_inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:\"IDS_APPROVALCONFIG\"}),operation:\"approve\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(_inputParam,_this.props.Login.masterData,\"openModal\");}}}};_this.getGridJsondata=function(templatedata,subSampleCheck,subSampleTemplate){var gridItem=[];var gridMoreItem=[];var masterdatefields=[];var masterdateconstraints=[];var masteruniquevalidation=[];var mastercombinationunique=[];var editable=[];var jdynamiccolumns=[];var jnumericcolumns=[];var templatePrimaryKey=\"\";var mastertemplatefields=[];var sampleAuditFields=[];var sampleAuditEditable=[];var sampleAuditMultilingualFields=[];var sampleQuerybuilderViewCondition=[];var sampleQuerybuilderViewSelect=[];templatedata&&templatedata.map(function(row){return row.children&&row.children.map(function(column){column.children&&column.children.map(function(component,index){//console.log(\"component2:\", component);\nif(component.hasOwnProperty('children')){component.children.map(function(componentRow){var _componentRow$label,_mastertemplatefields;// console.log(\"component row2:\", componentRow);\ncomponentRow.unique&&masteruniquevalidation.push(_defineProperty({},designProperties.LABEL,componentRow.label));componentRow.unique&&mastercombinationunique.push(_defineProperty({},componentRow.label,(_componentRow$label={},_defineProperty(_componentRow$label,designProperties.LABEL,componentRow.displayname),_defineProperty(_componentRow$label,designProperties.VALUE,componentRow.label),_componentRow$label)));templatePrimaryKey=templatePrimaryKey===\"\"&&componentRow.unique?componentRow.label:templatePrimaryKey;var filterinputtype=\"text\";var comboDataInputObject={};if(componentRow.inputtype==='combo'){comboDataInputObject={\"predefinedtablename\":componentRow.source,\"predefinedvaluemember\":componentRow.valuemember,\"predefineddisplaymember\":componentRow.displaymember,\"predefinedismultilingual\":false,\"predefinedconditionalString\":\"\\\"\"+componentRow.valuemember+\"\\\"\"+\" > '0' \"};jnumericcolumns.push(_objectSpread({\"columnname\":componentRow.displaymember,\"displayname\":componentRow.displayname,\"foriegntablePK\":componentRow.label,// \"ismultilingual\": true,\n// \"conditionstring\": \" and nformcode in (\"+componentRow.table.item.nformcode+\") \",\n\"tablecolumnname\":componentRow.valuemember,\"foriegntablename\":componentRow.source},comboDataInputObject));sampleQuerybuilderViewCondition.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"columntype\":1,\"viewvaluemember\":componentRow.label,\"valuemember\":componentRow.valuemember,\"displaymember\":componentRow.displaymember,\"mastertablename\":componentRow.source,\"needmasterdata\":true,\"columntypedesc\":\"textinput\"});sampleQuerybuilderViewSelect.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"languagecode\":false});filterinputtype=\"predefinednumeric\";}// samplesearchfields.push(componentRow.label)\nif(componentRow.inputtype==='date'){var _masterdatefields$pus;filterinputtype=\"date\";masterdatefields.push((_masterdatefields$pus={},_defineProperty(_masterdatefields$pus,designProperties.VALUE,componentRow.label),_defineProperty(_masterdatefields$pus,\"dateonly\",componentRow.dateonly||false),_masterdatefields$pus));masterdateconstraints=componentRow.dateConstraintArraySQL?[].concat(_toConsumableArray(componentRow.dateConstraintArraySQL),_toConsumableArray(masterdateconstraints)):masterdateconstraints;sampleQuerybuilderViewCondition.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"columntype\":2,\"columntypedesc\":\"datetime\"});sampleQuerybuilderViewSelect.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"languagecode\":false});}if(componentRow.inputtype==='Numeric'||componentRow.inputtype==='radio'){filterinputtype=\"numeric\";if(componentRow.inputtype==='Numeric'){sampleQuerybuilderViewCondition.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"columntype\":5,\"columntypedesc\":\"numericinput\"});sampleQuerybuilderViewSelect.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"languagecode\":false});}}if(componentRow.inputtype==='textinput'||componentRow.inputtype==='email'||componentRow.inputtype==='textarea'||componentRow.inputtype==='radio'){sampleQuerybuilderViewCondition.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"columntype\":1,\"columntypedesc\":\"textinput\"});sampleQuerybuilderViewSelect.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"languagecode\":false});}jdynamiccolumns.push(_objectSpread({default:componentRow.unique?true:false,filterinputtype:filterinputtype,columnname:componentRow.label,displayname:componentRow.displayname},comboDataInputObject));// displayFields.push({ [designProperties.LABEL]: componentRow.displayname, [designProperties.VALUE]: componentRow.label });\n// componentRow.templatemandatory && listItem.push({ [designProperties.LABEL]: componentRow.displayname, [designProperties.VALUE]: componentRow.label })\nif(componentRow.mandatory||componentRow.templatemandatory){var _gridItem$push;gridItem.push((_gridItem$push={},_defineProperty(_gridItem$push,designProperties.LABEL,componentRow.displayname),_defineProperty(_gridItem$push,designProperties.VALUE,componentRow.label),_gridItem$push));sampleAuditEditable.push(componentRow.label);}else{var _gridMoreItem$push;gridMoreItem.push((_gridMoreItem$push={},_defineProperty(_gridMoreItem$push,designProperties.LABEL,componentRow.displayname),_defineProperty(_gridMoreItem$push,designProperties.VALUE,componentRow.label),_gridMoreItem$push));}mastertemplatefields.push((_mastertemplatefields={},_defineProperty(_mastertemplatefields,designProperties.LABEL,componentRow.displayname),_defineProperty(_mastertemplatefields,designProperties.VALUE,componentRow.label),_mastertemplatefields));sampleAuditFields.push(componentRow.label);sampleAuditMultilingualFields.push(_defineProperty({},componentRow.label,componentRow.displayname));if(componentRow.templatemandatory){editable.push({label:componentRow.label,editableuntill:[]});}else{editable.push({label:componentRow.label,editableuntill:[transactionStatus.DRAFT]});}return null;});}else{var _component$label,_mastertemplatefields2;//console.log(\"component2:\", component);\ncomponent.unique&&masteruniquevalidation.push(_defineProperty({},designProperties.LABEL,component.label));component.unique&&mastercombinationunique.push(_defineProperty({},component.label,(_component$label={},_defineProperty(_component$label,designProperties.LABEL,component.displayname),_defineProperty(_component$label,designProperties.VALUE,component.label),_component$label)));templatePrimaryKey=templatePrimaryKey===\"\"&&component.unique?component.label:templatePrimaryKey;var filterinputtype=\"text\";var comboDataInputObject={};mastertemplatefields.push((_mastertemplatefields2={},_defineProperty(_mastertemplatefields2,designProperties.LABEL,component.displayname),_defineProperty(_mastertemplatefields2,designProperties.VALUE,component.label),_mastertemplatefields2));sampleAuditFields.push(component.label);sampleAuditMultilingualFields.push(_defineProperty({},component.label,component.displayname));if(component.inputtype==='combo'){filterinputtype=\"predefinednumeric\";comboDataInputObject={\"predefinedtablename\":component.source,\"predefinedvaluemember\":component.valuemember,\"predefineddisplaymember\":component.displaymember,\"predefinedismultilingual\":false,\"predefinedconditionalString\":\"\\\"\"+component.valuemember+\"\\\"\"+\" > '0'\"};jnumericcolumns.push(_objectSpread({\"columnname\":component.label,\"displayname\":component.displayname,\"foriegntablePK\":component.label,// \"ismultilingual\": true,\n//\"conditionstring\": \" and nformcode in (\" + component.table.item.nformcode + \") \",\n\"tablecolumnname\":component.column.value,\"foriegntablename\":component.source},comboDataInputObject));sampleQuerybuilderViewCondition.push({\"columnname\":component.label,\"displayname\":component.displayname,\"columntype\":1,\"viewvaluemember\":component.label,\"valuemember\":component.valuemember,\"displaymember\":component.displaymember,\"mastertablename\":component.source,\"needmasterdata\":true,\"columntypedesc\":\"textinput\"});sampleQuerybuilderViewSelect.push({\"columnname\":component.label,\"displayname\":component.displayname,\"languagecode\":false});}// samplesearchfields.push(component.label)\nif(component.inputtype==='date'){var _masterdatefields$pus2;filterinputtype=\"date\";masterdatefields.push((_masterdatefields$pus2={},_defineProperty(_masterdatefields$pus2,designProperties.VALUE,component.label),_defineProperty(_masterdatefields$pus2,\"dateonly\",component.dateonly||false),_masterdatefields$pus2));masterdateconstraints=component.dateConstraintArraySQL?[].concat(_toConsumableArray(component.dateConstraintArraySQL),_toConsumableArray(masterdateconstraints)):masterdateconstraints;sampleQuerybuilderViewCondition.push({\"columnname\":component.label,\"displayname\":component.displayname,\"columntype\":2,\"columntypedesc\":\"datetime\"});sampleQuerybuilderViewSelect.push({\"columnname\":component.label,\"displayname\":component.displayname,\"languagecode\":false});}if(component.inputtype==='numeric'||component.inputtype==='radio'){filterinputtype=\"numeric\";if(component.inputtype==='Numeric'){sampleQuerybuilderViewCondition.push({\"columnname\":component.label,\"displayname\":component.displayname,\"columntype\":5,\"columntypedesc\":\"numericinput\"});sampleQuerybuilderViewSelect.push({\"columnname\":component.label,\"displayname\":component.displayname,\"languagecode\":false});}}if(component.inputtype==='textinput'||component.inputtype==='email'||component.inputtype==='textarea'||component.inputtype==='radio'){sampleQuerybuilderViewCondition.push({\"columnname\":component.label,\"displayname\":component.displayname,\"columntype\":1,\"columntypedesc\":\"textinput\"});sampleQuerybuilderViewSelect.push({\"columnname\":component.label,\"displayname\":component.displayname,\"languagecode\":false});}jdynamiccolumns.push(_objectSpread({default:component.unique?true:false,columnname:component.label,displayname:component.displayname,filterinputtype:filterinputtype},comboDataInputObject));if(component.mandatory||component.templatemandatory){var _gridItem$push2;gridItem.push((_gridItem$push2={},_defineProperty(_gridItem$push2,designProperties.LABEL,component.displayname),_defineProperty(_gridItem$push2,designProperties.VALUE,component.label),_gridItem$push2));sampleAuditEditable.push(component.label);}else{var _gridMoreItem$push2;gridMoreItem.push((_gridMoreItem$push2={},_defineProperty(_gridMoreItem$push2,designProperties.LABEL,component.displayname),_defineProperty(_gridMoreItem$push2,designProperties.VALUE,component.label),_gridMoreItem$push2));}if(component.templatemandatory){editable.push({label:component.label,editableuntill:[]});}else{editable.push({label:component.label,editableuntill:[transactionStatus.DRAFT]});}return null;}});});});if(subSampleCheck){subSampleTemplate&&subSampleTemplate.jsondata.map(function(row){return row.children&&row.children.map(function(column){column.children&&column.children.map(function(component,index){//console.log(\"component2:\", component);\nif(component.hasOwnProperty('children')){component.children.map(function(componentRow){if(componentRow.inputtype==='combo'){sampleQuerybuilderViewCondition.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"columntype\":1,\"viewvaluemember\":componentRow.label,\"valuemember\":componentRow.valuemember,\"displaymember\":componentRow.displaymember,\"mastertablename\":componentRow.source,\"needmasterdata\":true,\"columntypedesc\":\"textinput\"});sampleQuerybuilderViewSelect.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"languagecode\":false});}if(componentRow.inputtype==='date'){sampleQuerybuilderViewCondition.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"columntype\":2,\"columntypedesc\":\"datetime\"});sampleQuerybuilderViewSelect.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"languagecode\":false});}if(componentRow.inputtype==='Numeric'){sampleQuerybuilderViewCondition.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"columntype\":5,\"columntypedesc\":\"numericinput\"});sampleQuerybuilderViewSelect.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"languagecode\":false});}if(componentRow.inputtype==='textinput'||componentRow.inputtype==='email'||componentRow.inputtype==='textarea'||componentRow.inputtype==='radio'){sampleQuerybuilderViewCondition.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"columntype\":1,\"columntypedesc\":\"textinput\"});sampleQuerybuilderViewSelect.push({\"columnname\":componentRow.label,\"displayname\":componentRow.displayname,\"languagecode\":false});}return null;});}else{if(component.inputtype==='combo'){sampleQuerybuilderViewCondition.push({\"columnname\":component.label,\"displayname\":component.displayname,\"columntype\":1,\"viewvaluemember\":component.label,\"valuemember\":component.valuemember,\"displaymember\":component.displaymember,\"mastertablename\":component.source,\"needmasterdata\":true,\"columntypedesc\":\"textinput\"});sampleQuerybuilderViewSelect.push({\"columnname\":component.label,\"displayname\":component.displayname,\"languagecode\":false});}if(component.inputtype==='date'){sampleQuerybuilderViewCondition.push({\"columnname\":component.label,\"displayname\":component.displayname,\"columntype\":2,\"columntypedesc\":\"datetime\"});sampleQuerybuilderViewSelect.push({\"columnname\":component.label,\"displayname\":component.displayname,\"languagecode\":false});}if(component.inputtype==='Numeric'){sampleQuerybuilderViewCondition.push({\"columnname\":component.label,\"displayname\":component.displayname,\"columntype\":5,\"columntypedesc\":\"numericinput\"});sampleQuerybuilderViewSelect.push({\"columnname\":component.label,\"displayname\":component.displayname,\"languagecode\":false});}if(component.inputtype==='textinput'||component.inputtype==='email'||component.inputtype==='textarea'||component.inputtype==='radio'){sampleQuerybuilderViewCondition.push({\"columnname\":component.label,\"displayname\":component.displayname,\"columntype\":1,\"columntypedesc\":\"textinput\"});sampleQuerybuilderViewSelect.push({\"columnname\":component.label,\"displayname\":component.displayname,\"languagecode\":false});}return null;}});});});}var jsondata={griditem:gridItem,gridmoreitem:gridMoreItem,masterdatefields:masterdatefields,masterdateconstraints:masterdateconstraints,masteruniquevalidation:masteruniquevalidation,editable:editable,mastertemplatefields:mastertemplatefields,mastercombinationunique:mastercombinationunique,sampleAuditFields:sampleAuditFields,sampleAuditEditable:sampleAuditEditable,sampleAuditMultilingualFields:sampleAuditMultilingualFields};//console.log(\"dynamiccolumns:\", jdynamiccolumns);\nreturn{jsondata:jsondata,jdynamiccolumns:jdynamiccolumns,jnumericcolumns:jnumericcolumns,templatePrimaryKey:templatePrimaryKey,sampleQuerybuilderViewCondition:sampleQuerybuilderViewCondition,sampleQuerybuilderViewSelect:sampleQuerybuilderViewSelect};};_this.approveVersion1=function(approveId){if(_this.props.Login.masterData.selectedVersion.ntransactionstatus===transactionStatus.APPROVED||_this.props.Login.masterData.selectedVersion.ntransactionstatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}else{var postParam={inputListName:\"versionData\",selectedObject:\"selectedVersion\",primaryKeyField:\"napproveconfversioncode\",primaryKeyValue:_this.props.Login.masterData.selectedVersion.napproveconfversioncode,fetchUrl:\"approvalconfig/getApprovalConfigVersion\",fecthInputObject:{napprovalsubtypecode:_this.approvalSubTypeValue.value,userinfo:_this.props.Login.userInfo},unchangeList:[\"approvalsubtype\",\"approvalSubTypeValue\",\"registrationType\",\"registrationTypeValue\",\"registrationSubType\",\"registrationSubTypeValue\",\"ApprovalsubtypeList\",\"RegistrationTypeList\",\"RegistrationSubTypeList\"]};var _this$getGridJsondata=_this.getGridJsondata(_this.props.Login.selectedTemplate&&_this.props.Login.selectedTemplate,_this.props.Login.subSampleCheck,_this.props.Login.subSampleTemplate),jdynamiccolumns=_this$getGridJsondata.jdynamiccolumns,jnumericcolumns=_this$getGridJsondata.jnumericcolumns,templatePrimaryKey=_this$getGridJsondata.templatePrimaryKey,sampleQuerybuilderViewCondition=_this$getGridJsondata.sampleQuerybuilderViewCondition,sampleQuerybuilderViewSelect=_this$getGridJsondata.sampleQuerybuilderViewSelect;var inputData={'approvalconfigversion':{napprovalconfigversioncode:_this.props.Login.masterData.selectedVersion.napproveconfversioncode,napprovalconfigcode:_this.props.Login.masterData.realApprovalConfigCode,napprovalsubtypecode:_this.approvalSubTypeValue.value,ntreeversiontempcode:_this.props.Login.masterData.realTreeVersionTemplateValue?_this.props.Login.masterData.realTreeVersionTemplateValue.value:-1,userinfo:_this.props.Login.userInfo,nregsubtypecode:_this.props.Login.masterData.registrationSubTypeValue?_this.props.Login.masterData.registrationSubTypeValue.value:-1,sregsubtypename:_this.props.Login.masterData.registrationSubTypeValue?_this.props.Login.masterData.registrationSubTypeValue.label:\"\",sviewname:_this.state.selectedRecord.sviewname,ndesigntemplatemappingcode:_this.state.selectedRecord.ndesigntemplatemappingcode.value,sregtemplatename:_this.state.selectedRecord.ndesigntemplatemappingcode.label},jdynamiccolumns:jdynamiccolumns,jnumericcolumns:jnumericcolumns,sprimarykey:templatePrimaryKey,sampleQuerybuilderViewCondition:sampleQuerybuilderViewCondition,sampleQuerybuilderViewSelect:sampleQuerybuilderViewSelect};inputData['userinfo']=_this.props.Login.userInfo;// inputData['jsondata'] = this.props.Login.userInfo\nvar inputParam={methodUrl:'ApprovalConfigVersion',classUrl:_this.props.Login.inputParam.classUrl,displayName:\"IDS_APPROVALCONFIG\",inputData:inputData,postParam:postParam,operation:\"updateapprove\"};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,approveId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:\"IDS_APPROVALCONFIG\"}),operation:\"approve\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}};_this.onSaveClick=function(saveType,formRef){var postParam=undefined;if(_this.props.Login.operation===\"copy\"){var subTypeCode=_this.approvalSubTypeValue.value;var inputData={approvalconfigversion:{napprovalconfigversioncode:_this.props.Login.masterData.selectedVersion.napproveconfversioncode,napprovalconfigcode:_this.props.Login.masterData.realApprovalConfigCode,napprovalsubtypecode:subTypeCode,sversionname:_this.state.selectedRecord.sversionname,nregtypecode:subTypeCode===ApprovalSubType.TESTRESULTAPPROVAL?_this.state.selectedRecord['regtype']?_this.state.selectedRecord['regtype'].value:_this.state.registrationTypeValue[0].value:-1,nregsubtypecode:subTypeCode===ApprovalSubType.TESTRESULTAPPROVAL?_this.state.selectedRecord['regsubtype']?_this.state.selectedRecord['regsubtype'].value:_this.state.registrationSubTypeValue[0].value:-1,userinfo:_this.props.Login.userInfo,ntreeversiontempcode:_this.props.Login.masterData.realTreeVersionTemplateValue?_this.props.Login.masterData.realTreeVersionTemplateValue.value:-1}};inputData['userinfo']=_this.props.Login.userInfo;var inputParam={methodUrl:'ApprovalConfigVersion',classUrl:_this.props.Login.inputParam.classUrl,displayName:\"IDS_APPROVALCONFIG\",inputData:inputData,postParam:postParam,searchRef:_this.searchRef,operation:\"copy\"};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:\"IDS_APPROVALCONFIG\"}),operation:\"copy\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}else if(_this.props.Login.operation==='approve'){_this.approveVersion1(_this.props.Login.ncontrolcode);}else{var bool=true;var errormessage=[];var _inputData2={};var approvalconfigrole=[];var filterDetailCount=0;var validationDetailCount=0;var decisionDetailCount=0;var actionDetailCount=0;_inputData2[\"userinfo\"]=_this.props.Login.userInfo;_inputData2['napprovalconfigcode']=_this.props.Login.masterData.realApprovalConfigCode;_inputData2['ntreeversiontempcode']=_this.props.Login.userRoleTree[0].ntreeversiontempcode;_inputData2['napprovalsubtypecode']=_this.approvalSubTypeValue.value;var isAutoApprovalVersion=_this.state.selectedRecord['IDS_AUTOAPPROVAL']&&_this.state.selectedRecord['IDS_AUTOAPPROVAL']===transactionStatus.YES?true:false;var userRoleTree=_this.props.Login.userRoleTree;//.reverse();\nuserRoleTree.map(function(role){var approvalconfigrolefilterdetail=[];var approvalconfigrolevalidationdetail=[];var approvalconfigroledecisiondetail=[];var approvalconfigroleactiondetail=[];//to fill role details\nif(_this.state.selectedRecord[role.nuserrolecode]){approvalconfigrole.push({napprovalconfigrolecode:_this.props.Login.operation==='create'?0:role.napprovalconfigrolecode,napprovalconfigcode:role.napprovalconfigcode,ntreeversiontempcode:role.ntreeversiontempcode,nuserrolecode:role.nuserrolecode,nchecklistversioncode:_this.state.selectedRecord[role.nuserrolecode]?_this.state.selectedRecord[role.nuserrolecode].checklist?_this.state.selectedRecord[role.nuserrolecode].checklist:transactionStatus.NA:transactionStatus.NA,npartialapprovalneed:_this.state.selectedRecord[role.nuserrolecode]['Partial Approval_'+role.nuserrolecode]?_this.state.selectedRecord[role.nuserrolecode]['Partial Approval_'+role.nuserrolecode]:transactionStatus.YES,nsectionwiseapprovalneed:_this.state.selectedRecord[role.nuserrolecode]['IDS_PARTIALAPPROVAL']&&_this.state.selectedRecord[role.nuserrolecode]['IDS_PARTIALAPPROVAL']===transactionStatus.NO?_this.state.selectedRecord[role.nuserrolecode]['IDS_SECTIONWISEAPPROVE']?_this.state.selectedRecord[role.nuserrolecode]['IDS_SECTIONWISEAPPROVE']:transactionStatus.NO:transactionStatus.NO,// nrecomretestneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRETEST'] ?\n//     this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRETEST'] : transactionStatus.NO,\n// nrecomrecalcneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRECALC'] ?\n//     this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRECALC'] : transactionStatus.NO,\n// nretestneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RETEST'] ?\n//     this.state.selectedRecord[role.nuserrolecode]['IDS_RETEST'] : transactionStatus.NO,\n// nrecalcneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RECALC'] ?\n//     this.state.selectedRecord[role.nuserrolecode]['IDS_RECALC'] : transactionStatus.NO,\n// nlevelno: role.nlevelno,\nnrecomretestneed:_this.state.selectedRecord[role.nuserrolecode]['Recommend Retest_'+role.nuserrolecode]?_this.state.selectedRecord[role.nuserrolecode]['Recommend Retest_'+role.nuserrolecode]:transactionStatus.NO,nrecomrecalcneed:_this.state.selectedRecord[role.nuserrolecode]['Recommend Recalc_'+role.nuserrolecode]?_this.state.selectedRecord[role.nuserrolecode]['Recommend Recalc_'+role.nuserrolecode]:transactionStatus.NO,nretestneed:_this.state.selectedRecord[role.nuserrolecode]['Retest_'+role.nuserrolecode]?_this.state.selectedRecord[role.nuserrolecode]['Retest_'+role.nuserrolecode]:transactionStatus.NO,nrecalcneed:_this.state.selectedRecord[role.nuserrolecode]['Recalc_'+role.nuserrolecode]?_this.state.selectedRecord[role.nuserrolecode]['Recalc_'+role.nuserrolecode]:transactionStatus.NO,nlevelno:role.nlevelno,napprovalstatuscode:_this.state.selectedRecord[role.nuserrolecode].approvalstatus?_this.state.selectedRecord[role.nuserrolecode].approvalstatus:transactionStatus.NA,nautoapproval:_this.state.selectedRecord['IDS_AUTOAPPROVAL']&&_this.state.selectedRecord['IDS_AUTOAPPROVAL']===transactionStatus.YES?transactionStatus.YES:_this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL']?_this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL']:transactionStatus.NO,nautoapprovalstatuscode:_this.state.selectedRecord['IDS_AUTOAPPROVAL']&&_this.state.selectedRecord['IDS_AUTOAPPROVAL']===transactionStatus.YES?_this.state.selectedRecord[_this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus:_this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL']&&_this.state.selectedRecord[role.nuserrolecode].approvalstatus?_this.state.selectedRecord[role.nuserrolecode].approvalstatus:transactionStatus.NA,nautodescisionstatuscode:_this.state.selectedRecord['IDS_AUTOAPPROVAL']&&_this.state.selectedRecord['IDS_AUTOAPPROVAL']===transactionStatus.YES?_this.state.selectedRecord[_this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus&&_this.state.selectedRecord[_this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0]?_this.state.selectedRecord[_this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0]:transactionStatus.PASS:_this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL']&&_this.state.selectedRecord[role.nuserrolecode].decisionstatus&&_this.state.selectedRecord[role.nuserrolecode].decisionstatus.length>0?_this.state.selectedRecord[role.nuserrolecode].decisionstatus[0]:transactionStatus.DRAFT// :this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus&&this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus.length>0 ?\n// :transactionStatus.NA\n,ncorrectionneed:_this.state.selectedRecord[role.nuserrolecode]['Correction_'+role.nuserrolecode]?_this.state.selectedRecord[role.nuserrolecode]['Correction_'+role.nuserrolecode]:transactionStatus.NO,nesignneed:_this.state.selectedRecord[role.nuserrolecode]['e-Sign_'+role.nuserrolecode]?_this.state.selectedRecord[role.nuserrolecode]['e-Sign_'+role.nuserrolecode]:transactionStatus.NO,ntransactionstatus:transactionStatus.DRAFT,nsitecode:_this.props.Login.userInfo.nmastersitecode,nstatus:transactionStatus.ACTIVE});if(_this.state.selectedRecord[role.nuserrolecode].filterstatus){_this.state.selectedRecord[role.nuserrolecode].filterstatus.map(function(filterValue){filterDetailCount++;approvalconfigrolefilterdetail.push({napprovalconfigcode:role.napprovalconfigcode,nuserrolecode:role.nuserrolecode,nlevelno:role.nlevelno,ntransactionstatus:filterValue,nstatus:transactionStatus.ACTIVE});return null;});}if(_this.state.selectedRecord[role.nuserrolecode].validationstatus){_this.state.selectedRecord[role.nuserrolecode].validationstatus.map(function(validationValue){validationDetailCount++;approvalconfigrolevalidationdetail.push({napprovalconfigcode:role.napprovalconfigcode,nuserrolecode:role.nuserrolecode,nlevelno:role.nlevelno,ntransactionstatus:validationValue,nstatus:transactionStatus.ACTIVE});return null;});}if(_this.state.selectedRecord[role.nuserrolecode].decisionstatus){_this.state.selectedRecord[role.nuserrolecode].decisionstatus.map(function(decisionValue){decisionDetailCount++;approvalconfigroledecisiondetail.push({napprovalconfigcode:role.napprovalconfigcode,nuserrolecode:role.nuserrolecode,nlevelno:role.nlevelno,ntransactionstatus:decisionValue,nstatus:transactionStatus.ACTIVE});return null;});}_this.state.selectedRecord[\"actionStatus_\".concat(role.nuserrolecode)]?_this.state.selectedRecord[\"actionStatus_\".concat(role.nuserrolecode)].map(function(actionValue){actionDetailCount++;approvalconfigroleactiondetail.push({napprovalconfigcode:role.napprovalconfigcode,nuserrolecode:role.nuserrolecode,nlevelno:role.nlevelno,ntransactionstatus:actionValue,nstatus:transactionStatus.ACTIVE});return null;}):approvalconfigroleactiondetail.push();actionDetailCount++;approvalconfigroleactiondetail.push({napprovalconfigcode:role.napprovalconfigcode,nuserrolecode:role.nuserrolecode,nlevelno:role.nlevelno,ntransactionstatus:_this.state.selectedRecord[role.nuserrolecode].approvalstatus?_this.state.selectedRecord[role.nuserrolecode].approvalstatus:-1,nstatus:transactionStatus.ACTIVE});_inputData2[\"approvalconfigrolefilterdetail_\".concat([role.nuserrolecode])]=approvalconfigrolefilterdetail;_inputData2[\"approvalconfigrolevalidationdetail_\".concat([role.nuserrolecode])]=approvalconfigrolevalidationdetail;_inputData2[\"approvalconfigroledecisiondetail_\".concat([role.nuserrolecode])]=approvalconfigroledecisiondetail;_inputData2[\"approvalconfigroleactiondetail_\".concat([role.nuserrolecode])]=approvalconfigroleactiondetail;bool=bool?true:false;return null;}else{bool=false;errormessage.push(role.suserrolename);return false;}});//role map\n_inputData2['approvalconfigrole']=approvalconfigrole;_inputData2['rolecount']=_this.props.Login.userRoleTree.length;_inputData2['filterdetailcount']=filterDetailCount;_inputData2['validationdetailcount']=validationDetailCount;_inputData2['decisiondetailcount']=decisionDetailCount;_inputData2['actioncount']=actionDetailCount;_inputData2['ntreeversiontempcode']=_this.props.Login.masterData.realTreeVersionTemplateValue?_this.props.Login.masterData.realTreeVersionTemplateValue.value:-1;var finalInputData={};var _inputParam2={};if(bool){if(_this.props.Login.operation===\"update\"){// edit\npostParam={inputListName:\"versionData\",selectedObject:\"selectedVersion\",primaryKeyField:\"napproveconfversioncode\"};var temp1={};_this.props.Login.versionConfig.map(function(temp){if(temp.ntranscode===transactionStatus.AUTOAPPROVAL){temp1['nneedautoapproval']=_this.state.selectedRecord[temp.stransdisplaystatus]?_this.state.selectedRecord[temp.stransdisplaystatus]:transactionStatus.NO;}else if(temp.ntranscode===transactionStatus.AUTOCOMPLETE){temp1['nneedautocomplete']=_this.state.selectedRecord[temp.stransdisplaystatus]?_this.state.selectedRecord[temp.stransdisplaystatus]:transactionStatus.NO;}});_inputData2['approvalconfigautoapproval']=_objectSpread({napprovalconfigversioncode:_this.props.Login.masterData.selectedVersion.napproveconfversioncode,napprovalconfigcode:_this.props.Login.masterData.realApprovalConfigCode,sversionname:_this.state.selectedRecord.sversionname,//  nneedautocomplete: this.state.selectedRecord['Auto Complete'] ? this.state.selectedRecord['Auto Complete'] : transactionStatus.NO,\n//  nneedautoapproval: this.state.selectedRecord['Auto Approval'] ? this.state.selectedRecord['Auto Approval'] : transactionStatus.NO,\nnautoapprovalstatus:_this.props.Login.userRoleTree&&_this.props.Login.userRoleTree.length>0&&_this.state.selectedRecord[_this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus?_this.state.selectedRecord[_this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus:transactionStatus.NA,nautodescisionstatus:isAutoApprovalVersion?transactionStatus.PASS:_this.props.Login.userRoleTree&&_this.props.Login.userRoleTree.length>0&&_this.state.selectedRecord[_this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus?_this.state.selectedRecord[_this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0]||transactionStatus.DRAFT:transactionStatus.DRAFT,nautoallot:_this.state.selectedRecord['IDS_AUTOALLOT']?_this.state.selectedRecord['IDS_AUTOALLOT']:transactionStatus.NO,nneedjoballocation:_this.state.selectedRecord['IDS_JOBALLOCATION']?_this.state.selectedRecord['IDS_JOBALLOCATION']:transactionStatus.NO,nstatus:transactionStatus.ACTIVE},temp1);}else{_inputData2['approveconfigversion']={napprovalconfigcode:_this.props.Login.masterData.realApprovalConfigCode,napproveconfversionno:-1,ntransactionstatus:transactionStatus.DRAFT,ntreeversiontempcode:_this.props.Login.userRoleTree[0].ntreeversiontempcode,sapproveconfversiondesc:'-',nsitecode:_this.props.Login.userInfo.nmastersitecode,nstatus:transactionStatus.ACTIVE};var _temp={};_this.props.Login.versionConfig.map(function(temp){if(temp.ntranscode===transactionStatus.AUTOAPPROVAL){_temp['nneedautoapproval']=_this.state.selectedRecord[temp.stransdisplaystatus]?_this.state.selectedRecord[temp.stransdisplaystatus]:transactionStatus.NO;}else if(temp.ntranscode===transactionStatus.AUTOCOMPLETE){_temp['nneedautocomplete']=_this.state.selectedRecord[temp.stransdisplaystatus]?_this.state.selectedRecord[temp.stransdisplaystatus]:transactionStatus.NO;}});_inputData2['approvalconfigautoapproval']=_objectSpread({napprovalconfigcode:_this.props.Login.masterData.realApprovalConfigCode,sversionname:_this.state.selectedRecord.sversionname,// nneedautocomplete: this.state.selectedRecord['Auto Complete'] ? this.state.selectedRecord['Auto Complete'] : transactionStatus.NO,\n//  nneedautoapproval: this.state.selectedRecord['Auto Approval'] ? this.state.selectedRecord['Auto Approval'] : transactionStatus.NO,\nnautoapprovalstatus:_this.props.Login.userRoleTree&&_this.props.Login.userRoleTree.length>0&&_this.state.selectedRecord[_this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus?_this.state.selectedRecord[_this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus:transactionStatus.NA,nautodescisionstatus:isAutoApprovalVersion?transactionStatus.PASS:_this.props.Login.userRoleTree&&_this.props.Login.userRoleTree.length>0&&_this.state.selectedRecord[_this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus?_this.state.selectedRecord[_this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0]||transactionStatus.DRAFT:transactionStatus.DRAFT,nautoallot:_this.state.selectedRecord['IDS_AUTOALLOT']?_this.state.selectedRecord['IDS_AUTOALLOT']:transactionStatus.NO,nneedjoballocation:_this.state.selectedRecord['IDS_JOBALLOCATION']?_this.state.selectedRecord['IDS_JOBALLOCATION']:transactionStatus.NO,nstatus:transactionStatus.ACTIVE},_temp);}finalInputData['approvalconfigversion']=_inputData2;finalInputData['userinfo']=_this.props.Login.userInfo;_inputParam2={methodUrl:'ApprovalConfigVersion',classUrl:_this.props.Login.inputParam.classUrl,displayName:\"IDS_APPROVALCONFIG\",inputData:finalInputData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,postParam:postParam,searchRef:_this.searchRef};var _masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var _updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:_inputParam2,masterData:_masterData},saveType:saveType,openModal:true,operation:_this.props.Login.operation,screenName:_this.props.intl.formatMessage({id:\"IDS_APPROVALCONFIG\"})}};_this.props.updateStore(_updateInfo);}else{_this.props.crudMaster(_inputParam2,_masterData,\"openModal\");}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_FILLDETAILSFOR\"})+\" \"+errormessage.join(\",\"));}}};_this.ConfirmDelete=function(deleteId){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteApprovalConfigVersion(deleteId);});};_this.onInputOnChange=function(event,role,action){var selectedRecord=_this.state.selectedRecord||{};if(role){var roleDetails=_this.state.selectedRecord[role.nuserrolecode]||{};var fieldName=event.target.name.split('_')[0]+'_'+event.target.name.split('_')[1];var actionArray=selectedRecord[\"actionStatus_\".concat(role.nuserrolecode)]||[];if(event.target.type==='checkbox'){if(action){if(event.target.checked){actionArray.push(action.ntranscode);}else{actionArray.splice(actionArray.indexOf(action.ntranscode),1);}selectedRecord[\"actionStatus_\".concat(role.nuserrolecode)]=actionArray;}roleDetails[fieldName]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;if(fieldName==='IDS_PARTIALAPPROVAL'&&roleDetails[\"IDS_PARTIALAPPROVAL\"]&&roleDetails[\"IDS_PARTIALAPPROVAL\"]===transactionStatus.YES){roleDetails['IDS_SECTIONWISEAPPROVE']=transactionStatus.NO;}selectedRecord[role.nuserrolecode]=roleDetails;}else{roleDetails[fieldName]=event.target.value;selectedRecord[role.nuserrolecode]=roleDetails;}}else{if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{if(event.target.name==='sviewname'){selectedRecord[event.target.name]=event.target.value.replace(/[^\\w\\s]/gi,\"\");}else{selectedRecord[event.target.name]=event.target.value;}}}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,role,comboName){var selectedRecord=_this.state.selectedRecord||{};if(role){var roleDetails=_this.state.selectedRecord[role.nuserrolecode]||{};var fieldName=comboName.split('_')[0];var filterArray=[];roleDetails[fieldName]=[];if(comboData){selectedRecord[comboName]=comboData;if(fieldName==='checklist'){selectedRecord[\"checklistVersion_\".concat(role.nuserrolecode)]={label:comboData.item.schecklistversionname,value:comboData.item.nchecklistversioncode};filterArray=comboData.item.nchecklistversioncode;}else{if(Array.isArray(comboData)){comboData.map(function(item){return filterArray.push(item.value);});}else{filterArray=comboData.value;}}roleDetails[fieldName]=filterArray;selectedRecord[role.nuserrolecode]=roleDetails;}else{selectedRecord[comboName]=[];filterArray=[];roleDetails[fieldName]=filterArray;selectedRecord[role.nuserrolecode]=roleDetails;}_this.setState({selectedRecord:selectedRecord});}else{selectedRecord[comboName]=comboData;if(comboName==='regtype'){_this.props.getCopySubType(comboData,selectedRecord,_this.props.Login.userInfo,_this.props.Login.masterData,_this.props.Login.optCopyRegType);}else{_this.setState({selectedRecord:selectedRecord});}}};_this.onFilterComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};var approvalSubTypeValue=_this.props.Login.masterData.approvalSubTypeValue;var registrationTypeValue=_this.props.Login.masterData.registrationTypeValue;var registrationSubTypeValue;if(comboData){selectedRecord[fieldName]=comboData.value;var inputData={};if(fieldName==='napprovalsubtypecode'){approvalSubTypeValue=comboData;inputData={nFlag:2,napprovalsubtypecode:comboData.value,userinfo:_this.props.Login.userInfo};}else if(fieldName==='nregtypecode'){registrationTypeValue=comboData;inputData={nFlag:3,napprovalsubtypecode:approvalSubTypeValue.value,nregtypecode:comboData.value,userinfo:_this.props.Login.userInfo};}else if(fieldName==='nregsubtypecode'){registrationSubTypeValue=comboData;inputData={nFlag:4,napprovalsubtypecode:approvalSubTypeValue.value,nregtypecode:registrationTypeValue.value,nregsubtypecode:comboData.value,userinfo:_this.props.Login.userInfo};}if(fieldName==='ntreeversiontempcode'){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{userroleTemplateValue:comboData})}};_this.props.updateStore(updateInfo);}else{var oldState={approvalsubtype:_this.props.Login.masterData.approvalsubtype,registrationtype:_this.props.Login.masterData.registrationType,registrationsubtype:_this.props.Login.masterData.registrationSubType,approvalSubTypeValue:approvalSubTypeValue,registrationTypeValue:registrationTypeValue,registrationSubTypeValue:registrationSubTypeValue,RegistrationTypeList:_this.state.RegistrationTypeList,RegistrationSubTypeList:_this.state.RegistrationSubTypeList};var inputParamData={inputData:inputData,masterData:_this.props.Login.masterData};_this.props.getFilterChange(inputParamData,oldState);}}else{selectedRecord[fieldName]=\"\";if(fieldName==='napprovalsubtypecode'){_this.approvalSubTypeValue=[];registrationTypeValue=[];registrationSubTypeValue=[];}else if(fieldName==='nregtypecode'){registrationTypeValue=[];registrationSubTypeValue=[];}else{registrationSubTypeValue=[];}_this.setState({selectedRecord:selectedRecord});}// this.searchRef.current.value = \"\"\n};_this.getApprovalConfigurationVersion=function(){if(_this.props.Login.masterData.approvalSubTypeValue){//this.searchRef.current.value = \"\"\nvar masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{realApprovalSubTypeValue:_this.props.Login.masterData.approvalSubTypeValue?_this.props.Login.masterData.approvalSubTypeValue:-1,realRegistrationTypeValue:_this.props.Login.masterData.registrationTypeValue?_this.props.Login.masterData.registrationTypeValue:-1,realRegistrationSubTypeValue:_this.props.Login.masterData.registrationSubTypeValue?_this.props.Login.masterData.registrationSubTypeValue:-1,realApprovalConfigCode:_this.props.Login.masterData.approvalConfigCode||-1,realTreeVersionTemplateValue:_this.props.Login.masterData.userroleTemplateValue||-1});var inputData={napprovalsubtypecode:_this.props.Login.masterData.approvalSubTypeValue?_this.props.Login.masterData.approvalSubTypeValue.value:-1,napprovalconfigcode:_this.props.Login.masterData.approvalConfigCode,ntreeversiontempcode:_this.props.Login.masterData.userroleTemplateValue.value,userinfo:_this.props.Login.userInfo};var inputParamData={inputData:inputData,masterData:masterData,searchRef:_this.searchRef};_this.props.getApprovalConfigurationVersion(inputParamData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_APPROVALSUBTYPENOTAVAILABLE\"}));}};_this.reloadData=function(){// this.searchRef.current.value = \"\";\n// const inputParam = {\n//     inputData: { \"userinfo\": this.props.Login.userInfo },\n//     classUrl: \"approvalconfig\",\n//     methodUrl: \"ApprovalConfigFilter\",\n//     userInfo: this.props.Login.userInfo,\n//     displayName: \"IDS_APPROVALCONFIG\"\n// };\n// this.props.callService(inputParam);\n_this.getApprovalConfigurationVersion();};_this.userRoleAccordion=function(userRoleList){var accordionMap=new Map();userRoleList=sortData(userRoleList,'ascending','nlevelno');userRoleList.map(function(role){return accordionMap.set(role.napprovalconfigrolecode,/*#__PURE__*/React.createElement(UserRoleAccordion,{role:role,roleConfig:_this.props.Login.masterData.roleConfig,userRoleControlRights:_this.state.userRoleControlRights,controlMap:_this.state.controlMap,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,deleteRecord:_this.deleteRecord,tabDetail:_this.tabDetail(role),onTabOnChange:_this.onTabOnChange,approvalSubTypeValue:_this.props.Login.masterData.approvalSubTypeValue}));});return accordionMap;};_this.tabDetail=function(){var selectedRole=_this.props.Login.masterData.selectedRole?_this.props.Login.masterData.selectedRole:_this.props.Login.masterData.approvalconfigRoleNames&&_this.props.Login.masterData.approvalconfigRoleNames.length>0&&sortData(_this.props.Login.masterData.approvalconfigRoleNames,'ascending','nlevelno')[0];var tabMap=new Map();tabMap.set(\"IDS_FILTERSTATUS\",/*#__PURE__*/React.createElement(FilterStatusTab,{filterData:process(_this.props.Login.masterData.roleFilters?// sortData(this.props.Login.masterData.roleFilters) : [],\n// { skip: this.state.dataState.skip, take: this.state.dataState.take })}\nsortData(_this.props.Login.masterData.roleFilters):[],_this.state.filterStatusState),setDefault:_this.props.setDefault,selectedRole:selectedRole,napprovalsubtypecode:_this.approvalSubTypeValue.value,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,dataState:_this.state.filterStatusState,dataStateChange:function dataStateChange(event){return _this.setState({filterStatusState:event.dataState});},screenName:\"IDS_FILTERSTATUS\"}));tabMap.set(\"IDS_VALIDATIONSTATUS\",/*#__PURE__*/React.createElement(ValidationStatusTab,{validationStatus:process(_this.props.Login.masterData.roleValidations?sortData(_this.props.Login.masterData.roleValidations):[],_this.state.validationStatusState)// sortData(this.props.Login.masterData.roleValidations) : [],\n// { skip: this.state.dataState.skip, take: this.state.dataState.take })}\n,selectedRole:selectedRole,napprovalsubtypecode:_this.approvalSubTypeValue.value,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,dataState:_this.state.validationStatusState,dataStateChange:function dataStateChange(event){return _this.setState({validationStatusState:event.dataState});},screenName:\"IDS_VALIDATIONSTATUS\"}));// if (this.props.Login.masterData.roleDecisions && this.props.Login.masterData.roleDecisions.length > 0) {\n//     tabMap.set(\"IDS_DECISIONSTATUS\",\n//         <DecisionStatusTab\n//             decisionData={process(this.props.Login.masterData.roleDecisions ? sortData(this.props.Login.masterData.roleDecisions) : [],\n//                 { skip: this.state.dataState.skip, take: this.state.dataState.take })}\n//             setDefault={this.props.setDefault}\n//             selectedRole={selectedRole}\n//             napprovalsubtypecode={this.approvalSubTypeValue.value}\n//             userInfo={this.props.Login.userInfo}\n//             masterData={this.props.Login.masterData}\n//             screenName=\"IDS_DECISIONSTATUS\"\n//         />)\n// }\ntabMap.set(\"IDS_ACTIONSTATUS\",/*#__PURE__*/React.createElement(ActionStatusTab,{actionData:process(_this.props.Login.masterData.roleActions?sortData(_this.props.Login.masterData.roleActions):[],{skip:_this.state.dataState.skip,take:_this.state.dataState.take}),setDefault:_this.props.setDefault,selectedRole:selectedRole,napprovalsubtypecode:_this.approvalSubTypeValue.value,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,screenName:\"IDS_ACTIONSTATUS\"}));return tabMap;};_this.onTabOnChange=function(tabProps){var screenName=tabProps.screenName;var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName}};_this.props.updateStore(updateInfo);};var dataState={skip:0,take:10};var filterStatusState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var validationStatusState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={userRoleControlRights:[],controlMap:new Map(),openModal:false,masterStatus:\"\",error:\"\",approvalConfigCode:-1,dataResult:[],dataState:dataState,selectedRecord:{},ApprovalsubtypeList:[],RegistrationTypeList:[],RegistrationSubTypeList:[],UserRoleTemplateList:[],filterStatusState:filterStatusState,validationStatusState:validationStatusState};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(ApprovalConfig,[{key:\"render\",value:function render(){var _this2=this;var versionStatusCSS=\"outline-secondary\";if(this.props.Login.masterData.selectedVersion&&this.props.Login.masterData.selectedVersion.ntransactionstatus===transactionStatus.APPROVED){versionStatusCSS=\"outline-success\";}else if(this.props.Login.masterData.selectedVersion&&this.props.Login.masterData.selectedVersion.ntransactionstatus===transactionStatus.RETIRED){versionStatusCSS=\"outline-danger\";}var editId=this.state.controlMap.has(\"EditApprovalConfig\")&&this.state.controlMap.get(\"EditApprovalConfig\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteApprovalConfig\")&&this.state.controlMap.get(\"DeleteApprovalConfig\").ncontrolcode;var approveId=this.state.controlMap.has(\"ApproveApprovalConfig\")&&this.state.controlMap.get(\"ApproveApprovalConfig\").ncontrolcode;var copyId=this.state.controlMap.has(\"CopyApprovalConfig\")&&this.state.controlMap.get(\"CopyApprovalConfig\").ncontrolcode;var addId=this.state.controlMap.has(\"AddApprovalConfig\")&&this.state.controlMap.get(\"AddApprovalConfig\").ncontrolcode;this.approvalSubTypeValue=this.props.Login.masterData.realApprovalSubTypeValue?this.props.Login.masterData.realApprovalSubTypeValue:this.props.Login.masterData.approvalSubTypeValue?this.props.Login.masterData.approvalSubTypeValue:this.props.Login.masterData.approvalsubtype?this.props.Login.masterData.approvalsubtype.length>0?{value:sortData(this.props.Login.masterData.approvalsubtype,'ascending','napprovalsubtypecode')[0].napprovalsubtypecode,label:sortData(this.props.Login.masterData.approvalsubtype,'ascending','napprovalsubtypecode')[0].ssubtypename}:{}:{};var filterParam={inputListName:\"versionData\",selectedObject:\"selectedVersion\",primaryKeyField:\"napproveconfversioncode\",searchFieldList:[\"sversionname\",\"sversionstatus\",\"sapproveconfversiondesc\"],fetchUrl:\"approvalconfig/getApprovalConfigVersion\",fecthInputObject:{napprovalsubtypecode:this.approvalSubTypeValue.value,userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,sortField:\"napproveconfversioncode\",sortOrder:\"descending\",//NIBSCRT-2294\nunchangeList:[\"approvalsubtype\",\"approvalSubTypeValue\",\"registrationType\",\"registrationTypeValue\",\"registrationSubType\",\"registrationSubTypeValue\",\"ApprovalsubtypeList\",\"RegistrationTypeList\",\"RegistrationSubTypeList\",\"treeVersionTemplate\",\"userroleTemplateValue\",\"realApprovalSubTypeValue\",\"realRegistrationTypeValue\",\"realRegistrationSubTypeValue\",\"realTreeVersionTemplateValue\",\"approvalConfigCode\",\"realApprovalConfigCode\"]};var selectedRole=this.props.Login.masterData.selectedRole?this.props.Login.masterData.selectedRole:this.props.Login.masterData.approvalconfigRoleNames&&this.props.Login.masterData.approvalconfigRoleNames.length>0&&sortData(this.props.Login.masterData.approvalconfigRoleNames,'ascending','nlevelno')[0];var mandatoryFields=[{\"idsName\":\"IDS_VERSIONNAME\",\"dataField\":\"sversionname\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];this.props.Login.operation!=='copy'&&this.props.Login.userRoleTree&&this.props.Login.userRoleTree.map(function(role){mandatoryFields.push({\"idsName\":\"IDS_APPROVALSTATUS\",\"alertSuffix\":\" - \".concat(role.suserrolename),\"dataField\":\"approvalstatus_\".concat(role.nuserrolecode),\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});mandatoryFields.push({\"idsName\":\"IDS_FILTERSTATUS\",\"alertSuffix\":\" - \".concat(role.suserrolename),\"dataField\":\"filterstatus_\".concat(role.nuserrolecode),\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});mandatoryFields.push({\"idsName\":\"IDS_VALIDATIONSTATUS\",\"alertSuffix\":\" - \".concat(role.suserrolename),\"dataField\":\"validationstatus_\".concat(role.nuserrolecode),\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});if(_this2.props.Login.decisionStatusOptions&&_this2.props.Login.decisionStatusOptions.length>0){mandatoryFields.push({\"idsName\":\"IDS_DECISIONSTATUS\",\"alertSuffix\":\" - \".concat(role.suserrolename),\"dataField\":\"decisionstatus_\".concat(role.nuserrolecode)});}return null;});var breadCrumbData=[];if(this.props.Login.masterData.realApprovalSubTypeValue&&this.props.Login.masterData.realApprovalSubTypeValue.value===ApprovalSubType.TESTRESULTAPPROVAL){breadCrumbData=[{\"label\":\"IDS_APPROVALSUBTYPE\",\"value\":this.props.Login.masterData.realApprovalSubTypeValue?this.props.Login.masterData.realApprovalSubTypeValue.label:\"NA\"},{\"label\":\"IDS_REGISTRATIONTYPE\",\"value\":this.props.Login.masterData.realRegistrationTypeValue?this.props.Login.masterData.realRegistrationTypeValue.label:\"NA\"},{\"label\":\"IDS_REGISTRATIONSUBTYPE\",\"value\":this.props.Login.masterData.realRegistrationSubTypeValue?this.props.Login.masterData.realRegistrationSubTypeValue.label:\"NA\"},{\"label\":\"IDS_USERROLETEMPLATE\",\"value\":this.props.Login.masterData.realTreeVersionTemplateValue?this.props.Login.masterData.realTreeVersionTemplateValue.label:\"NA\"}];}else{breadCrumbData=[{\"label\":\"IDS_APPROVALSUBTYPE\",\"value\":this.props.Login.masterData.realApprovalSubTypeValue?this.props.Login.masterData.realApprovalSubTypeValue.label:\"NA\"},{\"label\":\"IDS_USERROLETEMPLATE\",\"value\":this.props.Login.masterData.realTreeVersionTemplateValue?this.props.Login.masterData.realTreeVersionTemplateValue.label:\"NA\"}];}// console.log(\"this.approvalSubTypeValue:\", Object.keys(this.approvalSubTypeValue).length);\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMaster,{filterColumnData:this.props.filterColumnData,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,screenName:this.props.intl.formatMessage({id:\"IDS_APPROVALCONFIG\"}),masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.versionData,getMasterDetail:function getMasterDetail(version){return _this2.props.getApprovalConfigVersion(version,_this2.approvalSubTypeValue.value,_this2.props.Login.userInfo,_this2.props.Login.masterData);},selectedMaster:this.props.Login.masterData.selectedVersion,primaryKeyField:\"napproveconfversioncode\",mainField:\"sversionname\",firstField:\"sapproveconfversiondesc\",secondField:\"sversionstatus\",isIDSField:\"Yes\",searchRef:this.searchRef,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,openModal:function openModal(){return _this2.props.openModal(\"create\",_this2.props.Login.masterData.realApprovalConfigCode,_this2.approvalSubTypeValue.value,_this2.props.Login.userInfo,addId,_this2.props.Login.masterData.realTreeVersionTemplateValue?_this2.props.Login.masterData.realTreeVersionTemplateValue.value:-10);},needAccordianFilter:false,reloadData:this.reloadData,hidePaging:true,showFilterIcon:true,onFilterSubmit:this.getApprovalConfigurationVersion,filterComponent:[{\"IDS_SAMPLEFILTER\":/*#__PURE__*/React.createElement(SampleFilter,{selectedRecord:this.state.selectedRecord||{},filterComboChange:this.onFilterComboChange,approvalSubTypeOptions:this.state.ApprovalsubtypeList,approvalSubTypeValue:this.props.Login.masterData.approvalSubTypeValue,registrationTypeOptions:this.state.RegistrationTypeList,registrationTypeValue:this.props.Login.masterData.registrationTypeValue,registrationSubTypeOptions:this.state.RegistrationSubTypeList,registrationSubTypeValue:this.props.Login.masterData.registrationSubTypeValue,userroleTemplateOptions:this.state.UserRoleTemplateList,userroleTemplateValue:this.props.Login.masterData.userroleTemplateValue})}]})),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.selectedVersion?Object.entries(this.props.Login.masterData.selectedVersion).length>0?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"product-title-main\"},this.props.Login.masterData.selectedVersion.sversionname)),/*#__PURE__*/React.createElement(Card.Subtitle,{className:\"readonly-text font-weight-normal\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},\"\".concat(this.props.intl.formatMessage({id:\"IDS_VERSIONNO\"}),\":\").concat(this.props.Login.masterData.selectedVersion.sapproveconfversiondesc),/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined \".concat(versionStatusCSS,\" btn-sm ml-3\")},this.props.Login.masterData.selectedVersion.sversionstatus))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\",style:{float:\"right\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline \"},/*#__PURE__*/React.createElement(Nav.Link,{hidden:this.state.userRoleControlRights.indexOf(editId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"})//  data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.props.getApprovalConfigEditData(_this2.props.Login.masterData.selectedVersion.napproveconfversioncode,_this2.approvalSubTypeValue.value,_this2.props.Login.userInfo,_this2.props.Login.masterData,editId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt,title:this.props.intl.formatMessage({id:\"IDS_EDIT\"})})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"})//  data-for=\"tooltip_list_wrap\"\n,hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this2.ConfirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{hidden:this.state.userRoleControlRights.indexOf(approveId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_APPROVE\"})// data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.approveVersion(approveId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faThumbsUp})),/*#__PURE__*/React.createElement(Nav.Link,{hidden:this.state.userRoleControlRights.indexOf(copyId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COPY\"})//  data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.props.copyVersion(_this2.approvalSubTypeValue.value,_this2.props.Login.userInfo,_this2.props.Login.masterData,copyId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCopy,title:this.props.intl.formatMessage({id:\"IDS_COPY\"})}))))))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Text,null,/*#__PURE__*/React.createElement(Row,null,this.props.Login.masterData.versionConfig?this.props.Login.masterData.versionConfig.map(function(item){return/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:item.stransdisplaystatus})),/*#__PURE__*/React.createElement(ReadOnlyText,null,_this2.props.Login.masterData.selectedVersion[\"\".concat(item.ntranscode)])));}):\"\"),/*#__PURE__*/React.createElement(Row,null,this.props.Login.masterData.approvalSubTypeValue&&this.props.Login.masterData.approvalSubTypeValue!==undefined&&this.props.Login.masterData.approvalSubTypeValue.value===2?/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_VIEWNAME\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.selectedVersion.sviewname))):\"\")),/*#__PURE__*/React.createElement(Row,{oGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,{className:\"at-tabs\"},this.props.Login.masterData?this.props.Login.masterData.approvalconfigRoleNames&&this.props.Login.masterData.approvalconfigRoleNames.length>0?/*#__PURE__*/React.createElement(CustomAccordion,{key:\"UserRoles\",accordionTitle:\"suserrolename\",accordionComponent:this.userRoleAccordion(this.props.Login.masterData.approvalconfigRoleNames),inputParam:{masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,napprovalsubtypecode:this.approvalSubTypeValue.value},accordionClick:this.props.getRoleDetails,accordionPrimaryKey:\"napprovalconfigrolecode\",accordionObjectName:\"role\",selectedKey:selectedRole.napprovalconfigrolecode}):\"\":\"\"))))):\"\":\"\"))))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{onSaveClick:this.onSaveClick,operation:this.props.Login.operation,screenName:\"IDS_APPROVALCONFIG\",closeModal:this.handleClose,show:this.props.Login.openModal,inputParam:this.props.Login.inputParam,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.operation==='approve'?[{\"idsName\":\"IDS_VIEWNAME\",\"dataField\":\"sviewname\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_TEMPLATEMAPPING\",\"dataField\":\"ndesigntemplatemappingcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}]:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.operation==='approve'?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ndesigntemplatemappingcode\",formLabel:this.props.intl.formatMessage({id:\"IDS_TEMPLATEMAPPING\"}),placeholder:\"Please Select...\",options:this.props.Login.designTemplateMapping// optionId=\"ntimezonecode\"\n// optionValue=\"stimezoneid\"\n,value:this.state.selectedRecord[\"ndesigntemplatemappingcode\"]//defaultValue={props.selectedRecord[\"ndesigntemplatemapping\"]}\n,isMandatory:true,isMulti:false,isSearchable:false,isClearable:false,isDisabled:true,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.onComboChange(event,'ndesigntemplatemappingcode');}}),/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_VIEWNAME\"}),name:\"sviewname\",type:\"text\",onChange:function onChange(event){return _this2.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_VIEWNAME\"}),value:this.state.selectedRecord[\"sviewname\"],isMandatory:true//required={true}\n,maxLength:100})))):/*#__PURE__*/React.createElement(AddApprovalConfig,{selectedRecord:this.state.selectedRecord?this.state.selectedRecord:{},userRoleTree:this.props.Login.userRoleTree,approvalSubTypeValue:this.approvalSubTypeValue,onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,approvalStatusOptions:this.props.Login.approvalStatusOptions,approvalStatusValue:this.props.Login.approvalStatusValue,filterStatusOptions:this.props.Login.filterStatusOptions,filterStatusValues:this.props.Login.filterStatusValues,topLevelValidStatusOptions:this.props.Login.topLevelValidStatusOptions,validationStatusOptions:this.props.Login.validationStatusOptions,validationStatusValues:this.props.Login.validationStatusValues,decisionStatusOptions:this.props.Login.decisionStatusOptions,decisionStatusValues:this.props.Login.decisionStatusValues,actionStatus:this.props.Login.actionStatus,checklistOptions:this.props.Login.checklistOptions,checklistValues:this.props.Login.checklistValues,roleConfig:this.props.Login.roleConfig,versionConfig:this.props.Login.versionConfig,operation:this.props.Login.operation,nsubType:this.approvalSubTypeValue.value,registrationTypeOptions:this.props.Login.optCopyRegType,registrationTypeValue:this.state.registrationTypeValue,registrationSubTypeOptions:this.props.Login.optCopyRegSubType,registrationSubTypeValue:this.state.registrationSubTypeValue,selectedVersion:this.props.Login.masterData.selectedVersion,masterData:this.props.Login.masterData})}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this$state=this.state,selectedRecord=_this$state.selectedRecord,userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,ApprovalsubtypeList=_this$state.ApprovalsubtypeList,RegistrationTypeList=_this$state.RegistrationTypeList,RegistrationSubTypeList=_this$state.RegistrationSubTypeList,UserRoleTemplateList=_this$state.UserRoleTemplateList,filterStatusState=_this$state.filterStatusState,validationStatusState=_this$state.validationStatusState;var updateState=false;if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;updateState=true;}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);// const ApprovalsubtypeListMap = constructOptionList(this.props.Login.masterData.approvalsubtype || [], \"napprovalsubtypecode\", \"ssubtypename\", 'ntemplatecode','ascending', false);\n// const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.registrationType || [], \"nregtypecode\", \"sregtypename\", 'ascending', 'nregtypecode', false);\n// const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.registrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nregsubtypecode', false);\nvar ApprovalsubtypeListMap=constructOptionList(this.props.Login.masterData.approvalsubtype||[],\"napprovalsubtypecode\",\"ssubtypename\",'ntemplatecode','ascending',false);var RegistrationTypeListMap=constructOptionList(this.props.Login.masterData.registrationType||[],\"nregtypecode\",\"sregtypename\",'nsorter','ascending',false);var RegistrationSubTypeListMap=constructOptionList(this.props.Login.masterData.registrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'nsorter','ascending',false);var UserRoleTemplateListMap=constructOptionList(this.props.Login.masterData.treeVersionTemplate||[],\"ntreeversiontempcode\",\"sversiondescription\",'ntransactionstatus','descending',false);ApprovalsubtypeList=ApprovalsubtypeListMap.get(\"OptionList\");RegistrationTypeList=RegistrationTypeListMap.get(\"OptionList\");RegistrationSubTypeList=RegistrationSubTypeListMap.get(\"OptionList\");UserRoleTemplateList=UserRoleTemplateListMap.get(\"OptionList\");updateState=true;}if(this.props.Login.masterData!==previousProps.Login.masterData){//this.setState({  RegistrationTypeList,RegistrationSubTypeList,templateVersionOptionList});  \n// RegistrationTypeList=this.props.Login.masterData.RegistrationTypeList\n// RegistrationSubTypeList=this.props.Login.masterData.RegistrationSubTypeList\nvar _RegistrationTypeListMap=constructOptionList(this.props.Login.masterData.registrationType||[],\"nregtypecode\",\"sregtypename\",'nsorter','ascending',false);var _RegistrationSubTypeListMap=constructOptionList(this.props.Login.masterData.registrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'nsorter','ascending',false);var _UserRoleTemplateListMap=constructOptionList(this.props.Login.masterData.treeVersionTemplate||[],\"ntreeversiontempcode\",\"sversiondescription\",'ntransactionstatus','descending',false);RegistrationTypeList=_RegistrationTypeListMap.get(\"OptionList\");RegistrationSubTypeList=_RegistrationSubTypeListMap.get(\"OptionList\");UserRoleTemplateList=_UserRoleTemplateListMap.get(\"OptionList\");updateState=true;// if (this.props.dataState === undefined) {\n//     filterStatusState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\n//     validationStatusState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\n// }\n}if(updateState){this.setState({selectedRecord:selectedRecord,userRoleControlRights:userRoleControlRights,controlMap:controlMap,ApprovalsubtypeList:ApprovalsubtypeList,RegistrationTypeList:RegistrationTypeList,RegistrationSubTypeList:RegistrationSubTypeList,UserRoleTemplateList:UserRoleTemplateList,filterStatusState:filterStatusState,validationStatusState:validationStatusState});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;}}]);return ApprovalConfig;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,openModal:openModal,updateStore:updateStore,getApprovalConfigVersion:getApprovalConfigVersion,getApprovalConfigEditData:getApprovalConfigEditData,copyVersion:copyVersion,getFilterChange:getFilterChange,validateEsignCredential:validateEsignCredential,getCopySubType:getCopySubType,getRoleDetails:getRoleDetails,setDefault:setDefault,filterColumnData:filterColumnData,getApprovalConfigurationVersion:getApprovalConfigurationVersion,approveVersion:approveVersion})(injectIntl(ApprovalConfig));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/approvalconfig/ApprovalConfig.jsx"],"names":["React","connect","injectIntl","FormattedMessage","toast","callService","crudMaster","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faCopy","faThumbsUp","faTrashAlt","sortData","getControlMap","showEsign","constructOptionList","process","ListMaster","Esign","SampleFilter","AddApprovalConfig","SlideOutModal","ReadOnlyText","ContentPanel","openModal","updateStore","getApprovalConfigVersion","getApprovalConfigEditData","copyVersion","setDefault","validateEsignCredential","getFilterChange","getRoleDetails","getCopySubType","filterColumnData","getApprovalConfigurationVersion","approveVersion","DEFAULT_RETURN","ApprovalSubType","designProperties","transactionStatus","FilterStatusTab","ValidationStatusTab","UserRoleAccordion","CustomAccordion","DecisionStatusTab","ActionStatusTab","BreadcrumbComponent","ConfirmMessage","Affix","FormInput","FormSelectSearch","mapStateToProps","state","Login","ApprovalConfig","props","validateEsign","inputParam","inputData","userInfo","sreason","selectedRecord","nreasoncode","value","spredefinedreason","label","password","screenData","handleClose","loadEsign","operation","updateInfo","typeName","data","selectedId","deleteApprovalConfigVersion","deleteId","masterData","selectedVersion","ntransactionstatus","APPROVED","RETIRED","warn","intl","formatMessage","id","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","napproveconfversioncode","fetchUrl","fecthInputObject","napprovalsubtypecode","approvalSubTypeValue","userinfo","napprovalconfigversioncode","napprovalconfigcode","realApprovalConfigCode","ntreeversiontempcode","realTreeVersionTemplateValue","methodUrl","classUrl","displayName","userRoleControlRights","nformcode","screenName","approveId","nregsubtypecode","registrationSubTypeValue","sregsubtypename","nregtypecode","registrationTypeValue","ncontrolcode","getGridJsondata","templatedata","subSampleCheck","subSampleTemplate","gridItem","gridMoreItem","masterdatefields","masterdateconstraints","masteruniquevalidation","mastercombinationunique","editable","jdynamiccolumns","jnumericcolumns","templatePrimaryKey","mastertemplatefields","sampleAuditFields","sampleAuditEditable","sampleAuditMultilingualFields","sampleQuerybuilderViewCondition","sampleQuerybuilderViewSelect","map","row","children","column","component","index","hasOwnProperty","componentRow","unique","push","LABEL","displayname","VALUE","filterinputtype","comboDataInputObject","inputtype","source","valuemember","displaymember","dateonly","dateConstraintArraySQL","default","columnname","mandatory","templatemandatory","editableuntill","DRAFT","jsondata","griditem","gridmoreitem","approveVersion1","unchangeList","selectedTemplate","sviewname","ndesigntemplatemappingcode","sregtemplatename","sprimarykey","onSaveClick","saveType","formRef","undefined","subTypeCode","approvalconfigversion","sversionname","TESTRESULTAPPROVAL","searchRef","bool","errormessage","approvalconfigrole","filterDetailCount","validationDetailCount","decisionDetailCount","actionDetailCount","userRoleTree","isAutoApprovalVersion","YES","role","approvalconfigrolefilterdetail","approvalconfigrolevalidationdetail","approvalconfigroledecisiondetail","approvalconfigroleactiondetail","nuserrolecode","napprovalconfigrolecode","nchecklistversioncode","checklist","NA","npartialapprovalneed","nsectionwiseapprovalneed","NO","nrecomretestneed","nrecomrecalcneed","nretestneed","nrecalcneed","nlevelno","napprovalstatuscode","approvalstatus","nautoapproval","nautoapprovalstatuscode","nautodescisionstatuscode","decisionstatus","PASS","length","ncorrectionneed","nesignneed","nsitecode","nmastersitecode","nstatus","ACTIVE","filterstatus","filterValue","validationstatus","validationValue","decisionValue","actionValue","suserrolename","finalInputData","temp1","versionConfig","temp","ntranscode","AUTOAPPROVAL","stransdisplaystatus","AUTOCOMPLETE","nautoapprovalstatus","nautodescisionstatus","nautoallot","nneedjoballocation","napproveconfversionno","sapproveconfversiondesc","join","ConfirmDelete","confirmMessage","confirm","onInputOnChange","event","action","roleDetails","fieldName","target","name","split","actionArray","type","checked","splice","indexOf","replace","setState","onComboChange","comboData","comboName","filterArray","item","schecklistversionname","Array","isArray","optCopyRegType","onFilterComboChange","nFlag","userroleTemplateValue","oldState","approvalsubtype","registrationtype","registrationType","registrationsubtype","registrationSubType","RegistrationTypeList","RegistrationSubTypeList","inputParamData","realApprovalSubTypeValue","realRegistrationTypeValue","realRegistrationSubTypeValue","approvalConfigCode","reloadData","userRoleAccordion","userRoleList","accordionMap","Map","set","roleConfig","controlMap","deleteRecord","tabDetail","onTabOnChange","selectedRole","approvalconfigRoleNames","tabMap","roleFilters","filterStatusState","dataState","roleValidations","validationStatusState","roleActions","skip","take","tabProps","settings","parseInt","masterStatus","error","dataResult","ApprovalsubtypeList","UserRoleTemplateList","createRef","versionStatusCSS","editId","has","get","copyId","addId","ssubtypename","filterParam","searchFieldList","sortField","sortOrder","mandatoryFields","decisionStatusOptions","breadCrumbData","searchedData","versionData","version","Object","entries","sversionstatus","float","designTemplateMapping","approvalStatusOptions","approvalStatusValue","filterStatusOptions","filterStatusValues","topLevelValidStatusOptions","validationStatusOptions","validationStatusValues","decisionStatusValues","actionStatus","checklistOptions","checklistValues","optCopyRegSubType","previousProps","updateState","values","ApprovalsubtypeListMap","RegistrationTypeListMap","RegistrationSubTypeListMap","UserRoleTemplateListMap","treeVersionTemplate","modalName","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport { callService, crudMaster } from '../../../actions';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faCopy, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { sortData, getControlMap, showEsign, constructOptionList } from '../../../components/CommonScript'\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ListMaster from '../../../components/list-master/list-master.component';\r\nimport Esign from '../../audittrail/Esign';\r\nimport SampleFilter from './SampleFilter';\r\nimport AddApprovalConfig from './AddApprovalConfig';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport { ReadOnlyText, ContentPanel } from '../../../components/App.styles';\r\nimport {\r\n    openModal, updateStore, getApprovalConfigVersion, getApprovalConfigEditData, copyVersion, setDefault, validateEsignCredential,\r\n    getFilterChange, getRoleDetails, getCopySubType, filterColumnData, getApprovalConfigurationVersion, approveVersion\r\n} from '../../../actions'\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport { ApprovalSubType, designProperties, transactionStatus } from '../../../components/Enumeration';\r\nimport FilterStatusTab from './FilterStatusTab';\r\nimport ValidationStatusTab from './ValidationStatusTab';\r\nimport UserRoleAccordion from './UserRoleAccordion';\r\nimport CustomAccordion from '../../../components/custom-accordion/custom-accordion.component';\r\nimport DecisionStatusTab from './DecisionStatusTab';\r\nimport ActionStatusTab from './ActionStatusTab';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport BreadcrumbComponent from '../../../components/Breadcrumb.Component';\r\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\r\nimport { Affix } from 'rsuite';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass ApprovalConfig extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10,\r\n        };\r\n        const filterStatusState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n        const validationStatusState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n\r\n        this.state = {\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            openModal: false, masterStatus: \"\", error: \"\",\r\n            approvalConfigCode: -1,\r\n            dataResult: [], dataState: dataState, selectedRecord: {},\r\n            ApprovalsubtypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            UserRoleTemplateList: [],\r\n            filterStatusState,\r\n            validationStatusState\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\":\r\n                {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    handleClose = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {}\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    deleteApprovalConfigVersion = (deleteId) => {\r\n\r\n        if (this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.APPROVED ||\r\n            this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }))\r\n        }\r\n        else {\r\n            const postParam = {\r\n                inputListName: \"versionData\", selectedObject: \"selectedVersion\",\r\n                primaryKeyField: \"napproveconfversioncode\",\r\n                primaryKeyValue: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                fetchUrl: \"approvalconfig/getApprovalConfigVersion\",\r\n                fecthInputObject: { napprovalsubtypecode: this.approvalSubTypeValue.value, userinfo: this.props.Login.userInfo },\r\n                // unchangeList: [\"approvalsubtype\", \"approvalSubTypeValue\", \"registrationType\",\r\n                //  \"registrationTypeValue\", \"registrationSubType\", \"registrationSubTypeValue\",\r\n                //     \"ApprovalsubtypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\"]\r\n            }\r\n            const inputData = {\r\n                'approvalconfigversion': {\r\n                    napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                    napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                    napprovalsubtypecode: this.approvalSubTypeValue.value,\r\n                    ntreeversiontempcode: this.props.Login.masterData.realTreeVersionTemplateValue.value,\r\n                    userinfo: this.props.Login.userInfo\r\n                }\r\n            }\r\n            inputData['userinfo'] = this.props.Login.userInfo\r\n            const inputParam = {\r\n                methodUrl: 'ApprovalConfigVersion',\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                displayName: \"IDS_APPROVALCONFIG\",\r\n                inputData: inputData, postParam,\r\n                operation: \"delete\"\r\n\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, operation: \"delete\",\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" })\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    approveVersion = (approveId) => {\r\n        if (this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.APPROVED ||\r\n            this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }))\r\n        } else {\r\n\r\n            if (this.approvalSubTypeValue.value === 2) {\r\n                const inputData = {\r\n                    // 'approvalconfigversion': {\r\n                    napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                    napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                    napprovalsubtypecode: this.approvalSubTypeValue.value,\r\n                    ntreeversiontempcode: this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.value : -1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nregsubtypecode: this.props.Login.masterData.registrationSubTypeValue ? this.props.Login.masterData.registrationSubTypeValue.value : -1,\r\n                    sregsubtypename: this.props.Login.masterData.registrationSubTypeValue ? this.props.Login.masterData.registrationSubTypeValue.label : \"\",\r\n                    nregtypecode: this.props.Login.masterData.registrationTypeValue ? this.props.Login.masterData.registrationTypeValue.value : -1,\r\n                    // nregtypecode:this.props.Login.masterData.registrationTypeValue ? this.props.Login.masterData.registrationTypeValue.value : -1,\r\n                    // }\r\n\r\n                }\r\n                inputData['userinfo'] = this.props.Login.userInfo\r\n                //  inputData['userinfo'] = this.props.Login.userInfo\r\n                const inputParam = {\r\n                    methodUrl: 'ApprovalConfigVersion',\r\n                    classUrl: this.props.Login.inputParam.classUrl,\r\n                    displayName: \"IDS_APPROVALCONFIG\",\r\n                    inputData: inputData,\r\n                    operation: \"approve\", ncontrolcode: approveId\r\n                }\r\n                //const masterData = this.props.Login.masterData;\r\n                this.props.approveVersion(inputParam);\r\n\r\n                // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId)) {\r\n                //     const updateInfo = {\r\n                //         typeName: DEFAULT_RETURN,\r\n                //         data: {\r\n                //             loadEsign: true, screenData: { inputParam, masterData },\r\n                //             openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" }), operation: \"approve\"\r\n                //         }\r\n                //     }\r\n                //     this.props.updateStore(updateInfo);\r\n                // }\r\n                // else {\r\n                //     this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                // }\r\n            } else {\r\n                const inputData = {\r\n                    'approvalconfigversion': {\r\n                        napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                        napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                        napprovalsubtypecode: this.approvalSubTypeValue.value,\r\n                        ntreeversiontempcode: this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.value : -1,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nregsubtypecode: this.props.Login.masterData.registrationSubTypeValue ? this.props.Login.masterData.registrationSubTypeValue.value : -1,\r\n                        sregsubtypename: this.props.Login.masterData.registrationSubTypeValue ? this.props.Login.masterData.registrationSubTypeValue.label : \"\",\r\n                        nregtypecode: this.props.Login.masterData.registrationTypeValue ? this.props.Login.masterData.registrationTypeValue.value : -1,\r\n                    }\r\n\r\n                }\r\n                inputData['userinfo'] = this.props.Login.userInfo\r\n                const inputParam = {\r\n                    methodUrl: 'ApprovalConfigVersion',\r\n                    classUrl: this.props.Login.inputParam.classUrl,\r\n                    displayName: \"IDS_APPROVALCONFIG\",\r\n                    inputData: inputData,\r\n                    operation: \"updateapprove\", ncontrolcode: approveId\r\n                }\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" }), operation: \"approve\"\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    getGridJsondata = (templatedata, subSampleCheck, subSampleTemplate) => {\r\n        let gridItem = [];\r\n        let gridMoreItem = [];\r\n        let masterdatefields = [];\r\n        let masterdateconstraints = [];\r\n        let masteruniquevalidation = [];\r\n        let mastercombinationunique = [];\r\n        let editable = [];\r\n        let jdynamiccolumns = [];\r\n        let jnumericcolumns = [];\r\n        let templatePrimaryKey = \"\";\r\n        let mastertemplatefields = [];\r\n        let sampleAuditFields = [];\r\n        let sampleAuditEditable = [];\r\n        let sampleAuditMultilingualFields = [];\r\n        let sampleQuerybuilderViewCondition = [];\r\n        let sampleQuerybuilderViewSelect = [];\r\n\r\n        templatedata && templatedata.map(row =>\r\n            row.children && row.children.map(column => {\r\n                column.children && column.children.map((component, index) => {\r\n                    //console.log(\"component2:\", component);\r\n                    if (component.hasOwnProperty('children')) {\r\n                        component.children.map(componentRow => {\r\n                            // console.log(\"component row2:\", componentRow);\r\n                            componentRow.unique && masteruniquevalidation.push({ [designProperties.LABEL]: componentRow.label });\r\n                            componentRow.unique && mastercombinationunique.push({ [componentRow.label]: { [designProperties.LABEL]: componentRow.displayname, [designProperties.VALUE]: componentRow.label } })\r\n\r\n\r\n                            templatePrimaryKey = templatePrimaryKey === \"\" && componentRow.unique ? componentRow.label : templatePrimaryKey;\r\n\r\n                            let filterinputtype = \"text\";\r\n                            let comboDataInputObject = {};\r\n\r\n                            if (componentRow.inputtype === 'combo') {\r\n\r\n                                comboDataInputObject = {\r\n                                    \"predefinedtablename\": componentRow.source,\r\n                                    \"predefinedvaluemember\": componentRow.valuemember,\r\n                                    \"predefineddisplaymember\": componentRow.displaymember,\r\n                                    \"predefinedismultilingual\": false,\r\n                                    \"predefinedconditionalString\": \"\\\"\" + componentRow.valuemember + \"\\\"\" + \" > '0' \"\r\n                                };\r\n                                jnumericcolumns.push({\r\n                                    \"columnname\": componentRow.displaymember,\r\n                                    \"displayname\": componentRow.displayname,\r\n                                    \"foriegntablePK\": componentRow.label,\r\n                                    // \"ismultilingual\": true,\r\n                                    // \"conditionstring\": \" and nformcode in (\"+componentRow.table.item.nformcode+\") \",\r\n                                    \"tablecolumnname\": componentRow.valuemember,\r\n                                    \"foriegntablename\": componentRow.source,\r\n                                    ...comboDataInputObject\r\n                                })\r\n\r\n                                sampleQuerybuilderViewCondition.push({\r\n                                    \"columnname\": componentRow.label,\r\n                                    \"displayname\": componentRow.displayname,\r\n                                    \"columntype\": 1,\r\n                                    \"viewvaluemember\": componentRow.label,\r\n                                    \"valuemember\": componentRow.valuemember,\r\n                                    \"displaymember\": componentRow.displaymember,\r\n                                    \"mastertablename\": componentRow.source,\r\n                                    \"needmasterdata\": true,\r\n                                    \"columntypedesc\": \"textinput\",\r\n                                })\r\n\r\n                                sampleQuerybuilderViewSelect.push({\r\n                                    \"columnname\": componentRow.label,\r\n                                    \"displayname\": componentRow.displayname,\r\n                                    \"languagecode\": false\r\n                                })\r\n\r\n                                filterinputtype = \"predefinednumeric\";\r\n                            }\r\n                            // samplesearchfields.push(componentRow.label)\r\n                            if (componentRow.inputtype === 'date') {\r\n                                filterinputtype = \"date\";\r\n                                masterdatefields.push({ [designProperties.VALUE]: componentRow.label, dateonly: componentRow.dateonly || false });\r\n                                masterdateconstraints = componentRow.dateConstraintArraySQL ? [...componentRow.dateConstraintArraySQL, ...masterdateconstraints] : masterdateconstraints;\r\n\r\n                                sampleQuerybuilderViewCondition.push({\r\n                                    \"columnname\": componentRow.label,\r\n                                    \"displayname\": componentRow.displayname,\r\n                                    \"columntype\": 2,\r\n                                    \"columntypedesc\": \"datetime\",\r\n                                })\r\n\r\n                                sampleQuerybuilderViewSelect.push({\r\n                                    \"columnname\": componentRow.label,\r\n                                    \"displayname\": componentRow.displayname,\r\n                                    \"languagecode\": false\r\n                                })\r\n\r\n\r\n                            }\r\n                            if (componentRow.inputtype === 'Numeric' || componentRow.inputtype === 'radio') {\r\n                                filterinputtype = \"numeric\";\r\n\r\n                                if (componentRow.inputtype === 'Numeric') {\r\n                                    sampleQuerybuilderViewCondition.push({\r\n                                        \"columnname\": componentRow.label,\r\n                                        \"displayname\": componentRow.displayname,\r\n                                        \"columntype\": 5,\r\n                                        \"columntypedesc\": \"numericinput\",\r\n                                    })\r\n\r\n                                    sampleQuerybuilderViewSelect.push({\r\n                                        \"columnname\": componentRow.label,\r\n                                        \"displayname\": componentRow.displayname,\r\n                                        \"languagecode\": false\r\n                                    })\r\n                                }\r\n\r\n\r\n\r\n                            }\r\n\r\n                            if (componentRow.inputtype === 'textinput' || componentRow.inputtype === 'email'\r\n                                || componentRow.inputtype === 'textarea' || componentRow.inputtype === 'radio') {\r\n\r\n                                sampleQuerybuilderViewCondition.push({\r\n                                    \"columnname\": componentRow.label,\r\n                                    \"displayname\": componentRow.displayname,\r\n                                    \"columntype\": 1,\r\n                                    \"columntypedesc\": \"textinput\",\r\n                                })\r\n\r\n                                sampleQuerybuilderViewSelect.push({\r\n                                    \"columnname\": componentRow.label,\r\n                                    \"displayname\": componentRow.displayname,\r\n                                    \"languagecode\": false\r\n                                })\r\n\r\n                            }\r\n\r\n                            jdynamiccolumns.push({\r\n                                default: componentRow.unique ? true : false,\r\n                                filterinputtype,\r\n                                columnname: componentRow.label,\r\n                                displayname: componentRow.displayname,\r\n                                ...comboDataInputObject\r\n                            })\r\n                            // displayFields.push({ [designProperties.LABEL]: componentRow.displayname, [designProperties.VALUE]: componentRow.label });\r\n                            // componentRow.templatemandatory && listItem.push({ [designProperties.LABEL]: componentRow.displayname, [designProperties.VALUE]: componentRow.label })\r\n                            if (componentRow.mandatory || componentRow.templatemandatory) {\r\n                                gridItem.push({ [designProperties.LABEL]: componentRow.displayname, [designProperties.VALUE]: componentRow.label })\r\n                                sampleAuditEditable.push(componentRow.label);\r\n                            }\r\n                            else {\r\n                                gridMoreItem.push({ [designProperties.LABEL]: componentRow.displayname, [designProperties.VALUE]: componentRow.label });\r\n                            }\r\n                            mastertemplatefields.push({ [designProperties.LABEL]: componentRow.displayname, [designProperties.VALUE]: componentRow.label })\r\n                            sampleAuditFields.push(componentRow.label);\r\n                            sampleAuditMultilingualFields.push({ [componentRow.label]: componentRow.displayname });\r\n\r\n\r\n                            if (componentRow.templatemandatory) {\r\n                                editable.push({ label: componentRow.label, editableuntill: [] })\r\n                            }\r\n                            else {\r\n                                editable.push({ label: componentRow.label, editableuntill: [transactionStatus.DRAFT] })\r\n                            }\r\n\r\n                            return null;\r\n                        })\r\n                    } else {\r\n                        //console.log(\"component2:\", component);\r\n                        component.unique && masteruniquevalidation.push({ [designProperties.LABEL]: component.label });\r\n                        component.unique && mastercombinationunique.push({ [component.label]: { [designProperties.LABEL]: component.displayname, [designProperties.VALUE]: component.label } })\r\n                        templatePrimaryKey = templatePrimaryKey === \"\" && component.unique ? component.label : templatePrimaryKey;\r\n\r\n\r\n                        let filterinputtype = \"text\";\r\n                        let comboDataInputObject = {};\r\n\r\n                        mastertemplatefields.push({ [designProperties.LABEL]: component.displayname, [designProperties.VALUE]: component.label })\r\n                        sampleAuditFields.push(component.label);\r\n                        sampleAuditMultilingualFields.push({ [component.label]: component.displayname });\r\n\r\n                        if (component.inputtype === 'combo') {\r\n                            filterinputtype = \"predefinednumeric\";\r\n                            comboDataInputObject = {\r\n                                \"predefinedtablename\": component.source,\r\n                                \"predefinedvaluemember\": component.valuemember,\r\n                                \"predefineddisplaymember\": component.displaymember,\r\n                                \"predefinedismultilingual\": false,\r\n                                \"predefinedconditionalString\": \"\\\"\" + component.valuemember + \"\\\"\" + \" > '0'\"\r\n                            };\r\n                            jnumericcolumns.push({\r\n                                \"columnname\": component.label,\r\n                                \"displayname\": component.displayname,\r\n                                \"foriegntablePK\": component.label,\r\n                                // \"ismultilingual\": true,\r\n                                //\"conditionstring\": \" and nformcode in (\" + component.table.item.nformcode + \") \",\r\n                                \"tablecolumnname\": component.column.value,\r\n                                \"foriegntablename\": component.source,\r\n                                ...comboDataInputObject\r\n                            })\r\n\r\n                            sampleQuerybuilderViewCondition.push({\r\n                                \"columnname\": component.label,\r\n                                \"displayname\": component.displayname,\r\n                                \"columntype\": 1,\r\n                                \"viewvaluemember\": component.label,\r\n                                \"valuemember\": component.valuemember,\r\n                                \"displaymember\": component.displaymember,\r\n                                \"mastertablename\": component.source,\r\n                                \"needmasterdata\": true,\r\n                                \"columntypedesc\": \"textinput\",\r\n                            })\r\n\r\n                            sampleQuerybuilderViewSelect.push({\r\n                                \"columnname\": component.label,\r\n                                \"displayname\": component.displayname,\r\n                                \"languagecode\": false\r\n                            })\r\n                        }\r\n                        // samplesearchfields.push(component.label)\r\n                        if (component.inputtype === 'date') {\r\n                            filterinputtype = \"date\";\r\n                            masterdatefields.push({ [designProperties.VALUE]: component.label, dateonly: component.dateonly || false });\r\n                            masterdateconstraints = component.dateConstraintArraySQL ? [...component.dateConstraintArraySQL, ...masterdateconstraints] : masterdateconstraints;\r\n\r\n                            sampleQuerybuilderViewCondition.push({\r\n                                \"columnname\": component.label,\r\n                                \"displayname\": component.displayname,\r\n                                \"columntype\": 2,\r\n                                \"columntypedesc\": \"datetime\",\r\n                            })\r\n\r\n                            sampleQuerybuilderViewSelect.push({\r\n                                \"columnname\": component.label,\r\n                                \"displayname\": component.displayname,\r\n                                \"languagecode\": false\r\n                            })\r\n                        }\r\n                        if (component.inputtype === 'numeric' || component.inputtype === 'radio') {\r\n                            filterinputtype = \"numeric\";\r\n                            if (component.inputtype === 'Numeric') {\r\n                                sampleQuerybuilderViewCondition.push({\r\n                                    \"columnname\": component.label,\r\n                                    \"displayname\": component.displayname,\r\n                                    \"columntype\": 5,\r\n                                    \"columntypedesc\": \"numericinput\",\r\n                                })\r\n\r\n                                sampleQuerybuilderViewSelect.push({\r\n                                    \"columnname\": component.label,\r\n                                    \"displayname\": component.displayname,\r\n                                    \"languagecode\": false\r\n                                })\r\n                            }\r\n                        }\r\n\r\n                        if (component.inputtype === 'textinput' || component.inputtype === 'email'\r\n                            || component.inputtype === 'textarea' || component.inputtype === 'radio') {\r\n\r\n                            sampleQuerybuilderViewCondition.push({\r\n                                \"columnname\": component.label,\r\n                                \"displayname\": component.displayname,\r\n                                \"columntype\": 1,\r\n                                \"columntypedesc\": \"textinput\",\r\n                            })\r\n\r\n                            sampleQuerybuilderViewSelect.push({\r\n                                \"columnname\": component.label,\r\n                                \"displayname\": component.displayname,\r\n                                \"languagecode\": false\r\n                            })\r\n\r\n                        }\r\n\r\n                        jdynamiccolumns.push({\r\n                            default: component.unique ? true : false,\r\n                            columnname: component.label,\r\n                            displayname: component.displayname,\r\n                            filterinputtype,\r\n                            ...comboDataInputObject\r\n                        });\r\n\r\n                        if (component.mandatory || component.templatemandatory) {\r\n                            gridItem.push({ [designProperties.LABEL]: component.displayname, [designProperties.VALUE]: component.label })\r\n                            sampleAuditEditable.push(component.label);\r\n                        } else {\r\n                            gridMoreItem.push({ [designProperties.LABEL]: component.displayname, [designProperties.VALUE]: component.label });\r\n                        }\r\n                        if (component.templatemandatory) {\r\n                            editable.push({ label: component.label, editableuntill: [] });\r\n\r\n                        }\r\n                        else {\r\n                            editable.push({ label: component.label, editableuntill: [transactionStatus.DRAFT] })\r\n                        }\r\n                        return null;\r\n                    }\r\n\r\n                })\r\n            })\r\n        );\r\n\r\n\r\n        if (subSampleCheck) {\r\n            subSampleTemplate && subSampleTemplate.jsondata.map(row =>\r\n                row.children && row.children.map(column => {\r\n                    column.children && column.children.map((component, index) => {\r\n                        //console.log(\"component2:\", component);\r\n                        if (component.hasOwnProperty('children')) {\r\n                            component.children.map(componentRow => {\r\n\r\n                                if (componentRow.inputtype === 'combo') {\r\n                                    sampleQuerybuilderViewCondition.push({\r\n                                        \"columnname\": componentRow.label,\r\n                                        \"displayname\": componentRow.displayname,\r\n                                        \"columntype\": 1,\r\n                                        \"viewvaluemember\": componentRow.label,\r\n                                        \"valuemember\": componentRow.valuemember,\r\n                                        \"displaymember\": componentRow.displaymember,\r\n                                        \"mastertablename\": componentRow.source,\r\n                                        \"needmasterdata\": true,\r\n                                        \"columntypedesc\": \"textinput\",\r\n                                    })\r\n\r\n                                    sampleQuerybuilderViewSelect.push({\r\n                                        \"columnname\": componentRow.label,\r\n                                        \"displayname\": componentRow.displayname,\r\n                                        \"languagecode\": false\r\n                                    })\r\n                                }\r\n\r\n                                if (componentRow.inputtype === 'date') {\r\n                                    sampleQuerybuilderViewCondition.push({\r\n                                        \"columnname\": componentRow.label,\r\n                                        \"displayname\": componentRow.displayname,\r\n                                        \"columntype\": 2,\r\n                                        \"columntypedesc\": \"datetime\",\r\n                                    })\r\n\r\n                                    sampleQuerybuilderViewSelect.push({\r\n                                        \"columnname\": componentRow.label,\r\n                                        \"displayname\": componentRow.displayname,\r\n                                        \"languagecode\": false\r\n                                    })\r\n\r\n\r\n                                }\r\n\r\n                                if (componentRow.inputtype === 'Numeric') {\r\n                                    sampleQuerybuilderViewCondition.push({\r\n                                        \"columnname\": componentRow.label,\r\n                                        \"displayname\": componentRow.displayname,\r\n                                        \"columntype\": 5,\r\n                                        \"columntypedesc\": \"numericinput\",\r\n                                    })\r\n\r\n                                    sampleQuerybuilderViewSelect.push({\r\n                                        \"columnname\": componentRow.label,\r\n                                        \"displayname\": componentRow.displayname,\r\n                                        \"languagecode\": false\r\n                                    })\r\n                                }\r\n\r\n\r\n\r\n                                if (componentRow.inputtype === 'textinput' || componentRow.inputtype === 'email'\r\n                                    || componentRow.inputtype === 'textarea' || componentRow.inputtype === 'radio') {\r\n\r\n                                    sampleQuerybuilderViewCondition.push({\r\n                                        \"columnname\": componentRow.label,\r\n                                        \"displayname\": componentRow.displayname,\r\n                                        \"columntype\": 1,\r\n                                        \"columntypedesc\": \"textinput\",\r\n                                    })\r\n\r\n                                    sampleQuerybuilderViewSelect.push({\r\n                                        \"columnname\": componentRow.label,\r\n                                        \"displayname\": componentRow.displayname,\r\n                                        \"languagecode\": false\r\n                                    })\r\n\r\n                                }\r\n                                return null;\r\n                            })\r\n                        } else {\r\n                            if (component.inputtype === 'combo') {\r\n\r\n                                sampleQuerybuilderViewCondition.push({\r\n                                    \"columnname\": component.label,\r\n                                    \"displayname\": component.displayname,\r\n                                    \"columntype\": 1,\r\n                                    \"viewvaluemember\": component.label,\r\n                                    \"valuemember\": component.valuemember,\r\n                                    \"displaymember\": component.displaymember,\r\n                                    \"mastertablename\": component.source,\r\n                                    \"needmasterdata\": true,\r\n                                    \"columntypedesc\": \"textinput\",\r\n                                })\r\n\r\n                                sampleQuerybuilderViewSelect.push({\r\n                                    \"columnname\": component.label,\r\n                                    \"displayname\": component.displayname,\r\n                                    \"languagecode\": false\r\n                                })\r\n                            }\r\n                            if (component.inputtype === 'date') {\r\n\r\n                                sampleQuerybuilderViewCondition.push({\r\n                                    \"columnname\": component.label,\r\n                                    \"displayname\": component.displayname,\r\n                                    \"columntype\": 2,\r\n                                    \"columntypedesc\": \"datetime\",\r\n                                })\r\n\r\n                                sampleQuerybuilderViewSelect.push({\r\n                                    \"columnname\": component.label,\r\n                                    \"displayname\": component.displayname,\r\n                                    \"languagecode\": false\r\n                                })\r\n                            }\r\n\r\n                            if (component.inputtype === 'Numeric') {\r\n                                sampleQuerybuilderViewCondition.push({\r\n                                    \"columnname\": component.label,\r\n                                    \"displayname\": component.displayname,\r\n                                    \"columntype\": 5,\r\n                                    \"columntypedesc\": \"numericinput\",\r\n                                })\r\n\r\n                                sampleQuerybuilderViewSelect.push({\r\n                                    \"columnname\": component.label,\r\n                                    \"displayname\": component.displayname,\r\n                                    \"languagecode\": false\r\n                                })\r\n                            }\r\n\r\n\r\n                            if (component.inputtype === 'textinput' || component.inputtype === 'email'\r\n                                || component.inputtype === 'textarea' || component.inputtype === 'radio') {\r\n\r\n                                sampleQuerybuilderViewCondition.push({\r\n                                    \"columnname\": component.label,\r\n                                    \"displayname\": component.displayname,\r\n                                    \"columntype\": 1,\r\n                                    \"columntypedesc\": \"textinput\",\r\n                                })\r\n\r\n                                sampleQuerybuilderViewSelect.push({\r\n                                    \"columnname\": component.label,\r\n                                    \"displayname\": component.displayname,\r\n                                    \"languagecode\": false\r\n                                })\r\n\r\n                            }\r\n                            return null;\r\n                        }\r\n\r\n                    })\r\n                })\r\n            );\r\n\r\n\r\n        }\r\n        let jsondata = {\r\n            griditem: gridItem,\r\n            gridmoreitem: gridMoreItem,\r\n            masterdatefields,\r\n            masterdateconstraints,\r\n            masteruniquevalidation,\r\n            editable,\r\n            mastertemplatefields,\r\n            mastercombinationunique,\r\n            sampleAuditFields,\r\n            sampleAuditEditable,\r\n            sampleAuditMultilingualFields\r\n        }\r\n\r\n        //console.log(\"dynamiccolumns:\", jdynamiccolumns);\r\n        return { jsondata, jdynamiccolumns, jnumericcolumns, templatePrimaryKey, sampleQuerybuilderViewCondition, sampleQuerybuilderViewSelect };\r\n    }\r\n\r\n\r\n    approveVersion1 = (approveId) => {\r\n        if (this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.APPROVED ||\r\n            this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }))\r\n        } else {\r\n            const postParam = {\r\n                inputListName: \"versionData\", selectedObject: \"selectedVersion\",\r\n                primaryKeyField: \"napproveconfversioncode\",\r\n                primaryKeyValue: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                fetchUrl: \"approvalconfig/getApprovalConfigVersion\",\r\n                fecthInputObject: { napprovalsubtypecode: this.approvalSubTypeValue.value, userinfo: this.props.Login.userInfo },\r\n                unchangeList: [\"approvalsubtype\", \"approvalSubTypeValue\", \"registrationType\", \"registrationTypeValue\", \"registrationSubType\",\r\n                    \"registrationSubTypeValue\", \"ApprovalsubtypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\"]\r\n            }\r\n\r\n            let { jdynamiccolumns, jnumericcolumns, templatePrimaryKey, sampleQuerybuilderViewCondition, sampleQuerybuilderViewSelect } = this.getGridJsondata(this.props.Login.selectedTemplate &&\r\n                this.props.Login.selectedTemplate, this.props.Login.subSampleCheck, this.props.Login.subSampleTemplate);\r\n            const inputData = {\r\n                'approvalconfigversion': {\r\n                    napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                    napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                    napprovalsubtypecode: this.approvalSubTypeValue.value,\r\n                    ntreeversiontempcode: this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.value : -1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nregsubtypecode: this.props.Login.masterData.registrationSubTypeValue ? this.props.Login.masterData.registrationSubTypeValue.value : -1,\r\n                    sregsubtypename: this.props.Login.masterData.registrationSubTypeValue ? this.props.Login.masterData.registrationSubTypeValue.label : \"\",\r\n                    sviewname: this.state.selectedRecord.sviewname,\r\n                    ndesigntemplatemappingcode: this.state.selectedRecord.ndesigntemplatemappingcode.value,\r\n                    sregtemplatename: this.state.selectedRecord.ndesigntemplatemappingcode.label,\r\n                }, jdynamiccolumns, jnumericcolumns, sprimarykey: templatePrimaryKey,\r\n                sampleQuerybuilderViewCondition, sampleQuerybuilderViewSelect\r\n\r\n            }\r\n            inputData['userinfo'] = this.props.Login.userInfo\r\n\r\n\r\n            // inputData['jsondata'] = this.props.Login.userInfo\r\n            const inputParam = {\r\n                methodUrl: 'ApprovalConfigVersion',\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                displayName: \"IDS_APPROVALCONFIG\",\r\n                inputData: inputData, postParam,\r\n                operation: \"updateapprove\"\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" }), operation: \"approve\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let postParam = undefined;\r\n        if (this.props.Login.operation === \"copy\") {\r\n\r\n            const subTypeCode = this.approvalSubTypeValue.value;\r\n\r\n            const inputData = {\r\n                approvalconfigversion: {\r\n                    napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                    napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                    napprovalsubtypecode: subTypeCode,\r\n                    sversionname: this.state.selectedRecord.sversionname,\r\n                    nregtypecode: subTypeCode === ApprovalSubType.TESTRESULTAPPROVAL ? this.state.selectedRecord['regtype'] ? this.state.selectedRecord['regtype'].value : this.state.registrationTypeValue[0].value : -1,\r\n                    nregsubtypecode: subTypeCode === ApprovalSubType.TESTRESULTAPPROVAL ? this.state.selectedRecord['regsubtype'] ? this.state.selectedRecord['regsubtype'].value : this.state.registrationSubTypeValue[0].value : -1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ntreeversiontempcode: this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.value : -1\r\n                }\r\n\r\n            }\r\n            inputData['userinfo'] = this.props.Login.userInfo\r\n            const inputParam = {\r\n                methodUrl: 'ApprovalConfigVersion',\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                displayName: \"IDS_APPROVALCONFIG\",\r\n                inputData: inputData, postParam, searchRef: this.searchRef,\r\n                operation: \"copy\"\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" }), operation: \"copy\"\r\n                    }\r\n                }\r\n\r\n                this.props.updateStore(updateInfo);\r\n\r\n            } else {\r\n\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n\r\n            }\r\n\r\n        } else if (this.props.Login.operation === 'approve') {\r\n            this.approveVersion1(this.props.Login.ncontrolcode);\r\n        }\r\n        else {\r\n\r\n            let bool = true;\r\n            let errormessage = [];\r\n            let inputData = {};\r\n            let approvalconfigrole = [];\r\n            let filterDetailCount = 0;\r\n            let validationDetailCount = 0;\r\n            let decisionDetailCount = 0;\r\n            let actionDetailCount = 0;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData['napprovalconfigcode'] = this.props.Login.masterData.realApprovalConfigCode\r\n            inputData['ntreeversiontempcode'] = this.props.Login.userRoleTree[0].ntreeversiontempcode\r\n            inputData['napprovalsubtypecode'] = this.approvalSubTypeValue.value\r\n            let isAutoApprovalVersion = this.state.selectedRecord['IDS_AUTOAPPROVAL'] && this.state.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES ? true : false;\r\n\r\n            const userRoleTree = this.props.Login.userRoleTree;//.reverse();\r\n            userRoleTree.map(role => {\r\n                let approvalconfigrolefilterdetail = [];\r\n                let approvalconfigrolevalidationdetail = [];\r\n                let approvalconfigroledecisiondetail = [];\r\n                let approvalconfigroleactiondetail = [];\r\n                //to fill role details\r\n                if (this.state.selectedRecord[role.nuserrolecode]) {\r\n                    approvalconfigrole.push({\r\n                        napprovalconfigrolecode: this.props.Login.operation === 'create' ? 0 : role.napprovalconfigrolecode,\r\n                        napprovalconfigcode: role.napprovalconfigcode,\r\n                        ntreeversiontempcode: role.ntreeversiontempcode,\r\n                        nuserrolecode: role.nuserrolecode,\r\n                        nchecklistversioncode: this.state.selectedRecord[role.nuserrolecode] ? this.state.selectedRecord[role.nuserrolecode].checklist ?\r\n                            this.state.selectedRecord[role.nuserrolecode].checklist : transactionStatus.NA : transactionStatus.NA,\r\n                        npartialapprovalneed: this.state.selectedRecord[role.nuserrolecode]['Partial Approval_' + role.nuserrolecode] ?\r\n                            this.state.selectedRecord[role.nuserrolecode]['Partial Approval_' + role.nuserrolecode] : transactionStatus.YES,\r\n                        nsectionwiseapprovalneed: this.state.selectedRecord[role.nuserrolecode]['IDS_PARTIALAPPROVAL'] && this.state.selectedRecord[role.nuserrolecode]['IDS_PARTIALAPPROVAL'] === transactionStatus.NO ?\r\n                            this.state.selectedRecord[role.nuserrolecode]['IDS_SECTIONWISEAPPROVE'] ?\r\n                                this.state.selectedRecord[role.nuserrolecode]['IDS_SECTIONWISEAPPROVE'] : transactionStatus.NO\r\n                            : transactionStatus.NO,\r\n                        // nrecomretestneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRETEST'] ?\r\n                        //     this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRETEST'] : transactionStatus.NO,\r\n                        // nrecomrecalcneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRECALC'] ?\r\n                        //     this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRECALC'] : transactionStatus.NO,\r\n                        // nretestneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RETEST'] ?\r\n                        //     this.state.selectedRecord[role.nuserrolecode]['IDS_RETEST'] : transactionStatus.NO,\r\n                        // nrecalcneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RECALC'] ?\r\n                        //     this.state.selectedRecord[role.nuserrolecode]['IDS_RECALC'] : transactionStatus.NO,\r\n                        // nlevelno: role.nlevelno,\r\n                        nrecomretestneed: this.state.selectedRecord[role.nuserrolecode]['Recommend Retest_' + role.nuserrolecode] ?\r\n                            this.state.selectedRecord[role.nuserrolecode]['Recommend Retest_' + role.nuserrolecode] : transactionStatus.NO,\r\n                        nrecomrecalcneed: this.state.selectedRecord[role.nuserrolecode]['Recommend Recalc_' + role.nuserrolecode] ?\r\n                            this.state.selectedRecord[role.nuserrolecode]['Recommend Recalc_' + role.nuserrolecode] : transactionStatus.NO,\r\n                        nretestneed: this.state.selectedRecord[role.nuserrolecode]['Retest_' + role.nuserrolecode] ?\r\n                            this.state.selectedRecord[role.nuserrolecode]['Retest_' + role.nuserrolecode] : transactionStatus.NO,\r\n                        nrecalcneed: this.state.selectedRecord[role.nuserrolecode]['Recalc_' + role.nuserrolecode] ?\r\n                            this.state.selectedRecord[role.nuserrolecode]['Recalc_' + role.nuserrolecode] : transactionStatus.NO,\r\n                        nlevelno: role.nlevelno,\r\n                        napprovalstatuscode: this.state.selectedRecord[role.nuserrolecode].approvalstatus ? this.state.selectedRecord[role.nuserrolecode].approvalstatus : transactionStatus.NA,\r\n\r\n                        nautoapproval: this.state.selectedRecord['IDS_AUTOAPPROVAL'] && this.state.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES ? transactionStatus.YES :\r\n                            this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL'] ? this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL'] : transactionStatus.NO,\r\n\r\n                        nautoapprovalstatuscode: this.state.selectedRecord['IDS_AUTOAPPROVAL'] && this.state.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES ?\r\n                            this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus\r\n                            : this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL'] && this.state.selectedRecord[role.nuserrolecode].approvalstatus ?\r\n                                this.state.selectedRecord[role.nuserrolecode].approvalstatus\r\n                                : transactionStatus.NA\r\n                        ,\r\n                        nautodescisionstatuscode: this.state.selectedRecord['IDS_AUTOAPPROVAL'] && this.state.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES ?\r\n                            this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0] ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0] : transactionStatus.PASS\r\n                            : this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL'] && this.state.selectedRecord[role.nuserrolecode].decisionstatus && this.state.selectedRecord[role.nuserrolecode].decisionstatus.length > 0 ?\r\n                                this.state.selectedRecord[role.nuserrolecode].decisionstatus[0] : transactionStatus.DRAFT\r\n                        // :this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus&&this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus.length>0 ?\r\n                        // :transactionStatus.NA\r\n                        ,\r\n                        ncorrectionneed: this.state.selectedRecord[role.nuserrolecode]['Correction_' + role.nuserrolecode] ?\r\n                            this.state.selectedRecord[role.nuserrolecode]['Correction_' + role.nuserrolecode] : transactionStatus.NO,\r\n                        nesignneed: this.state.selectedRecord[role.nuserrolecode]['e-Sign_' + role.nuserrolecode] ?\r\n                            this.state.selectedRecord[role.nuserrolecode]['e-Sign_' + role.nuserrolecode] : transactionStatus.NO,\r\n                        ntransactionstatus: transactionStatus.DRAFT,\r\n                        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n                        nstatus: transactionStatus.ACTIVE\r\n\r\n                    })\r\n\r\n\r\n                    if (this.state.selectedRecord[role.nuserrolecode].filterstatus) {\r\n                        this.state.selectedRecord[role.nuserrolecode].filterstatus.map(filterValue => {\r\n                            filterDetailCount++;\r\n                            approvalconfigrolefilterdetail.push({\r\n                                napprovalconfigcode: role.napprovalconfigcode,\r\n                                nuserrolecode: role.nuserrolecode,\r\n                                nlevelno: role.nlevelno,\r\n                                ntransactionstatus: filterValue,\r\n                                nstatus: transactionStatus.ACTIVE\r\n                            })\r\n                            return null;\r\n                        })\r\n                    }\r\n\r\n                    if (this.state.selectedRecord[role.nuserrolecode].validationstatus) {\r\n                        this.state.selectedRecord[role.nuserrolecode].validationstatus.map(validationValue => {\r\n                            validationDetailCount++;\r\n                            approvalconfigrolevalidationdetail.push({\r\n                                napprovalconfigcode: role.napprovalconfigcode,\r\n                                nuserrolecode: role.nuserrolecode,\r\n                                nlevelno: role.nlevelno,\r\n                                ntransactionstatus: validationValue,\r\n                                nstatus: transactionStatus.ACTIVE\r\n                            })\r\n                            return null;\r\n                        })\r\n                    }\r\n\r\n                    if (this.state.selectedRecord[role.nuserrolecode].decisionstatus) {\r\n                        this.state.selectedRecord[role.nuserrolecode].decisionstatus.map(decisionValue => {\r\n                            decisionDetailCount++;\r\n                            approvalconfigroledecisiondetail.push({\r\n                                napprovalconfigcode: role.napprovalconfigcode,\r\n                                nuserrolecode: role.nuserrolecode,\r\n                                nlevelno: role.nlevelno,\r\n                                ntransactionstatus: decisionValue,\r\n                                nstatus: transactionStatus.ACTIVE\r\n                            });\r\n                            return null;\r\n                        })\r\n                    }\r\n\r\n                    this.state.selectedRecord[`actionStatus_${role.nuserrolecode}`] ? this.state.selectedRecord[`actionStatus_${role.nuserrolecode}`].map(actionValue => {\r\n                        actionDetailCount++;\r\n                        approvalconfigroleactiondetail.push({\r\n                            napprovalconfigcode: role.napprovalconfigcode,\r\n                            nuserrolecode: role.nuserrolecode,\r\n                            nlevelno: role.nlevelno,\r\n                            ntransactionstatus: actionValue,\r\n                            nstatus: transactionStatus.ACTIVE\r\n                        });\r\n                        return null;\r\n                    }) : approvalconfigroleactiondetail.push();\r\n                    actionDetailCount++;\r\n                    approvalconfigroleactiondetail.push({\r\n                        napprovalconfigcode: role.napprovalconfigcode,\r\n                        nuserrolecode: role.nuserrolecode,\r\n                        nlevelno: role.nlevelno,\r\n                        ntransactionstatus: this.state.selectedRecord[role.nuserrolecode].approvalstatus ? this.state.selectedRecord[role.nuserrolecode].approvalstatus : -1,\r\n                        nstatus: transactionStatus.ACTIVE\r\n                    });\r\n\r\n                    inputData[`approvalconfigrolefilterdetail_${[role.nuserrolecode]}`] = approvalconfigrolefilterdetail\r\n                    inputData[`approvalconfigrolevalidationdetail_${[role.nuserrolecode]}`] = approvalconfigrolevalidationdetail\r\n                    inputData[`approvalconfigroledecisiondetail_${[role.nuserrolecode]}`] = approvalconfigroledecisiondetail\r\n                    inputData[`approvalconfigroleactiondetail_${[role.nuserrolecode]}`] = approvalconfigroleactiondetail\r\n                    bool = bool ? true : false\r\n                    return null;\r\n                } else {\r\n                    bool = false\r\n                    errormessage.push(role.suserrolename)\r\n                    return false;\r\n                }\r\n            })//role map\r\n\r\n            inputData['approvalconfigrole'] = approvalconfigrole\r\n            inputData['rolecount'] = this.props.Login.userRoleTree.length\r\n            inputData['filterdetailcount'] = filterDetailCount\r\n            inputData['validationdetailcount'] = validationDetailCount\r\n            inputData['decisiondetailcount'] = decisionDetailCount\r\n            inputData['actioncount'] = actionDetailCount\r\n            inputData['ntreeversiontempcode'] = this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.value : -1;\r\n            let finalInputData = {}\r\n            let inputParam = {}\r\n            if (bool) {\r\n                if (this.props.Login.operation === \"update\") {\r\n                    // edit\r\n                    postParam = { inputListName: \"versionData\", selectedObject: \"selectedVersion\", primaryKeyField: \"napproveconfversioncode\" };\r\n\r\n                    const temp1 = {};\r\n                    this.props.Login.versionConfig.map(temp => {\r\n                        if (temp.ntranscode === transactionStatus.AUTOAPPROVAL) {\r\n                            temp1['nneedautoapproval'] = this.state.selectedRecord[temp.stransdisplaystatus] ? this.state.selectedRecord[temp.stransdisplaystatus] : transactionStatus.NO\r\n                        }\r\n                        else if (temp.ntranscode === transactionStatus.AUTOCOMPLETE) {\r\n                            temp1['nneedautocomplete'] = this.state.selectedRecord[temp.stransdisplaystatus] ? this.state.selectedRecord[temp.stransdisplaystatus] : transactionStatus.NO\r\n                        }\r\n\r\n\r\n\r\n                    })\r\n\r\n\r\n                    inputData['approvalconfigautoapproval'] = {\r\n                        napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                        napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                        sversionname: this.state.selectedRecord.sversionname,\r\n                        //  nneedautocomplete: this.state.selectedRecord['Auto Complete'] ? this.state.selectedRecord['Auto Complete'] : transactionStatus.NO,\r\n                        //  nneedautoapproval: this.state.selectedRecord['Auto Approval'] ? this.state.selectedRecord['Auto Approval'] : transactionStatus.NO,\r\n                        nautoapprovalstatus: this.props.Login.userRoleTree && this.props.Login.userRoleTree.length > 0 && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus : transactionStatus.NA,\r\n                        nautodescisionstatus: isAutoApprovalVersion ? transactionStatus.PASS : this.props.Login.userRoleTree && this.props.Login.userRoleTree.length > 0 && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus ? (this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0] || transactionStatus.DRAFT) : transactionStatus.DRAFT,\r\n                        nautoallot: this.state.selectedRecord['IDS_AUTOALLOT'] ? this.state.selectedRecord['IDS_AUTOALLOT'] : transactionStatus.NO,\r\n                        nneedjoballocation: this.state.selectedRecord['IDS_JOBALLOCATION'] ? this.state.selectedRecord['IDS_JOBALLOCATION'] : transactionStatus.NO,\r\n                        nstatus: transactionStatus.ACTIVE,\r\n                        ...temp1\r\n                    }\r\n                }\r\n                else {\r\n\r\n\r\n                    inputData['approveconfigversion'] = {\r\n                        napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                        napproveconfversionno: -1,\r\n                        ntransactionstatus: transactionStatus.DRAFT,\r\n                        ntreeversiontempcode: this.props.Login.userRoleTree[0].ntreeversiontempcode,\r\n                        sapproveconfversiondesc: '-',\r\n                        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n                        nstatus: transactionStatus.ACTIVE\r\n                    }\r\n                    const temp1 = {};\r\n                    this.props.Login.versionConfig.map(temp => {\r\n                        if (temp.ntranscode === transactionStatus.AUTOAPPROVAL) {\r\n                            temp1['nneedautoapproval'] = this.state.selectedRecord[temp.stransdisplaystatus] ? this.state.selectedRecord[temp.stransdisplaystatus] : transactionStatus.NO\r\n                        }\r\n                        else if (temp.ntranscode === transactionStatus.AUTOCOMPLETE) {\r\n                            temp1['nneedautocomplete'] = this.state.selectedRecord[temp.stransdisplaystatus] ? this.state.selectedRecord[temp.stransdisplaystatus] : transactionStatus.NO\r\n                        }\r\n\r\n\r\n\r\n                    })\r\n                    inputData['approvalconfigautoapproval'] = {\r\n                        napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                        sversionname: this.state.selectedRecord.sversionname,\r\n                        // nneedautocomplete: this.state.selectedRecord['Auto Complete'] ? this.state.selectedRecord['Auto Complete'] : transactionStatus.NO,\r\n                        //  nneedautoapproval: this.state.selectedRecord['Auto Approval'] ? this.state.selectedRecord['Auto Approval'] : transactionStatus.NO,\r\n                        nautoapprovalstatus: this.props.Login.userRoleTree && this.props.Login.userRoleTree.length > 0 && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus : transactionStatus.NA,\r\n                        nautodescisionstatus: isAutoApprovalVersion ? transactionStatus.PASS : this.props.Login.userRoleTree && this.props.Login.userRoleTree.length > 0 && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus ? (this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0] || transactionStatus.DRAFT) : transactionStatus.DRAFT,\r\n                        nautoallot: this.state.selectedRecord['IDS_AUTOALLOT'] ? this.state.selectedRecord['IDS_AUTOALLOT'] : transactionStatus.NO,\r\n                        nneedjoballocation: this.state.selectedRecord['IDS_JOBALLOCATION'] ? this.state.selectedRecord['IDS_JOBALLOCATION'] : transactionStatus.NO,\r\n                        nstatus: transactionStatus.ACTIVE,\r\n                        ...temp1\r\n                    }\r\n                }\r\n                finalInputData['approvalconfigversion'] = inputData\r\n                finalInputData['userinfo'] = this.props.Login.userInfo\r\n                inputParam = {\r\n                    methodUrl: 'ApprovalConfigVersion',\r\n                    classUrl: this.props.Login.inputParam.classUrl,\r\n                    displayName: \"IDS_APPROVALCONFIG\",\r\n                    inputData: finalInputData, saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    postParam, searchRef: this.searchRef\r\n\r\n                }\r\n                const masterData = this.props.Login.masterData;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType,\r\n                            openModal: true, operation: this.props.Login.operation, screenName: this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" })\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_FILLDETAILSFOR\" }) + \" \" + errormessage.join(\",\"))\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let versionStatusCSS = \"outline-secondary\";\r\n        if (this.props.Login.masterData.selectedVersion && this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.APPROVED) {\r\n            versionStatusCSS = \"outline-success\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedVersion && this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.RETIRED) {\r\n            versionStatusCSS = \"outline-danger\";\r\n        }\r\n        const editId = this.state.controlMap.has(\"EditApprovalConfig\") && this.state.controlMap.get(\"EditApprovalConfig\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteApprovalConfig\") && this.state.controlMap.get(\"DeleteApprovalConfig\").ncontrolcode\r\n        const approveId = this.state.controlMap.has(\"ApproveApprovalConfig\") && this.state.controlMap.get(\"ApproveApprovalConfig\").ncontrolcode\r\n        const copyId = this.state.controlMap.has(\"CopyApprovalConfig\") && this.state.controlMap.get(\"CopyApprovalConfig\").ncontrolcode\r\n        const addId = this.state.controlMap.has(\"AddApprovalConfig\") && this.state.controlMap.get(\"AddApprovalConfig\").ncontrolcode\r\n\r\n        this.approvalSubTypeValue = this.props.Login.masterData.realApprovalSubTypeValue ?\r\n            this.props.Login.masterData.realApprovalSubTypeValue\r\n            : this.props.Login.masterData.approvalSubTypeValue ?\r\n                this.props.Login.masterData.approvalSubTypeValue\r\n                : this.props.Login.masterData.approvalsubtype ? this.props.Login.masterData.approvalsubtype.length > 0 ?\r\n                    {\r\n                        value: sortData(this.props.Login.masterData.approvalsubtype, 'ascending', 'napprovalsubtypecode')[0].napprovalsubtypecode,\r\n                        label: sortData(this.props.Login.masterData.approvalsubtype, 'ascending', 'napprovalsubtypecode')[0].ssubtypename\r\n                    } : {} : {};\r\n\r\n        const filterParam = {\r\n            inputListName: \"versionData\",\r\n            selectedObject: \"selectedVersion\",\r\n            primaryKeyField: \"napproveconfversioncode\",\r\n            searchFieldList: [\"sversionname\", \"sversionstatus\", \"sapproveconfversiondesc\"],\r\n            fetchUrl: \"approvalconfig/getApprovalConfigVersion\",\r\n            fecthInputObject: { napprovalsubtypecode: this.approvalSubTypeValue.value, userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            sortField: \"napproveconfversioncode\", sortOrder: \"descending\",\r\n\r\n            //NIBSCRT-2294\r\n            unchangeList: [\"approvalsubtype\", \"approvalSubTypeValue\", \"registrationType\", \"registrationTypeValue\",\r\n                \"registrationSubType\", \"registrationSubTypeValue\", \"ApprovalsubtypeList\",\r\n                \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"treeVersionTemplate\", \"userroleTemplateValue\",\r\n                \"realApprovalSubTypeValue\", \"realRegistrationTypeValue\", \"realRegistrationSubTypeValue\",\r\n                \"realTreeVersionTemplateValue\", \"approvalConfigCode\", \"realApprovalConfigCode\"]\r\n        };\r\n        const selectedRole = this.props.Login.masterData.selectedRole ? this.props.Login.masterData.selectedRole : this.props.Login.masterData.approvalconfigRoleNames && this.props.Login.masterData.approvalconfigRoleNames.length > 0 && sortData(this.props.Login.masterData.approvalconfigRoleNames, 'ascending', 'nlevelno')[0]\r\n\r\n        const mandatoryFields = [{ \"idsName\": \"IDS_VERSIONNAME\", \"dataField\": \"sversionname\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }]\r\n        this.props.Login.operation !== 'copy' && this.props.Login.userRoleTree && this.props.Login.userRoleTree.map(role => {\r\n            mandatoryFields.push({ \"idsName\": \"IDS_APPROVALSTATUS\", \"alertSuffix\": ` - ${role.suserrolename}`, \"dataField\": `approvalstatus_${role.nuserrolecode}`, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" });\r\n            mandatoryFields.push({ \"idsName\": \"IDS_FILTERSTATUS\", \"alertSuffix\": ` - ${role.suserrolename}`, \"dataField\": `filterstatus_${role.nuserrolecode}`, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" });\r\n            mandatoryFields.push({ \"idsName\": \"IDS_VALIDATIONSTATUS\", \"alertSuffix\": ` - ${role.suserrolename}`, \"dataField\": `validationstatus_${role.nuserrolecode}`, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" });\r\n            if (this.props.Login.decisionStatusOptions && this.props.Login.decisionStatusOptions.length > 0) {\r\n                mandatoryFields.push({ \"idsName\": \"IDS_DECISIONSTATUS\", \"alertSuffix\": ` - ${role.suserrolename}`, \"dataField\": `decisionstatus_${role.nuserrolecode}` });\r\n            }\r\n            return null;\r\n        });\r\n        let breadCrumbData = []\r\n        if (this.props.Login.masterData.realApprovalSubTypeValue && this.props.Login.masterData.realApprovalSubTypeValue.value === ApprovalSubType.TESTRESULTAPPROVAL) {\r\n            breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_APPROVALSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realApprovalSubTypeValue ? this.props.Login.masterData.realApprovalSubTypeValue.label : \"NA\"\r\n                }, {\r\n                    \"label\": \"IDS_REGISTRATIONTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegistrationTypeValue ? this.props.Login.masterData.realRegistrationTypeValue.label : \"NA\"\r\n                }, {\r\n                    \"label\": \"IDS_REGISTRATIONSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegistrationSubTypeValue ? this.props.Login.masterData.realRegistrationSubTypeValue.label : \"NA\"\r\n                }, {\r\n                    \"label\": \"IDS_USERROLETEMPLATE\",\r\n                    \"value\": this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.label : \"NA\"\r\n                }\r\n            ];\r\n        } else {\r\n            breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_APPROVALSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realApprovalSubTypeValue ? this.props.Login.masterData.realApprovalSubTypeValue.label : \"NA\"\r\n                }, {\r\n                    \"label\": \"IDS_USERROLETEMPLATE\",\r\n                    \"value\": this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.label : \"NA\"\r\n                }\r\n            ]\r\n        }\r\n        // console.log(\"this.approvalSubTypeValue:\", Object.keys(this.approvalSubTypeValue).length);\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    <Affix top={53}>\r\n                        <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                    </Affix>\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" })}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.versionData}\r\n                                getMasterDetail={(version) => this.props.getApprovalConfigVersion(version, this.approvalSubTypeValue.value, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedVersion}\r\n                                primaryKeyField=\"napproveconfversioncode\"\r\n                                mainField=\"sversionname\"\r\n                                firstField=\"sapproveconfversiondesc\"\r\n                                secondField=\"sversionstatus\"\r\n                                isIDSField=\"Yes\"\r\n                                searchRef={this.searchRef}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                openModal={() => this.props.openModal(\"create\", this.props.Login.masterData.realApprovalConfigCode, this.approvalSubTypeValue.value,\r\n                                    this.props.Login.userInfo, addId, this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.value : -10)}\r\n                                needAccordianFilter={false}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={true}\r\n                                showFilterIcon={true}\r\n                                onFilterSubmit={this.getApprovalConfigurationVersion}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_SAMPLEFILTER\":\r\n                                            <SampleFilter\r\n                                                selectedRecord={this.state.selectedRecord || {}}\r\n                                                filterComboChange={this.onFilterComboChange}\r\n                                                approvalSubTypeOptions={this.state.ApprovalsubtypeList}\r\n                                                approvalSubTypeValue={this.props.Login.masterData.approvalSubTypeValue}\r\n                                                registrationTypeOptions={this.state.RegistrationTypeList}\r\n                                                registrationTypeValue={this.props.Login.masterData.registrationTypeValue}\r\n                                                registrationSubTypeOptions={this.state.RegistrationSubTypeList}\r\n                                                registrationSubTypeValue={this.props.Login.masterData.registrationSubTypeValue}\r\n                                                userroleTemplateOptions={this.state.UserRoleTemplateList}\r\n                                                userroleTemplateValue={this.props.Login.masterData.userroleTemplateValue}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.selectedVersion ? Object.entries(this.props.Login.masterData.selectedVersion).length > 0 ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                                                <Card.Title>\r\n                                                    <h1 className=\"product-title-main\">{this.props.Login.masterData.selectedVersion.sversionname}</h1>\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle className=\"readonly-text font-weight-normal\">\r\n                                                    <Row>\r\n                                                        <Col md={8} >\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                {`${this.props.intl.formatMessage({ id: \"IDS_VERSIONNO\" })}:${this.props.Login.masterData.selectedVersion.sapproveconfversiondesc}`}\r\n                                                                <span className={`btn btn-outlined ${versionStatusCSS} btn-sm ml-3`}>\r\n                                                                    {/* <i class=\"fas fa-check \"></i>  */}\r\n                                                                    {this.props.Login.masterData.selectedVersion.sversionstatus}\r\n                                                                </span>\r\n                                                            </h2>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <>\r\n                                                                <div className=\"d-flex product-category\" style={{ float: \"right\" }}>\r\n                                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                    <div className=\"d-inline \">\r\n                                                                        <Nav.Link\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                            //  data-for=\"tooltip_list_wrap\"\r\n                                                                            onClick={() => this.props.getApprovalConfigEditData(this.props.Login.masterData.selectedVersion.napproveconfversioncode, this.approvalSubTypeValue.value, this.props.Login.userInfo, this.props.Login.masterData, editId)}>\r\n                                                                            <FontAwesomeIcon icon={faPencilAlt} title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                                        </Nav.Link>\r\n                                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                            //  data-for=\"tooltip_list_wrap\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                            onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                            {/* <ConfirmDialog\r\n                                                                        name=\"deleteMessage\"\r\n                                                                        message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                        doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                        doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                        icon={faTrashAlt}\r\n                                                                        //title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                        handleClickDelete={() => this.deleteApprovalConfigVersion(deleteId)}\r\n                                                                    /> */}\r\n                                                                        </Nav.Link>\r\n                                                                        <Nav.Link\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                                            // data-for=\"tooltip_list_wrap\"\r\n                                                                            onClick={() => this.approveVersion(approveId)}>\r\n                                                                            <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                                        </Nav.Link>\r\n                                                                        <Nav.Link\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(copyId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                                            //  data-for=\"tooltip_list_wrap\"\r\n                                                                            onClick={() => this.props.copyVersion(this.approvalSubTypeValue.value, this.props.Login.userInfo, this.props.Login.masterData, copyId)}>\r\n                                                                            <FontAwesomeIcon icon={faCopy} title={this.props.intl.formatMessage({ id: \"IDS_COPY\" })} />\r\n                                                                        </Nav.Link>\r\n                                                                    </div>\r\n                                                                    {/* </Tooltip> */}\r\n                                                                </div>\r\n                                                            </>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Card.Text>\r\n                                                    <Row>\r\n                                                        {this.props.Login.masterData.versionConfig ? this.props.Login.masterData.versionConfig.map(item =>\r\n                                                            <Col md=\"6\">\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id={item.stransdisplaystatus} /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedVersion[`${item.ntranscode}`]}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        ) : \"\"}\r\n                                                    </Row>\r\n                                                    <Row>\r\n                                                        {this.props.Login.masterData.approvalSubTypeValue && this.props.Login.masterData.approvalSubTypeValue !== undefined && this.props.Login.masterData.approvalSubTypeValue.value === 2 ?\r\n                                                            <Col md=\"6\">\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id={\"IDS_VIEWNAME\"} /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedVersion.sviewname}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            : \"\"}\r\n                                                    </Row>\r\n                                                </Card.Text>\r\n                                                <Row oGutters={true}>\r\n                                                    <Col md={12}>\r\n                                                        <Card className=\"at-tabs\">\r\n                                                            {this.props.Login.masterData ? this.props.Login.masterData.approvalconfigRoleNames && this.props.Login.masterData.approvalconfigRoleNames.length > 0 ?\r\n                                                                <CustomAccordion\r\n                                                                    key=\"UserRoles\"\r\n                                                                    accordionTitle=\"suserrolename\"\r\n                                                                    accordionComponent={this.userRoleAccordion(this.props.Login.masterData.approvalconfigRoleNames)}\r\n                                                                    inputParam={{ masterData: this.props.Login.masterData, userinfo: this.props.Login.userInfo, napprovalsubtypecode: this.approvalSubTypeValue.value }}\r\n                                                                    accordionClick={this.props.getRoleDetails}\r\n                                                                    accordionPrimaryKey={\"napprovalconfigrolecode\"}\r\n                                                                    accordionObjectName={\"role\"}\r\n                                                                    selectedKey={selectedRole.napprovalconfigrolecode}\r\n\r\n                                                                />\r\n                                                                : \"\" : \"\"}\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\" : \"\"}\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        onSaveClick={this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={\"IDS_APPROVALCONFIG\"}\r\n                        closeModal={this.handleClose}\r\n                        show={this.props.Login.openModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === 'approve' ? [{ \"idsName\": \"IDS_VIEWNAME\", \"dataField\": \"sviewname\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                        { \"idsName\": \"IDS_TEMPLATEMAPPING\", \"dataField\": \"ndesigntemplatemappingcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" }] : mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.operation === 'approve' ?\r\n                                <>\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n                                            <FormSelectSearch\r\n                                                name={\"ndesigntemplatemappingcode\"}\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_TEMPLATEMAPPING\" })}\r\n                                                placeholder=\"Please Select...\"\r\n                                                options={this.props.Login.designTemplateMapping}\r\n                                                // optionId=\"ntimezonecode\"\r\n                                                // optionValue=\"stimezoneid\"\r\n                                                value={this.state.selectedRecord[\"ndesigntemplatemappingcode\"]}\r\n                                                //defaultValue={props.selectedRecord[\"ndesigntemplatemapping\"]}\r\n                                                isMandatory={true}\r\n                                                isMulti={false}\r\n                                                isSearchable={false}\r\n                                                isClearable={false}\r\n                                                isDisabled={true}\r\n                                                closeMenuOnSelect={true}\r\n                                                onChange={(event) => this.onComboChange(event, 'ndesigntemplatemappingcode')}\r\n                                            />\r\n                                            <FormInput\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_VIEWNAME\" })}\r\n                                                name={\"sviewname\"}\r\n                                                type=\"text\"\r\n                                                onChange={(event) => this.onInputOnChange(event)}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_VIEWNAME\" })}\r\n                                                value={this.state.selectedRecord[\"sviewname\"]}\r\n                                                isMandatory={true}\r\n                                                //required={true}\r\n                                                maxLength={100}\r\n                                            />\r\n\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                                :\r\n                                <AddApprovalConfig\r\n                                    selectedRecord={this.state.selectedRecord ? this.state.selectedRecord : {}}\r\n                                    userRoleTree={this.props.Login.userRoleTree}\r\n                                    approvalSubTypeValue={this.approvalSubTypeValue}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    approvalStatusOptions={this.props.Login.approvalStatusOptions}\r\n                                    approvalStatusValue={this.props.Login.approvalStatusValue}\r\n                                    filterStatusOptions={this.props.Login.filterStatusOptions}\r\n                                    filterStatusValues={this.props.Login.filterStatusValues}\r\n                                    topLevelValidStatusOptions={this.props.Login.topLevelValidStatusOptions}\r\n                                    validationStatusOptions={this.props.Login.validationStatusOptions}\r\n                                    validationStatusValues={this.props.Login.validationStatusValues}\r\n                                    decisionStatusOptions={this.props.Login.decisionStatusOptions}\r\n                                    decisionStatusValues={this.props.Login.decisionStatusValues}\r\n                                    actionStatus={this.props.Login.actionStatus}\r\n                                    checklistOptions={this.props.Login.checklistOptions}\r\n                                    checklistValues={this.props.Login.checklistValues}\r\n                                    roleConfig={this.props.Login.roleConfig}\r\n                                    versionConfig={this.props.Login.versionConfig}\r\n                                    operation={this.props.Login.operation}\r\n                                    nsubType={this.approvalSubTypeValue.value}\r\n                                    registrationTypeOptions={this.props.Login.optCopyRegType}\r\n                                    registrationTypeValue={this.state.registrationTypeValue}\r\n                                    registrationSubTypeOptions={this.props.Login.optCopyRegSubType}\r\n                                    registrationSubTypeValue={this.state.registrationSubTypeValue}\r\n                                    selectedVersion={this.props.Login.masterData.selectedVersion}\r\n                                    masterData={this.props.Login.masterData}\r\n\r\n                                />}\r\n                    />\r\n                    : \"\"}\r\n            </>\r\n        );\r\n    }\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteApprovalConfigVersion(deleteId));\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let { selectedRecord, userRoleControlRights, controlMap, ApprovalsubtypeList,\r\n            RegistrationTypeList, RegistrationSubTypeList, UserRoleTemplateList, filterStatusState, validationStatusState } = this.state;\r\n        let updateState = false;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            // const ApprovalsubtypeListMap = constructOptionList(this.props.Login.masterData.approvalsubtype || [], \"napprovalsubtypecode\", \"ssubtypename\", 'ntemplatecode','ascending', false);\r\n            // const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.registrationType || [], \"nregtypecode\", \"sregtypename\", 'ascending', 'nregtypecode', false);\r\n            // const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.registrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nregsubtypecode', false);\r\n            const ApprovalsubtypeListMap = constructOptionList(this.props.Login.masterData.approvalsubtype || [], \"napprovalsubtypecode\", \"ssubtypename\", 'ntemplatecode', 'ascending', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.registrationType || [], \"nregtypecode\", \"sregtypename\", 'nsorter', 'ascending', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.registrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'nsorter', 'ascending', false);\r\n            const UserRoleTemplateListMap = constructOptionList(this.props.Login.masterData.treeVersionTemplate || [], \"ntreeversiontempcode\", \"sversiondescription\", 'ntransactionstatus', 'descending', false);\r\n\r\n            ApprovalsubtypeList = ApprovalsubtypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            UserRoleTemplateList = UserRoleTemplateListMap.get(\"OptionList\");\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            //this.setState({  RegistrationTypeList,RegistrationSubTypeList,templateVersionOptionList});  \r\n            // RegistrationTypeList=this.props.Login.masterData.RegistrationTypeList\r\n            // RegistrationSubTypeList=this.props.Login.masterData.RegistrationSubTypeList\r\n\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.registrationType || [], \"nregtypecode\", \"sregtypename\", 'nsorter', 'ascending', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.registrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'nsorter', 'ascending', false);\r\n            const UserRoleTemplateListMap = constructOptionList(this.props.Login.masterData.treeVersionTemplate || [], \"ntreeversiontempcode\", \"sversiondescription\", 'ntransactionstatus', 'descending', false);\r\n\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            UserRoleTemplateList = UserRoleTemplateListMap.get(\"OptionList\");\r\n            updateState = true;\r\n\r\n            // if (this.props.dataState === undefined) {\r\n            //     filterStatusState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n            //     validationStatusState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n            // }\r\n        }\r\n        if (updateState) {\r\n            this.setState({\r\n                selectedRecord, userRoleControlRights, controlMap, ApprovalsubtypeList,\r\n                RegistrationTypeList, RegistrationSubTypeList, UserRoleTemplateList, filterStatusState, validationStatusState\r\n            })\r\n        }\r\n    }\r\n    onInputOnChange = (event, role, action) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (role) {\r\n            let roleDetails = this.state.selectedRecord[role.nuserrolecode] || {}\r\n            const fieldName = event.target.name.split('_')[0] + '_' + event.target.name.split('_')[1]\r\n            let actionArray = selectedRecord[`actionStatus_${role.nuserrolecode}`] || [];\r\n            if (event.target.type === 'checkbox') {\r\n                if (action) {\r\n                    if (event.target.checked) {\r\n                        actionArray.push(action.ntranscode);\r\n                    } else {\r\n                        actionArray.splice(actionArray.indexOf(action.ntranscode), 1)\r\n                    }\r\n                    selectedRecord[`actionStatus_${role.nuserrolecode}`] = actionArray\r\n                }\r\n                roleDetails[fieldName] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO\r\n                if (fieldName === 'IDS_PARTIALAPPROVAL' && roleDetails[\"IDS_PARTIALAPPROVAL\"] && roleDetails[\"IDS_PARTIALAPPROVAL\"] === transactionStatus.YES) {\r\n                    roleDetails['IDS_SECTIONWISEAPPROVE'] = transactionStatus.NO\r\n                }\r\n                selectedRecord[role.nuserrolecode] = roleDetails\r\n            }\r\n            else {\r\n                roleDetails[fieldName] = event.target.value\r\n                selectedRecord[role.nuserrolecode] = roleDetails\r\n            }\r\n        }\r\n        else {\r\n            if (event.target.type === 'checkbox') {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n            else {\r\n                if (event.target.name === 'sviewname') {\r\n                    selectedRecord[event.target.name] = event.target.value.replace(/[^\\w\\s]/gi, \"\")\r\n\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onComboChange = (comboData, role, comboName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (role) {\r\n            let roleDetails = this.state.selectedRecord[role.nuserrolecode] || {}\r\n            const fieldName = comboName.split('_')[0]\r\n            let filterArray = [];\r\n            roleDetails[fieldName] = [];\r\n            if (comboData) {\r\n                selectedRecord[comboName] = comboData\r\n                if (fieldName === 'checklist') {\r\n                    selectedRecord[`checklistVersion_${role.nuserrolecode}`] = { label: comboData.item.schecklistversionname, value: comboData.item.nchecklistversioncode }\r\n                    filterArray = comboData.item.nchecklistversioncode;\r\n\r\n                } else {\r\n                    if (Array.isArray(comboData)) {\r\n                        comboData.map(item => {\r\n                            return (filterArray.push(item.value))\r\n                        })\r\n                    } else {\r\n                        filterArray = comboData.value;\r\n                    }\r\n                }\r\n                roleDetails[fieldName] = filterArray\r\n                selectedRecord[role.nuserrolecode] = roleDetails\r\n            } else {\r\n                selectedRecord[comboName] = []\r\n                filterArray = []\r\n                roleDetails[fieldName] = filterArray\r\n                selectedRecord[role.nuserrolecode] = roleDetails\r\n            }\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n            selectedRecord[comboName] = comboData\r\n\r\n            if (comboName === 'regtype') {\r\n                this.props.getCopySubType(comboData, selectedRecord, this.props.Login.userInfo, this.props.Login.masterData, this.props.Login.optCopyRegType)\r\n            } else {\r\n                this.setState({ selectedRecord });\r\n            }\r\n\r\n        }\r\n    }\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        let approvalSubTypeValue = this.props.Login.masterData.approvalSubTypeValue;\r\n        let registrationTypeValue = this.props.Login.masterData.registrationTypeValue;\r\n        let registrationSubTypeValue;\r\n\r\n        if (comboData) {\r\n\r\n            selectedRecord[fieldName] = comboData.value;\r\n            let inputData = {};\r\n            if (fieldName === 'napprovalsubtypecode') {\r\n\r\n                approvalSubTypeValue = comboData\r\n                inputData = { nFlag: 2, napprovalsubtypecode: comboData.value, userinfo: this.props.Login.userInfo };\r\n\r\n            } else if (fieldName === 'nregtypecode') {\r\n\r\n                registrationTypeValue = comboData\r\n                inputData = { nFlag: 3, napprovalsubtypecode: approvalSubTypeValue.value, nregtypecode: comboData.value, userinfo: this.props.Login.userInfo }\r\n\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                registrationSubTypeValue = comboData\r\n                inputData = {\r\n                    nFlag: 4, napprovalsubtypecode: approvalSubTypeValue.value,\r\n                    nregtypecode: registrationTypeValue.value,\r\n                    nregsubtypecode: comboData.value,\r\n                    userinfo: this.props.Login.userInfo\r\n                }\r\n            }\r\n            if (fieldName === 'ntreeversiontempcode') {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            userroleTemplateValue: comboData\r\n                        }\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                const oldState = {\r\n                    approvalsubtype: this.props.Login.masterData.approvalsubtype,\r\n                    registrationtype: this.props.Login.masterData.registrationType,\r\n                    registrationsubtype: this.props.Login.masterData.registrationSubType,\r\n                    approvalSubTypeValue,\r\n                    registrationTypeValue,\r\n                    registrationSubTypeValue,\r\n                    RegistrationTypeList: this.state.RegistrationTypeList,\r\n                    RegistrationSubTypeList: this.state.RegistrationSubTypeList,\r\n                }\r\n                let inputParamData = { inputData, masterData: this.props.Login.masterData }\r\n                this.props.getFilterChange(inputParamData, oldState)\r\n            }\r\n\r\n        } else {\r\n            selectedRecord[fieldName] = \"\";\r\n            if (fieldName === 'napprovalsubtypecode') {\r\n\r\n                this.approvalSubTypeValue = []\r\n                registrationTypeValue = []\r\n                registrationSubTypeValue = []\r\n\r\n            } else if (fieldName === 'nregtypecode') {\r\n\r\n                registrationTypeValue = []\r\n                registrationSubTypeValue = []\r\n\r\n            } else {\r\n\r\n                registrationSubTypeValue = []\r\n\r\n            }\r\n\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n        // this.searchRef.current.value = \"\"\r\n\r\n    }\r\n    getApprovalConfigurationVersion = () => {\r\n        if (this.props.Login.masterData.approvalSubTypeValue) {\r\n            //this.searchRef.current.value = \"\"\r\n            let masterData = {\r\n                ...this.props.Login.masterData,\r\n                realApprovalSubTypeValue: this.props.Login.masterData.approvalSubTypeValue ? this.props.Login.masterData.approvalSubTypeValue : -1,\r\n                realRegistrationTypeValue: this.props.Login.masterData.registrationTypeValue ? this.props.Login.masterData.registrationTypeValue : -1,\r\n                realRegistrationSubTypeValue: this.props.Login.masterData.registrationSubTypeValue ? this.props.Login.masterData.registrationSubTypeValue : -1,\r\n                realApprovalConfigCode: this.props.Login.masterData.approvalConfigCode || -1,\r\n                realTreeVersionTemplateValue: this.props.Login.masterData.userroleTemplateValue || -1,\r\n\r\n            }\r\n            const inputData = {\r\n                napprovalsubtypecode: this.props.Login.masterData.approvalSubTypeValue ?\r\n                    this.props.Login.masterData.approvalSubTypeValue.value : -1,\r\n                napprovalconfigcode: this.props.Login.masterData.approvalConfigCode,\r\n                ntreeversiontempcode: this.props.Login.masterData.userroleTemplateValue.value,\r\n                userinfo: this.props.Login.userInfo\r\n            }\r\n            let inputParamData = { inputData, masterData, searchRef: this.searchRef }\r\n            this.props.getApprovalConfigurationVersion(inputParamData);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_APPROVALSUBTYPENOTAVAILABLE\" }))\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    reloadData = () => {\r\n        // this.searchRef.current.value = \"\";\r\n        // const inputParam = {\r\n        //     inputData: { \"userinfo\": this.props.Login.userInfo },\r\n        //     classUrl: \"approvalconfig\",\r\n        //     methodUrl: \"ApprovalConfigFilter\",\r\n        //     userInfo: this.props.Login.userInfo,\r\n        //     displayName: \"IDS_APPROVALCONFIG\"\r\n        // };\r\n        // this.props.callService(inputParam);\r\n        this.getApprovalConfigurationVersion()\r\n    }\r\n    userRoleAccordion = (userRoleList) => {\r\n        const accordionMap = new Map();\r\n        userRoleList = sortData(userRoleList, 'ascending', 'nlevelno')\r\n        userRoleList.map((role) =>\r\n            accordionMap.set(role.napprovalconfigrolecode,\r\n                <UserRoleAccordion\r\n                    role={role}\r\n                    roleConfig={this.props.Login.masterData.roleConfig}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    controlMap={this.state.controlMap}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    masterData={this.props.Login.masterData}\r\n                    deleteRecord={this.deleteRecord}\r\n                    tabDetail={this.tabDetail(role)}\r\n                    onTabOnChange={this.onTabOnChange}\r\n                    approvalSubTypeValue={this.props.Login.masterData.approvalSubTypeValue}\r\n                />)\r\n        )\r\n        return accordionMap;\r\n    }\r\n    tabDetail = () => {\r\n        const selectedRole = this.props.Login.masterData.selectedRole ? this.props.Login.masterData.selectedRole : this.props.Login.masterData.approvalconfigRoleNames && this.props.Login.masterData.approvalconfigRoleNames.length > 0 && sortData(this.props.Login.masterData.approvalconfigRoleNames, 'ascending', 'nlevelno')[0]\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_FILTERSTATUS\",\r\n            <FilterStatusTab\r\n                filterData={process(this.props.Login.masterData.roleFilters ?\r\n                    // sortData(this.props.Login.masterData.roleFilters) : [],\r\n                    // { skip: this.state.dataState.skip, take: this.state.dataState.take })}\r\n                    sortData(this.props.Login.masterData.roleFilters) : [], this.state.filterStatusState)}\r\n                setDefault={this.props.setDefault}\r\n                selectedRole={selectedRole}\r\n                napprovalsubtypecode={this.approvalSubTypeValue.value}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterData={this.props.Login.masterData}\r\n                dataState={this.state.filterStatusState}\r\n                dataStateChange={(event) => this.setState({ filterStatusState: event.dataState })}\r\n                screenName=\"IDS_FILTERSTATUS\"\r\n            />\r\n        )\r\n\r\n        tabMap.set(\"IDS_VALIDATIONSTATUS\",\r\n            <ValidationStatusTab\r\n                validationStatus={process(this.props.Login.masterData.roleValidations ?\r\n                    sortData(this.props.Login.masterData.roleValidations) : [], this.state.validationStatusState)}\r\n                // sortData(this.props.Login.masterData.roleValidations) : [],\r\n                // { skip: this.state.dataState.skip, take: this.state.dataState.take })}\r\n                selectedRole={selectedRole}\r\n                napprovalsubtypecode={this.approvalSubTypeValue.value}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterData={this.props.Login.masterData}\r\n                dataState={this.state.validationStatusState}\r\n                dataStateChange={(event) => this.setState({ validationStatusState: event.dataState })}\r\n                screenName=\"IDS_VALIDATIONSTATUS\"\r\n            />)\r\n        // if (this.props.Login.masterData.roleDecisions && this.props.Login.masterData.roleDecisions.length > 0) {\r\n        //     tabMap.set(\"IDS_DECISIONSTATUS\",\r\n        //         <DecisionStatusTab\r\n        //             decisionData={process(this.props.Login.masterData.roleDecisions ? sortData(this.props.Login.masterData.roleDecisions) : [],\r\n        //                 { skip: this.state.dataState.skip, take: this.state.dataState.take })}\r\n        //             setDefault={this.props.setDefault}\r\n        //             selectedRole={selectedRole}\r\n        //             napprovalsubtypecode={this.approvalSubTypeValue.value}\r\n        //             userInfo={this.props.Login.userInfo}\r\n        //             masterData={this.props.Login.masterData}\r\n        //             screenName=\"IDS_DECISIONSTATUS\"\r\n        //         />)\r\n        // }\r\n        tabMap.set(\"IDS_ACTIONSTATUS\",\r\n            <ActionStatusTab\r\n                actionData={process(this.props.Login.masterData.roleActions ? sortData(this.props.Login.masterData.roleActions) : [],\r\n                    { skip: this.state.dataState.skip, take: this.state.dataState.take })}\r\n                setDefault={this.props.setDefault}\r\n                selectedRole={selectedRole}\r\n                napprovalsubtypecode={this.approvalSubTypeValue.value}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterData={this.props.Login.masterData}\r\n                screenName=\"IDS_ACTIONSTATUS\"\r\n            />)\r\n        return tabMap;\r\n    }\r\n    onTabOnChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n}\r\nexport default connect(mapStateToProps,\r\n    {\r\n        callService, crudMaster, openModal, updateStore, getApprovalConfigVersion, getApprovalConfigEditData, copyVersion, getFilterChange\r\n        , validateEsignCredential, getCopySubType, getRoleDetails, setDefault, filterColumnData,\r\n        getApprovalConfigurationVersion, approveVersion\r\n    })\r\n    (injectIntl(ApprovalConfig));"]},"metadata":{},"sourceType":"module"}