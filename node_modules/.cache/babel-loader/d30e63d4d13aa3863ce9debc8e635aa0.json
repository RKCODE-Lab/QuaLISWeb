{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\AddFilteredPatient.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\n\nconst AddFilteredPatient = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    pageable: true,\n    scrollable: \"scrollable\",\n    gridHeight: '600px' //gridWidth={'600px'}\n    ,\n    data: props.slideResult || [],\n    dataResult: process(props.slideResult || [], props.dataState),\n    dataState: props.dataState,\n    dataStateChange: props.dataStateChange,\n    extractedColumnList: props.slideList || [],\n    detailedFieldList: [],\n    hideDetailBand: true,\n    controlMap: props.controlMap,\n    methodUrl: \"PatientMaster\",\n    isActionRequired: false,\n    isToolBarRequired: false,\n    isAddRequired: false,\n    isRefreshRequired: false,\n    selectedId: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }\n  })));\n};\n\nexport default injectIntl(AddFilteredPatient);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/contactmaster/AddFilteredPatient.jsx"],"names":["React","injectIntl","Row","Col","DataGrid","process","AddFilteredPatient","props","slideResult","dataState","dataStateChange","slideList","controlMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAElC,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,QAAD;AACI,IAAA,QAAQ,EAAE,IADd;AAEI,IAAA,UAAU,EAAE,YAFhB;AAGI,IAAA,UAAU,EAAE,OAHhB,CAII;AAJJ;AAKI,IAAA,IAAI,EAAEA,KAAK,CAACC,WAAN,IAAqB,EAL/B;AAMI,IAAA,UAAU,EAAEH,OAAO,CAACE,KAAK,CAACC,WAAN,IAAqB,EAAtB,EAA0BD,KAAK,CAACE,SAAhC,CANvB;AAOI,IAAA,SAAS,EAAEF,KAAK,CAACE,SAPrB;AAQI,IAAA,eAAe,EAAEF,KAAK,CAACG,eAR3B;AASI,IAAA,mBAAmB,EAAEH,KAAK,CAACI,SAAN,IAAmB,EAT5C;AAUI,IAAA,iBAAiB,EAAE,EAVvB;AAWI,IAAA,cAAc,EAAE,IAXpB;AAYI,IAAA,UAAU,EAAEJ,KAAK,CAACK,UAZtB;AAaI,IAAA,SAAS,EAAC,eAbd;AAcI,IAAA,gBAAgB,EAAE,KAdtB;AAeI,IAAA,iBAAiB,EAAE,KAfvB;AAgBI,IAAA,aAAa,EAAE,KAhBnB;AAiBI,IAAA,iBAAiB,EAAE,KAjBvB;AAkBI,IAAA,UAAU,EAAI,IAlBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADR,CADJ;AA0BH,CA5BD;;AA6BA,eAAgBX,UAAU,CAACK,kBAAD,CAA1B","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nconst AddFilteredPatient = (props) => {\r\n    \r\n    return (\r\n        <Row>\r\n                <Col md={12}>\r\n                        <DataGrid\r\n                            pageable={true}\r\n                            scrollable={\"scrollable\"}\r\n                            gridHeight={'600px'}\r\n                            //gridWidth={'600px'}\r\n                            data={props.slideResult || []}\r\n                            dataResult={process(props.slideResult || [], props.dataState)}\r\n                            dataState={props.dataState}\r\n                            dataStateChange={props.dataStateChange}\r\n                            extractedColumnList={props.slideList || []}\r\n                            detailedFieldList={[]}\r\n                            hideDetailBand={true}\r\n                            controlMap={props.controlMap}\r\n                            methodUrl=\"PatientMaster\"\r\n                            isActionRequired={false}\r\n                            isToolBarRequired={false}\r\n                            isAddRequired={false}\r\n                            isRefreshRequired={false}\r\n                            selectedId = {null}\r\n                        />\r\n                </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default (injectIntl(AddFilteredPatient));\r\n"]},"metadata":{},"sourceType":"module"}