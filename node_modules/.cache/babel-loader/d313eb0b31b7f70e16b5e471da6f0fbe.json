{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import DropZone from'../../components/dropzone/dropzone.component';import{deleteAttachmentDropZone,onDropAttachFileList}from'../../components/CommonScript';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faTrashAlt,faTrashRestore}from'@fortawesome/free-solid-svg-icons';var BulkRetrieveOrDiposeSample=/*#__PURE__*/function(_React$Component){_inherits(BulkRetrieveOrDiposeSample,_React$Component);var _super=_createSuper(BulkRetrieveOrDiposeSample);function BulkRetrieveOrDiposeSample(props){var _this;_classCallCheck(this,BulkRetrieveOrDiposeSample);_this=_super.call(this,props);_this.onDropFile=function(attachedFiles,fieldName,maxSize){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=onDropAttachFileList(selectedRecord[fieldName],attachedFiles,maxSize);_this.props.childDataChange(selectedRecord);_this.setState({selectedRecord:selectedRecord,actionType:\"new\"});};_this.deleteAttachment=function(event,file,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=deleteAttachmentDropZone(selectedRecord[fieldName],file);_this.props.childDataChange(selectedRecord);_this.setState({selectedRecord:selectedRecord,actionType:\"delete\"//fileToDelete:file.name \n});};_this.state={selectedRecord:_this.props.selectedRecord,dynamicfields:_this.props.dynamicfields};return _this;}_createClass(BulkRetrieveOrDiposeSample,[{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this$state=this.state,selectedRecord=_this$state.selectedRecord,dynamicfields=_this$state.dynamicfields;var bool=false;if(this.props.dynamicfields!==previousProps.dynamicfields){bool=true;dynamicfields=this.props.dynamicfields||{};}if(this.props.selectedRecord!==previousProps.selectedRecord){bool=true;selectedRecord=this.props.selectedRecord||{};}if(bool){this.setState({selectedRecord:selectedRecord,dynamicfields:dynamicfields});}}},{key:\"render\",value:function render(){var _this2=this;var retrieve=this.props.controlMap.has(\"Retrieve\")&&this.props.controlMap.get(\"Retrieve\").ncontrolcode;var dispose=this.props.controlMap.has(\"Dispose\")&&this.props.controlMap.get(\"Dispose\").ncontrolcode;return/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6}),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\",marginRight:\"1rem\"},onClick:function onClick(){return _this2.props.CRUDSampleStorageTransaction({// sunitname: this.state.selectedRecord.nunitcode ? this.state.selectedRecord.nunitcode.label : \"NA\",\n// saliquotsampleid: this.state.selectedRecord.saliquotsampleid\n//  && this.state.selectedRecord.saliquotsampleid !== \"\"\n// ? this.state.selectedRecord.saliquotsampleid : \"\",\n//  nquantity: this.state.selectedRecord.nquantity\n//  && this.state.selectedRecord.nquantity !== \"\"\n// ? this.state.selectedRecord.nquantity : 0,\nncontrolcode:retrieve,// ALPD-4484 janakumar Sample Retrieval & disposal-->Bulk & retrieve is not working. While retrieve the sample Id the Status is in Disposed status.\nisRetrieve:true,//'nsamplestoragetransactioncode': this.state.selectedBarcodeValue && this.state.selectedBarcodeValue.nsamplestoragetransactioncode,\nuserinfo:_this2.props.userInfo,// scomments: this.state.selectedRecord.scomments && this.state.selectedRecord.scomments !== \"\"\n//     ? this.state.selectedRecord.scomments : \"-\",\nimportRetrieveOrDispose:true// spositionvalue: this.state.selectedRecord.spositionvalue,\n// nneedaliquot: this.state.selectedRecord.nneedaliquot &&\n//     this.state.selectedRecord.nneedaliquot ? true : false,\n// nunitcode: this.state.selectedRecord.nunitcode && this.state.selectedRecord.nunitcode !== \"\"\n//     ? this.state.selectedRecord.nunitcode : 0\n},'create');},hidden:this.props.userRoleControlRights.indexOf(retrieve)===-1},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashRestore}),\"  \",this.props.intl.formatMessage({id:\"IDS_RETRIEVE\"}))),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\",marginRight:\"1rem\"},onClick:function onClick(){return _this2.props.CRUDSampleStorageTransaction({// sunitname: this.state.selectedRecord.nunitcode ? this.state.selectedRecord.nunitcode.label : \"NA\",\n// saliquotsampleid: this.state.selectedRecord.saliquotsampleid\n//     && this.state.selectedRecord.saliquotsampleid !== \"\"\n//     ? this.state.selectedRecord.saliquotsampleid : \"\",\n// nquantity: this.state.selectedRecord.nquantity\n//     && this.state.selectedRecord.nquantity !== \"\"\n//     ? this.state.selectedRecord.nquantity : 0,\nncontrolcode:dispose,// 'nsamplestoragetransactioncode': this.state.selectedBarcodeValue && this.state.selectedBarcodeValue.nsamplestoragetransactioncode,\nuserinfo:_this2.props.userInfo,// scomments: this.state.selectedRecord.scomments && this.state.selectedRecord.scomments !== \"\"\n//     ? this.state.selectedRecord.scomments : \"-\",\nimportRetrieveOrDispose:true// spositionvalue: this.state.selectedRecord.spositionvalue,\n// nneedaliquot: this.state.selectedRecord.nneedaliquot &&\n//     this.state.selectedRecord.nneedaliquot ? true : false\n},'create');},hidden:this.props.userRoleControlRights.indexOf(dispose)===-1},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt}),\"  \",this.props.intl.formatMessage({id:\"IDS_DISPOSE\"})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DropZone,{name:\"sfilename\",label:this.props.intl.formatMessage({id:\"IDS_FILENAME\"}),isMandatory:true,maxFiles:\"1\",minSize:0,maxSize:this.props.maxSize,accept:\".xlsx, .xls\",onDrop:function onDrop(event){return _this2.onDropFile(event,\"sfilename\",\"1\");},actionType:this.props.actionType,deleteAttachment:this.deleteAttachment,multiple:this.props.multiple,editFiles:this.state.selectedRecord?this.state.selectedRecord:{},attachmentTypeCode:this.props.editFiles&&this.props.editFiles.nattachmenttypecode,fileSizeName:\"nfilesize\",fileName:\"sfilename\"// disabled={disabled}\n}))));}}]);return BulkRetrieveOrDiposeSample;}(React.Component);export default injectIntl(BulkRetrieveOrDiposeSample);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/storagemanagement/BulkRetrieveOrDiposeSample.jsx"],"names":["React","Row","Col","injectIntl","DropZone","deleteAttachmentDropZone","onDropAttachFileList","FontAwesomeIcon","faTrashAlt","faTrashRestore","BulkRetrieveOrDiposeSample","props","onDropFile","attachedFiles","fieldName","maxSize","selectedRecord","state","childDataChange","setState","actionType","deleteAttachment","event","file","dynamicfields","previousProps","bool","retrieve","controlMap","has","get","ncontrolcode","dispose","float","marginRight","CRUDSampleStorageTransaction","isRetrieve","userinfo","userInfo","importRetrieveOrDispose","userRoleControlRights","indexOf","intl","formatMessage","id","multiple","editFiles","nattachmenttypecode","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col} from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nimport { deleteAttachmentDropZone,onDropAttachFileList } from '../../components/CommonScript';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt,  faTrashRestore } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass BulkRetrieveOrDiposeSample extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedRecord: this.props.selectedRecord,\r\n            dynamicfields: this.props.dynamicfields\r\n        }\r\n    }\r\n    onDropFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.props.childDataChange(selectedRecord);\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n        this.props.childDataChange(selectedRecord);\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let { selectedRecord , dynamicfields\r\n        } = this.state\r\n        let bool = false;\r\n\r\n        if (this.props.dynamicfields !== previousProps.dynamicfields) {\r\n            bool = true;\r\n            dynamicfields = this.props.dynamicfields || {};\r\n        }\r\n        if (this.props.selectedRecord !== previousProps.selectedRecord) {\r\n            bool = true;\r\n            selectedRecord = this.props.selectedRecord || {};\r\n        }\r\n        if (bool) {\r\n            this.setState({\r\n                selectedRecord , dynamicfields\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const retrieve = this.props.controlMap.has(\"Retrieve\") && this.props.controlMap.get(\"Retrieve\").ncontrolcode;\r\n        const dispose = this.props.controlMap.has(\"Dispose\") && this.props.controlMap.get(\"Dispose\").ncontrolcode;\r\n\r\n        return (\r\n            <Col md={12}>\r\n                <Row>\r\n                <Col md={6}></Col>\r\n                    <Col md={3}>\r\n                        <button className=\"btn btn-primary\" style={{ float: \"right\", marginRight: \"1rem\" }}\r\n                            onClick={() => this.props.CRUDSampleStorageTransaction({\r\n                               // sunitname: this.state.selectedRecord.nunitcode ? this.state.selectedRecord.nunitcode.label : \"NA\",\r\n                               // saliquotsampleid: this.state.selectedRecord.saliquotsampleid\r\n                                  //  && this.state.selectedRecord.saliquotsampleid !== \"\"\r\n                                   // ? this.state.selectedRecord.saliquotsampleid : \"\",\r\n                              //  nquantity: this.state.selectedRecord.nquantity\r\n                                  //  && this.state.selectedRecord.nquantity !== \"\"\r\n                                   // ? this.state.selectedRecord.nquantity : 0,\r\n                                ncontrolcode: retrieve,\r\n                                // ALPD-4484 janakumar Sample Retrieval & disposal-->Bulk & retrieve is not working. While retrieve the sample Id the Status is in Disposed status.\r\n                                isRetrieve:true, \r\n                                //'nsamplestoragetransactioncode': this.state.selectedBarcodeValue && this.state.selectedBarcodeValue.nsamplestoragetransactioncode,\r\n                                userinfo: this.props.userInfo,\r\n                                // scomments: this.state.selectedRecord.scomments && this.state.selectedRecord.scomments !== \"\"\r\n                                //     ? this.state.selectedRecord.scomments : \"-\",\r\n                                importRetrieveOrDispose: true,\r\n                               // spositionvalue: this.state.selectedRecord.spositionvalue,\r\n                                // nneedaliquot: this.state.selectedRecord.nneedaliquot &&\r\n                                //     this.state.selectedRecord.nneedaliquot ? true : false,\r\n                                // nunitcode: this.state.selectedRecord.nunitcode && this.state.selectedRecord.nunitcode !== \"\"\r\n                                //     ? this.state.selectedRecord.nunitcode : 0\r\n                            }, 'create')}\r\n                            hidden={this.props.userRoleControlRights.indexOf(retrieve) === -1}\r\n                        >\r\n                            <FontAwesomeIcon icon={faTrashRestore}></FontAwesomeIcon>{\"  \"}\r\n                            {this.props.intl.formatMessage({ id: \"IDS_RETRIEVE\" })}\r\n\r\n\r\n                        </button>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <button className=\"btn btn-primary\" style={{ float: \"right\", marginRight: \"1rem\" }}\r\n                            onClick={() => this.props.CRUDSampleStorageTransaction({\r\n                                // sunitname: this.state.selectedRecord.nunitcode ? this.state.selectedRecord.nunitcode.label : \"NA\",\r\n                                // saliquotsampleid: this.state.selectedRecord.saliquotsampleid\r\n                                //     && this.state.selectedRecord.saliquotsampleid !== \"\"\r\n                                //     ? this.state.selectedRecord.saliquotsampleid : \"\",\r\n                                // nquantity: this.state.selectedRecord.nquantity\r\n                                //     && this.state.selectedRecord.nquantity !== \"\"\r\n                                //     ? this.state.selectedRecord.nquantity : 0,\r\n                                ncontrolcode: dispose,\r\n                                // 'nsamplestoragetransactioncode': this.state.selectedBarcodeValue && this.state.selectedBarcodeValue.nsamplestoragetransactioncode,\r\n                                userinfo: this.props.userInfo,\r\n                                // scomments: this.state.selectedRecord.scomments && this.state.selectedRecord.scomments !== \"\"\r\n                                //     ? this.state.selectedRecord.scomments : \"-\",\r\n                                    importRetrieveOrDispose: true,\r\n                                // spositionvalue: this.state.selectedRecord.spositionvalue,\r\n                                // nneedaliquot: this.state.selectedRecord.nneedaliquot &&\r\n                                //     this.state.selectedRecord.nneedaliquot ? true : false\r\n                            }, 'create')}\r\n                            hidden={this.props.userRoleControlRights.indexOf(dispose) === -1}\r\n                        >\r\n                            <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>{\"  \"}\r\n                            {this.props.intl.formatMessage({ id: \"IDS_DISPOSE\" })}\r\n\r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n            <Col md=\"12\">\r\n                    <DropZone\r\n                        name={\"sfilename\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                        isMandatory={true}\r\n                        maxFiles={\"1\"}\r\n                        minSize={0}\r\n                        maxSize={this.props.maxSize}\r\n                        accept={\".xlsx, .xls\"}\r\n                        onDrop={(event) => this.onDropFile(event, \"sfilename\", \"1\")}\r\n                        actionType={this.props.actionType}\r\n                        deleteAttachment={this.deleteAttachment}\r\n                        multiple={this.props.multiple}\r\n                        editFiles={this.state.selectedRecord ? this.state.selectedRecord : {}}\r\n                        attachmentTypeCode={this.props.editFiles && this.props.editFiles.nattachmenttypecode}\r\n                        fileSizeName=\"nfilesize\"\r\n                        fileName=\"sfilename\"\r\n                       // disabled={disabled}\r\n                    />\r\n            </Col>\r\n        </Row>\r\n            </Col>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default injectIntl(BulkRetrieveOrDiposeSample);"]},"metadata":{},"sourceType":"module"}