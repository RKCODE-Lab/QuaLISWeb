{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { intl } from \"../components/App\";\nimport { sortData } from \"../components/CommonScript\";\nimport rsapi from \"../rsapi\";\nimport { initRequest } from \"./LoginAction\";\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\nexport const changeTrainingUserViewDateFilter = inputParam => {\n  return dispatch => {\n    dispatch(initRequest(true));\n    rsapi.post(\"/userview/get\" + inputParam.methodUrl, inputParam.inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      };\n\n      if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\n        inputParam.searchRef.current.value = \"\";\n        masterData['searchedData'] = undefined;\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData: { ...masterData\n          }\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n};\nexport function getTrainingUserViewDetails(inputData, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"userview/getTrainingUserViewDetails\", {\n      \"userinfo\": userInfo,\n      \"ntrainingcode\": inputData.ntrainingcode,\n      \"nparticipantcode\": inputData.nparticipantcode\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response\n        }));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/actions/TrainingUserViewAction.js"],"names":["toast","intl","sortData","rsapi","initRequest","DEFAULT_RETURN","changeTrainingUserViewDateFilter","inputParam","dispatch","post","methodUrl","inputData","then","response","responseData","data","masterData","searchRef","undefined","current","value","type","payload","loading","catch","error","status","message","warn","getTrainingUserViewDetails","userInfo","ntrainingcode","nparticipantcode","formatMessage","id"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport { intl } from \"../components/App\";\r\nimport { sortData } from \"../components/CommonScript\";\r\nimport rsapi from \"../rsapi\";\r\nimport { initRequest } from \"./LoginAction\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\n\r\nexport const changeTrainingUserViewDateFilter = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/userview/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\r\n                    inputParam.searchRef.current.value = \"\";\r\n                    masterData['searchedData'] = undefined\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData\r\n                    \r\n\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getTrainingUserViewDetails(inputData, userInfo,masterData) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"userview/getTrainingUserViewDetails\", {\r\n            \"userinfo\": userInfo,\"ntrainingcode\": inputData.ntrainingcode,\r\n            \"nparticipantcode\":inputData.nparticipantcode\r\n\r\n        })\r\n            .then(response => {\r\n\r\n                masterData = { ...masterData, ...response.data };\r\n\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}