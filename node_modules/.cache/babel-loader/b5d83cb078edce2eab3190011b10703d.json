{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\competencemanagement\\\\trainingcertificate\\\\AddTrainingCertificate.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../../components/form-input/form-input.component';\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\nimport DateTimePicker from '../../../components/date-time-picker/date-time-picker.component';\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\n\nconst AddTrainingCertificate = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.formatMessage({\n      id: \"IDS_TRAININGCATEGORY\"\n    }),\n    isSearchable: true,\n    name: \"ntrainingcategorycode\",\n    isDisabled: false,\n    placeholder: props.formatMessage({\n      id: \"IDS_TRAININGCATEGORY\"\n    }),\n    isMandatory: true,\n    options: props.trainingcategoryList,\n    optionId: \"ntrainingcategorycode\",\n    optionValue: \"strainingcategoryname\",\n    value: props.selectedRecord[\"ntrainingcategorycode\"] //defaultValue={props.selectedRecord[\"ncountrycode\"]}\n    ,\n    onChange: event => props.onComboChange(event, 'ntrainingcategorycode'),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.formatMessage({\n      id: \"IDS_TECHNIQUE\"\n    }),\n    isSearchable: true,\n    name: \"ntechniquecode\",\n    isDisabled: false,\n    placeholder: props.formatMessage({\n      id: \"IDS_TECHNIQUE\"\n    }),\n    isMandatory: true,\n    options: props.techniqueList,\n    optionId: \"ntechniquecode\",\n    optionValue: \"stechniquename\",\n    value: props.selectedRecord[\"ntechniquecode\"] //defaultValue={props.selectedRecord[\"ncountrycode\"]}\n    ,\n    onChange: event => props.onComboChange(event, 'ntechniquecode'),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.formatMessage({\n      id: \"IDS_TRAININGTOPIC\"\n    }),\n    name: \"strainingtopic\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_TRAININGTOPIC\"\n    }),\n    value: props.selectedRecord[\"strainingtopic\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dtrainingdatetime\",\n    label: props.intl.formatMessage({\n      id: \"IDS_TRAININGDATE\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord ? props.selectedRecord[\"dtrainingdatetime\"] : new Date(),\n    dateFormat: props.userInfo[\"ssitedatetime\"],\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TRAININGDATE\"\n    }),\n    showTimeInput: true,\n    isClearable: false,\n    isMandatory: true,\n    required: true // isDisabled={diableAllStatus === recordStatus}\n    ,\n    minDate: props.currentTime,\n    minTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dtrainingdatetime\", date),\n    value: props.selectedRecord ? props.selectedRecord[\"dtrainingdatetime\"] : new Date(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), props.userInfo.istimezoneshow && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntztrainingdate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.timeZoneList // optionId=\"ntimezonecode\"\n    // optionValue=\"stimezoneid\"\n    ,\n    value: props.selectedRecord[\"ntztrainingdate\"],\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isClearable: false,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'ntztrainingdate'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.formatMessage({\n      id: \"IDS_TRAINERNAME\"\n    }),\n    name: \"strainername\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_TRAINERNAME\"\n    }),\n    value: props.selectedRecord[\"strainername\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.formatMessage({\n      id: \"IDS_TRAININGVENUE\"\n    }),\n    name: \"strainingvenue\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_TRAININGVENUE\"\n    }),\n    value: props.selectedRecord[\"strainingvenue\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"scomments\",\n    label: props.intl.formatMessage({\n      id: \"IDS_TRAININGCOMMENTS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_TRAININGCOMMENTS\"\n    }),\n    value: props.selectedRecord[\"scomments\"],\n    rows: \"2\",\n    isMandatory: true,\n    required: true,\n    maxLength: 250,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddTrainingCertificate);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/competencemanagement/trainingcertificate/AddTrainingCertificate.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","DateTimePicker","FormSelectSearch","AddTrainingCertificate","props","formatMessage","id","trainingcategoryList","selectedRecord","event","onComboChange","techniqueList","onInputOnChange","userInfo","istimezoneshow","intl","Date","currentTime","date","handleDateChange","timeZoneList"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport DateTimePicker from '../../../components/date-time-picker/date-time-picker.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\n\r\nconst AddTrainingCertificate = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.formatMessage({ id: \"IDS_TRAININGCATEGORY\" })}\r\n                    isSearchable={true}\r\n                    name={\"ntrainingcategorycode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.formatMessage({ id: \"IDS_TRAININGCATEGORY\" })}\r\n                    isMandatory={true}\r\n                    options={props.trainingcategoryList}\r\n                    optionId='ntrainingcategorycode'\r\n                    optionValue='strainingcategoryname'\r\n                    value={props.selectedRecord[\"ntrainingcategorycode\"]}\r\n                    //defaultValue={props.selectedRecord[\"ncountrycode\"]}\r\n\r\n                    onChange={(event) => props.onComboChange(event, 'ntrainingcategorycode')}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n\r\n                <FormSelectSearch\r\n                    formLabel={props.formatMessage({ id: \"IDS_TECHNIQUE\" })}\r\n                    isSearchable={true}\r\n                    name={\"ntechniquecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.formatMessage({ id: \"IDS_TECHNIQUE\" })}\r\n                    isMandatory={true}\r\n                    options={props.techniqueList}\r\n                    optionId='ntechniquecode'\r\n                    optionValue='stechniquename'\r\n                    value={props.selectedRecord[\"ntechniquecode\"]}\r\n                    //defaultValue={props.selectedRecord[\"ncountrycode\"]}\r\n\r\n                    onChange={(event) => props.onComboChange(event, 'ntechniquecode')}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n\r\n                <FormInput\r\n                    label={props.formatMessage({ id: \"IDS_TRAININGTOPIC\" })}\r\n                    name={\"strainingtopic\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.formatMessage({ id: \"IDS_TRAININGTOPIC\" })}\r\n                    value={props.selectedRecord[\"strainingtopic\"]}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n\r\n                />\r\n            </Col>\r\n\r\n            <Col md={props.userInfo.istimezoneshow ? 6 : 12}>\r\n                <DateTimePicker\r\n                    name={\"dtrainingdatetime\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_TRAININGDATE\" })}\r\n                    className='form-control'\r\n                    placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                    selected={props.selectedRecord ? props.selectedRecord[\"dtrainingdatetime\"] : new Date()}\r\n                    dateFormat={props.userInfo[\"ssitedatetime\"]}\r\n                    timeInputLabel={props.intl.formatMessage({ id: \"IDS_TRAININGDATE\" })}\r\n                    showTimeInput={true}\r\n                    isClearable={false}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    // isDisabled={diableAllStatus === recordStatus}\r\n                    minDate={props.currentTime}\r\n                    minTime={props.currentTime}\r\n                    onChange={date => props.handleDateChange(\"dtrainingdatetime\", date)}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"dtrainingdatetime\"] : new Date()}\r\n                />\r\n            </Col>\r\n            {props.userInfo.istimezoneshow &&\r\n                <Col md={6}>\r\n                    <FormSelectSearch\r\n                        name={\"ntztrainingdate\"}\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={props.timeZoneList}\r\n                        // optionId=\"ntimezonecode\"\r\n                        // optionValue=\"stimezoneid\"\r\n                        value={props.selectedRecord[\"ntztrainingdate\"]}\r\n                        isMandatory={true}\r\n                        isMulti={false}\r\n                        isSearchable={true}\r\n                        isClearable={false}\r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        onChange={(event) => props.onComboChange(event, 'ntztrainingdate')}\r\n                    />\r\n\r\n                </Col>\r\n            }\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.formatMessage({ id: \"IDS_TRAINERNAME\" })}\r\n                    name={\"strainername\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.formatMessage({ id: \"IDS_TRAINERNAME\" })}\r\n                    value={props.selectedRecord[\"strainername\"]}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n                />\r\n\r\n                <FormInput\r\n                    label={props.formatMessage({ id: \"IDS_TRAININGVENUE\" })}\r\n                    name={\"strainingvenue\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.formatMessage({ id: \"IDS_TRAININGVENUE\" })}\r\n                    value={props.selectedRecord[\"strainingvenue\"]}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n                />\r\n\r\n                <FormTextarea\r\n                    name={\"scomments\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_TRAININGCOMMENTS\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_TRAININGCOMMENTS\" })}\r\n                    value={props.selectedRecord[\"scomments\"]}\r\n                    rows=\"2\"\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={250}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddTrainingCertificate);\r\n"]},"metadata":{},"sourceType":"module"}