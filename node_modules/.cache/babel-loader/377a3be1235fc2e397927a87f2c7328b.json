{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\credentialmanagement\\\\AddUser.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\nimport DropZone from '../../components/dropzone/dropzone.component';\n\nconst AddUser = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sloginid\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LOGINID\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LOGINID\"\n    }),\n    value: props.selectedRecord[\"sloginid\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 20,\n    readOnly: props.userLogged,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sfirstname\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FIRSTNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FIRSTNAME\"\n    }),\n    value: props.selectedRecord[\"sfirstname\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"slastname\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LASTNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LASTNAME\"\n    }),\n    value: props.selectedRecord[\"slastname\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sinitial\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_INITIAL\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_INITIAL\"\n    }),\n    value: props.selectedRecord[\"sinitial\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 20,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"ddateofjoin\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DATEOFJOIN\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"ddateofjoin\"] || \"\" // dateFormat={\"dd/MM/yyyy\"}\n    ,\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: true,\n    onChange: date => props.handleDateChange(\"ddateofjoin\", date),\n    value: props.selectedRecord[\"ddateofjoin\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ndesignationcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_DESIGNATION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.designationList // optionId=\"ndesignationcode\"\n    // optionValue=\"sdesignationname\"\n    ,\n    value: props.selectedRecord[\"ndesignationcode\"] // defaultValue={props.selectedRecord[\"ndesignationcode\"]}\n    ,\n    isMandatory: false,\n    isClearable: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true //alphabeticalSort={false}\n    ,\n    onChange: event => props.onComboChange(event, 'ndesignationcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ndeptcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_DEPARTMENT\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.departmentList // optionId=\"ndeptcode\"\n    // optionValue=\"sdeptname\"                            \n    ,\n    value: props.selectedRecord[\"ndeptcode\"] // defaultValue = { props.selectedRecord[\"ndeptcode\"]}\n    ,\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}                    \n    ,\n    onChange: event => props.onComboChange(event, 'ndeptcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"saddress1\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDRESS1\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ADDRESS1\"\n    }),\n    value: props.selectedRecord[\"saddress1\"],\n    rows: \"2\",\n    isMandatory: true,\n    required: true,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"saddress2\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDRESS2\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ADDRESS2\"\n    }),\n    value: props.selectedRecord[\"saddress2\"],\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"saddress3\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDRESS3\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ADDRESS3\"\n    }),\n    value: props.selectedRecord[\"saddress3\"],\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 31\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"squalification\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_QUALIFICATION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_QUALIFICATION\"\n    }),\n    value: props.selectedRecord[\"squalification\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 10,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sbloodgroup\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_BLOODGROUP\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_BLOODGROUP\"\n    }),\n    value: props.selectedRecord[\"sbloodgroup\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 10,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sjobdescription\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_JOBDESCRIPTION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_JOBDESCRIPTION\"\n    }),\n    value: props.selectedRecord[\"sjobdescription\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"semail\",\n    type: \"email\",\n    ref: props.emailRef,\n    label: props.intl.formatMessage({\n      id: \"IDS_EMAIL\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_EMAIL\"\n    }),\n    value: props.selectedRecord[\"semail\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event) //onBlur={(event)=>props.validateEmail(event, props.emailRef)}                            \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sphoneno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PHONENO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PHONENO\"\n    }),\n    value: props.selectedRecord[\"sphoneno\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"smobileno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_MOBILENO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MOBILENO\"\n    }),\n    value: props.selectedRecord[\"smobileno\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ncountrycode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_COUNTRY\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.countryList //   optionId='ncountrycode'\n    //   optionValue='scountryname'\n    ,\n    value: props.selectedRecord[\"ncountrycode\"] // defaultValue = { props.selectedRecord[\"ncountrycode\"]}\n    ,\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    onChange: event => props.onComboChange(event, 'ncountrycode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 24\n    }\n  }), props.operation === \"create\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"usersite\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SITE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.siteList //  optionId=\"nsitecode\"\n    //  optionValue=\"ssitename\"\n    ,\n    value: props.selectedRecord[\"usersite\"],\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    onChange: event => props.onComboChange(event, 'usersite'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nuserrolecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_USERROLE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.roleList // optionId=\"nuserrolecode\"\n    // optionValue=\"suserrolename\"\n    ,\n    value: props.selectedRecord[\"nuserrolecode\"],\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    onChange: event => props.onComboChange(event, 'nuserrolecode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 28\n    }\n  })) : \" \")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    name: \"ntransactionstatus\",\n    type: \"switch\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ISACTIVE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ISACTIVE\"\n    }),\n    defaultValue: props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false,\n    isMandatory: false,\n    required: false //   disabled={props.selectedRecord[\"nlogintypecode\"] === transactionStatus.LOGINTYPE_ADS}\n    ,\n    checked: props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    name: \"nlockmode\",\n    type: \"switch\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LOCKMODE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LOCKMODE\"\n    }),\n    defaultValue: props.selectedRecord[\"nlockmode\"] === transactionStatus.UNLOCK ? true : false,\n    isMandatory: false,\n    required: false //    disabled={props.selectedRecord[\"nlogintypecode\"] === transactionStatus.LOGINTYPE_ADS}\n    ,\n    checked: props.selectedRecord[\"nlockmode\"] === transactionStatus.UNLOCK ? true : false,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 24\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, Object.keys(props.selectedRecord).length > 0 && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(DropZone, {\n    name: \"ssignimgname\",\n    label: props.intl.formatMessage({\n      id: \"IDS_SSIGNIMGNAME\"\n    }),\n    maxFiles: 1,\n    accept: \"image/*\",\n    minSize: 0,\n    maxSize: 1,\n    onDrop: event => props.onDropImage(event, \"ssignimgname\", 1),\n    multiple: false,\n    editFiles: props.selectedRecord ? props.selectedRecord : {},\n    attachmentTypeCode: props.operation === \"update\" ? attachmentType.OTHERS : \"\",\n    fileName: \"ssignimgname\",\n    deleteAttachment: props.deleteUserFile //deleteAttachment={(event)=>props.deleteUserFile(event, \"ssignimgname\")}\n    //deleteAttachment={()=>props.deleteUserFile(\"ssignimgname\")}\n    ,\n    actionType: props.actionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 26\n    }\n  })), Object.keys(props.selectedRecord).length > 0 && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DropZone, {\n    name: \"suserimgname\",\n    label: props.intl.formatMessage({\n      id: \"IDS_SUSERIMGNAME\"\n    }),\n    maxFiles: 1,\n    accept: \"image/*\",\n    minSize: 0,\n    maxSize: 1,\n    onDrop: event => props.onDropImage(event, \"suserimgname\", 1),\n    multiple: false,\n    editFiles: props.selectedRecord ? props.selectedRecord : {},\n    attachmentTypeCode: props.operation === \"update\" ? attachmentType.OTHERS : \"\",\n    fileName: \"suserimgname\",\n    deleteAttachment: props.deleteUserFile //deleteAttachment={(event)=>props.deleteUserFile(event, \"suserimgname\")}\n    //deleteAttachment={()=>props.deleteUserFile(\"suserimgname\")}\n    ,\n    actionType: props.actionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 26\n    }\n  }))));\n};\n\nexport default injectIntl(AddUser);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/credentialmanagement/AddUser.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","DateTimePicker","transactionStatus","attachmentType","DropZone","AddUser","props","intl","formatMessage","id","selectedRecord","userLogged","event","onInputOnChange","userInfo","ssitedate","date","handleDateChange","designationList","onComboChange","departmentList","emailRef","countryList","operation","siteList","roleList","ACTIVE","UNLOCK","Object","keys","length","onDropImage","OTHERS","deleteUserFile","actionType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nimport {transactionStatus, attachmentType} from '../../components/Enumeration';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\n\r\nconst AddUser = (props) =>{    \r\n       return (<>\r\n           <Row>                                \r\n                <Col md={6}>\r\n                    <Row>\r\n                         <Col md={12}>\r\n                              <FormInput\r\n                                   name={\"sloginid\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_LOGINID\"})}                  \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_LOGINID\"})}\r\n                                   value ={ props.selectedRecord[\"sloginid\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={20}\r\n                                   readOnly = { props.userLogged}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n                        \r\n                              <FormInput\r\n                                   name={\"sfirstname\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_FIRSTNAME\"})}                            \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_FIRSTNAME\"})}\r\n                                   value ={ props.selectedRecord[\"sfirstname\"] }\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={50}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}                            \r\n                              />\r\n                         {/* </Col>\r\n                         <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"slastname\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_LASTNAME\"})}                          \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_LASTNAME\"})}\r\n                                   value ={ props.selectedRecord[\"slastname\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={50}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n                         {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sinitial\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_INITIAL\"})}                   \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_INITIAL\"})}\r\n                                   value ={ props.selectedRecord[\"sinitial\"] }\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={20}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n                         {/* </Col>\r\n                              <Col md={12}>                      */}\r\n                              <DateTimePicker\r\n                                                  name={\"ddateofjoin\"} \r\n                                                  label={ props.intl.formatMessage({ id:\"IDS_DATEOFJOIN\"})}                     \r\n                                                  className='form-control'\r\n                                                  placeholderText=\"Select date..\"\r\n                                                  selected={props.selectedRecord[\"ddateofjoin\"] || \"\"}\r\n                                                 // dateFormat={\"dd/MM/yyyy\"}\r\n                                                  dateFormat={props.userInfo.ssitedate}\r\n                                                  isClearable={true}\r\n                                                  onChange={date => props.handleDateChange(\"ddateofjoin\", date)}\r\n                                                  value={props.selectedRecord[\"ddateofjoin\"]}\r\n                                                                                \r\n                                   />\r\n                              {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormSelectSearch\r\n                                        name={\"ndesignationcode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_DESIGNATION\"})}                                \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                \r\n                                        options={ props.designationList}\r\n                                        // optionId=\"ndesignationcode\"\r\n                                        // optionValue=\"sdesignationname\"\r\n                                        value = { props.selectedRecord[\"ndesignationcode\"] }\r\n                                       // defaultValue={props.selectedRecord[\"ndesignationcode\"]}\r\n                                        isMandatory={false}\r\n                                        isClearable={true}\r\n                                        isMulti={false}\r\n                                        isSearchable={true}                               \r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        //alphabeticalSort={false}\r\n                                        onChange = {(event)=> props.onComboChange(event, 'ndesignationcode')}                               \r\n                                   />\r\n                         {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormSelectSearch\r\n                                        name={\"ndeptcode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_DEPARTMENT\"})}                           \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})} \r\n                                        options={ props.departmentList}\r\n                                        // optionId=\"ndeptcode\"\r\n                                        // optionValue=\"sdeptname\"                            \r\n                                        value = { props.selectedRecord[\"ndeptcode\"]}\r\n                                       // defaultValue = { props.selectedRecord[\"ndeptcode\"]}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isSearchable={true}                                \r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}   \r\n                                        //alphabeticalSort={true}                    \r\n                                        onChange = {(event)=> props.onComboChange(event, 'ndeptcode')}                              \r\n                                   />\r\n                         {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormTextarea\r\n                                   name={\"saddress1\"}\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_ADDRESS1\"})}                    \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_ADDRESS1\"})}\r\n                                   value ={ props.selectedRecord[\"saddress1\"]}\r\n                                   rows=\"2\"\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={255}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                                   />\r\n                         {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormTextarea\r\n                                   name={\"saddress2\"}\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_ADDRESS2\"})}                    \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_ADDRESS2\"})}\r\n                                   value ={ props.selectedRecord[\"saddress2\"]}\r\n                                   rows=\"2\"\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={255}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                                   />\r\n                         {/* </Col>\r\n                              <Col md={12}> */}\r\n                              <FormTextarea\r\n                                   name={\"saddress3\"}\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_ADDRESS3\"})}                      \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_ADDRESS3\"})}\r\n                                   value ={ props.selectedRecord[\"saddress3\"]}\r\n                                   rows=\"2\"\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={255}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                                   />\r\n                         </Col>                   \r\n                   </Row>\r\n               </Col>\r\n               <Col md={6}>   \r\n                    <Row>                   \r\n                    <Col md={12}>\r\n                       <FormInput\r\n                            name={\"squalification\"}\r\n                            type=\"text\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_QUALIFICATION\"})}                        \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_QUALIFICATION\"})}\r\n                            value ={ props.selectedRecord[\"squalification\"]}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={10}\r\n                            onChange={(event)=> props.onInputOnChange(event)}\r\n                       />\r\n                   {/* </Col>\r\n                    <Col md={12}> */}\r\n                       <FormInput\r\n                            name={\"sbloodgroup\"}\r\n                            type=\"text\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_BLOODGROUP\"})}                          \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_BLOODGROUP\"})}\r\n                            value ={ props.selectedRecord[\"sbloodgroup\"]}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={10}\r\n                            onChange={(event)=> props.onInputOnChange(event)}\r\n                       />\r\n                   {/* </Col>\r\n                    <Col md={12}> */}\r\n                       <FormInput\r\n                            name={\"sjobdescription\"}\r\n                            type=\"text\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_JOBDESCRIPTION\"})}                           \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_JOBDESCRIPTION\"})}\r\n                            value ={ props.selectedRecord[\"sjobdescription\"]}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={255}\r\n                            onChange={(event)=> props.onInputOnChange(event)}\r\n                       />\r\n                   {/* </Col>\r\n                    <Col md={12}> */}\r\n                       <FormInput\r\n                            name={\"semail\"}\r\n                            type=\"email\"\r\n                            ref={props.emailRef}\r\n                            label={ props.intl.formatMessage({ id:\"IDS_EMAIL\"})}                            \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_EMAIL\"})}\r\n                            value ={ props.selectedRecord[\"semail\"]}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={50}\r\n                            onChange={(event)=> props.onInputOnChange(event)} \r\n                            //onBlur={(event)=>props.validateEmail(event, props.emailRef)}                            \r\n                       />\r\n                   {/* </Col>\r\n                    <Col md={12}> */}\r\n                        <FormInput\r\n                            name={\"sphoneno\"}\r\n                            type=\"text\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}                  \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}\r\n                            value ={ props.selectedRecord[\"sphoneno\"]}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={50}\r\n                            onChange={(event)=> props.onInputOnChange(event)}\r\n                       /> \r\n                       \r\n                   {/* </Col>\r\n                    <Col md={12}> */}\r\n                       <FormInput\r\n                            name={\"smobileno\"}\r\n                            type=\"text\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_MOBILENO\"})}                   \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_MOBILENO\"})}\r\n                            value ={ props.selectedRecord[\"smobileno\"] }\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={50}\r\n                            onChange={(event)=> props.onInputOnChange(event)}\r\n                       />                      \r\n                   {/* </Col>\r\n                    <Col md={12}> */}\r\n\r\n                       <FormSelectSearch\r\n                                name={\"ncountrycode\"}\r\n                                formLabel={ props.intl.formatMessage({ id:\"IDS_COUNTRY\"})}                              \r\n                                placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                               \r\n                                options={ props.countryList}\r\n                              //   optionId='ncountrycode'\r\n                              //   optionValue='scountryname'\r\n                                value = { props.selectedRecord[\"ncountrycode\"]}\r\n                               // defaultValue = { props.selectedRecord[\"ncountrycode\"]}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isSearchable={true}                                \r\n                                isDisabled={false}\r\n                                closeMenuOnSelect={true}\r\n                                //alphabeticalSort={true}\r\n                                onChange = {(event)=> props.onComboChange(event, 'ncountrycode')}                               \r\n                           />\r\n                   {/* </Col> */}\r\n                   { props.operation === \"create\" ? <>\r\n                        {/* <Col md={12}> */}\r\n                            <FormSelectSearch\r\n                                    name={\"usersite\"}\r\n                                    formLabel={ props.intl.formatMessage({ id:\"IDS_SITE\"})}\r\n                                    placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                 \r\n                                    options={ props.siteList}\r\n                                   //  optionId=\"nsitecode\"\r\n                                   //  optionValue=\"ssitename\"\r\n                                    value = { props.selectedRecord[\"usersite\"]}\r\n                                    isMandatory={true}\r\n                                    isMulti={false}\r\n                                    isSearchable={true}   \r\n                                    isDisabled={false} \r\n                                    closeMenuOnSelect={true}\r\n                                    //alphabeticalSort={true}\r\n                                    onChange = {(event)=> props.onComboChange(event, 'usersite')}\r\n                                />\r\n                        {/* </Col>\r\n                        <Col md={12}> */}\r\n                           <FormSelectSearch\r\n                                   name={\"nuserrolecode\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_USERROLE\"})}\r\n                                   placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                   \r\n                                   options={ props.roleList}\r\n                                   // optionId=\"nuserrolecode\"\r\n                                   // optionValue=\"suserrolename\"\r\n                                   value = { props.selectedRecord[\"nuserrolecode\"]}\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}  \r\n                                   isDisabled={false} \r\n                                   closeMenuOnSelect={true}\r\n                                   //alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'nuserrolecode')}\r\n                               />\r\n                       {/* </Col> */}\r\n                       </>\r\n                       : \" \"\r\n                    }  \r\n               </Col>\r\n               </Row>\r\n               <Row> \r\n                    <Col md={6}>\r\n                       <CustomSwitch                          \r\n                           name={\"ntransactionstatus\"}\r\n                           type=\"switch\"\r\n                           label={ props.intl.formatMessage({ id:\"IDS_ISACTIVE\"})}                          \r\n                           placeholder={ props.intl.formatMessage({ id:\"IDS_ISACTIVE\"})}\r\n                           defaultValue ={ props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true :false}\r\n                           isMandatory={false}\r\n                           required={false}\r\n                         //   disabled={props.selectedRecord[\"nlogintypecode\"] === transactionStatus.LOGINTYPE_ADS}\r\n                           checked={ props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true :false }\r\n                           onChange={(event)=> props.onInputOnChange(event)}\r\n                          />\r\n                   </Col>\r\n                    <Col md={6}>\r\n                       <CustomSwitch\r\n                            name={\"nlockmode\"}\r\n                            type=\"switch\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_LOCKMODE\"})}\r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_LOCKMODE\"})}                            \r\n                            defaultValue ={ props.selectedRecord[\"nlockmode\"] === transactionStatus.UNLOCK ? true :false }  \r\n                            isMandatory={false}                       \r\n                            required={false}\r\n                         //    disabled={props.selectedRecord[\"nlogintypecode\"] === transactionStatus.LOGINTYPE_ADS}\r\n                            checked={ props.selectedRecord[\"nlockmode\"] === transactionStatus.UNLOCK ? true :false}\r\n                            onChange={(event)=> props.onInputOnChange(event)}\r\n                         />\r\n                   </Col> \r\n                   \r\n                </Row>  \r\n            </Col>              \r\n        </Row>   \r\n       \r\n          <Row>\r\n             {Object.keys(props.selectedRecord).length >0 &&\r\n                   <Col md={6}>\r\n                         <DropZone \r\n                              name={\"ssignimgname\"}\r\n                              label={ props.intl.formatMessage({ id:\"IDS_SSIGNIMGNAME\"})} \r\n                              maxFiles={1}\r\n                              accept=\"image/*\"\r\n                              minSize={0}\r\n                              maxSize={1}\r\n                              onDrop={(event)=>props.onDropImage(event, \"ssignimgname\",1)}\r\n                              multiple={false}\r\n                              editFiles={props.selectedRecord ? props.selectedRecord :{}}\r\n                              attachmentTypeCode={props.operation === \"update\"? attachmentType.OTHERS : \"\"}            \r\n                              fileName=\"ssignimgname\"\r\n                              deleteAttachment={props.deleteUserFile}\r\n                              //deleteAttachment={(event)=>props.deleteUserFile(event, \"ssignimgname\")}\r\n                              //deleteAttachment={()=>props.deleteUserFile(\"ssignimgname\")}\r\n                              actionType={props.actionType}\r\n                         />\r\n                    </Col> }\r\n                    { Object.keys(props.selectedRecord).length >0 && \r\n                    <Col md={6}>\r\n                         <DropZone \r\n                              name={\"suserimgname\"}\r\n                              label={ props.intl.formatMessage({ id:\"IDS_SUSERIMGNAME\"})} \r\n                              maxFiles={1}\r\n                              accept=\"image/*\"\r\n                              minSize={0}\r\n                              maxSize={1}\r\n                              onDrop={(event)=>props.onDropImage(event, \"suserimgname\",1)}\r\n                              multiple={false}\r\n                              editFiles={props.selectedRecord ? props.selectedRecord :{}}\r\n                              attachmentTypeCode={props.operation === \"update\" ? attachmentType.OTHERS : \"\"}            \r\n                              fileName=\"suserimgname\"\r\n                              deleteAttachment={props.deleteUserFile}\r\n                              //deleteAttachment={(event)=>props.deleteUserFile(event, \"suserimgname\")}\r\n                              //deleteAttachment={()=>props.deleteUserFile(\"suserimgname\")}\r\n                              actionType={props.actionType}\r\n                         />\r\n                    </Col> }\r\n       </Row></>\r\n       )\r\n   }\r\n   export default injectIntl(AddUser);\r\n"]},"metadata":{},"sourceType":"module"}