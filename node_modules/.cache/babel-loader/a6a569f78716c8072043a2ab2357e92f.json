{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{transactionStatus}from\"../../../components/Enumeration\";export function onSaveTestComments(saveParam,selectedMaster){var inputData={};var selectedRecord=saveParam.selectedRecord;var commentArray=[];if(saveParam.operation==='update'){var comment={};comment['ntestcommentcode']=selectedRecord.ntestcommentcode?selectedRecord.ntestcommentcode:0;comment[\"npreregno\"]=selectedRecord.npreregno;comment[\"ntransactionsamplecode\"]=selectedRecord.ntransactionsamplecode;comment[\"ntransactiontestcode\"]=selectedRecord.ntransactiontestcode;comment['nformcode']=saveParam.userInfo.nformcode;comment['nusercode']=saveParam.userInfo.nusercode;comment['nuserrolecode']=saveParam.userInfo.nuserrole;comment[\"jsondata\"]={stestsynonym:selectedRecord.stestsynonym,scomments:selectedRecord.scomments?selectedRecord.scomments.trim():\"\",scommentsubtype:selectedRecord.ncommentsubtypecode&&selectedRecord.ncommentsubtypecode.label,spredefinedname:selectedRecord.nsampletestcommentscode&&selectedRecord.nsampletestcommentscode.label!==\"\"?selectedRecord.nsampletestcommentscode.label:'-',sdescription:selectedRecord.sdescription&&selectedRecord.sdescription,ncommentsubtypecode:selectedRecord.ncommentsubtypecode&&selectedRecord.ncommentsubtypecode,nsampletestcommentscode:selectedRecord.nsampletestcommentscode?selectedRecord.nsampletestcommentscode:'-'};comment[\"nsamplecommentscode\"]=selectedRecord.nsamplecommentscode?selectedRecord.nsamplecommentscode.value:-1;comment['nstatus']=transactionStatus.ACTIVE;inputData[\"testcomment\"]=comment;}else{selectedMaster.forEach(function(test){var comment={};comment['ntestcommentcode']=selectedRecord.ntestcommentcode?selectedRecord.ntestcommentcode:0;comment[\"npreregno\"]=test.npreregno;comment[\"ntransactionsamplecode\"]=test.ntransactionsamplecode;comment[\"ntransactiontestcode\"]=test.ntransactiontestcode;comment['nformcode']=saveParam.userInfo.nformcode;comment['nusercode']=saveParam.userInfo.nusercode;comment['nuserrolecode']=saveParam.userInfo.nuserrole;comment[\"jsondata\"]={stestsynonym:test.stestsynonym,scomments:selectedRecord.scomments?selectedRecord.scomments.trim():\"\",scommentsubtype:selectedRecord.ncommentsubtypecode&&selectedRecord.ncommentsubtypecode.label,spredefinedname:selectedRecord.nsampletestcommentscode&&selectedRecord.nsampletestcommentscode.label!==\"\"?selectedRecord.nsampletestcommentscode.label:'-',sdescription:selectedRecord.sdescription&&selectedRecord.sdescription,ncommentsubtypecode:selectedRecord.ncommentsubtypecode&&selectedRecord.ncommentsubtypecode,nsampletestcommentscode:selectedRecord.nsampletestcommentscode?selectedRecord.nsampletestcommentscode:'-'};comment[\"nsamplecommentscode\"]=selectedRecord.nsamplecommentscode?selectedRecord.nsamplecommentscode.value:-1;comment['nstatus']=transactionStatus.ACTIVE;commentArray.push(comment);});inputData[\"testcomment\"]=commentArray;}inputData[\"ntransactiontestcode\"]=saveParam.ntransactiontestcode;var inputParam={inputData:_objectSpread({userinfo:saveParam.userInfo},inputData),operation:saveParam.operation,selectedId:selectedRecord.ntestcommentcode?selectedRecord.ntestcommentcode:0,classUrl:\"comments\",saveType:saveParam.saveType,formRef:saveParam.formRef,methodUrl:\"TestComment\"};return inputParam;}export function onSaveSampleComments(saveParam,selectedMaster){var inputData={};var selectedRecord=saveParam.selectedRecord;var commentArray=[];if(saveParam.operation==='update'){var comment={};comment['nregcommentcode']=selectedRecord.nregcommentcode?selectedRecord.nregcommentcode:0;comment[\"npreregno\"]=selectedRecord.npreregno;comment['nformcode']=saveParam.userInfo.nformcode;comment['nusercode']=saveParam.userInfo.nusercode;comment['nuserrolecode']=saveParam.userInfo.nuserrole;comment[\"jsondata\"]={sarno:selectedRecord.jsondata.sarno,scomments:selectedRecord.scomments?selectedRecord.scomments.trim():\"\"};comment[\"nsamplecommentscode\"]=saveParam.isTestComment&&selectedRecord.nsamplecommentscode?selectedRecord.nsamplecommentscode.value:-1;comment['nstatus']=transactionStatus.ACTIVE;inputData[\"samplecomment\"]=comment;}else{selectedMaster.forEach(function(sample){var comment={};comment['nregcommentcode']=selectedRecord.nregcommentcode?selectedRecord.nregcommentcode:0;comment[\"npreregno\"]=sample.npreregno;comment['nformcode']=saveParam.userInfo.nformcode;comment['nusercode']=saveParam.userInfo.nusercode;comment['nuserrolecode']=saveParam.userInfo.nuserrole;comment[\"jsondata\"]={sarno:sample.sarno,scomments:selectedRecord.scomments?selectedRecord.scomments.trim():\"\"};comment[\"nsamplecommentscode\"]=saveParam.isTestComment&&selectedRecord.nsamplecommentscode?selectedRecord.nsamplecommentscode.value:-1;comment['nstatus']=transactionStatus.ACTIVE;commentArray.push(comment);});inputData[\"samplecomment\"]=commentArray;}inputData[\"npreregno\"]=saveParam.npreregno;var inputParam={inputData:_objectSpread({userinfo:saveParam.userInfo},inputData),operation:saveParam.operation,selectedId:selectedRecord.nregcommentcode?selectedRecord.nregcommentcode:0,classUrl:\"comments\",saveType:saveParam.saveType,formRef:saveParam.formRef,methodUrl:\"SampleComment\"};return inputParam;}export function onSaveSubSampleComments(saveParam,selectedMaster){var inputData={};var selectedRecord=saveParam.selectedRecord;var commentArray=[];if(saveParam.operation==='update'){var comment={};comment['nsamplecommentcode']=selectedRecord.nsamplecommentcode?selectedRecord.nsamplecommentcode:0;comment[\"ntransactionsamplecode\"]=selectedRecord.ntransactionsamplecode;comment[\"npreregno\"]=selectedRecord.npreregno;comment['nformcode']=saveParam.userInfo.nformcode;comment['nusercode']=saveParam.userInfo.nusercode;comment['nuserrolecode']=saveParam.userInfo.nuserrole;comment[\"jsondata\"]={sarno:selectedRecord.jsondata.sarno,ssamplearno:selectedRecord.jsondata.ssamplearno,scomments:selectedRecord.scomments?selectedRecord.scomments.trim():\"\"};comment[\"nsamplecommentscode\"]=saveParam.isTestComment&&selectedRecord.nsamplecommentscode?selectedRecord.nsamplecommentscode.value:-1;comment['nstatus']=transactionStatus.ACTIVE;inputData[\"subsamplecomment\"]=comment;}else{selectedMaster.forEach(function(sample){var comment={};comment['nsamplecommentcode']=selectedRecord.nsamplecommentcode?selectedRecord.nsamplecommentcode:0;comment[\"ntransactionsamplecode\"]=sample.ntransactionsamplecode;comment[\"npreregno\"]=sample.npreregno;comment['nformcode']=saveParam.userInfo.nformcode;comment['nusercode']=saveParam.userInfo.nusercode;comment['nuserrolecode']=saveParam.userInfo.nuserrole;comment[\"jsondata\"]={sarno:sample.sarno,ssamplearno:sample.ssamplearno,scomments:selectedRecord.scomments?selectedRecord.scomments.trim():\"\"};comment[\"nsamplecommentscode\"]=saveParam.isTestComment&&selectedRecord.nsamplecommentscode?selectedRecord.nsamplecommentscode.value:-1;comment['nstatus']=transactionStatus.ACTIVE;commentArray.push(comment);});inputData[\"subsamplecomment\"]=commentArray;}inputData[\"ntransactionsamplecode\"]=saveParam.ntransactionsamplecode;var inputParam={inputData:_objectSpread({userinfo:saveParam.userInfo},inputData),operation:saveParam.operation,selectedId:selectedRecord.nsamplecommentcode?selectedRecord.nsamplecommentcode:0,classUrl:\"comments\",saveType:saveParam.saveType,formRef:saveParam.formRef,methodUrl:\"SubSampleComment\"};return inputParam;}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/attachmentscomments/comments/CommentFunctions.js"],"names":["transactionStatus","onSaveTestComments","saveParam","selectedMaster","inputData","selectedRecord","commentArray","operation","comment","ntestcommentcode","npreregno","ntransactionsamplecode","ntransactiontestcode","userInfo","nformcode","nusercode","nuserrole","stestsynonym","scomments","trim","scommentsubtype","ncommentsubtypecode","label","spredefinedname","nsampletestcommentscode","sdescription","nsamplecommentscode","value","ACTIVE","forEach","test","push","inputParam","userinfo","selectedId","classUrl","saveType","formRef","methodUrl","onSaveSampleComments","nregcommentcode","sarno","jsondata","isTestComment","sample","onSaveSubSampleComments","nsamplecommentcode","ssamplearno"],"mappings":"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","sourcesContent":["\r\nimport {  transactionStatus } from \"../../../components/Enumeration\";\r\n\r\nexport function onSaveTestComments(saveParam,selectedMaster){\r\n\r\n    const inputData = {};\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    let commentArray = [];\r\n    \r\n    if(saveParam.operation==='update'){\r\n        let comment = {};\r\n        comment['ntestcommentcode']=selectedRecord.ntestcommentcode ?selectedRecord.ntestcommentcode: 0;\r\n        comment[\"npreregno\"]=selectedRecord.npreregno;\r\n        comment[\"ntransactionsamplecode\"]=selectedRecord.ntransactionsamplecode;\r\n        comment[\"ntransactiontestcode\"]=selectedRecord.ntransactiontestcode;\r\n        comment['nformcode']=saveParam.userInfo.nformcode\r\n        comment['nusercode']=saveParam.userInfo.nusercode\r\n        comment['nuserrolecode']=saveParam.userInfo.nuserrole\r\n        comment[\"jsondata\"] = {\r\n            stestsynonym :  selectedRecord.stestsynonym,\r\n            scomments: selectedRecord.scomments ? selectedRecord.scomments.trim() : \"\",\r\n            scommentsubtype:selectedRecord.ncommentsubtypecode&&selectedRecord.ncommentsubtypecode.label,\r\n            spredefinedname:selectedRecord.nsampletestcommentscode&&selectedRecord.nsampletestcommentscode.label!==\"\"?selectedRecord.nsampletestcommentscode.label:'-',\r\n            sdescription:selectedRecord.sdescription&&selectedRecord.sdescription,\r\n            ncommentsubtypecode:selectedRecord.ncommentsubtypecode&&selectedRecord.ncommentsubtypecode,\r\n            nsampletestcommentscode:selectedRecord.nsampletestcommentscode?selectedRecord.nsampletestcommentscode:'-'\r\n        }\r\n        comment[\"nsamplecommentscode\"] = selectedRecord.nsamplecommentscode? selectedRecord.nsamplecommentscode.value: -1;\r\n        comment['nstatus']=transactionStatus.ACTIVE;\r\n        inputData[\"testcomment\"]= comment;\r\n    }else{\r\n        selectedMaster.forEach(test=>{\r\n            let comment = {};\r\n            comment['ntestcommentcode']=selectedRecord.ntestcommentcode ?selectedRecord.ntestcommentcode: 0;\r\n            comment[\"npreregno\"]=test.npreregno;\r\n            comment[\"ntransactionsamplecode\"]=test.ntransactionsamplecode;\r\n            comment[\"ntransactiontestcode\"]=test.ntransactiontestcode;\r\n            comment['nformcode']=saveParam.userInfo.nformcode\r\n            comment['nusercode']=saveParam.userInfo.nusercode\r\n            comment['nuserrolecode']=saveParam.userInfo.nuserrole\r\n            comment[\"jsondata\"] = {\r\n                stestsynonym :  test.stestsynonym,\r\n                scomments: selectedRecord.scomments ? selectedRecord.scomments.trim() : \"\",\r\n                scommentsubtype:selectedRecord.ncommentsubtypecode&&selectedRecord.ncommentsubtypecode.label,\r\n                spredefinedname:selectedRecord.nsampletestcommentscode&&selectedRecord.nsampletestcommentscode.label!==\"\"?selectedRecord.nsampletestcommentscode.label:'-',\r\n                sdescription:selectedRecord.sdescription&&selectedRecord.sdescription,\r\n                ncommentsubtypecode:selectedRecord.ncommentsubtypecode&&selectedRecord.ncommentsubtypecode,\r\n                nsampletestcommentscode:selectedRecord.nsampletestcommentscode?selectedRecord.nsampletestcommentscode:'-'\r\n\r\n            }\r\n            comment[\"nsamplecommentscode\"] = selectedRecord.nsamplecommentscode? selectedRecord.nsamplecommentscode.value: -1;\r\n            comment['nstatus']=transactionStatus.ACTIVE;\r\n            commentArray.push(comment);\r\n        })  \r\n        inputData[\"testcomment\"]= commentArray;\r\n    }\r\n    \r\n   \r\n    \r\n    inputData[\"ntransactiontestcode\"]=saveParam.ntransactiontestcode\r\n    const inputParam = {\r\n        inputData: {userinfo: saveParam.userInfo,...inputData},\r\n        operation: saveParam.operation, selectedId:selectedRecord.ntestcommentcode ?selectedRecord.ntestcommentcode: 0,\r\n        classUrl: \"comments\",\r\n        saveType:saveParam.saveType,\r\n        formRef:saveParam.formRef,\r\n         methodUrl: \"TestComment\"\r\n    }\r\n    return inputParam;\r\n}\r\n\r\nexport function onSaveSampleComments(saveParam,selectedMaster){\r\n\r\n    const inputData = {};\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    let commentArray = [];\r\n    \r\n    if(saveParam.operation==='update'){\r\n        let comment = {};\r\n        comment['nregcommentcode']=selectedRecord.nregcommentcode ?selectedRecord.nregcommentcode: 0;\r\n        comment[\"npreregno\"]=selectedRecord.npreregno;\r\n        comment['nformcode']=saveParam.userInfo.nformcode\r\n        comment['nusercode']=saveParam.userInfo.nusercode\r\n        comment['nuserrolecode']=saveParam.userInfo.nuserrole\r\n        comment[\"jsondata\"] = {\r\n            sarno :  selectedRecord.jsondata.sarno,\r\n            scomments: selectedRecord.scomments ? selectedRecord.scomments.trim() : \"\"\r\n        }\r\n        comment[\"nsamplecommentscode\"] = saveParam.isTestComment&&selectedRecord.nsamplecommentscode? selectedRecord.nsamplecommentscode.value: -1;\r\n        comment['nstatus']=transactionStatus.ACTIVE;\r\n        inputData[\"samplecomment\"]= comment;\r\n    }else{\r\n        selectedMaster.forEach(sample=>{\r\n            let comment = {};\r\n            comment['nregcommentcode']=selectedRecord.nregcommentcode ?selectedRecord.nregcommentcode: 0;\r\n            comment[\"npreregno\"]=sample.npreregno;\r\n            comment['nformcode']=saveParam.userInfo.nformcode\r\n            comment['nusercode']=saveParam.userInfo.nusercode\r\n            comment['nuserrolecode']=saveParam.userInfo.nuserrole\r\n            comment[\"jsondata\"] = {\r\n                sarno :  sample.sarno,\r\n                scomments: selectedRecord.scomments ? selectedRecord.scomments.trim() : \"\"\r\n            }\r\n            comment[\"nsamplecommentscode\"] = saveParam.isTestComment&&selectedRecord.nsamplecommentscode? selectedRecord.nsamplecommentscode.value: -1;\r\n            comment['nstatus']=transactionStatus.ACTIVE;\r\n            commentArray.push(comment);\r\n        })  \r\n        inputData[\"samplecomment\"]= commentArray;\r\n    }\r\n    \r\n   \r\n    \r\n    inputData[\"npreregno\"]=saveParam.npreregno\r\n    const inputParam = {\r\n        inputData: {userinfo: saveParam.userInfo,...inputData},\r\n        operation: saveParam.operation, selectedId:selectedRecord.nregcommentcode ?selectedRecord.nregcommentcode: 0,\r\n        classUrl: \"comments\",\r\n        saveType:saveParam.saveType,\r\n        formRef:saveParam.formRef,\r\n         methodUrl: \"SampleComment\"\r\n    }\r\n    return inputParam;\r\n}\r\n\r\n\r\nexport function onSaveSubSampleComments(saveParam,selectedMaster){\r\n\r\n    const inputData = {};\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    let commentArray = [];\r\n    \r\n    if(saveParam.operation==='update'){\r\n        let comment = {};\r\n        comment['nsamplecommentcode']=selectedRecord.nsamplecommentcode ?selectedRecord.nsamplecommentcode: 0;\r\n        comment[\"ntransactionsamplecode\"]=selectedRecord.ntransactionsamplecode;\r\n        comment[\"npreregno\"] = selectedRecord.npreregno;\r\n        comment['nformcode']=saveParam.userInfo.nformcode\r\n        comment['nusercode']=saveParam.userInfo.nusercode\r\n        comment['nuserrolecode']=saveParam.userInfo.nuserrole\r\n        comment[\"jsondata\"] = {\r\n            sarno :  selectedRecord.jsondata.sarno,\r\n            ssamplearno :  selectedRecord.jsondata.ssamplearno,\r\n            scomments: selectedRecord.scomments ? selectedRecord.scomments.trim() : \"\"\r\n        }\r\n        comment[\"nsamplecommentscode\"] = saveParam.isTestComment&&selectedRecord.nsamplecommentscode? selectedRecord.nsamplecommentscode.value: -1;\r\n        comment['nstatus']=transactionStatus.ACTIVE;\r\n        inputData[\"subsamplecomment\"]= comment;\r\n    }else{\r\n        selectedMaster.forEach(sample=>{\r\n            let comment = {};\r\n            comment['nsamplecommentcode']=selectedRecord.nsamplecommentcode ?selectedRecord.nsamplecommentcode: 0;\r\n            comment[\"ntransactionsamplecode\"]=sample.ntransactionsamplecode;\r\n            comment[\"npreregno\"] = sample.npreregno;\r\n            comment['nformcode']=saveParam.userInfo.nformcode\r\n            comment['nusercode']=saveParam.userInfo.nusercode\r\n            comment['nuserrolecode']=saveParam.userInfo.nuserrole\r\n            comment[\"jsondata\"] = {\r\n                sarno :  sample.sarno,\r\n                ssamplearno :  sample.ssamplearno,\r\n                scomments: selectedRecord.scomments ? selectedRecord.scomments.trim() : \"\"\r\n            }\r\n            comment[\"nsamplecommentscode\"] = saveParam.isTestComment&&selectedRecord.nsamplecommentscode? selectedRecord.nsamplecommentscode.value: -1;\r\n            comment['nstatus']=transactionStatus.ACTIVE;\r\n            commentArray.push(comment);\r\n        })  \r\n        inputData[\"subsamplecomment\"]= commentArray;\r\n    }\r\n    \r\n   \r\n    \r\n    inputData[\"ntransactionsamplecode\"]=saveParam.ntransactionsamplecode\r\n    const inputParam = {\r\n        inputData: {userinfo: saveParam.userInfo,...inputData},\r\n        operation: saveParam.operation, selectedId:selectedRecord.nsamplecommentcode ?selectedRecord.nsamplecommentcode: 0,\r\n        classUrl: \"comments\",\r\n        saveType:saveParam.saveType,\r\n        formRef:saveParam.formRef,\r\n         methodUrl: \"SubSampleComment\"\r\n    }\r\n    return inputParam;\r\n}"]},"metadata":{},"sourceType":"module"}