{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{toast}from\"react-toastify\";import{intl}from\"../components/App\";import{replaceUpdatedObject,sortData}from\"../components/CommonScript\";import rsapi from\"../rsapi\";import{initRequest}from'./LoginAction';import{DEFAULT_RETURN}from\"./LoginTypes\";import{saveAs,encodeBase64}from'@progress/kendo-file-saver';export function getCerGenDetail(CerGen,fromDate,toDate,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"certificategeneration/getCertificateGeneration\",{\"nreleasebatchcode\":CerGen[\"nreleasebatchcode\"],\"userinfo\":userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(error.response.data);}});};}export function getTestParameter(methodParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"certificategeneration/getTestParameter\",{npreregno:methodParam.primaryKeyValue,userinfo:methodParam.userInfo}).then(function(response){var testMap=methodParam.masterData.testMap||new Map();testMap.set(parseInt(Object.keys(response.data[\"Parameter\"])[0]),Object.values(response.data[\"Parameter\"])[0]);var masterData=_objectSpread(_objectSpread({},methodParam.masterData),{},{testMap:testMap});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,data:methodParam.data,testMap:testMap,dataState:methodParam.dataState,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function certifyBatch(certificateParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(certificateParam.classUrl+\"/\"+certificateParam.methodUrl,{\"nreleasebatchcode\":certificateParam.inputData.nreleasebatchcode,\"ncontrolcode\":certificateParam.inputData.ncontrolcode,\"userinfo\":certificateParam.inputData.userinfo}).then(function(response){var BATCHSTATUS=response.data.BATCHSTATUS;var REPORTSTATUS=response.data.REPORTSTATUS;var BatchResponse=response.data.BatchResponse;var ReportResponse=response.data.ReportResponse;if(BATCHSTATUS===200){var masterData=_objectSpread(_objectSpread(_objectSpread({},certificateParam.masterData),BatchResponse),{},{CerGen:replaceUpdatedObject(BatchResponse.updatedCerGen,certificateParam.masterData.CerGen,'nreleasebatchcode')});// sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,dataState:undefined,loadEsign:false,openModal:false}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:false,loadEsign:false}});toast.warn(BatchResponse);}if(REPORTSTATUS===200){document.getElementById(\"download_data\").setAttribute(\"href\",ReportResponse.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(ReportResponse);dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:false,loadEsign:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:false,loadEsign:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(error.response.data);}});};}export function onClickCertificate(certificateParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(certificateParam.classUrl+\"/\"+certificateParam.methodUrl,{\"nreleasebatchcode\":certificateParam.inputData.nreleasebatchcode,\"userinfo\":certificateParam.inputData.userinfo,\"ncontrolcode\":certificateParam.inputData.ncontrolcode}).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},certificateParam.masterData),response.data),{},{CerGen:replaceUpdatedObject(response.data.updatedCerGen,certificateParam.masterData.CerGen,'nreleasebatchcode')});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,dataState:undefined,loadEsign:false,openModal:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:false,loadEsign:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(error.response.data);}});};}export function onClickXmlExport(certificateParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(certificateParam.classUrl+\"/\"+certificateParam.methodUrl,{\"nreleasebatchcode\":certificateParam.inputData.nreleasebatchcode,\"userinfo\":certificateParam.inputData.userinfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false,dataState:undefined}});var sfilename=\"\";if(certificateParam.nversioncode===0){sfilename=\"C\"+certificateParam.scertificatehistorycode+\".xml\";}else{sfilename=\"C\"+certificateParam.scertificatehistorycode+\"(Supp \"+certificateParam.nversioncode+\").xml\";}var dataURI=\"data:\"+response[\"headers\"][\"content-type\"]+\";base64,\"+encodeBase64(response[\"data\"]);saveAs(dataURI,sfilename);}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(error.response.data);}});};}export function validateEsignforCerGen(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){var methodUrl=\"\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}if(inputParam[\"screenData\"][\"inputParam\"]['methodUrl']==='InsertCertificate'||inputParam[\"screenData\"][\"inputParam\"]['methodUrl']==='insertCertificateNullified'){dispatch(certifyBatch(inputParam[\"screenData\"][\"inputParam\"]));}else if(inputParam[\"screenData\"][\"inputParam\"]['methodUrl']==='reportGeneration'){dispatch(onClickReport(inputParam[\"screenData\"][\"inputParam\"]));}else if(inputParam[\"screenData\"][\"inputParam\"]['operation']==='xml'){dispatch(onClickXmlExport(inputParam[\"screenData\"][\"inputParam\"]));}else{dispatch(onClickCertificate(inputParam[\"screenData\"][\"inputParam\"]));}// else if (inputParam[\"screenData\"][\"inputParam\"]['operation'] !== 'xml') {\n//     dispatch(onClickCertificate(inputParam[\"screenData\"][\"inputParam\"]))\n// } else {\n//     dispatch(onClickXmlExport(inputParam[\"screenData\"][\"inputParam\"]))\n// }\n}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function onClickReport(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(inputParam.classUrl+\"/\"+inputParam.methodUrl,inputParam.inputData)// {\n//     nprimarykey: inputParam[inputParam.nprimarykey],\n//     sprimarykeyname:inputParam.nprimarykey,\n//     userinfo: inputParam.userInfo,\n//     ndecisionstatus: inputParam.ndecisionStatus, \n//     nflag: 1, \n//    \"nreporttypecode\": 3\n// }\n.then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false,showConfirmAlert:false}});document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function viewReport(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"certificategeneration/viewCertificateReport\",inputParam.inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},response.data),{},{loading:false,loadEsign:false,openModal:false,showReport:true})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/CertificateGenerationAction.js"],"names":["toast","intl","replaceUpdatedObject","sortData","rsapi","initRequest","DEFAULT_RETURN","saveAs","encodeBase64","getCerGenDetail","CerGen","fromDate","toDate","userInfo","masterData","dispatch","post","then","response","data","type","payload","loading","dataState","undefined","catch","error","status","formatMessage","id","message","warn","getTestParameter","methodParam","npreregno","primaryKeyValue","userinfo","testMap","Map","set","parseInt","Object","keys","values","certifyBatch","certificateParam","classUrl","methodUrl","inputData","nreleasebatchcode","ncontrolcode","BATCHSTATUS","REPORTSTATUS","BatchResponse","ReportResponse","updatedCerGen","loadEsign","openModal","document","getElementById","setAttribute","filepath","click","onClickCertificate","onClickXmlExport","sfilename","nversioncode","scertificatehistorycode","dataURI","validateEsignforCerGen","inputParam","toLowerCase","onClickReport","showConfirmAlert","viewReport","showReport"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport { intl } from \"../components/App\";\r\nimport { replaceUpdatedObject, sortData } from \"../components/CommonScript\";\r\nimport rsapi from \"../rsapi\";\r\nimport { initRequest } from './LoginAction';\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\nimport { saveAs, encodeBase64 } from '@progress/kendo-file-saver';\r\n\r\n\r\nexport function getCerGenDetail(CerGen, fromDate, toDate, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"certificategeneration/getCertificateGeneration\", {\r\n            \"nreleasebatchcode\": CerGen[\"nreleasebatchcode\"],\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false, dataState: undefined } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\nexport function getTestParameter(methodParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"certificategeneration/getTestParameter\",\r\n            {\r\n                npreregno: methodParam.primaryKeyValue,\r\n                userinfo: methodParam.userInfo\r\n            })\r\n            .then(response => {\r\n                let testMap = methodParam.masterData.testMap || new Map();\r\n                testMap.set(parseInt(Object.keys(response.data[\"Parameter\"])[0]), Object.values(response.data[\"Parameter\"])[0]);\r\n                const masterData = { ...methodParam.masterData, testMap };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        data: methodParam.data, testMap,\r\n                        dataState: methodParam.dataState,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function certifyBatch(certificateParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(certificateParam.classUrl + \"/\" + certificateParam.methodUrl, {\r\n            \"nreleasebatchcode\": certificateParam.inputData.nreleasebatchcode,\r\n            \"ncontrolcode\": certificateParam.inputData.ncontrolcode,\r\n            \"userinfo\": certificateParam.inputData.userinfo\r\n        })\r\n            .then(response => {\r\n                let BATCHSTATUS = response.data.BATCHSTATUS\r\n                let REPORTSTATUS = response.data.REPORTSTATUS\r\n                let BatchResponse = response.data.BatchResponse\r\n                let ReportResponse = response.data.ReportResponse\r\n                if(BATCHSTATUS === 200){\r\n                    const masterData = {\r\n                        ...certificateParam.masterData,\r\n                        ...BatchResponse,\r\n                        CerGen: replaceUpdatedObject(BatchResponse.updatedCerGen, certificateParam.masterData.CerGen, 'nreleasebatchcode'),\r\n                    };\r\n                    // sortData(masterData);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false, dataState: undefined, loadEsign: false, openModal: false } });\r\n                }else{\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openModal: false, loadEsign: false } })\r\n                    toast.warn(BatchResponse);\r\n                }\r\n                if(REPORTSTATUS === 200){\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", ReportResponse.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                }else{\r\n                    toast.warn(ReportResponse);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openModal: false, loadEsign: false } })\r\n                }   \r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openModal: false, loadEsign: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            }\r\n            )\r\n    }\r\n}\r\nexport function onClickCertificate(certificateParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(certificateParam.classUrl + \"/\" + certificateParam.methodUrl, {\r\n            \"nreleasebatchcode\": certificateParam.inputData.nreleasebatchcode,\r\n            \"userinfo\": certificateParam.inputData.userinfo,\r\n            \"ncontrolcode\": certificateParam.inputData.ncontrolcode\r\n\r\n        })\r\n            .then(response => {\r\n                const masterData = {\r\n                    ...certificateParam.masterData,\r\n                    ...response.data,\r\n                    CerGen: replaceUpdatedObject(response.data.updatedCerGen, certificateParam.masterData.CerGen, 'nreleasebatchcode'),\r\n                };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false, dataState: undefined, loadEsign: false, openModal: false } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openModal: false, loadEsign: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\n\r\nexport function onClickXmlExport(certificateParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(certificateParam.classUrl + \"/\" + certificateParam.methodUrl, {\r\n            \"nreleasebatchcode\": certificateParam.inputData.nreleasebatchcode,\r\n            \"userinfo\": certificateParam.inputData.userinfo\r\n        }).then(response => {\r\n            dispatch({ type: DEFAULT_RETURN, payload: { loading: false, loadEsign: false, openModal: false, dataState: undefined } })\r\n            let sfilename = \"\";\r\n\r\n            if (certificateParam.nversioncode === 0) {\r\n                sfilename = \"C\" + certificateParam.scertificatehistorycode + \".xml\";\r\n            } else {\r\n                sfilename = \"C\" + certificateParam.scertificatehistorycode + \"(Supp \" + certificateParam.nversioncode + \").xml\";\r\n            }\r\n            const dataURI = \"data:\" + response[\"headers\"][\"content-type\"] + \";base64,\" + encodeBase64(response[\"data\"]);\r\n            saveAs(dataURI, sfilename);\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, loadEsign: false, openModal: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\nexport function validateEsignforCerGen(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n                    const methodUrl = \"\"\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"]  ;                        \r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n                    }\r\n                    if (inputParam[\"screenData\"][\"inputParam\"]['methodUrl'] === 'InsertCertificate'||inputParam[\"screenData\"][\"inputParam\"]['methodUrl'] === 'insertCertificateNullified') {\r\n                        dispatch(certifyBatch(inputParam[\"screenData\"][\"inputParam\"]))\r\n                    } \r\n                    else if (inputParam[\"screenData\"][\"inputParam\"]['methodUrl'] === 'reportGeneration') {\r\n                        dispatch(onClickReport(inputParam[\"screenData\"][\"inputParam\"]))\r\n                    } \r\n                    else if (inputParam[\"screenData\"][\"inputParam\"]['operation'] === 'xml') {\r\n                        dispatch(onClickXmlExport(inputParam[\"screenData\"][\"inputParam\"]))\r\n                    } \r\n                    else {\r\n                        dispatch(onClickCertificate(inputParam[\"screenData\"][\"inputParam\"]))\r\n                   \r\n                    }\r\n                    \r\n                    // else if (inputParam[\"screenData\"][\"inputParam\"]['operation'] !== 'xml') {\r\n                    //     dispatch(onClickCertificate(inputParam[\"screenData\"][\"inputParam\"]))\r\n                    // } else {\r\n                    //     dispatch(onClickXmlExport(inputParam[\"screenData\"][\"inputParam\"]))\r\n                    // }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport function onClickReport(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(inputParam.classUrl + \"/\" + inputParam.methodUrl,inputParam.inputData)\r\n            // {\r\n            //     nprimarykey: inputParam[inputParam.nprimarykey],\r\n            //     sprimarykeyname:inputParam.nprimarykey,\r\n            //     userinfo: inputParam.userInfo,\r\n            //     ndecisionstatus: inputParam.ndecisionStatus, \r\n            //     nflag: 1, \r\n            //    \"nreporttypecode\": 3\r\n            // }\r\n        \r\n            .then(response => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, loadEsign: false, openModal: false ,showConfirmAlert:false} })\r\n                document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                document.getElementById(\"download_data\").click();\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function viewReport(inputParam){\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"certificategeneration/viewCertificateReport\",inputParam.inputData)\r\n          \r\n            .then(response => {\r\n                 dispatch({ type: DEFAULT_RETURN, \r\n                    payload: {\r\n                      ...response.data,\r\n                        loading: false, \r\n                        loadEsign: false, \r\n                        openModal: false ,\r\n                        showReport:true\r\n                    } \r\n                })\r\n            }).catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}