{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';export function showInstitutionDepartmentAddScreen(userInfo,ncontrolcode){return function(dispatch){dispatch(initRequest(true));rsapi.post('institutiondepartment/getInstitutionDepartment',{\"userinfo\":userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",selectedRecord:{},ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function fetchinstituiondeptTypeById(editParam){return function(dispatch){var _rsapi$post;var URL1=rsapi.post(\"institutiondepartment/getActiveInstitutionDepartmentById\",(_rsapi$post={},_defineProperty(_rsapi$post,editParam.primaryKeyField,editParam.primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",editParam.userInfo),_rsapi$post));dispatch(initRequest(true));Axios.all([URL1]).then(function(response){var selectedRecord={};var selectedId=editParam.primaryKeyValue;selectedRecord=response[0].data;dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:_objectSpread({},response[0].data),operation:editParam.operation,openModal:true,screenName:editParam.screenName,ncontrolcode:editParam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/InstitutionDepartmentAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","showInstitutionDepartmentAddScreen","userInfo","ncontrolcode","dispatch","post","then","response","type","payload","openModal","operation","selectedRecord","loading","catch","error","status","message","warn","data","fetchinstituiondeptTypeById","editParam","URL1","primaryKeyField","primaryKeyValue","all","selectedId","screenName","ncontrolCode"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios'\r\nimport { initRequest } from './LoginAction';\r\n\r\nexport function showInstitutionDepartmentAddScreen (userInfo, ncontrolcode){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post('institutiondepartment/getInstitutionDepartment',{\"userinfo\":userInfo}) \r\n        .then(response=> { \r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload:{\r\n                    openModal:true,\r\n                    operation:\"create\",\r\n                    selectedRecord:{}\r\n                    , ncontrolcode,loading:false\r\n                }\r\n            });         \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function fetchinstituiondeptTypeById (editParam){  \r\n    return function(dispatch){\r\n        const URL1=rsapi.post(\"institutiondepartment/getActiveInstitutionDepartmentById\", { [editParam.primaryKeyField] :editParam.primaryKeyValue , \"userinfo\": editParam.userInfo} )\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL1])\r\n        .then(response=> { \r\n            let selectedRecord={}\r\n            let selectedId = editParam.primaryKeyValue;         \r\n            selectedRecord=response[0].data\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload:{\r\n                    selectedRecord: { ...response[0].data},\r\n                operation:editParam.operation,\r\n                openModal: true,\r\n                screenName:editParam.screenName,\r\n                ncontrolcode:editParam.ncontrolCode,\r\n                loading:false,selectedId\r\n            }\r\n            }); \r\n            \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })\r\n    }\r\n }"]},"metadata":{},"sourceType":"module"}