{"ast":null,"code":"import React from'react';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{transactionStatus}from'../../components/Enumeration';var AddInstrumentMaintenance=function AddInstrumentMaintenance(props){console.log(\"123\",props);return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_INSTRUMENTID\"}),name:\"ninstrumentcode\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},value:props.instrumentid,isDisabled:true,required:true,maxLength:\"100\"})),/*#__PURE__*/React.createElement(Col,{md:props.userInfo.istimezoneshow===transactionStatus.YES?6:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dlastmaintenancedate\",label:props.intl.formatMessage({id:\"IDS_LASTMAINTENANCEDATE\"}),className:\"form-control\",selected:props.selectedRecord[\"dlastmaintenancedate\"]?props.selectedRecord[\"dlastmaintenancedate\"]:new Date(),dateFormat:props.userInfo.ssitedate,isClearable:false,required:true,isMandatory:true,maxTime:props.currentTime,onChange:function onChange(date){return props.handleDateChange(\"dlastmaintenancedate\",date);},value:props.selectedRecord[\"dlastmaintenancedate\"]})),props.userInfo.istimezoneshow===transactionStatus.YES&&/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntzlastmaintenancedate\",formLabel:props.intl.formatMessage({id:\"IDS_TIMEZONE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.TimeZoneList// optionId=\"ntimezonecode\"\n// optionValue=\"stimezoneid\"\n,value:props.selectedRecord[\"ntzlastmaintenancedate\"],defaultValue:props.selectedRecord[\"ntzlastmaintenancedate\"],isMandatory:false,isMulti:false,isSearchable:true// isClearable={false}                               \n,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'ntzlastmaintenancedate',1);}})),/*#__PURE__*/React.createElement(Col,{md:props.userInfo.istimezoneshow===transactionStatus.YES?6:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dduedate\",label:props.intl.formatMessage({id:\"IDS_DUEDATE\"}),className:\"form-control\",selected:props.selectedRecord[\"dduedate\"]?props.selectedRecord[\"dduedate\"]:new Date(),dateFormat:props.userInfo.ssitedate,isClearable:false,required:true,isMandatory:true,maxTime:props.currentTime,onChange:function onChange(date){return props.handleDateChange(\"dduedate\",date);},value:props.selectedRecord[\"dduedate\"]})),props.userInfo.istimezoneshow===transactionStatus.YES&&/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntzduedate\",formLabel:props.intl.formatMessage({id:\"IDS_TIMEZONE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.TimeZoneList,value:props.selectedRecord[\"ntzduedate\"],defaultValue:props.selectedRecord[\"ntzduedate\"],isMandatory:false,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'ntzduedate',1);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntranscode\",formLabel:props.intl.formatMessage({id:\"IDS_STATUS\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.MaintenanceStatus,value:props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\",defaultValue:props.selectedRecord[\"ntranscode\"],isMulti:false,isSearchable:true,isMandatory:true,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'ntranscode',1);}})));};export default injectIntl(AddInstrumentMaintenance);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/instrumentmanagement/AddInstrumentMaintenance.jsx"],"names":["React","FormSelectSearch","injectIntl","Row","Col","FormInput","DateTimePicker","transactionStatus","AddInstrumentMaintenance","props","console","log","intl","formatMessage","id","event","onInputOnChange","instrumentid","userInfo","istimezoneshow","YES","selectedRecord","Date","ssitedate","currentTime","date","handleDateChange","TimeZoneList","onComboChange","MaintenanceStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\n\r\n\r\n\r\n\r\nconst AddInstrumentMaintenance = (props) => {\r\n    console.log(\"123\", props)\r\n    return (\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                    name={\"ninstrumentcode\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    value={props.instrumentid}\r\n                    isDisabled={true}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                />\r\n            </Col>\r\n            <Col md={props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12}>\r\n                <DateTimePicker\r\n                    name={\"dlastmaintenancedate\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_LASTMAINTENANCEDATE\" })}\r\n                    className='form-control'\r\n                    selected={props.selectedRecord[\"dlastmaintenancedate\"] ? props.selectedRecord[\"dlastmaintenancedate\"] : new Date()}\r\n                    dateFormat={props.userInfo.ssitedate}\r\n                    isClearable={false}\r\n                    required={true}\r\n                    isMandatory={true}\r\n                    maxTime={props.currentTime}\r\n                    onChange={date => props.handleDateChange(\"dlastmaintenancedate\", date)}\r\n                    value={props.selectedRecord[\"dlastmaintenancedate\"]}\r\n\r\n                />\r\n            </Col>\r\n            {props.userInfo.istimezoneshow === transactionStatus.YES &&\r\n                <Col md={6}>\r\n                    <FormSelectSearch\r\n                        name={\"ntzlastmaintenancedate\"}\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={props.TimeZoneList}\r\n                        // optionId=\"ntimezonecode\"\r\n                        // optionValue=\"stimezoneid\"\r\n                        value={props.selectedRecord[\"ntzlastmaintenancedate\"]}\r\n                        defaultValue={props.selectedRecord[\"ntzlastmaintenancedate\"]}\r\n                        isMandatory={false}\r\n                        isMulti={false}\r\n                        isSearchable={true}\r\n                        // isClearable={false}                               \r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => props.onComboChange(event, 'ntzlastmaintenancedate', 1)}\r\n                    />\r\n\r\n                </Col>\r\n            }\r\n            <Col md={props.userInfo.istimezoneshow  === transactionStatus.YES ? 6 : 12}>\r\n                <DateTimePicker\r\n                    name={\"dduedate\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DUEDATE\" })}\r\n                    className='form-control'\r\n                    selected={props.selectedRecord[\"dduedate\"] ? props.selectedRecord[\"dduedate\"] : new Date()}\r\n                    dateFormat={props.userInfo.ssitedate}\r\n                    isClearable={false}\r\n                    required={true}\r\n                    isMandatory={true}\r\n                    maxTime={props.currentTime}\r\n                    onChange={date => props.handleDateChange(\"dduedate\", date)}\r\n                    value={props.selectedRecord[\"dduedate\"]}\r\n\r\n                />\r\n            </Col>\r\n            {props.userInfo.istimezoneshow === transactionStatus.YES &&\r\n                <Col md={6}>\r\n                    <FormSelectSearch\r\n                        name={\"ntzduedate\"}\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={props.TimeZoneList}\r\n                        value={props.selectedRecord[\"ntzduedate\"]}\r\n                        defaultValue={props.selectedRecord[\"ntzduedate\"]}\r\n                        isMandatory={false}\r\n                        isMulti={false}\r\n                        isSearchable={true}\r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => props.onComboChange(event, 'ntzduedate', 1)}\r\n                    />\r\n\r\n                </Col>\r\n            }\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"ntranscode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.MaintenanceStatus}\r\n                    value={props.selectedRecord[\"ntranscode\"] ? props.selectedRecord[\"ntranscode\"] : \"\"}\r\n                    defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isMandatory={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    onChange={(event) => props.onComboChange(event, 'ntranscode', 1)}\r\n                />\r\n            </Col>\r\n\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddInstrumentMaintenance);"]},"metadata":{},"sourceType":"module"}