{"ast":null,"code":"import { initRequest } from \"./LoginAction\";\nimport rsapi from \"../rsapi\";\nimport { sortData, getComboLabelValue } from \"../components/CommonScript\";\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\nimport { toast } from 'react-toastify';\nimport Axios from \"axios\";\nimport { constructOptionList } from \"../components/CommonScript\";\nimport { intl } from '../components/App';\nimport { attachmentType, transactionStatus } from \"../components/Enumeration\";\nexport function getSubmitterDetail(submitter, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"submitter/getSelectedSubmitterDetail\", {\n      ssubmittercode: submitter.ssubmittercode,\n      userinfo: userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          operation: null,\n          modalName: undefined,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getSubmitterCombo(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolCode) {\n  return function (dispatch) {\n    if (masterData.selectedInstitutionCategory !== null) {\n      if (masterData.selectedInstitution !== null) {\n        if (masterData.selectedInstitutionSite !== null) {\n          let urlArray = [];\n          const InstitutionDepartment = rsapi.post(\"/submitter/getInstitutionDepartment\", {\n            \"userinfo\": userInfo\n          });\n\n          if (operation === \"create\") {\n            urlArray = [InstitutionDepartment];\n          } else {\n            const Submitter = rsapi.post(\"/submitter/getActiveSubmitterById\", {\n              [primaryKeyName]: masterData.selectedSubmitter[primaryKeyName],\n              \"userinfo\": userInfo\n            });\n            urlArray = [InstitutionDepartment, Submitter];\n          }\n\n          dispatch(initRequest(true));\n          Axios.all(urlArray).then(response => {\n            let selectedRecord = {};\n            const institutionDepartmentMap = constructOptionList(response[0].data.InstitutionDepartment || [], \"ninstitutiondeptcode\", \"sinstitutiondeptname\", undefined, undefined, false);\n            const InstitutionDepartment = institutionDepartmentMap.get(\"OptionList\");\n            selectedRecord[\"ntransactionstatus\"] = transactionStatus.ACTIVE;\n\n            if (operation === \"update\") {\n              selectedRecord = response[1].data;\n              selectedRecord[\"ninstitutiondeptcode\"] = getComboLabelValue(selectedRecord, response[0].data.InstitutionDepartment, \"ninstitutiondeptcode\", \"sinstitutiondeptname\");\n            }\n\n            dispatch({\n              type: DEFAULT_RETURN,\n              payload: {\n                InstitutionDepartment,\n                isOpen: true,\n                masterData: masterData,\n                selectedRecord,\n                operation: operation,\n                screenName: screenName,\n                openModal: true,\n                ncontrolCode: ncontrolCode,\n                loading: false\n              }\n            });\n          }).catch(error => {\n            dispatch({\n              type: DEFAULT_RETURN,\n              payload: {\n                loading: false\n              }\n            });\n\n            if (error.response.status === 500) {\n              toast.error(intl.formatMessage({\n                id: error.message\n              }));\n            } else {\n              toast.warn(intl.formatMessage({\n                id: error.response.data\n              }));\n            }\n          });\n        } else {\n          toast.warn(intl.formatMessage({\n            id: \"IDS_CONFIGINSTITUTIONSITE\"\n          }));\n        }\n      } else {\n        toast.warn(intl.formatMessage({\n          id: \"IDS_CONFIGINSTITUTION\"\n        }));\n      }\n    } else {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_CONFIGINSTITUTIONCATEGORY\"\n      }));\n    }\n  };\n}\nexport function getInstitution(inputData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"submitter/getInstitutionByCategory\", inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData: { ...inputData.masterData,\n            ...responseData,\n            selectedInstitutionCategory: inputData.selectedInstitutionCategory //nfilterInstitutionCategory: inputData.nfilterInstitutionCategory,\n\n          },\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getInstitutionSite(inputData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"submitter/getInstitutionSiteByInstitution\", inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData: { ...inputData.masterData,\n            ...responseData,\n            selectedInstitution: inputData.selectedInstitution\n          },\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport const changeInstitutionCategoryFilterSubmit = (inputParam, FilterInstitutionCategory, selectedInstitutionCategory, FilterInstitution, selectedInstitution, FilterInstitutionSite, selectedInstitutionSite) => {\n  return dispatch => {\n    dispatch(initRequest(true));\n    rsapi.post(\"/submitter/get\" + inputParam.methodUrl, inputParam.inputData).then(response => {\n      const masterData = response.data;\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData: { ...masterData,\n            FilterInstitutionCategory,\n            selectedInstitutionCategory,\n            FilterInstitution,\n            selectedInstitution,\n            FilterInstitutionSite,\n            selectedInstitutionSite\n          }\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(error.message);\n    });\n  };\n};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/SubmitterAction.js"],"names":["initRequest","rsapi","sortData","getComboLabelValue","DEFAULT_RETURN","toast","Axios","constructOptionList","intl","attachmentType","transactionStatus","getSubmitterDetail","submitter","userInfo","masterData","dispatch","post","ssubmittercode","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getSubmitterCombo","screenName","primaryKeyName","ncontrolCode","selectedInstitutionCategory","selectedInstitution","selectedInstitutionSite","urlArray","InstitutionDepartment","Submitter","selectedSubmitter","all","selectedRecord","institutionDepartmentMap","get","ACTIVE","isOpen","openModal","formatMessage","id","getInstitution","inputData","responseData","getInstitutionSite","changeInstitutionCategoryFilterSubmit","inputParam","FilterInstitutionCategory","FilterInstitution","FilterInstitutionSite","methodUrl"],"mappings":"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","sourcesContent":["import { initRequest } from \"./LoginAction\";\r\nimport rsapi from \"../rsapi\";\r\nimport { sortData,getComboLabelValue } from \"../components/CommonScript\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\nimport { toast } from 'react-toastify';\r\nimport Axios from \"axios\";\r\nimport { constructOptionList } from \"../components/CommonScript\";\r\nimport { intl} from '../components/App';\r\nimport { attachmentType,transactionStatus } from \"../components/Enumeration\";\r\n\r\nexport function getSubmitterDetail (submitter, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"submitter/getSelectedSubmitterDetail\", {ssubmittercode:submitter.ssubmittercode, userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}  \r\n\r\nexport function getSubmitterCombo(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        if(masterData.selectedInstitutionCategory!==null){\r\n            if(masterData.selectedInstitution!==null){\r\n                if(masterData.selectedInstitutionSite!==null){\r\n                    let urlArray = [];\r\n                    const InstitutionDepartment = rsapi.post(\"/submitter/getInstitutionDepartment\", {\"userinfo\": userInfo});\r\n                    if (operation === \"create\") {\r\n                        urlArray = [InstitutionDepartment];\r\n\r\n                    } else {\r\n                        const Submitter = rsapi.post(\"/submitter/getActiveSubmitterById\", {\r\n                                          [primaryKeyName]: masterData.selectedSubmitter[primaryKeyName],\r\n                                          \"userinfo\": userInfo\r\n                        });\r\n                        urlArray = [InstitutionDepartment,Submitter];\r\n                    }\r\n                    dispatch(initRequest(true));\r\n                    Axios.all(urlArray)\r\n                    .then(response => {\r\n                        let selectedRecord ={};\r\n                        const institutionDepartmentMap = constructOptionList(response[0].data.InstitutionDepartment || [], \"ninstitutiondeptcode\",\r\n                             \"sinstitutiondeptname\", undefined, undefined, false);        \r\n\r\n                        const InstitutionDepartment = institutionDepartmentMap.get(\"OptionList\");              \r\n                        selectedRecord[\"ntransactionstatus\"]  = transactionStatus.ACTIVE;\r\n\r\n                 \r\n                        if (operation === \"update\") {\r\n                            selectedRecord = response[1].data;\r\n                            selectedRecord[\"ninstitutiondeptcode\"] = getComboLabelValue(selectedRecord, response[0].data.InstitutionDepartment, \r\n                                \"ninstitutiondeptcode\", \"sinstitutiondeptname\");      \r\n                        }\r\n\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                InstitutionDepartment,                       \r\n                                isOpen: true,\r\n                                masterData:masterData,\r\n                                selectedRecord,\r\n                                operation: operation,\r\n                                screenName: screenName,\r\n                                openModal: true,\r\n                                ncontrolCode: ncontrolCode,\r\n                                loading: false,\r\n                       \r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(intl.formatMessage({ id: error.message  }));\r\n                        } else {\r\n                        toast.warn(intl.formatMessage({id: error.response.data }));\r\n                        }\r\n                    })\r\n\r\n                }else{\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_CONFIGINSTITUTIONSITE\" }));\r\n                }\r\n            }else{\r\n                toast.warn(intl.formatMessage({ id: \"IDS_CONFIGINSTITUTION\" }));\r\n            }\r\n        }else{\r\n            toast.warn(intl.formatMessage({ id: \"IDS_CONFIGINSTITUTIONCATEGORY\" }));\r\n        }\r\n    }\r\n\r\n}\r\nexport function getInstitution(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"submitter/getInstitutionByCategory\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            selectedInstitutionCategory: inputData.selectedInstitutionCategory,\r\n                            //nfilterInstitutionCategory: inputData.nfilterInstitutionCategory,\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getInstitutionSite(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"submitter/getInstitutionSiteByInstitution\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            selectedInstitution: inputData.selectedInstitution,\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const changeInstitutionCategoryFilterSubmit = (inputParam,FilterInstitutionCategory,selectedInstitutionCategory,FilterInstitution,selectedInstitution,FilterInstitutionSite,selectedInstitutionSite ) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/submitter/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            FilterInstitutionCategory,\r\n                            selectedInstitutionCategory,\r\n                            FilterInstitution,\r\n                            selectedInstitution,\r\n                            FilterInstitutionSite,\r\n                            selectedInstitutionSite\r\n\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}