{"ast":null,"code":"import React from'react';import{Col,Nav,Row}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{FormattedMessage}from'react-intl';import{faPlus}from'@fortawesome/free-solid-svg-icons';import DataGrid from'../../components/data-grid/data-grid.component';import ReactTooltip from'react-tooltip';import{designProperties}from'../../components/Enumeration';var InvenotryTransaction=function InvenotryTransaction(props){var QuantityTransaction=props.controlMap.has(\"QuantityTransaction\")&&props.controlMap.get(\"QuantityTransaction\").ncontrolcode;var ViewMaterialInventoryTrans=props.controlMap.has(\"ViewMaterialInventoryTrans\")&&props.controlMap.get(\"ViewMaterialInventoryTrans\").ncontrolcode;// const fieldsForGrid = [\n//     { \"idsName\": \"IDS_INVENTORYID\", \"dataField\": \"IDS_INVENTORYID\", \"width\": \"200px\" },\n//     {\n//         \"idsName\": \"IDS_TRANSACTIONDATE\", \"dataField\": \"IDS_TRANSACTIONDATE\", \"width\": \"100px\"\n//     }\n//     ,\n//     {\n//         \"idsName\": \"IDS_INVENTORYTRANSACTIONTYPE\", \"dataField\": \"IDS_INVENTORYTRANSACTIONTYPE\", \"width\": \"100px\"\n//     }\n//     ,\n//     {\n//         \"idsName\": \"IDS_TRANSACTIONTYPE\", \"dataField\": \"IDS_TRANSACTIONTYPE\", \"width\": \"100px\"\n//     }\n// ];\nvar fieldsForGrid=[];var fieldsForExpandedGrid=[];var x=[];// if(props.SelectedMaterialInventory['jsondata'].hasOwnProperty(props.DesignMappedFeilds.fieldsForGrid[index]&&\n//     props.DesignMappedFeilds.fieldsForGrid[index][designProperties.VALUE]))\n// {\n// props.DesignMappedFeilds.fieldsForGrid!==undefined&&\n// props.DesignMappedFeilds.fieldsForGrid.map((temp,i)=>{\n//     fieldsForGrid.push(\n//         { \"idsName\":  props.DesignMappedFeilds.fieldsForGrid[i][designProperties.VALUE], \"dataField\": \n//         props.DesignMappedFeilds.fieldsForGrid[i][designProperties.VALUE], \"width\": \"200px\" }\n//     );\n// })\n// }\n// props.Template.map((row) => {\n//     row.children.map((column) => {\n//         column.children.map((component) => {\n//             if (component.hasOwnProperty('fieldsForGrid')) {\n//                 fieldsForGrid.push(\n//                     { \"idsName\": component.label, \"dataField\": component.label, \"width\": \"200px\" }\n//                 );\n//             }\n//             if (component.hasOwnProperty('fieldsForExpandedGrid')) {\n//                 fieldsForExpandedGrid.push(\n//                     { dataField: component.label, idsName: component.label, columnSize: \"4\" },\n//                 );\n//             }\n//             component.hasOwnProperty(\"children\") && component.children.map((componentrow) => {\n//                 if (componentrow.hasOwnProperty('fieldsForGrid')) {\n//                     fieldsForGrid.push(\n//                         { \"idsName\": componentrow.label, \"dataField\": componentrow.label, \"width\": \"200px\" }\n//                     );\n//                 }\n//                 if (componentrow.hasOwnProperty('fieldsForExpandedGrid')) {\n//                     fieldsForExpandedGrid.push(\n//                         { dataField: componentrow.label, idsName: componentrow.label, columnSize: \"4\" },\n//                     );\n//                 }\n//             })\n//         })\n//     })\n// })\n// fieldsForGrid[0]=fieldsForGrid\n// let fieldsForExpandedGrid1=[]\n// fieldsForExpandedGrid1.push(fieldsForExpandedGrid)\n// detailedFieldList = [\n//     { dataField: \"ssectionname\", idsName: \"IDS_SECTIONNAME\", columnSize: \"4\" },\n//     { dataField: \"sfullname\", idsName: \"IDS_PARTICIPANTS\", columnSize: \"4\" },\n//     // { dataField: \"sfaxno\", idsName: \"IDS_FAXNO\", columnSize:\"4\" },\n//     // //{ dataField: \"sdisplaystatus\", idsName: \"IDS_DISPLAYSTATUS\" },\n//     //{ \"idsName\": \"IDS_DISPLAYSTATUS\", \"dataField\": \"sdisplaystatus\", \"width\": \"20%\", \"isIdsField\": true, \"controlName\": \"ndefaultstatus\" }\n// ];\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\"}),/*#__PURE__*/React.createElement(Nav.Link,{name:\"QuantityTransaction\",className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(QuantityTransaction)===-1,onClick:function onClick(){return props.quantityTransaction(QuantityTransaction,\"create\",{},props.userInfo);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_QUANTITYTRANSACTION\",defaultMessage:\"Quantity Transaction\"})))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nmaterialinventtranscode\",expandField:\"expanded\",detailedFieldList:props.QuantityTransactionForExpandedGrid,dataResult:props.dataResult,dataState:props.dataState,dataStateChange:props.dataStateChange,extractedColumnList:props.QuantityTransactionForGrid,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,fetchRecord:props.fetchRecord,deleteRecord:props.deleteRecord,pageable:false,scrollable:'scrollable',gridHeight:'600px'// isActionRequired={true}\n,hideColumnFilter:false,selectedId:0// isJsonFeild={true}\n// isActionRequired={true}\n// actionIcons={[{\n//     title: props.intl.formatMessage({ id: \"IDS_VIEW\" }),\n//     controlname: \"faEye\",\n//     objectName: \"materialinventorytransaction\",\n//     hidden: props.userRoleControlRights.indexOf(ViewMaterialInventoryTrans) === -1,\n//     onClick: (viewdetails) => props.viewQuantityTrans(viewdetails)\n// }]}\n//  jsonField='jsondata'\n}))));};export default InvenotryTransaction;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/Material/InvenotryTransaction.jsx"],"names":["React","Col","Nav","Row","FontAwesomeIcon","FormattedMessage","faPlus","DataGrid","ReactTooltip","designProperties","InvenotryTransaction","props","QuantityTransaction","controlMap","has","get","ncontrolcode","ViewMaterialInventoryTrans","fieldsForGrid","fieldsForExpandedGrid","x","userRoleControlRights","indexOf","quantityTransaction","userInfo","QuantityTransactionForExpandedGrid","dataResult","dataState","dataStateChange","QuantityTransactionForGrid","fetchRecord","deleteRecord"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Nav, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { designProperties } from '../../components/Enumeration';\r\n\r\n\r\nconst InvenotryTransaction = (props) => {\r\n    const QuantityTransaction = props.controlMap.has(\"QuantityTransaction\") && props.controlMap.get(\"QuantityTransaction\").ncontrolcode;\r\n    const ViewMaterialInventoryTrans = props.controlMap.has(\"ViewMaterialInventoryTrans\") && props.controlMap.get(\"ViewMaterialInventoryTrans\").ncontrolcode;\r\n    // const fieldsForGrid = [\r\n    //     { \"idsName\": \"IDS_INVENTORYID\", \"dataField\": \"IDS_INVENTORYID\", \"width\": \"200px\" },\r\n    //     {\r\n    //         \"idsName\": \"IDS_TRANSACTIONDATE\", \"dataField\": \"IDS_TRANSACTIONDATE\", \"width\": \"100px\"\r\n    //     }\r\n    //     ,\r\n    //     {\r\n    //         \"idsName\": \"IDS_INVENTORYTRANSACTIONTYPE\", \"dataField\": \"IDS_INVENTORYTRANSACTIONTYPE\", \"width\": \"100px\"\r\n    //     }\r\n    //     ,\r\n    //     {\r\n    //         \"idsName\": \"IDS_TRANSACTIONTYPE\", \"dataField\": \"IDS_TRANSACTIONTYPE\", \"width\": \"100px\"\r\n    //     }\r\n    // ];\r\n    let fieldsForGrid=[];\r\n    let fieldsForExpandedGrid=[];\r\n    let x=[];\r\n    // if(props.SelectedMaterialInventory['jsondata'].hasOwnProperty(props.DesignMappedFeilds.fieldsForGrid[index]&&\r\n    //     props.DesignMappedFeilds.fieldsForGrid[index][designProperties.VALUE]))\r\n    // {\r\n        // props.DesignMappedFeilds.fieldsForGrid!==undefined&&\r\n        // props.DesignMappedFeilds.fieldsForGrid.map((temp,i)=>{\r\n        //     fieldsForGrid.push(\r\n        //         { \"idsName\":  props.DesignMappedFeilds.fieldsForGrid[i][designProperties.VALUE], \"dataField\": \r\n        //         props.DesignMappedFeilds.fieldsForGrid[i][designProperties.VALUE], \"width\": \"200px\" }\r\n        //     );\r\n        // })\r\n\r\n   // }\r\n    // props.Template.map((row) => {\r\n        \r\n    //     row.children.map((column) => {\r\n    //         column.children.map((component) => {\r\n    //             if (component.hasOwnProperty('fieldsForGrid')) {\r\n    //                 fieldsForGrid.push(\r\n    //                     { \"idsName\": component.label, \"dataField\": component.label, \"width\": \"200px\" }\r\n    //                 );\r\n    //             }\r\n    //             if (component.hasOwnProperty('fieldsForExpandedGrid')) {\r\n    //                 fieldsForExpandedGrid.push(\r\n    //                     { dataField: component.label, idsName: component.label, columnSize: \"4\" },\r\n    //                 );\r\n    //             }\r\n    //             component.hasOwnProperty(\"children\") && component.children.map((componentrow) => {\r\n    //                 if (componentrow.hasOwnProperty('fieldsForGrid')) {\r\n    //                     fieldsForGrid.push(\r\n    //                         { \"idsName\": componentrow.label, \"dataField\": componentrow.label, \"width\": \"200px\" }\r\n    //                     );\r\n    //                 }\r\n    //                 if (componentrow.hasOwnProperty('fieldsForExpandedGrid')) {\r\n    //                     fieldsForExpandedGrid.push(\r\n    //                         { dataField: componentrow.label, idsName: componentrow.label, columnSize: \"4\" },\r\n    //                     );\r\n    //                 }\r\n    //             })\r\n    //         })\r\n    //     })\r\n    // })\r\n    // fieldsForGrid[0]=fieldsForGrid\r\n    // let fieldsForExpandedGrid1=[]\r\n    // fieldsForExpandedGrid1.push(fieldsForExpandedGrid)\r\n    // detailedFieldList = [\r\n    //     { dataField: \"ssectionname\", idsName: \"IDS_SECTIONNAME\", columnSize: \"4\" },\r\n    //     { dataField: \"sfullname\", idsName: \"IDS_PARTICIPANTS\", columnSize: \"4\" },\r\n    //     // { dataField: \"sfaxno\", idsName: \"IDS_FAXNO\", columnSize:\"4\" },\r\n    //     // //{ dataField: \"sdisplaystatus\", idsName: \"IDS_DISPLAYSTATUS\" },\r\n    //     //{ \"idsName\": \"IDS_DISPLAYSTATUS\", \"dataField\": \"sdisplaystatus\", \"width\": \"20%\", \"isIdsField\": true, \"controlName\": \"ndefaultstatus\" }\r\n\r\n    // ];\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <ReactTooltip place=\"bottom\" globalEventOff='click' />\r\n                    <Nav.Link name=\"QuantityTransaction\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(QuantityTransaction) === -1}\r\n                        onClick={() => props.quantityTransaction(QuantityTransaction, \"create\", {}, props.userInfo)}>\r\n                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                        <FormattedMessage id=\"IDS_QUANTITYTRANSACTION\" defaultMessage=\"Quantity Transaction\" />\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n\r\n                    <DataGrid\r\n                        key=\"testsectionkey\"\r\n                        primaryKeyField=\"nmaterialinventtranscode\"\r\n                        expandField=\"expanded\"\r\n                        detailedFieldList={props.QuantityTransactionForExpandedGrid}\r\n                        dataResult={props.dataResult}\r\n                        dataState={props.dataState}\r\n                        dataStateChange={props.dataStateChange}\r\n                        extractedColumnList={props.QuantityTransactionForGrid}\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        fetchRecord={props.fetchRecord}\r\n                        deleteRecord={props.deleteRecord}\r\n                        pageable={false}\r\n                        scrollable={'scrollable'}\r\n                        gridHeight={'600px'}\r\n                       // isActionRequired={true}\r\n                        hideColumnFilter={false}\r\n                        selectedId={0}\r\n                       // isJsonFeild={true}\r\n                        // isActionRequired={true}\r\n                        // actionIcons={[{\r\n                        //     title: props.intl.formatMessage({ id: \"IDS_VIEW\" }),\r\n                        //     controlname: \"faEye\",\r\n                        //     objectName: \"materialinventorytransaction\",\r\n                        //     hidden: props.userRoleControlRights.indexOf(ViewMaterialInventoryTrans) === -1,\r\n                        //     onClick: (viewdetails) => props.viewQuantityTrans(viewdetails)\r\n                        // }]}\r\n                      //  jsonField='jsondata'\r\n                    >\r\n                    </DataGrid>\r\n\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InvenotryTransaction;"]},"metadata":{},"sourceType":"module"}