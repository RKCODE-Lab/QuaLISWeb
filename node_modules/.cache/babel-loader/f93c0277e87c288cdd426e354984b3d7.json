{"ast":null,"code":"import _slicedToArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';import{constructOptionList,fillRecordBasedOnCheckBoxSelection,getRecordBasedOnPrimaryKeyName,replaceUpdatedObject,sortData,getSameRecordFromTwoArrays,getSameRecordFromTwoDifferentArrays,filterRecordBasedOnPrimaryKeyName,reArrangeArrays,sortDataByParent}from'../components/CommonScript';import{postCRUDOrganiseTransSearch}from'./ServiceAction';import{REPORTTYPE,checkBoxOperation,reportCOAType,transactionStatus}from'../components/Enumeration';import{intl}from'../components/App';export function getsubSampleDetail(inputData,isServiceRequired,isParentValue){return function(dispatch){var inputParamData={ntype:2,nflag:2,nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,nsectioncode:inputData.nsectioncode,ntestcode:inputData.ntestcode,napprovalversioncode:inputData.napprovalversioncode,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeTestTab,activeSubSampleTab:inputData.activeTestTab,userinfo:inputData.userinfo,nneedsubsample:inputData.masterData.realRegSubTypeValue.nneedsubsample,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode?inputData.ndesigntemplatemappingcode:inputData.masterData.ndesigntemplatemappingcode,// checkBoxOperation: inputData.masterData.searchedSubSample ?  \n//     inputData.masterData.searchedSubSample.length > 0 ? inputData.checkBoxOperation:3:inputData.checkBoxOperation,\ncheckBoxOperation:inputData.masterData.searchedSubSample?inputData.masterData.searchedSubSample.length>0?inputData.checkBoxOperation:checkBoxOperation.SINGLESELECT:inputData.checkBoxOperation,// noParameterget:inputData.checkBoxOperation == 1 ? 3 : 4,\n// noParameterget:inputData.checkBoxOperation == checkBoxOperation.MULTISELECT ? checkBoxOperation.SINGLESELECT : checkBoxOperation.,\nnbatchmastercode:inputData.nbatchmastercode};var activeName=\"\";var dataStateName=\"\";var subSample=inputData.nneedsubsample;dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"approval/getApprovalSubSample\",inputParamData).then(function(response){var responseData=_objectSpread(_objectSpread({},response.data),{},{APSelectedSample:inputData.APSelectedSample});responseData=sortData(responseData);var oldSelectedTest=inputData.masterData.APSelectedTest?inputData.masterData.APSelectedTest:[];inputData.masterData.APSelectedTest=responseData.APSelectedTest?responseData.APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[];//inputData.masterData.APSelectedSubSample = responseData.APSelectedSubSample ? responseData.APSelectedSubSample : inputData.masterData.AP_SUBSAMPLE.length > 0 ? [inputData.masterData.AP_SUBSAMPLE[0]] : []\nvar skipInfo={};var masterData={};if(subSample){var oldSelectedSubSample=inputData.masterData.APSelectedSubSample;var AP_TEST=inputData.masterData.AP_TEST;fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);if(isParentValue){inputData.masterData.AP_SUBSAMPLE=sortDataByParent(responseData['AP_SUBSAMPLE'],inputData.masterData.AP_SAMPLE,\"npreregno\");}masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:inputData.APSelectedSample,selectedPreregno:inputData.npreregno,APSelectedSubSample:inputData.masterData.AP_SUBSAMPLE.length>0?[inputData.masterData.AP_SUBSAMPLE[0]]:[]});if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTests']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}//if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 5) {\nif(inputData.checkBoxOperation===checkBoxOperation.MULTISELECT){var wholeSubSampleList=masterData.AP_SUBSAMPLE.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(subsample,index){if(!wholeSubSampleList.includes(subsample.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}});if(oldSelectedSubSample.length>0){masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedSubSample:oldSelectedSubSample});}var APSelectedTest=oldSelectedTest.length>0?getSameRecordFromTwoArrays(oldSelectedTest,masterData.APSelectedSubSample,'npreregno'):responseData.APSelectedTest;masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:APSelectedTest,AP_TEST:AP_TEST,ApprovalParameter:responseData.ApprovalParameter?responseData.ApprovalParameter.length>0?responseData.ApprovalParameter:masterData.ApprovalParameter:masterData.ApprovalParameter,RegistrationSampleAttachment:responseData.RegistrationSampleAttachment?responseData.RegistrationSampleAttachment.length>0?responseData.RegistrationSampleAttachment:masterData.RegistrationSampleAttachment:masterData.RegistrationSampleAttachment});}// if(inputData.checkBoxOperation === 7 )\nif(inputData.checkBoxOperation===checkBoxOperation.QUICKSELECTALL){masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:responseData.APSelectedTest,AP_TEST:responseData.AP_TEST,ApprovalParameter:responseData.ApprovalParameter?responseData.ApprovalParameter.length>0?responseData.ApprovalParameter:masterData.ApprovalParameter:masterData.ApprovalParameter,RegistrationSampleAttachment:responseData.RegistrationSampleAttachment?responseData.RegistrationSampleAttachment.length>0?responseData.RegistrationSampleAttachment:masterData.RegistrationSampleAttachment:masterData.RegistrationSampleAttachment});}//if (inputData.checkBoxOperation === 3) {\nif(inputData.checkBoxOperation===checkBoxOperation.SINGLESELECT||inputData.checkBoxOperation===checkBoxOperation.QUICKSELECTSTATUS){masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:masterData.AP_TEST.length>0?[masterData.AP_TEST[0]]:[],ApprovalParameter:responseData.ApprovalParameter?responseData.ApprovalParameter.length>0?responseData.ApprovalParameter:masterData.ApprovalParameter:masterData.ApprovalParameter,RegistrationSampleAttachment:responseData.RegistrationSampleAttachment?responseData.RegistrationSampleAttachment.length>0?responseData.RegistrationSampleAttachment:[]:[],RegistrationTestAttachment:responseData.RegistrationTestAttachment?responseData.RegistrationTestAttachment.length>0?responseData.RegistrationTestAttachment:[]:[],RegistrationAttachment:responseData.RegistrationAttachment?responseData.RegistrationAttachment.length>0?responseData.RegistrationAttachment:[]:[],RegistrationSampleComment:responseData.RegistrationSampleComment?responseData.RegistrationSampleComment.length>0?responseData.RegistrationSampleComment:[]:[],RegistrationTestComment:responseData.RegistrationTestComment?responseData.RegistrationTestComment.length>0?responseData.RegistrationTestComment:[]:[],RegistrationComment:responseData.RegistrationComment?responseData.RegistrationComment.length>0?responseData.RegistrationComment:[]:[]});}var _inputData=inputData,testskip=_inputData.testskip,testtake=_inputData.testtake,subSampleSkip=_inputData.subSampleSkip,subSampleTake=_inputData.subSampleTake;// let bool = false;\n// Commented bool value because no need to check bool condition to update skipInfo value.\n// if (inputData.masterData.AP_SUBSAMPLE.length < inputData.subSampleSkip) {\ntestskip=0;subSampleSkip=0;//     bool = true\n// }\n// if (bool) {\nskipInfo={testskip:testskip,testtake:testtake,subSampleSkip:subSampleSkip,subSampleTake:subSampleTake};// }\n}else{var oldApprovalParameter=inputData.masterData.ApprovalParameter;fillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);var APSelectedSubSamplenew=[];//Added by sonia on 01-06-2024 Jira ID:ALPD-4270 Handling the undefined condition\nvar APSelectedSubSample=[];if(response.data.APSelectedSubSample&&response.data.APSelectedSubSample!==undefined){APSelectedSubSample=response.data.APSelectedSubSample;}APSelectedSubSamplenew=[].concat(_toConsumableArray(inputData.masterData.APSelectedSubSample),[APSelectedSubSample]);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:inputData.APSelectedSample,//APSelectedSubSample: inputData.masterData.APSelectedSubSample,\nAPSelectedSubSample:APSelectedSubSamplenew,APSelectedTest:inputData.masterData.APSelectedTest||[],selectedPreregno:inputData.npreregno});if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTests']=undefined;}// if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\n//     inputData.searchSubSampleRef.current.value = \"\";\n//     masterData['searchedSubSample'] = undefined\n// }\n// if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\n//     inputData.searchTestRef.current.value = \"\"\n//     masterData['searchedTests'] = undefined\n// }\nvar _inputData2=inputData,_testskip=_inputData2.testskip,_testtake=_inputData2.testtake;var bool=false;if(inputData.masterData.AP_TEST.length<=inputData.testskip){_testskip=0;bool=true;}if(bool){skipInfo={testskip:_testskip,testtake:_testtake};}var ApprovalParameter=[];var ResultUsedInstrument=[];var ResultUsedTasks=[];var RegistrationTestAttachment=[];var ApprovalResultChangeHistory=[];var RegistrationTestComment=[];var ApprovalHistory=[];//if (inputData.checkBoxOperation === 1) {\nif(inputData.checkBoxOperation===checkBoxOperation.MULTISELECT){var wholeTestList=masterData.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.map(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var ntransactiontestcode;if(oldSelectedTest.length>0){keepOld=true;inputData.masterData['ApprovalParameter']=oldApprovalParameter;masterData=_objectSpread(_objectSpread({},masterData),{},{//AP_TEST:responseData.AP_TEST,\nApprovalParameter:oldApprovalParameter,APSelectedTest:oldSelectedTest});}else{ntransactiontestcode=masterData.APSelectedTest[0].ntransactiontestcode;}switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}// } else if (inputData.checkBoxOperation === 5) {\n}else if(inputData.checkBoxOperation===checkBoxOperation.QUICKSELECTSTATUS){var _ntransactiontestcode=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var list=[];var dbData=[];masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});switch(inputData.activeTestTab){case\"IDS_RESULTS\":dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(list,_ntransactiontestcode,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":dbData=response.data.ResultUsedInstrument||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedInstrument),_toConsumableArray(dbData));ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TASK\":dbData=response.data.ResultUsedTasks||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedTasks),_toConsumableArray(dbData));ResultUsedTasks=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":dbData=response.data.RegistrationTestAttachment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(dbData));RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":dbData=response.data.ApprovalResultChangeHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalResultChangeHistory),_toConsumableArray(dbData));ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":dbData=response.data.RegistrationTestComment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(dbData));RegistrationTestComment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":dbData=response.data.ApprovalHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalHistory),_toConsumableArray(dbData));ApprovalHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;default:dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;}}// else if(inputData.checkBoxOperation === 7 )\nelse if(inputData.checkBoxOperation===checkBoxOperation.QUICKSELECTALL){// masterData = {\n//     ...masterData,\n//     APSelectedTest:responseData.APSelectedTest,\n//     AP_TEST:responseData.AP_TEST,\n//     ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\n// }\nvar _ntransactiontestcode2=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var _list=[];masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});switch(inputData.activeTestTab){case\"IDS_RESULTS\":_list=response.data.ApprovalParameter||[];ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list,_ntransactiontestcode2,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":_list=response.data.ResultUsedInstrument||[];ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":_list=response.data.ResultUsedTasks||[];ResultUsedTasks=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":_list=response.data.RegistrationTestAttachment||[];RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":_list=response.data.ApprovalResultChangeHistory||[];ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":_list=response.data.RegistrationTestComment||[];RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":_list=response.data.ApprovalHistory||[];ApprovalHistory=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:_list=response.data.ApprovalParameter?[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(response.data.ApprovalParameter)):_toConsumableArray(inputData.masterData.ApprovalParameter);ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}else{var _ntransactiontestcode3=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var _list2=[];masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});switch(inputData.activeTestTab){case\"IDS_RESULTS\":_list2=response.data.ApprovalParameter||[];ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list2,_ntransactiontestcode3,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":_list2=response.data.ResultUsedInstrument||[];ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":_list2=response.data.ResultUsedTasks||[];ResultUsedTasks=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":_list2=response.data.RegistrationTestAttachment||[];RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":_list2=response.data.ApprovalResultChangeHistory||[];ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":_list2=response.data.RegistrationTestComment||[];RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":_list2=response.data.ApprovalHistory||[];ApprovalHistory=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:_list2=response.data.ApprovalParameter?[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(response.data.ApprovalParameter)):_toConsumableArray(inputData.masterData.ApprovalParameter);ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}masterData=_objectSpread(_objectSpread({},masterData),{},{ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory});}if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{samplePrintHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})});// ALPD-4133 Start of Additional filter info to be Dispatched on Additional filter save - ATE-241\nvar multifilterInfo={};if(inputData.multiFilterLoad!==undefined){if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";}multifilterInfo={multiFilterLoad:inputData.multiFilterLoad,openChildModal:inputData.openChildModal,searchSampleRef:inputData.searchSampleRef,searchSubSampleRef:inputData.searchSubSampleRef,searchTestRef:inputData.searchTestRef,testskip:inputData.testskip,subsampleskip:inputData.subsampleskip,skip:inputData.skip// filterColumnActive:true\n};}//  End of Additional filter info ALPD-4133 ATE-241\ndispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,activeSubSampleTab:inputData.activeSubSampleTab,skip:undefined,take:undefined},skipInfo),{},{activeTabIndex:inputData.activeTabIndex},multifilterInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var skipInfo={};var bool=false;var _inputData3=inputData,testskip=_inputData3.testskip,testtake=_inputData3.testtake,subsampletake=_inputData3.subsampletake,subsampleskip=_inputData3.subsampleskip;var oldSelectedTest=inputData.masterData.APSelectedTest;var oldSelectedSubSample=inputData.masterData.APSelectedSubSample;var TestSelected=[];var subSampleSelected=[];var ApprovalParameter=[];var ResultUsedInstrument=[];var ResultUsedTasks=[];var RegistrationTestAttachment=[];var ApprovalResultChangeHistory=[];var RegistrationTestComment=[];var ApprovalHistory=[];var isGrandChildGetRequired=false;if(inputData[\"statusNone\"]){TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");subSampleSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");}else{TestSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");subSampleSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");}if(TestSelected.length>0){isGrandChildGetRequired=false;}else{isGrandChildGetRequired=true;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.APSelectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var ntransactiontestcode=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode.toString():\"\";var APSelectedSample=inputData.APSelectedSample;var selectedPreregno=inputData.npreregno;var APSelectedTest=inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[];var APSelectedSubSample=inputData.masterData.AP_SUBSAMPLE;if(subSample){var filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.AP_SUBSAMPLE,\"ntransactionsamplecode\");APSelectedSubSample=filterSelectedSubSample.length>0?filterSelectedSubSample:[inputData.masterData.AP_SUBSAMPLE[0]];if(inputData.masterData.AP_SUBSAMPLE.length<=inputData.subsampleskip){subsampleskip=0;skipInfo={subsampletake:subsampletake,subsampleskip:subsampleskip};}}var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:APSelectedSample,APSelectedSubSample:APSelectedSubSample,APSelectedTest:APSelectedTest});if(inputData.masterData.AP_TEST.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{testskip:testskip,testtake:testtake});}// inputData = {\n//     ...inputData, childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\n//         \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"], ntransactiontestcode, APSelectedSample, selectedPreregno, APSelectedTest,\n//     APSelectedSubSample, checkBoxOperation: 3,masterData,...skipInfo\n// }\ninputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"ApprovalParameter\",\"ApprovalResultChangeHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\"],ntransactiontestcode:ntransactiontestcode,APSelectedSample:APSelectedSample,selectedPreregno:selectedPreregno,APSelectedTest:APSelectedTest,APSelectedSubSample:APSelectedSubSample,checkBoxOperation:checkBoxOperation.SINGLESELECT,masterData:masterData},skipInfo);if(subSample){if(APSelectedTest.length===0){inputData[\"npreregno\"]=APSelectedSubSample.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=APSelectedSubSample.map(function(x){return x.ntransactionsamplecode;}).join(\",\");// inputData[\"checkBoxOperation\"] = 3\ninputData[\"checkBoxOperation\"]=checkBoxOperation.SINGLESELECT;inputData[\"childTabsKey\"]=[\"AP_TEST\"];dispatch(getTestDetail(inputData,true));}else{dispatch(getTestChildTabDetail(inputData,true));}}else{dispatch(getTestChildTabDetail(inputData,true));}// dispatch(getTestChildTabDetail(inputData, true));\n}else{var _masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedTest:TestSelected?TestSelected:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[],APSelectedSample:inputData.APSelectedSample,APSelectedSubSample:subSampleSelected?subSampleSelected:inputData.masterData.AP_SUBSAMPLE.length>0?[inputData.masterData.AP_SUBSAMPLE[0]]:[]});var wholeTestList=_masterData.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.map(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});if(subSample){if(inputData.masterData.AP_SUBSAMPLE.length<=inputData.subsampleskip){subsampleskip=0;skipInfo={subsampletake:subsampletake,subsampleskip:subsampleskip};}}var keepOld=false;var _ntransactiontestcode4;if(inputData.masterData.AP_TEST.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{testskip:testskip,testtake:testtake});}if(oldSelectedTest.length>0){keepOld=true;_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode4=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"-1\";}switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData[\"statusNone\"]?getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].npreregno,\"npreregno\"):filterRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].npreregno,\"npreregno\"):getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,_ntransactiontestcode4,\"ntransactiontestcode\");break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode4,\"ntransactiontestcode\");break;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:_objectSpread(_objectSpread({},_masterData),{},{ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory},skipInfo)},skipInfo),{},{loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,activeSubSampleTab:inputData.activeSubSampleTab,activeTabIndex:inputData.activeTabIndex})});}}};}export function getTestDetail(inputData,isServiceRequired){return function(dispatch){var _inputParamData;var inputParamData=(_inputParamData={ntype:2,nflag:3,nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,napprovalversioncode:inputData.napprovalversioncode,napprovalconfigcode:inputData.napprovalconfigcode,ntransactionsamplecode:inputData.ntransactionsamplecode,nsectioncode:inputData.nsectioncode,ntestcode:inputData.ntestcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,activeSubSampleTab:inputData.activeSubSampleTab,userinfo:inputData.userinfo},_defineProperty(_inputParamData,\"ntransactionstatus\",inputData.ntransactionstatus),_defineProperty(_inputParamData,\"ndesigntemplatemappingcode\",inputData.ndesigntemplatemappingcode),_defineProperty(_inputParamData,\"checkBoxOperation\",inputData.checkBoxOperation),_defineProperty(_inputParamData,\"nneedsubsample\",inputData.masterData.realRegSubTypeValue.nneedsubsample),_defineProperty(_inputParamData,\"nbatchmastercode\",inputData.nbatchmastercode),_inputParamData);var activeName=\"\";var dataStateName=\"\";var masterData={};var subSample=inputData.nneedsubsample;dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"approval/getApprovalTest\",inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);//responseData = sortData(responseData,'descending', 'npreregno')\ninputData.searchTestRef.current.null=\"\";//inputData.masterData.APSelectedTest = responseData.APSelectedTest ? responseData.APSelectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\nvar oldSelectedTest=inputData.masterData.APSelectedTest;var oldSelectedSubSample=inputData.masterData.APSelectedSubSample;inputData.masterData.APSelectedTest=oldSelectedTest.length>0?oldSelectedTest:responseData.APSelectedTest?responseData.APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedTest:inputData.masterData.APSelectedTest,// APselectedSample: inputData.APSelectedSample,\nAPSelectedSubSample:inputData.APSelectedSubSample,selectedPreregno:inputData.npreregno});if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTests']=undefined;}var _inputData4=inputData,testskip=_inputData4.testskip,testtake=_inputData4.testtake,subSampleSkip=_inputData4.subSampleSkip,subSampleTake=_inputData4.subSampleTake;// let bool = false;\n// Commented bool value because no need to check bool condition to update skipInfo value.\nif(inputData.masterData.AP_SUBSAMPLE.length<=inputData.subSampleSkip){subSampleSkip=0;}// if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\ntestskip=0;// bool = true\n// }\nvar skipInfo={};// if (bool) {\nskipInfo={testskip:testskip,testtake:testtake,subSampleSkip:subSampleSkip,subSampleTake:subSampleTake};// }\nvar ApprovalParameter=[];var ResultUsedInstrument=[];var ResultUsedTasks=[];var RegistrationTestAttachment=[];var ApprovalResultChangeHistory=[];var RegistrationTestComment=[];var ApprovalHistory=[];var RegistrationSampleComment=[];var RegistrationSampleAttachment=[];//if (inputData.checkBoxOperation === 1) {\nif(inputData.checkBoxOperation===checkBoxOperation.MULTISELECT){var wholeTestList=masterData.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.map(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var ntransactiontestcode;ntransactiontestcode=masterData.APSelectedTest[0].ntransactiontestcode;// }\nswitch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}if(subSample){var wholeSubsampleList=masterData.AP_SUBSAMPLE.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.map(function(test,index){if(!wholeSubsampleList.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});var _keepOld=false;var ntransactionsamplecode;ntransactionsamplecode=masterData.APSelectedSubSample[0].ntransactionsamplecode;switch(inputData.activeSubSampleTab){case\"IDS_SUBSAMPLECOMMENTS\":RegistrationSampleComment=_keepOld?inputData.masterData.RegistrationSampleComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleComment,ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleComment\";dataStateName=\"subSampleCommentDataState\";break;default:RegistrationSampleAttachment=_keepOld?inputData.masterData.RegistrationSampleAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleAttachment,ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleAttachment\";dataStateName=\"subSampleAttachmentDataState\";break;}}//  } else if (inputData.checkBoxOperation === 5) {\n}else if(inputData.checkBoxOperation===checkBoxOperation.QUICKSELECTSTATUS){masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var _ntransactiontestcode5=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var list=[];var dbData=[];switch(inputData.activeTestTab){case\"IDS_RESULTS\":dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(dbData,_ntransactiontestcode5,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":dbData=response.data.ResultUsedInstrument||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedInstrument),_toConsumableArray(dbData));ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TASK\":dbData=response.data.ResultUsedTasks||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedTasks),_toConsumableArray(dbData));ResultUsedTasks=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":dbData=response.data.RegistrationTestAttachment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(dbData));RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":dbData=response.data.ApprovalResultChangeHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalResultChangeHistory),_toConsumableArray(dbData));ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":dbData=response.data.RegistrationTestComment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(dbData));RegistrationTestComment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":dbData=response.data.ApprovalHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalHistory),_toConsumableArray(dbData));ApprovalHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;default:dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;}// } else if (inputData.checkBoxOperation === 7) {\n}else if(inputData.checkBoxOperation===checkBoxOperation.QUICKSELECTALL){var testList=reArrangeArrays(inputData.masterData.AP_SUBSAMPLE,responseData.AP_TEST,\"ntransactionsamplecode\");masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:[testList[0]],AP_TEST:testList,ApprovalParameter:responseData.ApprovalParameter?responseData.ApprovalParameter.length>0?responseData.ApprovalParameter:masterData.ApprovalParameter:masterData.ApprovalParameter});// let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\nvar _keepOld2=false;// let ntransactiontestcode;\n// if (oldSelectedTest.length > 0) {\n//     keepOld = true\n//     masterData = {\n//         ...masterData,\n//         APSelectedTest: oldSelectedTest\n//     }\n// } else {\n//     ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\"\n// }\nvar _ntransactiontestcode6=testList.length>0?testList[0].ntransactiontestcode:\"\";switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=_keepOld2?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":ResultUsedTasks=_keepOld2?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=_keepOld2?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=_keepOld2?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=_keepOld2?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=_keepOld2?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:ApprovalParameter=_keepOld2?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}else{masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var _ntransactiontestcode7=response.data.APSelectedTest?response.data.APSelectedTest.length>0?response.data.APSelectedTest[0].ntransactiontestcode:inputData.masterData.AP_TEST?inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:-1:-1:-1;//inputData.masterData.AP_TEST ? inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode: -1 : -1\nvar _list3=[];switch(inputData.activeTestTab){case\"IDS_RESULTS\":_list3=response.data.ApprovalParameter||[];ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list3,_ntransactiontestcode7,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":_list3=response.data.ResultUsedInstrument||[];ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":_list3=response.data.ResultUsedTasks||[];ResultUsedTasks=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":_list3=response.data.RegistrationTestAttachment||[];RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":_list3=response.data.ApprovalResultChangeHistory||[];ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":_list3=response.data.RegistrationTestComment||[];RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":_list3=response.data.ApprovalHistory||[];ApprovalHistory=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:_list3=response.data.ApprovalParameter?[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(response.data.ApprovalParameter)):_toConsumableArray(inputData.masterData.ApprovalParameter);ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}if(subSample){var _wholeSubsampleList=masterData.AP_SUBSAMPLE.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.map(function(test,index){if(!_wholeSubsampleList.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});var _keepOld3=false;var _ntransactionsamplecode;if(oldSelectedSubSample.length>0){_keepOld3=true;// masterData = {\n//     ...masterData,\n//     //AP_TEST:responseData.AP_TEST,\n//     ApprovalParameter:oldApprovalParameter,\n//     APSelectedSubSample: oldSelectedSubSample\n// }\n}else{_ntransactionsamplecode=masterData.APSelectedSubSample[0].ntransactionsamplecode;}// ntransactionsamplecode = masterData.APSelectedSubSample[0].ntransactionsamplecode\nswitch(inputData.activeSubSampleTab){case\"IDS_SUBSAMPLECOMMENTS\":RegistrationSampleComment=_keepOld3?inputData.masterData.RegistrationSampleComment:getRecordBasedOnPrimaryKeyName(responseData.RegistrationSampleComment,_ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleComment\";dataStateName=\"subSampleCommentDataState\";break;default:RegistrationSampleAttachment=_keepOld3?inputData.masterData.RegistrationSampleAttachment:getRecordBasedOnPrimaryKeyName(responseData.RegistrationSampleAttachment,_ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleAttachment\";dataStateName=\"subSampleAttachmentDataState\";break;}}masterData=_objectSpread(_objectSpread({},masterData),{},{ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory,RegistrationSampleComment:RegistrationSampleComment,RegistrationSampleAttachment:RegistrationSampleAttachment});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{samplePrintHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})});skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{subSampleCommentDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined}),subSampleAttachmentDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})});dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:_objectSpread(_objectSpread({},masterData),{},{APSelectedSubSample:inputData.APSelectedSubSample,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,skip:undefined,take:undefined},skipInfo)},skipInfo),{},{loading:false,showFilter:false,activeTestTab:inputData.activeTestTab})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var bool=false;var skipInfo={};var _inputData5=inputData,testskip=_inputData5.testskip,testtake=_inputData5.testtake;var oldSelectedTest=inputData.masterData.APSelectedTest;var TestSelected=inputData[\"statusNone\"]?getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest,inputData.removeElementFromArray[0].ntransactionsamplecode,\"ntransactionsamplecode\"):filterRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest,inputData.removeElementFromArray[0].ntransactionsamplecode,\"ntransactionsamplecode\");var isGrandChildGetRequired=false;if(TestSelected.length>0){isGrandChildGetRequired=false;}else{isGrandChildGetRequired=true;}var ApprovalParameter=[];var ResultUsedInstrument=[];var ResultUsedTasks=[];var RegistrationTestAttachment=[];var ApprovalResultChangeHistory=[];var RegistrationTestComment=[];var ApprovalHistory=[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.APSelectedSubSample,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);if(isGrandChildGetRequired){//let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode.toString() : \"\";\nvar APSelectedSample=inputData.masterData.APSelectedSample;var selectedPreregno=inputData.npreregno;//let selectedTest = inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [];\nvar APSelectedSubSample=inputData.APSelectedSubSample;//let APSelectedSubSample = inputData.masterData.APSelectedSubSample\nvar filterTestSameOldSelectedTest=getSameRecordFromTwoDifferentArrays(oldSelectedTest,inputData.masterData.AP_TEST,\"ntransactiontestcode\");var APSelectedTest=filterTestSameOldSelectedTest.length>0?filterTestSameOldSelectedTest:[inputData.masterData.AP_TEST[0]];var ntransactiontestcode=APSelectedTest.length>0?APSelectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\";if(inputData.masterData.AP_TEST.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake};}// inputData = {\n//     ...inputData, childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\n//         \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"], ntransactiontestcode, APSelectedSample, selectedPreregno, APSelectedTest,\n//     APSelectedSubSample, checkBoxOperation: 3, skipInfo\n// }\ninputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"ApprovalParameter\",\"ApprovalResultChangeHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\"],ntransactiontestcode:ntransactiontestcode,APSelectedSample:APSelectedSample,selectedPreregno:selectedPreregno,APSelectedTest:APSelectedTest,APSelectedSubSample:APSelectedSubSample,checkBoxOperation:checkBoxOperation.SINGLESELECT,skipInfo:skipInfo});dispatch(getTestChildTabDetail(inputData,true));}else{var keepOld=false;var _ntransactiontestcode8;var _masterData2=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSubSample:inputData.APSelectedSubSample,selectedTransactioncode:inputData.ntransactionsamplecode,APSelectedTest:TestSelected?TestSelected:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var wholeTestList=_masterData2.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});if(inputData.masterData.AP_TEST.length<=inputData.testskip){testskip=0;bool=true;}var _skipInfo={};if(bool){_skipInfo={testskip:testskip,testtake:testtake};}if(oldSelectedTest.length>0){keepOld=true;_masterData2=_objectSpread(_objectSpread({},_masterData2),{},{APSelectedTest:oldSelectedTest});}else{_ntransactiontestcode8=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"-1\";}switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData[\"statusNone\"]?getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].ntransactionsamplecode,'ntransactionsamplecode'):filterRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].ntransactionsamplecode,'ntransactionsamplecode'):getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,_ntransactiontestcode8,\"ntransactiontestcode\");break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode8,\"ntransactiontestcode\");break;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:_objectSpread(_objectSpread({},_masterData2),{},{ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false,showFilter:false},_skipInfo),{},{activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab})});}}//}\n};}export function getTestChildTabDetail(inputData,isServiceRequired){return function(dispatch){if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){var inputParamData={ntransactiontestcode:inputData.ntransactiontestcode,npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;var testtake=inputData.testtake;var activeName=\"\";var dataStateName=\"\";switch(inputData.activeTestTab){case\"IDS_RESULTS\":url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_PARAMETERRESULTS\":url=\"registration/getregistrationparameter\";activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":url=\"resultentrybysample/getResultUsedInstrument\";activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_MATERIAL\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_TASK\":url=\"resultentrybysample/getResultUsedTask\";activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";activeName=\"RegistrationTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_DOCUMENTS\":url=\"approval/getapprovalparameter\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"approval/getApprovalResultChangeHistory\";activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":url=\"approval/getSampleApprovalHistory\";activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;case\"IDS_TESTHISTORY\":url=\"history/getTestHistory\";activeName=\"RegistrationTestHistory\";dataStateName=\"registrationTestHistoryDataState\";break;default:url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}if(url!==null){dispatch(initRequest(true));if(isServiceRequired){rsapi.post(url,inputParamData).then(function(response){var skipInfo={};var responseData=_objectSpread(_objectSpread({},response.data),{},{APSelectedSubSample:inputData.APSelectedSubSample||inputData.masterData.APSelectedSubSample,selectedTest:inputData.APselectedTest});//responseData = inputData.checkBoxOperation === 7 ?  sortData( response.data,\"descending\",\"npreregno\"):responseData;\n//sortData( responseData,\"descending\",\"ntransactionsamplecode\")\n// fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:inputData.APSelectedSample||inputData.masterData.APSelectedSample,APSelectedSubSample:inputData.APSelectedSubSample||inputData.masterData.APSelectedSubSample,APSelectedTest:inputData.APSelectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode?inputData.ntransactionsamplecode:inputData.masterData.APSelectedSubSample[0].ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode,activeTabIndex:inputData.activeTabIndex,activeTabId:inputData.activeTabId});if(inputData[dataStateName]&&masterData[activeName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,availableReleaseRecord:undefined,activeTabIndex:inputData.activeTabIndex,activeTabId:inputData.activeTabId,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.APSelectedTest,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactiontestcode\",inputData.removeElementFromArray);var skipInfo={};var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedTest:inputData.APSelectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined,availableReleaseRecord:undefined},skipInfo)});}}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},inputData.masterData),loading:false,showFilter:false,availableReleaseRecord:undefined,activeSampleTab:inputData.activeSampleTab}});}}else{var _inputData$masterData=inputData.masterData,ApprovalParameter=_inputData$masterData.ApprovalParameter,ResultUsedInstrument=_inputData$masterData.ResultUsedInstrument,ResultUsedTasks=_inputData$masterData.ResultUsedTasks,RegistrationTestAttachment=_inputData$masterData.RegistrationTestAttachment,ApprovalResultChangeHistory=_inputData$masterData.ApprovalResultChangeHistory,RegistrationTestComment=_inputData$masterData.RegistrationTestComment,ApprovalHistory=_inputData$masterData.ApprovalHistory,RegistrationTestHistory=_inputData$masterData.RegistrationTestHistory;switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=[];break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=[];break;case\"IDS_TASK\":ResultUsedTasks=[];break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=[];break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=[];break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=[];break;case\"IDS_APPROVALHISTORY\":ApprovalHistory=[];break;case\"IDS_TESTHISTORY\":RegistrationTestHistory=[];break;default:ApprovalParameter=[];break;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:[],ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false}});}};}export function getSampleChildTabDetail(inputData){return function(dispatch){if(inputData.npreregno.length>0){var inputParamData={npreregno:inputData.npreregno,userinfo:inputData.userinfo,OrderCodeData:inputData.OrderCodeData?inputData.OrderCodeData:-1};var url=null;switch(inputData.activeSampleTab){case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;case\"IDS_SAMPLECOMMENTS\":url=\"comments/getSampleComment\";break;case\"IDS_SUBSAMPLEATTACHMENTS\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_SUBSAMPLECOMMENTS\":url=\"resultentrybysample/getResultUsedTask\";break;case\"IDS_SOURCE\":url=\"registration/getRegistrationSourceCountry\";break;case\"IDS_SAMPLEAPPROVALHISTORY\":url=\"approval/getSampleApprovalHistory\";break;case\"IDS_PRINTHISTORY\":url=\"approval/getPrintHistory\";break;case\"IDS_REPORTHISTORY\":url=\"approval/getCOAHistory\";break;case\"IDS_EXTERNALORDERREPORTS\":url=\"registration/getExternalOrderAttachment\";break;default:url=null;break;}if(url!==null){dispatch(initRequest(true));rsapi.post(url,inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{selectedSample:inputData.selectedSample,selectedTestCode:inputData.ntransactiontestcode}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeSampleTab,screenName:inputData.screenName,selectedId:null,activeTabIndex:inputData.activeTabIndex}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}};}export function performAction(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/performAction\",inputParam.inputData).then(function(response){if(response.data.rtn===undefined||response.data.rtn===\"Success\"){replaceUpdatedObject(response.data[\"AP_SAMPLE\"],inputParam.masterData.AP_SAMPLE,\"npreregno\");replaceUpdatedObject(response.data[\"AP_SUBSAMPLE\"],inputParam.masterData.AP_SUBSAMPLE,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"AP_TEST\"],inputParam.masterData.AP_TEST,\"ntransactiontestcode\");var AP_SAMPLE=response.data[\"AP_SAMPLE\"];var AP_SUBSAMPLE=response.data[\"AP_SUBSAMPLE\"];var AP_TEST=response.data[\"AP_TEST\"];delete response.data[\"AP_SAMPLE\"];delete response.data[\"AP_SUBSAMPLE\"];delete response.data[\"AP_TEST\"];var masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),response.data),{},{APSelectedSample:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.APSelectedSample,\"npreregno\"),APSelectedSubSample:replaceUpdatedObject(AP_SUBSAMPLE,inputParam.masterData.APSelectedSubSample,\"ntransactionsamplecode\"),//APSelectedSubSample: getSameRecordFromTwoArrays(response.data.updatedSubSample, inputParam.masterData.APSelectedSubSample, \"ntransactionsamplecode\", undefined),\nAPSelectedTest:replaceUpdatedObject(AP_TEST,inputParam.masterData.APSelectedTest,\"ntransactiontestcode\")//APSelectedTest: getSameRecordFromTwoArrays(response.data.updatedTest, inputParam.masterData.APSelectedTest, \"ntransactiontestcode\", undefined),\n});// let masterData = {\n//     ...inputParam.masterData,\n//     ...response.data,\n//     AP_SAMPLE: replaceUpdatedObject(response.data.updatedSample, inputParam.masterData.AP_SAMPLE, 'npreregno'),\n//     AP_SUBSAMPLE: replaceUpdatedObject(response.data.updatedSubSample, inputParam.masterData.AP_SUBSAMPLE, 'ntransactionsamplecode'),\n//     AP_TEST: replaceUpdatedObject(response.data.updatedTest, inputParam.masterData.AP_TEST, 'ntransactiontestcode')\n// }\n// dispatch({type: DEFAULT_RETURN, payload:{\n// masterData:{\n//     ...inputParam.inputData.masterData,\n//     ...response.data, \n//     AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam   .inputData.masterData.AP_SAMPLE,'npreregno'),\n//     AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.inputData.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\n//     AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.inputData.masterData.AP_TEST,'ntransactiontestcode')\n// },\n//     loading:false ,\n//     loadEsign:false,\n//     openChildModal:false                     \n// }}) \nvar respObject={masterData:masterData,inputParam:inputParam,openChildModal:false,operation:\"dynamic\",masterStatus:\"\",errorCode:undefined,loadEsign:false,showEsign:false,selectedRecord:{},loading:false,availableReleaseRecord:undefined};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false}});//toast.warn(response.data.rtn);\n}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);//toast.error(intl.formatMessage({ id: \"IDS_SERVICEERROR\" }));\n}else{toast.warn(error.response.data);}});};}export function updateDecision(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/updateDecision\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);// dispatch({type: DEFAULT_RETURN, payload:{\n//     masterData:{\n//         ...inputParam.masterData,\n//         ...responseData, \n//         AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),\n//         AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\n//         AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')\n//     },\n//     loading:false                      \n// }}) \nvar masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{AP_SAMPLE:replaceUpdatedObject(response.data.AP_SAMPLE,inputParam.masterData.AP_SAMPLE,'npreregno'),AP_SUBSAMPLE:replaceUpdatedObject(response.data.AP_SUBSAMPLE,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),// ALPD-5676    Added AP_TEST by Vishakh to replace the updated test in front end (08-04-2025)\nAP_TEST:replaceUpdatedObject(response.data.AP_TEST,inputParam.masterData.AP_TEST,'ntransactiontestcode')});var respObject={masterData:masterData,inputParam:inputParam,openChildModal:false,operation:\"dynamic\",masterStatus:\"\",errorCode:undefined,loadEsign:false,showEsign:false,selectedRecord:{},loading:false,// ALPD-5676    Added skip and take for test and subsample by Vishakh to update in store (08-04-2025)\ntestskip:inputParam.testskip,testtake:inputParam.testtake,subSampleSkip:inputParam.subSampleSkip,subSampleTake:inputParam.subSampleTake};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getRegistrationType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{SampleTypeValue:inputData.SampleTypeValue,realApprovalVersionList:inputData.realApprovalVersionList,realDesignTemplateMappingList:inputData.realDesignTemplateMappingList,realRegTypeList:inputData.realRegTypeList,realRegSubTypeList:inputData.realRegSubTypeList,realFilterStatusList:inputData.realFilterStatusList}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationSubType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getRegistrationSubType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegTypeValue:inputData.RegTypeValue,realApprovalVersionList:inputData.realApprovalVersionList,realDesignTemplateMappingList:inputData.realDesignTemplateMappingList,realRegTypeList:inputData.realRegTypeList,realRegSubTypeList:inputData.realRegSubTypeList,realFilterStatusList:inputData.realFilterStatusList}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getFilterStatus(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getApproveConfigVersionRegTemplateDesign\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegSubTypeValue:inputData.RegSubTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getFilterBasedTest(inputData){return function(dispatch){if(inputData.napprovalversioncode){dispatch(initRequest(true));rsapi.post(\"approval/getFilterBasedTest\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegSubTypeValue:inputData.RegSubTypeValue,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,DesignTemplateMappingValue:inputData.DesignTemplateMappingValue}),loading:false}});if(response.data.rtn){toast.warn(response.data.rtn);}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{//toast.warn(\"Please Select All the Values in Filter\");\ntoast.warn(intl.FormattedMessage({id:\"IDS_PLSSELECTALLVALUESINFILTER\"}));}};}export function getApprovalVersion(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getApprovalVersion\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);//  responseData = sortData(responseData)\ndispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{realApprovalVersionList:inputParam.inputData.realApprovalVersionList,realDesignTemplateMappingList:inputParam.inputData.realDesignTemplateMappingList,realRegTypeList:inputParam.inputData.realRegTypeList,realRegSubTypeList:inputParam.inputData.realRegSubTypeList,realFilterStatusList:inputParam.inputData.realFilterStatusList// fromDate: inputParam.inputData.dfrom,\n// toDate: inputParam.inputData.dto,\n}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovalSample(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getApprovalSample\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);// responseData = sortData(responseData)\nvar masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);if(inputParam.searchSampleRef!==undefined&&inputParam.searchSampleRef.current!==null){inputParam.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputParam.searchSubSampleRef!==undefined&&inputParam.searchSubSampleRef.current!==null){inputParam.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputParam.searchTestRef!==undefined&&inputParam.searchTestRef.current!==null){inputParam.searchTestRef.current.value=\"\";// masterData['searchedTest'] = undefined\nmasterData['searchedTests']=undefined;}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,skip:0,take:inputParam.take,testskip:0,testtake:inputParam.testtake,//ALPD-5193--Added byNeeraj  Test Approval screen -> Records are disappeared in Sub-sample column in specific scenario. ( Both Product & French )\n//start\nsubSampleSkip:0,subSampleTake:inputParam.subSampleTake,//end\nresultDataState:_objectSpread(_objectSpread({},inputParam.resultDataState),{},{sort:undefined,filter:undefined}),instrumentDataState:_objectSpread(_objectSpread({},inputParam.instrumentDataState),{},{sort:undefined,filter:undefined}),materialDataState:_objectSpread(_objectSpread({},inputParam.materialDataState),{},{sort:undefined,filter:undefined}),taskDataState:_objectSpread(_objectSpread({},inputParam.taskDataState),{},{sort:undefined,filter:undefined}),documentDataState:_objectSpread(_objectSpread({},inputParam.documentDataState),{},{sort:undefined,filter:undefined}),resultChangeDataState:_objectSpread(_objectSpread({},inputParam.resultChangeDataState),{},{sort:undefined,filter:undefined}),testCommentDataState:_objectSpread(_objectSpread({},inputParam.testCommentDataState),{},{sort:undefined,filter:undefined}),historyDataState:_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined}),samplePrintHistoryDataState:_objectSpread(_objectSpread({},inputParam.samplePrintHistoryDataState),{},{sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},inputParam.sampleHistoryDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getStatusCombo(inputParam){return function(dispatch){var inputData={ntransactionresultcode:inputParam.primaryKeyValue,userinfo:inputParam.userInfo};dispatch(initRequest(true));rsapi.post(\"approval/getStatusCombo\",inputData).then(function(response){var responseData=_objectSpread({},response.data);//responseData = sortData(responseData)\nvar GradeListMap=constructOptionList(response.data.Grade||[],\"ngradecode\",\"sgradename\",'ascending','ngradecode',false);var Grade=GradeListMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{Grade:Grade,selectedParamId:inputParam.primaryKeyValue}),loading:false,showFilter:false,openChildModal:true,ncontrolCode:inputParam.ncontrolCode,selectedRecord:{senforcestatuscomment:response.data.parameterComment&&response.data.parameterComment.senforcestatuscomment,ntransactionresultcode:response.data.parameterComment&&response.data.parameterComment.ntransactionresultcode,ntransactiontestcode:response.data.parameterComment&&response.data.parameterComment.ntransactiontestcode},operation:\"enforce\",screenName:\"IDS_STATUS\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getParameterEdit(inputParam){return function(dispatch){var inputData={ntransactiontestcode:inputParam.selectedTest&&inputParam.selectedTest.map(function(item){return item.ntransactiontestcode;}).join(\",\"),userinfo:inputParam.userInfo};if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){dispatch(initRequest(true));rsapi.post(\"approval/getEditParameter\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},responseData),{},{loading:false,openChildModal:true,operation:\"update\",screenName:\"IDS_APPROVALPARAMETER\"// ncontrolCode:inputParam.ncontrolCode,\n})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{multilingualMsg:\"IDS_SELECTTEST\"}});}};}export function validateEsignforApproval(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){if(inputParam.operation==='dynamic'){var methodUrl=\"performaction\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}dispatch(performAction(inputParam[\"screenData\"][\"inputParam\"],inputParam[\"screenData\"][\"masterData\"]));}else if(inputParam.operation==='reportgeneration'){delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"agree\"];inputParam[\"screenData\"][\"inputParam\"][\"reporparam\"][\"userinfo\"]=inputParam.inputData.userinfo;dispatch(generateCOAReport(inputParam[\"screenData\"][\"inputParam\"]['reporparam']));}else if(inputParam.operation==='decision'){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"agree\"];inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;dispatch(updateDecision(inputParam[\"screenData\"][\"inputParam\"]));}else if(inputParam.operation==='enforce'){var _methodUrl=inputParam.screenData.inputParam.methodUrl;inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][_methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][_methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][_methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][_methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][_methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][_methodUrl.toLowerCase()][\"agree\"];}dispatch(updateEnforceStatus(inputParam[\"screenData\"].inputParam));}}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function previewSampleReport(inputParam){return function(dispatch){dispatch(initRequest(true));var ndecisionStatus=inputParam.sample.ndecisionstatus;if(inputParam.sample.ndecisionstatus===undefined||inputParam.sample.ndecisionstatus===transactionStatus.DRAFT){ndecisionStatus=transactionStatus.PASS;}var inputData={ndecisionstatus:ndecisionStatus,userinfo:inputParam.userinfo,nprimarykey:inputParam.sample.npreregno,ncoareporttypecode:reportCOAType.SAMPLECERTIFICATEPRIVIEW,nreporttypecode:REPORTTYPE.SAMPLEREPORT,sprimarykeyname:\"npreregno\",ncontrolcode:inputParam.ncontrolCode,nregtypecode:inputParam.sample.nregtypecode,nregsubtypecode:inputParam.sample.nregsubtypecode,npreregno:inputParam.sample.npreregno};rsapi.post(\"approval/previewSampleReport\",inputData).then(function(response){if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,openChildModal:false,loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function generateCOAReport(inputParam){return function(dispatch){dispatch(initRequest(true));var inputData={npreregno:inputParam.sample.npreregno,nsectioncode:inputParam.nsectioncode||-1,userinfo:inputParam.userinfo,nprimarykey:inputParam.sample.npreregno,ncoareporttypecode:reportCOAType.SAMPLEWISE,nreporttypecode:REPORTTYPE.COAREPORT,sprimarykeyname:\"npreregno\",ncontrolcode:inputParam.ncontrolCode,nregtypecode:inputParam.nregtypecode,nregsubtypecode:inputParam.nregsubtypecode};rsapi.post(\"approval/generateCOAReport\",inputData).then(function(response){if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,openChildModal:false,selectedRecord:{},loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getEnforceCommentsHistory(selectedParam,masterData,userInfo,idsName,dataField){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getEnforceCommentsHistory\",{ntransactionresultcode:selectedParam.ntransactionresultcode,userinfo:userInfo,fetchField:dataField}).then(function(response){if(response.data.length>0){masterData=_objectSpread(_objectSpread({},masterData),{},{enforceCommentsHistory:response.data});dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData,openChildModal:true,operation:\"view\",screenName:\"IDS_ENFORCECOMMENTHISTORY\",idsName:idsName,dataField:dataField}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,multilingualMsg:\"IDS_NOPREVIOUSCOMMENTSFOUND\"}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function reportGenerate(inputParam){return function(dispatch){dispatch(initRequest(true));var inputData={npreregno:inputParam.sample.npreregno,userinfo:inputParam.userinfo,nregsubtypecode:inputParam.sample.nregsubtypecode,reportName:\"RJ_Testwise_Report_QRCode\",reportFormat:\"pdf\"};rsapi.post(\"reportjasper/generateCOAReport\",inputData).then(function(response){if(response.data.rtn===\"Success\"){if(response.data.filePath){// let user = response;\nvar elnURL=response.data.filePath;window.open(elnURL,'_blank');}else{toast.info(intl.FormattedMessage({id:\"IDS_ELNUIURLNOTAVAILABLE\"}));}// document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filePath);\n// document.getElementById(\"download_data\").click();\n}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,openChildModal:false,selectedRecord:{},loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSubSampleChildTabDetail(inputData){return function(dispatch){if(inputData.ntransactionsamplecode.length>0){var inputParamData={ntransactionsamplecode:inputData.ntransactionsamplecode,userinfo:inputData.userinfo};var url=null;switch(inputData.activeSubSampleTab){case\"IDS_SUBSAMPLEATTACHMENTS\":url=\"attachment/getSubSampleAttachment\";break;case\"IDS_SUBSAMPLECOMMENTS\":url=\"comments/getSubSampleComment\";break;default:url=null;break;}if(url!==null){dispatch(initRequest(true));rsapi.post(url,inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{APSelectedSubSample:inputData.APSelectedSubSample// selectedTestCode: inputData.ntransactiontestcode,\n}),loading:false,showFilter:false,activeTestTab:inputData.activeSubSampleTab,screenName:inputData.screenName}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:inputData.APSelectedSample}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{//toast.warn(\"Please Select a Sample\");\ntoast.warn(intl.FormattedMessage({id:\"IDS_PLSSELECTASAMPLE\"}));}};}export function ViewPatientDetails(masterData,screenName,userInfo,viewdetails){return function(dispatch){dispatch(initRequest(true));var selectedRecord={ntestcode:viewdetails.test.ntestcode};rsapi.post(\"approval/getSampleViewDetails\",{selectedRecord:selectedRecord,PatientId:viewdetails.test.spatientid,npreregno:viewdetails.test.npreregno,userinfo:userInfo}).then(function(response){masterData['AuditModifiedComments']=[];masterData['AuditModifiedComments']=response.data['AuditModifiedComments'];masterData['CurrentResult']=[];masterData['CurrentResult']=response.data['CurrentResult'];masterData['viewdetails']=[];masterData['viewdetails']=response.data['viewdetails'][0];//sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,screenName:\"IDS_PREVIOUSRESULTVIEW\",operation:\"\",loading:false,openChildModal:true}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getTestBasedCompletedBatch(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getTestBasedOnCompletedBatch\",inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),response.data),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function updateEnforceStatus(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/updateEnforceStatus\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);replaceUpdatedObject(responseData[\"AP_SAMPLE\"],inputParam.masterData.AP_SAMPLE,\"npreregno\");replaceUpdatedObject(responseData[\"AP_SUBSAMPLE\"],inputParam.masterData.AP_SUBSAMPLE,\"ntransactionsamplecode\");replaceUpdatedObject(responseData[\"AP_TEST\"],inputParam.masterData.AP_TEST,\"ntransactiontestcode\");delete responseData[\"AP_SAMPLE\"];delete responseData[\"AP_SUBSAMPLE\"];delete responseData[\"AP_TEST\"];var masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{APSelectedSample:replaceUpdatedObject(responseData.updatedSample,inputParam.masterData.APSelectedSample,\"npreregno\"),APSelectedSubSample:replaceUpdatedObject(responseData.updatedSubSample,inputParam.masterData.APSelectedSubSample,'ntransactionsamplecode'),APSelectedTest:replaceUpdatedObject(responseData.updatedTest,inputParam.masterData.APSelectedTest,'ntransactiontestcode')});var respObject={masterData:masterData,inputParam:inputParam,openChildModal:false,operation:\"update\",masterStatus:\"\",errorCode:undefined,loadEsign:false,showEsign:false,selectedRecord:{},loading:false};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function checkReleaseRecord(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/checkReleaseRecord\",inputParam.inputData).then(function(response){var availableReleaseRecord;if(response.data.rtn==\"Success\"){availableReleaseRecord=true;}else{availableReleaseRecord=false;}dispatch({type:DEFAULT_RETURN,payload:{availableReleaseRecord:availableReleaseRecord,loading:false,action:inputParam.action,ncontrolCode:inputParam.inputData.performaction.ncontrolCode}});// else{\n//     dispatch(performAction(inputParam))\n// } \n// dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\n}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);//toast.error(intl.formatMessage({ id: \"IDS_SERVICEERROR\" }));\n}});};}export function getTestResultCorrection(inputParam){return function(dispatch){var transactiontestcode=inputParam.APSelectedTest&&inputParam.APSelectedTest.filter(function(i){return i.ntransactionstatus===25;}).map(function(item){return item.ntransactiontestcode;}).join(\",\");var inputData={userinfo:inputParam.userInfo,ntransactiontestcode:transactiontestcode};if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){dispatch(initRequest(true));rsapi.post(\"approval/getTestResultCorrection\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,openChildModal:true,operation:\"\",screenName:\"IDS_RESULTCORRECTION\"// ncontrolCode:inputParam.ncontrolCode,\n}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{multilingualMsg:\"IDS_SELECTCOMPLETETEST\"}});}};}export function fetchParameterDetails(editParam){return function(dispatch){var additionalInfo=[];var inputParamData={ntransactionresultcode:editParam.primaryKeyValue,userinfo:editParam.userInfo};dispatch(initRequest(true));rsapi.post(\"approval/getReleaseResults\",inputParamData).then(function(response){var selectedResultGrade=[];var paremterResultcode=[];var parameterResults=response.data.ReleaseParameter;var predefDefaultFlag=false;parameterResults.map(function(param,index){selectedResultGrade[index]={ngradecode:param.ngradecode};paremterResultcode[index]=param.ntransactionresultcode;var jsondata=JSON.parse(param.jsondata['value']);if(jsondata.hasOwnProperty('additionalInfo')){additionalInfo[param.ntransactionresultcode]=jsondata['additionalInfo'];}predefDefaultFlag=false;response.data.PredefinedValues&&response.data.PredefinedValues[parameterResults[index].ntransactionresultcode]&&response.data.PredefinedValues[parameterResults[index].ntransactionresultcode].map(function(predefinedvalue){if(!predefDefaultFlag){predefDefaultFlag=true;response.data.PredefinedValues[parameterResults[index].ntransactionresultcode]=constructOptionList(response.data.PredefinedValues[parameterResults[index].ntransactionresultcode]||[],'sresultpredefinedname','sresultpredefinedname',undefined,undefined,undefined).get(\"OptionList\");}});if(parameterResults[index][\"nparametertypecode\"]==1){parameterResults[index][\"resultaccuracycode\"]={\"value\":parameterResults[index][\"nresultaccuracycode\"],\"label\":parameterResults[index][\"sresultaccuracyname\"]};parameterResults[index][\"unitcode\"]={\"value\":parameterResults[index][\"nunitcode\"],\"label\":parameterResults[index][\"sunitname\"]};}param['editable']=false;parameterResults[index]=_objectSpread(_objectSpread({},parameterResults[index]),jsondata);});var ResultAccuracyList=constructOptionList(response.data[\"ResultAccuracy\"]||[],\"nresultaccuracycode\",\"sresultaccuracyname\",undefined,undefined,false);var ResultAccuracy=ResultAccuracyList.get(\"OptionList\");var UnitList=constructOptionList(response.data[\"Unit\"]||[],\"nunitcode\",\"sunitname\",undefined,undefined,false);var Unit=UnitList.get(\"OptionList\");var formFields=[];if(response.data.FormFields&&response.data.FormFields.length>0){var formFieldJSON=JSON.parse(response.data.FormFields[0].jsondata['value']);Object.entries(formFieldJSON).map(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return formFields.push(value);});}//parameterResults[0]= {...parameterResults,nunitcode };\ndispatch({type:DEFAULT_RETURN,payload:{screenName:\"IDS_RESULTCORRECTION\",masterData:_objectSpread(_objectSpread(_objectSpread({},editParam.masterData),response.data),{},{paremterResultcode:paremterResultcode,//,\nselectedResultGrade:selectedResultGrade,ResultAccuracy:ResultAccuracy,Unit:Unit,formFields:formFields}),selectedRecord:{additionalInfo:additionalInfo.length>0?additionalInfo:[],selectedResultGrade:selectedResultGrade,ReleaseParameter:parameterResults//response.data.ReleaseParameter\n},parameterResults:response.data.ReleaseParameter,isParameterInitialRender:true,loading:false,openModal:true,modalShow:true,//operation: \"update\",\nmodalTitle:intl.formatMessage({id:\"IDS_CHANGERESULT\"}),selectedId:editParam.primaryKeyValue,ncontrolcode:editParam.editResultId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});//}\n};}//Ate234 Janakumar ALPD-5123 Test Approval -> To get previously saved filter details when click the filter name\nexport function getTestApprovalFilterDetails(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getTestApprovalFilterDetails\",_objectSpread({},inputParam.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);sortData(masterData,\"\",\"nfilternamecode\");dispatch({type:DEFAULT_RETURN,payload:{nfilternamecode:inputParam.inputData.nfilternamecode,masterData:masterData,loading:false,modalShow:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/ApprovalAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","initRequest","constructOptionList","fillRecordBasedOnCheckBoxSelection","getRecordBasedOnPrimaryKeyName","replaceUpdatedObject","sortData","getSameRecordFromTwoArrays","getSameRecordFromTwoDifferentArrays","filterRecordBasedOnPrimaryKeyName","reArrangeArrays","sortDataByParent","postCRUDOrganiseTransSearch","REPORTTYPE","checkBoxOperation","reportCOAType","transactionStatus","intl","getsubSampleDetail","inputData","isServiceRequired","isParentValue","dispatch","inputParamData","ntype","nflag","nsampletypecode","nregtypecode","nregsubtypecode","npreregno","ntransactionstatus","nsectioncode","ntestcode","napprovalversioncode","napprovalconfigcode","activeTestTab","activeSampleTab","activeSubSampleTab","userinfo","nneedsubsample","masterData","realRegSubTypeValue","ndesigntemplatemappingcode","searchedSubSample","length","SINGLESELECT","nbatchmastercode","activeName","dataStateName","subSample","post","then","response","responseData","data","APSelectedSample","oldSelectedTest","APSelectedTest","AP_TEST","skipInfo","oldSelectedSubSample","APSelectedSubSample","childTabsKey","removeElementFromArray","AP_SUBSAMPLE","AP_SAMPLE","selectedPreregno","searchTestRef","undefined","current","value","searchSubSampleRef","MULTISELECT","wholeSubSampleList","map","b","ntransactionsamplecode","forEach","subsample","index","includes","splice","ApprovalParameter","RegistrationSampleAttachment","QUICKSELECTALL","QUICKSELECTSTATUS","RegistrationTestAttachment","RegistrationAttachment","RegistrationSampleComment","RegistrationTestComment","RegistrationComment","testskip","testtake","subSampleSkip","subSampleTake","oldApprovalParameter","APSelectedSubSamplenew","bool","ResultUsedInstrument","ResultUsedTasks","ApprovalResultChangeHistory","ApprovalHistory","wholeTestList","ntransactiontestcode","test","keepOld","list","dbData","selectedTest","skip","sort","filter","samplePrintHistoryDataState","sampleHistoryDataState","multifilterInfo","multiFilterLoad","searchSampleRef","openChildModal","subsampleskip","type","payload","loading","showFilter","take","activeTabIndex","catch","error","status","message","warn","subsampletake","TestSelected","subSampleSelected","isGrandChildGetRequired","toString","filterSelectedSubSample","x","join","getTestDetail","getTestChildTabDetail","null","wholeSubsampleList","testList","subSampleCommentDataState","subSampleAttachmentDataState","selectedSampleCode","filterTestSameOldSelectedTest","selectedTransactioncode","url","APselectedTest","selectedTestCode","activeTabId","availableReleaseRecord","screenName","RegistrationTestHistory","getSampleChildTabDetail","OrderCodeData","selectedSample","selectedId","formatMessage","id","performAction","inputParam","rtn","updatedSample","respObject","operation","masterStatus","errorCode","loadEsign","showEsign","selectedRecord","postParamList","openModal","updateDecision","getRegistrationType","SampleTypeValue","realApprovalVersionList","realDesignTemplateMappingList","realRegTypeList","realRegSubTypeList","realFilterStatusList","getRegistrationSubType","RegTypeValue","getFilterStatus","RegSubTypeValue","getFilterBasedTest","DesignTemplateMappingValue","FormattedMessage","getApprovalVersion","getApprovalSample","resultDataState","instrumentDataState","materialDataState","taskDataState","documentDataState","resultChangeDataState","testCommentDataState","historyDataState","getStatusCombo","ntransactionresultcode","primaryKeyValue","userInfo","GradeListMap","Grade","get","selectedParamId","ncontrolCode","senforcestatuscomment","parameterComment","getParameterEdit","item","multilingualMsg","validateEsignforApproval","methodUrl","toLowerCase","generateCOAReport","screenData","updateEnforceStatus","previewSampleReport","ndecisionStatus","sample","ndecisionstatus","DRAFT","PASS","nprimarykey","ncoareporttypecode","SAMPLECERTIFICATEPRIVIEW","nreporttypecode","SAMPLEREPORT","sprimarykeyname","ncontrolcode","document","getElementById","setAttribute","filepath","click","SAMPLEWISE","COAREPORT","getEnforceCommentsHistory","selectedParam","idsName","dataField","fetchField","enforceCommentsHistory","reportGenerate","reportName","reportFormat","filePath","elnURL","window","open","info","getSubSampleChildTabDetail","ViewPatientDetails","viewdetails","PatientId","spatientid","getTestBasedCompletedBatch","updatedSubSample","updatedTest","checkReleaseRecord","action","performaction","getTestResultCorrection","transactiontestcode","i","fetchParameterDetails","editParam","additionalInfo","selectedResultGrade","paremterResultcode","parameterResults","ReleaseParameter","predefDefaultFlag","param","ngradecode","jsondata","JSON","parse","hasOwnProperty","PredefinedValues","predefinedvalue","ResultAccuracyList","ResultAccuracy","UnitList","Unit","formFields","FormFields","formFieldJSON","Object","entries","key","push","isParameterInitialRender","modalShow","modalTitle","editResultId","getTestApprovalFilterDetails","nfilternamecode"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { constructOptionList, fillRecordBasedOnCheckBoxSelection, getRecordBasedOnPrimaryKeyName, replaceUpdatedObject, sortData, getSameRecordFromTwoArrays, getSameRecordFromTwoDifferentArrays, filterRecordBasedOnPrimaryKeyName, reArrangeArrays,sortDataByParent } from '../components/CommonScript';\r\nimport { postCRUDOrganiseTransSearch } from './ServiceAction';\r\nimport { REPORTTYPE, checkBoxOperation, reportCOAType, transactionStatus } from '../components/Enumeration';\r\nimport { intl } from '../components/App';\r\n\r\nexport function getsubSampleDetail(inputData, isServiceRequired,isParentValue) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            ntype: 2,\r\n            nflag: 2,\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            nsectioncode: inputData.nsectioncode,\r\n            ntestcode: inputData.ntestcode,\r\n            napprovalversioncode: inputData.napprovalversioncode,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeTestTab,\r\n            activeSubSampleTab: inputData.activeTestTab,\r\n            userinfo: inputData.userinfo,\r\n            nneedsubsample: inputData.masterData.realRegSubTypeValue.nneedsubsample,\r\n            ndesigntemplatemappingcode : inputData.ndesigntemplatemappingcode ? inputData.ndesigntemplatemappingcode : inputData.masterData.ndesigntemplatemappingcode,\r\n            // checkBoxOperation: inputData.masterData.searchedSubSample ?  \r\n            //     inputData.masterData.searchedSubSample.length > 0 ? inputData.checkBoxOperation:3:inputData.checkBoxOperation,\r\n\r\n            checkBoxOperation: inputData.masterData.searchedSubSample ?  \r\n                inputData.masterData.searchedSubSample.length > 0 ? inputData.checkBoxOperation:checkBoxOperation.SINGLESELECT:inputData.checkBoxOperation,   \r\n\r\n           // noParameterget:inputData.checkBoxOperation == 1 ? 3 : 4,\r\n           // noParameterget:inputData.checkBoxOperation == checkBoxOperation.MULTISELECT ? checkBoxOperation.SINGLESELECT : checkBoxOperation.,\r\n            nbatchmastercode:inputData.nbatchmastercode\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        const subSample = inputData.nneedsubsample\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"approval/getApprovalSubSample\", inputParamData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data, APSelectedSample: inputData.APSelectedSample }\r\n                    responseData = sortData(responseData);\r\n                    let oldSelectedTest = inputData.masterData.APSelectedTest ? inputData.masterData.APSelectedTest : []\r\n                    inputData.masterData.APSelectedTest = responseData.APSelectedTest ? responseData.APSelectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                    //inputData.masterData.APSelectedSubSample = responseData.APSelectedSubSample ? responseData.APSelectedSubSample : inputData.masterData.AP_SUBSAMPLE.length > 0 ? [inputData.masterData.AP_SUBSAMPLE[0]] : []\r\n                    let skipInfo = {}\r\n                    let masterData = {}\r\n                    \r\n                    \r\n                    if (subSample) {\r\n                        \r\n                        let oldSelectedSubSample = inputData.masterData.APSelectedSubSample\r\n                        let AP_TEST = inputData.masterData.AP_TEST\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                        if(isParentValue){\r\n                        inputData.masterData.AP_SUBSAMPLE= sortDataByParent(responseData['AP_SUBSAMPLE'],inputData.masterData.AP_SAMPLE, \"npreregno\");\r\n                    }\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            APSelectedSample: inputData.APSelectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            APSelectedSubSample: inputData.masterData.AP_SUBSAMPLE.length > 0 ?\r\n                                [inputData.masterData.AP_SUBSAMPLE[0]] : [],\r\n                        }\r\n                        \r\n                        if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                            inputData.searchTestRef.current.value = \"\"\r\n                            masterData['searchedTests'] = undefined\r\n                        }\r\n                        if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                            inputData.searchSubSampleRef.current.value = \"\";\r\n                            masterData['searchedSubSample'] = undefined\r\n                        }\r\n                        //if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 5) {\r\n                        if (inputData.checkBoxOperation === checkBoxOperation.MULTISELECT) {    \r\n\r\n                            const wholeSubSampleList = masterData.AP_SUBSAMPLE.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((subsample, index) => {\r\n                                if (!wholeSubSampleList.includes(subsample.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n                            if (oldSelectedSubSample.length > 0) {\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    APSelectedSubSample: oldSelectedSubSample\r\n                                }\r\n                            }\r\n                            const APSelectedTest = oldSelectedTest.length >0 ? getSameRecordFromTwoArrays(oldSelectedTest,\r\n                                masterData.APSelectedSubSample, 'npreregno') : responseData.APSelectedTest\r\n                            masterData = {\r\n                                ...masterData,\r\n                                APSelectedTest,\r\n                                AP_TEST,\r\n                                ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter,\r\n                                RegistrationSampleAttachment : responseData.RegistrationSampleAttachment ? responseData.RegistrationSampleAttachment.length > 0  ? responseData.RegistrationSampleAttachment : masterData.RegistrationSampleAttachment: masterData.RegistrationSampleAttachment\r\n                            }\r\n                        }\r\n                       // if(inputData.checkBoxOperation === 7 )\r\n                        if(inputData.checkBoxOperation === checkBoxOperation.QUICKSELECTALL)\r\n                        {\r\n                            masterData = {\r\n                                ...masterData,\r\n                                APSelectedTest:responseData.APSelectedTest,\r\n                                AP_TEST:responseData.AP_TEST,\r\n                                ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter,\r\n                                RegistrationSampleAttachment : responseData.RegistrationSampleAttachment ? responseData.RegistrationSampleAttachment.length > 0  ? responseData.RegistrationSampleAttachment : masterData.RegistrationSampleAttachment: masterData.RegistrationSampleAttachment\r\n                            }\r\n                        }\r\n                        //if (inputData.checkBoxOperation === 3) {\r\n                        if (inputData.checkBoxOperation === checkBoxOperation.SINGLESELECT || inputData.checkBoxOperation === checkBoxOperation.QUICKSELECTSTATUS) {    \r\n                            masterData = {\r\n                                ...masterData,\r\n                                APSelectedTest: masterData.AP_TEST.length > 0 ? [masterData.AP_TEST[0]] : [],\r\n                                ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter :masterData.ApprovalParameter : masterData.ApprovalParameter,\r\n                                RegistrationSampleAttachment : responseData.RegistrationSampleAttachment ? responseData.RegistrationSampleAttachment.length > 0  ? responseData.RegistrationSampleAttachment : []: [],\r\n                                RegistrationTestAttachment : responseData.RegistrationTestAttachment ? responseData.RegistrationTestAttachment.length > 0  ? responseData.RegistrationTestAttachment : []: [],\r\n                                RegistrationAttachment : responseData.RegistrationAttachment ? responseData.RegistrationAttachment.length > 0  ? responseData.RegistrationAttachment : []: [],\r\n                                RegistrationSampleComment : responseData.RegistrationSampleComment ? responseData.RegistrationSampleComment.length > 0  ? responseData.RegistrationSampleComment : []: [],\r\n                                RegistrationTestComment : responseData.RegistrationTestComment ? responseData.RegistrationTestComment.length > 0  ? responseData.RegistrationTestComment : []: [],\r\n                                RegistrationComment : responseData.RegistrationComment ? responseData.RegistrationComment.length > 0  ? responseData.RegistrationComment : []: []\r\n                               \r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                        let { testskip, testtake, subSampleSkip, subSampleTake } = inputData\r\n                        // let bool = false;\r\n                        // Commented bool value because no need to check bool condition to update skipInfo value.\r\n                        // if (inputData.masterData.AP_SUBSAMPLE.length < inputData.subSampleSkip) {\r\n                            testskip = 0;\r\n                            subSampleSkip = 0;\r\n                        //     bool = true\r\n                        // }\r\n                        // if (bool) {\r\n                            skipInfo = { testskip, testtake, subSampleSkip, subSampleTake }\r\n                        // }\r\n                    }\r\n                    else {\r\n                        let oldApprovalParameter = inputData.masterData.ApprovalParameter;\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                        let APSelectedSubSamplenew = []\r\n                        //Added by sonia on 01-06-2024 Jira ID:ALPD-4270 Handling the undefined condition\r\n                        let APSelectedSubSample =[];\r\n                        if(response.data.APSelectedSubSample && response.data.APSelectedSubSample !==undefined){\r\n                            APSelectedSubSample =response.data.APSelectedSubSample;\r\n                        }\r\n\r\n                        APSelectedSubSamplenew=[\r\n                        ...inputData.masterData.APSelectedSubSample,\r\n                        APSelectedSubSample];\r\n\r\n\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            APSelectedSample: inputData.APSelectedSample,\r\n                            //APSelectedSubSample: inputData.masterData.APSelectedSubSample,\r\n                            APSelectedSubSample:APSelectedSubSamplenew,\r\n                            APSelectedTest: inputData.masterData.APSelectedTest || [],\r\n                            selectedPreregno: inputData.npreregno,\r\n                        }\r\n                        if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                            inputData.searchTestRef.current.value = \"\"\r\n                            masterData['searchedTests'] = undefined\r\n                        }\r\n                        // if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                        //     inputData.searchSubSampleRef.current.value = \"\";\r\n                        //     masterData['searchedSubSample'] = undefined\r\n                        // }\r\n                        // if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        //     inputData.searchTestRef.current.value = \"\"\r\n                        //     masterData['searchedTests'] = undefined\r\n                        // }\r\n                        let { testskip, testtake } = inputData\r\n                        let bool = false;\r\n                        if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                            testskip = 0;\r\n                            bool = true\r\n                        }\r\n\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake }\r\n                        }\r\n\r\n                        let ApprovalParameter = [];\r\n                        let ResultUsedInstrument = [];\r\n                        let ResultUsedTasks = [];\r\n                        let RegistrationTestAttachment = [];\r\n                        let ApprovalResultChangeHistory = [];\r\n                        let RegistrationTestComment = [];\r\n                        let ApprovalHistory = [];\r\n\r\n                        //if (inputData.checkBoxOperation === 1) {\r\n                        if (inputData.checkBoxOperation === checkBoxOperation.MULTISELECT) {    \r\n\r\n                            let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                            oldSelectedTest.map((test, index) => {\r\n                                if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                    oldSelectedTest.splice(index, 1)\r\n                                }\r\n                                return null;\r\n                            })\r\n                            let keepOld = false;\r\n                            let ntransactiontestcode;\r\n                            if (oldSelectedTest.length > 0) {\r\n                                keepOld = true\r\n                                inputData.masterData['ApprovalParameter'] = oldApprovalParameter\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    //AP_TEST:responseData.AP_TEST,\r\n                                    ApprovalParameter:oldApprovalParameter,\r\n                                    APSelectedTest: oldSelectedTest\r\n                                }\r\n                            } else {\r\n                                ntransactiontestcode = masterData.APSelectedTest[0].ntransactiontestcode\r\n                            }\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_RESULTS\":\r\n                                    ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_INSTRUMENT\":\r\n                                    ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedInstrument\"\r\n                                    dataStateName = \"instrumentDataState\"\r\n                                    break;\r\n                                case \"IDS_TASK\":\r\n                                    ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedTasks\"\r\n                                    dataStateName = \"taskDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    break;\r\n                                case \"IDS_RESULTCHANGEHISTORY\":\r\n                                    ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalResultChangeHistory\"\r\n                                    dataStateName = \"resultChangeDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTAPPROVALHISTORY\":\r\n                                    ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalHistory\"\r\n                                    dataStateName = \"historyDataState\"\r\n                                    break;\r\n                                default:\r\n                                    ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                       // } else if (inputData.checkBoxOperation === 5) {\r\n                        } else if (inputData.checkBoxOperation === checkBoxOperation.QUICKSELECTSTATUS) {    \r\n                            let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0;\r\n                            let list = [];\r\n                            let dbData = []\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                            }\r\n                           \r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_RESULTS\":\r\n                                    dbData = response.data.ApprovalParameter || []\r\n                                    list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_INSTRUMENT\":\r\n                                    dbData = response.data.ResultUsedInstrument || []\r\n                                    list = [...inputData.masterData.ResultUsedInstrument, ...dbData]\r\n                                    ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_TASK\":\r\n                                    dbData = response.data.ResultUsedTasks || []\r\n                                    list = [...inputData.masterData.ResultUsedTasks, ...dbData]\r\n                                    ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    dbData = response.data.RegistrationTestAttachment || []\r\n                                    list = [...inputData.masterData.RegistrationTestAttachment, ...dbData]\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_RESULTCHANGEHISTORY\":\r\n                                    dbData = response.data.ApprovalResultChangeHistory || []\r\n                                    list = [...inputData.masterData.ApprovalResultChangeHistory, ...dbData]\r\n                                    ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    dbData = response.data.RegistrationTestComment || []\r\n                                    list = [...inputData.masterData.RegistrationTestComment, ...dbData]\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_TESTAPPROVALHISTORY\":\r\n                                    dbData = response.data.ApprovalHistory || []\r\n                                    list = [...inputData.masterData.ApprovalHistory, ...dbData]\r\n                                    ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                default:\r\n                                    dbData = response.data.ApprovalParameter || []\r\n                                    list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                            }\r\n                        } \r\n                       // else if(inputData.checkBoxOperation === 7 )\r\n                        else if(inputData.checkBoxOperation === checkBoxOperation.QUICKSELECTALL)\r\n                        {\r\n                            // masterData = {\r\n                            //     ...masterData,\r\n                            //     APSelectedTest:responseData.APSelectedTest,\r\n                            //     AP_TEST:responseData.AP_TEST,\r\n                            //     ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\r\n                            // }\r\n\r\n                            let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0\r\n                            let list = [];\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                            }\r\n                          \r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_RESULTS\":\r\n                                    list = response.data.ApprovalParameter || []\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_INSTRUMENT\":\r\n                                    list = response.data.ResultUsedInstrument || []\r\n                                    ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedInstrument\"\r\n                                    dataStateName = \"instrumentDataState\"\r\n                                    break;\r\n                                case \"IDS_TASK\":\r\n                                    list = response.data.ResultUsedTasks || []\r\n                                    ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedTasks\"\r\n                                    dataStateName = \"taskDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    list = response.data.RegistrationTestAttachment || []\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    break;\r\n                                case \"IDS_RESULTCHANGEHISTORY\":\r\n                                    list = response.data.ApprovalResultChangeHistory || []\r\n                                    ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalResultChangeHistory\"\r\n                                    dataStateName = \"resultChangeDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    list = response.data.RegistrationTestComment || []\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTAPPROVALHISTORY\":\r\n                                    list = response.data.ApprovalHistory || []\r\n                                    ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalHistory\"\r\n                                    dataStateName = \"historyDataState\"\r\n                                    break;\r\n                                default:\r\n                                    list = response.data.ApprovalParameter?[...inputData.masterData.ApprovalParameter, ...response.data.ApprovalParameter]:\r\n                                    [...inputData.masterData.ApprovalParameter]\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }else {\r\n                            let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0\r\n                            let list = [];\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                            }\r\n                          \r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_RESULTS\":\r\n                                    list = response.data.ApprovalParameter || []\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_INSTRUMENT\":\r\n                                    list = response.data.ResultUsedInstrument || []\r\n                                    ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedInstrument\"\r\n                                    dataStateName = \"instrumentDataState\"\r\n                                    break;\r\n                                case \"IDS_TASK\":\r\n                                    list = response.data.ResultUsedTasks || []\r\n                                    ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedTasks\"\r\n                                    dataStateName = \"taskDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    list = response.data.RegistrationTestAttachment || []\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    break;\r\n                                case \"IDS_RESULTCHANGEHISTORY\":\r\n                                    list = response.data.ApprovalResultChangeHistory || []\r\n                                    ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalResultChangeHistory\"\r\n                                    dataStateName = \"resultChangeDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    list = response.data.RegistrationTestComment || []\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTAPPROVALHISTORY\":\r\n                                    list = response.data.ApprovalHistory || []\r\n                                    ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalHistory\"\r\n                                    dataStateName = \"historyDataState\"\r\n                                    break;\r\n                                default:\r\n                                    list = response.data.ApprovalParameter?[...inputData.masterData.ApprovalParameter, ...response.data.ApprovalParameter]:\r\n                                    [...inputData.masterData.ApprovalParameter]\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n\r\n                        masterData = {\r\n                            ...masterData,\r\n                            ApprovalParameter,\r\n                            ResultUsedInstrument,\r\n                            ResultUsedTasks,\r\n                            RegistrationTestAttachment,\r\n                            ApprovalResultChangeHistory,\r\n                            RegistrationTestComment,\r\n                            ApprovalHistory\r\n                        }\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    skipInfo = {\r\n                        ...skipInfo,\r\n                        samplePrintHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        },\r\n                        sampleHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                    // ALPD-4133 Start of Additional filter info to be Dispatched on Additional filter save - ATE-241\r\n                    let multifilterInfo = {};\r\n                        if (inputData.multiFilterLoad !== undefined) {\r\n                            if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                                inputData.searchSampleRef.current.value = \"\";\r\n                            }\r\n                            if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                                inputData.searchSubSampleRef.current.value = \"\";\r\n                            }\r\n                            if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                                inputData.searchTestRef.current.value = \"\";\r\n                            }\r\n                            multifilterInfo = {\r\n                                multiFilterLoad: inputData.multiFilterLoad,\r\n                                openChildModal:inputData.openChildModal,\r\n                                searchSampleRef: inputData.searchSampleRef,\r\n                                searchSubSampleRef: inputData.searchSubSampleRef,\r\n                                searchTestRef: inputData.searchTestRef,\r\n                                testskip: inputData.testskip,\r\n                                subsampleskip: inputData.subsampleskip,\r\n                                skip: inputData.skip,\r\n                                // filterColumnActive:true\r\n                            };\r\n                        }\r\n                    //  End of Additional filter info ALPD-4133 ATE-241\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeSubSampleTab:inputData.activeSubSampleTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            activeTabIndex: inputData.activeTabIndex,\r\n                            //  Additional Filter INfo to be dispatched on Save - ALPD-4133 ATE-241\r\n                            ...multifilterInfo,\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            let skipInfo = {};\r\n            let bool = false;\r\n            let { testskip, testtake, subsampletake, subsampleskip } = inputData;\r\n            let oldSelectedTest = inputData.masterData.APSelectedTest\r\n            let oldSelectedSubSample = inputData.masterData.APSelectedSubSample\r\n            let TestSelected = [];\r\n            let subSampleSelected = [];\r\n            let ApprovalParameter = [];\r\n            let ResultUsedInstrument = [];\r\n            let ResultUsedTasks = [];\r\n            let RegistrationTestAttachment = [];\r\n            let ApprovalResultChangeHistory = [];\r\n            let RegistrationTestComment = [];\r\n            let ApprovalHistory = [];\r\n            let isGrandChildGetRequired = false;\r\n            if(inputData[\"statusNone\"])\r\n            {\r\n             TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n             subSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            }\r\n            else\r\n            {\r\n                TestSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                subSampleSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            }\r\n          \r\n                if (TestSelected.length > 0) {\r\n                    isGrandChildGetRequired = false;\r\n                } else {\r\n                    isGrandChildGetRequired = true;\r\n                }\r\n\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.APSelectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n        \r\n            if (isGrandChildGetRequired) {\r\n                let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode.toString() : \"\";\r\n                let APSelectedSample = inputData.APSelectedSample;\r\n                let selectedPreregno = inputData.npreregno;\r\n                let APSelectedTest = inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [];\r\n                let APSelectedSubSample = inputData.masterData.AP_SUBSAMPLE\r\n\r\n                if (subSample) {\r\n                    let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.AP_SUBSAMPLE, \"ntransactionsamplecode\");\r\n                    APSelectedSubSample = filterSelectedSubSample.length > 0 ? filterSelectedSubSample : [inputData.masterData.AP_SUBSAMPLE[0]];\r\n                    if (inputData.masterData.AP_SUBSAMPLE.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampletake, subsampleskip }\r\n                    }\r\n\r\n                }\r\n                let masterData = { ...inputData.masterData, APSelectedSample, APSelectedSubSample, APSelectedTest }\r\n                if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n                // inputData = {\r\n                //     ...inputData, childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                //         \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"], ntransactiontestcode, APSelectedSample, selectedPreregno, APSelectedTest,\r\n                //     APSelectedSubSample, checkBoxOperation: 3,masterData,...skipInfo\r\n                // }\r\n\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                        \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"], ntransactiontestcode, APSelectedSample, selectedPreregno, APSelectedTest,\r\n                    APSelectedSubSample, checkBoxOperation: checkBoxOperation.SINGLESELECT,masterData,...skipInfo\r\n                }\r\n\r\n                if (subSample) {\r\n                    if (APSelectedTest.length === 0) {\r\n                        inputData[\"npreregno\"] = APSelectedSubSample.map(x => x.npreregno).join(\",\")\r\n                        inputData[\"ntransactionsamplecode\"] = APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\")\r\n                       // inputData[\"checkBoxOperation\"] = 3\r\n                        inputData[\"checkBoxOperation\"] = checkBoxOperation.SINGLESELECT\r\n                        inputData[\"childTabsKey\"] = [\"AP_TEST\"]\r\n                        dispatch(getTestDetail(inputData, true));\r\n                    } else {\r\n                        dispatch(getTestChildTabDetail(inputData, true));\r\n                    }\r\n                } else {\r\n                    dispatch(getTestChildTabDetail(inputData, true));\r\n                }\r\n\r\n                // dispatch(getTestChildTabDetail(inputData, true));\r\n            } else {\r\n              \r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    APSelectedTest: TestSelected ? TestSelected :inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [],\r\n                    APSelectedSample: inputData.APSelectedSample,\r\n                    APSelectedSubSample: subSampleSelected ? subSampleSelected : inputData.masterData.AP_SUBSAMPLE.length>0 ? [inputData.masterData.AP_SUBSAMPLE[0]]:[]\r\n                }\r\n                let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.map((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                });\r\n\r\n                if(subSample)\r\n                {\r\n                    if (inputData.masterData.AP_SUBSAMPLE.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampletake, subsampleskip }\r\n                    }\r\n    \r\n                }\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"-1\";\r\n                }\r\n                switch (inputData.activeTestTab) {\r\n                    case \"IDS_RESULTS\":\r\n                        ApprovalParameter = keepOld ? inputData[\"statusNone\"] ? getRecordBasedOnPrimaryKeyName (inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].npreregno, \"npreregno\"): filterRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].npreregno, \"npreregno\") : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n\r\n                        break;\r\n                    case \"IDS_INSTRUMENT\":\r\n                        ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_TASK\":\r\n                        ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_TESTATTACHMENTS\":\r\n                        RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_RESULTCHANGEHISTORY\":\r\n                        ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_TESTCOMMENTS\":\r\n                        RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_TESTAPPROVALHISTORY\":\r\n                        ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    default:\r\n                        ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ApprovalParameter,\r\n                            ResultUsedInstrument,\r\n                            ResultUsedTasks,\r\n                            RegistrationTestAttachment,\r\n                            ApprovalResultChangeHistory,\r\n                            RegistrationTestComment,\r\n                            ApprovalHistory,\r\n                            ...skipInfo,\r\n                        },\r\n                        ...skipInfo,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        activeSubSampleTab:inputData.activeSubSampleTab,\r\n                        activeTabIndex: inputData.activeTabIndex\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getTestDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            ntype: 2,\r\n            nflag: 3,\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalversioncode: inputData.napprovalversioncode,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n            nsectioncode: inputData.nsectioncode,\r\n            ntestcode: inputData.ntestcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            activeSubSampleTab: inputData.activeSubSampleTab,\r\n            userinfo: inputData.userinfo,\r\n            ntransactionstatus:inputData.ntransactionstatus,\r\n          //  ndesigntemplatemappingcode : inputData.masterData.ndesigntemplatemappingcode,\r\n            ndesigntemplatemappingcode : inputData.ndesigntemplatemappingcode,\r\n            checkBoxOperation: inputData.checkBoxOperation,\r\n            nneedsubsample: inputData.masterData.realRegSubTypeValue.nneedsubsample,\r\n            nbatchmastercode:inputData.nbatchmastercode\r\n\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        let masterData = {};\r\n        let subSample = inputData.nneedsubsample;\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"approval/getApprovalTest\", inputParamData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    //responseData = sortData(responseData,'descending', 'npreregno')\r\n                    inputData.searchTestRef.current.null = \"\"\r\n                    //inputData.masterData.APSelectedTest = responseData.APSelectedTest ? responseData.APSelectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n\r\n                    let oldSelectedTest = inputData.masterData.APSelectedTest\r\n                    let oldSelectedSubSample = inputData.masterData.APSelectedSubSample\r\n\r\n                    inputData.masterData.APSelectedTest = oldSelectedTest.length > 0 ? oldSelectedTest : responseData.APSelectedTest ? responseData.APSelectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        APSelectedTest: inputData.masterData.APSelectedTest,\r\n                        // APselectedSample: inputData.APSelectedSample,\r\n                        APSelectedSubSample: inputData.APSelectedSubSample,\r\n                        selectedPreregno: inputData.npreregno,\r\n                    }\r\n\r\n                    if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                        inputData.searchSubSampleRef.current.value = \"\";\r\n                        masterData['searchedSubSample'] = undefined\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTests'] = undefined\r\n                    }\r\n\r\n                    let { testskip, testtake, subSampleSkip, subSampleTake } = inputData\r\n                    // let bool = false;\r\n                    // Commented bool value because no need to check bool condition to update skipInfo value.\r\n                    if (inputData.masterData.AP_SUBSAMPLE.length <= inputData.subSampleSkip) {\r\n                        subSampleSkip = 0;\r\n                    }\r\n                    // if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                        testskip = 0;\r\n                        // bool = true\r\n                    // }\r\n                    let skipInfo = {}\r\n                    // if (bool) {\r\n                        skipInfo = { testskip, testtake, subSampleSkip, subSampleTake }\r\n                    // }\r\n\r\n                    let ApprovalParameter = [];\r\n                    let ResultUsedInstrument = [];\r\n                    let ResultUsedTasks = [];\r\n                    let RegistrationTestAttachment = [];\r\n                    let ApprovalResultChangeHistory = [];\r\n                    let RegistrationTestComment = [];\r\n                    let ApprovalHistory = [];\r\n                    let RegistrationSampleComment = [];\r\n                    let RegistrationSampleAttachment = [];\r\n\r\n\r\n\r\n                    //if (inputData.checkBoxOperation === 1) {\r\n                    if (inputData.checkBoxOperation === checkBoxOperation.MULTISELECT) {    \r\n                        let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                        oldSelectedTest.map((test, index) => {\r\n                            if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                oldSelectedTest.splice(index, 1)\r\n                            }\r\n                            return null;\r\n                        })\r\n                        let keepOld = false;\r\n                        let ntransactiontestcode;\r\n                       \r\n                        ntransactiontestcode = masterData.APSelectedTest[0].ntransactiontestcode\r\n                        // }\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedInstrument\"\r\n                                dataStateName = \"instrumentDataState\"\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedTasks\"\r\n                                dataStateName = \"taskDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalResultChangeHistory\"\r\n                                dataStateName = \"resultChangeDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalHistory\"\r\n                                dataStateName = \"historyDataState\"\r\n                                break;\r\n                            default:\r\n                                ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                        if(subSample)\r\n                        {\r\n                            let wholeSubsampleList = masterData.AP_SUBSAMPLE.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.map((test, index) => {\r\n                                if (!wholeSubsampleList.includes(test.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n                                return null;\r\n                            })\r\n                        let keepOld = false;\r\n                        let ntransactionsamplecode;\r\n                       \r\n                        ntransactionsamplecode = masterData.APSelectedSubSample[0].ntransactionsamplecode\r\n                            switch (inputData.activeSubSampleTab) {\r\n                                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                                    RegistrationSampleComment = keepOld ? inputData.masterData.RegistrationSampleComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleComment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                    activeName = \"RegistrationSampleComment\"\r\n                                    dataStateName = \"subSampleCommentDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationSampleAttachment = keepOld ? inputData.masterData.RegistrationSampleAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleAttachment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                    activeName = \"RegistrationSampleAttachment\"\r\n                                    dataStateName = \"subSampleAttachmentDataState\"\r\n                                break;\r\n                            }\r\n                        }\r\n                        \r\n                  //  } else if (inputData.checkBoxOperation === 5) {\r\n                    } else if (inputData.checkBoxOperation === checkBoxOperation.QUICKSELECTSTATUS) {    \r\n                        masterData = {\r\n                            ...masterData,\r\n                            APSelectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                        }\r\n                        let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0;\r\n                        let list = [];\r\n                        let dbData = []\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                dbData = response.data.ApprovalParameter || []\r\n                                list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(dbData, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                dbData = response.data.ResultUsedInstrument || []\r\n                                list = [...inputData.masterData.ResultUsedInstrument, ...dbData]\r\n                                ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                dbData = response.data.ResultUsedTasks || []\r\n                                list = [...inputData.masterData.ResultUsedTasks, ...dbData]\r\n                                ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                dbData = response.data.RegistrationTestAttachment || []\r\n                                list = [...inputData.masterData.RegistrationTestAttachment, ...dbData]\r\n                                RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                dbData = response.data.ApprovalResultChangeHistory || []\r\n                                list = [...inputData.masterData.ApprovalResultChangeHistory, ...dbData]\r\n                                ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                dbData = response.data.RegistrationTestComment || []\r\n                                list = [...inputData.masterData.RegistrationTestComment, ...dbData]\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                dbData = response.data.ApprovalHistory || []\r\n                                list = [...inputData.masterData.ApprovalHistory, ...dbData]\r\n                                ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            default:\r\n                                dbData = response.data.ApprovalParameter || []\r\n                                list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                        }\r\n                   // } else if (inputData.checkBoxOperation === 7) {\r\n                    } else if (inputData.checkBoxOperation === checkBoxOperation.QUICKSELECTALL) {    \r\n                        let testList = reArrangeArrays( inputData.masterData.AP_SUBSAMPLE, responseData.AP_TEST, \"ntransactionsamplecode\");\r\n                        masterData = {\r\n                            ...masterData,\r\n                            APSelectedTest:[testList[0]],\r\n                            AP_TEST: testList,\r\n                            ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\r\n                        }\r\n                        // let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                    \r\n                         let keepOld = false;\r\n                        // let ntransactiontestcode;\r\n                        // if (oldSelectedTest.length > 0) {\r\n                        //     keepOld = true\r\n                        //     masterData = {\r\n                        //         ...masterData,\r\n                        //         APSelectedTest: oldSelectedTest\r\n                        //     }\r\n                        // } else {\r\n                        //     ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\"\r\n                        // }\r\n                        let ntransactiontestcode = testList.length > 0 ? testList[0].ntransactiontestcode : \"\"\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                ApprovalParameter =  getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedInstrument\"\r\n                                dataStateName = \"instrumentDataState\"\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedTasks\"\r\n                                dataStateName = \"taskDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalResultChangeHistory\"\r\n                                dataStateName = \"resultChangeDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalHistory\"\r\n                                dataStateName = \"historyDataState\"\r\n                                break;\r\n                            default:\r\n                                ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n\r\n                    } else {\r\n                        masterData = {\r\n                            ...masterData,\r\n                            APSelectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                        }\r\n                        let ntransactiontestcode = response.data.APSelectedTest ? response.data.APSelectedTest.length > 0 ? \r\n                                response.data.APSelectedTest[0].ntransactiontestcode : inputData.masterData.AP_TEST ? inputData.masterData.AP_TEST.length > 0 ?  inputData.masterData.AP_TEST[0].ntransactiontestcode :-1:-1:-1\r\n                                \r\n                                //inputData.masterData.AP_TEST ? inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode: -1 : -1\r\n                        let list = [];\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                list = response.data.ApprovalParameter || []\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                list = response.data.ResultUsedInstrument || []\r\n                                ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedInstrument\"\r\n                                dataStateName = \"instrumentDataState\"\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                list = response.data.ResultUsedTasks || []\r\n                                ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedTasks\"\r\n                                dataStateName = \"taskDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                list = response.data.RegistrationTestAttachment || []\r\n                                RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                list = response.data.ApprovalResultChangeHistory || []\r\n                                ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalResultChangeHistory\"\r\n                                dataStateName = \"resultChangeDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                list = response.data.RegistrationTestComment || []\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                list = response.data.ApprovalHistory || []\r\n                                ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalHistory\"\r\n                                dataStateName = \"historyDataState\"\r\n                                break;\r\n                            default:\r\n                                list = response.data.ApprovalParameter?[...inputData.masterData.ApprovalParameter, ...response.data.ApprovalParameter]:\r\n                                [...inputData.masterData.ApprovalParameter]\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                    }\r\n                    if(subSample)\r\n                        {\r\n                            let wholeSubsampleList = masterData.AP_SUBSAMPLE.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.map((test, index) => {\r\n                                if (!wholeSubsampleList.includes(test.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n                                return null;\r\n                            })\r\n                        let keepOld = false;\r\n                        let ntransactionsamplecode;\r\n\r\n                        if (oldSelectedSubSample.length > 0) {\r\n                            keepOld = true\r\n                            // masterData = {\r\n                            //     ...masterData,\r\n                            //     //AP_TEST:responseData.AP_TEST,\r\n                            //     ApprovalParameter:oldApprovalParameter,\r\n                            //     APSelectedSubSample: oldSelectedSubSample\r\n                            // }\r\n                        } else {\r\n                            ntransactionsamplecode = masterData.APSelectedSubSample[0].ntransactionsamplecode\r\n                        }\r\n                       \r\n                       // ntransactionsamplecode = masterData.APSelectedSubSample[0].ntransactionsamplecode\r\n                            switch (inputData.activeSubSampleTab) {\r\n                                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                                    RegistrationSampleComment = keepOld ? inputData.masterData.RegistrationSampleComment : getRecordBasedOnPrimaryKeyName(responseData.RegistrationSampleComment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                    activeName = \"RegistrationSampleComment\"\r\n                                    dataStateName = \"subSampleCommentDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationSampleAttachment = keepOld ? inputData.masterData.RegistrationSampleAttachment : getRecordBasedOnPrimaryKeyName(responseData.RegistrationSampleAttachment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                    activeName = \"RegistrationSampleAttachment\"\r\n                                    dataStateName = \"subSampleAttachmentDataState\"\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    masterData = {\r\n                        ...masterData,\r\n                        ApprovalParameter,\r\n                        ResultUsedInstrument,\r\n                        ResultUsedTasks,\r\n                        RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory,\r\n                        RegistrationTestComment,\r\n                        ApprovalHistory,\r\n                        RegistrationSampleComment,\r\n                        RegistrationSampleAttachment\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    skipInfo = {\r\n                        ...skipInfo,\r\n                        samplePrintHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        },\r\n                        sampleHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                    skipInfo = {\r\n                        ...skipInfo,\r\n                        subSampleCommentDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        },\r\n                        subSampleAttachmentDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...masterData,\r\n                                APSelectedSubSample: inputData.APSelectedSubSample,\r\n                                selectedPreregno: inputData.npreregno,\r\n                                selectedSampleCode: inputData.ntransactionsamplecode,\r\n                                activeTestTab: inputData.activeTestTab,\r\n                                activeSampleTab: inputData.activeSampleTab,\r\n                                skip: undefined,\r\n                                take: undefined,\r\n                                ...skipInfo\r\n                            },\r\n                            ...skipInfo,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            let bool = false;\r\n            let skipInfo = {};\r\n            let { testskip, testtake } = inputData;\r\n            let oldSelectedTest = inputData.masterData.APSelectedTest\r\n            let TestSelected = \r\n          inputData[\"statusNone\"] ?\r\n            getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest, inputData.removeElementFromArray[0].ntransactionsamplecode, \"ntransactionsamplecode\"):\r\n            filterRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest, inputData.removeElementFromArray[0].ntransactionsamplecode, \"ntransactionsamplecode\");\r\n            let isGrandChildGetRequired = false;\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = false;\r\n            } else {\r\n                isGrandChildGetRequired = true;\r\n            }\r\n\r\n            let ApprovalParameter = [];\r\n            let ResultUsedInstrument = [];\r\n            let ResultUsedTasks = [];\r\n            let RegistrationTestAttachment = [];\r\n            let ApprovalResultChangeHistory = [];\r\n            let RegistrationTestComment = [];\r\n\r\n            let ApprovalHistory = [];\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.APSelectedSubSample, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                //let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode.toString() : \"\";\r\n                let APSelectedSample = inputData.masterData.APSelectedSample;\r\n                let selectedPreregno = inputData.npreregno;\r\n                //let selectedTest = inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [];\r\n                let APSelectedSubSample = inputData.APSelectedSubSample\r\n                //let APSelectedSubSample = inputData.masterData.APSelectedSubSample\r\n                let filterTestSameOldSelectedTest = getSameRecordFromTwoDifferentArrays(oldSelectedTest, inputData.masterData.AP_TEST, \"ntransactiontestcode\");\r\n                let APSelectedTest = filterTestSameOldSelectedTest.length > 0 ? filterTestSameOldSelectedTest : [inputData.masterData.AP_TEST[0]];\r\n                let ntransactiontestcode = APSelectedTest.length > 0 ? APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n                if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true;\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { testskip, testtake }\r\n                }\r\n                // inputData = {\r\n                //     ...inputData, childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                //         \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"], ntransactiontestcode, APSelectedSample, selectedPreregno, APSelectedTest,\r\n                //     APSelectedSubSample, checkBoxOperation: 3, skipInfo\r\n                // }\r\n\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                        \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"], ntransactiontestcode, APSelectedSample, selectedPreregno, APSelectedTest,\r\n                    APSelectedSubSample, checkBoxOperation: checkBoxOperation.SINGLESELECT, skipInfo\r\n                }\r\n                dispatch(getTestChildTabDetail(inputData, true));\r\n            } \r\n            else {\r\n                    let keepOld = false;\r\n                    let ntransactiontestcode;\r\n\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        APSelectedSubSample: inputData.APSelectedSubSample,\r\n                        selectedTransactioncode: inputData.ntransactionsamplecode,\r\n                        APSelectedTest: TestSelected ? TestSelected : inputData.masterData.AP_TEST.length > 0 ?\r\n                            [inputData.masterData.AP_TEST[0]] : [],\r\n                    }\r\n\r\n                    const wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                    oldSelectedTest.forEach((test, index) => {\r\n                        if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                            oldSelectedTest.splice(index, 1)\r\n                        }\r\n                        return null;\r\n                    });\r\n                    if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                        testskip = 0;\r\n                        bool = true\r\n                    }\r\n                    let skipInfo = {}\r\n                    if (bool) {\r\n                        skipInfo = { testskip, testtake }\r\n                    }\r\n\r\n                    if (oldSelectedTest.length > 0) {\r\n                        keepOld = true\r\n                        masterData = {\r\n                            ...masterData,\r\n                            APSelectedTest: oldSelectedTest,\r\n                        }\r\n                    } else {\r\n                        ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ?\r\n                            inputData.masterData.AP_TEST[0].ntransactiontestcode : \"-1\"\r\n                    }\r\n\r\n\r\n                    switch (inputData.activeTestTab) {\r\n                        case \"IDS_RESULTS\":\r\n                            ApprovalParameter = keepOld ? \r\n                            inputData[\"statusNone\"] ?\r\n                            getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].ntransactionsamplecode,'ntransactionsamplecode'):\r\n                            filterRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].ntransactionsamplecode,'ntransactionsamplecode') : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_INSTRUMENT\":\r\n                            ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_TASK\":\r\n                            ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_TESTATTACHMENTS\":\r\n                            RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_RESULTCHANGEHISTORY\":\r\n                            ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_TESTCOMMENTS\":\r\n                            RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_TESTAPPROVALHISTORY\":\r\n                            ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        default:\r\n                            ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...masterData,\r\n                                ApprovalParameter,\r\n                                ResultUsedInstrument,\r\n                                ResultUsedTasks,\r\n                                RegistrationTestAttachment,\r\n                                ApprovalResultChangeHistory,\r\n                                RegistrationTestComment,\r\n                                ApprovalHistory\r\n                            },\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            ...skipInfo,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        //}\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getTestChildTabDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactiontestcode: inputData.ntransactiontestcode,\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            let { testtake } = inputData;\r\n            let activeName = \"\";\r\n            let dataStateName = \"\";\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_PARAMETERRESULTS\":\r\n                    url = \"registration/getregistrationparameter\"\r\n                    activeName = \"RegistrationParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    url = \"resultentrybysample/getResultUsedInstrument\"\r\n                    activeName = \"ResultUsedInstrument\"\r\n                    dataStateName = \"instrumentDataState\"\r\n                    break;\r\n                case \"IDS_MATERIAL\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    activeName = \"ResultUsedTasks\"\r\n                    dataStateName = \"taskDataState\"\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    url = \"attachment/getTestAttachment\"\r\n                    activeName = \"RegistrationTestAttachment\"\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    url = \"comments/getTestComment\"\r\n                    activeName = \"RegistrationTestComment\"\r\n                    dataStateName = \"testCommentDataState\"\r\n                    break;\r\n                case \"IDS_DOCUMENTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    url = \"approval/getApprovalResultChangeHistory\"\r\n                    activeName = \"ApprovalResultChangeHistory\"\r\n                    dataStateName = \"resultChangeDataState\"\r\n                    break;\r\n                case \"IDS_TESTAPPROVALHISTORY\":\r\n                    url = \"approval/getSampleApprovalHistory\"\r\n                    activeName = \"ApprovalHistory\"\r\n                    dataStateName = \"historyDataState\"\r\n                    break;\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                case \"IDS_TESTHISTORY\":\r\n                    url = \"history/getTestHistory\"\r\n                    activeName = \"RegistrationTestHistory\"\r\n                    dataStateName = \"registrationTestHistoryDataState\"\r\n                    break;\r\n                default:\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                if (isServiceRequired) {\r\n                    rsapi.post(url, inputParamData)\r\n                        .then(response => {\r\n                            let skipInfo = {};\r\n                            let responseData = { ...response.data, APSelectedSubSample: inputData.APSelectedSubSample || inputData.masterData.APSelectedSubSample, selectedTest: inputData.APselectedTest }\r\n                            //responseData = inputData.checkBoxOperation === 7 ?  sortData( response.data,\"descending\",\"npreregno\"):responseData;\r\n                            //sortData( responseData,\"descending\",\"ntransactionsamplecode\")\r\n                            // fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\r\n                            fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\", inputData.removeElementFromArray);\r\n                            let masterData = {\r\n                                ...inputData.masterData,\r\n                                APSelectedSample: inputData.APSelectedSample || inputData.masterData.APSelectedSample,\r\n                                APSelectedSubSample: inputData.APSelectedSubSample || inputData.masterData.APSelectedSubSample,\r\n                                APSelectedTest: inputData.APSelectedTest,\r\n                                selectedPreregno: inputData.npreregno,\r\n                                selectedSampleCode: inputData.ntransactionsamplecode ? inputData.ntransactionsamplecode :inputData.masterData.APSelectedSubSample[0].ntransactionsamplecode ,\r\n                                selectedTestCode: inputData.ntransactiontestcode,\r\n                                activeTabIndex:inputData.activeTabIndex,\r\n                                activeTabId:inputData.activeTabId\r\n                            }\r\n                            if (inputData[dataStateName] && masterData[activeName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                                skipInfo = {\r\n\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        skip: 0,\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                skipInfo = {\r\n                                    ...skipInfo,\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            }\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN, payload: {\r\n                                    masterData,\r\n                                    loading: false,\r\n                                    showFilter: false,\r\n                                    availableReleaseRecord:undefined,\r\n                                    activeTabIndex:inputData.activeTabIndex,\r\n                                    activeTabId:inputData.activeTabId,\r\n                                    activeTestTab: inputData.activeTestTab,\r\n                                    screenName: inputData.screenName,\r\n                                    testtake, testskip: undefined,\r\n                                    ...skipInfo\r\n                                }\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.warn(error.response.data);\r\n                            }\r\n                        })\r\n                } else {\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.APSelectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\", inputData.removeElementFromArray);\r\n                    let skipInfo = {};\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        APSelectedTest: inputData.APSelectedTest,\r\n                        selectedPreregno: inputData.npreregno,\r\n                        selectedSampleCode: inputData.ntransactionsamplecode,\r\n                        selectedTestCode: inputData.ntransactiontestcode,\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            screenName: inputData.screenName,\r\n                            testtake, testskip: undefined,\r\n                            availableReleaseRecord:undefined,\r\n                            ...skipInfo\r\n                        }\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        availableReleaseRecord:undefined,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            let { ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment, ApprovalResultChangeHistory,\r\n                RegistrationTestComment, ApprovalHistory, RegistrationTestHistory } = inputData.masterData\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    ApprovalParameter = [];\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    ResultUsedInstrument = []\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    ResultUsedTasks = []\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    RegistrationTestAttachment = []\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    ApprovalResultChangeHistory = []\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    RegistrationTestComment = []\r\n                    break;\r\n                case \"IDS_APPROVALHISTORY\":\r\n                    ApprovalHistory = []\r\n                    break;\r\n                case \"IDS_TESTHISTORY\":\r\n                    RegistrationTestHistory = []\r\n                    break;\r\n                default:\r\n                    ApprovalParameter = []\r\n                    break;\r\n            }\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData: {\r\n                        ...inputData.masterData,\r\n                        selectedTest: [],\r\n                        ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory, RegistrationTestComment, ApprovalHistory\r\n                    }, loading: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\nexport function getSampleChildTabDetail(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.npreregno.length > 0) {\r\n            let inputParamData = {\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo,\r\n                OrderCodeData: inputData.OrderCodeData ? inputData.OrderCodeData : -1\r\n            }\r\n            let url = null\r\n            switch (inputData.activeSampleTab) {\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                case \"IDS_SAMPLECOMMENTS\":\r\n                    url = \"comments/getSampleComment\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    break;\r\n                case \"IDS_SOURCE\":\r\n                    url = \"registration/getRegistrationSourceCountry\"\r\n                    break;\r\n                case \"IDS_SAMPLEAPPROVALHISTORY\":\r\n                    url = \"approval/getSampleApprovalHistory\"\r\n                    break;\r\n\r\n                case \"IDS_PRINTHISTORY\":\r\n                    url = \"approval/getPrintHistory\"\r\n                    break;\r\n                case \"IDS_REPORTHISTORY\":\r\n                    url = \"approval/getCOAHistory\"\r\n                    break;\r\n                case \"IDS_EXTERNALORDERREPORTS\":\r\n                    url = \"registration/getExternalOrderAttachment\"\r\n                    break;\r\n                default:\r\n                    url = null\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(url, inputParamData)\r\n                    .then(response => {\r\n                        let responseData = { ...response.data }\r\n                        responseData = sortData(responseData)\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData: {\r\n                                    ...inputData.masterData,\r\n                                    ...responseData,\r\n                                    selectedSample: inputData.selectedSample,\r\n                                    selectedTestCode: inputData.ntransactiontestcode,\r\n                                },\r\n                                loading: false,\r\n                                showFilter: false,\r\n                                activeSampleTab: inputData.activeSampleTab,\r\n                                activeTestTab: inputData.activeSampleTab,\r\n                                screenName: inputData.screenName,\r\n                                selectedId: null,\r\n                                activeTabIndex: inputData.activeTabIndex\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            \r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }));\r\n        }\r\n    }\r\n}\r\nexport function performAction(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/performAction\", inputParam.inputData)\r\n            .then(response => {\r\n                if(response.data.rtn === undefined || response.data.rtn===\"Success\"){\r\n                    replaceUpdatedObject(response.data[\"AP_SAMPLE\"], inputParam.masterData.AP_SAMPLE, \"npreregno\");\r\n                    replaceUpdatedObject(response.data[\"AP_SUBSAMPLE\"], inputParam.masterData.AP_SUBSAMPLE, \"ntransactionsamplecode\");\r\n                    replaceUpdatedObject(response.data[\"AP_TEST\"], inputParam.masterData.AP_TEST, \"ntransactiontestcode\");\r\n\r\n                    let AP_SAMPLE = response.data[\"AP_SAMPLE\"];\r\n                    let AP_SUBSAMPLE = response.data[\"AP_SUBSAMPLE\"];\r\n                    let AP_TEST = response.data[\"AP_TEST\"];\r\n\r\n\r\n                    delete response.data[\"AP_SAMPLE\"];\r\n                    delete response.data[\"AP_SUBSAMPLE\"];\r\n                    delete response.data[\"AP_TEST\"];\r\n                    let masterData = {\r\n                        ...inputParam.masterData,\r\n                         ...response.data,\r\n                         APSelectedSample: replaceUpdatedObject(response.data.updatedSample, inputParam.masterData.APSelectedSample, \"npreregno\"),\r\n                          APSelectedSubSample: replaceUpdatedObject(AP_SUBSAMPLE, inputParam.masterData.APSelectedSubSample, \"ntransactionsamplecode\"),\r\n                         //APSelectedSubSample: getSameRecordFromTwoArrays(response.data.updatedSubSample, inputParam.masterData.APSelectedSubSample, \"ntransactionsamplecode\", undefined),\r\n                         APSelectedTest: replaceUpdatedObject(AP_TEST, inputParam.masterData.APSelectedTest, \"ntransactiontestcode\"),\r\n                        //APSelectedTest: getSameRecordFromTwoArrays(response.data.updatedTest, inputParam.masterData.APSelectedTest, \"ntransactiontestcode\", undefined),\r\n                    }\r\n                // let masterData = {\r\n                //     ...inputParam.masterData,\r\n                //     ...response.data,\r\n                //     AP_SAMPLE: replaceUpdatedObject(response.data.updatedSample, inputParam.masterData.AP_SAMPLE, 'npreregno'),\r\n                //     AP_SUBSAMPLE: replaceUpdatedObject(response.data.updatedSubSample, inputParam.masterData.AP_SUBSAMPLE, 'ntransactionsamplecode'),\r\n                //     AP_TEST: replaceUpdatedObject(response.data.updatedTest, inputParam.masterData.AP_TEST, 'ntransactiontestcode')\r\n                // }\r\n                // dispatch({type: DEFAULT_RETURN, payload:{\r\n                // masterData:{\r\n                //     ...inputParam.inputData.masterData,\r\n                //     ...response.data, \r\n                //     AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam   .inputData.masterData.AP_SAMPLE,'npreregno'),\r\n                //     AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.inputData.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\r\n                //     AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.inputData.masterData.AP_TEST,'ntransactiontestcode')\r\n                // },\r\n                //     loading:false ,\r\n                //     loadEsign:false,\r\n                //     openChildModal:false                     \r\n                // }}) \r\n                let respObject = {\r\n                    masterData,\r\n                    inputParam,\r\n                    openChildModal: false,\r\n                    operation: \"dynamic\",\r\n                    masterStatus: \"\",\r\n                    errorCode: undefined,\r\n                    loadEsign: false,\r\n                    showEsign: false,\r\n                    selectedRecord: {},\r\n                    loading: false,\r\n                    availableReleaseRecord:undefined                }\r\n\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n\r\n\r\n                \r\n            }else{\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false\r\n                    }\r\n                });\r\n                //toast.warn(response.data.rtn);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    //toast.error(intl.formatMessage({ id: \"IDS_SERVICEERROR\" }));\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function updateDecision(inputParam) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/updateDecision\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                // dispatch({type: DEFAULT_RETURN, payload:{\r\n                //     masterData:{\r\n                //         ...inputParam.masterData,\r\n                //         ...responseData, \r\n                //         AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),\r\n                //         AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\r\n                //         AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')\r\n\r\n                //     },\r\n                //     loading:false                      \r\n                // }}) \r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                    AP_SAMPLE: replaceUpdatedObject(response.data.AP_SAMPLE, inputParam.masterData.AP_SAMPLE, 'npreregno'),\r\n                    AP_SUBSAMPLE: replaceUpdatedObject(response.data.AP_SUBSAMPLE, inputParam.masterData.AP_SUBSAMPLE, 'ntransactionsamplecode'),\r\n                    // ALPD-5676    Added AP_TEST by Vishakh to replace the updated test in front end (08-04-2025)\r\n                    AP_TEST: replaceUpdatedObject(response.data.AP_TEST, inputParam.masterData.AP_TEST, 'ntransactiontestcode')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    inputParam,\r\n                    openChildModal: false,\r\n                    operation: \"dynamic\",\r\n                    masterStatus: \"\",\r\n                    errorCode: undefined,\r\n                    loadEsign: false,\r\n                    showEsign: false,\r\n                    selectedRecord: {},\r\n                    loading: false,\r\n                    // ALPD-5676    Added skip and take for test and subsample by Vishakh to update in store (08-04-2025)\r\n                    testskip: inputParam.testskip,\r\n                    testtake: inputParam.testtake, \r\n                    subSampleSkip: inputParam.subSampleSkip, \r\n                    subSampleTake: inputParam.subSampleTake\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRegistrationType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getRegistrationType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            SampleTypeValue: inputData.SampleTypeValue,\r\n                            realApprovalVersionList:inputData.realApprovalVersionList,\r\n                            realDesignTemplateMappingList:inputData.realDesignTemplateMappingList,\r\n                            realRegTypeList:inputData.realRegTypeList,\r\n                            realRegSubTypeList :inputData.realRegSubTypeList,\r\n                            realFilterStatusList:inputData.realFilterStatusList\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRegistrationSubType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getRegistrationSubType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegTypeValue: inputData.RegTypeValue,\r\n                            realApprovalVersionList:inputData.realApprovalVersionList,\r\n                            realDesignTemplateMappingList:inputData.realDesignTemplateMappingList,\r\n                            realRegTypeList:inputData.realRegTypeList,\r\n                            realRegSubTypeList :inputData.realRegSubTypeList,\r\n                            realFilterStatusList:inputData.realFilterStatusList\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getFilterStatus(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getApproveConfigVersionRegTemplateDesign\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegSubTypeValue: inputData.RegSubTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getFilterBasedTest(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.napprovalversioncode) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approval/getFilterBasedTest\", inputData)\r\n                .then(response => {\r\n\r\n\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...inputData.masterData,\r\n                                ...responseData,\r\n                                RegSubTypeValue: inputData.RegSubTypeValue,\r\n                                ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,\r\n                                DesignTemplateMappingValue:inputData.DesignTemplateMappingValue\r\n                            },\r\n                            loading: false\r\n                        }\r\n                    })\r\n                    if (response.data.rtn) {\r\n                        toast.warn(response.data.rtn);\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(\"Please Select All the Values in Filter\");\r\n            toast.warn(intl.FormattedMessage({\r\n                id: \"IDS_PLSSELECTALLVALUESINFILTER\"\r\n            }));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getApprovalVersion(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getApprovalVersion\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n              //  responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...responseData,\r\n                            realApprovalVersionList:inputParam.inputData.realApprovalVersionList,\r\n                            realDesignTemplateMappingList:inputParam.inputData.realDesignTemplateMappingList,\r\n                            realRegTypeList:inputParam.inputData.realRegTypeList,\r\n                            realRegSubTypeList :inputParam.inputData.realRegSubTypeList,\r\n                            realFilterStatusList:inputParam.inputData.realFilterStatusList\r\n                            // fromDate: inputParam.inputData.dfrom,\r\n                            // toDate: inputParam.inputData.dto,\r\n                        },\r\n                        loading: false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovalSample(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getApprovalSample\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                // responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchSampleRef !== undefined && inputParam.searchSampleRef.current !== null) {\r\n                    inputParam.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputParam.searchSubSampleRef !== undefined && inputParam.searchSubSampleRef.current !== null) {\r\n                    inputParam.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputParam.searchTestRef !== undefined && inputParam.searchTestRef.current !== null) {\r\n                    inputParam.searchTestRef.current.value = \"\"\r\n                    // masterData['searchedTest'] = undefined\r\n                    masterData['searchedTests'] = undefined\r\n\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        take: inputParam.take,\r\n                        testskip: 0,\r\n                        testtake: inputParam.testtake,\r\n                        //ALPD-5193--Added byNeeraj  Test Approval screen -> Records are disappeared in Sub-sample column in specific scenario. ( Both Product & French )\r\n                        //start\r\n                        subSampleSkip:0,\r\n                        subSampleTake:inputParam.subSampleTake,\r\n                        //end\r\n                        resultDataState: { ...inputParam.resultDataState, sort: undefined, filter: undefined },\r\n                        instrumentDataState: { ...inputParam.instrumentDataState, sort: undefined, filter: undefined },\r\n                        materialDataState: { ...inputParam.materialDataState, sort: undefined, filter: undefined },\r\n                        taskDataState: { ...inputParam.taskDataState, sort: undefined, filter: undefined },\r\n                        documentDataState: { ...inputParam.documentDataState, sort: undefined, filter: undefined },\r\n                        resultChangeDataState: { ...inputParam.resultChangeDataState, sort: undefined, filter: undefined },\r\n                        testCommentDataState: { ...inputParam.testCommentDataState, sort: undefined, filter: undefined },\r\n                        historyDataState: { ...inputParam.historyDataState, sort: undefined, filter: undefined },\r\n                        samplePrintHistoryDataState: { ...inputParam.samplePrintHistoryDataState, sort: undefined, filter: undefined },\r\n                        sampleHistoryDataState: { ...inputParam.sampleHistoryDataState, sort: undefined, filter: undefined }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getStatusCombo(inputParam) {\r\n    return function (dispatch) {\r\n        let inputData = {\r\n            ntransactionresultcode: inputParam.primaryKeyValue,\r\n            userinfo: inputParam.userInfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getStatusCombo\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                //responseData = sortData(responseData)\r\n                const GradeListMap = constructOptionList(response.data.Grade || [], \"ngradecode\", \"sgradename\", 'ascending', 'ngradecode', false);\r\n                let Grade = GradeListMap.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...responseData,\r\n                            Grade,\r\n                            selectedParamId: inputParam.primaryKeyValue\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        openChildModal: true,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord: {\r\n                            senforcestatuscomment: response.data.parameterComment && response.data.parameterComment.senforcestatuscomment,\r\n                            ntransactionresultcode: response.data.parameterComment && response.data.parameterComment.ntransactionresultcode,\r\n                            ntransactiontestcode: response.data.parameterComment && response.data.parameterComment.ntransactiontestcode\r\n                        },\r\n                        operation: \"enforce\",\r\n                        screenName: \"IDS_STATUS\"\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getParameterEdit(inputParam) {\r\n    return function (dispatch) {\r\n        let inputData = {\r\n            ntransactiontestcode: inputParam.selectedTest && inputParam.selectedTest.map(item => item.ntransactiontestcode).join(\",\"),\r\n            userinfo: inputParam.userInfo\r\n        }\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approval/getEditParameter\", inputData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            ...responseData,\r\n                            loading: false,\r\n                            openChildModal: true,\r\n                            operation: \"update\",\r\n                            screenName: \"IDS_APPROVALPARAMETER\"\r\n                            // ncontrolCode:inputParam.ncontrolCode,\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    multilingualMsg: \"IDS_SELECTTEST\",\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nexport function validateEsignforApproval(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n                    if (inputParam.operation === 'dynamic') {\r\n                        const methodUrl = \"performaction\"\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                        if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                            inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n                        }\r\n                        dispatch(performAction(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\r\n                    } else if (inputParam.operation === 'reportgeneration') {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esignreason\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"agree\"];\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"reporparam\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n                        dispatch(generateCOAReport(inputParam[\"screenData\"][\"inputParam\"]['reporparam']))\r\n                    }\r\n                    else if (inputParam.operation === 'decision') {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esignreason\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"agree\"];\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n                        dispatch(updateDecision(inputParam[\"screenData\"][\"inputParam\"]))\r\n                    }\r\n                    else if (inputParam.operation === 'enforce') {\r\n                        const methodUrl = inputParam.screenData.inputParam.methodUrl;\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n    \r\n                        if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                            inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"]\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"]\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"]\r\n                        }\r\n                        dispatch(updateEnforceStatus(inputParam[\"screenData\"].inputParam))\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport function previewSampleReport(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        let ndecisionStatus = inputParam.sample.ndecisionstatus;\r\n        if (inputParam.sample.ndecisionstatus === undefined || inputParam.sample.ndecisionstatus === transactionStatus.DRAFT) {\r\n            ndecisionStatus = transactionStatus.PASS;\r\n        }\r\n        const inputData = {\r\n            ndecisionstatus: ndecisionStatus,\r\n            userinfo: inputParam.userinfo,\r\n            nprimarykey: inputParam.sample.npreregno,\r\n            ncoareporttypecode: reportCOAType.SAMPLECERTIFICATEPRIVIEW,\r\n            nreporttypecode: REPORTTYPE.SAMPLEREPORT,\r\n            sprimarykeyname: \"npreregno\",\r\n            ncontrolcode: inputParam.ncontrolCode,\r\n            nregtypecode: inputParam.sample.nregtypecode,\r\n            nregsubtypecode: inputParam.sample.nregsubtypecode,\r\n            npreregno: inputParam.sample.npreregno\r\n        }\r\n        rsapi.post(\"approval/previewSampleReport\", inputData)\r\n            .then(response => {\r\n\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openChildModal: false, loadEsign: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function generateCOAReport(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const inputData = {\r\n            npreregno: inputParam.sample.npreregno,\r\n            nsectioncode: inputParam.nsectioncode || -1,\r\n            userinfo: inputParam.userinfo,\r\n            nprimarykey: inputParam.sample.npreregno,\r\n            ncoareporttypecode: reportCOAType.SAMPLEWISE,\r\n            nreporttypecode: REPORTTYPE.COAREPORT,\r\n            sprimarykeyname: \"npreregno\",\r\n            ncontrolcode: inputParam.ncontrolCode,\r\n            nregtypecode: inputParam.nregtypecode,\r\n            nregsubtypecode: inputParam.nregsubtypecode\r\n        }\r\n        rsapi.post(\"approval/generateCOAReport\", inputData)\r\n            .then(response => {\r\n\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openChildModal: false, selectedRecord: {}, loadEsign: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getEnforceCommentsHistory(selectedParam, masterData, userInfo,idsName,dataField) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getEnforceCommentsHistory\", {\r\n            ntransactionresultcode: selectedParam.ntransactionresultcode,\r\n            userinfo: userInfo,\r\n            fetchField:dataField\r\n        })\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    masterData = { ...masterData, enforceCommentsHistory: response.data }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            masterData,\r\n                            openChildModal: true,\r\n                            operation: \"view\",\r\n                            screenName: \"IDS_ENFORCECOMMENTHISTORY\",\r\n                            idsName:idsName,\r\n                            dataField:dataField\r\n                        }\r\n                    })\r\n                } else {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, multilingualMsg: \"IDS_NOPREVIOUSCOMMENTSFOUND\" } })\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function reportGenerate(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const inputData = {\r\n            npreregno: inputParam.sample.npreregno,\r\n            userinfo: inputParam.userinfo,\r\n            nregsubtypecode: inputParam.sample.nregsubtypecode,\r\n            reportName:\"RJ_Testwise_Report_QRCode\",\r\n            reportFormat:\"pdf\"\r\n           \r\n        }\r\n        rsapi.post(\"reportjasper/generateCOAReport\", inputData)\r\n            .then(response => {\r\n\r\n                if (response.data.rtn === \"Success\") {\r\n\r\n                    if (response.data.filePath) {\r\n                       // let user = response;\r\n                        let elnURL = response.data.filePath;\r\n                        window.open(elnURL, '_blank');\r\n                    } else {\r\n                        toast.info(intl.FormattedMessage({\r\n                            id: \"IDS_ELNUIURLNOTAVAILABLE\"\r\n                        }))\r\n                    }\r\n\r\n                    // document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filePath);\r\n                    // document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openChildModal: false, selectedRecord: {}, loadEsign: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getSubSampleChildTabDetail(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactionsamplecode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            switch (inputData.activeSubSampleTab) {\r\n                case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSubSampleAttachment\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                    url = \"comments/getSubSampleComment\"\r\n                    break;\r\n                default:\r\n                    url = null\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(url, inputParamData)\r\n                    .then(response => {\r\n                        let responseData = { ...response.data }\r\n                        responseData = sortData(responseData)\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData: {\r\n                                    ...inputData.masterData,\r\n                                    ...responseData,\r\n                                    APSelectedSubSample: inputData.APSelectedSubSample,\r\n                                   // selectedTestCode: inputData.ntransactiontestcode,\r\n                                },\r\n                                loading: false,\r\n                                showFilter: false,\r\n                                activeTestTab: inputData.activeSubSampleTab,\r\n                                screenName: inputData.screenName\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            APSelectedSample: inputData.APSelectedSample\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            //toast.warn(\"Please Select a Sample\");\r\n            toast.warn(intl.FormattedMessage({\r\n                id: \"IDS_PLSSELECTASAMPLE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function ViewPatientDetails(masterData, screenName, userInfo, viewdetails) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const selectedRecord={\r\n            ntestcode:viewdetails.test.ntestcode\r\n        }\r\n        rsapi.post(\"approval/getSampleViewDetails\", { selectedRecord, PatientId:viewdetails.test.spatientid, npreregno: viewdetails.test.npreregno, userinfo: userInfo })\r\n            .then(response => {\r\n                masterData['AuditModifiedComments'] = [];\r\n                masterData['AuditModifiedComments'] = response.data['AuditModifiedComments']\r\n                masterData['CurrentResult'] = [];\r\n                masterData['CurrentResult'] = response.data['CurrentResult']\r\n                masterData['viewdetails'] = [];\r\n                masterData['viewdetails'] = response.data['viewdetails'][0]\r\n                //sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        screenName: \"IDS_PREVIOUSRESULTVIEW\",\r\n                        operation: \"\",\r\n                        loading: false,\r\n                        openChildModal: true,\r\n\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function  getTestBasedCompletedBatch (inputData){\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getTestBasedOnCompletedBatch\", inputData)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...response.data,\r\n                           // defaultTestvalues: inputData.defaultTestvalues //,\r\n                            // defaultRegistrationSubType: inputData.masterData.defaultRegistrationSubType,//inputData.defaultRegistrationSubType,\r\n                            // ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n                            // DesignTemplateMappingValue: inputData.DesignTemplateMappingValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function updateEnforceStatus(inputParam) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/updateEnforceStatus\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                replaceUpdatedObject(responseData[\"AP_SAMPLE\"], inputParam.masterData.AP_SAMPLE, \"npreregno\");\r\n                replaceUpdatedObject(responseData[\"AP_SUBSAMPLE\"], inputParam.masterData.AP_SUBSAMPLE, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(responseData[\"AP_TEST\"], inputParam.masterData.AP_TEST, \"ntransactiontestcode\");\r\n\r\n                delete responseData[\"AP_SAMPLE\"];\r\n                delete responseData[\"AP_SUBSAMPLE\"];\r\n                delete responseData[\"AP_TEST\"];\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                    APSelectedSample: replaceUpdatedObject(responseData.updatedSample, inputParam.masterData.APSelectedSample, \"npreregno\"),\r\n                    APSelectedSubSample: replaceUpdatedObject(responseData.updatedSubSample, inputParam.masterData.APSelectedSubSample, 'ntransactionsamplecode'),\r\n                    APSelectedTest: replaceUpdatedObject(responseData.updatedTest, inputParam.masterData.APSelectedTest, 'ntransactiontestcode')\r\n\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    inputParam,\r\n                    openChildModal: false,\r\n                    operation: \"update\",\r\n                    masterStatus: \"\",\r\n                    errorCode: undefined,\r\n                    loadEsign: false,\r\n                    showEsign: false,\r\n                    selectedRecord: {},\r\n                    loading: false\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function checkReleaseRecord(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/checkReleaseRecord\", inputParam.inputData)\r\n            .then(response => {\r\n                let availableReleaseRecord;\r\n                if(response.data.rtn==\"Success\"){\r\n                    availableReleaseRecord = true\r\n                }else{\r\n                    availableReleaseRecord = false\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        availableReleaseRecord,\r\n                        loading: false,\r\n                        action:inputParam.action,\r\n                        ncontrolCode:inputParam.inputData.performaction.ncontrolCode\r\n                    }\r\n                });\r\n                // else{\r\n                //     dispatch(performAction(inputParam))\r\n                // } \r\n\r\n               // dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n\r\n              \r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    //toast.error(intl.formatMessage({ id: \"IDS_SERVICEERROR\" }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getTestResultCorrection(inputParam) {\r\n    return function (dispatch) {\r\n        let transactiontestcode= inputParam.APSelectedTest && inputParam.APSelectedTest.filter(i => i.ntransactionstatus===25).map(item => item.ntransactiontestcode).join(\",\");\r\n        let inputData = {\r\n            userinfo: inputParam.userInfo,\r\n            ntransactiontestcode:transactiontestcode\r\n        }\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approval/getTestResultCorrection\", inputData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    let masterData = {\r\n                        ...inputParam.masterData,\r\n                        ...response.data\r\n                                }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            openChildModal: true,\r\n                            operation: \"\",\r\n                            screenName: \"IDS_RESULTCORRECTION\"\r\n                            // ncontrolCode:inputParam.ncontrolCode,\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    multilingualMsg: \"IDS_SELECTCOMPLETETEST\",\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function fetchParameterDetails(editParam) {\r\n    return function (dispatch) {\r\n        let additionalInfo = [];\r\n\r\n        let inputParamData = {\r\n            ntransactionresultcode: editParam.primaryKeyValue,\r\n            userinfo: editParam.userInfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getReleaseResults\", inputParamData)\r\n            .then(response => {\r\n                let selectedResultGrade = [];\r\n                let paremterResultcode = [];\r\n                const parameterResults = response.data.ReleaseParameter\r\n                let predefDefaultFlag = false;\r\n                parameterResults.map((param, index) => {\r\n                    selectedResultGrade[index] = { ngradecode: param.ngradecode };\r\n                    paremterResultcode[index] = param.ntransactionresultcode;\r\n                    let jsondata = JSON.parse(param.jsondata['value'])\r\n                    if (jsondata.hasOwnProperty('additionalInfo')) {\r\n                        additionalInfo[param.ntransactionresultcode] = jsondata['additionalInfo']\r\n                    }\r\n                    predefDefaultFlag = false;\r\n                    (response.data.PredefinedValues && response.data.PredefinedValues[parameterResults[index].ntransactionresultcode]) &&\r\n                        response.data.PredefinedValues[parameterResults[index].ntransactionresultcode].map(predefinedvalue => {\r\n                            if (!predefDefaultFlag) {\r\n                                predefDefaultFlag = true;\r\n                                response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] = constructOptionList(response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] || [], 'sresultpredefinedname', 'sresultpredefinedname', undefined,\r\n                                    undefined, undefined).get(\"OptionList\");\r\n                            }\r\n                        });\r\n                        if( parameterResults[index][\"nparametertypecode\"] ==1) {\r\n                            parameterResults[index][\"resultaccuracycode\"] ={\r\n                                \"value\": parameterResults[index][\"nresultaccuracycode\"],\r\n                                \"label\": parameterResults[index][\"sresultaccuracyname\"],\r\n                            };\r\n\r\n                            parameterResults[index][\"unitcode\"] ={\r\n                                \"value\": parameterResults[index][\"nunitcode\"],\r\n                                \"label\": parameterResults[index][\"sunitname\"],\r\n                            };\r\n                        }\r\n                    param['editable'] = false;\r\n                    parameterResults[index]={...parameterResults[index],...jsondata}\r\n                    });\r\n\r\n                    const ResultAccuracyList = constructOptionList(response.data[\"ResultAccuracy\"] || [], \"nresultaccuracycode\",\"sresultaccuracyname\", undefined, undefined, false);   \r\n                    const ResultAccuracy = ResultAccuracyList.get(\"OptionList\");\r\n\r\n                    const UnitList = constructOptionList(response.data[\"Unit\"] || [], \"nunitcode\",\"sunitname\", undefined, undefined, false);   \r\n                    const Unit = UnitList.get(\"OptionList\");\r\n                    let formFields=[];\r\n                    if(response.data.FormFields && response.data.FormFields.length>0){\r\n                    let formFieldJSON=JSON.parse(response.data.FormFields[0].jsondata['value'])\r\n                    Object.entries(formFieldJSON).map(([key, value])=>(\r\n                        formFields.push(value)\r\n                    ))\r\n                }\r\n                     //parameterResults[0]= {...parameterResults,nunitcode };\r\n      \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        screenName: \"IDS_RESULTCORRECTION\",\r\n                        masterData: {\r\n                            ...editParam.masterData,\r\n                            ...response.data,\r\n                            paremterResultcode,//,\r\n                            selectedResultGrade,\r\n                            ResultAccuracy,\r\n                            Unit,formFields\r\n\r\n                        },\r\n                        selectedRecord: {\r\n                            additionalInfo: additionalInfo.length > 0 ? additionalInfo : [],\r\n                            selectedResultGrade: selectedResultGrade,\r\n                            ReleaseParameter: parameterResults//response.data.ReleaseParameter\r\n\r\n                        },\r\n                        parameterResults: response.data.ReleaseParameter,\r\n                        isParameterInitialRender: true,\r\n                        loading: false,\r\n                        openModal: true,\r\n                        modalShow: true,\r\n                        //operation: \"update\",\r\n                        modalTitle: intl.formatMessage({ id: \"IDS_CHANGERESULT\" }),\r\n                        selectedId: editParam.primaryKeyValue,\r\n                        ncontrolcode: editParam.editResultId\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        //}\r\n\r\n\r\n    }\r\n\r\n}\r\n    //Ate234 Janakumar ALPD-5123 Test Approval -> To get previously saved filter details when click the filter name\r\nexport function getTestApprovalFilterDetails(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getTestApprovalFilterDetails\", { ...inputParam.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...response.data\r\n                }\r\n                         \r\n                sortData(masterData,\"\",\"nfilternamecode\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        nfilternamecode:inputParam.inputData.nfilternamecode,\r\n                        masterData,\r\n                        loading: false,                \r\n                        modalShow:false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}