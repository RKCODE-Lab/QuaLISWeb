{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\credentialmanagement\\\\MISRights.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport MISRightsTab from './MISRightsTab';\nimport { getAlertRightsComboDataService, getMISRightsDetail, callService, crudMaster, getReportRightsComboDataService, getDashBoardRightsComboDataService, filterColumnData, validateEsignCredential, updateStore, getHomeRightsComboDataService, getAlertHomeRightsComboDataService } from '../../actions';\nimport { getControlMap } from '../../components/CommonScript';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { ContentPanel } from '../../components/App.styles';\nimport ListMaster from '../../components/list-master/list-master.component';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass MISRights extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.reloadData = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"MISRights\",\n        displayName: \"MIS Rights\",\n        userInfo: this.props.Login.userInfo // displayName: this.props.Login.inputParam.displayName\n\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.formRef = React.createRef(); // this.closeModal = this.closeModal.bind(this);\n\n    this.extractedColumnList = [];\n    this.userColumnList = [];\n    this.fieldList = [];\n    this.state = {\n      availableDatas: \"\",\n      availableList: \"\",\n      dataSource: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      isOpen: false,\n      userRoleControlRights: [],\n      controlMap: new Map()\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"suserrolename\"];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    const filterParam = {\n      inputListName: \"UserRole\",\n      selectedObject: \"SelectedMIS\",\n      primaryKeyField: \"nuserrolecode\",\n      fetchUrl: \"misrights/getMISRights\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-fixed-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_USERROLE\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.UserRole,\n      getMasterDetail: MISRights => this.props.getMISRightsDetail(MISRights, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.SelectedMIS,\n      primaryKeyField: \"nuserrolecode\",\n      mainField: \"suserrolename\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      isMultiSelecct: false,\n      hidePaging: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.UserRole && this.props.Login.masterData.UserRole.length > 0 && this.props.Login.masterData.SelectedMIS ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }, this.props.Login.masterData.SelectedMIS.suserrolename)), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MISRightsTab, {\n      formatMessage: this.props.intl.formatMessage,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      userInfo: this.props.Login.userInfo,\n      masterData: this.props.Login.masterData,\n      crudMaster: this.props.crudMaster,\n      errorCode: this.props.Login.errorCode,\n      masterStatus: this.props.Login.masterStatus,\n      openChildModal: this.props.Login.openChildModal,\n      DashBoardType: this.props.Login.DashBoardType,\n      Reports: this.props.Login.Reports,\n      Alert: this.props.Login.Alert,\n      HomeRights: this.props.Login.HomeRights,\n      AlertHomeRights: this.props.Login.AlertHomeRights,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.props.Login.selectedRecord,\n      getDashBoardRightsComboDataService: this.props.getDashBoardRightsComboDataService,\n      getReportRightsComboDataService: this.props.getReportRightsComboDataService,\n      getAlertRightsComboDataService: this.props.getAlertRightsComboDataService,\n      getHomeRightsComboDataService: this.props.getHomeRightsComboDataService,\n      getAlertHomeRightsComboDataService: this.props.getAlertHomeRightsComboDataService,\n      ncontrolCode: this.props.Login.ncontrolCode,\n      userRoleControlRights: this.state.userRoleControlRights,\n      esignRights: this.props.Login.userRoleControlRights,\n      screenData: this.props.Login.screenData,\n      validateEsignCredential: this.props.validateEsignCredential,\n      loadEsign: this.props.Login.loadEsign,\n      controlMap: this.state.controlMap,\n      showAccordian: this.state.showAccordian //selectedId={this.props.Login.selectedId}\n      ,\n      dataState: this.props.Login.dataState,\n      onTabChange: this.onTabChange,\n      searchRef: this.searchRef,\n      updateDataState: this.props.Login.masterData.updateDataState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }))) : \"\"))))))));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        this.setState({\n          userRoleControlRights,\n          controlMap\n        });\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  getAlertRightsComboDataService,\n  getMISRightsDetail,\n  callService,\n  filterColumnData,\n  getReportRightsComboDataService,\n  getDashBoardRightsComboDataService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getHomeRightsComboDataService,\n  getAlertHomeRightsComboDataService\n})(injectIntl(MISRights));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/credentialmanagement/MISRights.jsx"],"names":["React","connect","injectIntl","Row","Col","Card","toast","MISRightsTab","getAlertRightsComboDataService","getMISRightsDetail","callService","crudMaster","getReportRightsComboDataService","getDashBoardRightsComboDataService","filterColumnData","validateEsignCredential","updateStore","getHomeRightsComboDataService","getAlertHomeRightsComboDataService","getControlMap","DEFAULT_RETURN","ContentPanel","ListMaster","mapStateToProps","state","Login","MISRights","Component","constructor","props","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","data","selectedId","reloadData","inputParam","inputData","userInfo","classUrl","methodUrl","displayName","onTabChange","tabProps","screenName","validateEsign","sreason","password","screenData","formRef","createRef","extractedColumnList","userColumnList","fieldList","availableDatas","availableList","dataSource","masterStatus","error","isOpen","userRoleControlRights","controlMap","Map","searchRef","searchFieldList","getDerivedStateFromProps","warn","render","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","userinfo","masterData","intl","formatMessage","id","searchedData","UserRole","SelectedMIS","length","suserrolename","errorCode","openChildModal","DashBoardType","Reports","Alert","HomeRights","AlertHomeRights","ncontrolCode","showAccordian","dataState","updateDataState","componentDidUpdate","previousProps","nformcode","Object","values","map","item","push","ncontrolcode","setState","componentWillUnmount","undefined","modalName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col, Card  } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport MISRightsTab from './MISRightsTab';\r\nimport {getAlertRightsComboDataService,getMISRightsDetail, callService, crudMaster,getReportRightsComboDataService,\r\n    getDashBoardRightsComboDataService,filterColumnData, validateEsignCredential, updateStore,getHomeRightsComboDataService,getAlertHomeRightsComboDataService } from '../../actions';\r\nimport { getControlMap } from '../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ContentPanel} from '../../components/App.styles';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass MISRights extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        // this.closeModal = this.closeModal.bind(this);\r\n        this.extractedColumnList = [];\r\n        this.userColumnList=[];\r\n        this.fieldList = [];\r\n       \r\n       \r\n        this.state = {\r\n            availableDatas:\"\",\r\n            availableList:\"\",\r\n            dataSource: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            isOpen: false,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        };\r\n        this.searchRef = React.createRef();\r\n\r\n        this.searchFieldList=[\"suserrolename\"];\r\n     \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord ,selectedId:null}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    render() {\r\n      \r\n\r\n        const filterParam = { inputListName :\"UserRole\", selectedObject : \"SelectedMIS\",  primaryKeyField: \"nuserrolecode\",\r\n                             fetchUrl : \"misrights/getMISRights\", fecthInputObject : {userinfo:this.props.Login.userInfo},\r\n                             masterData:this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n                            };\r\n  \r\n\r\n        return(<>\r\n            {/* Start of get display*/}\r\n            <div className=\"client-listing-wrap mtop-4\">\r\n            <Row noGutters={true}>\r\n                <Col md={4}>\r\n                    <Row noGutters={true}><Col md={12}>\r\n                        <div className=\"list-fixed-wrap\">\r\n                            <ListMaster\r\n                                screenName = {this.props.intl.formatMessage({id:\"IDS_USERROLE\"})}     \r\n                                masterData ={this.props.Login.masterData}\r\n                                userInfo = {this.props.Login.userInfo}                         \r\n                                masterList = {this.props.Login.masterData.searchedData ||this.props.Login.masterData.UserRole}\r\n                                getMasterDetail = {(MISRights)=>this.props.getMISRightsDetail(MISRights, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster = {this.props.Login.masterData.SelectedMIS}\r\n                                primaryKeyField = \"nuserrolecode\"\r\n                                mainField = \"suserrolename\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                searchRef = {this.searchRef}\r\n                                reloadData = {this.reloadData}\r\n                                isMultiSelecct={false}\r\n                                hidePaging={true}\r\n                               />\r\n                        </div>\r\n                    </Col></Row>\r\n                </Col>\r\n                <Col md={8}>\r\n                    <Row><Col md={12}>\r\n                    <ContentPanel className=\"panel-main-content\">\r\n                        <Card className=\"border-0\">\r\n                            {this.props.Login.masterData.UserRole && this.props.Login.masterData.UserRole.length > 0 && this.props.Login.masterData.SelectedMIS ?\r\n                                <>\r\n                                <Card.Header>\r\n                                    <Card.Title className=\"product-title-main\">\r\n                                            {this.props.Login.masterData.SelectedMIS.suserrolename}\r\n                                    </Card.Title>\r\n                                  \r\n                                </Card.Header>                                   \r\n                                <Card.Body>\r\n                                    <MISRightsTab\r\n                                               formatMessage={this.props.intl.formatMessage}\r\n                                               operation={this.props.Login.operation}\r\n                                               inputParam={this.props.Login.inputParam}\r\n                                               screenName={this.props.Login.screenName}\r\n                                               userInfo={this.props.Login.userInfo}\r\n                                               masterData={this.props.Login.masterData}\r\n                                               crudMaster={this.props.crudMaster}\r\n                                               errorCode={this.props.Login.errorCode}\r\n                                               masterStatus={this.props.Login.masterStatus}\r\n                                               openChildModal={this.props.Login.openChildModal}\r\n                                               DashBoardType={this.props.Login.DashBoardType}\r\n                                               Reports={this.props.Login.Reports}\r\n                                               Alert={this.props.Login.Alert}\r\n                                               HomeRights={this.props.Login.HomeRights}\r\n                                               AlertHomeRights={this.props.Login.AlertHomeRights}\r\n                                               updateStore={this.props.updateStore}\r\n                                               selectedRecord={this.props.Login.selectedRecord}\r\n                                               getDashBoardRightsComboDataService={this.props.getDashBoardRightsComboDataService}\r\n                                               getReportRightsComboDataService={this.props.getReportRightsComboDataService}\r\n                                               getAlertRightsComboDataService={this.props.getAlertRightsComboDataService}\r\n                                               getHomeRightsComboDataService={this.props.getHomeRightsComboDataService}\r\n                                               getAlertHomeRightsComboDataService={this.props.getAlertHomeRightsComboDataService}\r\n                                               ncontrolCode={this.props.Login.ncontrolCode}\r\n                                               userRoleControlRights={this.state.userRoleControlRights}\r\n                                               esignRights={this.props.Login.userRoleControlRights}\r\n                                               screenData={this.props.Login.screenData}\r\n                                               validateEsignCredential={this.props.validateEsignCredential}\r\n                                               loadEsign={this.props.Login.loadEsign}\r\n                                               controlMap={this.state.controlMap}\r\n                                               showAccordian={this.state.showAccordian}\r\n                                               //selectedId={this.props.Login.selectedId}\r\n                                               dataState={this.props.Login.dataState}\r\n                                               onTabChange={this.onTabChange}\r\n                                               searchRef = {this.searchRef}\r\n                                               updateDataState = {this.props.Login.masterData.updateDataState}\r\n                                            />\r\n                                </Card.Body>                                \r\n                                </>\r\n                                :\"\"\r\n                            }\r\n                        </Card>\r\n                    </ContentPanel>\r\n                    </Col></Row>\r\n                </Col>\r\n            </Row>    \r\n            </div>\r\n               \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap\r\n                   \r\n                });\r\n            }\r\n           \r\n        } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n           \r\n        }   \r\n    }\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"MISRights\",\r\n            displayName:\"MIS Rights\",\r\n            userInfo: this.props.Login.userInfo\r\n           // displayName: this.props.Login.inputParam.displayName\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, { getAlertRightsComboDataService,getMISRightsDetail,callService,filterColumnData,getReportRightsComboDataService,\r\n    getDashBoardRightsComboDataService, crudMaster, validateEsignCredential, updateStore,getHomeRightsComboDataService ,getAlertHomeRightsComboDataService})(injectIntl(MISRights));"]},"metadata":{},"sourceType":"module"}