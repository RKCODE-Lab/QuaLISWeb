{"ast":null,"code":"import React from\"react\";import{injectIntl}from\"react-intl\";import{Row,Col}from\"react-bootstrap\";import DateTimePicker from\"../../components/date-time-picker/date-time-picker.component\";import FormSelectSearch from'../../components/form-select-search/form-select-search.component';var FlexTransactionFilter=function FlexTransactionFilter(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"fromdate\",label:props.intl.formatMessage({id:\"IDS_FROM\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord[\"fromdate\"]||props.fromDate,dateFormat:props.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return props.handleDateChange(\"fromdate\",date);},value:props.selectedRecord[\"fromdate\"]||props.fromDate// minDate={props.selectedRecord[\"nauditactionfiltercode\"].value===1?props.selectedRecord[\"fromdate\"] && props.selectedRecord[\"fromdate\"].setFullYear(props.selectedRecord[\"todate\"].getFullYear()+1) \n// || props.fromDate.setFullYear(props.toDate.getFullYear()-1) :\"\"}\n// maxDate={props.selectedRecord[\"nauditactionfiltercode\"].value===1?props.selectedRecord[\"todate\"] || props.toDate:\"\"}\n//maxDate={new Date()}\n})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"todate\",label:props.intl.formatMessage({id:\"IDS_TO\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord[\"todate\"]||props.toDate,dateFormat:props.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return props.handleDateChange(\"todate\",date);},value:props.selectedRecord[\"todate\"]||props.toDate// maxDate={new Date()}\n}))),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_VIEWPERIOD\"}),isSearchable:true,name:\"nauditactionfiltercode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:false,showOption:true//  menuPosition=\"fixed\"\n,options:props.filterViewType,optionId:\"nauditactionfiltercode\",optionValue:\"sauditactionfiltername\",value:props.selectedRecord[\"nauditactionfiltercode\"]?props.selectedRecord[\"nauditactionfiltercode\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"nauditactionfiltercode\");},alphabeticalSort:true})));};export default injectIntl(FlexTransactionFilter);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/flextransaction/FlexTransactionFilter.jsx"],"names":["React","injectIntl","Row","Col","DateTimePicker","FormSelectSearch","FlexTransactionFilter","props","intl","formatMessage","id","selectedRecord","fromDate","userInfo","ssitedate","date","handleDateChange","toDate","filterViewType","value","onComboChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,8DAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,CAAW,CACvC,mBACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACE,oBAAC,cAAD,EACE,IAAI,CAAE,UADR,CAEE,KAAK,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,UAAN,CAAzB,CAFT,CAGE,SAAS,CAAC,cAHZ,CAIE,eAAe,CAAC,eAJlB,CAKE,QAAQ,CAAEH,KAAK,CAACI,cAAN,CAAqB,UAArB,GAAoCJ,KAAK,CAACK,QALtD,CAME,UAAU,CAAEL,KAAK,CAACM,QAAN,CAAeC,SAN7B,CAOE,WAAW,CAAE,KAPf,CAQE,QAAQ,CAAE,kBAACC,IAAD,QAAUR,CAAAA,KAAK,CAACS,gBAAN,CAAuB,UAAvB,CAAmCD,IAAnC,CAAV,EARZ,CASE,KAAK,CAAER,KAAK,CAACI,cAAN,CAAqB,UAArB,GAAoCJ,KAAK,CAACK,QACnD;AACA;AACA;AACA;AAbA,EADF,CADF,cAkBE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACE,oBAAC,cAAD,EACE,IAAI,CAAE,QADR,CAEE,KAAK,CAAEL,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,QAAN,CAAzB,CAFT,CAGE,SAAS,CAAC,cAHZ,CAIE,eAAe,CAAC,eAJlB,CAKE,QAAQ,CAAEH,KAAK,CAACI,cAAN,CAAqB,QAArB,GAAkCJ,KAAK,CAACU,MALpD,CAME,UAAU,CAAEV,KAAK,CAACM,QAAN,CAAeC,SAN7B,CAOE,WAAW,CAAE,KAPf,CAQE,QAAQ,CAAE,kBAACC,IAAD,QAAUR,CAAAA,KAAK,CAACS,gBAAN,CAAuB,QAAvB,CAAiCD,IAAjC,CAAV,EARZ,CASE,KAAK,CAAER,KAAK,CAACI,cAAN,CAAqB,QAArB,GAAkCJ,KAAK,CAACU,MACjD;AAVA,EADF,CAlBF,CADF,cAqDE,oBAAC,gBAAD,EACE,SAAS,CAAEV,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,gBAAN,CAAzB,CADb,CAEE,YAAY,CAAE,IAFhB,CAGE,IAAI,CAAE,wBAHR,CAIE,UAAU,CAAE,KAJd,CAKE,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CALf,CAME,WAAW,CAAE,KANf,CAOE,UAAU,CAAE,IACZ;AARF,CASE,OAAO,CAAEH,KAAK,CAACW,cATjB,CAUE,QAAQ,CAAC,wBAVX,CAWE,WAAW,CAAC,wBAXd,CAYE,KAAK,CAAEX,KAAK,CAACI,cAAN,CAAqB,wBAArB,EAAiDJ,KAAK,CAACI,cAAN,CAAqB,wBAArB,CAAjD,CAAkG,EAZ3G,CAaE,QAAQ,CAAE,kBAAAQ,KAAK,QAAIZ,CAAAA,KAAK,CAACa,aAAN,CAAoBD,KAApB,CAA2B,wBAA3B,CAAJ,EAbjB,CAcE,gBAAgB,CAAE,IAdpB,EArDF,CADF,CADF,CA2ED,CA5ED,CA6EA,cAAelB,CAAAA,UAAU,CAACK,qBAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport DateTimePicker from \"../../components/date-time-picker/date-time-picker.component\";\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst FlexTransactionFilter = (props) => {\r\n  return (\r\n    <Row>\r\n      <Col md={12}>\r\n        <Row>\r\n          <Col md={6}>\r\n            <DateTimePicker\r\n              name={\"fromdate\"}\r\n              label={props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n              className=\"form-control\"\r\n              placeholderText=\"Select date..\"\r\n              selected={props.selectedRecord[\"fromdate\"] || props.fromDate}\r\n              dateFormat={props.userInfo.ssitedate}\r\n              isClearable={false}\r\n              onChange={(date) => props.handleDateChange(\"fromdate\", date)}\r\n              value={props.selectedRecord[\"fromdate\"] || props.fromDate}\r\n            // minDate={props.selectedRecord[\"nauditactionfiltercode\"].value===1?props.selectedRecord[\"fromdate\"] && props.selectedRecord[\"fromdate\"].setFullYear(props.selectedRecord[\"todate\"].getFullYear()+1) \r\n            // || props.fromDate.setFullYear(props.toDate.getFullYear()-1) :\"\"}\r\n            // maxDate={props.selectedRecord[\"nauditactionfiltercode\"].value===1?props.selectedRecord[\"todate\"] || props.toDate:\"\"}\r\n            //maxDate={new Date()}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <DateTimePicker\r\n              name={\"todate\"}\r\n              label={props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n              className=\"form-control\"\r\n              placeholderText=\"Select date..\"\r\n              selected={props.selectedRecord[\"todate\"] || props.toDate}\r\n              dateFormat={props.userInfo.ssitedate}\r\n              isClearable={false}\r\n              onChange={(date) => props.handleDateChange(\"todate\", date)}\r\n              value={props.selectedRecord[\"todate\"] || props.toDate}\r\n            // maxDate={new Date()}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_RECORDTODISPLAY\" })}\r\n                    isSearchable={true}\r\n                    name={\"ntransfiltercode\"}\r\n                    isDisabled={false}\r\n                    placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}      \r\n                    isMandatory={false}\r\n                    showOption={true}\r\n                    //  menuPosition=\"fixed\"\r\n                    options={props.transfilterViewType}\r\n                    optionId='ntransdetailsfiltercode'\r\n                    optionValue='sdisplayname'\r\n                    value={props.selectedRecord[\"ntransfiltercode\"] ? props.selectedRecord[\"ntransfiltercode\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"ntransfiltercode\")}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch> */}\r\n\r\n        <FormSelectSearch\r\n          formLabel={props.intl.formatMessage({ id: \"IDS_VIEWPERIOD\" })}\r\n          isSearchable={true}\r\n          name={\"nauditactionfiltercode\"}\r\n          isDisabled={false}\r\n          placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n          isMandatory={false}\r\n          showOption={true}\r\n          //  menuPosition=\"fixed\"\r\n          options={props.filterViewType}\r\n          optionId='nauditactionfiltercode'\r\n          optionValue='sauditactionfiltername'\r\n          value={props.selectedRecord[\"nauditactionfiltercode\"] ? props.selectedRecord[\"nauditactionfiltercode\"] : \"\"}\r\n          onChange={value => props.onComboChange(value, \"nauditactionfiltercode\")}\r\n          alphabeticalSort={true}\r\n        >\r\n        </FormSelectSearch>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(FlexTransactionFilter);"]},"metadata":{},"sourceType":"module"}