{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{constructOptionList}from'../components/CommonScript';export function showChecklistQBAddScreen(userInfo,ncontrolcode){return function(dispatch){dispatch(initRequest(true));rsapi.post('checklistqb/getAddEditData',{\"userinfo\":userInfo}).then(function(response){// let optionsQBCategory =[];\n// let optionsChecklistComponent = [];\nvar optionsQBCategoryMap=constructOptionList(response.data.qbcategory||[],\"nchecklistqbcategorycode\",\"schecklistqbcategoryname\",undefined,undefined,true);var optionsChecklistComponentMap=constructOptionList(response.data.checklistcomponent||[],\"nchecklistcomponentcode\",\"scomponentname\",undefined,undefined,true);var optionsQBCategory=optionsQBCategoryMap.get(\"OptionList\");var optionsChecklistComponent=optionsChecklistComponentMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{// optionsQBCategory:response.data.qbcategory,\n// optionsChecklistComponent:response.data.checklistcomponent,\noptionsQBCategory:optionsQBCategory,optionsChecklistComponent:optionsChecklistComponent,openModal:true,operation:\"create\",selectedRecord:{},ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function fetchChecklistQBById(editParam){return function(dispatch){var _rsapi$post;var URL1=rsapi.post('checklistqb/getAddEditData',{\"userinfo\":editParam.userInfo});var URL2=rsapi.post(\"checklistqb/getActiveChecklistQBById\",(_rsapi$post={},_defineProperty(_rsapi$post,editParam.primaryKeyField,editParam.primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",editParam.userInfo),_rsapi$post));dispatch(initRequest(true));Axios.all([URL1,URL2]).then(function(response){var selectedRecord={};var selectedId=editParam.primaryKeyValue;var optionsQBCategoryMap=constructOptionList(response[0].data.qbcategory||[],\"nchecklistqbcategorycode\",\"schecklistqbcategoryname\",undefined,undefined,true);var optionsChecklistComponentMap=constructOptionList(response[0].data.checklistcomponent||[],\"nchecklistcomponentcode\",\"scomponentname\",undefined,undefined,true);var optionsQBCategory=optionsQBCategoryMap.get(\"OptionList\");var optionsChecklistComponent=optionsChecklistComponentMap.get(\"OptionList\");selectedRecord=response[1].data;selectedRecord['valueQBCategory']={value:response[1].data.nchecklistqbcategorycode,label:response[1].data.schecklistqbcategoryname};selectedRecord['valueChecklistComponent']={value:response[1].data.nchecklistcomponentcode,label:response[1].data.scomponentname};var mandatoryFields=[{\"idsName\":\"IDS_QBCATEGORYNAME\",\"dataField\":\"valueQBCategory\"},{\"idsName\":\"IDS_QUESTION\",\"dataField\":\"squestion\"},{\"idsName\":\"IDS_COMPONENT\",\"dataField\":\"valueChecklistComponent\"}];if(parseInt(response[1].data.nchecklistcomponentcode)===1||parseInt(response[1].data.nchecklistcomponentcode)===4||parseInt(response[1].data.nchecklistcomponentcode)===8){mandatoryFields.push({\"idsName\":\"IDS_QUESTIONDATA\",\"dataField\":\"squestiondata\"});}dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:response[1].data,operation:editParam.operation,// optionsQBCategory:response[0].data.qbcategory,\n// optionsChecklistComponent:response[0].data.checklistcomponent,\noptionsQBCategory:optionsQBCategory,optionsChecklistComponent:optionsChecklistComponent,openModal:true,screenName:editParam.screenName,ncontrolcode:editParam.ncontrolCode,loading:false,selectedId:selectedId,mandatoryFields:mandatoryFields}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/ChecklistQBAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","constructOptionList","showChecklistQBAddScreen","userInfo","ncontrolcode","dispatch","post","then","response","optionsQBCategoryMap","data","qbcategory","undefined","optionsChecklistComponentMap","checklistcomponent","optionsQBCategory","get","optionsChecklistComponent","type","payload","openModal","operation","selectedRecord","loading","catch","error","status","message","warn","fetchChecklistQBById","editParam","URL1","URL2","primaryKeyField","primaryKeyValue","all","selectedId","value","nchecklistqbcategorycode","label","schecklistqbcategoryname","nchecklistcomponentcode","scomponentname","mandatoryFields","parseInt","push","screenName","ncontrolCode"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios'\r\nimport { initRequest } from './LoginAction';\r\nimport { constructOptionList } from '../components/CommonScript';\r\n\r\nexport function showChecklistQBAddScreen (userInfo, ncontrolcode){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post('checklistqb/getAddEditData',{\"userinfo\":userInfo}) \r\n        .then(response=> { \r\n            // let optionsQBCategory =[];\r\n            // let optionsChecklistComponent = [];\r\n\r\n            const optionsQBCategoryMap = constructOptionList(response.data.qbcategory || [], \"nchecklistqbcategorycode\",\"schecklistqbcategoryname\", undefined, undefined, true);\r\n            const optionsChecklistComponentMap  = constructOptionList(response.data.checklistcomponent  || [], \"nchecklistcomponentcode\",\"scomponentname\" , undefined, undefined, true);\r\n\r\n            const optionsQBCategory = optionsQBCategoryMap.get(\"OptionList\");\r\n            const optionsChecklistComponent = optionsChecklistComponentMap.get(\"OptionList\");\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload:{\r\n                    // optionsQBCategory:response.data.qbcategory,\r\n                    // optionsChecklistComponent:response.data.checklistcomponent,\r\n                    optionsQBCategory,\r\n                    optionsChecklistComponent,\r\n                    openModal:true,\r\n                    operation:\"create\",\r\n                    selectedRecord:{}\r\n                    , ncontrolcode,loading:false\r\n                }\r\n            });         \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function fetchChecklistQBById (editParam){  \r\n    return function(dispatch){\r\n        const URL1= rsapi.post('checklistqb/getAddEditData',{\"userinfo\":editParam.userInfo})\r\n        const URL2=rsapi.post(\"checklistqb/getActiveChecklistQBById\", { [editParam.primaryKeyField] :editParam.primaryKeyValue , \"userinfo\": editParam.userInfo} )\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL1,URL2])\r\n        .then(response=> { \r\n            let selectedRecord={}\r\n            let selectedId = editParam.primaryKeyValue;\r\n            const optionsQBCategoryMap = constructOptionList(response[0].data.qbcategory || [], \"nchecklistqbcategorycode\",\"schecklistqbcategoryname\", undefined, undefined, true);\r\n            const optionsChecklistComponentMap  = constructOptionList(response[0].data.checklistcomponent  || [], \"nchecklistcomponentcode\",\"scomponentname\" , undefined, undefined, true);\r\n            const optionsQBCategory = optionsQBCategoryMap.get(\"OptionList\");\r\n            const optionsChecklistComponent = optionsChecklistComponentMap.get(\"OptionList\");\r\n            selectedRecord=response[1].data\r\n            selectedRecord['valueQBCategory']={value:response[1].data.nchecklistqbcategorycode,label:response[1].data.schecklistqbcategoryname}\r\n            selectedRecord['valueChecklistComponent']={value:response[1].data.nchecklistcomponentcode,label:response[1].data.scomponentname}\r\n            let mandatoryFields=[\r\n                {\"idsName\":\"IDS_QBCATEGORYNAME\",\"dataField\":\"valueQBCategory\"},\r\n                {\"idsName\":\"IDS_QUESTION\",\"dataField\":\"squestion\"},\r\n                {\"idsName\":\"IDS_COMPONENT\",\"dataField\":\"valueChecklistComponent\"},\r\n            ];\r\n            if(parseInt(response[1].data.nchecklistcomponentcode)===1||parseInt(response[1].data.nchecklistcomponentcode)===4||parseInt(response[1].data.nchecklistcomponentcode)===8){\r\n                mandatoryFields.push({\"idsName\":\"IDS_QUESTIONDATA\",\"dataField\":\"squestiondata\"})\r\n            }\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload:{\r\n                selectedRecord : response[1].data,\r\n                operation:editParam.operation,\r\n                // optionsQBCategory:response[0].data.qbcategory,\r\n                // optionsChecklistComponent:response[0].data.checklistcomponent,\r\n                optionsQBCategory,\r\n                optionsChecklistComponent,\r\n                openModal: true,\r\n                screenName:editParam.screenName,\r\n                ncontrolcode:editParam.ncontrolCode,\r\n                loading:false,selectedId,\r\n                mandatoryFields\r\n            }\r\n            }); \r\n            \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })\r\n    }\r\n }"]},"metadata":{},"sourceType":"module"}