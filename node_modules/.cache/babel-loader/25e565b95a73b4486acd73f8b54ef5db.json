{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\basemaster\\\\AddTreeview.jsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col, Form, FormControl, Button } from 'react-bootstrap';\nimport '@progress/kendo-react-animation';\nimport FormInput from '../../components/form-input/form-input.component';\nimport TreeViewEditable from '../../components/form-tree-editable/form-tree-editable.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { mapTree } from '@progress/kendo-react-treelist';\nimport { faArrowDown, faBox, faBoxOpen, faFolder, faFolderOpen, faLocationArrow, faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { uuid } from 'uuidv4';\nimport { SearchIcon } from '../../components/App.styles';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nlet selectedItem = undefined;\n\nclass AddTreeview extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.itemRender = props => {\n      if (this.state.toggleAction) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, props.item.editable ? /*#__PURE__*/React.createElement(Form.Group, {\n          className: \"k-editable-text-wrap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          id: \"nodename\",\n          name: \"nodename\",\n          type: \"text\",\n          onKeyDown: e => e.stopPropagation(),\n          value: props.item.text,\n          autoFocus: true,\n          autoComplete: \"off\",\n          onChange: e => this.handleChange(e, props.item),\n          onBlur: e => this.handleBlur(e, props.item),\n          maxLength: \"50\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }\n        })) : /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }\n        }, props.item.text));\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, props.item ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"d-flex align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: `normal-node text-truncate\n                      ${props.item.editable ? \"active-node\" : \"\"}\n                      ${props.item.expanded ? \"expand-node\" : \"collapse-node\"}\n                      `,\n          \"data-tip\": props.item.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        }, props.item.containerfirstnode ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faBoxOpen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 52\n          }\n        }) : props.item.locationlastnode ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faLocationArrow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 51\n          }\n        }) : props.item.containerlastnode ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faBox,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 54\n          }\n        }) : props.item.expanded ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faFolderOpen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 47\n          }\n        }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faFolder,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 89\n          }\n        }), props.item.text), props.item.editable ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"action-icon tree-level1\",\n          \"data-tip\": this.props.intl.formatMessage({\n            id: \"IDS_CLONENODE\"\n          }),\n          onClick: e => {\n            e.stopPropagation();\n            this.cloneNode(e, props.item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"action-icon tree-level1\",\n          \"data-tip\": this.props.intl.formatMessage({\n            id: \"IDS_EQUALNODE\"\n          }),\n          onClick: e => {\n            e.stopPropagation();\n            this.equalNode(e, props.item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"action-icon tree-level2\",\n          \"data-tip\": this.props.intl.formatMessage({\n            id: \"IDS_CHILDNODE\"\n          }),\n          onClick: e => {\n            e.stopPropagation();\n            this.addChildNode(e, props.item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"k-icon k-i-edit k-i-pencil ml-2\",\n          \"data-tip\": this.props.intl.formatMessage({\n            id: \"IDS_EDIT\"\n          }),\n          onClick: e => {\n            e.stopPropagation();\n            this.editRecord(e, props.item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }\n        }), !props.item.isRoot ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"k-icon k-i-delete ml-2\",\n          \"data-tip\": this.props.intl.formatMessage({\n            id: \"IDS_DELETE\"\n          }),\n          onClick: e => {\n            e.stopPropagation();\n            this.deleteNode(props.item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 23\n          }\n        }) : null) : null)) : \"\");\n      }\n    };\n\n    this.addChildNode = (e, clickedItem) => {\n      // let newData = mapTree(this.state.treeData, \"items\", (item) => {\n      //     if (item.id === clickedItem.id) {\n      //         item.items = item.items || [];\n      //         item.items.push({\n      //             id: uuid(),\n      //             text: this.props.intl.formatMessage({ id: \"IDS_LABEL\" }),\n      //             expanded: true,\n      //             editable: false,\n      //             locationlastnode: false,\n      //             containerfirstnode: false,\n      //             containerlastnode: false,\n      //             itemhierarchy: \"\"\n      //         });\n      //     }\n      //     return item;\n      // });\n      // this.setState({ treeData: newData });\n      if (!clickedItem.items) {\n        clickedItem.items = [];\n      }\n\n      clickedItem.items.push({\n        id: uuid(),\n        text: this.props.intl.formatMessage({\n          id: \"IDS_LABEL\"\n        }),\n        expanded: true,\n        editable: false,\n        locationlastnode: false,\n        containerfirstnode: false,\n        containerlastnode: false,\n        itemhierarchy: \"\"\n      });\n    };\n\n    this.onItemClick = event => {\n      if (selectedItem) {\n        selectedItem.editable = false;\n      }\n\n      event.item.editable = true;\n      selectedItem = event.item;\n    };\n\n    this.onExpandChange = event => {\n      event.item.expanded = !event.item.expanded; // this.forceUpdate();\n    };\n\n    this.state = {\n      treeData: [...this.props.treeData]\n    };\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.treeData !== previousProps.treeData) {\n      this.setState({\n        treeData: this.props.treeData\n      });\n    }\n  } //   onItemClick = (event) => {\n  //     let newData = mapTree(this.state.treeData, \"items\", (item) => {\n  //         if (item.editable === true) {\n  //             item.editable = false;\n  //         } else if (item.id === event.item.id) {\n  //             item.editable = true;\n  //         }\n  //         return item;\n  //     });\n  //     this.setState({ treeData: [...newData] });\n  // };\n\n\n  componentWillUnmount() {\n    this.props.clearSearchedState();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, this.props.operation !== \"addinfo\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"nstoragecategorycode\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_STORAGECATEGORY\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props.storageCategoryList,\n      value: this.props.selectedRecord[\"nstoragecategorycode\"],\n      isMandatory: true,\n      isClearable: false,\n      isMulti: false,\n      isSearchable: true,\n      isDisabled: this.props.isOnlyDraft,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, 'nstoragecategorycode', 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    })) : \"\", this.props.operation !== \"addinfo\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_STORAGESTRUCTURENAME\"\n      }),\n      name: \"ssamplestoragelocationname\",\n      type: \"text\",\n      onChange: event => this.props.onInputChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_STORAGESTRUCTURENAME\"\n      }),\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"ssamplestoragelocationname\"] : \"\",\n      isMandatory: true,\n      required: true,\n      maxLength: \"30\",\n      isDisabled: this.props.isOnlyDraft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    })) : \"\", this.props.operation === \"addinfo\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_PRODUCT\"\n      }),\n      isSearchable: true,\n      name: \"nproductcode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      isClearable: true,\n      options: this.props.sampleTypeList,\n      value: this.props.selectedRecord[\"nproductcode\"] || \"\",\n      defaultValue: this.props.selectedRecord[\"nproductcode\"],\n      onChange: event => this.props.onComboChange(event, \"nproductcode\"),\n      closeMenuOnSelect: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    })) : \"\", this.props.operation === \"addinfo\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_PROJECTTYPE\"\n      }),\n      isSearchable: true,\n      name: \"nprojecttypecode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      isClearable: true,\n      options: this.props.projectTypeMapList,\n      value: this.props.selectedRecord[\"nprojecttypecode\"] || \"\",\n      defaultValue: this.props.selectedRecord[\"nprojecttypecode\"],\n      onChange: event => this.props.onComboChange(event, \"nprojecttypecode\"),\n      closeMenuOnSelect: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_QUANTITY\"\n      }),\n      name: \"nquantity\",\n      type: \"numeric\",\n      onChange: event => this.props.onNumericInputChange(event, 'nquantity'),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_QUANTITY\"\n      }),\n      value: this.props.selectedRecord[\"nquantity\"] ? this.props.selectedRecord[\"nquantity\"] || [] : [],\n      isMandatory: false // isDisabled={this.props.selectedRecord[\"nneedposition\"]}\n      ,\n      required: true,\n      maxLength: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"nunitcode\",\n      as: \"select\",\n      onChange: event => this.props.onComboChange(event, 'nunitcode'),\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_UNITNAME\"\n      }),\n      isMandatory: false,\n      value: this.props.selectedRecord[\"nunitcode\"] ? this.props.selectedRecord[\"nunitcode\"] || [] : [],\n      options: this.props.unitMapList,\n      optionId: \"value\",\n      optionValue: \"label\",\n      isMulti: false,\n      isDisabled: false,\n      isSearchable: false,\n      isClearable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }))) : \"\", this.props.operation === \"addinfo\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      id: \"nneedposition\",\n      name: \"nneedposition\",\n      type: \"switch\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_NEEDPREDEFINEDSTRUCURE\"\n      }),\n      className: \"custom-switch-md\",\n      checked: this.props.selectedRecord === undefined ? false : this.props.selectedRecord[\"nneedposition\"],\n      defaultValue: this.props.selectedRecord === undefined ? false : this.props.selectedRecord[\"nneedposition\"],\n      onChange: this.props.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }\n    })) : \"\", this.props.operation === \"addinfo\" && this.props.selectedRecord[\"nneedposition\"] === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"ncontainertypecode\",\n      as: \"select\",\n      onChange: event => this.props.onComboChange(event, 'ncontainertypecode'),\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_CONTAINERTYPE\"\n      }),\n      isMandatory: this.props.selectedRecord[\"nneedposition\"],\n      value: this.props.selectedRecord[\"ncontainertypecode\"] ? this.props.selectedRecord[\"ncontainertypecode\"] || [] : [],\n      options: this.props.selectedRecord[\"containerTypeOptions\"],\n      optionId: \"value\",\n      optionValue: \"label\",\n      isMulti: false,\n      isDisabled: false,\n      isSearchable: false,\n      isClearable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"ncontainerstructurecode\",\n      as: \"select\",\n      onChange: event => this.props.onComboChange(event, 'ncontainerstructurecode'),\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_CONTAINERSTRUCTURENAME\"\n      }),\n      isMandatory: this.props.selectedRecord[\"nneedposition\"],\n      value: this.props.selectedRecord[\"ncontainerstructurecode\"] ? this.props.selectedRecord[\"ncontainerstructurecode\"] || [] : [],\n      options: this.props.selectedRecord[\"containerStructureOptions\"],\n      optionId: \"value\",\n      optionValue: \"label\",\n      isMulti: false,\n      isDisabled: false,\n      isSearchable: false,\n      isClearable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"ndirectionmastercode\",\n      as: \"select\",\n      onChange: event => this.props.onComboChange(event, 'ndirectionmastercode'),\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_DIRECTION\"\n      }),\n      isMandatory: this.props.selectedRecord[\"nneedposition\"],\n      value: this.props.selectedRecord[\"ndirectionmastercode\"] ? this.props.selectedRecord[\"ndirectionmastercode\"] || [] : [],\n      options: this.props.selectedRecord[\"directionmasterOptions\"],\n      optionId: \"value\",\n      optionValue: \"label\",\n      isMulti: false,\n      isDisabled: false,\n      isSearchable: false,\n      isClearable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 29\n      }\n    }))) : \"\", this.props.operation === \"addinfo\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_NOOFSAMPLECONTAINER\"\n      }),\n      name: \"nnoofcontainer\",\n      type: \"numeric\",\n      onChange: event => this.props.onNumericInputChange(event, 'nnoofcontainer'),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_NOOFSAMPLECONTAINER\"\n      }),\n      value: this.props.selectedRecord[\"nnoofcontainer\"] ? this.props.selectedRecord[\"nnoofcontainer\"] || [] : [],\n      isMandatory: false,\n      isDisabled: this.props.selectedRecord[\"nneedposition\"],\n      required: true,\n      maxLength: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 27\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 29\n      }\n    }, this.props.operation === \"addinfo\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormNumericInput, {\n      name: 'nrow',\n      label: this.props.intl.formatMessage({\n        id: \"IDS_ROWS\"\n      }),\n      className: \"form-control\",\n      type: \"text\",\n      strict: true,\n      value: this.props.selectedRecord['nrow'] ? this.props.selectedRecord['nrow'] : \"\",\n      isDisabled: true,\n      noStyle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 37\n      }\n    })) : \"\", this.props.operation === \"addinfo\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormNumericInput, {\n      name: 'ncolumn',\n      label: this.props.intl.formatMessage({\n        id: \"IDS_COLUMNS\"\n      }),\n      className: \"form-control\",\n      type: \"text\",\n      strict: true,\n      value: this.props.selectedRecord['ncolumn'] ? this.props.selectedRecord['ncolumn'] : \"\",\n      isDisabled: true,\n      noStyle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 37\n      }\n    })) : \"\")), this.props.operation === \"addinfo\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      id: \"nneedautomapping\",\n      name: \"nneedautomapping\",\n      type: \"switch\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_AUTOMAPPING\"\n      }),\n      className: \"custom-switch-md\",\n      checked: this.props.selectedRecord === undefined ? false : this.props.selectedRecord[\"nneedautomapping\"],\n      defaultValue: this.props.selectedRecord === undefined ? false : this.props.selectedRecord[\"nneedautomapping\"],\n      onChange: this.props.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 25\n      }\n    })) : \"\", this.props.operation !== \"addinfo\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TreeViewEditable, {\n      setProperties: this.props.setProperties,\n      id: \"samplestoragelocation\",\n      name: \"samplestoragelocation\",\n      childStateChange: this.props.childStateChange // label=\"Sample Storage Location\"\n      ,\n      dragClue: this.props.dragClue,\n      getHierarchicalIndexById: this.props.getHierarchicalIndexById,\n      placeholder: \"Enter samplestoragelocation\",\n      data: this.props.treeData,\n      onItemDragOver: this.props.onItemDragOver,\n      onItemDragEnd: this.props.onItemDragEnd,\n      expandIcons: true,\n      item: this.props.itemRender,\n      onExpandChange: this.props.onExpandChange,\n      onItemClick: this.props.onItemClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }\n    })) : \"\");\n  }\n\n} //export default injectIntl(AddTreeview);\n\n\nexport default injectIntl(AddTreeview);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/basemaster/AddTreeview.jsx"],"names":["React","injectIntl","Row","Col","Form","FormControl","Button","FormInput","TreeViewEditable","FormSelectSearch","mapTree","faArrowDown","faBox","faBoxOpen","faFolder","faFolderOpen","faLocationArrow","faSearch","faTimes","FontAwesomeIcon","uuid","SearchIcon","FormNumericInput","CustomSwitch","selectedItem","undefined","AddTreeview","Component","constructor","props","itemRender","state","toggleAction","item","editable","e","stopPropagation","text","handleChange","handleBlur","expanded","containerfirstnode","locationlastnode","containerlastnode","intl","formatMessage","id","cloneNode","equalNode","addChildNode","editRecord","isRoot","deleteNode","clickedItem","items","push","itemhierarchy","onItemClick","event","onExpandChange","treeData","componentDidUpdate","previousProps","setState","componentWillUnmount","clearSearchedState","render","operation","storageCategoryList","selectedRecord","isOnlyDraft","onComboChange","onInputChange","sampleTypeList","projectTypeMapList","onNumericInputChange","unitMapList","setProperties","childStateChange","dragClue","getHierarchicalIndexById","onItemDragOver","onItemDragEnd"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col, Form, FormControl, Button } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport TreeViewEditable from '../../components/form-tree-editable/form-tree-editable.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { mapTree } from '@progress/kendo-react-treelist';\r\nimport { faArrowDown, faBox, faBoxOpen, faFolder, faFolderOpen, faLocationArrow, faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { uuid } from 'uuidv4';\r\nimport { SearchIcon } from '../../components/App.styles';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nlet selectedItem = undefined;\r\nclass AddTreeview extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      treeData: [...this.props.treeData]\r\n    }\r\n\r\n  }\r\n  componentDidUpdate(previousProps) {\r\n    if (this.props.treeData !== previousProps.treeData) {\r\n      this.setState({ treeData: this.props.treeData });\r\n    }\r\n  }\r\n\r\n\r\n  //   onItemClick = (event) => {\r\n  //     let newData = mapTree(this.state.treeData, \"items\", (item) => {\r\n  //         if (item.editable === true) {\r\n  //             item.editable = false;\r\n  //         } else if (item.id === event.item.id) {\r\n  //             item.editable = true;\r\n  //         }\r\n  //         return item;\r\n  //     });\r\n  //     this.setState({ treeData: [...newData] });\r\n  // };\r\n  itemRender = (props) => {\r\n    if (this.state.toggleAction) {\r\n      return (\r\n        <>\r\n          {props.item.editable ? (\r\n            <Form.Group className=\"k-editable-text-wrap\">\r\n              <Form.Control\r\n                id={\"nodename\"}\r\n                name={\"nodename\"}\r\n                type=\"text\"\r\n                onKeyDown={(e) => e.stopPropagation()}\r\n                value={props.item.text}\r\n                autoFocus\r\n                autoComplete=\"off\"\r\n                onChange={(e) => this.handleChange(e, props.item)}\r\n                onBlur={(e) => this.handleBlur(e, props.item)}\r\n                maxLength=\"50\"\r\n              />\r\n            </Form.Group>\r\n          ) : (\r\n            <span>{props.item.text}</span>\r\n          )}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          {props.item ? (\r\n            <>\r\n              <span className='d-flex align-items-center'>\r\n                <span className={`normal-node text-truncate\r\n                      ${props.item.editable ? \"active-node\" : \"\"}\r\n                      ${props.item.expanded ? \"expand-node\" : \"collapse-node\"}\r\n                      `} data-tip={props.item.text}>\r\n                  {props.item.containerfirstnode ? <FontAwesomeIcon icon={faBoxOpen} /> :\r\n                    props.item.locationlastnode ? <FontAwesomeIcon icon={faLocationArrow} /> :\r\n                      props.item.containerlastnode ? <FontAwesomeIcon icon={faBox} /> :\r\n                        props.item.expanded ? <FontAwesomeIcon icon={faFolderOpen} /> : <FontAwesomeIcon icon={faFolder} />}\r\n                  {props.item.text}\r\n                </span>\r\n                {props.item.editable ? (\r\n                  <>\r\n                    <span\r\n                      className=\"action-icon tree-level1\"\r\n                      data-tip={this.props.intl.formatMessage({ id: \"IDS_CLONENODE\" })}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.cloneNode(e, props.item);\r\n                      }}\r\n                    ></span>\r\n                    <span\r\n                      className=\"action-icon tree-level1\"\r\n                      data-tip={this.props.intl.formatMessage({ id: \"IDS_EQUALNODE\" })}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.equalNode(e, props.item);\r\n                      }}\r\n                    ></span>\r\n                    <span\r\n                      className=\"action-icon tree-level2\"\r\n                      data-tip={this.props.intl.formatMessage({ id: \"IDS_CHILDNODE\" })}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.addChildNode(e, props.item);\r\n                      }}\r\n                    ></span>\r\n                    <span\r\n                      className=\"k-icon k-i-edit k-i-pencil ml-2\"\r\n                      data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.editRecord(e, props.item);\r\n                      }}\r\n                    ></span>\r\n                    {!props.item.isRoot ? (\r\n                      <span\r\n                        className=\"k-icon k-i-delete ml-2\"\r\n                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          this.deleteNode(props.item);\r\n                        }}\r\n                      ></span>\r\n                    ) : null}\r\n                  </>\r\n                ) : null}\r\n              </span>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  componentWillUnmount() {\r\n    this.props.clearSearchedState();\r\n  }\r\n\r\n  addChildNode = (e, clickedItem) => {\r\n    // let newData = mapTree(this.state.treeData, \"items\", (item) => {\r\n    //     if (item.id === clickedItem.id) {\r\n    //         item.items = item.items || [];\r\n    //         item.items.push({\r\n    //             id: uuid(),\r\n    //             text: this.props.intl.formatMessage({ id: \"IDS_LABEL\" }),\r\n    //             expanded: true,\r\n    //             editable: false,\r\n    //             locationlastnode: false,\r\n    //             containerfirstnode: false,\r\n    //             containerlastnode: false,\r\n    //             itemhierarchy: \"\"\r\n    //         });\r\n    //     }\r\n    //     return item;\r\n    // });\r\n    // this.setState({ treeData: newData });\r\n    if (!clickedItem.items) {\r\n      clickedItem.items = []\r\n    }\r\n    clickedItem.items.push({\r\n      id: uuid(),\r\n      text: this.props.intl.formatMessage({ id: \"IDS_LABEL\" }),\r\n      expanded: true,\r\n      editable: false,\r\n      locationlastnode: false,\r\n      containerfirstnode: false,\r\n      containerlastnode: false,\r\n      itemhierarchy: \"\"\r\n    });\r\n  };\r\n\r\n  onItemClick = (event) => {\r\n\r\n    if (selectedItem) {\r\n      selectedItem.editable = false;\r\n    }\r\n    event.item.editable = true;\r\n    selectedItem = event.item;\r\n  };\r\n  onExpandChange = (event) => {\r\n    event.item.expanded = !event.item.expanded;\r\n    // this.forceUpdate();\r\n  };\r\n  render() {\r\n    return (\r\n      <Row>\r\n        {this.props.operation !==\"addinfo\" ?\r\n        \r\n        <Col md={12}>\r\n          <FormSelectSearch\r\n            name={\"nstoragecategorycode\"}\r\n            formLabel={this.props.intl.formatMessage({ id: \"IDS_STORAGECATEGORY\" })}\r\n            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n            options={this.props.storageCategoryList}\r\n            value={this.props.selectedRecord[\"nstoragecategorycode\"]}\r\n            isMandatory={true}\r\n            isClearable={false}\r\n            isMulti={false}\r\n            isSearchable={true}\r\n            isDisabled={this.props.isOnlyDraft}\r\n            closeMenuOnSelect={true}\r\n            onChange={(event) => this.props.onComboChange(event, 'nstoragecategorycode', 1)}\r\n          />\r\n        </Col> :\"\"}\r\n\r\n        {this.props.operation !==\"addinfo\" ?\r\n        <Col md={12}>\r\n          <FormInput\r\n            label={this.props.intl.formatMessage({ id: \"IDS_STORAGESTRUCTURENAME\" })}\r\n            name={\"ssamplestoragelocationname\"}\r\n            type=\"text\"\r\n            onChange={(event) => this.props.onInputChange(event)}\r\n            placeholder={this.props.intl.formatMessage({ id: \"IDS_STORAGESTRUCTURENAME\" })}\r\n            value={this.props.selectedRecord ? this.props.selectedRecord[\"ssamplestoragelocationname\"] : \"\"}\r\n            isMandatory={true}\r\n            required={true}\r\n            maxLength={\"30\"}\r\n            isDisabled={this.props.isOnlyDraft}\r\n          />\r\n        </Col>:\"\"}\r\n        {this.props.operation ===\"addinfo\" ?\r\n         <Col md={12}>\r\n          <FormSelectSearch\r\n            formLabel={this.props.intl.formatMessage({ id: \"IDS_PRODUCT\" })}\r\n            isSearchable={true}\r\n            name={\"nproductcode\"}\r\n            isDisabled={false}\r\n            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n            isMandatory={false}\r\n            isClearable={true}\r\n            options={this.props.sampleTypeList}\r\n            value={this.props.selectedRecord[\"nproductcode\"] || \"\"}\r\n            defaultValue={this.props.selectedRecord[\"nproductcode\"]}\r\n            onChange={(event) => this.props.onComboChange(event, \"nproductcode\" )}\r\n            closeMenuOnSelect={true}\r\n          >\r\n          </FormSelectSearch>\r\n        </Col> :\"\"}\r\n        {this.props.operation ===\"addinfo\" ?\r\n        <><Col md={12}>\r\n            <FormSelectSearch\r\n              formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n              isSearchable={true}\r\n              name={\"nprojecttypecode\"}\r\n              isDisabled={false}\r\n              placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n              isMandatory={false}\r\n              isClearable={true}\r\n              options={this.props.projectTypeMapList}\r\n              value={this.props.selectedRecord[\"nprojecttypecode\"] || \"\"}\r\n              defaultValue={this.props.selectedRecord[\"nprojecttypecode\"]}\r\n              onChange={(event) => this.props.onComboChange(event, \"nprojecttypecode\")}\r\n              closeMenuOnSelect={true}\r\n            >\r\n            </FormSelectSearch>\r\n          </Col>\r\n              <Col md={6}>\r\n                <FormInput\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_QUANTITY\" })}\r\n                  name={\"nquantity\"}\r\n                  type=\"numeric\"\r\n                  onChange={(event) => this.props.onNumericInputChange(event, 'nquantity')}\r\n                  placeholder={this.props.intl.formatMessage({ id: \"IDS_QUANTITY\" })}\r\n                  value={this.props.selectedRecord[\"nquantity\"] ? this.props.selectedRecord[\"nquantity\"] || [] : []}\r\n                  isMandatory={false}\r\n                  // isDisabled={this.props.selectedRecord[\"nneedposition\"]}\r\n                  required={true}\r\n                  maxLength={\"5\"} />\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormSelectSearch\r\n                  name={\"nunitcode\"}\r\n                  as={\"select\"}\r\n                  onChange={(event) => this.props.onComboChange(event, 'nunitcode')}\r\n                  formLabel={this.props.intl.formatMessage({ id: \"IDS_UNITNAME\" })}\r\n                  isMandatory={false}\r\n                  value={this.props.selectedRecord[\"nunitcode\"] ? this.props.selectedRecord[\"nunitcode\"] || [] : []}\r\n                  options={this.props.unitMapList}\r\n                  optionId={\"value\"}\r\n                  optionValue={\"label\"}\r\n                  isMulti={false}\r\n                  isDisabled={false}\r\n                  isSearchable={false}\r\n                  isClearable={true} />\r\n              </Col>\r\n            </>\r\n         :\"\"}\r\n        {this.props.operation ===\"addinfo\" ?\r\n                    <Col md={12}>\r\n                        <CustomSwitch\r\n                            id={\"nneedposition\"}\r\n                            name={\"nneedposition\"}\r\n                            type={\"switch\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_NEEDPREDEFINEDSTRUCURE\" })}\r\n                            className={\"custom-switch-md\"}\r\n                            checked={this.props.selectedRecord === undefined ? false : this.props.selectedRecord[\"nneedposition\"]}\r\n                            defaultValue={this.props.selectedRecord === undefined ? false : this.props.selectedRecord[\"nneedposition\"]}\r\n                            onChange={this.props.onInputChange}\r\n\r\n                        />\r\n                    </Col>:\"\"}\r\n\r\n                    {this.props.operation ===\"addinfo\" && this.props.selectedRecord[\"nneedposition\"] === true ? <>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                name={\"ncontainertypecode\"}\r\n                                as={\"select\"}\r\n                                onChange={(event) => this.props.onComboChange(event, 'ncontainertypecode')}\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_CONTAINERTYPE\" })}\r\n                                isMandatory={this.props.selectedRecord[\"nneedposition\"]}\r\n                                value={this.props.selectedRecord[\"ncontainertypecode\"] ? this.props.selectedRecord[\"ncontainertypecode\"] || [] : []}\r\n                                options={this.props.selectedRecord[\"containerTypeOptions\"]}\r\n                                optionId={\"value\"}\r\n                                optionValue={\"label\"}\r\n                                isMulti={false}\r\n                                isDisabled={false}\r\n                                isSearchable={false}\r\n                                isClearable={false}\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                name={\"ncontainerstructurecode\"}\r\n                                as={\"select\"}\r\n                                onChange={(event) => this.props.onComboChange(event, 'ncontainerstructurecode')}\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_CONTAINERSTRUCTURENAME\" })}\r\n                                isMandatory={this.props.selectedRecord[\"nneedposition\"]}\r\n                                value={this.props.selectedRecord[\"ncontainerstructurecode\"] ? this.props.selectedRecord[\"ncontainerstructurecode\"] || [] : []}\r\n                                options={this.props.selectedRecord[\"containerStructureOptions\"]}\r\n                                optionId={\"value\"}\r\n                                optionValue={\"label\"}\r\n                                isMulti={false}\r\n                                isDisabled={false}\r\n                                isSearchable={false}\r\n                                isClearable={false}\r\n                            />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                name={\"ndirectionmastercode\"}\r\n                                as={\"select\"}\r\n                                onChange={(event) =>this.props.onComboChange(event, 'ndirectionmastercode')}\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_DIRECTION\" })}\r\n                                isMandatory={this.props.selectedRecord[\"nneedposition\"]}\r\n                                value={this.props.selectedRecord[\"ndirectionmastercode\"] ? this.props.selectedRecord[\"ndirectionmastercode\"] || [] : []}\r\n                                options={this.props.selectedRecord[\"directionmasterOptions\"]}\r\n                                optionId={\"value\"}\r\n                                optionValue={\"label\"}\r\n                                isMulti={false}\r\n                                isDisabled={false}\r\n                                isSearchable={false}\r\n                                isClearable={false}\r\n                            />\r\n                        </Col> \r\n                    </> : \"\"}\r\n\r\n        {this.props.operation ===\"addinfo\" ?\r\n        <Col md={12}>\r\n                         {/* <FormNumericInput\r\n                            name={\"nquantity\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_NOOFSAMPLECONTAINER\" })}\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            strict={true}\r\n                            value={this.props.selectedRecord[\"nquantity\"] ? this.props.selectedRecord[\"nquantity\"] || [] : []}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            maxLength={99}\r\n                            min={1}\r\n                            max={this.props.selectedRecord[\"nneedposition\"] === true ? this.props.selectedRecord['nquantity']: 99}\r\n                            isDisabled={this.props.selectedRecord[\"nneedposition\"]}\r\n                            onChange={(event) => this.props.onNumericInputChange(event, \"nquantity\")}\r\n                            noStyle={true}\r\n\r\n                        /> */}\r\n\r\n                          <FormInput\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_NOOFSAMPLECONTAINER\" })}\r\n                            name={\"nnoofcontainer\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => this.props.onNumericInputChange(event,'nnoofcontainer')}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_NOOFSAMPLECONTAINER\" })}\r\n                            value={this.props.selectedRecord[\"nnoofcontainer\"] ? this.props.selectedRecord[\"nnoofcontainer\"] || [] : []}\r\n                            isMandatory={false}\r\n                            isDisabled={this.props.selectedRecord[\"nneedposition\"]}\r\n                            required={true}\r\n                            maxLength={\"2\"}\r\n                        />\r\n\r\n                    </Col> :\"\"}\r\n                    \r\n                    <Col >\r\n                            <Row>\r\n                              {this.props.operation ===\"addinfo\" ?\r\n                                <Col md={6}>\r\n                                    <FormNumericInput\r\n                                        name={'nrow'}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_ROWS\" })}\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        strict={true}\r\n                                        value={this.props.selectedRecord['nrow'] ?\r\n                                            this.props.selectedRecord['nrow'] : \"\"}\r\n                                        isDisabled={true}\r\n                                        noStyle={true}\r\n                                    />\r\n                                </Col>:\"\"}\r\n                                {this.props.operation ===\"addinfo\" ?\r\n                                <Col md={6}>\r\n                                    <FormNumericInput\r\n                                        name={'ncolumn'}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_COLUMNS\" })}\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        strict={true}\r\n                                        value={this.props.selectedRecord['ncolumn'] ?\r\n                                            this.props.selectedRecord['ncolumn'] : \"\"}\r\n                                        isDisabled={true}\r\n                                        noStyle={true}\r\n                                    />\r\n                                </Col>:\"\"}\r\n                            </Row>\r\n                        </Col>\r\n                       \r\n                    {this.props.operation ===\"addinfo\" ?\r\n                    <Col md={12}>\r\n                        <CustomSwitch\r\n                            id={\"nneedautomapping\"}\r\n                            name={\"nneedautomapping\"}\r\n                            type={\"switch\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_AUTOMAPPING\" })}\r\n                            className={\"custom-switch-md\"}\r\n                            checked={this.props.selectedRecord === undefined ? false : this.props.selectedRecord[\"nneedautomapping\"]}\r\n                            defaultValue={this.props.selectedRecord === undefined ? false : this.props.selectedRecord[\"nneedautomapping\"]}\r\n                            onChange={this.props.onInputChange}\r\n\r\n                        />\r\n                    </Col>:\"\"}\r\n        {/* <Col md={12}>\r\n        <Col md={6}>\r\n        <div className={`list-group-search tool-search ${this.props.showSearch ? 'activesearch' : \"\"}`}>\r\n            <SearchIcon className=\"search-icon\" onClick={this.props.toggleSearch}>\r\n              <FontAwesomeIcon icon={faSearch} />\r\n            </SearchIcon>\r\n            <FormControl ref={this.props.searchRef} autoComplete=\"off\"\r\n              className='k-textbox' onChange={this.props.handleSearch}\r\n              placeholder={`${this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })}`}\r\n              name={\"search\"}  onKeyUp={this.props.handlenavigation}\r\n            />\r\n            {this.props.showSearch ?\r\n              <SearchIcon className=\"close-right-icon\" onClick={this.props.toggleSearch}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </SearchIcon>\r\n              : \"\"} \r\n          </div>\r\n        </Col>\r\n        <Col md={6}>\r\n             \r\n        <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n              data-tip={this.props.intl.formatMessage({ id: \"IDS_NAVIGATEDOWN\" })}  \r\n              onClick={this.props.handlenavigation}>\r\n              <FontAwesomeIcon icon={faArrowDown} title={this.props.intl.formatMessage({ id: \"IDS_NAVIGATEDOWN\" })} />\r\n            </Button>\r\n        </Col>\r\n      \r\n        </Col> */}\r\n        {this.props.operation !== \"addinfo\" ?\r\n        <Col md={12}>\r\n          <TreeViewEditable\r\n            setProperties={this.props.setProperties}\r\n            id=\"samplestoragelocation\"\r\n            name=\"samplestoragelocation\"\r\n            childStateChange={this.props.childStateChange}\r\n            // label=\"Sample Storage Location\"\r\n            dragClue={this.props.dragClue}\r\n            getHierarchicalIndexById={this.props.getHierarchicalIndexById}\r\n            placeholder=\"Enter samplestoragelocation\"\r\n            data={this.props.treeData}\r\n            onItemDragOver={this.props.onItemDragOver}\r\n            onItemDragEnd={this.props.onItemDragEnd}\r\n            expandIcons={true}\r\n            item={this.props.itemRender}\r\n            onExpandChange={this.props.onExpandChange}\r\n            onItemClick={this.props.onItemClick}\r\n          />\r\n        </Col>:\"\"}\r\n      </Row>)\r\n  }\r\n\r\n}\r\n//export default injectIntl(AddTreeview);\r\nexport default\r\n  // connect(null, {\r\n  //   updateStore \r\n\r\n  // })\r\n  (injectIntl(AddTreeview));"]},"metadata":{},"sourceType":"module"}