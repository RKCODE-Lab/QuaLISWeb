{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import FormTextarea from'../form-textarea/form-textarea.component';import FormInput from'../form-input/form-input.component';import FormSelectSearch from'../form-select-search/form-select-search.component';import DateTimePicker from'../date-time-picker/date-time-picker.component';import FormNumericInput from'../form-numeric-input/form-numeric-input.component';import CustomSwitch from'../custom-switch/custom-switch.component';// import { transactionStatus } from '../Enumeration'\nvar AddType3Component=function AddType3Component(props){return props.extractedColumnList.map(function(item){switch(item.ndesigncomponentcode){case 1:{//TextBox            \nreturn/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:item.idsName}),name:item.dataField,type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,item);},placeholder:props.intl.formatMessage({id:item.idsName}),value:props.selectedRecord[item.dataField]||\"\",isMandatory:item.mandatory,required:item.mandatory,maxLength:item.fieldLength})));}case 2:{//Textarea           \nreturn/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:item.idsName}),name:item.dataField,onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:item.idsName}),value:props.selectedRecord[item.dataField],rows:\"2\",isMandatory:item.mandatory,required:item.mandatory,maxLength:item.fieldLength})));}case 3:{// props.extractedColumnList.map(item => {\nreturn/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:item.dataField,formLabel:props.intl.formatMessage({id:item.idsName}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.dataList[item.dataField]||[],value:props.selectedRecord[item.dataField]?props.selectedRecord[item.dataField]:\"\",isMandatory:item.mandatory,isMulti:false,isClearable:item.mandatory?false:true,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,item.dataField,item);}})));// })\n//Combobox--yet to include functionality & logic to handle this case in Type3Component.jsx\n}case 4:{//Date Picker\nreturn/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:item.dataField,label:props.intl.formatMessage({id:item.idsName}),className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord[item.dataField]||\"\",dateFormat:props.userInfo.ssitedate,showTimeInput:false,isClearable:false,isMandatory:item.mandatory,required:item.mandatory,onChange:function onChange(date){return props.handleDateChange(item.dataField,date,item);},value:props.selectedRecord[item.dataField]})));}case 5:{//Numeric Input             \nreturn/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormNumericInput,{name:item.dataField,label:props.intl.formatMessage({id:item.idsName}),placeholder:props.intl.formatMessage({id:item.idsName}),value:props.selectedRecord[item.dataField]||\"\",type:\"number\",strict:true,maxLength:item.fieldLength?item.fieldLength:10,noStyle:true,onChange:function onChange(event){return props.onNumericInputOnChange(event,item.dataField,item);},precision:item.precision?item.precision:0,min:0,className:\"form-control\",isMandatory:item.mandatory,required:item.mandatory,errors:\"Please provide a valid number.\"})));}case 6:{//Check box/switch           \nreturn/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(CustomSwitch,{name:item.controlName,type:\"switch\",label:props.intl.formatMessage({id:item.idsName}),placeholder:props.intl.formatMessage({id:item.idsName}),isMandatory:item.mandatory,required:item.mandatory,onChange:function onChange(event){return props.onInputOnChange(event,item);},defaultValue:props.selectedRecord[item.controlName]===3?true:false,checked:props.selectedRecord[item.controlName]===3?true:false})));}default:return\"\";}});};export default injectIntl(AddType3Component);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/type3component/AddType3Component.js"],"names":["React","Row","Col","injectIntl","FormTextarea","FormInput","FormSelectSearch","DateTimePicker","FormNumericInput","CustomSwitch","AddType3Component","props","extractedColumnList","map","item","ndesigncomponentcode","intl","formatMessage","id","idsName","dataField","event","onInputOnChange","selectedRecord","mandatory","fieldLength","dataList","onComboChange","userInfo","ssitedate","date","handleDateChange","onNumericInputOnChange","precision","controlName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col} from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../form-textarea/form-textarea.component';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../date-time-picker/date-time-picker.component';\r\nimport FormNumericInput from '../form-numeric-input/form-numeric-input.component';\r\nimport CustomSwitch from '../custom-switch/custom-switch.component';\r\n// import { transactionStatus } from '../Enumeration'\r\n\r\nconst AddType3Component = (props) => {\r\n    return(      \r\n       props.extractedColumnList.map(item=>{\r\n        switch (item.ndesigncomponentcode) {\r\n\r\n            case 1: {    \r\n                //TextBox            \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id:item.idsName})}\r\n                                name={item.dataField}\r\n                                type=\"text\"\r\n                                onChange={(event)=>props.onInputOnChange(event, item)}\r\n                                placeholder={props.intl.formatMessage({ id:item.idsName})}\r\n                                value ={props.selectedRecord[item.dataField]  || \"\"}\r\n                                isMandatory={item.mandatory}\r\n                                required={item.mandatory}\r\n                                maxLength={item.fieldLength}\r\n                            />\r\n                                          \r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 2: {     \r\n                //Textarea           \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormTextarea\r\n                                label={props.intl.formatMessage({ id:item.idsName})}\r\n                                name={item.dataField}\r\n                                onChange={(event)=>props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id:item.idsName})}\r\n                                value ={props.selectedRecord[item.dataField]}\r\n                                rows=\"2\"\r\n                                isMandatory={item.mandatory}\r\n                                required={item.mandatory}\r\n                                maxLength={item.fieldLength}\r\n                            />\r\n                          \r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 3: {\r\n                // props.extractedColumnList.map(item => {\r\n                    return (\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <FormSelectSearch\r\n                                    name={item.dataField}\r\n                                    formLabel={ props.intl.formatMessage({ id:item.idsName})}                              \r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                           \r\n                                    options={props.dataList[item.dataField] || []}\r\n                                    value = { props.selectedRecord[item.dataField] ? props.selectedRecord[item.dataField] : \"\" }\r\n                                    isMandatory={item.mandatory}\r\n                                    isMulti={false}\r\n                                    isClearable={item.mandatory ? false : true}\r\n                                    isSearchable={true}                                \r\n                                    isDisabled={false}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange = {(event)=> props.onComboChange(event, item.dataField, item)}                               \r\n                                />  \r\n                               \r\n                            </Col>\r\n                        </Row>\r\n                    );\r\n                // })\r\n                //Combobox--yet to include functionality & logic to handle this case in Type3Component.jsx\r\n               \r\n            }\r\n            case 4: {\r\n                //Date Picker\r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <DateTimePicker\r\n                                    name={item.dataField} \r\n                                    label={ props.intl.formatMessage({ id:item.idsName})}                     \r\n                                    className='form-control'\r\n                                    placeholderText=\"Select date..\"\r\n                                    selected={props.selectedRecord[item.dataField] || \"\"}\r\n                                    dateFormat={props.userInfo.ssitedate}\r\n                                    showTimeInput={false}\r\n                                    isClearable={false}\r\n                                    isMandatory={item.mandatory}                       \r\n                                    required={item.mandatory}\r\n                                    onChange={date => props.handleDateChange(item.dataField, date, item)}\r\n                                    value={props.selectedRecord[item.dataField]}\r\n                              />\r\n                           \r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n            case 5: {   \r\n                //Numeric Input             \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormNumericInput\r\n                                   name={item.dataField}\r\n                                   label={ props.intl.formatMessage({ id:item.idsName})}                          \r\n                                   placeholder={props.intl.formatMessage({ id:item.idsName})}\r\n                                   value ={ props.selectedRecord[item.dataField] || \"\"}\r\n                                   type=\"number\"                               \r\n                                   strict={true}\r\n                                   maxLength={item.fieldLength ? item.fieldLength : 10}\r\n                                   noStyle={true}\r\n                                   onChange={(event) => props.onNumericInputOnChange(event, item.dataField, item)}\r\n                                   precision={ item.precision ? item.precision : 0}\r\n                                   min={0}\r\n                                   className=\"form-control\"\r\n                                   isMandatory={item.mandatory}                       \r\n                                   required={item.mandatory}\r\n                                   errors=\"Please provide a valid number.\"\r\n                              />\r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 6: {     \r\n                //Check box/switch           \r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <CustomSwitch\r\n                                   name={item.controlName}\r\n                                   type=\"switch\"\r\n                                   label={props.intl.formatMessage({ id:item.idsName})}\r\n                                   placeholder={props.intl.formatMessage({ id:item.idsName})}                            \r\n                                   isMandatory={item.mandatory}                       \r\n                                   required={item.mandatory}                                   \r\n                                   onChange={(event)=> props.onInputOnChange(event, item)}\r\n                                   defaultValue ={props.selectedRecord[item.controlName] === 3 ? true :false }\r\n                                   checked={props.selectedRecord[item.controlName] === 3 ? true :false}\r\n                                   />\r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            default :\r\n                return \"\";\r\n        }\r\n        \r\n        } )\r\n\r\n    )\r\n}\r\n\r\nexport default injectIntl(AddType3Component);"]},"metadata":{},"sourceType":"module"}