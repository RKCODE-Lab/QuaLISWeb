{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,Nav,FormGroup,FormLabel}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faTrashAlt,faCopy}from'@fortawesome/free-solid-svg-icons';import{process}from'@progress/kendo-data-query';import{toast}from'react-toastify';import ListMaster from'../../components/list-master/list-master.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import AddQuery from'./AddQuery';import AddParameter from'./AddParameter';import QueryTypeFilter from'./QueryTypeFilter';import{callService,crudMaster,validateEsignCredential,updateStore,getSQLQueryDetail,getSQLQueryComboService,filterColumnData,comboChangeQueryType,executeUserQuery,comboColumnValues,getColumnNamesByTableName,getTablesName,getModuleFormName,getDatabaseTables,executeQuery,getForeignTable,getViewColumns,getMasterData,createQueryBuilder,getParameterFromQuery,getSelectedQueryBuilder,updateQueryBuilder,getQueryBuilder}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{transactionStatus,queryTypeFilter,tableType,ColumnType}from'../../components/Enumeration';import{constructOptionList,getControlMap,showEsign}from'../../components/CommonScript';import{ReadOnlyText,ContentPanel}from'../../components/App.styles';import rsapi from'../../rsapi';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import{Affix}from'rsuite';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import{ListWrapper}from'../../components/client-group.styles';import ReactTooltip from'react-tooltip';import PortalModalSlideout from'../../components/portal-modal/portal-modal-slideout';import BuildQuery from'./BuildQuery';import{render}from'@testing-library/react';import{format}from'date-fns';import{ProductList}from'../product/product.styled';import QueryBuilderParamter from'./QueryBuilderParamter';import{ReactComponent as ParameterConfigurationIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/parameter-configuration.svg\";import{ReactComponent as ParameterMappingIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/parameter-mapping.svg\";import DataGridComponent from'../../components/data-grid/data-grid.component';import{stringOperatorData}from'./QueryBuilderData';// import {validationData} from './QueryBuilderData';\nvar jsonSql=require('json-sql')({separatedValues:false});var jsonSqlParam=require('json-sql')({separatedValues:true});var QueryBuilder=/*#__PURE__*/function(_Component){_inherits(QueryBuilder,_Component);var _super=_createSuper(QueryBuilder);function QueryBuilder(props){var _this$state;var _this;_classCallCheck(this,QueryBuilder);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.queryData,event.dataState),dataState:event.dataState});};_this.dataStateChangeMain=function(event){_this.setState({dataResultMain:process(_this.props.Login.queryDataMain,event.dataStateMain),dataStateMain:event.dataStateMain});};_this.copySQLQuery=function(type){if(type===2){var query=_this.state.selectedRecord[\"squerywithparam\"]||\"\";if(_this.state.selectedRecord[\"sdefaultvalue\"]&&_this.state.selectedRecord[\"sdefaultvalue\"]){_this.state.selectedRecord[\"sdefaultvalue\"].forEach(function(dataItem,index){if(dataItem.items.needmasterdata&&dataItem.items.mastertablename){query=query.replace(\"$p\"+(index+1),\"P$\"+dataItem.items.valuemember+\"$P\");}else if(dataItem.items.sforeigncolumnname!==undefined&&dataItem.items.sforeigncolumnname!==\"\"){query=query.replace(\"$p\"+(index+1),\"P$\"+dataItem.items.sforeigncolumnname+\"$P\");}else{query=query.replace(\"$p\"+(index+1),\"P$\"+dataItem.items.columnname+\"$P\");}});}navigator.clipboard.writeText(query);}else{var _query=_this.props.Login.masterData.selectedQueryBuilder[\"squerywithparam\"]||\"\";if(_this.props.Login.masterData.selectedQueryBuilder[\"sdefaultvalue\"]&&_this.props.Login.masterData.selectedQueryBuilder[\"sdefaultvalue\"].value){var sdefaultValue=JSON.parse(_this.props.Login.masterData.selectedQueryBuilder[\"sdefaultvalue\"].value);sdefaultValue.sdefaultvalue.forEach(function(dataItem,index){if(dataItem.items.needmasterdata&&dataItem.items.mastertablename){_query=_query.replace(\"$p\"+(index+1),\"P$\"+dataItem.items.valuemember+\"$P\");}else if(dataItem.items.sforeigncolumnname!==undefined&&dataItem.items.sforeigncolumnname!==\"\"){_query=_query.replace(\"$p\"+(index+1),\"P$\"+dataItem.items.sforeigncolumnname+\"$P\");}else{_query=_query.replace(\"$p\"+(index+1),\"P$\"+dataItem.items.columnname+\"$P\");}});}navigator.clipboard.writeText(_query);}};_this.reloadData=function(){_this.searchRef.current.value=\"\";var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"querybuilder\",methodUrl:\"QueryBuilder\",// displayName: \"IDS_DASHBOARDTYPES\",\nuserInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.saveParam=function(saveType,formRef){var query=_this.props.Login.masterData.selectedQueryBuilder[\"squerywithparam\"];_this.props.Login.comboData.sdefaultvalue.forEach(function(dataItem,index){if(dataItem.items.needmasterdata&&dataItem.items.mastertablename){var sqryData=\"\";if(dataItem.symbolObject.items[\"ismulti\"]&&dataItem.symbolObject.items[\"ismulti\"]===true){dataItem.value.forEach(function(item){sqryData+=item.value+\",\";});query=query.replace(\"$p\"+(index+1),sqryData.trimEnd(\",\"));}else{query=query.replace(\"$p\"+(index+1),dataItem.value.value);}}else if(dataItem.items.sforeigncolumnname!==undefined&&dataItem.items.sforeigncolumnname!==\"\"){query=query.replace(\"$p\"+(index+1),dataItem.value.value);}else if(dataItem.items.columntype===ColumnType.DATATIME||dataItem.items.columntype===ColumnType.DATE&&dataItem.symbolObject.items.isInputVisible===true&&(dataItem.symbolObject.items.symbolType===5||dataItem.symbolObject.items.symbolType===1)){query=query.replace(\"$p\"+(index+1),\"'\"+format(new Date(dataItem.value),\"yyyy-MM-dd HH:mm:ss.SS\")+\"'\");}else{query=query.replace(\"$p\"+(index+1),\"'\"+dataItem.value+\"'\");}});var jsonData=JSON.parse(_this.props.Login.masterData.selectedQueryBuilder[\"jsondata\"].value);var inputParam={sgeneratedquery:query,columnList:jsonData[\"columnList\"],userInfo:_this.props.Login.userInfo};var inputData=[];// inputData[\"userinfo\"] = this.props.Login.userInfo;\n// inputData[\"queryBuilder\"] = { \"nstatus\": 1 };\n// inputData[\"queryBuilder\"][\"nquerybuildercode\"] = this.props.Login.masterData.selectedQueryBuilder[\"nquerybuildercode\"]\n// inputData[\"queryBuilder\"][\"sdefaultvalue\"] = comboData;\n_this.props.updateQueryBuilder(inputParam,inputData,_this.props.Login.masterData);};_this.save=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;if(selectedRecord[\"filtercolumns\"]&&selectedRecord[\"filtercolumns\"].length>0){var inputData=[];var jsondata={};var postParam=undefined;if(selectedRecord[\"sdefaultvalue\"].length>0){selectedRecord[\"sdefaultvalue\"].forEach(function(item,i){if(item.symbolObject.items.symbolType===4){delete item.symbolObject.items[\"replacewith\"];}});}postParam={inputListName:\"QueryBuilder\",selectedObject:\"selectedQueryBuilder\",primaryKeyField:\"nquerybuildercode\"};inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"queryBuilder\"]={\"nstatus\":1};jsondata[\"groupList\"]=selectedRecord[\"groupList\"];jsondata[\"aggregate\"]=selectedRecord[\"aggregate\"];jsondata[\"orderby\"]=selectedRecord[\"orderby\"];jsondata[\"columnList\"]=_this.props.Login.viewColumnListByRule;inputData[\"sgeneratedquery\"]=selectedRecord[\"sgeneratedquery\"];inputData[\"queryBuilder\"][\"squerybuildername\"]=selectedRecord[\"querybuildername\"];inputData[\"queryBuilder\"][\"nquerytype\"]=1;inputData[\"queryBuilder\"][\"sviewname\"]=selectedRecord[\"sviewname\"].label;inputData[\"queryBuilder\"][\"squerywithparam\"]=selectedRecord[\"squerywithparam\"];inputData[\"queryBuilder\"][\"squerywithvalue\"]=selectedRecord[\"sgeneratedquery\"];inputData[\"queryBuilder\"][\"sdefaultvalue\"]={sdefaultvalue:selectedRecord[\"sdefaultvalue\"]};inputData[\"queryBuilder\"][\"jsondata\"]=jsondata;var inputParam={classUrl:\"querybuilder\",methodUrl:\"QueryBuilder\",displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:\"create\",saveType:saveType,formRef:formRef,postParam:postParam};_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openPortalModal\");// this.props.createQueryBuilder(inputData, this.props.Login);\n}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTANYCOLUMNS\"}));}};_this.deleteQB=function(ncontrolCode){var inputData=[];// let postParam = {\n//     inputListName: \"QueryBuilder\",\n//     selectedObject: \"selectedDashBoardTypes\",\n//     primaryKeyField: \"ndashboardtypecode\",\n//     primaryKeyValue: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\n//     fetchUrl: \"dashboardtypes/getAllSelectionDashBoardTypes\",\n//     fecthInputObject: { userinfo: this.props.Login.userInfo }\n// };\ninputData[\"queryBuilder\"]=_this.props.Login.masterData.selectedQueryBuilder;inputData[\"userinfo\"]=_this.props.Login.userInfo;var inputParam={methodUrl:\"QueryBuilder\",classUrl:\"querybuilder\",inputData:inputData,operation:\"delete\",searchRef:_this.searchRef};_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");};_this.confirmDelete=function(ncontrolCode){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteQB(\"delete\",ncontrolCode);});};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){_this.searchRef.current.value=\"\";if(_this.state.selectedcombo[\"nquerytypecode\"]){console.log(_this.state.selectedcombo[\"nquerytypecode\"].value);}var nquerytypecode=_this.state.selectedcombo[\"nquerytypecode\"]?_this.state.selectedcombo[\"nquerytypecode\"].value:_this.props.Login.masterData.queryTypeCode;_this.props.getQueryBuilder(nquerytypecode,_this.props.Login.userInfo,_this.props.Login.masterData);};_this.onFilterComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.generateFilterQuery(selectedRecord);};_this.onParamComboChange=function(data,index){var comboData=_this.props.Login.comboData;comboData[\"sdefaultvalue\"][index].value=data;var updateInfo={typeName:DEFAULT_RETURN,data:{comboData:comboData}};_this.props.updateStore(updateInfo);};_this.onParamInputChange=function(event,type,index,dataItem){var comboData=_this.props.Login.comboData;if(type===2){var inputValue=event.target.value;if(/^-?\\d*?\\.?\\d*?$/.test(inputValue)||inputValue===\"\"){comboData[\"sdefaultvalue\"][index].value=event.target.value;}}else if(type===1){comboData[\"sdefaultvalue\"][index].value=event.target.checked;}else if(type===3){if(dataItem.symbolObject.items.symbolType===4){// const symbolObject = stringOperatorData.filter(data => data.value === dataItem.symbolObject.value);\nvar symbolObject=\"\";if(dataItem.symbolObject.value===7||dataItem.symbolObject.value===8){symbolObject=\"'%_%'\";}else if(dataItem.symbolObject.value===9){symbolObject=\"'_%'\";}else{symbolObject=\"'%_'\";}var index1=symbolObject.indexOf('_');var inputname=undefined;inputname=symbolObject.substr(0,index1)+event.target.value+symbolObject.substr(index1+1);inputname=inputname.slice(1,inputname.length-1);comboData[\"sdefaultvalue\"][index].value=inputname;comboData[\"sdefaultvalue\"][index].showInputValue=event.target.value;}else{comboData[\"sdefaultvalue\"][index].value=event.target.value;}}else{comboData[\"sdefaultvalue\"][index].value=event.target.value;}var updateInfo={typeName:DEFAULT_RETURN,data:{comboData:comboData}};_this.props.updateStore(updateInfo);};_this.handleFilterDateChange=function(dateName,dateValue,groupIndex,index){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}selectedRecord[\"groupList\"][groupIndex][index][dateName]=dateValue;_this.generateFilterQuery(selectedRecord);};_this.onComboChange=function(comboData,fieldName){var selectedcombo=_this.state.selectedcombo||{};selectedcombo[fieldName]=comboData;_this.setState({selectedcombo:selectedcombo});};_this.onViewComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;var inputParam={sviewname:comboData.value,selectedRecord:selectedRecord,userinfo:_this.props.Login.userInfo};_this.props.getViewColumns(inputParam);};_this.onAggregateChange=function(comboData,fieldName,index){var selectedRecord=_this.state.selectedRecord;selectedRecord[\"aggregate\"]=selectedRecord[\"aggregate\"]||[];if(fieldName===\"columnname\"){selectedRecord[\"aggregate\"][index]={\"columnname\":comboData,\"aggfunctionname\":\"\"};}else{if(selectedRecord[\"aggregate\"][index][\"columnname\"]&&selectedRecord[\"aggregate\"][index][\"columnname\"]!==undefined){selectedRecord[\"aggregate\"][index][\"aggfunctionname\"]=comboData;}else{}}// this.setState({ selectedRecord });\n_this.generateFilterQuery(selectedRecord);};_this.onRuleChange=function(comboData,fieldName,groupIndex,index){var selectedRecord=_this.state.selectedRecord;_this.clearSelectedRule(selectedRecord,index);var sqlQuery=_this.props.Login.sqlQuery;var oldselectedRecord=selectedRecord;selectedRecord[\"groupList\"][groupIndex][index][fieldName]=comboData;var tableData=comboData.items;var mastertablename=tableData.mastertablename;if(comboData.items.needmasterdata&&mastertablename){var inputParam={userinfo:_this.props.Login.userInfo,data:{nflag:2,mastertablename:mastertablename,valuemember:tableData.valuemember,displaymember:tableData.displaymember},selectedRecord:selectedRecord,groupIndex:groupIndex,index:index,optionId:tableData.valuemember};_this.props.getMasterData(inputParam,_this.props.Login.viewMasterListByRule);}else if(comboData.items&&comboData.items.columntype===ColumnType.COMBO){if(sqlQuery){var _inputParam={userinfo:_this.props.Login.userInfo,stablename:comboData.items.foriegntablename,scolumnname:comboData.value,selectedRecord:selectedRecord,groupIndex:groupIndex,index:index};_this.props.getForeignTable(_inputParam,'column');}else{selectedRecord[\"groupList\"][groupIndex][index][\"\".concat(comboData.items.sforeigncolumnname)]=\"\";var _inputParam2={data:_objectSpread(_objectSpread({},comboData.items),{},{nflag:1}),userinfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,groupIndex:groupIndex,index:index,optionId:comboData.items.sforeigncolumnname};_this.props.getMasterData(_inputParam2,_this.props.Login.viewMasterListByRule);}}else if(comboData.items&&comboData.items.columntype===ColumnType.TEXTINPUT&&oldselectedRecord[\"groupList\"][groupIndex][index][fieldName].items.columntype!==ColumnType.TEXTINPUT){selectedRecord[\"groupList\"][groupIndex][index][\"sinputname\"]=\"\";_this.setState({selectedRecord:selectedRecord});}else{_this.setState({selectedRecord:selectedRecord});}};_this.onMasterDataChange=function(comboData,fieldName,groupIndex,index){var selectedRecord=_this.state.selectedRecord;selectedRecord[\"groupList\"][groupIndex][index][fieldName]=comboData;_this.generateFilterQuery(selectedRecord);};_this.onOrderbyChange=function(comboData,fieldName,index){var selectedRecord=_this.state.selectedRecord;selectedRecord[\"orderby\"]=selectedRecord[\"orderby\"]||[];if(fieldName===\"columnname\"){selectedRecord[\"orderby\"][index]={\"columnname\":comboData,\"ordertype\":\"\"};}else{if(selectedRecord[\"orderby\"][index][\"columnname\"]&&selectedRecord[\"orderby\"][index][\"columnname\"]!==undefined){selectedRecord[\"orderby\"][index][\"ordertype\"]=comboData;}else{}}// this.setState({ selectedRecord });\n_this.generateFilterQuery(selectedRecord);};_this.deleteOrderby=function(index){var addOrderbyList=_this.props.Login.addOrderbyList;var selectedRecord=_this.state.selectedRecord;selectedRecord[\"orderby\"].splice(index,1);addOrderbyList.splice(index,1);addOrderbyList.forEach(function(data,index){addOrderbyList[index]=index;});var updateInfo={typeName:DEFAULT_RETURN,data:{addOrderbyList:addOrderbyList}};_this.props.updateStore(updateInfo);_this.generateFilterQuery(selectedRecord);};_this.addOrderby=function(){var selectedRecord=_this.state.selectedRecord;if(selectedRecord[\"sviewname\"]){var addOrderbyList=_this.props.Login.addOrderbyList||[];var viewColumnListByRule=_this.props.Login.viewColumnListByRule||[];var arrayLength=addOrderbyList.length;viewColumnListByRule=_this.props.Login.viewColumnList;addOrderbyList[arrayLength]=arrayLength;var updateInfo={typeName:DEFAULT_RETURN,data:{addOrderbyList:addOrderbyList,viewColumnListByRule:viewColumnListByRule}};_this.props.updateStore(updateInfo);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTVIEW\"}));}};_this.deleteAggregate=function(index){var addAggregateList=_this.props.Login.addAggregateList;var selectedRecord=_this.state.selectedRecord;selectedRecord[\"aggregate\"].splice(index,1);addAggregateList.splice(index,1);addAggregateList.forEach(function(data,index){addAggregateList[index]=index;});var updateInfo={typeName:DEFAULT_RETURN,data:{addAggregateList:addAggregateList}};_this.props.updateStore(updateInfo);// this.setState({ selectedRecord });\n_this.generateFilterQuery(selectedRecord);};_this.addAggregate=function(){var selectedRecord=_this.state.selectedRecord;if(selectedRecord[\"sviewname\"]){// if (selectedRecord[\"groupby\"] && selectedRecord[\"groupby\"] === true) {\nvar addAggregateList=_this.props.Login.addAggregateList||[];var viewColumnListByRule=_this.props.Login.viewColumnListByRule||[];var arrayLength=addAggregateList.length;viewColumnListByRule=_this.props.Login.viewColumnList;addAggregateList[arrayLength]=arrayLength;var updateInfo={typeName:DEFAULT_RETURN,data:{addAggregateList:addAggregateList,viewColumnListByRule:viewColumnListByRule}};_this.props.updateStore(updateInfo);// } else {\n//     toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTGROUPBY\" }));\n// }\n}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTVIEW\"}));}};_this.addRule=function(type,groupIndex){var selectedRecord=_this.state.selectedRecord;if(type===\"sql\"){var addRuleList=_this.props.Login.addRuleList||[];if(addRuleList.length>0){var arrayLength=addRuleList.length;addRuleList[arrayLength]=arrayLength;selectedRecord[\"button_and_\"+arrayLength]=true;var updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:addRuleList,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);}else{addRuleList[0]=0;_this.props.getDatabaseTables(_this.props.Login.userInfo,_this.props.Login.sqlQuery,{addRuleList:addRuleList,selectedRecord:{}});}}else{if(selectedRecord[\"sviewname\"]){var viewColumnListByRule=_this.props.Login.viewColumnListByRule||[];// const addRuleList = this.props.Login.addRuleList || [];\n// const arrayLength = addRuleList.length;\n// addRuleList[arrayLength] = arrayLength;\nvar addGroupList=_this.props.Login.addGroupList||[];var _arrayLength=addGroupList[groupIndex];addGroupList[groupIndex]=_arrayLength+1;// const addGroupList = {...this.props.Login.addGroupList, [groupIndex]: addRuleList};\nselectedRecord[\"groupList\"][groupIndex][_arrayLength]={};// viewColumnListByRule[groupIndex][arrayLength] = this.props.Login.viewColumnList;\nviewColumnListByRule=_this.props.Login.viewColumnList;var _updateInfo={typeName:DEFAULT_RETURN,data:{addGroupList:addGroupList,viewColumnListByRule:viewColumnListByRule}};_this.props.updateStore(_updateInfo);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTVIEW\"}));}}var condition=[];condition=[{$and:[{$and:[{b:{$lt:10}}]},{// $not: [{\n$and:[{\"naccredited\":{$eq:70}},{\"naccredited\":{$eq:71}}]// }]\n}]}];var sql1=jsonSql.build({table:'table',condition:condition// [{\n//     // $not: [{\n//     $and: [\n//         { b: { $lt: 10 } }, { b: { $lt: 10 } },\n//         {\n//             // $not: [{\n//                 $and: [\n//                     { \"naccredited\": { $eq: 70 } },\n//                     { \"naccredited\": { $eq: 71 } }\n//                 ]\n//             // }]\n//         }\n//         // {\n//         //     $or: [\n//         //         { \"naccredited\": { $eq: 70 } },\n//         //         { \"naccredited\": { $eq: 71 } }\n//         //     ]\n//         // },\n//         // {\n//         //     $or: [\n//         //         { \"nacc\": { $eq: 70 } },\n//         //         { \"nacc\": { $eq: 70 } },\n//         //         {\n//         //             $not: [{\n//         //                 $or: [\n//         //                     { \"naccredited1\": { $eq: 71 } }]\n//         //             }]\n//         //         }\n//         //     ]\n//         // },\n//         // { ab: { $gt: 2 } },\n//         // {\n//         //     $and: [\n//         //         { \"naccredited\": { $eq: 70 } },\n//         //         { \"naccredited\": { $eq: 71 } },\n//         //         {\n//         //             $not: [{\n//         //                 $and: [\n//         //                     { \"naccredited1\": { $eq: 71 } },\n//         //                     { \"naccredited2\": { $eq: 71 } }]\n//         //             }]\n//         //         }\n//         //     ]\n//         // }\n//     ]\n//     // }]\n// }]\n});console.log(sql1.query);};_this.addGroup=function(){var selectedRecord=_this.state.selectedRecord;if(selectedRecord[\"sviewname\"]){var viewColumnListByRule=_this.props.Login.viewColumnListByRule||[];var addGroupList=_this.props.Login.addGroupList||[];var arrayLength=addGroupList.length;addGroupList[arrayLength]=1;// viewColumnListByRule[arrayLength] = [];\n// viewColumnListByRule[arrayLength].push(this.props.Login.viewColumnList);\nviewColumnListByRule=_this.props.Login.viewColumnList;if(arrayLength===0){selectedRecord[\"groupList\"]=[];selectedRecord[\"filtercolumns\"]=viewColumnListByRule;}selectedRecord[\"groupList\"][arrayLength]=[];selectedRecord[\"groupList\"][arrayLength][\"button_and\"]=true;selectedRecord[\"groupList\"][arrayLength][0]={};var updateInfo={typeName:DEFAULT_RETURN,data:{addGroupList:addGroupList,viewColumnListByRule:viewColumnListByRule,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTVIEW\"}));}};_this.getDatabaseTables=function(){var sqlQuery=false;_this.setState({selectedRecord:{}});_this.props.getDatabaseTables(_this.props.Login.userInfo,sqlQuery,{addRuleList:[],addGroupList:[],addAggregateList:[],addOrderbyList:[]});};_this.closePortalModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openPortalModal:false,selectedRecord:{},addRuleList:[],count:0}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:false,selectedRecord:{}}};_this.props.updateStore(updateInfo);};_this.onExecuteRule=function(){var selectedRecord=_this.state.selectedRecord;if(selectedRecord[\"sgeneratedquery\"]){var query=selectedRecord[\"squerywithparam\"];selectedRecord[\"sdefaultvalue\"].forEach(function(dataItem,index){if(dataItem.items.needmasterdata&&dataItem.items.mastertablename){var sqryData=\"\";if(dataItem.symbolObject.items[\"ismulti\"]&&dataItem.symbolObject.items[\"ismulti\"]===true){dataItem.value.forEach(function(item){sqryData+=item.value+\",\";});query=query.replace(\"$p\"+(index+1),sqryData.trimEnd(\",\"));}else{query=query.replace(\"$p\"+(index+1),dataItem.value.value);}}else if(dataItem.items.sforeigncolumnname!==undefined&&dataItem.items.sforeigncolumnname!==\"\"){query=query.replace(\"$p\"+(index+1),dataItem.value.value);}else if(dataItem.items.columntype===ColumnType.DATATIME||dataItem.items.columntype===ColumnType.DATE&&dataItem.symbolObject.items.isInputVisible===true&&(dataItem.symbolObject.items.symbolType===5||dataItem.symbolObject.items.symbolType===1)){query=query.replace(\"$p\"+(index+1),\"'\"+format(new Date(dataItem.value),\"yyyy-MM-dd HH:mm:ss.SS\")+\"'\");}else{query=query.replace(\"$p\"+(index+1),\"'\"+dataItem.value+\"'\");}});var inputParam={sgeneratedquery:query,//selectedRecord[\"sgeneratedquery\"],\nselectedRecord:selectedRecord,columnList:selectedRecord[\"filtercolumns\"]&&selectedRecord[\"filtercolumns\"]||_this.props.Login.viewColumnListByRule,userInfo:_this.props.Login.userInfo};_this.props.executeQuery(inputParam);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_QUERYNOTAVAILABLE\"}));}};_this.deleteRule=function(groupIndex,index){var addGroupList=_this.props.Login.addGroupList;var selectedRecord=_this.state.selectedRecord;addGroupList[groupIndex]=addGroupList[groupIndex]-1;// selectedRecord[`button_and_${index}`] && delete selectedRecord[`button_and_${index}`];\n// selectedRecord[`button_or_${index}`] && delete selectedRecord[`button_or_${index}`];\n// selectedRecord[`notoperator_${index}`] && delete selectedRecord[`notoperator_${index}`];\nif(addGroupList[groupIndex]===0){addGroupList.splice(groupIndex,1);selectedRecord[\"groupList\"].splice(index,1);}else{selectedRecord[\"groupList\"][groupIndex].splice(index,1);}// this.clearSelectedRule(selectedRecord, index);\nvar updateInfo={typeName:DEFAULT_RETURN,data:{addGroupList:addGroupList,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);_this.generateFilterQuery(selectedRecord);};_this.clearRule=function(){var sviewname=_this.state.selectedRecord.sviewname||\"\";var updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:[],selectedRecord:{sviewname:sviewname},sqlQuery:false}};_this.props.updateStore(updateInfo);};_this.resetRule=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:[],addGroupList:[],addAggregateList:[],addOrderbyList:[]}};_this.props.updateStore(updateInfo);_this.setState({selectedRecord:{}});};_this.onSymbolChange=function(comboData,fieldName,groupIndex,index){var selectedRecord=_this.state.selectedRecord;var oldSelectedRecord=selectedRecord[\"groupList\"][groupIndex][index][fieldName]||{};selectedRecord[\"groupList\"][groupIndex][index][fieldName]=comboData;var items=selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items;selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"][\"items\"][\"needmasterdata\"]=items.needmasterdata!==undefined?comboData.items.needmasterdata:false;if(comboData.items.symbolType===2||comboData.items.symbolType===3){selectedRecord[\"groupList\"][groupIndex][index][items[\"valuemember\"]]&&delete selectedRecord[\"groupList\"][groupIndex][index][items[\"valuemember\"]];selectedRecord[\"groupList\"][groupIndex][index][items[\"foreigncolumnname\"]]&&delete selectedRecord[\"groupList\"][groupIndex][index][items[\"foreigncolumnname\"]];selectedRecord[\"groupList\"][groupIndex][index][\"sinputname\"]&&delete selectedRecord[\"groupList\"][groupIndex][index][\"sinputname\"];}else if(comboData.items.symbolType===5&&oldSelectedRecord.items&&oldSelectedRecord.items.symbolType!==5){selectedRecord[\"groupList\"][groupIndex][index][\"snumericinput\"]&&delete selectedRecord[\"groupList\"][groupIndex][index][\"snumericinput\"];selectedRecord[\"groupList\"][groupIndex][index][\"snumericinputtwo\"]&&delete selectedRecord[\"groupList\"][groupIndex][index][\"snumericinputtwo\"];}else if(comboData.items.symbolType===6&&oldSelectedRecord.items&&oldSelectedRecord.items.symbolType===1||comboData.items.symbolType===1&&oldSelectedRecord.items&&oldSelectedRecord.items.symbolType===6){selectedRecord[\"groupList\"][groupIndex][index][\"\".concat(items.sforeigncolumnname)]&&delete selectedRecord[\"groupList\"][groupIndex][index][\"\".concat(items.sforeigncolumnname)];selectedRecord[\"groupList\"][groupIndex][index][\"\".concat(items.valuemember)]&&delete selectedRecord[\"groupList\"][groupIndex][index][\"\".concat(items.valuemember)];}else{}_this.generateFilterQuery(selectedRecord);};_this.onInputChange=function(event,type,groupIndex,index){var selectedRecord=_this.state.selectedRecord;if(type===2){var inputValue=event.target.value;if(/^-?\\d*?\\.?\\d*?$/.test(inputValue)||inputValue===\"\"){selectedRecord[\"groupList\"][groupIndex][index][event.target.name]=event.target.value;}}else if(type===1){selectedRecord[\"groupList\"][groupIndex][index][event.target.name]=event.target.checked;}else if(type===3){selectedRecord[\"groupList\"][groupIndex][index][event.target.name]=event.target.value;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});_this.generateFilterQuery(selectedRecord);};_this.generateFilterQuery=function(selectedRecord){var addGroupList=_this.props.Login.addGroupList;jsonSql.setDialect('mssql');var databaseCondition=[];var displayCondition=[];var databaseConditionParam=[];var fieldWithValue=[];var notOperator=false;if(addGroupList&&addGroupList.length>0){var groupConditionDatabase=[];var groupConditionDatabaseParam=[];var groupConditionDisplay=[];addGroupList.forEach(function(items,groupIndex){var symbolObject={};databaseCondition=[];databaseConditionParam=[];displayCondition=[];_toConsumableArray(Array(items)).map(function(data,index){if(selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"]){symbolObject=selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]&&selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items&&selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items||{};var current_button_and=selectedRecord[\"groupList\"][groupIndex][\"button_and\"];var current_button_or=selectedRecord[\"groupList\"][groupIndex][\"button_or\"];var next_button_and=selectedRecord[\"groupList\"][groupIndex][\"button_and\"];var next_button_or=selectedRecord[\"groupList\"][groupIndex][\"button_or\"]?selectedRecord[\"groupList\"][groupIndex][\"button_or\"]:false;var inputname=selectedRecord[\"groupList\"][groupIndex][index][\"sinputname\"];var symbolname=symbolObject.symbol;var numericinput=selectedRecord[\"groupList\"][groupIndex][index][\"snumericinput\"];var columnLabel=selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].label;var columnValue=selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].value;var snumericinputtwo=selectedRecord[\"groupList\"][groupIndex][index][\"snumericinputtwo\"];var columnName=undefined;var needmasterdata=selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.needmasterdata?selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.needmasterdata:false;if(selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.needmasterdata){columnName=selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember;}else if(selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.sforeigncolumnname){columnName=selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.sforeigncolumnname;}var dateinput=selectedRecord[\"groupList\"][groupIndex][index][\"dateinput\"]&&format(new Date(selectedRecord[\"groupList\"][groupIndex][index][\"dateinput\"]),\"yyyy-MM-dd HH:mm:ss.SS\");//selectedRecord[\"dateinput_\" + index];\nvar dateinputtwo=selectedRecord[\"groupList\"][groupIndex][index][\"dateinputtwo\"]&&format(new Date(selectedRecord[\"groupList\"][groupIndex][index][\"dateinputtwo\"]),\"yyyy-MM-dd HH:mm:ss.SS\");//selectedRecord[\"dateinputtwo_\" + index];\nif(symbolObject&&inputname){if(symbolObject.symbolType===4){var showInputValue=inputname;var index1=symbolObject.replacewith.indexOf('_');inputname=symbolObject.replacewith.substr(0,index1)+inputname+symbolObject.replacewith.substr(index1+1);inputname=inputname.slice(1,inputname.length-1);databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,inputname)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,inputname)));databaseConditionParam.push(_defineProperty({},columnValue,_defineProperty({},symbolname,inputname)));fieldWithValue.push({columnName:columnValue,value:inputname,showInputValue:showInputValue,symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});}else{databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,inputname)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,inputname)));databaseConditionParam.push(_defineProperty({},columnValue,_defineProperty({},symbolname,inputname)));fieldWithValue.push({columnName:columnValue,value:inputname,symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});}}else if(symbolObject&&numericinput&&symbolObject.symbolType!==5){databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,numericinput)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,numericinput)));databaseConditionParam.push(_defineProperty({},columnValue,_defineProperty({},symbolname,numericinput)));fieldWithValue.push({columnName:columnValue,value:numericinput,symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});}else if(symbolObject&&symbolObject.symbolType===2||symbolObject&&symbolObject.symbolType===3){databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,'')));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,'')));databaseConditionParam.push(_defineProperty({},columnValue,_defineProperty({},symbolname,'')));fieldWithValue.push({columnName:columnValue,value:'',symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});}else if(symbolObject&&numericinput&&snumericinputtwo&&symbolObject.symbolType===5){if(symbolObject.symbol===\"\"){var tempValue=[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))];var tempValue1=[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))];databaseCondition.push(tempValue);displayCondition.push(tempValue1);databaseConditionParam.push(tempValue);}else{var _tempValue=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))])];var _tempValue2=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))])];databaseCondition.push(_tempValue);displayCondition.push(_tempValue2);databaseConditionParam.push(_tempValue);}}else if(symbolObject&&symbolObject.symbolType===6&&columnName&&selectedRecord[\"groupList\"][groupIndex][index][columnName]){var _data=selectedRecord[\"groupList\"][groupIndex][index][columnName]&&selectedRecord[\"groupList\"][groupIndex][index][columnName].map(function(item){return item.value;})||[];var data1=selectedRecord[\"groupList\"][groupIndex][index][columnName]&&selectedRecord[\"groupList\"][groupIndex][index][columnName].map(function(item){return item.label;})||[];if(_data.length>0){if(needmasterdata){databaseCondition.push(_defineProperty({},selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember,_defineProperty({},symbolname,_data)));databaseConditionParam.push(_defineProperty({},selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember,_defineProperty({},symbolname,_data)));fieldWithValue.push({columnName:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember,value:selectedRecord[\"groupList\"][groupIndex][index][columnName].map(function(item){return item;}),symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});}else{databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,_data)));databaseConditionParam.push(_defineProperty({},columnValue,_defineProperty({},symbolname,_data)));fieldWithValue.push({columnName:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember,value:selectedRecord[\"groupList\"][groupIndex][index][columnName].map(function(item){return item;}),symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});}}if(data1.length>0){displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,data1)));}// }\n}else if(symbolObject&&columnName&&symbolObject.isInputVisible&&selectedRecord[\"groupList\"][groupIndex][index][columnName]){if(needmasterdata){databaseCondition.push(_defineProperty({},selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember,_defineProperty({},symbolname,selectedRecord[\"groupList\"][groupIndex][index][columnName].value)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,selectedRecord[\"groupList\"][groupIndex][index][columnName].label)));databaseConditionParam.push(_defineProperty({},selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember,_defineProperty({},symbolname,selectedRecord[\"groupList\"][groupIndex][index][columnName].label)));fieldWithValue.push({columnName:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember,value:selectedRecord[\"groupList\"][groupIndex][index][columnName],symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});}else{databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,selectedRecord[\"groupList\"][groupIndex][index][columnName].value)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,selectedRecord[\"groupList\"][groupIndex][index][columnName].label)));databaseConditionParam.push(_defineProperty({},columnValue,_defineProperty({},symbolname,selectedRecord[\"groupList\"][groupIndex][index][columnName].label)));fieldWithValue.push({columnName:columnValue,value:selectedRecord[\"groupList\"][groupIndex][index][columnName],symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});}}else if(symbolObject&&dateinput&&symbolObject.symbolType!==5){databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,dateinput)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,dateinput)));databaseConditionParam.push(_defineProperty({},columnValue,_defineProperty({},symbolname,dateinput)));fieldWithValue.push({columnName:columnValue,value:dateinput,symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});}else if(symbolObject&&dateinput&&dateinputtwo&&symbolObject.symbolType===5){if(symbolObject.symbol===\"\"){var _tempValue3=[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))];var _tempValue4=[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))];databaseCondition.push(_tempValue3);displayCondition.push(_tempValue4);databaseConditionParam.push(_tempValue3);fieldWithValue.push({columnName:columnValue,value:dateinput,symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});fieldWithValue.push({columnName:columnValue,value:dateinputtwo,symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});}else{var _tempValue5=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))])];var _tempValue6=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))])];databaseCondition.push(_tempValue5);displayCondition.push(_tempValue6);databaseConditionParam.push(_tempValue5);fieldWithValue.push({columnName:columnValue,value:dateinput,symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});fieldWithValue.push({columnName:columnValue,value:dateinputtwo,symbolObject:selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"],items:selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items});}}}else{_this.groupByFunction(selectedRecord,databaseCondition,displayCondition);}});if(selectedRecord[\"groupList\"][groupIndex][\"button_and\"]===true){if(selectedRecord[\"groupList\"][groupIndex][\"button_not\"]===true){groupConditionDisplay.push([{$not:[{$and:_toConsumableArray(displayCondition)}]}]);groupConditionDatabase.push([{$not:[{$and:_toConsumableArray(databaseCondition)}]}]);groupConditionDatabaseParam.push([{$not:[{$and:_toConsumableArray(databaseConditionParam)}]}]);}else{groupConditionDisplay.push([{$and:_toConsumableArray(displayCondition)}]);groupConditionDatabase.push([{$and:_toConsumableArray(databaseCondition)}]);groupConditionDatabaseParam.push([{$and:_toConsumableArray(databaseConditionParam)}]);}}else if(selectedRecord[\"groupList\"][groupIndex][\"button_or\"]===true){if(selectedRecord[\"groupList\"][groupIndex][\"button_not\"]===true){groupConditionDisplay.push([{$not:[{$or:_toConsumableArray(displayCondition)}]}]);groupConditionDatabase.push([{$not:[{$or:_toConsumableArray(databaseCondition)}]}]);groupConditionDatabaseParam.push([{$not:[{$or:_toConsumableArray(databaseConditionParam)}]}]);}else{groupConditionDisplay.push([{$or:_toConsumableArray(displayCondition)}]);groupConditionDatabase.push([{$or:_toConsumableArray(databaseCondition)}]);groupConditionDatabaseParam.push([{$or:_toConsumableArray(databaseConditionParam)}]);}}else{groupConditionDisplay.push([_objectSpread({},displayCondition)]);groupConditionDatabase.push([_objectSpread({},databaseCondition)]);groupConditionDatabaseParam.push([_objectSpread({},databaseConditionParam)]);}var finalConditionDisplay=undefined;var finalConditionDatabase=undefined;var finalConditionDatabaseParam=undefined;if(addGroupList.length-1===0){finalConditionDisplay=[].concat(groupConditionDisplay);finalConditionDatabase=[].concat(groupConditionDatabase);finalConditionDatabaseParam=[].concat(groupConditionDatabaseParam);}else if(addGroupList.length-1===groupIndex){if(selectedRecord[\"groupList\"][0][\"button_and\"]===true){finalConditionDisplay=[{$and:[].concat(groupConditionDisplay)}];finalConditionDatabase=[{$and:[].concat(groupConditionDatabase)}];finalConditionDatabaseParam=[{$and:[].concat(groupConditionDatabaseParam)}];}else if(selectedRecord[\"groupList\"][0][\"button_or\"]===true){finalConditionDisplay=[{$or:[].concat(groupConditionDisplay)}];finalConditionDatabase=[{$or:[].concat(groupConditionDatabase)}];finalConditionDatabaseParam=[{$or:[].concat(groupConditionDatabaseParam)}];}else{finalConditionDisplay=[_objectSpread({},groupConditionDisplay)];finalConditionDatabase=[_objectSpread({},groupConditionDatabase)];finalConditionDatabaseParam=[_objectSpread({},groupConditionDatabaseParam)];}}if(_this.props.Login.sqlQuery){var databaseSQLQuery=jsonSql.build({type:'select',table:selectedRecord[\"stablename_0\"].value,condition:databaseCondition});var displaySQLQuery=jsonSql.build({type:'select',table:selectedRecord[\"stablename_0\"].label,condition:displayCondition});selectedRecord[\"sgeneratedquery\"]=databaseSQLQuery.query;selectedRecord[\"sdisplayquery\"]=displaySQLQuery.query;}else{var fields=selectedRecord[\"filtercolumns\"];var fieldList=[];var dbfieldList=[];var groupByAggregateFields=[];var groupByFields=[];var groupByAggregateFieldsDisplay=[];var groupByFieldsDisplay=[];var orderByDefault=[];var orderByCustom={};var orderByDefaultDisplay=[];var orderByCustomDisplay={};selectedRecord[\"orderby\"]&&selectedRecord[\"orderby\"].forEach(function(data){if(data[\"ordertype\"]&&data[\"ordertype\"].value===2){orderByCustom[data[\"columnname\"].items.columnname]=-1;orderByCustomDisplay[data[\"columnname\"].label]=-1;}else{orderByCustom[data[\"columnname\"].items.columnname]=1;orderByCustomDisplay[data[\"columnname\"].label]=1;}});if(selectedRecord[\"aggregate\"]&&selectedRecord[\"aggregate\"].length>0){selectedRecord[\"aggregate\"].forEach(function(data){if(data[\"aggfunctionname\"]&&data[\"aggfunctionname\"].label!==''){groupByAggregateFields.push({func:{name:data[\"aggfunctionname\"].label,args:[{field:data[\"columnname\"].items.columnname}]},alias:data[\"columnname\"].items.columnname});groupByAggregateFieldsDisplay.push({func:{name:data[\"aggfunctionname\"].label,args:[{field:data[\"columnname\"].label}]}});}else{groupByAggregateFields.push(data[\"columnname\"].items.columnname);groupByFields.push(data[\"columnname\"].items.columnname);groupByAggregateFieldsDisplay.push(data[\"columnname\"].label);groupByFieldsDisplay.push(data[\"columnname\"].label);}});}fields.forEach(function(item){fieldList.push(item.label);dbfieldList.push(item.value);});var databaseSQLQueryParam=jsonSqlParam.build({type:'select',table:selectedRecord[\"sviewname\"].value,fields:selectedRecord[\"aggregate\"]&&selectedRecord[\"aggregate\"].length>0?groupByAggregateFields:dbfieldList,group:groupByFields,sort:selectedRecord[\"orderby\"]&&selectedRecord[\"orderby\"].length>0?orderByCustom:\"\",condition:finalConditionDatabaseParam});var _databaseSQLQuery=jsonSql.build({type:'select',table:selectedRecord[\"sviewname\"].value,fields:selectedRecord[\"aggregate\"]&&selectedRecord[\"aggregate\"].length>0?groupByAggregateFields:dbfieldList,group:groupByFields,sort:selectedRecord[\"orderby\"]&&selectedRecord[\"orderby\"].length>0?orderByCustom:\"\",condition:finalConditionDatabase});var _displaySQLQuery=jsonSql.build({type:'select',fields:selectedRecord[\"aggregate\"]&&selectedRecord[\"aggregate\"].length>0?groupByAggregateFieldsDisplay:fieldList,group:groupByFieldsDisplay,table:selectedRecord[\"sviewname\"].label,sort:selectedRecord[\"orderby\"]&&selectedRecord[\"orderby\"].length>0?orderByCustomDisplay:\"\",condition:finalConditionDisplay//&& finalCondition.length === 1 ? finalCondition[0] : finalCondition\n});selectedRecord[\"squerywithparam\"]=databaseSQLQueryParam.query.replace(\"like\",\"Ilike\");selectedRecord[\"sgeneratedquery\"]=selectedRecord[\"filtercolumns\"]&&selectedRecord[\"filtercolumns\"].length>0?_databaseSQLQuery.query.replace(\"like\",\"Ilike\"):\"\";selectedRecord[\"sdisplayquery\"]=selectedRecord[\"filtercolumns\"]&&selectedRecord[\"filtercolumns\"].length>0?_displaySQLQuery.query.replace(\"like\",\"Ilike\"):\"\";selectedRecord[\"sdefaultvalue\"]=fieldWithValue;var paramIndex=[];if(fieldWithValue.length>0){fieldWithValue.forEach(function(item,i){if(item.symbolObject.items.symbolType===4){paramIndex.push(\"$p\"+(i+1));}});}if(paramIndex.length>0){paramIndex.forEach(function(data){selectedRecord[\"squerywithparam\"]=selectedRecord[\"squerywithparam\"].replace(data,data+\" COLLATE pg_catalog.default \");});}// if (selectedRecord[\"squerywithparam\"].indexOf('Ilike') > 0) {\n//     let newQuery = selectedRecord[\"squerywithparam\"];\n//     while (newQuery.indexOf(\"Ilike\") !== -1) {\n//         const paramLabelStartIndex = newQuery.indexOf(\"Ilike\");\n//         const paramLabel = newQuery.substring(paramLabelStartIndex, newQuery.length);\n//     }\n// }\n}_this.setState({selectedRecord:selectedRecord});});}else{_this.groupByFunction(selectedRecord,databaseCondition,displayCondition);}_this.setState({selectedRecord:selectedRecord});// for temporary\n};_this.onConditionClick=function(fieldName,index){var selectedRecord=_this.state.selectedRecord;if(fieldName===\"button_and\"){selectedRecord[\"groupList\"][index][fieldName]=selectedRecord[\"groupList\"][index][fieldName]===true?false:true;selectedRecord[\"groupList\"][index][\"button_or\"]=false;}else if(fieldName===\"button_or\"){selectedRecord[\"groupList\"][index][fieldName]=selectedRecord[\"groupList\"][index][fieldName]===true?false:true;selectedRecord[\"groupList\"][index][\"button_and\"]=false;// if (selectedRecord[\"groupList\"][index][`notoperator`] && selectedRecord[\"groupList\"][index][`notoperator`] === true) {\n//     selectedRecord[\"groupList\"][index][`notoperator`] = false;\n// }\n}else if(fieldName===\"button_not\"){selectedRecord[\"groupList\"][index][fieldName]=selectedRecord[\"groupList\"][index][fieldName]===true?false:true;}else{}_this.generateFilterQuery(selectedRecord);};_this.onQueryTypeOnclick=function(value){var selectedRecord=_this.state.selectedRecord;selectedRecord[\"selectedQueryType\"]=value;var sqlQuery=false;if(value.value===\"sql\"){sqlQuery=true;}var updateInfo={typeName:DEFAULT_RETURN,data:{sqlQuery:sqlQuery}};_this.props.updateStore(updateInfo);_this.setState({selectedRecord:selectedRecord});};var dataState={skip:0,take:props.settings?parseInt(props.settings[14]):5};var dataStateMain={skip:0,take:props.settings?parseInt(props.settings[14]):5};var dataStateUserQuery={skip:0,take:10};_this.state=(_this$state={selectedRecord:{},error:\"\",// modalIsOpen: false,\nparameters:[],// objparam: [],\n// objDparam: [],\nqueryName:'',// queryResult: [],\nuserRoleControlRights:[],controlMap:new Map(),dataStateUserQuery:dataStateUserQuery,queryTypeName:'',selectedcombo:[],selectedTableType:[],moduleFormName:[],ntableTypeCode:-1,nFormCode:-1,queryType:[],tableType:[],chartList:[],skip:0,take:_this.props.Login.settings?_this.props.Login.settings[3]:25,//tableName : undefined,tableList:[]\noutputColumns:[],selectedTableList:[],tableColumnList:[],foreignTableColumnList:[],joinTableList:[],symbolsList:[],foreignTableList:[],count:0,foreignTableCount:[],selectedforeignTableList:[],filterColumnList:[],sqlQuery:false,// viewColumnList: [],\nswitchRecord:{},dataState:dataState,dataStateMain:dataStateMain,data:[],dataMainList:[],dataResult:[],dataResultMain:[]},_defineProperty(_this$state,\"queryType\",[{squerytypename:_this.props.intl.formatMessage({id:\"IDS_VIEWS\"}),nquerytypecode:1},{squerytypename:_this.props.intl.formatMessage({id:\"IDS_SQL\"}),nquerytypecode:2}]),_defineProperty(_this$state,\"queryTypeOptions\",[{label:_this.props.intl.formatMessage({id:\"IDS_VIEWS\"}),views:1},{label:_this.props.intl.formatMessage({id:\"IDS_SQL\"}),value:2}]),_this$state);_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();// this.dropItemRef = React.createRef(); \n_this.queryFieldList=['nquerytypecode','ssqlqueryname','ssqlquery','sscreenrecordquery','sscreenheader','svaluemember','sdisplaymember','ncharttypecode'];// this.queryList = [];\n_this.searchFieldList=[\"ssqlqueryname\",\"ssqlquery\",\"sscreenheader\",\"svaluemember\",\"sdisplaymember\",\"squerytypename\",\"schartname\"];return _this;}_createClass(QueryBuilder,[{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var filterData=this.state.filterData;if(this.props.Login.queryData!==previousProps.Login.queryData){this.setState({data:this.props.Login.queryData,dataResult:process(this.props.Login.queryData,this.state.dataState)});}if(this.props.Login.masterData.queryDataMain!==previousProps.Login.masterData.queryDataMain){if(this.props.Login.masterData.queryDataMain!==undefined){this.setState({dataMainList:this.props.Login.masterData.queryDataMain,dataResultMain:process(this.props.Login.masterData.queryDataMain===null?[]:this.props.Login.masterData.queryDataMain,this.state.dataStateMain)});}}if(this.props.Login.masterData.queryTypeCode!==previousProps.Login.masterData.queryTypeCode){filterData=this.generateBreadCrumData();this.setState({filterData:filterData});}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({controlMap:controlMap,userRoleControlRights:userRoleControlRights});}}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(){var _this2=this;var breadCrumbData=[];if(this.props.Login.masterData&&this.props.Login.masterData.queryTypeCode){var item=this.state.queryType.filter(function(item){return item.nquerytypecode===_this2.props.Login.masterData.queryTypeCode;});breadCrumbData.push({\"label\":\"IDS_QUERYTYPE\",\"value\":this.props.Login.masterData.queryTypeCode?item[0].squerytypename:\"\"});}return breadCrumbData;}},{key:\"render\",value:function render(){var _this3=this;var addId=this.state.controlMap.has(\"Add QueryBuilder\")&&this.state.controlMap.get(\"Add QueryBuilder\").ncontrolcode;var editId=this.state.controlMap.has(\"Edit QueryBuilder\")&&this.state.controlMap.get(\"Edit QueryBuilder\").ncontrolcode;var deleteId=this.state.controlMap.has(\"Delete QueryBuilder\")&&this.state.controlMap.get(\"Delete QueryBuilder\").ncontrolcode;var breadCrumbData=this.state.filterData||[];var gridColumnListMain=[];if(this.props.Login.masterData&&this.props.Login.masterData.columnList&&this.props.Login.masterData.columnList.length>0){this.props.Login.masterData.columnList.forEach(function(item){gridColumnListMain.push({idsName:item.items.displayname[_this3.props.Login.userInfo.slanguagetypecode],dataField:item.items.columnname,width:'200px'});});}var selectedQueryType=[];if(this.props.Login.masterData&&this.props.Login.masterData.queryTypeCode){selectedQueryType=this.state.queryType.filter(function(item){return item.nquerytypecode===_this3.props.Login.masterData.queryTypeCode;});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},breadCrumbData.length>0?/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(ListMaster,{masterData:this.props.Login.masterData||[],screenName:this.props.intl.formatMessage({id:\"IDS_QUERYBUILDER\"}),masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.queryBuilderList,getMasterDetail:function getMasterDetail(qryBuilder){return _this3.props.getSelectedQueryBuilder(qryBuilder,_this3.props.Login.userInfo,_this3.props.Login.masterData);},selectedMaster:this.props.Login.masterData.selectedQueryBuilder,primaryKeyField:\"nquerybuildercode\",mainField:\"squerybuildername\"//firstField=\"squerybuildername\"\n// secondField={this.state.selectedcombo[\"nquerytypecode\"] && this.state.selectedcombo[\"nquerytypecode\"].value === queryTypeFilter.LIMSDASHBOARDQUERY ? \"schartname\" : \"\"}\n// filterColumnData={this.props.filterColumnData}\n// filterParam={filterParam}\n,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,openModal:this.getDatabaseTables// openModal={() => this.props.getSQLQueryComboService(\"\", \"create\", \"nsqlquerycode\", null,\n//     this.props.Login.masterData, this.props.Login.userInfo,\n//     this.props.Login.masterData.SelectedQueryType.nquerytypecode,                                   \n//     addId)} \n//{() => this.props.addTest(\"create\", selectedTest, userInfo, addId, this.state.nfilterTestCategory)} Already commented\n,needAccordianFilter:false// skip={this.state.skip}\n// take={this.state.take}\n,handlePageChange:this.handlePageChange,showFilterIcon:true,showFilter:this.props.Login.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,showBuildQuery:false,builderData:this.getDatabaseTables,filterComponent:[{\"IDS_QUERYTYPEFILTER\":/*#__PURE__*/React.createElement(QueryTypeFilter,{queryType:this.state.queryTypeOptions||[],selectedRecord:this.state.selectedcombo||{},onComboChange:this.onComboChange,filterQueryType:selectedQueryType[0]})}]})),/*#__PURE__*/React.createElement(Col,{md:\"8\"},/*#__PURE__*/React.createElement(ProductList,{className:\"panel-main-content\"},this.props.Login.masterData.queryBuilderList&&this.props.Login.masterData.queryBuilderList.length>0&&this.props.Login.masterData.selectedQueryBuilder?/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.selectedQueryBuilder.squerybuildername),/*#__PURE__*/React.createElement(ContentPanel,{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(Col,{md:\"6\"}),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\",style:{float:\"right\"}},/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\",id:\"tooltip_list_wrap\"}),/*#__PURE__*/React.createElement(ProductList,{className:\"d-inline dropdown badget_menu\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 \",href:\"#\"// hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\n,\"data-for\":\"tooltip_list_wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_PARAMETERMAPPING\"}),onClick:function onClick(e){return _this3.props.getParameterFromQuery(_this3.props.Login);}},/*#__PURE__*/React.createElement(ParameterConfigurationIcon,{className:\"custom_icons\",width:\"20\",height:\"20\",name:\"configreporticon\"})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"QB\",className:\"btn btn-circle outline-grey mr-2\"// hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),onClick:function onClick(){return _this3.confirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 \",href:\"#\"// hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\n,\"data-for\":\"tooltip_list_wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COPYSQL\"}),onClick:function onClick(){return _this3.copySQLQuery(1);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCopy}))))))),this.props.Login.masterData.queryDataMain&&gridColumnListMain&&gridColumnListMain.length>0?/*#__PURE__*/React.createElement(DataGridComponent,{data:this.state.dataMainList,dataResult:this.state.dataResultMain||[],dataState:this.state.dataStateMain,dataStateChange:this.dataStateChangeMain,extractedColumnList:gridColumnListMain,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,userInfo:this.props.Login.userInfo,pageable:true,scrollable:\"scrollable\",isActionRequired:false,isToolBarRequired:true,isRefreshRequired:false,selectedId:-1}):/*#__PURE__*/React.createElement(React.Fragment,null)):\"\")))),this.props.Login.openPortalModal&&/*#__PURE__*/React.createElement(PortalModalSlideout,{show:this.props.Login.openPortalModal,closeModal:this.closePortalModal,screenName:this.props.Login.screenName,handleSaveClick:this.save,addComponent:/*#__PURE__*/React.createElement(BuildQuery,{selectedRecord:this.state.selectedRecord||{},databaseTableList:this.props.Login.databaseTableList,tableColumnList:this.state.tableColumnList,foreignTableList:this.state.foreignTableList||[],foreignTableColumnList:this.props.Login.foreignTableColumnList||[]// validationData={validationData}\n,count:this.state.count,foreignTableCount:this.state.foreignTableCount,sqlQuery:this.state.sqlQuery,viewMasterListByRule:this.props.Login.viewMasterListByRule||[],userInfo:this.props.Login.userInfo,onExecuteRule:this.onExecuteRule,onInputChange:this.onInputChange,deleteRule:this.deleteRule,clearRule:this.clearRule,resetRule:this.resetRule,onSymbolChange:this.onSymbolChange// onForeignTableChange={this.onForeignTableChange}\n// addJoinTable={this.addJoinTable}\n,onQueryTypeOnclick:this.onQueryTypeOnclick,onRuleChange:this.onRuleChange,onViewComboChange:this.onViewComboChange,addRule:this.addRule,onConditionClick:this.onConditionClick,onMasterDataChange:this.onMasterDataChange,handleFilterDateChange:this.handleFilterDateChange,databaseviewList:this.props.Login.databaseviewList,addRuleList:this.props.Login.addRuleList||[],viewColumnListByRule:this.props.Login.viewColumnListByRule||[],masterdata:this.props.Login.masterdata,switchRecord:this.state.switchRecord,data:this.state.data,dataResult:this.state.dataResult||[],dataState:this.state.dataState,dataStateChange:this.dataStateChange,userRoleControlRights:this.state.userRoleControlRights,gridColumnList:this.props.Login.gridColumnList||[],queryType:this.state.queryType,addAggregate:this.addAggregate,addAggregateList:this.props.Login.addAggregateList||[],onAggregateChange:this.onAggregateChange,deleteAggregate:this.deleteAggregate,addOrderby:this.addOrderby,addOrderbyList:this.props.Login.addOrderbyList||[],onOrderbyChange:this.onOrderbyChange,deleteOrderby:this.deleteOrderby,addGroup:this.addGroup,addGroupList:this.props.Login.addGroupList||[],copySQLQuery:this.copySQLQuery,onFilterComboChange:this.onFilterComboChange})}),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.intl.formatMessage({id:\"IDS_PARAMETERMAPPING\"}),onSaveClick:this.saveParam,selectedRecord:this.state.selectedRecord||{},addComponent:/*#__PURE__*/React.createElement(QueryBuilderParamter,{onParamInputChange:this.onParamInputChange,selectedQueryBuilder:this.props.Login.masterData.selectedQueryBuilder||[],viewMasterData:this.props.Login.viewMasterData||[],comboData:this.props.Login.comboData||[],onParamComboChange:this.onParamComboChange})}));}},{key:\"clearSelectedRule\",value:function clearSelectedRule(selectedRecord,index){selectedRecord[\"sinputname_\"+index]&&delete selectedRecord[\"sinputname_\"+index];selectedRecord[\"ssymbolname_\"+index]&&delete selectedRecord[\"ssymbolname_\"+index];selectedRecord[\"snumericinput_\"+index]&&delete selectedRecord[\"snumericinput_\"+index];selectedRecord[\"columnname_\"+index]&&delete selectedRecord[\"columnname_\"+index];selectedRecord[\"snumericinputtwo_\"+index]&&delete selectedRecord[\"snumericinputtwo_\"+index];selectedRecord[\"dateinput_\"+index]&&delete selectedRecord[\"dateinput_\"+index];selectedRecord[\"dateinputtwo_\"+index]&&delete selectedRecord[\"dateinputtwo_\"+index];}},{key:\"groupByFunction\",value:function groupByFunction(selectedRecord,databaseCondition,displayCondition){var groupByAggregateFields=[];var groupByFields=[];var groupByAggregateFieldsDisplay=[];var groupByFieldsDisplay=[];var orderByDefault=[];var orderByCustom={};var orderByDefaultDisplay=[];var orderByCustomDisplay={};// if (selectedRecord[\"customorderby\"] && selectedRecord[\"customorderby\"] === true) {\nselectedRecord[\"orderby\"]&&selectedRecord[\"orderby\"].forEach(function(data){if(data[\"ordertype\"]&&data[\"ordertype\"].value===2){orderByCustom[data[\"columnname\"].items.columnname]=-1;orderByCustomDisplay[data[\"columnname\"].label]=-1;}else{orderByCustom[data[\"columnname\"].items.columnname]=1;orderByCustomDisplay[data[\"columnname\"].label]=1;}});// } else {\n//     selectedRecord[\"orderby\"] && selectedRecord[\"orderby\"].forEach(data => {\n//         orderByDefault.push(data[\"columnname\"].items.columnname);\n//         orderByDefaultDisplay.push(data[\"columnname\"].label);\n//     })\n// }\n// if (selectedRecord[\"groupby\"] && selectedRecord[\"groupby\"] === true) {\nif(selectedRecord[\"aggregate\"]&&selectedRecord[\"aggregate\"].length>0){selectedRecord[\"aggregate\"].forEach(function(data){if(data[\"aggfunctionname\"]&&data[\"aggfunctionname\"].label!==''){groupByAggregateFields.push({func:{name:data[\"aggfunctionname\"].label,args:[{field:data[\"columnname\"].items.columnname}]},alias:data[\"columnname\"].items.columnname});groupByAggregateFieldsDisplay.push({func:{name:data[\"aggfunctionname\"].label,args:[{field:data[\"columnname\"].label}]}});}else{groupByAggregateFields.push(data[\"columnname\"].items.columnname);groupByFields.push(data[\"columnname\"].items.columnname);groupByAggregateFieldsDisplay.push(data[\"columnname\"].label);groupByFieldsDisplay.push(data[\"columnname\"].label);}});var databaseSQLQuery=jsonSql.build({type:'select',table:selectedRecord[\"sviewname\"].value,fields:groupByAggregateFields,group:groupByFields,sort:selectedRecord[\"orderby\"]&&selectedRecord[\"orderby\"].length>0?orderByCustom:\"\",condition:databaseCondition});var displaySQLQuery=jsonSql.build({type:'select',fields:groupByAggregateFieldsDisplay,group:groupByFieldsDisplay,sort:selectedRecord[\"orderby\"]&&selectedRecord[\"orderby\"].length>0?orderByCustomDisplay:\"\",table:selectedRecord[\"sviewname\"].label,condition:displayCondition});selectedRecord[\"sgeneratedquery\"]=databaseSQLQuery.query;selectedRecord[\"sdisplayquery\"]=displaySQLQuery.query;this.setState({selectedRecord:selectedRecord});}// }\n}}]);return QueryBuilder;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,filterColumnData:filterColumnData,validateEsignCredential:validateEsignCredential,getSQLQueryDetail:getSQLQueryDetail,getSQLQueryComboService:getSQLQueryComboService,comboChangeQueryType:comboChangeQueryType,executeUserQuery:executeUserQuery,comboColumnValues:comboColumnValues,getColumnNamesByTableName:getColumnNamesByTableName,getTablesName:getTablesName,getModuleFormName:getModuleFormName,getDatabaseTables:getDatabaseTables,executeQuery:executeQuery,getForeignTable:getForeignTable,getViewColumns:getViewColumns,getMasterData:getMasterData,createQueryBuilder:createQueryBuilder,getParameterFromQuery:getParameterFromQuery,getSelectedQueryBuilder:getSelectedQueryBuilder,updateQueryBuilder:updateQueryBuilder,getQueryBuilder:getQueryBuilder})(injectIntl(QueryBuilder));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dashboard/QueryBuilder.jsx"],"names":["React","Component","connect","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faTrashAlt","faCopy","process","toast","ListMaster","SlideOutModal","Esign","AddQuery","AddParameter","QueryTypeFilter","callService","crudMaster","validateEsignCredential","updateStore","getSQLQueryDetail","getSQLQueryComboService","filterColumnData","comboChangeQueryType","executeUserQuery","comboColumnValues","getColumnNamesByTableName","getTablesName","getModuleFormName","getDatabaseTables","executeQuery","getForeignTable","getViewColumns","getMasterData","createQueryBuilder","getParameterFromQuery","getSelectedQueryBuilder","updateQueryBuilder","getQueryBuilder","DEFAULT_RETURN","transactionStatus","queryTypeFilter","tableType","ColumnType","constructOptionList","getControlMap","showEsign","ReadOnlyText","ContentPanel","rsapi","ConfirmMessage","Affix","BreadcrumbComponent","ListWrapper","ReactTooltip","PortalModalSlideout","BuildQuery","render","format","ProductList","QueryBuilderParamter","DataGridComponent","stringOperatorData","jsonSql","require","separatedValues","jsonSqlParam","QueryBuilder","props","dataStateChange","event","setState","dataResult","Login","queryData","dataState","dataStateChangeMain","dataResultMain","queryDataMain","dataStateMain","copySQLQuery","type","query","state","selectedRecord","forEach","dataItem","index","items","needmasterdata","mastertablename","replace","valuemember","sforeigncolumnname","undefined","columnname","navigator","clipboard","writeText","masterData","selectedQueryBuilder","value","sdefaultValue","JSON","parse","sdefaultvalue","reloadData","searchRef","current","inputParam","inputData","userInfo","classUrl","methodUrl","saveParam","saveType","formRef","comboData","sqryData","symbolObject","item","trimEnd","columntype","DATATIME","DATE","isInputVisible","symbolType","Date","jsonData","sgeneratedquery","columnList","save","length","jsondata","postParam","i","inputListName","selectedObject","primaryKeyField","viewColumnListByRule","label","displayName","operation","info","intl","formatMessage","id","deleteQB","ncontrolCode","confirmDelete","confirmMessage","confirm","openFilter","showFilter","updateInfo","typeName","data","closeFilter","onFilterSubmit","selectedcombo","console","log","nquerytypecode","queryTypeCode","onFilterComboChange","fieldName","generateFilterQuery","onParamComboChange","onParamInputChange","inputValue","target","test","checked","index1","indexOf","inputname","substr","slice","showInputValue","handleFilterDateChange","dateName","dateValue","groupIndex","onComboChange","onViewComboChange","sviewname","userinfo","onAggregateChange","onRuleChange","clearSelectedRule","sqlQuery","oldselectedRecord","tableData","nflag","displaymember","optionId","viewMasterListByRule","COMBO","stablename","foriegntablename","scolumnname","TEXTINPUT","onMasterDataChange","onOrderbyChange","deleteOrderby","addOrderbyList","splice","addOrderby","arrayLength","viewColumnList","deleteAggregate","addAggregateList","addAggregate","addRule","addRuleList","addGroupList","condition","$and","b","$lt","$eq","sql1","build","table","addGroup","closePortalModal","openPortalModal","count","closeModal","openModal","onExecuteRule","deleteRule","clearRule","resetRule","onSymbolChange","oldSelectedRecord","onInputChange","name","setDialect","databaseCondition","displayCondition","databaseConditionParam","fieldWithValue","notOperator","groupConditionDatabase","groupConditionDatabaseParam","groupConditionDisplay","Array","map","current_button_and","current_button_or","next_button_and","next_button_or","symbolname","symbol","numericinput","columnLabel","columnValue","snumericinputtwo","columnName","dateinput","dateinputtwo","replacewith","push","tempValue","tempValue1","data1","groupByFunction","$not","$or","finalConditionDisplay","finalConditionDatabase","finalConditionDatabaseParam","databaseSQLQuery","displaySQLQuery","fields","fieldList","dbfieldList","groupByAggregateFields","groupByFields","groupByAggregateFieldsDisplay","groupByFieldsDisplay","orderByDefault","orderByCustom","orderByDefaultDisplay","orderByCustomDisplay","func","args","field","alias","databaseSQLQueryParam","group","sort","paramIndex","onConditionClick","onQueryTypeOnclick","skip","take","settings","parseInt","dataStateUserQuery","error","parameters","queryName","userRoleControlRights","controlMap","Map","queryTypeName","selectedTableType","moduleFormName","ntableTypeCode","nFormCode","queryType","chartList","outputColumns","selectedTableList","tableColumnList","foreignTableColumnList","joinTableList","symbolsList","foreignTableList","foreignTableCount","selectedforeignTableList","filterColumnList","switchRecord","dataMainList","squerytypename","views","createRef","queryFieldList","searchFieldList","previousProps","filterData","generateBreadCrumData","nformcode","Object","values","ncontrolcode","breadCrumbData","filter","addId","has","get","editId","deleteId","gridColumnListMain","idsName","displayname","slanguagetypecode","dataField","width","selectedQueryType","searchedData","queryBuilderList","qryBuilder","handlePageChange","queryTypeOptions","squerybuildername","float","e","screenName","databaseTableList","databaseviewList","masterdata","gridColumnList","viewMasterData","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faCopy } from '@fortawesome/free-solid-svg-icons';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport AddQuery from './AddQuery';\r\nimport AddParameter from './AddParameter';\r\nimport QueryTypeFilter from './QueryTypeFilter';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getSQLQueryDetail,\r\n    getSQLQueryComboService, filterColumnData, comboChangeQueryType, executeUserQuery,\r\n    comboColumnValues, getColumnNamesByTableName, getTablesName, getModuleFormName,\r\n    getDatabaseTables, executeQuery, getForeignTable, getViewColumns, getMasterData, createQueryBuilder,\r\n    getParameterFromQuery, getSelectedQueryBuilder, updateQueryBuilder, getQueryBuilder\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus, queryTypeFilter, tableType, ColumnType } from '../../components/Enumeration';\r\nimport { constructOptionList, getControlMap, showEsign } from '../../components/CommonScript';\r\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\r\nimport rsapi from '../../rsapi';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { Affix } from 'rsuite';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport PortalModalSlideout from '../../components/portal-modal/portal-modal-slideout';\r\nimport BuildQuery from './BuildQuery';\r\nimport { render } from '@testing-library/react';\r\nimport { format } from 'date-fns';\r\nimport { ProductList } from '../product/product.styled';\r\nimport QueryBuilderParamter from './QueryBuilderParamter';\r\nimport { ReactComponent as ParameterConfigurationIcon } from '../../assets/image/parameter-configuration.svg';\r\nimport { ReactComponent as ParameterMappingIcon } from '../../assets/image/parameter-mapping.svg';\r\nimport DataGridComponent from '../../components/data-grid/data-grid.component';\r\nimport { stringOperatorData } from './QueryBuilderData';\r\n// import {validationData} from './QueryBuilderData';\r\n\r\nconst jsonSql = require('json-sql')({ separatedValues: false });\r\nconst jsonSqlParam = require('json-sql')({ separatedValues: true });\r\n\r\nclass QueryBuilder extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: props.settings ? parseInt(props.settings[14]) : 5,\r\n        };\r\n        const dataStateMain = {\r\n            skip: 0,\r\n            take: props.settings ? parseInt(props.settings[14]) : 5,\r\n        };\r\n        const dataStateUserQuery = {\r\n            skip: 0,\r\n            take: 10,\r\n        };\r\n\r\n        this.state = ({\r\n            selectedRecord: {},\r\n            error: \"\",\r\n            // modalIsOpen: false,\r\n            parameters: [],\r\n            // objparam: [],\r\n            // objDparam: [],\r\n            queryName: '',\r\n            // queryResult: [],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            dataStateUserQuery: dataStateUserQuery,\r\n            queryTypeName: '',\r\n            selectedcombo: [],\r\n            selectedTableType: [],\r\n            moduleFormName: [],\r\n            ntableTypeCode: -1,\r\n            nFormCode: -1,\r\n            queryType: [],\r\n            tableType: [],\r\n            chartList: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings ?\r\n                this.props.Login.settings[3] : 25, //tableName : undefined,tableList:[]\r\n            outputColumns: [],\r\n            selectedTableList: [],\r\n            tableColumnList: [],\r\n            foreignTableColumnList: [],\r\n            joinTableList: [],\r\n            symbolsList: [],\r\n            foreignTableList: [],\r\n            count: 0,\r\n            foreignTableCount: [],\r\n            selectedforeignTableList: [],\r\n            filterColumnList: [],\r\n            sqlQuery: false,\r\n            // viewColumnList: [],\r\n            switchRecord: {},\r\n            dataState: dataState,\r\n            dataStateMain: dataStateMain,\r\n            data: [],\r\n            dataMainList: [],\r\n            dataResult: [],\r\n            dataResultMain: [],\r\n            queryType: [{ squerytypename: this.props.intl.formatMessage({ id: \"IDS_VIEWS\" }), nquerytypecode: 1 }, { squerytypename: this.props.intl.formatMessage({ id: \"IDS_SQL\" }), nquerytypecode: 2 }],\r\n            queryTypeOptions: [{ label: this.props.intl.formatMessage({ id: \"IDS_VIEWS\" }), views: 1 }, { label: this.props.intl.formatMessage({ id: \"IDS_SQL\" }), value: 2 }]\r\n        });\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        // this.dropItemRef = React.createRef(); \r\n\r\n        this.queryFieldList = ['nquerytypecode', 'ssqlqueryname', 'ssqlquery',\r\n            'sscreenrecordquery', 'sscreenheader', 'svaluemember', 'sdisplaymember', 'ncharttypecode'];\r\n        // this.queryList = [];\r\n\r\n        this.searchFieldList = [\"ssqlqueryname\", \"ssqlquery\", \"sscreenheader\", \"svaluemember\", \"sdisplaymember\",\r\n            \"squerytypename\", \"schartname\"];\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.queryData, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateChangeMain = (event) => {\r\n        this.setState({\r\n            dataResultMain: process(this.props.Login.queryDataMain, event.dataStateMain),\r\n            dataStateMain: event.dataStateMain\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        let { filterData } = this.state;\r\n        if (this.props.Login.queryData !== previousProps.Login.queryData) {\r\n            this.setState({\r\n                data: this.props.Login.queryData,\r\n                dataResult: process(this.props.Login.queryData, this.state.dataState)\r\n            });\r\n        }\r\n        if (this.props.Login.masterData.queryDataMain !== previousProps.Login.masterData.queryDataMain) {\r\n            if (this.props.Login.masterData.queryDataMain !== undefined) {\r\n                this.setState({\r\n                    dataMainList: this.props.Login.masterData.queryDataMain,\r\n                    dataResultMain: process(this.props.Login.masterData.queryDataMain === null ? [] : this.props.Login.masterData.queryDataMain, this.state.dataStateMain)\r\n                });\r\n            }\r\n        }\r\n        if (this.props.Login.masterData.queryTypeCode !== previousProps.Login.masterData.queryTypeCode) {\r\n            filterData = this.generateBreadCrumData();\r\n            this.setState({ filterData });\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ controlMap, userRoleControlRights });\r\n        }\r\n\r\n    }\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.queryTypeCode) {\r\n\r\n            const item = this.state.queryType.filter(item => item.nquerytypecode === this.props.Login.masterData.queryTypeCode);\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_QUERYTYPE\",\r\n                    \"value\": this.props.Login.masterData.queryTypeCode ?\r\n                        item[0].squerytypename : \"\"\r\n                }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n    render() {\r\n        const addId = this.state.controlMap.has(\"Add QueryBuilder\") && this.state.controlMap.get(\"Add QueryBuilder\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"Edit QueryBuilder\") && this.state.controlMap.get(\"Edit QueryBuilder\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"Delete QueryBuilder\") && this.state.controlMap.get(\"Delete QueryBuilder\").ncontrolcode;\r\n        const breadCrumbData = this.state.filterData || [];\r\n        let gridColumnListMain = [];\r\n\r\n        if (this.props.Login.masterData && this.props.Login.masterData.columnList && this.props.Login.masterData.columnList.length > 0) {\r\n            this.props.Login.masterData.columnList.forEach(item => {\r\n                gridColumnListMain.push({ idsName: item.items.displayname[this.props.Login.userInfo.slanguagetypecode], dataField: item.items.columnname, width: '200px' })\r\n            })\r\n        }\r\n        let selectedQueryType = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.queryTypeCode) {\r\n\r\n            selectedQueryType = this.state.queryType.filter(item => item.nquerytypecode === this.props.Login.masterData.queryTypeCode);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    {/* <div className=\"client-listing-wrap mtop-4\"> */}\r\n                    {/* Start of get display*/}\r\n                    <Row noGutters={true}>\r\n                        <Col md=\"4\">\r\n                            <ListMaster\r\n                                masterData={this.props.Login.masterData || []}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_QUERYBUILDER\" })}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.queryBuilderList}\r\n                                getMasterDetail={(qryBuilder) => this.props.getSelectedQueryBuilder(qryBuilder, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedQueryBuilder}\r\n                                primaryKeyField=\"nquerybuildercode\"\r\n                                mainField=\"squerybuildername\"\r\n                                //firstField=\"squerybuildername\"\r\n                                // secondField={this.state.selectedcombo[\"nquerytypecode\"] && this.state.selectedcombo[\"nquerytypecode\"].value === queryTypeFilter.LIMSDASHBOARDQUERY ? \"schartname\" : \"\"}\r\n                                // filterColumnData={this.props.filterColumnData}\r\n                                // filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                openModal={this.getDatabaseTables}\r\n                                // openModal={() => this.props.getSQLQueryComboService(\"\", \"create\", \"nsqlquerycode\", null,\r\n                                //     this.props.Login.masterData, this.props.Login.userInfo,\r\n                                //     this.props.Login.masterData.SelectedQueryType.nquerytypecode,                                   \r\n                                //     addId)} \r\n                                //{() => this.props.addTest(\"create\", selectedTest, userInfo, addId, this.state.nfilterTestCategory)} Already commented\r\n                                needAccordianFilter={false}\r\n                                // skip={this.state.skip}\r\n                                // take={this.state.take}\r\n                                handlePageChange={this.handlePageChange}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showBuildQuery={false}\r\n                                builderData={this.getDatabaseTables}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_QUERYTYPEFILTER\":\r\n                                            <QueryTypeFilter\r\n                                                queryType={this.state.queryTypeOptions || []}\r\n                                                selectedRecord={this.state.selectedcombo || {}}\r\n                                                onComboChange={this.onComboChange}\r\n                                                filterQueryType={selectedQueryType[0]}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md=\"8\">\r\n                            <ProductList className=\"panel-main-content\">\r\n                                {this.props.Login.masterData.queryBuilderList && this.props.Login.masterData.queryBuilderList.length > 0 && this.props.Login.masterData.selectedQueryBuilder ?\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedQueryBuilder.squerybuildername}</Card.Title>\r\n                                            <ContentPanel className=\"d-flex product-category\">\r\n                                                <Col md='6' >\r\n                                                    {/* {this.props.Login.masterData.selectedQueryBuilder.squerybuildername} */}\r\n\r\n                                                </Col>\r\n                                                <Col md='6'>\r\n                                                    <div className=\"d-flex product-category\" style={{ float: \"right\" }}>\r\n                                                        <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n                                                        <ProductList className=\"d-inline dropdown badget_menu\">\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2 \" href=\"#\"\r\n                                                                // hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_PARAMETERMAPPING\" })}\r\n                                                                onClick={(e) => this.props.getParameterFromQuery(this.props.Login)}\r\n                                                            >\r\n                                                                {/* <FontAwesomeIcon icon={faPencilAlt} className=\"ActionIconColor\"/> */}\r\n                                                                <ParameterConfigurationIcon className=\"custom_icons\" width=\"20\" height=\"20\" name=\"configreporticon\" />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link name=\"QB\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                // hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                onClick={() => this.confirmDelete(deleteId)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2 \" href=\"#\"\r\n                                                                // hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_COPYSQL\" })}\r\n                                                                onClick={() => this.copySQLQuery(1)}\r\n                                                            >\r\n\r\n                                                                <FontAwesomeIcon icon={faCopy} />\r\n                                                            </Nav.Link>\r\n                                                        </ProductList>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </ContentPanel>\r\n                                        </Card.Header>\r\n                                        {this.props.Login.masterData.queryDataMain && gridColumnListMain && gridColumnListMain.length > 0 ?\r\n                                            <DataGridComponent\r\n                                                data={this.state.dataMainList}\r\n                                                dataResult={this.state.dataResultMain || []}\r\n                                                dataState={this.state.dataStateMain}\r\n                                                dataStateChange={this.dataStateChangeMain}\r\n                                                extractedColumnList={gridColumnListMain}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                pageable={true}\r\n                                                scrollable={\"scrollable\"}\r\n                                                isActionRequired={false}\r\n                                                isToolBarRequired={true}\r\n                                                isRefreshRequired={false}\r\n                                                selectedId={-1}\r\n                                            />\r\n                                            : <></>\r\n                                        }\r\n                                    </Card>\r\n                                    : \"\"}\r\n\r\n                            </ProductList>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n\r\n                {\r\n                    this.props.Login.openPortalModal &&\r\n                    <PortalModalSlideout\r\n                        show={this.props.Login.openPortalModal}\r\n                        closeModal={this.closePortalModal}\r\n                        screenName={this.props.Login.screenName}\r\n                        handleSaveClick={this.save}\r\n                        addComponent={\r\n                            <BuildQuery\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                databaseTableList={this.props.Login.databaseTableList}\r\n                                tableColumnList={this.state.tableColumnList}\r\n                                foreignTableList={this.state.foreignTableList || []}\r\n                                foreignTableColumnList={this.props.Login.foreignTableColumnList || []}\r\n                                // validationData={validationData}\r\n                                count={this.state.count}\r\n                                foreignTableCount={this.state.foreignTableCount}\r\n                                sqlQuery={this.state.sqlQuery}\r\n                                viewMasterListByRule={this.props.Login.viewMasterListByRule || []}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                onExecuteRule={this.onExecuteRule}\r\n                                onInputChange={this.onInputChange}\r\n                                deleteRule={this.deleteRule}\r\n                                clearRule={this.clearRule}\r\n                                resetRule={this.resetRule}\r\n                                onSymbolChange={this.onSymbolChange}\r\n                                // onForeignTableChange={this.onForeignTableChange}\r\n                                // addJoinTable={this.addJoinTable}\r\n                                onQueryTypeOnclick={this.onQueryTypeOnclick}\r\n\r\n                                onRuleChange={this.onRuleChange}\r\n                                onViewComboChange={this.onViewComboChange}\r\n                                addRule={this.addRule}\r\n                                onConditionClick={this.onConditionClick}\r\n                                onMasterDataChange={this.onMasterDataChange}\r\n                                handleFilterDateChange={this.handleFilterDateChange}\r\n                                databaseviewList={this.props.Login.databaseviewList}\r\n                                addRuleList={this.props.Login.addRuleList || []}\r\n                                viewColumnListByRule={this.props.Login.viewColumnListByRule || []}\r\n                                masterdata={this.props.Login.masterdata}\r\n                                switchRecord={this.state.switchRecord}\r\n                                data={this.state.data}\r\n                                dataResult={this.state.dataResult || []}\r\n                                dataState={this.state.dataState}\r\n                                dataStateChange={this.dataStateChange}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                gridColumnList={this.props.Login.gridColumnList || []}\r\n                                queryType={this.state.queryType}\r\n                                addAggregate={this.addAggregate}\r\n                                addAggregateList={this.props.Login.addAggregateList || []}\r\n                                onAggregateChange={this.onAggregateChange}\r\n                                deleteAggregate={this.deleteAggregate}\r\n                                addOrderby={this.addOrderby}\r\n                                addOrderbyList={this.props.Login.addOrderbyList || []}\r\n                                onOrderbyChange={this.onOrderbyChange}\r\n                                deleteOrderby={this.deleteOrderby}\r\n                                addGroup={this.addGroup}\r\n                                addGroupList={this.props.Login.addGroupList || []}\r\n                                copySQLQuery={this.copySQLQuery}\r\n                                onFilterComboChange={this.onFilterComboChange}\r\n                            />\r\n                        }\r\n                    />\r\n                }\r\n\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.intl.formatMessage({ id: \"IDS_PARAMETERMAPPING\" })}\r\n                        onSaveClick={this.saveParam}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={\r\n                            <QueryBuilderParamter\r\n                                onParamInputChange={this.onParamInputChange}\r\n                                selectedQueryBuilder={this.props.Login.masterData.selectedQueryBuilder || []}\r\n                                viewMasterData={this.props.Login.viewMasterData || []}\r\n                                comboData={this.props.Login.comboData || []}\r\n                                onParamComboChange={this.onParamComboChange}\r\n                            />\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n    copySQLQuery = (type) => {\r\n        if (type === 2) {\r\n\r\n            let query = this.state.selectedRecord[\"squerywithparam\"] || \"\";\r\n\r\n            if (this.state.selectedRecord[\"sdefaultvalue\"] && this.state.selectedRecord[\"sdefaultvalue\"]) {\r\n                this.state.selectedRecord[\"sdefaultvalue\"].forEach((dataItem, index) => {\r\n\r\n                    if (dataItem.items.needmasterdata && dataItem.items.mastertablename) {\r\n\r\n                        query = query.replace(\"$p\" + (index + 1), \"P$\" + dataItem.items.valuemember + \"$P\");\r\n                    }\r\n                    else if (dataItem.items.sforeigncolumnname !== undefined &&\r\n                        dataItem.items.sforeigncolumnname !== \"\") {\r\n                        query = query.replace(\"$p\" + (index + 1), \"P$\" + dataItem.items.sforeigncolumnname + \"$P\");\r\n                    } else {\r\n                        query = query.replace(\"$p\" + (index + 1), \"P$\" + dataItem.items.columnname + \"$P\");\r\n                    }\r\n                })\r\n            }\r\n            navigator.clipboard.writeText(query);\r\n\r\n        } else {\r\n            let query = this.props.Login.masterData.selectedQueryBuilder[\"squerywithparam\"] || \"\";\r\n\r\n            if (this.props.Login.masterData.selectedQueryBuilder[\"sdefaultvalue\"] && this.props.Login.masterData.selectedQueryBuilder[\"sdefaultvalue\"].value) {\r\n                const sdefaultValue = JSON.parse(this.props.Login.masterData.selectedQueryBuilder[\"sdefaultvalue\"].value);\r\n\r\n                sdefaultValue.sdefaultvalue.forEach((dataItem, index) => {\r\n                    if (dataItem.items.needmasterdata && dataItem.items.mastertablename) {\r\n\r\n                        query = query.replace(\"$p\" + (index + 1), \"P$\" + dataItem.items.valuemember + \"$P\");\r\n                    }\r\n                    else if (dataItem.items.sforeigncolumnname !== undefined &&\r\n                        dataItem.items.sforeigncolumnname !== \"\") {\r\n                        query = query.replace(\"$p\" + (index + 1), \"P$\" + dataItem.items.sforeigncolumnname + \"$P\");\r\n                    } else {\r\n                        query = query.replace(\"$p\" + (index + 1), \"P$\" + dataItem.items.columnname + \"$P\");\r\n                    }\r\n                })\r\n            }\r\n            navigator.clipboard.writeText(query);\r\n        }\r\n\r\n\r\n    }\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"querybuilder\",\r\n            methodUrl: \"QueryBuilder\",\r\n            // displayName: \"IDS_DASHBOARDTYPES\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    saveParam = (saveType, formRef) => {\r\n\r\n        let query = this.props.Login.masterData.selectedQueryBuilder[\"squerywithparam\"];\r\n\r\n        this.props.Login.comboData.sdefaultvalue.forEach((dataItem, index) => {\r\n\r\n            if (dataItem.items.needmasterdata && dataItem.items.mastertablename) {\r\n\r\n                let sqryData = \"\";\r\n                if (dataItem.symbolObject.items[\"ismulti\"] && dataItem.symbolObject.items[\"ismulti\"] === true) {\r\n\r\n                    dataItem.value.forEach(item => {\r\n                        sqryData += item.value + \",\";\r\n                    })\r\n\r\n                    query = query.replace(\"$p\" + (index + 1), sqryData.trimEnd(\",\"));\r\n                } else {\r\n                    query = query.replace(\"$p\" + (index + 1), dataItem.value.value);\r\n                }\r\n\r\n\r\n            } else if (dataItem.items.sforeigncolumnname !== undefined &&\r\n                dataItem.items.sforeigncolumnname !== \"\") {\r\n\r\n                query = query.replace(\"$p\" + (index + 1), dataItem.value.value);\r\n\r\n            } else if (dataItem.items.columntype === ColumnType.DATATIME\r\n                || dataItem.items.columntype === ColumnType.DATE && dataItem.symbolObject.items.isInputVisible === true\r\n                && (dataItem.symbolObject.items.symbolType === 5 || dataItem.symbolObject.items.symbolType === 1)) {\r\n\r\n                query = query.replace(\"$p\" + (index + 1), \"'\" + format(new Date(dataItem.value), \"yyyy-MM-dd HH:mm:ss.SS\") + \"'\");\r\n\r\n\r\n            } else {\r\n                query = query.replace(\"$p\" + (index + 1), \"'\" + dataItem.value + \"'\");\r\n            }\r\n        })\r\n\r\n        const jsonData = JSON.parse(this.props.Login.masterData.selectedQueryBuilder[\"jsondata\"].value);\r\n        const inputParam = {\r\n            sgeneratedquery: query,\r\n            columnList: jsonData[\"columnList\"],\r\n            userInfo: this.props.Login.userInfo,\r\n\r\n        }\r\n        let inputData = [];\r\n        // inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        // inputData[\"queryBuilder\"] = { \"nstatus\": 1 };\r\n        // inputData[\"queryBuilder\"][\"nquerybuildercode\"] = this.props.Login.masterData.selectedQueryBuilder[\"nquerybuildercode\"]\r\n        // inputData[\"queryBuilder\"][\"sdefaultvalue\"] = comboData;\r\n\r\n        this.props.updateQueryBuilder(inputParam, inputData, this.props.Login.masterData);\r\n\r\n    }\r\n    save = (saveType, formRef) => {\r\n        const { selectedRecord } = this.state;\r\n        if (selectedRecord[\"filtercolumns\"] && selectedRecord[\"filtercolumns\"].length > 0) {\r\n\r\n            let inputData = [];\r\n            let jsondata = {}\r\n            let postParam = undefined;\r\n\r\n            if (selectedRecord[\"sdefaultvalue\"].length > 0) {\r\n                selectedRecord[\"sdefaultvalue\"].forEach((item, i) => {\r\n                    if (item.symbolObject.items.symbolType === 4) {\r\n                        delete item.symbolObject.items[\"replacewith\"];\r\n                    }\r\n                })\r\n            }\r\n\r\n\r\n            postParam = { inputListName: \"QueryBuilder\", selectedObject: \"selectedQueryBuilder\", primaryKeyField: \"nquerybuildercode\" };\r\n\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"queryBuilder\"] = { \"nstatus\": 1 };\r\n\r\n            jsondata[\"groupList\"] = selectedRecord[\"groupList\"];\r\n            jsondata[\"aggregate\"] = selectedRecord[\"aggregate\"];\r\n            jsondata[\"orderby\"] = selectedRecord[\"orderby\"];\r\n            jsondata[\"columnList\"] = this.props.Login.viewColumnListByRule;\r\n            inputData[\"sgeneratedquery\"] = selectedRecord[\"sgeneratedquery\"];\r\n\r\n\r\n            inputData[\"queryBuilder\"][\"squerybuildername\"] = selectedRecord[\"querybuildername\"];\r\n            inputData[\"queryBuilder\"][\"nquerytype\"] = 1;\r\n            inputData[\"queryBuilder\"][\"sviewname\"] = selectedRecord[\"sviewname\"].label;\r\n            inputData[\"queryBuilder\"][\"squerywithparam\"] = selectedRecord[\"squerywithparam\"];\r\n            inputData[\"queryBuilder\"][\"squerywithvalue\"] = selectedRecord[\"sgeneratedquery\"];\r\n            inputData[\"queryBuilder\"][\"sdefaultvalue\"] = { sdefaultvalue: selectedRecord[\"sdefaultvalue\"] };\r\n            inputData[\"queryBuilder\"][\"jsondata\"] = jsondata;\r\n\r\n            const inputParam = {\r\n                classUrl: \"querybuilder\",\r\n                methodUrl: \"QueryBuilder\",\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                operation: \"create\", saveType, formRef, postParam\r\n            }\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openPortalModal\");\r\n            // this.props.createQueryBuilder(inputData, this.props.Login);\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYCOLUMNS\" }));\r\n        }\r\n    }\r\n    deleteQB = (ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        // let postParam = {\r\n        //     inputListName: \"QueryBuilder\",\r\n        //     selectedObject: \"selectedDashBoardTypes\",\r\n        //     primaryKeyField: \"ndashboardtypecode\",\r\n        //     primaryKeyValue: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n        //     fetchUrl: \"dashboardtypes/getAllSelectionDashBoardTypes\",\r\n        //     fecthInputObject: { userinfo: this.props.Login.userInfo }\r\n        // };\r\n        inputData[\"queryBuilder\"] = this.props.Login.masterData.selectedQueryBuilder;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n\r\n        const inputParam = {\r\n            methodUrl: \"QueryBuilder\",\r\n            classUrl: \"querybuilder\",\r\n            inputData: inputData,\r\n            operation: \"delete\", searchRef: this.searchRef\r\n        }\r\n\r\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n\r\n    }\r\n\r\n    confirmDelete = (ncontrolCode) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\",\r\n            this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteQB(\"delete\", ncontrolCode));\r\n    };\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n\r\n        this.searchRef.current.value = \"\";\r\n\r\n        if (this.state.selectedcombo[\"nquerytypecode\"]) {\r\n            console.log(this.state.selectedcombo[\"nquerytypecode\"].value);\r\n        }\r\n        const nquerytypecode = this.state.selectedcombo[\"nquerytypecode\"] ?\r\n            this.state.selectedcombo[\"nquerytypecode\"].value : this.props.Login.masterData.queryTypeCode;\r\n\r\n        this.props.getQueryBuilder(nquerytypecode, this.props.Login.userInfo, this.props.Login.masterData);\r\n\r\n\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n    onParamComboChange = (data, index) => {\r\n\r\n        let comboData = this.props.Login.comboData;\r\n        comboData[\"sdefaultvalue\"][index].value = data;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                comboData\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onParamInputChange = (event, type, index, dataItem) => {\r\n        let comboData = this.props.Login.comboData;\r\n        if (type === 2) {\r\n            const inputValue = event.target.value;\r\n            if (/^-?\\d*?\\.?\\d*?$/.test(inputValue) || inputValue === \"\") {\r\n                comboData[\"sdefaultvalue\"][index].value = event.target.value;\r\n            }\r\n        }\r\n        else if (type === 1) {\r\n            comboData[\"sdefaultvalue\"][index].value = event.target.checked;\r\n        }\r\n        else if (type === 3) {\r\n\r\n            if (dataItem.symbolObject.items.symbolType === 4) {\r\n                // const symbolObject = stringOperatorData.filter(data => data.value === dataItem.symbolObject.value);\r\n                let symbolObject = \"\"\r\n                if (dataItem.symbolObject.value === 7 || dataItem.symbolObject.value === 8) {\r\n                    symbolObject = \"'%_%'\";\r\n                } else if (dataItem.symbolObject.value === 9) {\r\n                    symbolObject = \"'_%'\";\r\n                } else {\r\n                    symbolObject = \"'%_'\";\r\n                }\r\n                const index1 = symbolObject.indexOf('_');\r\n                let inputname = undefined\r\n\r\n                inputname = symbolObject.substr(0, index1) + event.target.value + symbolObject.substr(index1 + 1);\r\n                inputname = inputname.slice(1, inputname.length - 1);\r\n\r\n                comboData[\"sdefaultvalue\"][index].value = inputname;\r\n                comboData[\"sdefaultvalue\"][index].showInputValue = event.target.value;\r\n            } else {\r\n                comboData[\"sdefaultvalue\"][index].value = event.target.value;\r\n            }\r\n        }\r\n        else {\r\n\r\n\r\n            comboData[\"sdefaultvalue\"][index].value = event.target.value;\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                comboData\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    handleFilterDateChange = (dateName, dateValue, groupIndex, index) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[\"groupList\"][groupIndex][index][dateName] = dateValue;\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedcombo = this.state.selectedcombo || {};\r\n        selectedcombo[fieldName] = comboData;\r\n\r\n        this.setState({ selectedcombo });\r\n    }\r\n\r\n    onViewComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        const inputParam = {\r\n            sviewname: comboData.value,\r\n            selectedRecord,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.getViewColumns(inputParam);\r\n    }\r\n\r\n    onAggregateChange = (comboData, fieldName, index) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[\"aggregate\"] = selectedRecord[\"aggregate\"] || [];\r\n        if (fieldName === \"columnname\") {\r\n            selectedRecord[\"aggregate\"][index] = { \"columnname\": comboData, \"aggfunctionname\": \"\" };\r\n        } else {\r\n            if (selectedRecord[\"aggregate\"][index][\"columnname\"] && selectedRecord[\"aggregate\"][index][\"columnname\"] !== undefined) {\r\n                selectedRecord[\"aggregate\"][index][\"aggfunctionname\"] = comboData;\r\n            }\r\n            else {\r\n\r\n            }\r\n        }\r\n\r\n        // this.setState({ selectedRecord });\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n    onRuleChange = (comboData, fieldName, groupIndex, index) => {\r\n        const { selectedRecord } = this.state;\r\n        this.clearSelectedRule(selectedRecord, index);\r\n        const sqlQuery = this.props.Login.sqlQuery;\r\n        const oldselectedRecord = selectedRecord;\r\n        selectedRecord[\"groupList\"][groupIndex][index][fieldName] = comboData;\r\n        const tableData = comboData.items;\r\n        const mastertablename = tableData.mastertablename;\r\n\r\n        if (comboData.items.needmasterdata && mastertablename) {\r\n            const inputParam = {\r\n                userinfo: this.props.Login.userInfo,\r\n                data: {\r\n                    nflag: 2,\r\n                    mastertablename,\r\n                    valuemember: tableData.valuemember,\r\n                    displaymember: tableData.displaymember,\r\n                },\r\n                selectedRecord,\r\n                groupIndex,\r\n                index,\r\n                optionId: tableData.valuemember\r\n            };\r\n            this.props.getMasterData(inputParam, this.props.Login.viewMasterListByRule);\r\n        } else if (comboData.items && comboData.items.columntype === ColumnType.COMBO) {\r\n            if (sqlQuery) {\r\n                const inputParam = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    stablename: comboData.items.foriegntablename,\r\n                    scolumnname: comboData.value,\r\n                    selectedRecord,\r\n                    groupIndex,\r\n                    index\r\n                };\r\n                this.props.getForeignTable(inputParam, 'column');\r\n            } else {\r\n                selectedRecord[\"groupList\"][groupIndex][index][`${comboData.items.sforeigncolumnname}`] = \"\";\r\n                const inputParam = {\r\n                    data: { ...comboData.items, nflag: 1 },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    selectedRecord,\r\n                    groupIndex,\r\n                    index,\r\n                    optionId: comboData.items.sforeigncolumnname\r\n                };\r\n                this.props.getMasterData(inputParam, this.props.Login.viewMasterListByRule);\r\n            }\r\n        } else if (comboData.items && comboData.items.columntype === ColumnType.TEXTINPUT\r\n            && oldselectedRecord[\"groupList\"][groupIndex][index][fieldName].items.columntype !== ColumnType.TEXTINPUT) {\r\n            selectedRecord[\"groupList\"][groupIndex][index][\"sinputname\"] = \"\";\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n    onMasterDataChange = (comboData, fieldName, groupIndex, index) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[\"groupList\"][groupIndex][index][fieldName] = comboData;\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n    onOrderbyChange = (comboData, fieldName, index) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[\"orderby\"] = selectedRecord[\"orderby\"] || [];\r\n        if (fieldName === \"columnname\") {\r\n            selectedRecord[\"orderby\"][index] = { \"columnname\": comboData, \"ordertype\": \"\" };\r\n        } else {\r\n            if (selectedRecord[\"orderby\"][index][\"columnname\"] && selectedRecord[\"orderby\"][index][\"columnname\"] !== undefined) {\r\n                selectedRecord[\"orderby\"][index][\"ordertype\"] = comboData;\r\n            }\r\n            else {\r\n\r\n            }\r\n        }\r\n\r\n        // this.setState({ selectedRecord });\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n    deleteOrderby = (index) => {\r\n        let addOrderbyList = this.props.Login.addOrderbyList;\r\n        let selectedRecord = this.state.selectedRecord;\r\n\r\n        selectedRecord[\"orderby\"].splice(index, 1);\r\n        addOrderbyList.splice(index, 1);\r\n        addOrderbyList.forEach((data, index) => {\r\n            addOrderbyList[index] = index;\r\n        })\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { addOrderbyList }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n    addOrderby = () => {\r\n\r\n        const { selectedRecord } = this.state;\r\n        if (selectedRecord[\"sviewname\"]) {\r\n            const addOrderbyList = this.props.Login.addOrderbyList || [];\r\n            let viewColumnListByRule = this.props.Login.viewColumnListByRule || [];\r\n            const arrayLength = addOrderbyList.length;\r\n            viewColumnListByRule = this.props.Login.viewColumnList;\r\n            addOrderbyList[arrayLength] = arrayLength;\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    addOrderbyList,\r\n                    viewColumnListByRule\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTVIEW\" }));\r\n        }\r\n    }\r\n    deleteAggregate = (index) => {\r\n        let addAggregateList = this.props.Login.addAggregateList;\r\n        let selectedRecord = this.state.selectedRecord;\r\n\r\n        selectedRecord[\"aggregate\"].splice(index, 1);\r\n        addAggregateList.splice(index, 1);\r\n        addAggregateList.forEach((data, index) => {\r\n            addAggregateList[index] = index;\r\n        })\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { addAggregateList }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        // this.setState({ selectedRecord });\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n    addAggregate = () => {\r\n\r\n        const { selectedRecord } = this.state;\r\n        if (selectedRecord[\"sviewname\"]) {\r\n            // if (selectedRecord[\"groupby\"] && selectedRecord[\"groupby\"] === true) {\r\n            const addAggregateList = this.props.Login.addAggregateList || [];\r\n            let viewColumnListByRule = this.props.Login.viewColumnListByRule || [];\r\n            const arrayLength = addAggregateList.length;\r\n            viewColumnListByRule = this.props.Login.viewColumnList;\r\n            addAggregateList[arrayLength] = arrayLength;\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    addAggregateList,\r\n                    viewColumnListByRule\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n            // } else {\r\n            //     toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTGROUPBY\" }));\r\n            // }\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTVIEW\" }));\r\n        }\r\n    }\r\n    addRule = (type, groupIndex) => {\r\n        const { selectedRecord } = this.state;\r\n        if (type === \"sql\") {\r\n            let addRuleList = this.props.Login.addRuleList || [];\r\n            if (addRuleList.length > 0) {\r\n                const arrayLength = addRuleList.length;\r\n                addRuleList[arrayLength] = arrayLength;\r\n                selectedRecord[\"button_and_\" + arrayLength] = true;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        addRuleList,\r\n                        selectedRecord\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                addRuleList[0] = 0;\r\n                this.props.getDatabaseTables(this.props.Login.userInfo, this.props.Login.sqlQuery, { addRuleList, selectedRecord: {} });\r\n            }\r\n        } else {\r\n            if (selectedRecord[\"sviewname\"]) {\r\n                let viewColumnListByRule = this.props.Login.viewColumnListByRule || [];\r\n\r\n\r\n                // const addRuleList = this.props.Login.addRuleList || [];\r\n                // const arrayLength = addRuleList.length;\r\n                // addRuleList[arrayLength] = arrayLength;\r\n\r\n\r\n                const addGroupList = this.props.Login.addGroupList || [];\r\n                const arrayLength = addGroupList[groupIndex];\r\n                addGroupList[groupIndex] = arrayLength + 1;\r\n\r\n                // const addGroupList = {...this.props.Login.addGroupList, [groupIndex]: addRuleList};\r\n\r\n                selectedRecord[\"groupList\"][groupIndex][arrayLength] = {};\r\n\r\n                // viewColumnListByRule[groupIndex][arrayLength] = this.props.Login.viewColumnList;\r\n                viewColumnListByRule = this.props.Login.viewColumnList;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        addGroupList,\r\n                        viewColumnListByRule\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTVIEW\" }));\r\n            }\r\n        }\r\n\r\n        let condition = [];\r\n        condition = [{\r\n            $and: [\r\n                { $and: [{ b: { $lt: 10 } }] },\r\n                {\r\n                    // $not: [{\r\n                    $and: [\r\n                        { \"naccredited\": { $eq: 70 } },\r\n                        { \"naccredited\": { $eq: 71 } }\r\n                    ]\r\n                    // }]\r\n                }\r\n            ]\r\n        }]\r\n        var sql1 = jsonSql.build({\r\n            table: 'table',\r\n            condition: condition\r\n            // [{\r\n            //     // $not: [{\r\n            //     $and: [\r\n            //         { b: { $lt: 10 } }, { b: { $lt: 10 } },\r\n            //         {\r\n            //             // $not: [{\r\n            //                 $and: [\r\n            //                     { \"naccredited\": { $eq: 70 } },\r\n            //                     { \"naccredited\": { $eq: 71 } }\r\n            //                 ]\r\n            //             // }]\r\n            //         }\r\n            //         // {\r\n            //         //     $or: [\r\n            //         //         { \"naccredited\": { $eq: 70 } },\r\n            //         //         { \"naccredited\": { $eq: 71 } }\r\n            //         //     ]\r\n            //         // },\r\n            //         // {\r\n            //         //     $or: [\r\n            //         //         { \"nacc\": { $eq: 70 } },\r\n            //         //         { \"nacc\": { $eq: 70 } },\r\n            //         //         {\r\n            //         //             $not: [{\r\n            //         //                 $or: [\r\n            //         //                     { \"naccredited1\": { $eq: 71 } }]\r\n            //         //             }]\r\n            //         //         }\r\n            //         //     ]\r\n            //         // },\r\n            //         // { ab: { $gt: 2 } },\r\n            //         // {\r\n            //         //     $and: [\r\n            //         //         { \"naccredited\": { $eq: 70 } },\r\n            //         //         { \"naccredited\": { $eq: 71 } },\r\n            //         //         {\r\n            //         //             $not: [{\r\n            //         //                 $and: [\r\n            //         //                     { \"naccredited1\": { $eq: 71 } },\r\n            //         //                     { \"naccredited2\": { $eq: 71 } }]\r\n            //         //             }]\r\n            //         //         }\r\n            //         //     ]\r\n            //         // }\r\n            //     ]\r\n            //     // }]\r\n            // }]\r\n        });\r\n        console.log(sql1.query);\r\n    }\r\n\r\n    addGroup = () => {\r\n        const { selectedRecord } = this.state;\r\n        if (selectedRecord[\"sviewname\"]) {\r\n            let viewColumnListByRule = this.props.Login.viewColumnListByRule || [];\r\n            const addGroupList = this.props.Login.addGroupList || [];\r\n            const arrayLength = addGroupList.length;\r\n            addGroupList[arrayLength] = 1;\r\n            // viewColumnListByRule[arrayLength] = [];\r\n            // viewColumnListByRule[arrayLength].push(this.props.Login.viewColumnList);\r\n            viewColumnListByRule = this.props.Login.viewColumnList;\r\n            if (arrayLength === 0) {\r\n                selectedRecord[\"groupList\"] = [];\r\n                selectedRecord[\"filtercolumns\"] = viewColumnListByRule;\r\n            }\r\n            selectedRecord[\"groupList\"][arrayLength] = [];\r\n            selectedRecord[\"groupList\"][arrayLength][\"button_and\"] = true;\r\n            selectedRecord[\"groupList\"][arrayLength][0] = {};\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    addGroupList,\r\n                    viewColumnListByRule,\r\n                    selectedRecord\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTVIEW\" }));\r\n        }\r\n    }\r\n    getDatabaseTables = () => {\r\n        const sqlQuery = false;\r\n        this.setState({ selectedRecord: {} });\r\n        this.props.getDatabaseTables(this.props.Login.userInfo, sqlQuery, {\r\n            addRuleList: [], addGroupList: [],\r\n            addAggregateList: [], addOrderbyList: []\r\n        });\r\n\r\n    }\r\n\r\n    closePortalModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openPortalModal: false, selectedRecord: {}, addRuleList: [], count: 0\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    closeModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal: false, selectedRecord: {}\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onExecuteRule = () => {\r\n        const { selectedRecord } = this.state;\r\n        if (selectedRecord[\"sgeneratedquery\"]) {\r\n\r\n\r\n            let query = selectedRecord[\"squerywithparam\"];\r\n\r\n            selectedRecord[\"sdefaultvalue\"].forEach((dataItem, index) => {\r\n\r\n                if (dataItem.items.needmasterdata && dataItem.items.mastertablename) {\r\n\r\n                    let sqryData = \"\";\r\n                    if (dataItem.symbolObject.items[\"ismulti\"] && dataItem.symbolObject.items[\"ismulti\"] === true) {\r\n\r\n                        dataItem.value.forEach(item => {\r\n                            sqryData += item.value + \",\";\r\n                        })\r\n\r\n                        query = query.replace(\"$p\" + (index + 1), sqryData.trimEnd(\",\"));\r\n                    } else {\r\n                        query = query.replace(\"$p\" + (index + 1), dataItem.value.value);\r\n                    }\r\n\r\n\r\n                } else if (dataItem.items.sforeigncolumnname !== undefined &&\r\n                    dataItem.items.sforeigncolumnname !== \"\") {\r\n\r\n                    query = query.replace(\"$p\" + (index + 1), dataItem.value.value);\r\n\r\n                } else if (dataItem.items.columntype === ColumnType.DATATIME\r\n                    || dataItem.items.columntype === ColumnType.DATE && dataItem.symbolObject.items.isInputVisible === true\r\n                    && (dataItem.symbolObject.items.symbolType === 5 || dataItem.symbolObject.items.symbolType === 1)) {\r\n\r\n                    query = query.replace(\"$p\" + (index + 1), \"'\" + format(new Date(dataItem.value), \"yyyy-MM-dd HH:mm:ss.SS\") + \"'\");\r\n\r\n\r\n                } else {\r\n                    query = query.replace(\"$p\" + (index + 1), \"'\" + dataItem.value + \"'\");\r\n                }\r\n            });\r\n            const inputParam = {\r\n                sgeneratedquery: query,//selectedRecord[\"sgeneratedquery\"],\r\n                selectedRecord,\r\n                columnList: selectedRecord[\"filtercolumns\"] && selectedRecord[\"filtercolumns\"] || this.props.Login.viewColumnListByRule,\r\n                userInfo: this.props.Login.userInfo,\r\n\r\n            }\r\n            this.props.executeQuery(inputParam);\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_QUERYNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    deleteRule = (groupIndex, index) => {\r\n        let addGroupList = this.props.Login.addGroupList;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        addGroupList[groupIndex] = addGroupList[groupIndex] - 1;\r\n        // selectedRecord[`button_and_${index}`] && delete selectedRecord[`button_and_${index}`];\r\n        // selectedRecord[`button_or_${index}`] && delete selectedRecord[`button_or_${index}`];\r\n        // selectedRecord[`notoperator_${index}`] && delete selectedRecord[`notoperator_${index}`];\r\n\r\n        if (addGroupList[groupIndex] === 0) {\r\n            addGroupList.splice(groupIndex, 1);\r\n            selectedRecord[\"groupList\"].splice(index, 1);\r\n        } else {\r\n            selectedRecord[\"groupList\"][groupIndex].splice(index, 1);\r\n        }\r\n\r\n        // this.clearSelectedRule(selectedRecord, index);\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { addGroupList, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    clearSelectedRule(selectedRecord, index) {\r\n        selectedRecord[\"sinputname_\" + index] && delete selectedRecord[\"sinputname_\" + index];\r\n        selectedRecord[\"ssymbolname_\" + index] && delete selectedRecord[\"ssymbolname_\" + index];\r\n        selectedRecord[\"snumericinput_\" + index] && delete selectedRecord[\"snumericinput_\" + index];\r\n        selectedRecord[\"columnname_\" + index] && delete selectedRecord[\"columnname_\" + index];\r\n        selectedRecord[\"snumericinputtwo_\" + index] && delete selectedRecord[\"snumericinputtwo_\" + index];\r\n        selectedRecord[\"dateinput_\" + index] && delete selectedRecord[\"dateinput_\" + index];\r\n        selectedRecord[\"dateinputtwo_\" + index] && delete selectedRecord[\"dateinputtwo_\" + index];\r\n    }\r\n\r\n    clearRule = () => {\r\n        const sviewname = this.state.selectedRecord.sviewname || \"\";\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { addRuleList: [], selectedRecord: { sviewname }, sqlQuery: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    resetRule = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                addRuleList: [], addGroupList: [],\r\n                addAggregateList: [], addOrderbyList: []\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        this.setState({\r\n            selectedRecord: {}\r\n        });\r\n\r\n    }\r\n\r\n    onSymbolChange = (comboData, fieldName, groupIndex, index) => {\r\n        const { selectedRecord } = this.state;\r\n        const oldSelectedRecord = selectedRecord[\"groupList\"][groupIndex][index][fieldName] || {};\r\n        selectedRecord[\"groupList\"][groupIndex][index][fieldName] = comboData;\r\n        const items = selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items;\r\n        selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"][\"items\"][\"needmasterdata\"] = items.needmasterdata !== undefined ? comboData.items.needmasterdata : false;\r\n        if (comboData.items.symbolType === 2 || comboData.items.symbolType === 3) {\r\n            selectedRecord[\"groupList\"][groupIndex][index][items[\"valuemember\"]] && delete selectedRecord[\"groupList\"][groupIndex][index][items[\"valuemember\"]];\r\n            selectedRecord[\"groupList\"][groupIndex][index][items[\"foreigncolumnname\"]] && delete selectedRecord[\"groupList\"][groupIndex][index][items[\"foreigncolumnname\"]];\r\n            selectedRecord[\"groupList\"][groupIndex][index][\"sinputname\"] && delete selectedRecord[\"groupList\"][groupIndex][index][\"sinputname\"];\r\n        } else if (comboData.items.symbolType === 5 && oldSelectedRecord.items && oldSelectedRecord.items.symbolType !== 5) {\r\n            selectedRecord[\"groupList\"][groupIndex][index][\"snumericinput\"] && delete selectedRecord[\"groupList\"][groupIndex][index][\"snumericinput\"];\r\n            selectedRecord[\"groupList\"][groupIndex][index][\"snumericinputtwo\"] && delete selectedRecord[\"groupList\"][groupIndex][index][\"snumericinputtwo\"];\r\n        } else if ((comboData.items.symbolType === 6 && oldSelectedRecord.items && oldSelectedRecord.items.symbolType === 1)\r\n            || (comboData.items.symbolType === 1 && oldSelectedRecord.items && oldSelectedRecord.items.symbolType === 6)) {\r\n            selectedRecord[\"groupList\"][groupIndex][index][`${items.sforeigncolumnname}`] && delete selectedRecord[\"groupList\"][groupIndex][index][`${items.sforeigncolumnname}`];\r\n            selectedRecord[\"groupList\"][groupIndex][index][`${items.valuemember}`] && delete selectedRecord[\"groupList\"][groupIndex][index][`${items.valuemember}`];\r\n        } else {\r\n\r\n        }\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    onInputChange = (event, type, groupIndex, index) => {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        if (type === 2) {\r\n            const inputValue = event.target.value;\r\n            if (/^-?\\d*?\\.?\\d*?$/.test(inputValue) || inputValue === \"\") {\r\n                selectedRecord[\"groupList\"][groupIndex][index][event.target.name] = event.target.value;\r\n            }\r\n\r\n        }\r\n        else if (type === 1) {\r\n            selectedRecord[\"groupList\"][groupIndex][index][event.target.name] = event.target.checked;\r\n        }\r\n        else if (type === 3) {\r\n            selectedRecord[\"groupList\"][groupIndex][index][event.target.name] = event.target.value;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    generateFilterQuery = (selectedRecord) => {\r\n\r\n        const addGroupList = this.props.Login.addGroupList;\r\n        jsonSql.setDialect('mssql');\r\n        let databaseCondition = [];\r\n        let displayCondition = [];\r\n        let databaseConditionParam = [];\r\n        let fieldWithValue = [];\r\n        let notOperator = false;\r\n        if (addGroupList && addGroupList.length > 0) {\r\n\r\n            let groupConditionDatabase = [];\r\n            let groupConditionDatabaseParam = [];\r\n            let groupConditionDisplay = [];\r\n\r\n\r\n            addGroupList.forEach((items, groupIndex) => {\r\n                let symbolObject = {};\r\n\r\n\r\n                databaseCondition = [];\r\n                databaseConditionParam = [];\r\n                displayCondition = [];\r\n\r\n                [...Array(items)].map((data, index) => {\r\n\r\n                    if (selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"]) {\r\n                        symbolObject = selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"] && selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items && selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items || {};\r\n\r\n                        const current_button_and = selectedRecord[\"groupList\"][groupIndex][`button_and`];\r\n                        const current_button_or = selectedRecord[\"groupList\"][groupIndex][`button_or`];\r\n                        const next_button_and = selectedRecord[\"groupList\"][groupIndex][`button_and`];\r\n                        const next_button_or = selectedRecord[\"groupList\"][groupIndex][`button_or`] ? selectedRecord[\"groupList\"][groupIndex][`button_or`] : false;\r\n\r\n                        let inputname = selectedRecord[\"groupList\"][groupIndex][index][\"sinputname\"];\r\n                        const symbolname = symbolObject.symbol;\r\n                        let numericinput = selectedRecord[\"groupList\"][groupIndex][index][\"snumericinput\"];\r\n                        const columnLabel = selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].label;\r\n                        const columnValue = selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].value;\r\n                        const snumericinputtwo = selectedRecord[\"groupList\"][groupIndex][index][\"snumericinputtwo\"];\r\n                        let columnName = undefined;\r\n                        const needmasterdata = selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.needmasterdata ?\r\n                            selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.needmasterdata : false;\r\n\r\n                        if (selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.needmasterdata) {\r\n                            columnName = selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember;\r\n                        } else if (selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.sforeigncolumnname) {\r\n                            columnName = selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.sforeigncolumnname;\r\n                        }\r\n                        const dateinput = selectedRecord[\"groupList\"][groupIndex][index][\"dateinput\"] && format(new Date(selectedRecord[\"groupList\"][groupIndex][index][\"dateinput\"]), \"yyyy-MM-dd HH:mm:ss.SS\")//selectedRecord[\"dateinput_\" + index];\r\n                        const dateinputtwo = selectedRecord[\"groupList\"][groupIndex][index][\"dateinputtwo\"] && format(new Date(selectedRecord[\"groupList\"][groupIndex][index][\"dateinputtwo\"]), \"yyyy-MM-dd HH:mm:ss.SS\")//selectedRecord[\"dateinputtwo_\" + index];\r\n\r\n                        if (symbolObject && inputname) {\r\n                            if (symbolObject.symbolType === 4) {\r\n                                const showInputValue = inputname;\r\n                                const index1 = symbolObject.replacewith.indexOf('_');\r\n                                inputname = symbolObject.replacewith.substr(0, index1) + inputname + symbolObject.replacewith.substr(index1 + 1);\r\n                                inputname = inputname.slice(1, inputname.length - 1);\r\n\r\n                                databaseCondition.push({ [columnValue]: { [symbolname]: inputname } });\r\n                                displayCondition.push({ [columnLabel]: { [symbolname]: inputname } });\r\n                                databaseConditionParam.push({ [columnValue]: { [symbolname]: inputname } });\r\n                                fieldWithValue.push({ columnName: columnValue, value: inputname, showInputValue: showInputValue, symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                            } else {\r\n                                databaseCondition.push({ [columnValue]: { [symbolname]: inputname } });\r\n                                displayCondition.push({ [columnLabel]: { [symbolname]: inputname } });\r\n                                databaseConditionParam.push({ [columnValue]: { [symbolname]: inputname } });\r\n                                fieldWithValue.push({ columnName: columnValue, value: inputname, symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                            }\r\n                        } else if (symbolObject && numericinput && symbolObject.symbolType !== 5) {\r\n                            databaseCondition.push({ [columnValue]: { [symbolname]: numericinput } });\r\n                            displayCondition.push({ [columnLabel]: { [symbolname]: numericinput } });\r\n                            databaseConditionParam.push({ [columnValue]: { [symbolname]: numericinput } });\r\n                            fieldWithValue.push({ columnName: columnValue, value: numericinput, symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                        } else if (symbolObject && symbolObject.symbolType === 2\r\n                            || symbolObject && symbolObject.symbolType === 3) {\r\n                            databaseCondition.push({ [columnValue]: { [symbolname]: '' } });\r\n                            displayCondition.push({ [columnLabel]: { [symbolname]: '' } });\r\n                            databaseConditionParam.push({ [columnValue]: { [symbolname]: '' } });\r\n                            fieldWithValue.push({ columnName: columnValue, value: '', symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                        } else if (symbolObject && numericinput && snumericinputtwo && symbolObject.symbolType === 5) {\r\n                            if (symbolObject.symbol === \"\") {\r\n                                const tempValue = [{ [columnValue]: { [symbolObject.replacewith[0]]: +numericinput } },\r\n                                { [columnValue]: { [symbolObject.replacewith[1]]: snumericinputtwo } }];\r\n                                const tempValue1 = [{ [columnLabel]: { [symbolObject.replacewith[0]]: +numericinput } },\r\n                                { [columnLabel]: { [symbolObject.replacewith[1]]: snumericinputtwo } }];\r\n                                databaseCondition.push(tempValue);\r\n                                displayCondition.push(tempValue1);\r\n                                databaseConditionParam.push(tempValue);\r\n\r\n                            } else {\r\n                                const tempValue = [\r\n                                    {\r\n                                        [symbolObject.symbol]: [{ [columnValue]: { [symbolObject.replacewith[0]]: +numericinput } },\r\n                                        { [columnValue]: { [symbolObject.replacewith[1]]: snumericinputtwo } }]\r\n                                    }\r\n                                ];\r\n                                const tempValue1 = [\r\n                                    {\r\n                                        [symbolObject.symbol]: [{ [columnLabel]: { [symbolObject.replacewith[0]]: +numericinput } },\r\n                                        { [columnLabel]: { [symbolObject.replacewith[1]]: snumericinputtwo } }]\r\n                                    }\r\n                                ];\r\n                                databaseCondition.push(tempValue);\r\n                                displayCondition.push(tempValue1);\r\n                                databaseConditionParam.push(tempValue);\r\n                            }\r\n                        } else if (symbolObject && symbolObject.symbolType === 6 && columnName && selectedRecord[\"groupList\"][groupIndex][index][columnName]) {\r\n\r\n                            const data = selectedRecord[\"groupList\"][groupIndex][index][columnName] && selectedRecord[\"groupList\"][groupIndex][index][columnName].map(item => { return item.value }) || [];\r\n                            const data1 = selectedRecord[\"groupList\"][groupIndex][index][columnName] && selectedRecord[\"groupList\"][groupIndex][index][columnName].map(item => { return item.label }) || [];\r\n                            if (data.length > 0) {\r\n                                if (needmasterdata) {\r\n                                    databaseCondition.push({ [selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember]: { [symbolname]: data } });\r\n                                    databaseConditionParam.push({ [selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember]: { [symbolname]: data } });\r\n                                    fieldWithValue.push({ columnName: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember, value: selectedRecord[\"groupList\"][groupIndex][index][columnName].map(item => { return item }), symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                                } else {\r\n                                    databaseCondition.push({ [columnValue]: { [symbolname]: data } });\r\n                                    databaseConditionParam.push({ [columnValue]: { [symbolname]: data } });\r\n                                    fieldWithValue.push({ columnName: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember, value: selectedRecord[\"groupList\"][groupIndex][index][columnName].map(item => { return item }), symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                                }\r\n                            }\r\n                            if (data1.length > 0) {\r\n                                displayCondition.push({ [columnLabel]: { [symbolname]: data1 } });\r\n                            }\r\n                            // }\r\n                        } else if (symbolObject && columnName && symbolObject.isInputVisible && selectedRecord[\"groupList\"][groupIndex][index][columnName]) {\r\n                            if (needmasterdata) {\r\n                                databaseCondition.push({ [selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember]: { [symbolname]: selectedRecord[\"groupList\"][groupIndex][index][columnName].value } });\r\n                                displayCondition.push({ [columnLabel]: { [symbolname]: selectedRecord[\"groupList\"][groupIndex][index][columnName].label } });\r\n                                databaseConditionParam.push({ [selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember]: { [symbolname]: selectedRecord[\"groupList\"][groupIndex][index][columnName].label } });\r\n                                fieldWithValue.push({ columnName: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember, value: selectedRecord[\"groupList\"][groupIndex][index][columnName], symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                            } else {\r\n                                databaseCondition.push({ [columnValue]: { [symbolname]: selectedRecord[\"groupList\"][groupIndex][index][columnName].value } });\r\n                                displayCondition.push({ [columnLabel]: { [symbolname]: selectedRecord[\"groupList\"][groupIndex][index][columnName].label } });\r\n                                databaseConditionParam.push({ [columnValue]: { [symbolname]: selectedRecord[\"groupList\"][groupIndex][index][columnName].label } });\r\n                                fieldWithValue.push({ columnName: columnValue, value: selectedRecord[\"groupList\"][groupIndex][index][columnName], symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                            }\r\n                        } else if (symbolObject && dateinput && symbolObject.symbolType !== 5) {\r\n                            databaseCondition.push({ [columnValue]: { [symbolname]: dateinput } });\r\n                            displayCondition.push({ [columnLabel]: { [symbolname]: dateinput } });\r\n                            databaseConditionParam.push({ [columnValue]: { [symbolname]: dateinput } });\r\n                            fieldWithValue.push({ columnName: columnValue, value: dateinput, symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                        } else if (symbolObject && dateinput && dateinputtwo && symbolObject.symbolType === 5) {\r\n                            if (symbolObject.symbol === \"\") {\r\n                                const tempValue = [{ [columnValue]: { [symbolObject.replacewith[0]]: dateinput } },\r\n                                { [columnValue]: { [symbolObject.replacewith[1]]: dateinputtwo } }];\r\n                                const tempValue1 = [{ [columnLabel]: { [symbolObject.replacewith[0]]: dateinput } },\r\n                                { [columnLabel]: { [symbolObject.replacewith[1]]: dateinputtwo } }];\r\n                                databaseCondition.push(tempValue);\r\n                                displayCondition.push(tempValue1);\r\n                                databaseConditionParam.push(tempValue);\r\n                                fieldWithValue.push({ columnName: columnValue, value: dateinput, symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                                fieldWithValue.push({ columnName: columnValue, value: dateinputtwo, symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                            } else {\r\n                                const tempValue = [\r\n                                    {\r\n                                        [symbolObject.symbol]: [{ [columnValue]: { [symbolObject.replacewith[0]]: dateinput } },\r\n                                        { [columnValue]: { [symbolObject.replacewith[1]]: dateinputtwo } }]\r\n                                    }\r\n                                ];\r\n                                const tempValue1 = [\r\n                                    {\r\n                                        [symbolObject.symbol]: [{ [columnLabel]: { [symbolObject.replacewith[0]]: dateinput } },\r\n                                        { [columnLabel]: { [symbolObject.replacewith[1]]: dateinputtwo } }]\r\n                                    }\r\n                                ];\r\n                                databaseCondition.push(tempValue);\r\n                                displayCondition.push(tempValue1);\r\n                                databaseConditionParam.push(tempValue);\r\n                                fieldWithValue.push({ columnName: columnValue, value: dateinput, symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                                fieldWithValue.push({ columnName: columnValue, value: dateinputtwo, symbolObject: selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"], items: selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items });\r\n                            }\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        this.groupByFunction(selectedRecord, databaseCondition, displayCondition);\r\n                    }\r\n                });\r\n\r\n                if (selectedRecord[\"groupList\"][groupIndex][`button_and`] === true) {\r\n\r\n                    if (selectedRecord[\"groupList\"][groupIndex][`button_not`] === true) {\r\n                        groupConditionDisplay.push([{ $not: [{ $and: [...displayCondition] }] }]);\r\n                        groupConditionDatabase.push([{ $not: [{ $and: [...databaseCondition] }] }]);\r\n                        groupConditionDatabaseParam.push([{ $not: [{ $and: [...databaseConditionParam] }] }]);\r\n                    } else {\r\n                        groupConditionDisplay.push([{ $and: [...displayCondition] }]);\r\n                        groupConditionDatabase.push([{ $and: [...databaseCondition] }]);\r\n                        groupConditionDatabaseParam.push([{ $and: [...databaseConditionParam] }]);\r\n                    }\r\n\r\n                } else if (selectedRecord[\"groupList\"][groupIndex][`button_or`] === true) {\r\n\r\n                    if (selectedRecord[\"groupList\"][groupIndex][`button_not`] === true) {\r\n                        groupConditionDisplay.push([{ $not: [{ $or: [...displayCondition] }] }]);\r\n                        groupConditionDatabase.push([{ $not: [{ $or: [...databaseCondition] }] }]);\r\n                        groupConditionDatabaseParam.push([{ $not: [{ $or: [...databaseConditionParam] }] }]);\r\n                    }\r\n                    else {\r\n                        groupConditionDisplay.push([{ $or: [...displayCondition] }]);\r\n                        groupConditionDatabase.push([{ $or: [...databaseCondition] }]);\r\n                        groupConditionDatabaseParam.push([{ $or: [...databaseConditionParam] }]);\r\n                    }\r\n\r\n                } else {\r\n                    groupConditionDisplay.push([{ ...displayCondition }]);\r\n                    groupConditionDatabase.push([{ ...databaseCondition }]);\r\n                    groupConditionDatabaseParam.push([{ ...databaseConditionParam }]);\r\n                }\r\n\r\n\r\n                let finalConditionDisplay = undefined;\r\n                let finalConditionDatabase = undefined;\r\n                let finalConditionDatabaseParam = undefined;\r\n                if (addGroupList.length - 1 === 0) {\r\n\r\n\r\n                    finalConditionDisplay = [...groupConditionDisplay];\r\n                    finalConditionDatabase = [...groupConditionDatabase];\r\n                    finalConditionDatabaseParam = [...groupConditionDatabaseParam];\r\n\r\n\r\n                } else if (addGroupList.length - 1 === groupIndex) {\r\n                    if (selectedRecord[\"groupList\"][0][`button_and`] === true) {\r\n\r\n\r\n                        finalConditionDisplay = [{ $and: [...groupConditionDisplay] }];\r\n                        finalConditionDatabase = [{ $and: [...groupConditionDatabase] }];\r\n                        finalConditionDatabaseParam = [{ $and: [...groupConditionDatabaseParam] }];\r\n\r\n\r\n                    } else if (selectedRecord[\"groupList\"][0][`button_or`] === true) {\r\n\r\n\r\n                        finalConditionDisplay = [{ $or: [...groupConditionDisplay] }];\r\n                        finalConditionDatabase = [{ $or: [...groupConditionDatabase] }];\r\n                        finalConditionDatabaseParam = [{ $or: [...groupConditionDatabaseParam] }];\r\n\r\n\r\n                    } else {\r\n\r\n\r\n                        finalConditionDisplay = [{ ...groupConditionDisplay }];\r\n                        finalConditionDatabase = [{ ...groupConditionDatabase }];\r\n                        finalConditionDatabaseParam = [{ ...groupConditionDatabaseParam }];\r\n\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                if (this.props.Login.sqlQuery) {\r\n                    const databaseSQLQuery = jsonSql.build({\r\n                        type: 'select',\r\n                        table: selectedRecord[\"stablename_0\"].value,\r\n                        condition: databaseCondition\r\n                    });\r\n                    const displaySQLQuery = jsonSql.build({\r\n                        type: 'select',\r\n                        table: selectedRecord[\"stablename_0\"].label,\r\n                        condition: displayCondition\r\n                    });\r\n                    selectedRecord[\"sgeneratedquery\"] = databaseSQLQuery.query;\r\n                    selectedRecord[\"sdisplayquery\"] = displaySQLQuery.query;\r\n                } else {\r\n\r\n                    const fields = selectedRecord[\"filtercolumns\"];\r\n\r\n                    let fieldList = [];\r\n                    let dbfieldList = [];\r\n                    let groupByAggregateFields = [];\r\n                    let groupByFields = [];\r\n\r\n                    let groupByAggregateFieldsDisplay = [];\r\n                    let groupByFieldsDisplay = [];\r\n\r\n                    let orderByDefault = [];\r\n                    let orderByCustom = {};\r\n\r\n                    let orderByDefaultDisplay = [];\r\n                    let orderByCustomDisplay = {};\r\n\r\n                    selectedRecord[\"orderby\"] && selectedRecord[\"orderby\"].forEach(data => {\r\n                        if (data[\"ordertype\"] && data[\"ordertype\"].value === 2) {\r\n                            orderByCustom[data[\"columnname\"].items.columnname] = -1\r\n                            orderByCustomDisplay[data[\"columnname\"].label] = -1\r\n                        } else {\r\n                            orderByCustom[data[\"columnname\"].items.columnname] = 1\r\n                            orderByCustomDisplay[data[\"columnname\"].label] = 1\r\n                        }\r\n                    })\r\n                    if (selectedRecord[\"aggregate\"] && selectedRecord[\"aggregate\"].length > 0) {\r\n                        selectedRecord[\"aggregate\"].forEach(data => {\r\n                            if (data[\"aggfunctionname\"] && data[\"aggfunctionname\"].label !== '') {\r\n                                groupByAggregateFields.push({\r\n                                    func: {\r\n                                        name: data[\"aggfunctionname\"].label,\r\n                                        args: [{ field: data[\"columnname\"].items.columnname }]\r\n\r\n                                    }, alias: data[\"columnname\"].items.columnname\r\n                                })\r\n                                groupByAggregateFieldsDisplay.push({\r\n                                    func: {\r\n                                        name: data[\"aggfunctionname\"].label,\r\n                                        args: [{ field: data[\"columnname\"].label }]\r\n\r\n                                    }\r\n                                })\r\n\r\n                            } else {\r\n                                groupByAggregateFields.push(data[\"columnname\"].items.columnname);\r\n                                groupByFields.push(data[\"columnname\"].items.columnname);\r\n                                groupByAggregateFieldsDisplay.push(data[\"columnname\"].label);\r\n                                groupByFieldsDisplay.push(data[\"columnname\"].label);\r\n                            }\r\n                        })\r\n                    }\r\n                    fields.forEach(item => {\r\n                        fieldList.push(item.label);\r\n                        dbfieldList.push(item.value);\r\n                    })\r\n                    const databaseSQLQueryParam = jsonSqlParam.build({\r\n                        type: 'select',\r\n                        table: selectedRecord[\"sviewname\"].value,\r\n                        fields: selectedRecord[\"aggregate\"] && selectedRecord[\"aggregate\"].length > 0 ? groupByAggregateFields : dbfieldList,\r\n                        group: groupByFields,\r\n                        sort: selectedRecord[\"orderby\"] && selectedRecord[\"orderby\"].length > 0 ? orderByCustom : \"\",\r\n                        condition: finalConditionDatabaseParam\r\n                    });\r\n                    const databaseSQLQuery = jsonSql.build({\r\n                        type: 'select',\r\n                        table: selectedRecord[\"sviewname\"].value,\r\n                        fields: selectedRecord[\"aggregate\"] && selectedRecord[\"aggregate\"].length > 0 ? groupByAggregateFields : dbfieldList,\r\n                        group: groupByFields,\r\n                        sort: selectedRecord[\"orderby\"] && selectedRecord[\"orderby\"].length > 0 ? orderByCustom : \"\",\r\n                        condition: finalConditionDatabase\r\n                    });\r\n                    const displaySQLQuery = jsonSql.build({\r\n                        type: 'select',\r\n                        fields: selectedRecord[\"aggregate\"] && selectedRecord[\"aggregate\"].length > 0 ? groupByAggregateFieldsDisplay : fieldList,\r\n                        group: groupByFieldsDisplay,\r\n                        table: selectedRecord[\"sviewname\"].label,\r\n                        sort: selectedRecord[\"orderby\"] && selectedRecord[\"orderby\"].length > 0 ? orderByCustomDisplay : \"\",\r\n                        condition: finalConditionDisplay //&& finalCondition.length === 1 ? finalCondition[0] : finalCondition\r\n                    });\r\n                    selectedRecord[\"squerywithparam\"] = databaseSQLQueryParam.query.replace(\"like\", \"Ilike\");\r\n\r\n                    selectedRecord[\"sgeneratedquery\"] = selectedRecord[\"filtercolumns\"] && selectedRecord[\"filtercolumns\"].length > 0 ?\r\n                        databaseSQLQuery.query.replace(\"like\", \"Ilike\") : \"\";\r\n                    selectedRecord[\"sdisplayquery\"] = selectedRecord[\"filtercolumns\"] && selectedRecord[\"filtercolumns\"].length > 0 ?\r\n                        displaySQLQuery.query.replace(\"like\", \"Ilike\") : \"\";\r\n\r\n                    selectedRecord[\"sdefaultvalue\"] = fieldWithValue;\r\n\r\n                    const paramIndex = [];\r\n                    if (fieldWithValue.length > 0) {\r\n                        fieldWithValue.forEach((item, i) => {\r\n                            if (item.symbolObject.items.symbolType === 4) {\r\n                                paramIndex.push(\"$p\" + (i + 1));\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                    if (paramIndex.length > 0) {\r\n                        paramIndex.forEach(data => {\r\n                            selectedRecord[\"squerywithparam\"] = selectedRecord[\"squerywithparam\"].replace(data, data + \" COLLATE pg_catalog.default \");\r\n                        })\r\n                    }\r\n                    // if (selectedRecord[\"squerywithparam\"].indexOf('Ilike') > 0) {\r\n\r\n                    //     let newQuery = selectedRecord[\"squerywithparam\"];\r\n\r\n                    //     while (newQuery.indexOf(\"Ilike\") !== -1) {\r\n\r\n                    //         const paramLabelStartIndex = newQuery.indexOf(\"Ilike\");\r\n\r\n                    //         const paramLabel = newQuery.substring(paramLabelStartIndex, newQuery.length);\r\n\r\n\r\n\r\n                    //     }\r\n                    // }\r\n                }\r\n                this.setState({ selectedRecord });\r\n            });\r\n        } else {\r\n            this.groupByFunction(selectedRecord, databaseCondition, displayCondition);\r\n        }\r\n        this.setState({ selectedRecord });// for temporary\r\n    }\r\n\r\n    groupByFunction(selectedRecord, databaseCondition, displayCondition) {\r\n        let groupByAggregateFields = [];\r\n        let groupByFields = [];\r\n\r\n        let groupByAggregateFieldsDisplay = [];\r\n        let groupByFieldsDisplay = [];\r\n\r\n        let orderByDefault = [];\r\n        let orderByCustom = {};\r\n\r\n        let orderByDefaultDisplay = [];\r\n        let orderByCustomDisplay = {};\r\n\r\n        // if (selectedRecord[\"customorderby\"] && selectedRecord[\"customorderby\"] === true) {\r\n        selectedRecord[\"orderby\"] && selectedRecord[\"orderby\"].forEach(data => {\r\n            if (data[\"ordertype\"] && data[\"ordertype\"].value === 2) {\r\n                orderByCustom[data[\"columnname\"].items.columnname] = -1\r\n                orderByCustomDisplay[data[\"columnname\"].label] = -1\r\n            } else {\r\n                orderByCustom[data[\"columnname\"].items.columnname] = 1\r\n                orderByCustomDisplay[data[\"columnname\"].label] = 1\r\n            }\r\n        })\r\n        // } else {\r\n        //     selectedRecord[\"orderby\"] && selectedRecord[\"orderby\"].forEach(data => {\r\n        //         orderByDefault.push(data[\"columnname\"].items.columnname);\r\n        //         orderByDefaultDisplay.push(data[\"columnname\"].label);\r\n        //     })\r\n        // }\r\n\r\n\r\n        // if (selectedRecord[\"groupby\"] && selectedRecord[\"groupby\"] === true) {\r\n        if (selectedRecord[\"aggregate\"] && selectedRecord[\"aggregate\"].length > 0) {\r\n            selectedRecord[\"aggregate\"].forEach(data => {\r\n                if (data[\"aggfunctionname\"] && data[\"aggfunctionname\"].label !== '') {\r\n                    groupByAggregateFields.push({\r\n                        func: {\r\n                            name: data[\"aggfunctionname\"].label,\r\n                            args: [{ field: data[\"columnname\"].items.columnname }]\r\n\r\n                        }, alias: data[\"columnname\"].items.columnname\r\n                    })\r\n                    groupByAggregateFieldsDisplay.push({\r\n                        func: {\r\n                            name: data[\"aggfunctionname\"].label,\r\n                            args: [{ field: data[\"columnname\"].label }]\r\n\r\n                        }\r\n                    })\r\n\r\n                } else {\r\n                    groupByAggregateFields.push(data[\"columnname\"].items.columnname);\r\n                    groupByFields.push(data[\"columnname\"].items.columnname);\r\n                    groupByAggregateFieldsDisplay.push(data[\"columnname\"].label);\r\n                    groupByFieldsDisplay.push(data[\"columnname\"].label);\r\n                }\r\n            })\r\n\r\n            const databaseSQLQuery = jsonSql.build({\r\n                type: 'select',\r\n                table: selectedRecord[\"sviewname\"].value,\r\n                fields: groupByAggregateFields,\r\n                group: groupByFields,\r\n                sort: selectedRecord[\"orderby\"] && selectedRecord[\"orderby\"].length > 0 ? orderByCustom : \"\",\r\n                condition: databaseCondition\r\n            });\r\n            const displaySQLQuery = jsonSql.build({\r\n                type: 'select',\r\n                fields: groupByAggregateFieldsDisplay,\r\n                group: groupByFieldsDisplay,\r\n                sort: selectedRecord[\"orderby\"] && selectedRecord[\"orderby\"].length > 0 ? orderByCustomDisplay : \"\",\r\n                table: selectedRecord[\"sviewname\"].label,\r\n                condition: displayCondition\r\n            });\r\n            selectedRecord[\"sgeneratedquery\"] = databaseSQLQuery.query;\r\n            selectedRecord[\"sdisplayquery\"] = displaySQLQuery.query;\r\n            this.setState({ selectedRecord });\r\n        }\r\n        // }\r\n    }\r\n    onConditionClick = (fieldName, index) => {\r\n        let { selectedRecord } = this.state;\r\n        if (fieldName === `button_and`) {\r\n            selectedRecord[\"groupList\"][index][fieldName] = selectedRecord[\"groupList\"][index][fieldName] === true ? false : true;\r\n            selectedRecord[\"groupList\"][index][`button_or`] = false;\r\n        } else if (fieldName === `button_or`) {\r\n            selectedRecord[\"groupList\"][index][fieldName] = selectedRecord[\"groupList\"][index][fieldName] === true ? false : true;\r\n            selectedRecord[\"groupList\"][index][`button_and`] = false;\r\n            // if (selectedRecord[\"groupList\"][index][`notoperator`] && selectedRecord[\"groupList\"][index][`notoperator`] === true) {\r\n            //     selectedRecord[\"groupList\"][index][`notoperator`] = false;\r\n            // }\r\n        } else if (fieldName === `button_not`) {\r\n            selectedRecord[\"groupList\"][index][fieldName] = selectedRecord[\"groupList\"][index][fieldName] === true ? false : true;\r\n        }\r\n        else {\r\n\r\n        }\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    onQueryTypeOnclick = (value) => {\r\n\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[\"selectedQueryType\"] = value;\r\n        let sqlQuery = false;\r\n        if (value.value === \"sql\") {\r\n            sqlQuery = true;\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { sqlQuery: sqlQuery }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        this.setState({ selectedRecord });\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, filterColumnData,\r\n    validateEsignCredential, getSQLQueryDetail, getSQLQueryComboService, comboChangeQueryType,\r\n    executeUserQuery, comboColumnValues, getColumnNamesByTableName,\r\n    getTablesName, getModuleFormName, getDatabaseTables, executeQuery, getForeignTable,\r\n    getViewColumns, getMasterData, createQueryBuilder,\r\n    getParameterFromQuery, getSelectedQueryBuilder, updateQueryBuilder, getQueryBuilder\r\n})(injectIntl(QueryBuilder));"]},"metadata":{},"sourceType":"module"}