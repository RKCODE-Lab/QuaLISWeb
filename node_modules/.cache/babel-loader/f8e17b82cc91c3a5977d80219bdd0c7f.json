{"ast":null,"code":"import { wrapIn } from 'prosemirror-commands';\nexport var blockquote = function (state, dispatch) {\n  return wrapIn(state.schema.nodes.blockquote)(state, dispatch);\n};\nexport var liftBlockquote = function (state, dispatch) {\n  var _a = state.selection,\n      $from = _a.$from,\n      $to = _a.$to;\n  var nodeType = state.schema.nodes.blockquote;\n  var doc = state.doc;\n  var target = -1;\n  var range = $from.blockRange($to);\n\n  if (range) {\n    doc.nodesBetween(range.start, range.end, function (node, pos, _parent, _index) {\n      if (node.type === nodeType) {\n        target = pos;\n      }\n    });\n  }\n\n  var result = target !== -1;\n\n  if (dispatch && result) {\n    dispatch(state.tr.lift(range, doc.resolve(target).depth));\n  }\n\n  return result;\n};","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/node_modules/@progress/kendo-editor-common/dist/es/blockquote.js"],"names":["wrapIn","blockquote","state","dispatch","schema","nodes","liftBlockquote","_a","selection","$from","$to","nodeType","doc","target","range","blockRange","nodesBetween","start","end","node","pos","_parent","_index","type","result","tr","lift","resolve","depth"],"mappings":"AAAA,SAASA,MAAT,QAAuB,sBAAvB;AACA,OAAO,IAAIC,UAAU,GAAG,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AAC/C,SAAOH,MAAM,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBJ,UAApB,CAAN,CAAsCC,KAAtC,EAA6CC,QAA7C,CAAP;AACH,CAFM;AAGP,OAAO,IAAIG,cAAc,GAAG,UAAUJ,KAAV,EAAiBC,QAAjB,EAA2B;AACnD,MAAII,EAAE,GAAGL,KAAK,CAACM,SAAf;AAAA,MAA0BC,KAAK,GAAGF,EAAE,CAACE,KAArC;AAAA,MAA4CC,GAAG,GAAGH,EAAE,CAACG,GAArD;AACA,MAAIC,QAAQ,GAAGT,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBJ,UAAlC;AACA,MAAIW,GAAG,GAAGV,KAAK,CAACU,GAAhB;AACA,MAAIC,MAAM,GAAG,CAAC,CAAd;AACA,MAAIC,KAAK,GAAGL,KAAK,CAACM,UAAN,CAAiBL,GAAjB,CAAZ;;AACA,MAAII,KAAJ,EAAW;AACPF,IAAAA,GAAG,CAACI,YAAJ,CAAiBF,KAAK,CAACG,KAAvB,EAA8BH,KAAK,CAACI,GAApC,EAAyC,UAAUC,IAAV,EAAgBC,GAAhB,EAAqBC,OAArB,EAA8BC,MAA9B,EAAsC;AAC3E,UAAIH,IAAI,CAACI,IAAL,KAAcZ,QAAlB,EAA4B;AACxBE,QAAAA,MAAM,GAAGO,GAAT;AACH;AACJ,KAJD;AAKH;;AACD,MAAII,MAAM,GAAGX,MAAM,KAAK,CAAC,CAAzB;;AACA,MAAIV,QAAQ,IAAIqB,MAAhB,EAAwB;AACpBrB,IAAAA,QAAQ,CAACD,KAAK,CAACuB,EAAN,CAASC,IAAT,CAAcZ,KAAd,EAAqBF,GAAG,CAACe,OAAJ,CAAYd,MAAZ,EAAoBe,KAAzC,CAAD,CAAR;AACH;;AACD,SAAOJ,MAAP;AACH,CAlBM","sourcesContent":["import { wrapIn } from 'prosemirror-commands';\nexport var blockquote = function (state, dispatch) {\n    return wrapIn(state.schema.nodes.blockquote)(state, dispatch);\n};\nexport var liftBlockquote = function (state, dispatch) {\n    var _a = state.selection, $from = _a.$from, $to = _a.$to;\n    var nodeType = state.schema.nodes.blockquote;\n    var doc = state.doc;\n    var target = -1;\n    var range = $from.blockRange($to);\n    if (range) {\n        doc.nodesBetween(range.start, range.end, function (node, pos, _parent, _index) {\n            if (node.type === nodeType) {\n                target = pos;\n            }\n        });\n    }\n    var result = target !== -1;\n    if (dispatch && result) {\n        dispatch(state.tr.lift(range, doc.resolve(target).depth));\n    }\n    return result;\n};\n"]},"metadata":{},"sourceType":"module"}