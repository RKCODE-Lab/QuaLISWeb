{"ast":null,"code":"import React from'react';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';//import { Col, Row } from 'react-bootstrap';\nimport FormInput from'../../components/form-input/form-input.component';import{injectIntl,FormattedMessage}from'react-intl';import{Col}from'react-bootstrap';import DataGrid from'../../components/data-grid/data-grid.component';var ViewSubCodedResult=function ViewSubCodedResult(props){var testMethodColumnList=[{\"idsName\":\"IDS_SUBCODEDRESULT\",\"dataField\":\"ssubcodedresult\",\"width\":\"200px\"}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(DataGrid,{key:\"ssubcodedresult\",primaryKeyField:\"ssubcodedresult\"// dataResult={[]}\n,dataResult:props.selectedsubcoderesult||[]// dataResult={this.props.selectedWorklistHistory ||[]}\n,dataState:{}// dataState={this.state.sectionDataState}\n// dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\n,data:[],extractedColumnList:testMethodColumnList,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,pageable:false,scrollable:'scrollable',gridHeight:'335px',isActionRequired:false,methodUrl:\"AuditTrail\"}));};export default injectIntl(ViewSubCodedResult);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/testgroup/ViewSubCodedResult.jsx"],"names":["React","FormSelectSearch","FormInput","injectIntl","FormattedMessage","Col","DataGrid","ViewSubCodedResult","props","testMethodColumnList","selectedsubcoderesult","controlMap","userRoleControlRights"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,OAASC,UAAT,CAAoBC,gBAApB,KAA4C,YAA5C,CACA,OAASC,GAAT,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gDAArB,CACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CAElC,GAAMC,CAAAA,oBAAoB,CAAG,CACzB,CAAE,UAAW,oBAAb,CAAmC,YAAa,iBAAhD,CAAmE,QAAS,OAA5E,CADyB,CAA7B,CAEA,mBACG,qDACC,oBAAC,QAAD,EACY,GAAG,CAAC,iBADhB,CAEY,eAAe,CAAC,iBAChB;AAHZ,CAIY,UAAU,CAAED,KAAK,CAACE,qBAAN,EAA+B,EAC3C;AALZ,CAMY,SAAS,CAAE,EACX;AACA;AARZ,CASY,IAAI,CAAE,EATlB,CAUY,mBAAmB,CAAED,oBAVjC,CAWY,UAAU,CAAED,KAAK,CAACG,UAX9B,CAYY,qBAAqB,CAAEH,KAAK,CAACI,qBAZzC,CAaY,QAAQ,CAAE,KAbtB,CAcY,UAAU,CAAE,YAdxB,CAeY,UAAU,CAAE,OAfxB,CAgBY,gBAAgB,CAAE,KAhB9B,CAiBY,SAAS,CAAC,YAjBtB,EADD,CADH,CA6BH,CAjCD,CAmCA,cAAeT,CAAAA,UAAU,CAACI,kBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n//import { Col, Row } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { injectIntl,FormattedMessage } from 'react-intl';\r\nimport { Col} from 'react-bootstrap';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nconst ViewSubCodedResult = (props) => {\r\n   \r\n    const testMethodColumnList = [\r\n        { \"idsName\": \"IDS_SUBCODEDRESULT\", \"dataField\": \"ssubcodedresult\", \"width\": \"200px\" }    ];\r\n    return (\r\n       <>\r\n        <DataGrid\r\n                    key=\"ssubcodedresult\"\r\n                    primaryKeyField=\"ssubcodedresult\"\r\n                    // dataResult={[]}\r\n                    dataResult={props.selectedsubcoderesult || []}\r\n                    // dataResult={this.props.selectedWorklistHistory ||[]}\r\n                    dataState={{}}\r\n                    // dataState={this.state.sectionDataState}\r\n                    // dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\r\n                    data={[]}\r\n                    extractedColumnList={testMethodColumnList}\r\n                    controlMap={props.controlMap}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    pageable={false}\r\n                    scrollable={'scrollable'}\r\n                    gridHeight={'335px'}\r\n                    isActionRequired={false}\r\n                    methodUrl=\"AuditTrail\"\r\n                   \r\n\r\n                >\r\n                </DataGrid>\r\n\r\n                </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default injectIntl(ViewSubCodedResult);"]},"metadata":{},"sourceType":"module"}