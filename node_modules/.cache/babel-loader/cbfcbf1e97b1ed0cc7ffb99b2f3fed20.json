{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\quotation\\\\EditQuotationTestPricing.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { ReadOnlyText } from '../../components/App.styles';\n\nconst EditQuotationTestPricing = props => {\n  console.log(\"props.selected:\", props.selectedRecord);\n  return Object.keys(props.selectedRecord).length > 0 ? props.selectedRecord.map(item => /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 33\n    }\n  }, item.stestname)), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_COST\"\n    }),\n    name: \"ncost\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    onBlur: () => props.onnetAmountEvent(item.nquotationtestcode),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_COST\"\n    }),\n    value: item.ncost || 0,\n    isMandatory: true,\n    required: true,\n    maxLength: 9,\n    isDisabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_NUMBEROFSAMPLES\"\n    }),\n    name: \"nnoofsamples\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    onBlur: () => props.onnetAmountEvent(item.nquotationtestcode),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NUMBEROFSAMPLES\"\n    }),\n    value: item.nnoofsamples || 0,\n    isMandatory: true,\n    required: true,\n    maxLength: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_TOTALNETAMOUNT\"\n    }),\n    name: \"ntotalamount\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_TOTALNETAMOUNT\"\n    }),\n    value: item.ntotalamount || 0,\n    isMandatory: true,\n    required: true,\n    maxLength: 9,\n    isDisabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  })))) : \"\";\n};\n\nexport default injectIntl(EditQuotationTestPricing);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/quotation/EditQuotationTestPricing.jsx"],"names":["React","Row","Col","injectIntl","FormInput","ReadOnlyText","EditQuotationTestPricing","props","console","log","selectedRecord","Object","keys","length","map","item","stestname","intl","formatMessage","id","event","onInputOnChange","nquotationtestcode","onnetAmountEvent","ncost","nnoofsamples","ntotalamount"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\n\r\nconst EditQuotationTestPricing = (props) => {\r\n        console.log(\"props.selected:\", props.selectedRecord)\r\n        return (\r\n            Object.keys(props.selectedRecord).length > 0 ? \r\n                props.selectedRecord.map(item=>\r\n                <Row>\r\n                    <Col md={4}>\r\n                                <ReadOnlyText>{item.stestname}</ReadOnlyText>\r\n                    </Col>\r\n                    {/* <Col md={4}>\r\n                            <ReadOnlyText>{item.stestdescription}</ReadOnlyText>\r\n                    </Col> */}\r\n                    <Col md={2}>\r\n                                <FormInput\r\n                                    label={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                    name={\"ncost\"}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                    onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                    value={item.ncost || 0}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={9}\r\n                                    isDisabled={true}\r\n                            />\r\n                            \r\n                    </Col>\r\n                    \r\n                    <Col md={3}>\r\n\r\n                            <FormInput\r\n                                    label={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                    name={\"nnoofsamples\"}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                    onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                    value={item.nnoofsamples || 0}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={9}\r\n                            />\r\n                    </Col>\r\n                    <Col md={3}>\r\n\r\n                            <FormInput\r\n                                    label={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                                    name={\"ntotalamount\"}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                                    value={item.ntotalamount || 0}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={9}\r\n                                    isDisabled={true}\r\n                            />\r\n                    </Col>\r\n                </Row>\r\n            ) :\"\"\r\n        )\r\n}\r\n\r\nexport default injectIntl(EditQuotationTestPricing);"]},"metadata":{},"sourceType":"module"}