{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{Card,Col,Row}from\"react-bootstrap\";import{injectIntl}from\"react-intl\";import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormInput from'../../components/form-input/form-input.component';var AddBarcodeConfiguration=/*#__PURE__*/function(_React$Component){_inherits(AddBarcodeConfiguration,_React$Component);var _super=_createSuper(AddBarcodeConfiguration);function AddBarcodeConfiguration(){_classCallCheck(this,AddBarcodeConfiguration);return _super.call(this);}_createClass(AddBarcodeConfiguration,[{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nbarcode\",formLabel:this.props.intl.formatMessage({id:\"IDS_SELECTBARCODE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.props.masterData.Barcode||[],value:this.props.selectedRecord?this.props.selectedRecord[\"nbarcode\"]:\"\",isMandatory:true,required:true,isMulti:false,isSearchable:true,isDisabled:this.props.operation==='update'?true:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this.props.onComboBarcodeChange(event,\"nbarcode\");}})),/*#__PURE__*/React.createElement(Col,{md:12},this.props.masterData.BarcodeParameter&&this.props.masterData.BarcodeParameter.length>0&&/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,this.props.intl.formatMessage({id:\"IDS_BARCODEPARAMETERMAPPING\"})),/*#__PURE__*/React.createElement(Card.Body,null,this.props.masterData.BarcodeParameter&&this.props.masterData.BarcodeParameter.map(function(x,i){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{label:_this.props.intl.formatMessage({id:\"IDS_PARAMETER\"}),name:\"sparametername\",type:\"text\"//onChange={(event) => this.props.onInputOnChange(event)}\n,placeholder:_this.props.intl.formatMessage({id:\"IDS_PARAMETER\"}),value:x,isMandatory:true,required:true,isDisabled:true,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"columnname\",formLabel:_this.props.intl.formatMessage({id:\"IDS_SELECTMATERIALCOLUMN\"}),placeholder:_this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:_this.props.masterData.MappingFileds||[],value:_this.props.selectedRecord&&_this.props.selectedRecord[x]?_this.props.selectedRecord[x]:\"\",isMandatory:true,required:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this.props.onComboChangeModal(event,\"columnname\",x,i);}})));})))),this.props.masterData.SelecetedControl&&this.props.masterData.SelecetedControl.nfiltersqlqueryneed&&/*#__PURE__*/React.createElement(Col,{md:12,className:\"mt-4\"},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsqlquerycode\",formLabel:this.props.intl.formatMessage({id:\"IDS_SELECTQUERY\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.props.masterData.SqlQuery||[],value:this.props.selectedRecord?this.props.selectedRecord[\"nsqlquerycode\"]:\"\",isMandatory:true,required:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this.props.onComboBarcodeChange(event,\"nsqlquerycode\");}})),/*#__PURE__*/React.createElement(Col,{md:12,className:'mt-4'},this.props.masterData.SelecetedControl&&this.props.masterData.SelecetedControl.nsqlqueryneed&&this.props.masterData.SqlQueryParam.length>0&&/*#__PURE__*/React.createElement(Card,null,\" \",/*#__PURE__*/React.createElement(Card.Header,null,this.props.intl.formatMessage({id:\"IDS_SQLQUERYPARAMPARAMETERMAPPING\"})),/*#__PURE__*/React.createElement(Card.Body,null,this.props.masterData.SelecetedControl&&this.props.masterData.SelecetedControl.nsqlqueryneed&&this.props.masterData.SqlQueryParam.map(function(x){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{label:_this.props.intl.formatMessage({id:\"IDS_SQLQUERYPARAM\"}),name:\"sparametername\",type:\"text\"//onChange={(event) => this.props.onInputOnChange(event)}\n,placeholder:_this.props.intl.formatMessage({id:\"IDS_PARAMETER\"}),value:x,isMandatory:true,required:true,isDisabled:true,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ssqlqueryparammapping\",formLabel:_this.props.intl.formatMessage({id:\"IDS_SQLQUERYPARAMMAPPINGFIELDS\"}),placeholder:_this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:_this.props.masterData.SqlQueryParamMappingFileds||[],value:_this.props.selectedRecord[x]?_this.props.selectedRecord[x]:\"\",isMandatory:true,required:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this.props.onComboBarcodeChange(event,x);}})));}))))));}}]);return AddBarcodeConfiguration;}(React.Component);export default injectIntl(AddBarcodeConfiguration);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/BarcodeTemplate/AddBarcodeConfiguration.jsx"],"names":["React","Card","Col","Row","injectIntl","FormSelectSearch","FormInput","AddBarcodeConfiguration","props","intl","formatMessage","id","masterData","Barcode","selectedRecord","operation","event","onComboBarcodeChange","BarcodeParameter","length","map","x","i","MappingFileds","onComboChangeModal","SelecetedControl","nfiltersqlqueryneed","SqlQuery","nsqlqueryneed","SqlQueryParam","SqlQueryParamMappingFileds","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\nclass AddBarcodeConfiguration extends React.Component {\r\n    constructor() {\r\n        super()\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            name={\"nbarcode\"}\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTBARCODE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={this.props.masterData.Barcode || []}\r\n                            value={this.props.selectedRecord ? this.props.selectedRecord[\"nbarcode\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}\r\n                            isDisabled={this.props.operation === 'update' ? true : false}\r\n                            closeMenuOnSelect={true}\r\n                            onChange={(event) => this.props.onComboBarcodeChange(event, \"nbarcode\")}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={12} >\r\n\r\n                        {this.props.masterData.BarcodeParameter && this.props.masterData.BarcodeParameter.length > 0 &&\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_BARCODEPARAMETERMAPPING\" })}\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    {this.props.masterData.BarcodeParameter && this.props.masterData.BarcodeParameter.map((x, i) => {\r\n                                        return <Row>\r\n                                            <Col md={6}>\r\n                                                <FormInput\r\n                                                    label={this.props.intl.formatMessage({ id: \"IDS_PARAMETER\" })}\r\n                                                    name=\"sparametername\"\r\n                                                    type=\"text\"\r\n                                                    //onChange={(event) => this.props.onInputOnChange(event)}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_PARAMETER\" })}\r\n                                                    value={x}\r\n                                                    isMandatory={true}\r\n                                                    required={true}\r\n                                                    isDisabled={true}\r\n                                                    maxLength={100}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col md={6}>\r\n                                                <FormSelectSearch\r\n                                                    name={\"columnname\"}\r\n                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTMATERIALCOLUMN\" })}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                    options={this.props.masterData.MappingFileds || []}\r\n                                                    value={this.props.selectedRecord && this.props.selectedRecord[x] ? this.props.selectedRecord[x] : \"\"}\r\n                                                    isMandatory={true}\r\n                                                    required={true}\r\n                                                    isMulti={false}\r\n                                                    isSearchable={true}\r\n                                                    isDisabled={false}\r\n                                                    closeMenuOnSelect={true}\r\n                                                    onChange={(event) => this.props.onComboChangeModal(event, \"columnname\", x, i)}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    })}\r\n                                </Card.Body>\r\n                            </Card>\r\n                        }\r\n                    </Col>\r\n\r\n\r\n                    {\r\n                        this.props.masterData.SelecetedControl && this.props.masterData.SelecetedControl.nfiltersqlqueryneed &&\r\n\r\n                        <Col md={12} className='mt-4'>\r\n                            <FormSelectSearch\r\n                                name={\"nsqlquerycode\"}\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTQUERY\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                options={this.props.masterData.SqlQuery || []}\r\n                                value={this.props.selectedRecord ? this.props.selectedRecord[\"nsqlquerycode\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                isDisabled={false}\r\n                                closeMenuOnSelect={true}\r\n                                onChange={(event) => this.props.onComboBarcodeChange(event, \"nsqlquerycode\")}\r\n                            />\r\n                        </Col>\r\n                    }\r\n\r\n\r\n                    <Col md={12} className={'mt-4'}>\r\n\r\n                        {this.props.masterData.SelecetedControl && this.props.masterData.SelecetedControl.nsqlqueryneed &&\r\n                            this.props.masterData.SqlQueryParam.length > 0 &&\r\n                            <Card> <Card.Header>\r\n                                {this.props.intl.formatMessage({ id: \"IDS_SQLQUERYPARAMPARAMETERMAPPING\" })}\r\n                            </Card.Header>\r\n\r\n                                <Card.Body>\r\n                                    {this.props.masterData.SelecetedControl &&\r\n                                        this.props.masterData.SelecetedControl.nsqlqueryneed &&\r\n                                        this.props.masterData.SqlQueryParam.map(x => {\r\n                                            return <Row>\r\n                                                {/* <Col md={6}> */}\r\n                                                {/* <FormSelectSearch\r\n                                            name={\"ssqlqueryparam\"}\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SQLQUERYPARAM\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                            options={this.props.masterData.SqlQueryParam || []}\r\n                                            value={x ? x : \"\"}\r\n                                            isMandatory={true}\r\n                                            required={true}\r\n                                            isMulti={false}\r\n                                            isSearchable={true}\r\n                                            isDisabled={true}\r\n                                            closeMenuOnSelect={true}\r\n                                            onChange={(event) => this.props.onComboBarcodeChange(event, \"ssqlqueryparam\")}\r\n                                        />\r\n                                    </Col> */}\r\n                                                <Col md={6}>\r\n\r\n                                                    <FormInput\r\n                                                        label={this.props.intl.formatMessage({ id: \"IDS_SQLQUERYPARAM\" })}\r\n                                                        name=\"sparametername\"\r\n                                                        type=\"text\"\r\n                                                        //onChange={(event) => this.props.onInputOnChange(event)}\r\n                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_PARAMETER\" })}\r\n                                                        value={x}\r\n                                                        isMandatory={true}\r\n                                                        required={true}\r\n                                                        isDisabled={true}\r\n                                                        maxLength={100}\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col md={6}>\r\n                                                    <FormSelectSearch\r\n                                                        name={\"ssqlqueryparammapping\"}\r\n                                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SQLQUERYPARAMMAPPINGFIELDS\" })}\r\n                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                        options={this.props.masterData.SqlQueryParamMappingFileds || []}\r\n                                                        value={this.props.selectedRecord[x]  ? this.props.selectedRecord[x] : \"\"}\r\n                                                        isMandatory={true}\r\n                                                        required={true}\r\n                                                        isMulti={false}\r\n                                                        isSearchable={true}\r\n                                                        isDisabled={false}\r\n                                                        closeMenuOnSelect={true}\r\n                                                        onChange={(event) => this.props.onComboBarcodeChange(event, x)}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                        })\r\n\r\n\r\n                                    }\r\n                                </Card.Body>\r\n                            </Card>\r\n                        }\r\n                    </Col>\r\n                </Row >\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(AddBarcodeConfiguration);"]},"metadata":{},"sourceType":"module"}