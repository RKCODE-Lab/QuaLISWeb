{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\configurationmaster\\\\AddPlantGroup.js\";\nimport React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DataGrid from '../../../src/components/data-grid/data-grid.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { process } from '@progress/kendo-data-query'; //import FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\n//import FormInput from '../../components/form-input/form-input.component';\n//import FormTextarea from '../../components/form-textarea/form-textarea.component';\n//import DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\n\nconst AddPlantGroup = props => {\n  return /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_FUSIONSITE\"\n    }),\n    isSearchable: true,\n    name: \"ssitecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.fusionplantSite || [],\n    value: props.selectedRecord[\"ssitecode\"] || \"\",\n    defaultValue: props.selectedRecord[\"ssitecode\"],\n    onChange: event => props.onComboChange(event, \"ssitecode\", 1) //onChange={(event) => props.onComboChange(event, \"ncontrolBasedparameter\", 1)}\n    ,\n    closeMenuOnSelect: true,\n    isMulti: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_FUSIONPRANENTPLANT\"\n    }),\n    isSearchable: true,\n    name: \"splantparentcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.selectedRecord[\"ssitecode\"] ? props.fusionparentplants || [] : [],\n    value: props.selectedRecord[\"splantparentcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"splantparentcode\"] //onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\n    ,\n    onChange: event => props.onComboChange(event, \"splantparentcode\", 2),\n    closeMenuOnSelect: true,\n    isMulti: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_FUSIONCHILDPLANTS\"\n    }),\n    isSearchable: true,\n    name: \"splantchildcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.selectedRecord[\"splantparentcode\"] !== undefined ? props.fusionchildplants || [] : [],\n    value: props.selectedRecord[\"splantchildcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"splantchildcode\"] //onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\n    ,\n    onChange: event => props.onComboChange(event, \"splantchildcode\", 3),\n    closeMenuOnSelect: true,\n    isMulti: props.operation === \"create\" ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  })));\n};\n\nexport default injectIntl(AddPlantGroup);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/AddPlantGroup.js"],"names":["React","Button","Row","Col","FormattedMessage","injectIntl","faSave","FontAwesomeIcon","DataGrid","FormSelectSearch","process","AddPlantGroup","props","intl","formatMessage","id","fusionplantSite","selectedRecord","event","onComboChange","fusionparentplants","undefined","fusionchildplants","operation"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../../src/components/data-grid/data-grid.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { process } from '@progress/kendo-data-query';\r\n//import FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\n//import FormInput from '../../components/form-input/form-input.component';\r\n//import FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n//import DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nconst AddPlantGroup = (props) => {\r\n        return (\r\n                <Col>\r\n                        <Col md={12}>\r\n                                <FormSelectSearch\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_FUSIONSITE\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"ssitecode\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={props.fusionplantSite || []}\r\n                                        value={props.selectedRecord[\"ssitecode\"] || \"\"}\r\n                                        defaultValue={props.selectedRecord[\"ssitecode\"]}\r\n                                        onChange={(event) => props.onComboChange(event, \"ssitecode\", 1)}\r\n                                        //onChange={(event) => props.onComboChange(event, \"ncontrolBasedparameter\", 1)}\r\n                                        closeMenuOnSelect={true}\r\n                                        isMulti={false}\r\n                                />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                                <FormSelectSearch\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_FUSIONPRANENTPLANT\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"splantparentcode\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={props.selectedRecord[\"ssitecode\"]?props.fusionparentplants || []:[]}\r\n                                        value={props.selectedRecord[\"splantparentcode\"] || \"\"}\r\n                                        defaultValue={props.selectedRecord[\"splantparentcode\"]}\r\n                                        //onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\r\n                                        onChange={(event) => props.onComboChange(event, \"splantparentcode\", 2)}\r\n                                        closeMenuOnSelect={true}\r\n                                        isMulti={false}\r\n                                />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                                <FormSelectSearch\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_FUSIONCHILDPLANTS\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"splantchildcode\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={ props.selectedRecord[\"splantparentcode\"]!==undefined? props.fusionchildplants || []:[]}\r\n                                        value={props.selectedRecord[\"splantchildcode\"] || \"\"}\r\n                                        defaultValue={props.selectedRecord[\"splantchildcode\"]}\r\n                                        //onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\r\n                                        onChange={(event) => props.onComboChange(event, \"splantchildcode\", 3)}\r\n                                        closeMenuOnSelect={true}\r\n                                        isMulti={props.operation === \"create\" ? true : false}\r\n                                />\r\n                        </Col>  \r\n                </Col>\r\n        )\r\n}\r\n\r\nexport default injectIntl(AddPlantGroup);"]},"metadata":{},"sourceType":"module"}