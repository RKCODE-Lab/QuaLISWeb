{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\Approval.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { faFileInvoice, faBolt, faBorderAll, faChevronRight, faComment, faCommentDots, faComments, faEye, faFlask, faHistory, faLink, faMicroscope, faPaperclip, faPencilAlt, faSync } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Card, Col, Nav, Row } from 'react-bootstrap';\nimport { ContentPanel } from '../../components/App.styles';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { ProductList } from '../testmanagement/testmaster-styled'; //import SplitPane from \"react-splitter-layout\";\n\nimport SplitterLayout from \"react-splitter-layout\";\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, updateDecision, getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo, validateEsignCredential, crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList, checkListRecord, generateCOAReport, getSampleChildTabDetail, getAttachmentCombo, viewAttachment, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest, getEnforceCommentsHistory, reportGenerate, getSubSampleChildTabDetail } from '../../actions';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport ApprovalResultsTab from './ApprovalResultsTab';\nimport { getControlMap, showEsign, sortData, constructOptionList, getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport TransactionListMasterJson from '../../components/TransactionListMasterJson';\nimport ApprovalFilter from './ApprovalFilter';\nimport { designProperties, transactionStatus, RegistrationType, RegistrationSubType, SideBarSeqno, SideBarTabIndex } from '../../components/Enumeration';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport SampleInfoGrid from './SampleInfoGrid';\nimport SampleInfoView from './SampleInfoView';\nimport ApprovalInstrumentTab from './ApprovalInstrumentTab';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport Esign from '../audittrail/Esign';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport EditApprovalParameter from './EditApprovalParameter'; //import ApprovalHistoryTab from './ApprovalHistoryTab';\n\nimport SampleApprovalHistory from './SampleApprovalHistory';\nimport ResultChangeHistoryTab from './ResultChangeHistoryTab';\nimport ApprovalTask from './ApprovalTask';\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\nimport TemplateForm from '../checklist/checklist/TemplateForm';\nimport Attachments from '../attachmentscomments/attachments/Attachments';\nimport { onSaveSampleAttachment, onSaveSubSampleAttachment, onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\nimport Comments from '../attachmentscomments/comments/Comments';\nimport { onSaveSampleComments, onSaveSubSampleComments, onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions'; //import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport CustomPopOver from '../../components/customPopover';\nimport ScrollBar from 'react-perfect-scrollbar';\nimport ApprovalPrintHistoryTab from './ApprovalPrintHistoryTab';\nimport ApprovalHistoryTab from './ApprovalHistoryTab';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport ReportHistoryTab from './ReportHistoryTab'; // import ReactTooltip from 'react-tooltip';\n\nimport ApprovalUsedMaterial from './ApprovalUsedMaterial';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView'; // import ReactTooltip from 'react-tooltip';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Approval extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.handleSubSamplePageChange = e => {\n      this.setState({\n        subSampleSkip: e.skip,\n        subSampleTake: e.take\n      });\n    };\n\n    this.showAPSampleinfo = () => {\n      this.setState({\n        showSample: true,\n        showTest: false\n      });\n    };\n\n    this.sampleInfoDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.verticalPaneSizeChange = val => {\n      if (this.state.enableAutoHeight) {\n        this.setState({\n          initialVerticalWidth: val - 150\n        });\n      }\n    };\n\n    this.changeSplitterOption = () => {\n      this.setState({\n        enableAutoHeight: !this.state.enableAutoHeight,\n        initialVerticalWidth: \"57vh\"\n      });\n    };\n\n    this.sideNavDetail = screenName => {\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\"); // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      return screenName == \"IDS_RESULTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        tabDetail: this.resultTabDetail(),\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }\n      }) : screenName == \"IDS_ATTACHMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        tabDetail: this.attachmentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }\n      }) : screenName == \"IDS_COMMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\",\n        tabDetail: this.commentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }\n      }) : screenName == \"IDS_INSTRUMENT\" ? /*#__PURE__*/React.createElement(ApprovalInstrumentTab, {\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.instrumentDataState,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_INSTRUMENT\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 29\n        }\n      }) : screenName == \"IDS_MATERIAL\" ? /*#__PURE__*/React.createElement(ApprovalUsedMaterial, {\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        methodUrl: \"ResultUsedMaterial\",\n        controlMap: this.state.controlMap // deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\n        //editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\n        ,\n        dataState: this.state.materialDataState // selectedId={this.props.Login.selectedId || null}\n        ,\n        isActionRequired: false,\n        dataStateChange: this.testDataStateChange //deleteRecord={this.deleteMaterialRecord}\n        ,\n        fetchRecord: this.props.fetchMaterialRecord,\n        userRoleControlRights: this.state.userRoleControlRights,\n        screenName: \"IDS_MATERIAL\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 33\n        }\n      }) : screenName == \"IDS_TASK\" ? /*#__PURE__*/React.createElement(ApprovalTask, {\n        userInfo: this.props.Login.userInfo,\n        ResultUsedTasks: this.props.Login.masterData.ResultUsedTasks,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.taskDataState,\n        masterData: this.props.Login.masterData,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_TASK\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 37\n        }\n      }) : screenName == \"IDS_TESTAPPROVALHISTORY\" ? /*#__PURE__*/React.createElement(ApprovalHistoryTab, {\n        userInfo: this.props.Login.userInfo,\n        ApprovalHistory: this.props.Login.masterData.ApprovalHistory,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.historyDataState,\n        masterData: this.props.Login.masterData,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_TESTAPPROVALHISTORY\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 45\n        }\n      }) : screenName == \"IDS_SAMPLEDETAILS\" ? this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length > 0 ? this.props.Login.masterData.APSelectedSample[this.props.Login.masterData.APSelectedSample.length - 1] : {},\n        SingleItem: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample ? this.state.SingleItem : [],\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(SampleInfoGrid, {\n        selectedSample: this.props.Login.masterData.APSelectedSample,\n        userInfo: this.props.Login.userInfo || {},\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.sampleGridDataState,\n        dataStateChange: this.sampleInfoDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        detailedFieldList: this.gridfillingColumn(this.state.DynamicGridMoreField) || [],\n        primaryKeyField: \"npreregno\",\n        expandField: \"expanded\",\n        screenName: \"IDS_SAMPLEINFO\",\n        jsonField: \"jsondata\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 49\n        }\n      }) : \"\";\n    };\n\n    this.changePropertyViewClose = id => {\n      // this.setState({\n      //             activeTabIndex :undefined,\n      //             activeTestTab:undefined,\n      //             activeTabId :  id\n      //         })\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          activeTabIndex: undefined,\n          activeTestTab: undefined,\n          activeTabId: id\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.changePropertyView = (index, screenName, event, status) => {\n      let id = false;\n\n      if (event && event.ntransactiontestcode) {\n        id = event.ntransactiontestcode;\n      } else if (event && event.ntransactionsamplecode) {\n        id = event.ntransactionsamplecode;\n      } else if (event && event.npreregno) {\n        id = event.npreregno;\n      } //console.log(this.state.activeTabId, id , \"=======>\")\n\n\n      let activeTabIndex;\n      let activeTabId;\n\n      if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false; //activeTabId = this.state.activeTabIndex !== index ? true:false;\n      }\n\n      if (status != \"click\") {\n        if (index) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: screenName == \"IDS_COMMENTS\" ? \"IDS_TESTCOMMENTS\" : screenName === \"IDS_ATTACHMENTS\" ? \"IDS_TESTATTACHMENTS\" : screenName,\n            activeTabIndex //activeTabId\n\n          };\n          this.onTabChange(tabProps);\n        } //     if (index == SideBarTabIndex.RESULT) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_RESULTS\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.INSTRUMENT) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_INSTRUMENT\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.MATERIAL) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_MATERIAL\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.TASK) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_TASK\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //    else if (index == SideBarTabIndex.TESTAPPROVALHISTORY) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_TESTAPPROVALHISTORY\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.ATTACHMENTS) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_TESTATTACHMENTS\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.COMMENTS) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_TESTCOMMENTS\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else {\n        //         if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        //             const updateInfo = {\n        //                 typeName: DEFAULT_RETURN,\n        //                 data: {\n        //                     activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\n        //                     activeTabId: id\n        //                 }\n        //             }\n        //             this.props.updateStore(updateInfo);\n        //         }\n        //     }\n\n      }\n    };\n\n    this.onInputSwitchOnChange = event => {\n      if (event.target.name == \"PopupNav\") {\n        this.setState({\n          enablePropertyPopup: !this.state.enablePropertyPopup\n        });\n      } else {\n        this.setState({\n          enableAutoClick: !this.state.enableAutoClick\n        });\n      }\n    };\n\n    this.onTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n      const tabseqno = tabProps.tabSequence; // if (activeTestTab !== this.props.Login.activeTestTab) {\n\n      if (tabseqno == SideBarSeqno.TEST) {\n        if (this.props.Login.masterData.APSelectedTest && this.props.Login.masterData.APSelectedTest.length > 0) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            APSelectedTest: this.props.Login.masterData.APSelectedTest,\n            ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? String(this.props.Login.masterData.APSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n            npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            activeTestTab,\n            screenName: activeTestTab,\n            resultDataState: this.state.resultDataState,\n            instrumentDataState: this.state.instrumentDataState,\n            materialDataState: this.state.materialDataState,\n            taskDataState: this.state.taskDataState,\n            documentDataState: this.state.documentDataState,\n            historyDataState: this.state.historyDataState,\n            resultChangeDataState: this.state.resultChangeDataState,\n            testCommentDataState: this.state.testCommentDataState,\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getTestChildTabDetail(inputData, true);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTEST\"\n          }));\n        }\n      } else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSubSampleTab: activeTestTab,\n            subSampleCommentDataState: this.state.subSampleCommentDataState,\n            subSampleAttachmentDataState: this.state.subSampleAttachmentDataState\n          };\n          this.props.getSubSampleChildTabDetail(inputData);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLE\"\n          }));\n        }\n      } else {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSample: this.props.Login.masterData.APSelectedSample,\n            npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSampleTab: activeTestTab\n          };\n          this.props.getSampleChildTabDetail(inputData);\n        }\n      } //}\n\n    };\n\n    this.downloadReport = input => {\n      let inputParam = {\n        inputData: {\n          selectedRecord: { ...input.inputData\n          },\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"approval\",\n        operation: \"view\",\n        methodUrl: \"Report\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.subsampleTabDetail = () => {\n      let ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      const tabMap = new Map();\n      let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\n      let {\n        subSampleSkip,\n        subSampleTake\n      } = this.state;\n      subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\n      tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SUBSAMPLEATTACHMENTS\",\n        onSaveClick: this.onAttachmentSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationSampleAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        masterList: this.props.Login.masterData.APSelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDATTACHMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        viewFile: this.props.viewAttachment,\n        addName: \"AddSubSampleAttachment\",\n        editName: \"EditSubSampleAttachment\",\n        deleteName: \"DeleteSubSampleAttachment\",\n        viewName: \"ViewSubSampleAttachment\",\n        methodUrl: \"SubSampleAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        skip: this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0,\n        take: this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n        deleteParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights\n        },\n        editParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\n        },\n        selectedListName: \"IDS_SAMPLEARNO\",\n        displayName: \"ssamplearno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1923,\n          columnNumber: 48\n        }\n      }));\n      tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SUBSAMPLECOMMENTS\",\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationSampleComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        addName: \"AddSubSampleComment\",\n        editName: \"EditSubSampleComment\",\n        deleteName: \"DeleteSubSampleComment\",\n        methodUrl: \"SubSampleComment\",\n        isTestComment: false,\n        masterList: this.props.Login.masterData.APSelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nsamplecommentcode\",\n        dataState: this.state.subSampleCommentDataState,\n        dataStateChange: this.subSampledataStateChange,\n        masterData: this.props.Login.masterData,\n        deleteParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SAMPLEARNO\",\n        displayName: \"ssamplearno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1964,\n          columnNumber: 45\n        }\n      }));\n      return tabMap;\n    };\n\n    this.resultTabDetail = () => {\n      const resultTabMap = new Map();\n      let {\n        testskip,\n        testtake,\n        subSampleSkip,\n        subSampleTake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      resultTabMap.set(\"IDS_RESULTS\", /*#__PURE__*/React.createElement(ApprovalResultsTab, {\n        userInfo: this.props.Login.userInfo,\n        tabSequence: SideBarSeqno.TEST,\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.resultDataState,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_RESULTS\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        getStatusCombo: this.props.getStatusCombo,\n        selectedId: this.props.Login.masterData.selectedParamId,\n        viewFile: this.props.viewAttachment,\n        checkListRecord: this.props.checkListRecord,\n        getEnforceCommentsHistory: this.props.getEnforceCommentsHistory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2021,\n          columnNumber: 41\n        }\n      }));\n      resultTabMap.set(\"IDS_RESULTCHANGEHISTORY\", /*#__PURE__*/React.createElement(ResultChangeHistoryTab, {\n        tabSequence: SideBarSeqno.TEST,\n        userInfo: this.props.Login.userInfo,\n        ApprovalResultChangeHistory: this.props.Login.masterData.ApprovalResultChangeHistory,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.resultChangeDataState,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_RESULTCHANGEHISTORY\",\n        controlMap: this.state.controlMap,\n        masterData: this.props.Login.masterData,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2039,\n          columnNumber: 13\n        }\n      }));\n      return resultTabMap;\n    };\n\n    this.attachmentTabDetail = () => {\n      const attachmentTabMap = new Map();\n      let {\n        testskip,\n        testtake,\n        subSampleSkip,\n        subSampleTake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n      const ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\n      subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\n      attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_TESTATTACHMENTS\",\n        tabSequence: SideBarSeqno.TEST,\n        selectedMaster: selectedTestList,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationTestAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        fetchRecord: this.props.getAttachmentCombo,\n        onSaveClick: this.onAttachmentSaveClick,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDATTACHEMENT\",\n        addName: \"AddTestAttachment\",\n        editName: \"EditTestAttachment\",\n        deleteName: \"DeleteTestAttachment\",\n        viewName: \"ViewTestAttachment\",\n        methodUrl: \"TestAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        subFields: [{\n          [designProperties.VALUE]: \"stestsynonym\"\n        }, {\n          [designProperties.VALUE]: \"screateddate\"\n        }],\n        deleteParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\",\n          masterList: selectedTestList\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2071,\n          columnNumber: 53\n        }\n      }));\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SUBSAMPLEATTACHMENTS\",\n        tabSequence: SideBarSeqno.SUBSAMPLE,\n        onSaveClick: this.onAttachmentSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationSampleAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        masterList: this.props.Login.masterData.APSelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDATTACHMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        viewFile: this.props.viewAttachment,\n        addName: \"AddSubSampleAttachment\",\n        editName: \"EditSubSampleAttachment\",\n        deleteName: \"DeleteSubSampleAttachment\",\n        viewName: \"ViewSubSampleAttachment\",\n        methodUrl: \"SubSampleAttachment\",\n        skip: this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0,\n        take: this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n        deleteParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights\n        },\n        editParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\n        },\n        selectedListName: \"IDS_SAMPLEARNO\",\n        displayName: \"ssamplearno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2115,\n          columnNumber: 58\n        }\n      }));\n      attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SAMPLEATTACHMENTS\",\n        tabSequence: SideBarSeqno.SAMPLE,\n        selectedMaster: this.props.Login.masterData.APSelectedSample,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        onSaveClick: this.onAttachmentSaveClick,\n        masterList: this.props.Login.masterData.APSelectedSample,\n        masterAlertStatus: \"IDS_SELECTSAMPLETOADDATTACHEMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        addName: \"AddSampleAttachment\",\n        editName: \"EditSampleAttachment\",\n        deleteName: \"DeleteSampleAttachment\",\n        viewName: \"ViewSampleAttachment\",\n        methodUrl: \"SampleAttachment\",\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"SampleAttachment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: this.props.Login.screenName\n        },\n        editParam: {\n          methodUrl: \"SampleAttachment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.APSelectedSample\n        },\n        selectedListName: \"IDS_ARNUMBER\",\n        displayName: \"sarno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2157,\n          columnNumber: 13\n        }\n      }));\n      return attachmentTabMap;\n    };\n\n    this.commentTabDetail = () => {\n      const commentTabMap = new Map();\n      let {\n        testskip,\n        testtake,\n        subSampleSkip,\n        subSampleTake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n      const ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\n      subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\n      commentTabMap.set(\"IDS_TESTCOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_TESTCOMMENTS\",\n        isSampleTestComment: true,\n        tabSequence: SideBarSeqno.TEST,\n        selectedMaster: selectedTestList,\n        onSaveClick: this.onCommentsSaveClick,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationTestComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDCOMMENTS\",\n        addName: \"AddTestComment\",\n        editName: \"EditTestComment\",\n        deleteName: \"DeleteTestComment\",\n        methodUrl: \"TestComment\",\n        isTestComment: false,\n        primaryKeyField: \"ntestcommentcode\",\n        dataState: this.state.testCommentDataState,\n        dataStateChange: this.testDataStateChange,\n        masterData: this.props.Login.masterData,\n        deleteParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\",\n          operation: \"update\",\n          masterList: selectedTestList,\n          ncontrolCode: editTestCommentsId\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2216,\n          columnNumber: 47\n        }\n      }));\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SUBSAMPLECOMMENTS\",\n        tabSequence: SideBarSeqno.SUBSAMPLE,\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationSampleComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        addName: \"AddSubSampleComment\",\n        editName: \"EditSubSampleComment\",\n        deleteName: \"DeleteSubSampleComment\",\n        methodUrl: \"SubSampleComment\",\n        isTestComment: false,\n        masterList: this.props.Login.masterData.APSelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nsamplecommentcode\",\n        dataState: this.state.subSampleCommentDataState,\n        dataStateChange: this.subSampledataStateChange,\n        masterData: this.props.Login.masterData,\n        deleteParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SAMPLEARNO\",\n        displayName: \"ssamplearno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2263,\n          columnNumber: 53\n        }\n      }));\n      commentTabMap.set(\"IDS_SAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SAMPLECOMMENTS\",\n        tabSequence: SideBarSeqno.SAMPLE,\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"APSelectedSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterData: this.props.Login.masterData,\n        addName: \"AddSampleComment\",\n        editName: \"EditSampleComment\",\n        deleteName: \"DeleteSampleComment\",\n        methodUrl: \"SampleComment\",\n        isTestComment: false,\n        masterList: this.props.Login.masterData.APSelectedSample,\n        masterAlertStatus: \"IDS_SELECTSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nregcommentcode\",\n        dataState: this.state.testCommentDataState,\n        dataStateChange: this.testDataStateChange,\n        deleteParam: {\n          methodUrl: \"SampleComment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SampleComment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.APSelectedSample || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_ARNUMBER\",\n        displayName: \"sarno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2308,\n          columnNumber: 49\n        }\n      }));\n      return commentTabMap;\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord;\n\n      if (value === 0 || value === 0.0) {\n        selectedRecord[name] = \"\";\n        this.setState({\n          selectedRecord\n        });\n      } else {\n        selectedRecord[name] = value;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n      setTimeout(() => {\n        this._scrollBarRef.updateScroll();\n      });\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.checkRetestAction = (action, ncontrolCode) => {\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n\n      if (selectedTestList.length > 0) {\n        if (action.ntransactionstatus === transactionStatus.RETEST) {\n          if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\n            if (selectedTestList.length > 1) {\n              toast.warn(this.props.intl.formatMessage({\n                id: \"IDS_SELECTONETESTONLY\"\n              }));\n            } else {\n              const updateInfo = {\n                typeName: DEFAULT_RETURN,\n                data: {\n                  action,\n                  masterData: this.props.Login.masterData,\n                  openChildModal: true,\n                  screenName: \"IDS_RETESTCOUNT\",\n                  operation: \"dynamic\"\n                }\n              };\n              this.props.updateStore(updateInfo);\n            }\n          } else {\n            this.performTestActions(action, ncontrolCode);\n          }\n        } else {\n          this.performTestActions(action, ncontrolCode);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.performTestActions = (action, ncontrolCode) => {\n      if (action.ntransactionstatus === transactionStatus.RETEST && this.state.selectedRecord && this.state.selectedRecord.retestcount > this.props.Login.masterData.retestcount) {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_MAX\"\n        }) + \": \" + this.props.Login.masterData.retestcount);\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\n\n        if (ntransCode === transactionStatus.ALL) {\n          ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n        } else {\n          ntransCode = ntransCode + \",\" + action.ntransactionstatus;\n        }\n\n        let {\n          testskip,\n          testtake\n        } = this.state;\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n        testList = testList.slice(testskip, testskip + testtake);\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n        const inputParam = {\n          inputData: {\n            'performaction': {\n              npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\n              ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n              ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\n              nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              nTransStatus: action.ntransactionstatus,\n              stransdisplaystatus: action.stransdisplaystatus,\n              ntransactionstatus: String(-1),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nflag: 2,\n              ntype: 1,\n              userinfo: this.props.Login.userInfo,\n              APSelectedSample: this.props.Login.masterData.APSelectedSample,\n              APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n              APSelectedTest: this.props.Login.masterData.APSelectedTest,\n              retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n              ncontrolCode,\n              checkBoxOperation: 3,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n            },\n            userinfo: this.props.Login.userInfo\n          },\n          masterData: this.props.Login.masterData,\n          methodUrl: \"performaction\",\n          postParamList: this.postParamList\n        };\n\n        if (action.nesignneed === transactionStatus.YES) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openChildModal: true,\n              screenName: \"performaction\",\n              operation: \"dynamic\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.performAction(inputParam);\n        }\n      }\n    };\n\n    this.updateDecision = action => {\n      let ntransCode = this.props.Login.masterData.realFilterStatusValue.ntransactionstatus;\n\n      if (ntransCode === transactionStatus.ALL) {\n        ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n      }\n\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      let {\n        skip,\n        take\n      } = this.state;\n      let sampleList = [...this.props.Login.masterData.AP_SAMPLE];\n      sampleList = sampleList.splice(skip, skip + take);\n      let selectedsampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\n\n      if (selectedsampleList.length > 0) {\n        const inputData = {\n          'updatedecision': {\n            npreregno: selectedsampleList.map(sample => sample.npreregno).join(\",\"),\n            nTransStatus: action.ntransactionstatus,\n            ntransactionstatus: String(ntransCode),\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : 0,\n            nflag: 1,\n            userinfo: this.props.Login.userInfo,\n            napprovalversioncode: String(selectedsampleList[0].napprovalversioncode),\n            napprovalconfigcode: selectedsampleList[0].napprovalconfigcode,\n            selectedSample: this.props.Login.masterData.selectedSample\n          },\n          userinfo: this.props.Login.userInfo\n        };\n        let inputParam = {\n          postParamList: this.postParamList,\n          inputData,\n          masterData: this.props.Login.masterData\n        };\n\n        if (action.nesignneed === transactionStatus.YES) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openChildModal: true,\n              screenName: \"updatedecision\",\n              operation: \"decision\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.updateDecision(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMPLE\"\n        }));\n      }\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item\n            };\n            this.props.getRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item\n            };\n            this.props.getRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              nsectioncode: this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection.length > 0 ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode : null\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          const inputParamData = {\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            userinfo: this.props.Login.userInfo,\n            masterData: { ...this.props.Login.masterData\n            },\n            RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n            ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n            stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n            //  nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n            ndesigntemplatemappingcode: comboData.value,\n            DesignTemplateMappingValue: comboData.item\n          };\n          this.props.getFilterBasedTest(inputParamData);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            let ApprovalVersionValue = comboData.item;\n            ApprovalVersionValue['napproveconfversioncode'] = comboData.value;\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              napproveconfversioncode: comboData.value,\n              ApprovalVersionValue: comboData.item,\n              //   nsectioncode: this.props.Login.masterData.UserSectionValue!== null&&\n              //    this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getFilterStatus(inputParamData);\n          }\n        } else if (fieldName === 'nsectioncode') {\n          if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n            // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                UserSectionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              nsectioncode: comboData.value === -1 ? null // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n              : comboData.value,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n            };\n            this.props.getFilterBasedTest(inputParamData);\n          }\n        } else if (fieldName === 'njobstatuscode') {\n          if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n            let masterData = { ...this.props.Login.masterData,\n              JobStatusValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else {\n          if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n            //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n            //  const updateInfo = {\n            //     typeName: DEFAULT_RETURN,\n            //    data: { masterData }\n            // }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                FilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: comboData.value,\n              stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n              nsectioncode: null,\n              //this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1 //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n              //: this.props.Login.masterData.UserSectionValue.nsectioncode, \n\n            };\n            this.props.getFilterBasedTest(inputParamData);\n          }\n        }\n      }\n    };\n\n    this.onComboChange = comboData => {\n      if (comboData) {\n        let masterData = { ...this.props.Login.masterData,\n          GradeValue: comboData\n        };\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            masterData\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getApprovalVersion(inputParam);\n    };\n\n    this.changeMandatory = (event, dataItem) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      let value = event.currentTarget.checked ? transactionStatus.YES : transactionStatus.NO;\n      selectedRecord[\"approvalParameterEdit\"] = { ...selectedRecord[\"approvalParameterEdit\"],\n        [dataItem.ntransactionresultcode]: value\n      };\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onReload = () => {\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        // ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) : \"-1\",\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\" : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\n        ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab || \"\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\n        checkBoxOperation: 3,\n        ntype: 2,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          resultDataState: this.state.resultDataState,\n          instrumentDataState: this.state.instrumentDataState,\n          materialDataState: this.state.materialDataState,\n          taskDataState: this.state.taskDataState,\n          documentDataState: this.state.documentDataState,\n          resultChangeDataState: this.state.resultChangeDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          historyDataState: this.state.historyDataState,\n          samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n          sampleHistoryDataState: this.state.sampleHistoryDataState\n        };\n        this.props.getApprovalSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n      let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n      let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\" : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab,\n        activeSampleTab: this.props.Login.activeSampleTab,\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        checkBoxOperation: 3,\n        ntype: 2,\n        ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\n        // let obj = this.covertDatetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate)\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          resultDataState: this.state.resultDataState,\n          instrumentDataState: this.state.instrumentDataState,\n          materialDataState: this.state.materialDataState,\n          taskDataState: this.state.taskDataState,\n          documentDataState: this.state.documentDataState,\n          resultChangeDataState: this.state.resultChangeDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          historyDataState: this.state.historyDataState,\n          samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n          sampleHistoryDataState: this.state.sampleHistoryDataState\n        };\n        this.props.getApprovalSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.testDataStateChange = event => {\n      switch (this.props.Login.activeTestTab) {\n        case \"IDS_RESULTS\":\n          this.setState({\n            resultDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_INSTRUMENT\":\n          this.setState({\n            instrumentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_MATERIAL\":\n          this.setState({\n            materialDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TASK\":\n          this.setState({\n            taskDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTATTACHMENTS\":\n          this.setState({\n            instrumentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTCOMMENTS\":\n          this.setState({\n            testCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_DOCUMENTS\":\n          this.setState({\n            documentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_RESULTCHANGEHISTORY\":\n          this.setState({\n            resultChangeDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTAPPROVALHISTORY\":\n          this.setState({\n            historyDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            resultDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleGridDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.subSampledataStateChange = event => {\n      switch (this.props.Login.activeSubSampleTab) {\n        case \"IDS_SUBSAMPLECOMMENTS\":\n          this.setState({\n            subSampleCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SUBSAMPLEATTACHMENTS\":\n          this.setState({\n            subSampleAttachmentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            popUptestDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleDataStateChange = event => {\n      switch (this.props.Login.activeSampleTab) {\n        case \"IDS_SAMPLEINFO\":\n          this.setState({\n            sampleGridDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SAMPLEAPPROVALHISTORY\":\n          this.setState({\n            sampleHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_PRINTHISTORY\":\n          this.setState({\n            samplePrintHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_REPORTHISTORY\":\n          this.setState({\n            reportHistoryDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            sampleGridDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      let ok = true;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.operation === 'enforce') {\n        inputData[\"enforcestatus\"] = {\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n          ngradecode: this.props.Login.masterData.GradeValue.value || -1,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          ntransactiontestcode: this.state.selectedRecord.ntransactiontestcode,\n          ntransactionresultcode: this.state.selectedRecord.ntransactionresultcode,\n          senforcestatuscomment: this.state.selectedRecord.senforcestatuscomment || \"\",\n          selectedTestCode: this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\")\n        };\n        inputParam = {\n          methodUrl: \"EnforceStatus\",\n          classUrl: 'approval',\n          inputData: inputData,\n          postParam: {\n            selectedObject: \"APSelectedTest\",\n            primaryKeyField: \"ntransactiontestcode\"\n          },\n          operation: \"update\"\n        };\n      } else if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord: this.state.selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation\n        };\n        inputParam = onSaveSampleAttachment(saveParam);\n      } else {\n        let approvalparameter = [];\n\n        if (this.state.selectedRecord.approvalParameterEdit) {\n          Object.keys(this.state.selectedRecord.approvalParameterEdit).map(key => approvalparameter.push({\n            ntransactionresultcode: key,\n            nreportmandatory: this.state.selectedRecord.approvalParameterEdit[key]\n          }));\n          inputData[\"approvalparameter\"] = approvalparameter;\n          inputParam = {\n            methodUrl: \"ApprovalParameter\",\n            classUrl: 'approval',\n            inputData: inputData,\n            postParam: {\n              selectedObject: \"APSelectedTest\",\n              primaryKeyField: \"ntransactiontestcode\"\n            },\n            operation: \"update\"\n          };\n        } else {\n          ok = false;\n          this.handleClose();\n        }\n      }\n\n      if (ok) {\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openChildModal: true,\n              operation: this.props.Login.operation,\n              screenName: \"IDS_ENFORCESTATUS\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n        }\n      }\n    };\n\n    this.handleClose = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openChildModal = this.props.Login.openChildModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let templateData = this.props.Login.templateData;\n      let operation = this.props.Login.operation;\n      let openTemplateModal = this.props.Login.openTemplateModal;\n\n      if (this.props.Login.loadEsign) {\n        if (operation === \"delete\" || operation === \"dynamic\" || operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\n          loadEsign = false;\n          openModal = false;\n          openChildModal = false;\n          selectedRecord = {};\n          templateData = {};\n          operation = undefined;\n        } else {\n          loadEsign = false;\n        }\n\n        selectedRecord['esignpassword'] = \"\";\n        selectedRecord['esigncomments'] = \"\";\n        selectedRecord['esignreason'] = \"\";\n      } else {\n        openTemplateModal = false;\n        openModal = false;\n        openChildModal = false;\n        selectedRecord = {};\n        templateData = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          openChildModal,\n          loadEsign,\n          selectedRecord,\n          templateData,\n          selectedParamId: null,\n          operation,\n          openTemplateModal\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData,\n        operation: this.props.Login.operation\n      };\n\n      if (this.props.Login.operation === 'dynamic' || this.props.Login.operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\n        this.props.validateEsignforApproval(inputParam, \"openChildModal\");\n      } else {\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\n      }\n    };\n\n    this.onTemplateInputChange = (event, control) => {\n      let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTemplateComboChange = (comboData, control) => {\n      let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTemplateDateChange = (dateData, control) => {\n      let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n\n      if (selectedTestList.length > 0) {\n        if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\n          let saveParam = {\n            userInfo: this.props.Login.userInfo,\n            isTestComment: this.props.isTestComment,\n            selectedRecord,\n            masterData: this.props.Login.masterData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n          };\n          inputParam = onSaveTestComments(saveParam, selectedTestList);\n        }\n\n        if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\n          let sampleList = [];\n\n          if (this.props.Login.masterData.searchedSample !== undefined) {\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\n          } else {\n            sampleList = this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take);\n          }\n\n          let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\n          let saveParam = {\n            userInfo: this.props.Login.userInfo,\n            isTestComment: this.props.isTestComment,\n            selectedRecord,\n            masterData: this.props.Login.masterData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n          };\n          inputParam = onSaveSampleComments(saveParam, acceptList);\n        }\n\n        if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\n          let sampleList = [];\n\n          if (this.props.Login.masterData.searchedSubSample !== undefined) {\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake), \"npreregno\");\n          } else {\n            sampleList = this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake);\n          }\n\n          let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\"); // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\n\n          let saveParam = {\n            userInfo: this.props.Login.userInfo,\n            isTestComment: this.props.isTestComment,\n            selectedRecord,\n            masterData: this.props.Login.masterData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n          };\n          inputParam = onSaveSubSampleComments(saveParam, acceptList);\n        }\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              operation: this.props.Login.operation,\n              screenName: this.props.Login.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      let {\n        testskip,\n        testtake,\n        skip,\n        take\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let sampleList = this.props.Login.masterData.searchedSample ? [...this.props.Login.masterData.searchedSample] : [...this.props.Login.masterData.AP_SAMPLE];\n      sampleList = sampleList.slice(skip, skip + take);\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let ok = true;\n\n      if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n        };\n\n        if (selectedSampleList.length > 0) {\n          inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\n        } else {\n          ok = false;\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLE\"\n          }));\n        }\n      } else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.APSelectedSubSample);\n      } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n        };\n\n        if (selectedTestList.length > 0) {\n          inputParam = onSaveTestAttachment(saveParam, selectedTestList);\n        } else {\n          ok = false;\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLE\"\n          }));\n        }\n      }\n\n      if (ok) {\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              operation: this.props.Login.operation,\n              screenName: this.props.Login.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\n        }\n      }\n    };\n\n    this.generateCOAReport = (inputData, ncontrolCode) => {\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        let inputParam = {\n          reporparam: inputData\n        };\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openChildModal: true,\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: \"reportgeneration\",\n            screenName: this.props.Login.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.generateCOAReport(inputData);\n      }\n    };\n\n    this.searchSampleRef = React.createRef();\n    this.searchSubSampleRef = React.createRef();\n    this.searchTestRef = React.createRef();\n    this.formRef = React.createRef();\n    this.state = {\n      sampleGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      resultDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }]\n\n      },\n      instrumentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      materialDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }] \n\n      },\n      taskDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 // group: [{ field: 'sarno' }] \n\n      },\n      testCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      documentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      resultChangeDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      sampleHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }] \n\n      },\n      reportHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      historyDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }] \n\n      },\n      dataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      samplePrintHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }]\n\n      },\n      subSampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      subSampleAttachmentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      masterStatus: \"\",\n      error: \"\",\n      oldComboData: {},\n      selectedRecord: {},\n      operation: \"\",\n      screenName: undefined,\n      showSample: false,\n      showSubSample: false,\n      showTest: true,\n      sampleListColumns: [],\n      subSampleListColumns: [],\n      testListColumns: [],\n      TableExpandableItem: [],\n      SingleItem: [],\n      SampleGridItem: [],\n      SampleGridExpandableItem: [],\n      sampleListMainField: [],\n      subSampleListMainField: [],\n      testListMainField: [],\n      testMoreField: [],\n      firstPane: 0,\n      paneHeight: 0,\n      secondPaneHeight: 0,\n      tabPane: 0,\n      SampletypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      ConfigVersionList: [],\n      UserSectionList: [],\n      stateDynamicDesign: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      TestList: [],\n      skip: 0,\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      testskip: 0,\n      testtake: this.props.Login.settings && this.props.Login.settings[12],\n      splitChangeWidthPercentage: 22,\n      subSampleSkip: 0,\n      subSampleTake: this.props.Login.settings && this.props.Login.settings[12],\n      initialVerticalWidth: \"57vh\",\n      enablePin: false\n    }; //this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.multilingualMsg\n      }));\n      props.Login.multilingualMsg = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  } // onSecondaryPaneSizeChange = (e, val) => {\n  //     this.setState({\n  //         firstPane: e - val,\n  //         tabPane: e - 80,\n  //         childPane: this.state.parentHeight - e - 80\n  //     })\n  // }\n\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height - 50\n      });\n    }\n  }\n\n  constructDesign(list) {\n    let newList = [];\n\n    if (list.length > 0) {\n      list.map(i => {\n        newList.push({\n          [designProperties.LABEL]: i,\n          [designProperties.VALUE]: i\n        });\n      });\n    }\n\n    return newList;\n  }\n\n  showAPTestList() {\n    this.setState({\n      showTest: true,\n      showSample: false,\n      showSubSample: false\n    });\n  }\n\n  showAPSubSampleinfo() {\n    this.setState({\n      showSample: false,\n      showTest: true,\n      showSubSample: !this.state.showSubSample\n    });\n  }\n\n  gridfillingColumn(data) {\n    //  const tempArray = [];\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    const filterSampleParam = {\n      inputListName: \"AP_SAMPLE\",\n      selectedObject: \"APSelectedSample\",\n      primaryKeyField: \"npreregno\",\n      fetchUrl: \"approval/getApprovalSubSample\",\n      isSortable: true,\n      sortValue: 'npreregno',\n      sortList: ['AP_TEST'],\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      fecthInputObject: {\n        ntype: 2,\n        nflag: 2,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode || -1,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue.ntestcode,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        userinfo: this.props.Login.userInfo,\n        checkBoxOperation: 3,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      // searchFieldList: [\"sarno\", \"dregdate\", \"sdecisionstatus\", \"ssampletypestatus\", \"smanuflotno\", \"smanufname\", \"smanufsitename\", \"sproductcatname\", \"sproductname\", \"sspecname\"],\n      searchFieldList: this.state.sampleSearchField || [],\n      changeList: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"APSelectedSample\", \"APSelectedSubSample\", \"APSelectedTest\", \"PrintHistory\", \"COAHistory\"]\n    };\n    const filterSubSampleParam = {\n      inputListName: \"AP_SUBSAMPLE\",\n      selectedObject: \"APSelectedSubSample\",\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      isSortable: true,\n      sortValue: 'npreregno',\n      sortList: ['AP_TEST'],\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      fecthInputObject: {\n        ntype: 2,\n        nflag: 2,\n        npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode || -1,\n        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode || -1,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode : null,\n        nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        userinfo: this.props.Login.userInfo,\n        checkBoxOperation: 3,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.state.subsampleSearchField || [],\n      changeList: [\"AP_TEST\", \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"APSelectedSubSample\", \"APSelectedTest\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]\n    };\n    const filterTestParam = {\n      inputListName: \"AP_TEST\",\n      selectedObject: \"APSelectedTest\",\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      fecthInputObject: {\n        ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\n        userinfo: this.props.Login.userInfo,\n        checkBoxOperation: 3,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\n      },\n      isSingleSelect: false,\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.state.testSearchField || [],\n      changeList: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"APSelectedTest\"]\n    };\n    let AP_SampleList = this.props.Login.masterData.AP_SAMPLE ? sortData(this.props.Login.masterData.AP_SAMPLE, 'descending', 'npreregno') : [];\n    let AP_SubSampleList = this.props.Login.masterData.AP_SUBSAMPLE ? this.props.Login.masterData.AP_SUBSAMPLE : [];\n    let AP_TestList = this.props.Login.masterData.AP_TEST ? this.props.Login.masterData.AP_TEST : [];\n    let decisionStatus = this.props.Login.masterData.decisionStatus ? sortData(this.props.Login.masterData.decisionStatus, 'ascending', 'ntransactionstatus') : [];\n    let actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'descending', 'ntransactionstatus') : [];\n    let subSampleGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n      ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n      nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n      activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      searchSubSampleRef: this.searchSubSampleRef,\n      searchTestRef: this.searchTestRef,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      subSampleSkip: this.state.subSampleSkip,\n      subSampleTake: this.state.subSampleTake,\n      resultDataState: this.state.resultDataState,\n      instrumentDataState: this.state.instrumentDataState,\n      materialDataState: this.state.materialDataState,\n      taskDataState: this.state.taskDataState,\n      documentDataState: this.state.documentDataState,\n      resultChangeDataState: this.state.resultChangeDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      historyDataState: this.state.historyDataState,\n      samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n      sampleHistoryDataState: this.state.sampleHistoryDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n    };\n    let testGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\n      nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n      ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\n      activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      searchTestRef: this.searchTestRef,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      resultDataState: this.state.resultDataState,\n      instrumentDataState: this.state.instrumentDataState,\n      materialDataState: this.state.materialDataState,\n      taskDataState: this.state.taskDataState,\n      documentDataState: this.state.documentDataState,\n      resultChangeDataState: this.state.resultChangeDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      historyDataState: this.state.historyDataState,\n      samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n      sampleHistoryDataState: this.state.sampleHistoryDataState,\n      subSampleCommentDataState: this.state.subSampleCommentDataState,\n      subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n      nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n      activeTabIndex: this.state.enableAutoClick ? 1 : \"\"\n    };\n    let testChildGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\n      ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample && this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\n      activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      postParamList: this.postParamList,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      resultDataState: this.state.resultDataState,\n      instrumentDataState: this.state.instrumentDataState,\n      materialDataState: this.state.materialDataState,\n      taskDataState: this.state.taskDataState,\n      documentDataState: this.state.documentDataState,\n      historyDataState: this.state.historyDataState,\n      resultChangeDataState: this.state.resultChangeDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n      activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, // {\n    //     \"label\": \"IDS_SAMPLETYPE\",\n    //     \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\n    //         this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\n    // }, \n    {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, // {\n    //     \"label\": \"IDS_DESIGNTEMPLATE\",\n    //     \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ?\n    //         this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" :\n    //         this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : \"NA\"\n    // },\n    // {\n    //     \"label\": \"IDS_CONFIGVERSION\",\n    //     \"value\": this.props.Login.masterData.realApprovalVersionValue ?\n    //         this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\n    //         this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\n    // // },\n    // {\n    //     \"label\": \"IDS_SECTION\",\n    //     \"value\": this.props.Login.masterData.realUserSectionValue ?\n    //         this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\n    //         this.props.Login.masterData.UserSectionValue ?\n    //             this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\n    // },\n    {\n      \"label\": \"IDS_Test\",\n      \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" : this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_TESTSTATUS\",\n      \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\n    }];\n    const reportPreviewId = this.state.controlMap.has(\"SamplePreviewReport\") && this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode;\n    const editParamId = this.state.controlMap.has(\"EditReportMandatory\") && this.state.controlMap.get(\"EditReportMandatory\").ncontrolcode;\n    const TestDecisionActionId = this.state.controlMap.has(\"TestDecisionAction\") && this.state.controlMap.get(\"TestDecisionAction\").ncontrolcode;\n    const TestApprovalActionId = this.state.controlMap.has(\"TestApprovalAction\") && this.state.controlMap.get(\"TestApprovalAction\").ncontrolcode;\n    const reportGenerateId = this.state.controlMap.has(\"GenerateCOA\") && this.state.controlMap.get(\"GenerateCOA\").ncontrolcode;\n    const coaReportId = this.state.controlMap.has(\"COAReport\") && this.state.controlMap.get(\"COAReport\").ncontrolcode;\n    let {\n      testskip,\n      testtake\n    } = this.state;\n    let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n    const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n    testList = testList.slice(testskip, testskip + testtake);\n    let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\"); // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n\n    let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n    this.postParamList = [{\n      filteredListName: \"searchedSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSampleRef,\n      primaryKeyField: \"npreregno\",\n      fetchUrl: \"approval/getApprovalSubSample\",\n      fecthInputObject: subSampleGetParam,\n      selectedObject: \"APSelectedSample\",\n      inputListName: \"AP_SAMPLE\",\n      updatedListname: \"updatedSample\",\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\n    }, {\n      filteredListName: \"searchedSubSample\",\n      updatedListname: \"updatedSubSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSubSampleRef,\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      fecthInputObject: testGetParam,\n      selectedObject: \"APSelectedSubSample\",\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      inputListName: \"AP_SUBSAMPLE\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\n    }, {\n      filteredListName: \"searchedTests\",\n      clearFilter: \"no\",\n      searchRef: this.searchTestRef,\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      fecthInputObject: testChildGetParam,\n      selectedObject: \"APSelectedTest\",\n      inputListName: \"AP_TEST\",\n      updatedListname: \"updatedTest\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\", \"TestList\"]\n    }];\n    const testDesign = /*#__PURE__*/React.createElement(ContentPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 25\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TEST\"\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0 sm-pager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 938,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      cardHead: 94 //clickIconGroup={true}\n      // paneHeight={this.state.initialVerticalWidth}\n      ,\n      needMultiSelect: true,\n      masterList: this.props.Login.masterData.searchedTests || AP_TestList,\n      selectedMaster: this.props.Login.masterData.APSelectedTest || [],\n      primaryKeyField: \"ntransactiontestcode\" //getMasterDetail={this.props.getTestChildTabDetail}\n      ,\n      getMasterDetail: (event, status) => {\n        this.props.getTestChildTabDetail(event, status);\n        this.state.enableAutoClick && this.changePropertyView(1, \"IDS_RESULTS\", event, \"click\");\n      },\n      inputParam: testChildGetParam,\n      additionalParam: [],\n      mainField: 'stestsynonym',\n      selectedListName: \"APSelectedTest\",\n      objectName: \"test\",\n      listName: \"IDS_TEST\",\n      pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n      showStatusLink: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      showStatusIcon: false,\n      showStatusName: true,\n      subFieldsLabel: true // jsonField={'jsondata'}\n      //jsonDesignFields={false}\n      ,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"sfilterstatus\",\n      selectionColorField: \"scolorhexcode\",\n      selectionList: this.props.Login.masterData.FilterStatus || [],\n      needSubFieldlabel: true,\n      subFields: this.state.testListColumns,\n      moreField: this.state.testMoreField,\n      needValidation: false,\n      needFilter: false,\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedTests\",\n      searchRef: this.searchTestRef,\n      filterParam: filterTestParam,\n      skip: this.state.testskip,\n      take: this.state.testtake,\n      showMoreResetList: true,\n      showMoreResetListName: \"AP_SAMPLE\",\n      handlePageChange: this.handleTestPageChange,\n      buttonCount: 5,\n      childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"ApprovalHistory\"],\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex justify-content-end icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        hidden: this.state.userRoleControlRights.indexOf(editParamId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_EDITREPORTMANDATORY\"\n        }) //  data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-place\": \"left\",\n        className: \"btn btn-circle outline-grey\",\n        onClick: () => this.props.getParameterEdit({\n          APSelectedTest: this.props.Login.masterData.APSelectedTest,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPencilAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 37\n        }\n      })), this.props.Login.masterData.actionStatus && this.state.userRoleControlRights.indexOf(TestApprovalActionId) !== -1 && actionStatus.length > 0 ? /*#__PURE__*/React.createElement(CustomPopOver, {\n        icon: faBolt,\n        nav: true,\n        data: actionStatus,\n        btnClasses: \"btn-circle btn_grey ml-2\",\n        dynamicButton: value => this.checkRetestAction(value, TestApprovalActionId),\n        textKey: \"stransdisplaystatus\",\n        iconKey: \"ntransactionstatus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 37\n        }\n      }) : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 21\n      }\n    }))));\n    let mainDesign = \"\";\n\n    if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\n      mainDesign = /*#__PURE__*/React.createElement(SplitterLayout, {\n        borderColor: \"#999\",\n        primaryIndex: 1,\n        percentage: true,\n        secondaryInitialSize: this.state.splitChangeWidthPercentage // onSecondaryPaneSizeChange={this.paneSizeChange}\n        ,\n        primaryMinSize: 40,\n        secondaryMinSize: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          borderBottom: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: \"inline-block\",\n          marginTop: \"1%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 29\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_SUBSAMPLE\"\n      })))), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"p-0  sm-pager\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TransactionListMasterJson //clickIconGroup={true}\n      , {\n        cardHead: 94 //paneHeight={this.state.initialVerticalWidth}\n        ,\n        masterList: this.props.Login.masterData.searchedSubSample || AP_SubSampleList,\n        selectedMaster: this.props.Login.masterData.APSelectedSubSample,\n        primaryKeyField: \"ntransactionsamplecode\",\n        getMasterDetail: this.props.getTestDetail,\n        inputParam: testGetParam,\n        additionalParam: [],\n        mainField: \"ssamplearno\",\n        selectedListName: \"APSelectedSubSample\",\n        objectName: \"subSample\",\n        listName: \"IDS_SUBSAMPLE\",\n        showStatusLink: true,\n        showStatusName: true,\n        statusFieldName: \"stransdisplaystatus\",\n        statusField: \"ntransactionstatus\",\n        selectionList: this.state.selectedFilter,\n        selectionField: \"ntransactionstatus\",\n        selectionFieldName: \"sfilterstatus\",\n        selectionColorField: \"stranscolor\",\n        statusColor: \"stranscolor\",\n        subFields: this.state.DynamicSubSampleColumns,\n        moreField: this.state.subSampleMoreField,\n        needValidation: false,\n        needMultiSelect: true,\n        needFilter: false,\n        searchRef: this.searchSubSampleRef,\n        filterParam: filterSubSampleParam,\n        filterColumnData: this.props.filterTransactionList,\n        searchListName: \"searchedSubSample\",\n        skip: this.state.subSampleSkip,\n        take: this.state.subSampleTake,\n        handlePageChange: this.handleSubSamplePageChange,\n        pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n        childTabsKey: [\"AP_TEST\", \"ApprovalParameter\", \"Registration\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 25\n        }\n      }))), testDesign);\n    } else {\n      mainDesign = testDesign;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: \"true\",\n      bsPrefix: \"toolbar-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: `vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: ` tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"} ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      percentage: true,\n      primaryIndex: 1,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage //onSecondaryPaneSizeChange={this.paneSizeChange} \n      ,\n      primaryMinSize: 40,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1098,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar-top-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJson, {\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      needMultiSelect: true,\n      masterList: this.props.Login.masterData.searchedSample || AP_SampleList,\n      selectedMaster: this.props.Login.masterData.APSelectedSample,\n      primaryKeyField: \"npreregno\",\n      getMasterDetail: this.props.getsubSampleDetail,\n      inputParam: subSampleGetParam,\n      additionalParam: ['napprovalversioncode'],\n      mainField: 'sarno',\n      selectionList: this.state.selectedFilter,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"sfilterstatus\",\n      selectionColorField: \"stranscolor\",\n      selectedListName: \"APSelectedSample\",\n      objectName: \"sample\",\n      listName: \"IDS_SAMPLE\",\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedSample\",\n      needValidation: true,\n      validationKey: \"napprovalversioncode\",\n      validationFailMsg: \"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: this.state.DynamicSampleColumns,\n      moreField: this.state.sampleMoreField,\n      jsonDesignFields: true,\n      jsonField: 'jsondata',\n      showStatusLink: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\" //statusColor=\"sdecisioncolor\"\n      ,\n      statusColor: \"stranscolor\",\n      showStatusIcon: false,\n      showStatusName: true,\n      needFilter: true,\n      searchRef: this.searchSampleRef,\n      filterParam: filterSampleParam,\n      skip: this.state.skip,\n      take: this.state.take,\n      handlePageChange: this.handlePageChange,\n      showStatusBlink: true //splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\n      ,\n      childTabsKey: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"SampleApprovalHistory\", \"RegistrationAttachment\", \"PrintHistory\", \"COAHistory\", \"RegistrationComment\"],\n      actionIcons: [this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? {\n        title: \"Report\",\n        controlname: \"reports\",\n        objectName: \"sample\",\n        hidden: this.state.userRoleControlRights.indexOf(reportPreviewId) === -1,\n        // onClick: ()=>this.previewSampleReport(reportPreviewId),\n        //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\n        onClick: this.props.previewSampleReport,\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: reportPreviewId\n        }\n      } : this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE ? {\n        title: \"Report\",\n        controlname: \"reports\",\n        objectName: \"sample\",\n        hidden: this.state.userRoleControlRights.indexOf(reportGenerateId) === -1,\n        // onClick: ()=>this.previewSampleReport(reportPreviewId),\n        //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\n        onClick: obj => this.generateCOAReport(obj, reportGenerateId),\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: reportPreviewId,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode\n        }\n      } : {\n        title: \"Report\",\n        controlname: \"reports\",\n        objectName: \"sample\",\n        hidden: this.state.userRoleControlRights.indexOf(coaReportId) === -1,\n        onClick: obj => this.props.reportGenerate(obj, reportGenerateId),\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: coaReportId\n        }\n      }],\n      commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        variant: \"link\",\n        onClick: () => this.onReload() // data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1201,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSync,\n        style: {\n          \"width\": \"0.6!important\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 65\n        }\n      })), this.props.Login.masterData.decisionStatus && this.state.userRoleControlRights.indexOf(TestDecisionActionId) !== -1 && this.props.Login.masterData.decisionStatus.length > 0 ? /*#__PURE__*/React.createElement(CustomPopOver, {\n        icon: faBolt,\n        nav: true,\n        data: decisionStatus,\n        btnClasses: \"btn-circle btn_grey ml-2\",\n        textKey: \"sdecisionstatus\",\n        iconKey: \"ntransactionstatus\",\n        dynamicButton: value => this.updateDecision(value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210,\n          columnNumber: 65\n        }\n      }) : \"\")),\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(ApprovalFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          UserSection: this.state.UserSectionList || [],\n          UserSectionValue: this.props.Login.masterData.UserSectionValue || [],\n          JobStatus: this.props.Login.masterData.JobStatus || [],\n          Test: this.state.TestList || [],\n          TestValue: this.props.Login.masterData.TestValue || [],\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          DesignTemplateMapping: this.props.Login.masterData.DesignTemplateMapping,\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {},\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1227,\n            columnNumber: 74\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1103,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1259,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: this.state.showTest === true ? {\n        display: \"block\",\n        background: \"#FFFF\"\n      } : {\n        display: \"none\",\n        background: \"#FFFF\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 45\n      }\n    }, mainDesign)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1267,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      style: {\n        width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1268,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: ` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyViewClose(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 178\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-results sm-view-v-t  ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1270,\n        columnNumber: 41\n      }\n    }, this.state.activeTabIndex && this.state.activeTabIndex == 1 ? this.sideNavDetail(\"IDS_RESULTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-attachment  ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1273,\n        columnNumber: 41\n      }\n    }, this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 41\n      }\n    }, this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1285,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1286,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_MATERIAL\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 5 ? this.sideNavDetail(\"IDS_MATERIAL\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1291,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1292,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TASK\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 6 ? this.sideNavDetail(\"IDS_TASK\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 7 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1297,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1298,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TESTAPPROVALHISTORY\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 7 ? this.sideNavDetail(\"IDS_TESTAPPROVALHISTORY\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1303,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1304,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1312,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(1, \"IDS_RESULTS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFileInvoice //  data-for=\"tooltip-common-wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RESULTS\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1314,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1317,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_RESULTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(2, \"IDS_ATTACHMENTS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1321,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1322,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ATTACHMENTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(3, \"IDS_COMMENTS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1327,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1328,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1329,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(5, \"IDS_MATERIAL\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1339,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFlask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1341,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_MATERIAL\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(6, \"IDS_TASK\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1346,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCommentDots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1347,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1348,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TASK\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(8, \"IDS_SAMPLEDETAILS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1358,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1359,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1360,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    })))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tab-click-toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1365,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: \"Auto Show\",\n      type: \"switch\",\n      name: \"Auto Click\",\n      onChange: event => this.onInputSwitchOnChange(event),\n      defaultValue: this.state.enableAutoClick,\n      isMandatory: false,\n      required: true,\n      checked: this.state.enableAutoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1366,\n        columnNumber: 45\n      }\n    })))))))), this.props.Login.openChildModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      onSaveClick: this.props.Login.operation === 'dynamic' ? () => this.performTestActions(this.props.Login.action, TestApprovalActionId) : this.onSaveClick,\n      operation: this.props.Login.operation,\n      screenName: this.props.Login.screenName,\n      closeModal: this.handleClose,\n      show: this.props.Login.openChildModal,\n      inputParam: this.props.Login.inputParam,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.operation === 'enforce' ? [{\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"senforcestatuscomment\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }] : [],\n      loginoperation: this.props.Login.operation === 'view' ? true : false //graphView={this.props.Login.operation !=='enforce' ? this.props.Login.operation:undefined}\n      ,\n      noSave: this.props.Login.operation === 'view' ? true : false,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1413,\n          columnNumber: 29\n        }\n      }) : this.props.Login.operation === 'enforce' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1421,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1422,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"ngradecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_STATUS\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_STATUS\"\n        }),\n        value: this.props.Login.masterData.GradeValue || [],\n        options: this.props.Login.masterData.Grade || [],\n        optionId: \"ngradecode\",\n        optionValue: \"sgradename\",\n        isMandatory: true,\n        isMulti: false,\n        isDisabled: false,\n        isSearchable: false,\n        closeMenuOnSelect: true,\n        isClearable: false,\n        onChange: event => this.onComboChange(event, 'ngradecode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(FormTextarea, {\n        name: \"senforcestatuscomment\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_COMMENTS\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_COMMENTS\"\n        }),\n        value: this.state.selectedRecord ? this.state.selectedRecord[\"senforcestatuscomment\"] : \"\",\n        rows: \"2\",\n        isMandatory: true,\n        required: false,\n        maxLength: 255,\n        onChange: event => this.onInputOnChange(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1439,\n          columnNumber: 41\n        }\n      }))) : this.props.Login.operation === 'dynamic' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1453,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormNumericInput, {\n        name: \"retestcount\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_RETESTCOUNT\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_MAX\"\n        }) + \": \" + this.props.Login.masterData.retestcount,\n        type: \"text\",\n        strict: true,\n        className: \"form-control\",\n        value: this.state.selectedRecord ? this.state.selectedRecord.retestcount : \"\",\n        maxLength: 6,\n        onChange: event => this.onNumericInputOnChange(event, 'retestcount'),\n        isMandatory: \"*\",\n        required: true,\n        noStyle: true // min={1}\n        // max={this.props.Login.masterData.retestcount}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1467,\n          columnNumber: 45\n        }\n      }))) : this.props.Login.operation === 'view' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1487,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(DataGrid, {\n        primaryKeyField: \"nresultparamcommenthistorycode\",\n        data: this.props.Login.masterData.enforceCommentsHistory || [],\n        dataResult: this.props.Login.masterData.enforceCommentsHistory || [],\n        dataState: {\n          skip: 0,\n          take: this.props.Login.masterData.enforceCommentsHistory ? this.props.Login.masterData.enforceCommentsHistory.length : 0\n        } // dataStateChange={this.dataStateChange}\n        ,\n        extractedColumnList: [{\n          \"idsName\": \"IDS_ENFORCESTATUSCOMMENT\",\n          \"dataField\": \"senforcestatuscomment\",\n          \"width\": \"450px\"\n        }],\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        pageable: false,\n        hideColumnFilter: true,\n        isActionRequired: false,\n        isToolBarRequired: false,\n        scrollable: \"scrollable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 49\n        }\n      }))) : /*#__PURE__*/React.createElement(EditApprovalParameter, {\n        ApprovalParamEdit: this.props.Login.ApprovalParamEdit || [],\n        changeMandatory: this.changeMandatory,\n        selectedRecord: this.state.selectedRecord.approvalParameterEdit || {},\n        nsubsampleneed: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1512,\n          columnNumber: 41\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1396,\n        columnNumber: 21\n      }\n    }) : \"\", this.props.Login.masterData.ChecklistData && this.props.Login.screenName === 'IDS_CHECKLISTRESULT' ? /*#__PURE__*/React.createElement(TemplateForm, {\n      templateData: this.props.Login.masterData.ChecklistData,\n      needSaveButton: false,\n      formRef: this.formRef,\n      onTemplateInputChange: this.onTemplateInputChange,\n      handleClose: this.handleClose,\n      onTemplateComboChange: this.onTemplateComboChange,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.onSaveCheckList,\n      Login: this.props.Login,\n      viewScreen: this.props.Login.openTemplateModal,\n      selectedRecord: this.state.selectedRecord || [],\n      onTemplateDateChange: this.onTemplateDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1522,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentWillUnmount() {\n    let activeTabIndex = this.props.Login.activeTabIndex;\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        activeTabIndex: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      sampleListColumns,\n      subSampleListColumns,\n      testListColumns,\n      SingleItem,\n      sampleListMainField,\n      subSampleListMainField,\n      testListMainField,\n      SampleGridItem,\n      SampleGridExpandableItem,\n      testMoreField,\n      resultDataState,\n      instrumentDataState,\n      materialDataState,\n      taskDataState,\n      documentDataState,\n      resultChangeDataState,\n      historyDataState,\n      testCommentDataState,\n      samplePrintHistoryDataState,\n      sampleHistoryDataState,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      UserSectionList,\n      TestList,\n      skip,\n      take,\n      testskip,\n      testtake,\n      selectedFilter,\n      DynamicSampleColumns,\n      DynamicSubSampleColumns,\n      DynamicTestColumns,\n      DynamicGridItem,\n      DynamicGridMoreField,\n      stateDynamicDesign,\n      sampleSearchField,\n      subsampleSearchField,\n      testSearchField,\n      activeTabIndex,\n      activeTabId\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      bool = true; // this.setState({userRoleControlRights, controlMap});\n    }\n\n    if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\n      if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\n        let dataState = {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \n\n        };\n        resultDataState = dataState;\n        instrumentDataState = dataState;\n        materialDataState = dataState;\n        taskDataState = dataState;\n        documentDataState = dataState;\n        resultChangeDataState = dataState;\n        historyDataState = dataState;\n        testCommentDataState = dataState; // this.setState({\n        //     resultDataState: dataSate,instrumentDataState: dataSate,\n        //     materialDataState: dataSate,taskDataState: dataSate,instrumentDataState: dataSate,\n        //     instrumentDataState: dataSate,documentDataState: dataSate,resultChangeDataState: dataSate,\n        //     historyDataState: dataSate,resultDataState: dataSate,testCommentDataState:dataSate,\n        // });\n\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord; // this.setState({selectedRecord: this.props.Login.selectedRecord });\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\n      UserSectionList = UserSectionListMap.get(\"OptionList\");\n      TestList = TestListMap.get(\"OptionList\");\n      bool = true;\n      skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\n      take = this.props.Login.take || take;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      let selectFilterStatus = {\n        ntransactionstatus: transactionStatus.PARTIAL,\n        sfilterstatus: this.props.intl.formatMessage({\n          id: \"IDS_PARTIAL\"\n        }),\n        scolorhexcode: \"#800000\"\n      }; // const selectedFilters = this.props.Login.masterData.FilterStatusValue && \n      //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ? \n      //   JSON.stringify (JSON.parse(this.props.Login.masterData.FilterStatus)) : []\n      // const selectedFilters = this.props.Login.masterData.FilterStatusValue &&\n      //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ?\n      //     this.props.Login.masterData.FilterStatus : [];\n\n      const selectedFilters = this.props.Login.masterData.FilterStatus || [];\n      const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\n      const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL);\n\n      if (selectedFiltersNew.length > 0 && index === -1) {\n        selectedFiltersNew.push(selectFilterStatus);\n      }\n\n      selectedFilter = selectedFiltersNew;\n\n      if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\n        resultDataState = this.props.Login.resultDataState;\n      }\n\n      if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\n        instrumentDataState = this.props.Login.instrumentDataState;\n      }\n\n      if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\n        taskDataState = this.props.Login.taskDataState;\n      }\n\n      if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\n        resultChangeDataState = this.props.Login.resultChangeDataState;\n      }\n\n      if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\n        historyDataState = this.props.Login.historyDataState;\n      }\n\n      if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\n        testCommentDataState = this.props.Login.testCommentDataState;\n      }\n\n      if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\n        samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\n      }\n\n      if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\n        sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\n      }\n\n      if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\n        sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\n      }\n    }\n\n    if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\n      activeTabIndex = this.props.Login.activeTabIndex;\n      activeTabId = this.props.Login.activeTabId;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\n      DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\n      sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\n      subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\n      testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\n      testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\n      bool = true; // sampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTITEM);\n      // subSampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTITEM);\n      // testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTITEM);\n      // sampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTMAINFIELD);\n      // subSampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTMAINFIELD);\n      // testListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMAINFIELD);\n      // SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.SINGLEITEMDATA)\n      // SampleGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDITEM)\n      // SampleGridExpandableItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDEXPANDABLEITEM)\n      // testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMOREITEM)\n      // let {selectedRecord}=this.state\n\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate; // this.setState({\n      //     sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\n      //     sampleListMainField, subSampleListMainField, testListMainField,\n      //     SampleGridItem, SampleGridExpandableItem, testMoreField,selectedRecord\n      // })\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    }\n\n    if (bool) {\n      bool = false;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        sampleListColumns,\n        subSampleListColumns,\n        testListColumns,\n        SingleItem,\n        sampleListMainField,\n        subSampleListMainField,\n        testListMainField,\n        SampleGridItem,\n        SampleGridExpandableItem,\n        testMoreField,\n        resultDataState,\n        instrumentDataState,\n        materialDataState,\n        taskDataState,\n        documentDataState,\n        resultChangeDataState,\n        historyDataState,\n        testCommentDataState,\n        samplePrintHistoryDataState,\n        sampleHistoryDataState,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        UserSectionList,\n        TestList,\n        skip,\n        take,\n        testskip,\n        testtake,\n        selectedFilter,\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        DynamicGridItem,\n        DynamicGridMoreField,\n        stateDynamicDesign,\n        sampleSearchField,\n        subsampleSearchField,\n        testSearchField,\n        activeTabIndex,\n        activeTabId\n      });\n    }\n  } // previewSampleReport = (ncontrolCode) => {\n  //     console.log(\"report:\", this.props.Login.masterData.selectedSample);\n  //     const selectedSample = this.props.Login.masterData.selectedSample[0];\n  //     const inputData = {ndecisionstatus:selectedSample.ndecisionstatus,\n  //                         userinfo:this.props.Login.userInfo,\n  //                         nprimarykey: selectedSample.npreregno,\n  //                         ncoareporttypecode : reportCOAType.SAMPLECERTIFICATEPRIVIEW,\n  //                         nreporttypecode :REPORTTYPE.SAMPLEREPORT,\n  //                         sprimarykeyname :\"npreregno\",\n  //                         ncontrolcode : ncontrolCode,\n  //                         nregtypecode:selectedSample.nregtypecode,\n  //                         nregsubtypecode: selectedSample.nregsubtypecode\n  //                         }\n  //     this.props.previewSampleReport(inputData);\n  // }\n\n\n  sampleTabDetail() {\n    const tabMap = new Map();\n    let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n    tabMap.set(\"IDS_SAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n      screenName: \"IDS_SAMPLEATTACHMENTS\",\n      selectedMaster: this.props.Login.masterData.APSelectedSample,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      attachments: this.props.Login.masterData.RegistrationAttachment || [],\n      deleteRecord: this.props.deleteAttachment,\n      onSaveClick: this.onAttachmentSaveClick,\n      masterList: this.props.Login.masterData.APSelectedSample,\n      masterAlertStatus: \"IDS_SELECTSAMPLETOADDATTACHEMENT\",\n      nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n      fetchRecord: this.props.getAttachmentCombo,\n      addName: \"AddSampleAttachment\",\n      editName: \"EditSampleAttachment\",\n      deleteName: \"DeleteSampleAttachment\",\n      viewName: \"ViewSampleAttachment\",\n      methodUrl: \"SampleAttachment\",\n      userInfo: this.props.Login.userInfo,\n      deleteParam: {\n        methodUrl: \"SampleAttachment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenName: this.props.Login.screenName\n      },\n      editParam: {\n        methodUrl: \"SampleAttachment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        masterList: this.props.Login.masterData.APSelectedSample\n      },\n      selectedListName: \"IDS_ARNUMBER\",\n      displayName: \"sarno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1775,\n        columnNumber: 13\n      }\n    }));\n    tabMap.set(\"IDS_SAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n      screenName: \"IDS_SAMPLECOMMENTS\",\n      onSaveClick: this.onCommentsSaveClick,\n      selectedMaster: \"APSelectedSample\",\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      Comments: this.props.Login.masterData.RegistrationComment || [],\n      fetchRecord: this.props.getCommentsCombo,\n      addName: \"AddSampleComment\",\n      editName: \"EditSampleComment\",\n      deleteName: \"DeleteSampleComment\",\n      methodUrl: \"SampleComment\",\n      isTestComment: false,\n      masterData: this.props.Login.masterData,\n      masterList: this.props.Login.masterData.APSelectedSample,\n      masterAlertStatus: \"IDS_SELECTSAMPLETOADDCOMMENTS\",\n      primaryKeyField: \"nregcommentcode\",\n      dataState: this.state.testCommentDataState,\n      dataStateChange: this.testDataStateChange,\n      deleteParam: {\n        methodUrl: \"SampleComment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenName: \"IDS_SAMPLECOMMENTS\"\n      },\n      editParam: {\n        methodUrl: \"SampleComment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenName: \"IDS_SAMPLECOMMENTS\",\n        operation: \"update\",\n        masterList: this.props.Login.masterData.APSelectedSample || [],\n        ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\n      },\n      selectedListName: \"IDS_ARNUMBER\",\n      displayName: \"sarno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1816,\n        columnNumber: 42\n      }\n    }));\n    tabMap.set(\"IDS_SAMPLEAPPROVALHISTORY\", /*#__PURE__*/React.createElement(SampleApprovalHistory, {\n      userInfo: this.props.Login.userInfo,\n      ApprovalHistory: this.props.Login.masterData.SampleApprovalHistory,\n      inputParam: this.props.Login.inputParam,\n      dataState: this.state.sampleHistoryDataState,\n      dataStateChange: this.sampleDataStateChange,\n      screenName: \"IDS_SAMPLEAPPROVALHISTORY\",\n      controlMap: this.state.controlMap,\n      masterData: this.props.Login.masterData,\n      userRoleControlRights: this.state.userRoleControlRights,\n      selectedId: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1862,\n        columnNumber: 13\n      }\n    })); // tabMap.set(\"IDS_PRINTHISTORY\",\n    //     <ApprovalPrintHistoryTab\n    //         userInfo={this.props.Login.userInfo}\n    //         ApprovalPrintHistory={this.props.Login.masterData.PrintHistory}\n    //         inputParam={this.props.Login.inputParam}\n    //         dataState={this.state.samplePrintHistoryDataState}\n    //         dataStateChange={this.sampleDataStateChange}\n    //         screenName=\"IDS_PRINTHISTORY\"\n    //         controlMap={this.state.controlMap}\n    //         userRoleControlRights={this.state.userRoleControlRights}\n    //         selectedId={null}\n    //     />);\n    // if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\n    //     tabMap.set(\"IDS_REPORTHISTORY\",\n    //         <ReportHistoryTab\n    //             userInfo={this.props.Login.userInfo}\n    //             COAHistory={this.props.Login.masterData.COAHistory}\n    //             inputParam={this.props.Login.inputParam}\n    //             dataState={this.state.reportHistoryDataState}\n    //             dataStateChange={this.sampleDataStateChange}\n    //             screenName=\"IDS_REPORTHISTORY\"\n    //             controlMap={this.state.controlMap}\n    //             userRoleControlRights={this.state.userRoleControlRights}\n    //             selectedId={null}\n    //             viewDownloadFile={this.downloadReport}\n    //         />);\n    // }\n\n    return tabMap;\n  }\n\n  // onSampleTabChange = (tabProps) => {\n  //     const activeSampleTab = tabProps.screenName;\n  //     if (activeSampleTab !== this.props.Login.activeSampleTab) {\n  //         let inputData = {\n  //             masterData: this.props.Login.masterData,\n  //             selectedSample: this.props.Login.masterData.APSelectedSample,\n  //             npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n  //             userinfo: this.props.Login.userInfo,\n  //             screenName: activeSampleTab,\n  //             activeSampleTab\n  //         }\n  //         this.props.getSampleChildTabDetail(inputData)\n  //     }\n  // }\n  // onSubSampleTabChange = (tabProps) => {\n  //     const activeSubSampleTab = tabProps.screenName;\n  //     if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\n  //         let inputData = {\n  //             masterData: this.props.Login.masterData,\n  //             selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n  //             ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n  //             userinfo: this.props.Login.userInfo,\n  //             screenName: activeSubSampleTab,\n  //             activeSubSampleTab,\n  //             subSampleCommentDataState: this.state.subSampleCommentDataState,\n  //             subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\n  //         }\n  //         this.props.getSubSampleChildTabDetail(inputData)\n  //     }\n  // }\n  showSampleInfo() {\n    this.setState({\n      showSample: true,\n      showTest: false\n    });\n  }\n\n  showTestList() {\n    this.setState({\n      showTest: true,\n      showSample: false\n    });\n  }\n\n  // covertDatetoString(startDateValue, endDateValue) {\n  //     const startDate = new Date(startDateValue);\n  //     const endDate = new Date(endDateValue);\n  //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\n  //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\n  //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\n  //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\n  //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\n  //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\n  //     const fromDate = fromDateOnly + \"T00:00:00\";\n  //     const toDate = toDateOnly + \"T23:59:59\";\n  //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\n  // }\n  getActiveTestURL() {\n    let url = \"approval/getapprovalparameter\";\n\n    switch (this.props.Login.activeTestTab) {\n      case \"IDS_RESULTS\":\n        url = \"approval/getapprovalparameter\";\n        break;\n\n      case \"IDS_INSTRUMENT\":\n        url = \"resultentrybysample/getResultUsedInstrument\";\n        break;\n\n      case \"IDS_MATERIAL\":\n        url = \"resultentrybysample/getResultUsedMaterial\";\n        break;\n\n      case \"IDS_TASK\":\n        url = \"resultentrybysample/getResultUsedTask\";\n        break;\n\n      case \"IDS_TESTATTACHMENTS\":\n        url = \"attachment/getTestAttachment\";\n        break;\n\n      case \"IDS_TESTCOMMENTS\":\n        url = \"comments/getTestComment\";\n        break;\n\n      case \"IDS_RESULTCHANGEHISTORY\":\n        url = \"approval/getApprovalResultChangeHistory\";\n        break;\n\n      case \"IDS_TESTAPPROVALHISTORY\":\n        url = \"approval/getApprovalHistory\";\n        break;\n\n      default:\n        url = \"approval/getapprovalparameter\";\n        break;\n    }\n\n    return url;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  getsubSampleDetail,\n  getTestDetail,\n  getTestChildTabDetail,\n  performAction,\n  updateStore,\n  viewAttachment,\n  checkListRecord,\n  updateDecision,\n  getRegistrationType,\n  getRegistrationSubType,\n  getFilterStatus,\n  getApprovalSample,\n  getStatusCombo,\n  validateEsignCredential,\n  crudMaster,\n  validateEsignforApproval,\n  getApprovalVersion,\n  getParameterEdit,\n  filterTransactionList,\n  getSampleChildTabDetail,\n  getAttachmentCombo,\n  deleteAttachment,\n  getCommentsCombo,\n  previewSampleReport,\n  getFilterBasedTest,\n  generateCOAReport,\n  getEnforceCommentsHistory,\n  reportGenerate,\n  getSubSampleChildTabDetail\n})(injectIntl(Approval));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/approval/Approval.jsx"],"names":["React","connect","injectIntl","faFileInvoice","faBolt","faBorderAll","faChevronRight","faComment","faCommentDots","faComments","faEye","faFlask","faHistory","faLink","faMicroscope","faPaperclip","faPencilAlt","faSync","FontAwesomeIcon","Button","Card","Col","Nav","Row","ContentPanel","ListWrapper","ProductList","SplitterLayout","DEFAULT_RETURN","getsubSampleDetail","getTestDetail","getTestChildTabDetail","performAction","updateStore","updateDecision","getRegistrationType","getRegistrationSubType","getFilterStatus","getApprovalSample","getStatusCombo","validateEsignCredential","crudMaster","validateEsignforApproval","getApprovalVersion","getParameterEdit","filterTransactionList","checkListRecord","generateCOAReport","getSampleChildTabDetail","getAttachmentCombo","viewAttachment","deleteAttachment","getCommentsCombo","previewSampleReport","getFilterBasedTest","getEnforceCommentsHistory","reportGenerate","getSubSampleChildTabDetail","CustomTabs","ApprovalResultsTab","getControlMap","showEsign","sortData","constructOptionList","getSameRecordFromTwoArrays","convertDateValuetoString","rearrangeDateFormat","toast","TransactionListMasterJson","ApprovalFilter","designProperties","transactionStatus","RegistrationType","RegistrationSubType","SideBarSeqno","SideBarTabIndex","BreadcrumbComponent","SampleInfoGrid","SampleInfoView","ApprovalInstrumentTab","FormSelectSearch","FormTextarea","Esign","SlideOutModal","EditApprovalParameter","SampleApprovalHistory","ResultChangeHistoryTab","ApprovalTask","templateChangeHandler","TemplateForm","Attachments","onSaveSampleAttachment","onSaveSubSampleAttachment","onSaveTestAttachment","Comments","onSaveSampleComments","onSaveSubSampleComments","onSaveTestComments","CustomPopOver","ScrollBar","ApprovalPrintHistoryTab","ApprovalHistoryTab","FormNumericInput","DataGrid","ReportHistoryTab","ApprovalUsedMaterial","CustomSwitch","TransactionListMasterJsonView","mapStateToProps","state","Login","Approval","Component","constructor","props","paneSizeChange","d","setState","splitChangeWidthPercentage","handleTestPageChange","e","testskip","skip","testtake","take","handleSubSamplePageChange","subSampleSkip","subSampleTake","showAPSampleinfo","showSample","showTest","sampleInfoDataStateChange","event","sampleGridDataState","dataState","verticalPaneSizeChange","val","enableAutoHeight","initialVerticalWidth","changeSplitterOption","sideNavDetail","screenName","testList","masterData","searchedTests","AP_TEST","editTestCommentsId","controlMap","has","get","ncontrolcode","slice","selectedTestList","APSelectedTest","ntransactiontestcode","map","test","join","activeTestTab","resultTabDetail","onTabChange","attachmentTabDetail","commentTabDetail","userInfo","inputParam","instrumentDataState","testDataStateChange","userRoleControlRights","materialDataState","fetchMaterialRecord","ResultUsedTasks","taskDataState","ApprovalHistory","historyDataState","APSelectedSample","length","SingleItem","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","changePropertyViewClose","id","updateInfo","typeName","data","activeTabIndex","undefined","activeTabId","changePropertyView","index","status","ntransactionsamplecode","npreregno","window","innerWidth","enableAutoClick","tabProps","tabSequence","TEST","onInputSwitchOnChange","target","name","enablePropertyPopup","tabseqno","inputData","String","item","userinfo","resultDataState","documentDataState","resultChangeDataState","testCommentDataState","warn","intl","formatMessage","SUBSAMPLE","selectedSubSample","APSelectedSubSample","activeSubSampleTab","subSampleCommentDataState","subSampleAttachmentDataState","selectedSample","activeSampleTab","downloadReport","input","selectedRecord","classUrl","operation","methodUrl","subsampleTabDetail","sample","tabMap","Map","subsampleList","AP_SUBSAMPLE","selectedSubSampleList","set","onAttachmentSaveClick","RegistrationSampleAttachment","nneedsubsample","attachmentskip","attachmenttake","settings","parseInt","esignRights","masterList","onCommentsSaveClick","RegistrationSampleComment","subSampledataStateChange","ncontrolCode","resultTabMap","selectedParamId","ApprovalResultChangeHistory","attachmentTabMap","RegistrationTestAttachment","VALUE","realRegSubTypeValue","SAMPLE","RegistrationAttachment","commentTabMap","RegistrationTestComment","RegistrationComment","onNumericInputOnChange","value","handlePageChange","setTimeout","_scrollBarRef","updateScroll","checkRetestAction","action","ntransactionstatus","RETEST","retestcount","openChildModal","performTestActions","info","obj","realFromDate","realToDate","ntransCode","FilterStatusValue","ALL","FilterStatus","nsectioncode","UserSectionValue","UserSection","section","ntestcode","realTestValue","nTransStatus","stransdisplaystatus","nsampletypecode","realSampleTypeValue","nregtypecode","realRegTypeValue","nregsubtypecode","napprovalversioncode","realApprovalVersionValue","napprovalconfigversioncode","nneedtemplatebasedflow","dfrom","fromDate","dto","toDate","nflag","ntype","checkBoxOperation","ndesigntemplatemappingcode","postParamList","nesignneed","YES","loadEsign","screenData","realFilterStatusValue","sampleList","AP_SAMPLE","splice","selectedsampleList","TestValue","napprovalconfigcode","onFilterComboChange","comboData","fieldName","inputParamData","SampleTypeValue","RegTypeValue","RegSubTypeValue","stransactionstatus","ApprovalVersionValue","DesignTemplateMappingValue","napproveconfversioncode","JobStatusValue","njobstatuscode","onComboChange","GradeValue","onInputOnChange","type","checked","NO","handleDateChange","dateName","dateValue","Date","changeMandatory","dataItem","currentTarget","ntransactionresultcode","onReload","realUserSectionValue","sfilterstatus","searchSampleRef","searchSubSampleRef","searchTestRef","samplePrintHistoryDataState","sampleHistoryDataState","onFilterSubmit","realDesignTemplateMappingValue","sampleGridDataStateChange","popUptestDataState","sampleDataStateChange","reportHistoryDataState","onSaveClick","saveType","formRef","ok","ngradecode","senforcestatuscomment","selectedTestCode","postParam","selectedObject","primaryKeyField","saveParam","approvalparameter","approvalParameterEdit","Object","keys","key","push","nreportmandatory","handleClose","nformcode","openModal","templateData","openTemplateModal","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","onTemplateInputChange","control","onTemplateComboChange","onTemplateDateChange","dateData","isTestComment","x","searchedSample","acceptList","searchedSubSample","selectedSampleList","selectedMaster","reporparam","createRef","masterStatus","error","oldComboData","showSubSample","sampleListColumns","subSampleListColumns","testListColumns","TableExpandableItem","SampleGridItem","SampleGridExpandableItem","sampleListMainField","subSampleListMainField","testListMainField","testMoreField","firstPane","paneHeight","secondPaneHeight","tabPane","SampletypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","ConfigVersionList","UserSectionList","stateDynamicDesign","sampleSearchField","subsampleSearchField","testSearchField","TestList","enablePin","getDerivedStateFromProps","multilingualMsg","componentDidMount","parentHeight","height","clientHeight","constructDesign","list","newList","i","LABEL","showAPTestList","showAPSubSampleinfo","temparray","option","slanguagetypecode","render","filterSampleParam","inputListName","fetchUrl","isSortable","sortValue","sortList","childRefs","ref","childFilteredListName","fecthInputObject","searchFieldList","changeList","filterSubSampleParam","filterTestParam","getActiveTestURL","isSingleSelect","AP_SampleList","AP_SubSampleList","AP_TestList","decisionStatus","actionStatus","subSampleGetParam","testGetParam","testChildGetParam","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","stestsynonym","reportPreviewId","editParamId","TestDecisionActionId","TestApprovalActionId","reportGenerateId","coaReportId","filteredListName","clearFilter","searchRef","updatedListname","unchangeList","testDesign","borderBottom","display","split","setting","indexOf","mainDesign","marginTop","selectedFilter","DynamicSubSampleColumns","subSampleMoreField","showFilter","openFilter","closeFilter","DynamicSampleColumns","sampleMoreField","PLASMA_POOL","title","controlname","objectName","hidden","onClick","ROUTINE","JobStatus","onDesignTemplateChange","DesignTemplateMapping","background","width","propertyPopupWidth","Grade","enforceCommentsHistory","ApprovalParamEdit","nsubsampleneed","ChecklistData","onSaveCheckList","componentWillUnmount","componentDidUpdate","previousProps","DynamicTestColumns","bool","values","SampletypeListMap","SampleType","RegistrationTypeListMap","RegType","RegistrationSubTypeListMap","RegSubType","FilterStatusListMap","ConfigVersionListMap","ApprovalVersion","UserSectionListMap","TestListMap","Test","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","JSON","parse","stringify","findIndex","DynamicDesign","dynamicColumn","jsondata","samplelistitem","subsamplelistitem","testlistitem","samplegriditem","samplegridmoreitem","samplesearchfields","subsamplesearchfields","sampledisplayfields","testListFields","testlistmoreitems","testsearchfields","DesignTemplateMappingMap","sampleTabDetail","showSampleInfo","showTestList","url"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { faFileInvoice,faBolt, faBorderAll, faChevronRight, faComment, faCommentDots, faComments, faEye, faFlask, faHistory, faLink, faMicroscope, faPaperclip, faPencilAlt, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card, Col, Nav, Row, } from 'react-bootstrap';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ProductList } from '../testmanagement/testmaster-styled';\r\n//import SplitPane from \"react-splitter-layout\";\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {\r\n    getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, updateDecision,\r\n    getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo, validateEsignCredential,\r\n    crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList, checkListRecord, generateCOAReport,\r\n    getSampleChildTabDetail, getAttachmentCombo, viewAttachment, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest,\r\n    getEnforceCommentsHistory, reportGenerate, getSubSampleChildTabDetail\r\n} from '../../actions'\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport ApprovalResultsTab from './ApprovalResultsTab';\r\nimport { getControlMap, showEsign, sortData, constructOptionList, getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport TransactionListMasterJson from '../../components/TransactionListMasterJson';\r\nimport ApprovalFilter from './ApprovalFilter'\r\nimport { designProperties, transactionStatus, RegistrationType, RegistrationSubType,SideBarSeqno,SideBarTabIndex } from '../../components/Enumeration';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport SampleInfoGrid from './SampleInfoGrid';\r\nimport SampleInfoView from './SampleInfoView';\r\nimport ApprovalInstrumentTab from './ApprovalInstrumentTab'\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport Esign from '../audittrail/Esign';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport EditApprovalParameter from './EditApprovalParameter';\r\n//import ApprovalHistoryTab from './ApprovalHistoryTab';\r\nimport SampleApprovalHistory from './SampleApprovalHistory';\r\nimport ResultChangeHistoryTab from './ResultChangeHistoryTab';\r\nimport ApprovalTask from './ApprovalTask';\r\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\r\nimport TemplateForm from '../checklist/checklist/TemplateForm';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport { onSaveSampleAttachment, onSaveSubSampleAttachment, onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveSampleComments, onSaveSubSampleComments, onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions';\r\n//import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport CustomPopOver from '../../components/customPopover';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport ApprovalPrintHistoryTab from './ApprovalPrintHistoryTab';\r\nimport ApprovalHistoryTab from './ApprovalHistoryTab';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport ReportHistoryTab from './ReportHistoryTab';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport ApprovalUsedMaterial from './ApprovalUsedMaterial';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Approval extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.formRef = React.createRef();\r\n        this.state = {\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            resultDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }]\r\n            },\r\n            instrumentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            materialDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }] \r\n            },\r\n            taskDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,// group: [{ field: 'sarno' }] \r\n            },\r\n            testCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            documentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            resultChangeDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            sampleHistoryDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }] \r\n            },\r\n            reportHistoryDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            historyDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }] \r\n            },\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            samplePrintHistoryDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }]\r\n            },\r\n            subSampleCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            subSampleAttachmentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            oldComboData: {},\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            screenName: undefined,\r\n            showSample: false,\r\n            showSubSample: false,\r\n            showTest: true,\r\n            sampleListColumns: [],\r\n            subSampleListColumns: [],\r\n            testListColumns: [],\r\n            TableExpandableItem: [],\r\n            SingleItem: [],\r\n            SampleGridItem: [],\r\n            SampleGridExpandableItem: [],\r\n            sampleListMainField: [],\r\n            subSampleListMainField: [],\r\n            testListMainField: [],\r\n            testMoreField: [],\r\n            firstPane: 0,\r\n            paneHeight: 0,\r\n            secondPaneHeight: 0,\r\n            tabPane: 0,\r\n            SampletypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            ConfigVersionList: [],\r\n            UserSectionList: [],\r\n            stateDynamicDesign: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            TestList: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n            splitChangeWidthPercentage: 22,\r\n            subSampleSkip: 0,\r\n            subSampleTake: this.props.Login.settings && this.props.Login.settings[12],\r\n            initialVerticalWidth: \"57vh\",\r\n            enablePin: false\r\n        }\r\n        //this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\r\n    }\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n    // onSecondaryPaneSizeChange = (e, val) => {\r\n    //     this.setState({\r\n    //         firstPane: e - val,\r\n    //         tabPane: e - 80,\r\n    //         childPane: this.state.parentHeight - e - 80\r\n    //     })\r\n    // }\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n\r\n    constructDesign(list) {\r\n\r\n        let newList = []\r\n        if (list.length > 0) {\r\n            list.map((i) => {\r\n                newList.push({ [designProperties.LABEL]: i, [designProperties.VALUE]: i })\r\n            })\r\n        }\r\n        return newList;\r\n    }\r\n\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    handleSubSamplePageChange = e => {\r\n        this.setState({\r\n            subSampleSkip: e.skip,\r\n            subSampleTake: e.take\r\n        });\r\n    };\r\n\r\n    // handleSubSamplePageChange = e => {\r\n    //     this.setState({ subSampleSkip: e.skip, subSampleTake: e.take });\r\n\r\n    //     setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    // }\r\n\r\n    showAPSampleinfo = () => {\r\n\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n\r\n    showAPTestList() {\r\n\r\n        this.setState({ showTest: true, showSample: false, showSubSample: false })\r\n    }\r\n    showAPSubSampleinfo() {\r\n        this.setState({ showSample: false, showTest: true, showSubSample: !this.state.showSubSample })\r\n    }\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n\r\n    sampleInfoDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n    verticalPaneSizeChange = (val) => {\r\n        if (this.state.enableAutoHeight) {\r\n            this.setState({\r\n                initialVerticalWidth: val - 150\r\n            })\r\n        }\r\n    }\r\n    changeSplitterOption = () => {\r\n        this.setState({\r\n            enableAutoHeight: !this.state.enableAutoHeight,\r\n            initialVerticalWidth: \"57vh\"\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    sideNavDetail = (screenName) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        return (\r\n            screenName == \"IDS_RESULTS\" ?\r\n                <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_RESULTS\"} tabDetail={this.resultTabDetail()} onTabChange={this.onTabChange} />\r\n                : screenName == \"IDS_ATTACHMENTS\" ?\r\n                    <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"} tabDetail={this.attachmentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                    : screenName == \"IDS_COMMENTS\" ?\r\n                        <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\"} tabDetail={this.commentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />                       \r\n                        :\r\n                        screenName == \"IDS_INSTRUMENT\" ?\r\n                            <ApprovalInstrumentTab\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterData={this.props.Login.masterData}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                dataState={this.state.instrumentDataState}\r\n                                dataStateChange={this.testDataStateChange}\r\n                                screenName=\"IDS_INSTRUMENT\"\r\n                                controlMap={this.state.controlMap}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                selectedId={null}\r\n                            />\r\n                            :\r\n                            screenName == \"IDS_MATERIAL\" ?\r\n                                <ApprovalUsedMaterial\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    masterData={this.props.Login.masterData}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    methodUrl={\"ResultUsedMaterial\"}\r\n                                    controlMap={this.state.controlMap}\r\n                                    // deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                                    //editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                                    dataState={this.state.materialDataState}\r\n                                    // selectedId={this.props.Login.selectedId || null}\r\n                                    isActionRequired={false}\r\n                                    dataStateChange={this.testDataStateChange}\r\n                                    //deleteRecord={this.deleteMaterialRecord}\r\n                                    fetchRecord={this.props.fetchMaterialRecord}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    screenName=\"IDS_MATERIAL\"\r\n                                />\r\n                                :\r\n                                screenName == \"IDS_TASK\" ?\r\n                                    <ApprovalTask\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        ResultUsedTasks={this.props.Login.masterData.ResultUsedTasks}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        dataState={this.state.taskDataState}\r\n                                        masterData={this.props.Login.masterData}\r\n                                        dataStateChange={this.testDataStateChange}\r\n                                        screenName=\"IDS_TASK\"\r\n                                        controlMap={this.state.controlMap}\r\n                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                        selectedId={null}\r\n                                    />\r\n                                        :\r\n                                        screenName == \"IDS_TESTAPPROVALHISTORY\" ?\r\n                                            <ApprovalHistoryTab\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                ApprovalHistory={this.props.Login.masterData.ApprovalHistory}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                dataState={this.state.historyDataState}\r\n                                                masterData={this.props.Login.masterData}\r\n                                                dataStateChange={this.testDataStateChange}\r\n                                                screenName=\"IDS_TESTAPPROVALHISTORY\"\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                selectedId={null}\r\n                                            />\r\n\r\n                                            :\r\n                                            screenName == \"IDS_SAMPLEDETAILS\" ?\r\n                                            this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length === 1 ?\r\n                                                <SampleInfoView\r\n                                                    data={(this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length > 0) ?\r\n                                                        this.props.Login.masterData.APSelectedSample[this.props.Login.masterData.APSelectedSample.length - 1] : {}}\r\n                                                    SingleItem={this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample ?\r\n                                                        this.state.SingleItem : []}\r\n                                                    screenName=\"IDS_SAMPLEINFO\"\r\n                                                    userInfo={this.props.Login.userInfo}\r\n\r\n                                                />\r\n\r\n                                                :\r\n                                                <SampleInfoGrid\r\n                                                    selectedSample={this.props.Login.masterData.APSelectedSample}\r\n                                                    userInfo={this.props.Login.userInfo || {}}\r\n                                                    masterData={this.props.Login.masterData}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    dataState={this.state.sampleGridDataState}\r\n                                                    dataStateChange={this.sampleInfoDataStateChange}\r\n                                                    extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                    detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                                    primaryKeyField={\"npreregno\"}\r\n                                                    expandField=\"expanded\"\r\n                                                    screenName=\"IDS_SAMPLEINFO\"\r\n                                                    jsonField={\"jsondata\"}\r\n                                                />\r\n                                            \r\n                                            : \"\"\r\n        )\r\n    }\r\n\r\n\r\n    changePropertyViewClose = (id) => {\r\n        // this.setState({\r\n        //             activeTabIndex :undefined,\r\n        //             activeTestTab:undefined,\r\n        //             activeTabId :  id\r\n        //         })\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                activeTabIndex: undefined,\r\n                activeTestTab: undefined,\r\n                activeTabId: id\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    changePropertyView = (index,screenName, event, status) => {\r\n\r\n        let id = false;\r\n        if (event && event.ntransactiontestcode) {\r\n            id = event.ntransactiontestcode\r\n        } else if (event && event.ntransactionsamplecode) {\r\n            id = event.ntransactionsamplecode\r\n        } else if (event && event.npreregno) {\r\n            id = event.npreregno\r\n        }\r\n        //console.log(this.state.activeTabId, id , \"=======>\")\r\n        let activeTabIndex\r\n        let activeTabId\r\n        if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n            activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\r\n            //activeTabId = this.state.activeTabIndex !== index ? true:false;\r\n        }\r\n        if (status != \"click\") {\r\n            if(index)\r\n            {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: screenName == \"IDS_COMMENTS\" ? \"IDS_TESTCOMMENTS\": screenName === \"IDS_ATTACHMENTS\"?\"IDS_TESTATTACHMENTS\":screenName ,\r\n                    activeTabIndex,\r\n                    //activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n\r\n        //     if (index == SideBarTabIndex.RESULT) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_RESULTS\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //     else if (index == SideBarTabIndex.INSTRUMENT) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_INSTRUMENT\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //     else if (index == SideBarTabIndex.MATERIAL) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_MATERIAL\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //     else if (index == SideBarTabIndex.TASK) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_TASK\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //    else if (index == SideBarTabIndex.TESTAPPROVALHISTORY) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_TESTAPPROVALHISTORY\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //     else if (index == SideBarTabIndex.ATTACHMENTS) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_TESTATTACHMENTS\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //     else if (index == SideBarTabIndex.COMMENTS) {\r\n        //         const tabProps = {\r\n        //             tabSequence: SideBarSeqno.TEST,\r\n        //             screenName: \"IDS_TESTCOMMENTS\",\r\n        //             activeTabIndex,\r\n        //             activeTabId\r\n        //         }\r\n        //         this.onTabChange(tabProps);\r\n        //     }\r\n        //     else {\r\n        //         if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n\r\n        //             const updateInfo = {\r\n        //                 typeName: DEFAULT_RETURN,\r\n        //                 data: {\r\n        //                     activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\r\n        //                     activeTabId: id\r\n        //                 }\r\n        //             }\r\n        //             this.props.updateStore(updateInfo);\r\n\r\n        //         }\r\n        //     }\r\n        }\r\n        \r\n    }\r\n\r\n    onInputSwitchOnChange = (event) => {\r\n        if(event.target.name == \"PopupNav\")\r\n        {\r\n            this.setState({\r\n                enablePropertyPopup : !this.state.enablePropertyPopup\r\n            })\r\n        }\r\n        else\r\n        {\r\n        this.setState({\r\n            enableAutoClick: !this.state.enableAutoClick\r\n        })\r\n    }\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const activeTestTab = tabProps.screenName;\r\n        const tabseqno = tabProps.tabSequence;\r\n        // if (activeTestTab !== this.props.Login.activeTestTab) {\r\n        if (tabseqno == SideBarSeqno.TEST) {\r\n            if (this.props.Login.masterData.APSelectedTest && this.props.Login.masterData.APSelectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                    ntransactiontestcode: this.props.Login.masterData.APSelectedTest ?\r\n                        String(this.props.Login.masterData.APSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                    npreregno: this.props.Login.masterData.APSelectedSample ?\r\n                        this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestTab,\r\n                    screenName: activeTestTab,\r\n                    resultDataState: this.state.resultDataState,\r\n                    instrumentDataState: this.state.instrumentDataState,\r\n                    materialDataState: this.state.materialDataState,\r\n                    taskDataState: this.state.taskDataState,\r\n                    documentDataState: this.state.documentDataState,\r\n                    historyDataState: this.state.historyDataState,\r\n                    resultChangeDataState: this.state.resultChangeDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                }\r\n                this.props.getTestChildTabDetail(inputData, true)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n            }\r\n        }\r\n        else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                    ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSubSampleTab: activeTestTab,\r\n                    subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n                    subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n                }\r\n                this.props.getSubSampleChildTabDetail(inputData)\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSample: this.props.Login.masterData.APSelectedSample,\r\n                    npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSampleTab: activeTestTab\r\n                }\r\n                this.props.getSampleChildTabDetail(inputData)\r\n            }\r\n        }\r\n\r\n        //}\r\n    }\r\n\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const filterSampleParam = {\r\n            inputListName: \"AP_SAMPLE\",\r\n            selectedObject: \"APSelectedSample\",\r\n            primaryKeyField: \"npreregno\",\r\n            fetchUrl: \"approval/getApprovalSubSample\",\r\n            isSortable: true,\r\n            sortValue: 'npreregno',\r\n            sortList: ['AP_TEST'],\r\n            childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                nsampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: (this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ?this.props.Login.masterData.UserSection&& this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue.ntestcode,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                checkBoxOperation: 3,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            // searchFieldList: [\"sarno\", \"dregdate\", \"sdecisionstatus\", \"ssampletypestatus\", \"smanuflotno\", \"smanufname\", \"smanufsitename\", \"sproductcatname\", \"sproductname\", \"sspecname\"],\r\n            searchFieldList: this.state.sampleSearchField || [],\r\n            changeList: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedSample\", \"APSelectedSubSample\", \"APSelectedTest\", \"PrintHistory\", \"COAHistory\"]\r\n        };\r\n        const filterSubSampleParam = {\r\n            inputListName: \"AP_SUBSAMPLE\",\r\n            selectedObject: \"APSelectedSubSample\",\r\n            primaryKeyField: \"ntransactionsamplecode\",\r\n            fetchUrl: \"approval/getApprovalTest\",\r\n            isSortable: true,\r\n            sortValue: 'npreregno',\r\n            sortList: ['AP_TEST'],\r\n            childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: (this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode : null,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                checkBoxOperation: 3,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.subsampleSearchField || [],\r\n            changeList: [\"AP_TEST\", \"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedSubSample\", \"APSelectedTest\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]\r\n        };\r\n\r\n        const filterTestParam = {\r\n            inputListName: \"AP_TEST\",\r\n            selectedObject: \"APSelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            fetchUrl: this.getActiveTestURL(),\r\n            fecthInputObject: {\r\n                ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                checkBoxOperation: 3,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\r\n            },\r\n            isSingleSelect: false,\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.testSearchField || [],\r\n            changeList: [\"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedTest\"]\r\n        };\r\n\r\n        let AP_SampleList = this.props.Login.masterData.AP_SAMPLE ? sortData(this.props.Login.masterData.AP_SAMPLE, 'descending', 'npreregno') : [];\r\n        let AP_SubSampleList = this.props.Login.masterData.AP_SUBSAMPLE ? this.props.Login.masterData.AP_SUBSAMPLE : [];\r\n        let AP_TestList = this.props.Login.masterData.AP_TEST ? this.props.Login.masterData.AP_TEST : [];\r\n        let decisionStatus = this.props.Login.masterData.decisionStatus ? sortData(this.props.Login.masterData.decisionStatus, 'ascending', 'ntransactionstatus') : [];\r\n        let actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'descending', 'ntransactionstatus') : [];\r\n        let subSampleGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            searchSubSampleRef: this.searchSubSampleRef,\r\n            searchTestRef: this.searchTestRef,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            subSampleSkip: this.state.subSampleSkip,\r\n            subSampleTake: this.state.subSampleTake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n            sampleHistoryDataState: this.state.sampleHistoryDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\r\n        };\r\n        let testGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            searchTestRef: this.searchTestRef,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n            sampleHistoryDataState: this.state.sampleHistoryDataState,\r\n            subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n            subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n            activeTabIndex: this.state.enableAutoClick ? 1 : \"\"\r\n        };\r\n        let testChildGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample && this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            postParamList: this.postParamList,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n            activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\r\n\r\n        };\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_SAMPLETYPE\",\r\n            //     \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\r\n            //         this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\r\n            // }, \r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_DESIGNTEMPLATE\",\r\n            //     \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ?\r\n            //         this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" :\r\n            //         this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : \"NA\"\r\n            // },\r\n            // {\r\n            //     \"label\": \"IDS_CONFIGVERSION\",\r\n            //     \"value\": this.props.Login.masterData.realApprovalVersionValue ?\r\n            //         this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\r\n            //         this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\r\n            // // },\r\n            // {\r\n            //     \"label\": \"IDS_SECTION\",\r\n            //     \"value\": this.props.Login.masterData.realUserSectionValue ?\r\n            //         this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\r\n            //         this.props.Login.masterData.UserSectionValue ?\r\n            //             this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\r\n            // },\r\n            {\r\n                \"label\": \"IDS_Test\",\r\n                \"value\": this.props.Login.masterData.realTestValue ?\r\n                    this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" :\r\n                    this.props.Login.masterData.TestValue ?\r\n                        this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_TESTSTATUS\",\r\n                \"value\": this.props.Login.masterData.realFilterStatusValue ?\r\n                    this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" :\r\n                    this.props.Login.masterData.FilterStatusValue ?\r\n                        this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\r\n            }\r\n           \r\n        ];\r\n\r\n        const reportPreviewId = this.state.controlMap.has(\"SamplePreviewReport\") && this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode;\r\n        const editParamId = this.state.controlMap.has(\"EditReportMandatory\") && this.state.controlMap.get(\"EditReportMandatory\").ncontrolcode;\r\n        const TestDecisionActionId = this.state.controlMap.has(\"TestDecisionAction\") && this.state.controlMap.get(\"TestDecisionAction\").ncontrolcode;\r\n        const TestApprovalActionId = this.state.controlMap.has(\"TestApprovalAction\") && this.state.controlMap.get(\"TestApprovalAction\").ncontrolcode;\r\n        const reportGenerateId = this.state.controlMap.has(\"GenerateCOA\") && this.state.controlMap.get(\"GenerateCOA\").ncontrolcode;\r\n        const coaReportId = this.state.controlMap.has(\"COAReport\") && this.state.controlMap.get(\"COAReport\").ncontrolcode;\r\n\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"npreregno\",\r\n                fetchUrl: \"approval/getApprovalSubSample\",\r\n                fecthInputObject: subSampleGetParam,\r\n                selectedObject: \"APSelectedSample\",\r\n                inputListName: \"AP_SAMPLE\",\r\n                updatedListname: \"updatedSample\",\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\r\n            }, {\r\n                filteredListName: \"searchedSubSample\",\r\n                updatedListname: \"updatedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"ntransactionsamplecode\",\r\n                fetchUrl: \"approval/getApprovalTest\",\r\n                fecthInputObject: testGetParam,\r\n                selectedObject: \"APSelectedSubSample\",\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n                inputListName: \"AP_SUBSAMPLE\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\r\n            }, {\r\n                filteredListName: \"searchedTests\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: this.getActiveTestURL(),\r\n                fecthInputObject: testChildGetParam,\r\n                selectedObject: \"APSelectedTest\",\r\n                inputListName: \"AP_TEST\",\r\n                updatedListname: \"updatedTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\", \"TestList\"]\r\n            }]\r\n\r\n\r\n        const testDesign = <ContentPanel>\r\n            <Card>\r\n                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                    <span style={{ display: \"inline-block\" }}>\r\n                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                    </span>\r\n                </Card.Header>\r\n                <Card.Body className='p-0 sm-pager'>\r\n                    <TransactionListMasterJsonView\r\n                        cardHead={94}\r\n                        //clickIconGroup={true}\r\n                        // paneHeight={this.state.initialVerticalWidth}\r\n                        needMultiSelect={true}\r\n                        masterList={this.props.Login.masterData.searchedTests || AP_TestList}\r\n                        selectedMaster={this.props.Login.masterData.APSelectedTest || []}\r\n                        primaryKeyField=\"ntransactiontestcode\"\r\n                        //getMasterDetail={this.props.getTestChildTabDetail}\r\n                        getMasterDetail={(event, status) => { this.props.getTestChildTabDetail(event, status); this.state.enableAutoClick && this.changePropertyView(1,\"IDS_RESULTS\", event, \"click\") }}\r\n                        inputParam={testChildGetParam}\r\n                        additionalParam={[]}\r\n                        mainField={'stestsynonym'}\r\n                        selectedListName=\"APSelectedTest\"\r\n                        objectName=\"test\"\r\n                        listName=\"IDS_TEST\"\r\n                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        showStatusLink={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        showStatusIcon={false}\r\n                        showStatusName={true}\r\n                        subFieldsLabel={true}\r\n                        // jsonField={'jsondata'}\r\n                        //jsonDesignFields={false}\r\n                        selectionField=\"ntransactionstatus\"\r\n                        selectionFieldName=\"sfilterstatus\"\r\n                        selectionColorField=\"scolorhexcode\"\r\n                        selectionList={this.props.Login.masterData.FilterStatus || []}\r\n                        needSubFieldlabel={true}\r\n                        subFields={this.state.testListColumns}\r\n                        moreField={this.state.testMoreField}\r\n                        needValidation={false}\r\n                        needFilter={false}\r\n                        filterColumnData={this.props.filterTransactionList}\r\n                        searchListName=\"searchedTests\"\r\n                        searchRef={this.searchTestRef}\r\n                        filterParam={filterTestParam}\r\n                        skip={this.state.testskip}\r\n                        take={this.state.testtake}\r\n                        showMoreResetList={true}\r\n                        showMoreResetListName=\"AP_SAMPLE\"\r\n                        handlePageChange={this.handleTestPageChange}\r\n                        buttonCount={5}\r\n                        childTabsKey={\r\n                            [\r\n                                \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"ApprovalHistory\"\r\n                            ]\r\n                        }\r\n                        commonActions={\r\n\r\n                            <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                <Nav.Link\r\n                                    hidden={this.state.userRoleControlRights.indexOf(editParamId) === -1}\r\n                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDITREPORTMANDATORY\" })}\r\n                                  //  data-for=\"tooltip-common-wrap\"\r\n                                    data-place=\"left\"\r\n                                    className=\"btn btn-circle outline-grey\"\r\n                                    onClick={() => this.props.getParameterEdit({ APSelectedTest: this.props.Login.masterData.APSelectedTest, userInfo: this.props.Login.userInfo, masterData: this.props.Login.masterData })}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </Nav.Link>\r\n\r\n                                {this.props.Login.masterData.actionStatus &&\r\n                                    this.state.userRoleControlRights.indexOf(TestApprovalActionId) !== -1 &&\r\n                                    actionStatus.length > 0 ?\r\n                                    <CustomPopOver\r\n                                        icon={faBolt}\r\n                                        nav={true}\r\n                                        data={actionStatus}\r\n                                        btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                        dynamicButton={(value) => this.checkRetestAction(value, TestApprovalActionId)}\r\n                                        textKey=\"stransdisplaystatus\"\r\n                                        iconKey=\"ntransactionstatus\"\r\n                                    >\r\n                                    </CustomPopOver>\r\n                                    : \"\"}\r\n                            </ProductList>\r\n                        }\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </ContentPanel>\r\n\r\n        let mainDesign = \"\";\r\n        if (this.props.Login.masterData.realRegSubTypeValue &&\r\n            this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\r\n            mainDesign = <SplitterLayout borderColor=\"#999\"\r\n                primaryIndex={1} percentage={true}\r\n                secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                // onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                primaryMinSize={40}\r\n                secondaryMinSize={30}\r\n            >\r\n                <Card>\r\n                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                            <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}</h4>\r\n                        </span>\r\n                    </Card.Header>\r\n                    <Card.Body className='p-0  sm-pager'>\r\n                        <TransactionListMasterJson\r\n                            //clickIconGroup={true}\r\n                            cardHead={94}\r\n                            //paneHeight={this.state.initialVerticalWidth}\r\n                            masterList={this.props.Login.masterData.searchedSubSample || AP_SubSampleList}\r\n                            selectedMaster={this.props.Login.masterData.APSelectedSubSample}\r\n                            primaryKeyField=\"ntransactionsamplecode\"\r\n                            getMasterDetail={this.props.getTestDetail}\r\n                            inputParam={testGetParam}\r\n                            additionalParam={[]}\r\n                            mainField=\"ssamplearno\"\r\n                            selectedListName=\"APSelectedSubSample\"\r\n                            objectName=\"subSample\"\r\n                            listName=\"IDS_SUBSAMPLE\"\r\n                            showStatusLink={true}\r\n                            showStatusName={true}\r\n                            statusFieldName=\"stransdisplaystatus\"\r\n                            statusField=\"ntransactionstatus\"\r\n                            selectionList={this.state.selectedFilter}\r\n                            selectionField=\"ntransactionstatus\"\r\n                            selectionFieldName=\"sfilterstatus\"\r\n                            selectionColorField=\"stranscolor\"\r\n                            statusColor=\"stranscolor\"\r\n                            subFields={this.state.DynamicSubSampleColumns}\r\n                            moreField={this.state.subSampleMoreField}\r\n                            needValidation={false}\r\n                            needMultiSelect={true}\r\n                            needFilter={false}\r\n                            searchRef={this.searchSubSampleRef}\r\n                            filterParam={filterSubSampleParam}\r\n                            filterColumnData={this.props.filterTransactionList}\r\n                            searchListName=\"searchedSubSample\"\r\n                            skip={this.state.subSampleSkip}\r\n                            take={this.state.subSampleTake}\r\n                            handlePageChange={this.handleSubSamplePageChange}\r\n                            pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                            childTabsKey={[\"AP_TEST\", \"ApprovalParameter\", \"Registration\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]}\r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n                {testDesign}\r\n            </SplitterLayout>\r\n        }\r\n        else {\r\n            mainDesign = testDesign\r\n        }\r\n\r\n        return (\r\n            <>\r\n              \r\n                <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                    <Row noGutters={\"true\"} bsPrefix=\"toolbar-top\">\r\n                        {/* sticky_head_parent' ref={(parentHeight) => { this.parentHeight = parentHeight }} */}\r\n                        <Col md={12} className='parent-port-height' >\r\n                            <ListWrapper className={`vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                <div className={` tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"} ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                    <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1}\r\n                                        secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                        //onSecondaryPaneSizeChange={this.paneSizeChange} \r\n                                        primaryMinSize={40} secondaryMinSize={20}>\r\n                                        <div className='toolbar-top-inner'>\r\n                                            <TransactionListMasterJson\r\n                                                clickIconGroup={true}\r\n                                                splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                                needMultiSelect={true}\r\n                                                masterList={this.props.Login.masterData.searchedSample || AP_SampleList}\r\n                                                selectedMaster={this.props.Login.masterData.APSelectedSample}\r\n                                                primaryKeyField=\"npreregno\"\r\n                                                getMasterDetail={this.props.getsubSampleDetail}\r\n                                                inputParam={subSampleGetParam}\r\n                                                additionalParam={['napprovalversioncode']}\r\n                                                mainField={'sarno'}\r\n                                                selectionList={this.state.selectedFilter}\r\n                                                selectionField=\"ntransactionstatus\"\r\n                                                selectionFieldName=\"sfilterstatus\"\r\n                                                selectionColorField=\"stranscolor\"\r\n                                                selectedListName=\"APSelectedSample\"\r\n                                                objectName=\"sample\"\r\n                                                listName=\"IDS_SAMPLE\"\r\n                                                filterColumnData={this.props.filterTransactionList}\r\n                                                searchListName=\"searchedSample\"\r\n                                                needValidation={true}\r\n                                                validationKey=\"napprovalversioncode\"\r\n                                                validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                                                showFilter={this.props.Login.showFilter}\r\n                                                openFilter={this.openFilter}\r\n                                                closeFilter={this.closeFilter}\r\n                                                onFilterSubmit={this.onFilterSubmit}\r\n                                                subFields={this.state.DynamicSampleColumns}\r\n                                                moreField={this.state.sampleMoreField}\r\n                                                jsonDesignFields={true}\r\n                                                jsonField={'jsondata'}\r\n                                                showStatusLink={true}\r\n                                                statusFieldName=\"stransdisplaystatus\"\r\n                                                statusField=\"ntransactionstatus\"\r\n                                                //statusColor=\"sdecisioncolor\"\r\n                                                statusColor=\"stranscolor\"\r\n                                                showStatusIcon={false}\r\n                                                showStatusName={true}\r\n                                                needFilter={true}\r\n                                                searchRef={this.searchSampleRef}\r\n                                                filterParam={filterSampleParam}\r\n                                                skip={this.state.skip}\r\n                                                take={this.state.take}\r\n                                                handlePageChange={this.handlePageChange}\r\n                                                showStatusBlink={true}\r\n                                                //splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                                childTabsKey={[\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"SampleApprovalHistory\", \"RegistrationAttachment\", \"PrintHistory\", \"COAHistory\", \"RegistrationComment\"]}\r\n                                                actionIcons={\r\n                                                    [\r\n                                                        this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ?\r\n                                                            {\r\n                                                                title: \"Report\",\r\n                                                                controlname: \"reports\",\r\n                                                                objectName: \"sample\",\r\n                                                                hidden: this.state.userRoleControlRights.indexOf(reportPreviewId) === -1,\r\n                                                                // onClick: ()=>this.previewSampleReport(reportPreviewId),\r\n                                                                //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\r\n                                                                onClick: this.props.previewSampleReport,\r\n                                                                inputData: {\r\n                                                                    userinfo: this.props.Login.userInfo,\r\n                                                                    ncontrolcode: reportPreviewId\r\n                                                                },\r\n                                                            } :\r\n                                                            this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE ?\r\n                                                                {\r\n                                                                    title: \"Report\",\r\n                                                                    controlname: \"reports\",\r\n                                                                    objectName: \"sample\",\r\n                                                                    hidden: this.state.userRoleControlRights.indexOf(reportGenerateId) === -1,\r\n                                                                    // onClick: ()=>this.previewSampleReport(reportPreviewId),\r\n                                                                    //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\r\n                                                                    onClick: (obj) => this.generateCOAReport(obj, reportGenerateId),\r\n                                                                    inputData: {\r\n                                                                        userinfo: this.props.Login.userInfo,\r\n                                                                        ncontrolcode: reportPreviewId,\r\n                                                                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                                                                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                                                                    },\r\n                                                                }\r\n                                                                : {\r\n                                                                    title: \"Report\",\r\n                                                                    controlname: \"reports\",\r\n                                                                    objectName: \"sample\",\r\n                                                                    hidden: this.state.userRoleControlRights.indexOf(coaReportId) === -1,\r\n                                                                    onClick: (obj) => this.props.reportGenerate(obj, reportGenerateId),\r\n                                                                    inputData: {\r\n                                                                        userinfo: this.props.Login.userInfo,\r\n                                                                        ncontrolcode: coaReportId,\r\n\r\n                                                                    },\r\n\r\n                                                                }\r\n                                                    ]\r\n                                                }\r\n\r\n                                                commonActions={\r\n                                                    <>\r\n                                                        <ProductList className=\"d-flex product-category float-right\">\r\n                                                            <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                                onClick={() => this.onReload()}\r\n                                                               // data-for=\"tooltip-common-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                                <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                            </Button>\r\n                                                            {this.props.Login.masterData.decisionStatus &&\r\n                                                                this.state.userRoleControlRights.indexOf(TestDecisionActionId) !== -1 &&\r\n                                                                this.props.Login.masterData.decisionStatus.length > 0 ?\r\n                                                                <CustomPopOver\r\n                                                                    icon={faBolt}\r\n                                                                    nav={true}\r\n                                                                    data={decisionStatus}\r\n                                                                    btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                                    textKey=\"sdecisionstatus\"\r\n                                                                    iconKey=\"ntransactionstatus\"\r\n                                                                    dynamicButton={(value) => this.updateDecision(value)}\r\n                                                                >\r\n                                                                </CustomPopOver>\r\n\r\n                                                                : \"\"}\r\n                                                        </ProductList>\r\n                                                    </>\r\n                                                }\r\n                                                filterComponent={[\r\n                                                    {\r\n                                                        \"Sample Filter\": <ApprovalFilter\r\n                                                            SampleType={this.state.SampletypeList || []}\r\n                                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                                            RegType={this.state.RegistrationTypeList || []}\r\n                                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                                            UserSection={this.state.UserSectionList || []}\r\n                                                            UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                                            JobStatus={this.props.Login.masterData.JobStatus || []}\r\n                                                            Test={this.state.TestList || []}\r\n                                                            TestValue={this.props.Login.masterData.TestValue || []}\r\n                                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                                            onFilterComboChange={this.onFilterComboChange}\r\n                                                            handleDateChange={this.handleDateChange}\r\n                                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                                        />\r\n                                                    }\r\n                                                ]}\r\n\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <div style={this.state.showTest === true ? { display: \"block\", background: \"#FFFF\" } : { display: \"none\", background: \"#FFFF\" }} >\r\n                                                {mainDesign}\r\n                                            </div>\r\n                                        </div>\r\n                                    </SplitterLayout>\r\n                                </div>\r\n\r\n                                <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`} >\r\n                                    <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`} style={{ width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\" }}>\r\n                                        <span className={` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`} onClick={() => this.changePropertyViewClose(false)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                        <div className={` vertical-tab-content-results sm-view-v-t  ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 1 ? this.sideNavDetail(\"IDS_RESULTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-attachment  ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\"}\r\n                                        </div>\r\n                                        {/* <div className={` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`}>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_INSTRUMENT\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 4 ? this.sideNavDetail(\"IDS_INSTRUMENT\") : \"\"}\r\n                                        </div> */}\r\n                                        <div className={` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`}>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_MATERIAL\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 5 ? this.sideNavDetail(\"IDS_MATERIAL\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`}>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_TASK\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 6 ? this.sideNavDetail(\"IDS_TASK\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 7 ? 'active' : \"\"}`}>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_TESTAPPROVALHISTORY\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 7 ? this.sideNavDetail(\"IDS_TESTAPPROVALHISTORY\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`}>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\"}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='tab-head'>\r\n\r\n                                        <ul>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(1,\"IDS_RESULTS\")}>\r\n                                                <FontAwesomeIcon icon={faFileInvoice}\r\n                                               //  data-for=\"tooltip-common-wrap\"\r\n                                                 data-tip={this.props.intl.formatMessage({ id: \"IDS_RESULTS\" })} />\r\n                                                <span>\r\n                                                    { this.props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(2,\"IDS_ATTACHMENTS\")}>\r\n                                                <FontAwesomeIcon icon={faLink} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ATTACHMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(3,\"IDS_COMMENTS\")}>\r\n                                                <FontAwesomeIcon icon={faComments} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            {/* <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(4,\"IDS_INSTRUMENT\")}>\r\n                                                <FontAwesomeIcon icon={faMicroscope} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_INSTRUMENT\" })}\r\n                                                </span>\r\n                                            </li> */}\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(5,\"IDS_MATERIAL\")}>\r\n                                                <FontAwesomeIcon icon={faFlask} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_MATERIAL\" })}\r\n                                                </span>\r\n                                            </li>\r\n\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(6,\"IDS_TASK\")}>\r\n                                                <FontAwesomeIcon icon={faCommentDots} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_TASK\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            {/* <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 7 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(7)}>\r\n                                                <FontAwesomeIcon icon={faHistory} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_TESTAPPROVALHISTORY\" })}\r\n                                                </span>\r\n                                            </li> */}\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(8,\"IDS_SAMPLEDETAILS\")}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={\"Auto Show\"}\r\n                                                type=\"switch\"\r\n                                                name={\"Auto Click\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enableAutoClick}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enableAutoClick}\r\n                                            />\r\n                                        </span>\r\n                                        {/* <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={\"Popup Nav\"}\r\n                                                type=\"switch\"\r\n                                                name={\"PopupNav\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enablePropertyPopup}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enablePropertyPopup}\r\n                                            />\r\n                                        </span> */}\r\n                                    </div>\r\n                                </div>\r\n                            </ListWrapper >\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {this.props.Login.openChildModal ?\r\n                    <SlideOutModal\r\n                        onSaveClick={this.props.Login.operation === 'dynamic' ? () => this.performTestActions(this.props.Login.action, TestApprovalActionId) : this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={this.props.Login.screenName}\r\n                        closeModal={this.handleClose}\r\n                        show={this.props.Login.openChildModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === 'enforce' ? [{ \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"senforcestatuscomment\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }] : []}\r\n                        loginoperation={this.props.Login.operation === 'view' ? true : false}\r\n                        //graphView={this.props.Login.operation !=='enforce' ? this.props.Login.operation:undefined}\r\n                        noSave={this.props.Login.operation === 'view' ? true : false}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.props.Login.operation === 'enforce' ?\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormSelectSearch\r\n                                            name={\"ngradecode\"}\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                                            value={this.props.Login.masterData.GradeValue || []}\r\n                                            options={this.props.Login.masterData.Grade || []}\r\n                                            optionId=\"ngradecode\"\r\n                                            optionValue=\"sgradename\"\r\n                                            isMandatory={true}\r\n                                            isMulti={false}\r\n                                            isDisabled={false}\r\n                                            isSearchable={false}\r\n                                            closeMenuOnSelect={true}\r\n                                            isClearable={false}\r\n                                            onChange={(event) => this.onComboChange(event, 'ngradecode')}\r\n                                        />\r\n                                        <FormTextarea\r\n                                            name=\"senforcestatuscomment\"\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                            value={this.state.selectedRecord ? this.state.selectedRecord[\"senforcestatuscomment\"] : \"\"}\r\n                                            rows=\"2\"\r\n                                            isMandatory={true}\r\n                                            required={false}\r\n                                            maxLength={255}\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                        />\r\n                                    </Col>\r\n                                </Row> :\r\n                                this.props.Login.operation === 'dynamic' ?\r\n                                    <Row>\r\n                                        <Col md=\"12\">\r\n                                            {/* <FormNumericInput\r\n                                            name={\"retestcount\"}\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_RETESTCOUNT\" })}\r\n                                            type=\"number\"\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                                            value={this.state.selectedRecord?this.state.selectedRecord.retestcount:\"\"}\r\n                                            isMandatory=\"*\" \r\n                                            required={true}\r\n                                            min={1}\r\n                                            max={10}\r\n                                        /> */}\r\n                                            <FormNumericInput\r\n                                                name=\"retestcount\"\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_RETESTCOUNT\" })}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_MAX\" }) + \": \" + this.props.Login.masterData.retestcount}\r\n                                                type=\"text\"\r\n                                                strict={true}\r\n                                                className=\"form-control\"\r\n                                                value={this.state.selectedRecord ? this.state.selectedRecord.retestcount : \"\"}\r\n                                                maxLength={6}\r\n                                                onChange={(event) => this.onNumericInputOnChange(event, 'retestcount')}\r\n                                                isMandatory=\"*\"\r\n                                                required={true}\r\n                                                noStyle={true}\r\n                                            // min={1}\r\n                                            // max={this.props.Login.masterData.retestcount}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row> :\r\n                                    this.props.Login.operation === 'view' ?\r\n                                        <Row>\r\n                                            <Col md={12}>\r\n                                                <DataGrid\r\n                                                    primaryKeyField={\"nresultparamcommenthistorycode\"}\r\n                                                    data={this.props.Login.masterData.enforceCommentsHistory || []}\r\n                                                    dataResult={this.props.Login.masterData.enforceCommentsHistory || []}\r\n                                                    dataState={{ skip: 0, take: this.props.Login.masterData.enforceCommentsHistory ? this.props.Login.masterData.enforceCommentsHistory.length : 0 }}\r\n                                                    // dataStateChange={this.dataStateChange}\r\n                                                    extractedColumnList={\r\n                                                        [\r\n                                                            { \"idsName\": \"IDS_ENFORCESTATUSCOMMENT\", \"dataField\": \"senforcestatuscomment\", \"width\": \"450px\" }\r\n                                                        ]\r\n                                                    }\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    pageable={false}\r\n                                                    hideColumnFilter={true}\r\n                                                    isActionRequired={false}\r\n                                                    isToolBarRequired={false}\r\n                                                    scrollable={\"scrollable\"}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        :\r\n                                        <EditApprovalParameter\r\n                                            ApprovalParamEdit={this.props.Login.ApprovalParamEdit || []}\r\n                                            changeMandatory={this.changeMandatory}\r\n                                            selectedRecord={this.state.selectedRecord.approvalParameterEdit || {}}\r\n                                            nsubsampleneed={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed}\r\n                                        />\r\n                        }\r\n                    />\r\n                    : \"\"}\r\n                {this.props.Login.masterData.ChecklistData && this.props.Login.screenName === 'IDS_CHECKLISTRESULT' ?\r\n                    <TemplateForm\r\n                        templateData={this.props.Login.masterData.ChecklistData}\r\n                        needSaveButton={false}\r\n                        formRef={this.formRef}\r\n                        onTemplateInputChange={this.onTemplateInputChange}\r\n                        handleClose={this.handleClose}\r\n                        onTemplateComboChange={this.onTemplateComboChange}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.props.onSaveCheckList}\r\n                        Login={this.props.Login}\r\n                        viewScreen={this.props.Login.openTemplateModal}\r\n                        selectedRecord={this.state.selectedRecord || []}\r\n                        onTemplateDateChange={this.onTemplateDateChange}\r\n                    />\r\n                    : \"\"}\r\n            </>\r\n        )\r\n    }\r\n    componentWillUnmount() {\r\n        let activeTabIndex=this.props.Login.activeTabIndex\r\n         const updateInfo = {\r\n             typeName: DEFAULT_RETURN,\r\n             data: {\r\n                 activeTabIndex: undefined\r\n             }\r\n         }\r\n         this.props.updateStore(updateInfo);\r\n     }\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            sampleListMainField, subSampleListMainField, testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n            resultDataState, instrumentDataState,\r\n            materialDataState, taskDataState,\r\n            documentDataState, resultChangeDataState,\r\n            historyDataState, testCommentDataState,\r\n            samplePrintHistoryDataState, sampleHistoryDataState,\r\n            selectedRecord, SampletypeList, RegistrationTypeList,\r\n            RegistrationSubTypeList, FilterStatusList,\r\n            ConfigVersionList, UserSectionList, TestList, skip, take, testskip, testtake, selectedFilter,\r\n            DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns, DynamicGridItem,\r\n            DynamicGridMoreField, stateDynamicDesign, sampleSearchField, subsampleSearchField, testSearchField,\r\n            activeTabIndex, activeTabId } = this.state;\r\n\r\n        let bool = false;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            bool = true;\r\n            // this.setState({userRoleControlRights, controlMap});\r\n        }\r\n        if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\r\n            if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\r\n                let dataState = {\r\n                    skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \r\n                }\r\n                resultDataState = dataState\r\n                instrumentDataState = dataState\r\n                materialDataState = dataState\r\n                taskDataState = dataState\r\n                documentDataState = dataState\r\n                resultChangeDataState = dataState\r\n                historyDataState = dataState\r\n                testCommentDataState = dataState\r\n                // this.setState({\r\n                //     resultDataState: dataSate,instrumentDataState: dataSate,\r\n                //     materialDataState: dataSate,taskDataState: dataSate,instrumentDataState: dataSate,\r\n                //     instrumentDataState: dataSate,documentDataState: dataSate,resultChangeDataState: dataSate,\r\n                //     historyDataState: dataSate,resultDataState: dataSate,testCommentDataState:dataSate,\r\n                // });\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            // this.setState({selectedRecord: this.props.Login.selectedRecord });\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            TestList = TestListMap.get(\"OptionList\");\r\n            bool = true;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n\r\n            // const selectedFilters = this.props.Login.masterData.FilterStatusValue && \r\n            //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ? \r\n            //   JSON.stringify (JSON.parse(this.props.Login.masterData.FilterStatus)) : []\r\n\r\n            // const selectedFilters = this.props.Login.masterData.FilterStatusValue &&\r\n            //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ?\r\n            //     this.props.Login.masterData.FilterStatus : [];\r\n\r\n            const selectedFilters = this.props.Login.masterData.FilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\r\n                instrumentDataState = this.props.Login.instrumentDataState;\r\n            }\r\n            if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\r\n                taskDataState = this.props.Login.taskDataState;\r\n            }\r\n            if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\r\n                resultChangeDataState = this.props.Login.resultChangeDataState;\r\n            }\r\n            if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\r\n                historyDataState = this.props.Login.historyDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\r\n                samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\r\n            }\r\n            if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\r\n                sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\r\n            }\r\n            if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\r\n                sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\r\n            activeTabIndex = this.props.Login.activeTabIndex;\r\n            activeTabId = this.props.Login.activeTabId;\r\n            bool = true;\r\n        }\r\n\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n            sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n            subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems: []; \r\n            testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : []; \r\n            testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];  \r\n\r\n       \r\n\r\n            bool = true;\r\n            // sampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTITEM);\r\n            // subSampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTITEM);\r\n            // testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTITEM);\r\n            // sampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTMAINFIELD);\r\n            // subSampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTMAINFIELD);\r\n            // testListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMAINFIELD);\r\n            // SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.SINGLEITEMDATA)\r\n            // SampleGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDITEM)\r\n            // SampleGridExpandableItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDEXPANDABLEITEM)\r\n            // testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMOREITEM)\r\n            // let {selectedRecord}=this.state\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n            // this.setState({\r\n            //     sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            //     sampleListMainField, subSampleListMainField, testListMainField,\r\n            //     SampleGridItem, SampleGridExpandableItem, testMoreField,selectedRecord\r\n            // })\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap,\r\n                sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n                sampleListMainField, subSampleListMainField, testListMainField,\r\n                SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n                resultDataState, instrumentDataState,\r\n                materialDataState, taskDataState,\r\n                documentDataState, resultChangeDataState,\r\n                historyDataState, testCommentDataState,\r\n                samplePrintHistoryDataState, sampleHistoryDataState,\r\n                selectedRecord, SampletypeList, RegistrationTypeList,\r\n                RegistrationSubTypeList, FilterStatusList,\r\n                ConfigVersionList, UserSectionList, TestList,\r\n                skip, take, testskip, testtake, selectedFilter,\r\n                DynamicSampleColumns, DynamicSubSampleColumns,\r\n                DynamicTestColumns, DynamicGridItem,\r\n                DynamicGridMoreField, stateDynamicDesign,\r\n                sampleSearchField, subsampleSearchField, testSearchField,\r\n                activeTabIndex, activeTabId\r\n            });\r\n        }\r\n    }\r\n\r\n    // previewSampleReport = (ncontrolCode) => {\r\n\r\n    //     console.log(\"report:\", this.props.Login.masterData.selectedSample);\r\n    //     const selectedSample = this.props.Login.masterData.selectedSample[0];\r\n\r\n    //     const inputData = {ndecisionstatus:selectedSample.ndecisionstatus,\r\n    //                         userinfo:this.props.Login.userInfo,\r\n    //                         nprimarykey: selectedSample.npreregno,\r\n    //                         ncoareporttypecode : reportCOAType.SAMPLECERTIFICATEPRIVIEW,\r\n    //                         nreporttypecode :REPORTTYPE.SAMPLEREPORT,\r\n    //                         sprimarykeyname :\"npreregno\",\r\n    //                         ncontrolcode : ncontrolCode,\r\n    //                         nregtypecode:selectedSample.nregtypecode,\r\n    //                         nregsubtypecode: selectedSample.nregsubtypecode\r\n    //                         }\r\n    //     this.props.previewSampleReport(inputData);\r\n\r\n    // }\r\n\r\n    sampleTabDetail() {\r\n        const tabMap = new Map();\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        tabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                selectedMaster={this.props.Login.masterData.APSelectedSample}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={this.props.Login.masterData.APSelectedSample}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.APSelectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_ARNUMBER\"\r\n                displayName=\"sarno\"\r\n            />)\r\n        tabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SAMPLECOMMENTS\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddSampleComment\"}\r\n            editName={\"EditSampleComment\"}\r\n            deleteName={\"DeleteSampleComment\"}\r\n            methodUrl={\"SampleComment\"}\r\n            isTestComment={false}\r\n            masterData={this.props.Login.masterData}\r\n            masterList={this.props.Login.masterData.APSelectedSample}\r\n            masterAlertStatus=\"IDS_SELECTSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nregcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleComment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.APSelectedSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_ARNUMBER\"\r\n            displayName=\"sarno\"\r\n        />)\r\n\r\n        tabMap.set(\"IDS_SAMPLEAPPROVALHISTORY\",\r\n            <SampleApprovalHistory\r\n                userInfo={this.props.Login.userInfo}\r\n                ApprovalHistory={this.props.Login.masterData.SampleApprovalHistory}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.sampleHistoryDataState}\r\n                dataStateChange={this.sampleDataStateChange}\r\n                screenName=\"IDS_SAMPLEAPPROVALHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                masterData={this.props.Login.masterData}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n\r\n        // tabMap.set(\"IDS_PRINTHISTORY\",\r\n        //     <ApprovalPrintHistoryTab\r\n        //         userInfo={this.props.Login.userInfo}\r\n        //         ApprovalPrintHistory={this.props.Login.masterData.PrintHistory}\r\n        //         inputParam={this.props.Login.inputParam}\r\n        //         dataState={this.state.samplePrintHistoryDataState}\r\n        //         dataStateChange={this.sampleDataStateChange}\r\n        //         screenName=\"IDS_PRINTHISTORY\"\r\n        //         controlMap={this.state.controlMap}\r\n        //         userRoleControlRights={this.state.userRoleControlRights}\r\n        //         selectedId={null}\r\n        //     />);\r\n        // if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\r\n        //     tabMap.set(\"IDS_REPORTHISTORY\",\r\n        //         <ReportHistoryTab\r\n        //             userInfo={this.props.Login.userInfo}\r\n        //             COAHistory={this.props.Login.masterData.COAHistory}\r\n        //             inputParam={this.props.Login.inputParam}\r\n        //             dataState={this.state.reportHistoryDataState}\r\n        //             dataStateChange={this.sampleDataStateChange}\r\n        //             screenName=\"IDS_REPORTHISTORY\"\r\n        //             controlMap={this.state.controlMap}\r\n        //             userRoleControlRights={this.state.userRoleControlRights}\r\n        //             selectedId={null}\r\n        //             viewDownloadFile={this.downloadReport}\r\n        //         />);\r\n        // }\r\n        return tabMap;\r\n    }\r\n    downloadReport = (input) => {\r\n        let inputParam = {\r\n            inputData: { selectedRecord: { ...input.inputData }, userinfo: this.props.Login.userInfo },\r\n            classUrl: \"approval\",\r\n            operation: \"view\",\r\n            methodUrl: \"Report\"\r\n        }\r\n        this.props.viewAttachment(inputParam)\r\n    }\r\n\r\n    subsampleTabDetail = () => {\r\n        let ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ?\r\n            this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        const tabMap = new Map();\r\n        let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\r\n        let { subSampleSkip, subSampleTake } = this.state\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n        tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_SUBSAMPLEATTACHMENTS\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            selectedMaster=\"APSelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationSampleAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            masterList={this.props.Login.masterData.APSelectedSubSample}\r\n            masterAlertStatus={\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\"}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            viewFile={this.props.viewAttachment}\r\n            addName={\"AddSubSampleAttachment\"}\r\n            editName={\"EditSubSampleAttachment\"}\r\n            deleteName={\"DeleteSubSampleAttachment\"}\r\n            viewName={\"ViewSubSampleAttachment\"}\r\n            methodUrl={\"SubSampleAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n            skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n            take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleAttachment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\r\n\r\n            }}\r\n            selectedListName=\"IDS_SAMPLEARNO\"\r\n            displayName=\"ssamplearno\"\r\n        />)\r\n        tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SUBSAMPLECOMMENTS\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddSubSampleComment\"}\r\n            editName={\"EditSubSampleComment\"}\r\n            deleteName={\"DeleteSubSampleComment\"}\r\n            methodUrl={\"SubSampleComment\"}\r\n            isTestComment={false}\r\n            masterList={this.props.Login.masterData.APSelectedSubSample}\r\n            masterAlertStatus=\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nsamplecommentcode\"}\r\n            dataState={this.state.subSampleCommentDataState}\r\n            dataStateChange={this.subSampledataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleComment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SUBSAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleComment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SUBSAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_SAMPLEARNO\"\r\n            displayName=\"ssamplearno\"\r\n        />)\r\n\r\n        return tabMap;\r\n    }\r\n\r\n    resultTabDetail = () => {\r\n        const resultTabMap = new Map();\r\n        let { testskip, testtake, subSampleSkip, subSampleTake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        resultTabMap.set(\"IDS_RESULTS\", <ApprovalResultsTab\r\n            userInfo={this.props.Login.userInfo}\r\n            tabSequence={SideBarSeqno.TEST}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            dataState={this.state.resultDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            screenName=\"IDS_RESULTS\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            getStatusCombo={this.props.getStatusCombo}\r\n            selectedId={this.props.Login.masterData.selectedParamId}\r\n            viewFile={this.props.viewAttachment}\r\n            checkListRecord={this.props.checkListRecord}\r\n            getEnforceCommentsHistory={this.props.getEnforceCommentsHistory}\r\n        />)\r\n\r\n        resultTabMap.set(\"IDS_RESULTCHANGEHISTORY\",\r\n            <ResultChangeHistoryTab\r\n                tabSequence={SideBarSeqno.TEST}\r\n                userInfo={this.props.Login.userInfo}\r\n                ApprovalResultChangeHistory={this.props.Login.masterData.ApprovalResultChangeHistory}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.resultChangeDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                screenName=\"IDS_RESULTCHANGEHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                masterData={this.props.Login.masterData}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n\r\n        return resultTabMap;\r\n    }\r\n\r\n    attachmentTabDetail = () => {\r\n        const attachmentTabMap = new Map();\r\n        let { testskip, testtake, subSampleSkip, subSampleTake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        const ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n\r\n        attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_TESTATTACHMENTS\"\r\n            tabSequence={SideBarSeqno.TEST}\r\n            selectedMaster={selectedTestList}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n            addName={\"AddTestAttachment\"}\r\n            editName={\"EditTestAttachment\"}\r\n            deleteName={\"DeleteTestAttachment\"}\r\n            viewName={\"ViewTestAttachment\"}\r\n            methodUrl={\"TestAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n            subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"screateddate\" }]}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestAttachment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTATTACHMENTS\",\r\n                masterList: selectedTestList\r\n\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n        />)\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n        attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_SUBSAMPLEATTACHMENTS\"\r\n            tabSequence={SideBarSeqno.SUBSAMPLE}\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            selectedMaster=\"APSelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationSampleAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            masterList={this.props.Login.masterData.APSelectedSubSample}\r\n            masterAlertStatus={\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\"}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            viewFile={this.props.viewAttachment}\r\n            addName={\"AddSubSampleAttachment\"}\r\n            editName={\"EditSubSampleAttachment\"}\r\n            deleteName={\"DeleteSubSampleAttachment\"}\r\n            viewName={\"ViewSubSampleAttachment\"}\r\n            methodUrl={\"SubSampleAttachment\"}\r\n            skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n            take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleAttachment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\r\n\r\n            }}\r\n            selectedListName=\"IDS_SAMPLEARNO\"\r\n            displayName=\"ssamplearno\"\r\n        />)\r\n        attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                tabSequence={SideBarSeqno.SAMPLE}\r\n                selectedMaster={this.props.Login.masterData.APSelectedSample}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={this.props.Login.masterData.APSelectedSample}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.APSelectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_ARNUMBER\"\r\n                displayName=\"sarno\"\r\n            />)\r\n        return attachmentTabMap;\r\n    }\r\n\r\n    commentTabDetail = () => {\r\n        const commentTabMap = new Map();\r\n        let { testskip, testtake, subSampleSkip, subSampleTake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        const ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n\r\n        commentTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n            screenName=\"IDS_TESTCOMMENTS\"\r\n            isSampleTestComment={true}\r\n            tabSequence={SideBarSeqno.TEST}\r\n            selectedMaster={selectedTestList}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n            addName={\"AddTestComment\"}\r\n            editName={\"EditTestComment\"}\r\n            deleteName={\"DeleteTestComment\"}\r\n            methodUrl={\"TestComment\"}\r\n            isTestComment={false}\r\n            primaryKeyField={\"ntestcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestComment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTCOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: selectedTestList,\r\n                ncontrolCode: editTestCommentsId\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n        />)\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n         commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SUBSAMPLECOMMENTS\"\r\n            tabSequence={SideBarSeqno.SUBSAMPLE}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddSubSampleComment\"}\r\n            editName={\"EditSubSampleComment\"}\r\n            deleteName={\"DeleteSubSampleComment\"}\r\n            methodUrl={\"SubSampleComment\"}\r\n            isTestComment={false}\r\n            masterList={this.props.Login.masterData.APSelectedSubSample}\r\n            masterAlertStatus=\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nsamplecommentcode\"}\r\n            dataState={this.state.subSampleCommentDataState}\r\n            dataStateChange={this.subSampledataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleComment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SUBSAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleComment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SUBSAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_SAMPLEARNO\"\r\n            displayName=\"ssamplearno\"\r\n        />)\r\n        commentTabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SAMPLECOMMENTS\"\r\n            tabSequence={SideBarSeqno.SAMPLE}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterData={this.props.Login.masterData}\r\n            addName={\"AddSampleComment\"}\r\n            editName={\"EditSampleComment\"}\r\n            deleteName={\"DeleteSampleComment\"}\r\n            methodUrl={\"SampleComment\"}\r\n            isTestComment={false}\r\n            masterList={this.props.Login.masterData.APSelectedSample}\r\n            masterAlertStatus=\"IDS_SELECTSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nregcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleComment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.APSelectedSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_ARNUMBER\"\r\n            displayName=\"sarno\"\r\n        />)\r\n\r\n        return commentTabMap;\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        if (value === 0 || value === 0.0) {\r\n            selectedRecord[name] = \"\";\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n\r\n            selectedRecord[name] = value;\r\n            this.setState({ selectedRecord });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // onSampleTabChange = (tabProps) => {\r\n    //     const activeSampleTab = tabProps.screenName;\r\n    //     if (activeSampleTab !== this.props.Login.activeSampleTab) {\r\n    //         let inputData = {\r\n    //             masterData: this.props.Login.masterData,\r\n    //             selectedSample: this.props.Login.masterData.APSelectedSample,\r\n    //             npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             screenName: activeSampleTab,\r\n    //             activeSampleTab\r\n    //         }\r\n    //         this.props.getSampleChildTabDetail(inputData)\r\n    //     }\r\n    // }\r\n\r\n    // onSubSampleTabChange = (tabProps) => {\r\n    //     const activeSubSampleTab = tabProps.screenName;\r\n    //     if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\r\n    //         let inputData = {\r\n    //             masterData: this.props.Login.masterData,\r\n    //             selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n    //             ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             screenName: activeSubSampleTab,\r\n    //             activeSubSampleTab,\r\n    //             subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n    //             subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n    //         }\r\n    //         this.props.getSubSampleChildTabDetail(inputData)\r\n    //     }\r\n    // }\r\n\r\n    showSampleInfo() {\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n    showTestList() {\r\n        this.setState({ showTest: true, showSample: false })\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n    checkRetestAction = (action, ncontrolCode) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        if (selectedTestList.length > 0) {\r\n            if (action.ntransactionstatus === transactionStatus.RETEST) {\r\n\r\n                if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\r\n                    if (selectedTestList.length > 1) {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONETESTONLY\" }));\r\n                    } else {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                action,\r\n                                masterData: this.props.Login.masterData,\r\n                                openChildModal: true,\r\n                                screenName: \"IDS_RETESTCOUNT\",\r\n                                operation: \"dynamic\"\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                } else {\r\n                    this.performTestActions(action, ncontrolCode);\r\n                }\r\n\r\n            } else {\r\n\r\n                this.performTestActions(action, ncontrolCode);\r\n\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n    }\r\n    performTestActions = (action, ncontrolCode) => {\r\n        if (action.ntransactionstatus === transactionStatus.RETEST && this.state.selectedRecord && this.state.selectedRecord.retestcount > this.props.Login.masterData.retestcount) {\r\n\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_MAX\" }) + \": \" + this.props.Login.masterData.retestcount)\r\n\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n            if (ntransCode === transactionStatus.ALL) {\r\n                ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n            } else {\r\n                ntransCode = ntransCode + \",\" + action.ntransactionstatus\r\n            }\r\n            let { testskip, testtake } = this.state\r\n            let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n            testList = testList.slice(testskip, testskip + testtake);\r\n            let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n            const inputParam = {\r\n                inputData: {\r\n                    'performaction': {\r\n                        npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\r\n                        ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                        ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                            this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                                this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                                String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                            null,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        nTransStatus: action.ntransactionstatus,\r\n                        stransdisplaystatus:action.stransdisplaystatus,\r\n                        ntransactionstatus: String(-1),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nflag: 2,\r\n                        ntype: 1,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                        APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                        APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                        retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                        ncontrolCode,\r\n                        checkBoxOperation: 3,\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n                    },\r\n                    userinfo: this.props.Login.userInfo\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                methodUrl: \"performaction\",\r\n                postParamList: this.postParamList\r\n            }\r\n            if (action.nesignneed === transactionStatus.YES) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true,\r\n                        screenName: \"performaction\",\r\n                        operation: \"dynamic\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.performAction(inputParam)\r\n            }\r\n        }\r\n    }\r\n    updateDecision = (action) => {\r\n        let ntransCode = this.props.Login.masterData.realFilterStatusValue.ntransactionstatus\r\n        if (ntransCode === transactionStatus.ALL) {\r\n            ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n        }\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let { skip, take } = this.state\r\n        let sampleList = [...this.props.Login.masterData.AP_SAMPLE];\r\n        sampleList = sampleList.splice(skip, skip + take);\r\n        let selectedsampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\r\n        if (selectedsampleList.length > 0) {\r\n            const inputData = {\r\n                'updatedecision': {\r\n                    npreregno: selectedsampleList.map(sample => sample.npreregno).join(\",\"),\r\n                    nTransStatus: action.ntransactionstatus,\r\n                    ntransactionstatus: String(ntransCode),\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                        this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                            this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                            String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                        null,\r\n                    ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : 0,\r\n                    nflag: 1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    napprovalversioncode: String(selectedsampleList[0].napprovalversioncode),\r\n                    napprovalconfigcode: selectedsampleList[0].napprovalconfigcode,\r\n                    selectedSample: this.props.Login.masterData.selectedSample,\r\n                }, userinfo: this.props.Login.userInfo\r\n\r\n            }\r\n            let inputParam = { postParamList: this.postParamList, inputData, masterData: this.props.Login.masterData }\r\n            if (action.nesignneed === transactionStatus.YES) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true,\r\n                        screenName: \"updatedecision\",\r\n                        operation: \"decision\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.updateDecision(inputParam)\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n        }\r\n\r\n    }\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item\r\n                    };\r\n                    this.props.getRegistrationType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item\r\n                    }\r\n                    this.props.getRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n\r\n                        nsectioncode: this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection.length > 0 ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode : null,\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                const inputParamData = {\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: { ...this.props.Login.masterData },\r\n                    RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                    ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                    stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                  //  nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    ndesigntemplatemappingcode: comboData.value,\r\n                    DesignTemplateMappingValue: comboData.item\r\n                }\r\n                this.props.getFilterBasedTest(inputParamData)\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    let ApprovalVersionValue=comboData.item\r\n                    ApprovalVersionValue['napproveconfversioncode']=comboData.value\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue  }, \r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        napproveconfversioncode:comboData.value,\r\n                        ApprovalVersionValue: comboData.item,\r\n                      //   nsectioncode: this.props.Login.masterData.UserSectionValue!== null&&\r\n                   //    this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                        ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode&& \r\n                        this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'nsectioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n                    // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        nsectioncode: comboData.value === -1 ? null\r\n                            // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                            : comboData.value,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n                        DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n                    }\r\n\r\n                    this.props.getFilterBasedTest(inputParamData);\r\n                }\r\n            } else if (fieldName === 'njobstatuscode') {\r\n                if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n                    let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else {\r\n                if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n                    //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n                    //  const updateInfo = {\r\n                    //     typeName: DEFAULT_RETURN,\r\n                    //    data: { masterData }\r\n                    // }\r\n\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: comboData.value,\r\n                        stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n                        nsectioncode: null,//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n                    \r\n                        DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1    //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                        //: this.props.Login.masterData.UserSectionValue.nsectioncode, \r\n \r\n               \r\n                    }\r\n\r\n                    this.props.getFilterBasedTest(inputParamData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onComboChange = (comboData) => {\r\n        if (comboData) {\r\n            let masterData = { ...this.props.Login.masterData, GradeValue: comboData }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { masterData }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getApprovalVersion(inputParam)\r\n    }\r\n    changeMandatory = (event, dataItem) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let value = event.currentTarget.checked ? transactionStatus.YES : transactionStatus.NO\r\n        selectedRecord[\"approvalParameterEdit\"] = { ...selectedRecord[\"approvalParameterEdit\"], [dataItem.ntransactionresultcode]: value }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onReload = () => {\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue } = this.props.Login.masterData\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n           // ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n           ntransactionstatus: this.props.Login.masterData.FilterStatusValue \r\n                                ? (this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined\r\n                                || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') \r\n                                ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\":\"-1\",\r\n   \r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab || \"\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\r\n            checkBoxOperation: 3,\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getApprovalSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onFilterSubmit = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: this.props.Login.masterData.FilterStatusValue \r\n                                ? (this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined\r\n                                || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') \r\n                                ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\":\"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab,\r\n            activeSampleTab: this.props.Login.activeSampleTab,\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            checkBoxOperation: 3,\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\r\n\r\n            // let obj = this.covertDatetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getApprovalSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    testDataStateChange = (event) => {\r\n\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_RESULTS\":\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                this.setState({\r\n                    materialDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TASK\":\r\n                this.setState({\r\n                    taskDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_DOCUMENTS\":\r\n                this.setState({\r\n                    documentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                this.setState({\r\n                    resultChangeDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTAPPROVALHISTORY\":\r\n                this.setState({\r\n                    historyDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    subSampledataStateChange = (event) => {\r\n        switch (this.props.Login.activeSubSampleTab) {\r\n            case \"IDS_SUBSAMPLECOMMENTS\":\r\n                this.setState({\r\n                    subSampleCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                this.setState({\r\n                    subSampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    popUptestDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n    sampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n            case \"IDS_SAMPLEINFO\":\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SAMPLEAPPROVALHISTORY\":\r\n                this.setState({\r\n                    sampleHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_PRINTHISTORY\":\r\n                this.setState({\r\n                    samplePrintHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_REPORTHISTORY\":\r\n                this.setState({\r\n                    reportHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let ok = true;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        if (this.props.Login.operation === 'enforce') {\r\n            inputData[\"enforcestatus\"] = {\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                ngradecode: this.props.Login.masterData.GradeValue.value || -1,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                ntransactiontestcode: this.state.selectedRecord.ntransactiontestcode,\r\n                ntransactionresultcode: this.state.selectedRecord.ntransactionresultcode,\r\n                senforcestatuscomment: this.state.selectedRecord.senforcestatuscomment || \"\",\r\n                selectedTestCode: this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\")\r\n            }\r\n            inputParam = {\r\n                methodUrl: \"EnforceStatus\",\r\n                classUrl: 'approval',\r\n                inputData: inputData,\r\n                postParam: { selectedObject: \"APSelectedTest\", primaryKeyField: \"ntransactiontestcode\" },\r\n                operation: \"update\"\r\n            }\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord: this.state.selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation\r\n            }\r\n            inputParam = onSaveSampleAttachment(saveParam);\r\n        }\r\n        else {\r\n            let approvalparameter = []\r\n            if (this.state.selectedRecord.approvalParameterEdit) {\r\n                Object.keys(this.state.selectedRecord.approvalParameterEdit).map((key) =>\r\n                    approvalparameter.push(\r\n                        {\r\n                            ntransactionresultcode: key,\r\n                            nreportmandatory: this.state.selectedRecord.approvalParameterEdit[key]\r\n                        }\r\n                    )\r\n                )\r\n                inputData[\"approvalparameter\"] = approvalparameter\r\n                inputParam = {\r\n                    methodUrl: \"ApprovalParameter\",\r\n                    classUrl: 'approval',\r\n                    inputData: inputData,\r\n                    postParam: { selectedObject: \"APSelectedTest\", primaryKeyField: \"ntransactiontestcode\" },\r\n                    operation: \"update\"\r\n                }\r\n            } else {\r\n                ok = false;\r\n                this.handleClose()\r\n            }\r\n        }\r\n        if (ok) {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        openChildModal: true,\r\n                        operation: this.props.Login.operation,\r\n                        screenName: \"IDS_ENFORCESTATUS\",\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n            }\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openChildModal = this.props.Login.openChildModal\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let templateData = this.props.Login.templateData;\r\n        let operation = this.props.Login.operation;\r\n        let openTemplateModal = this.props.Login.openTemplateModal;\r\n        if (this.props.Login.loadEsign) {\r\n            if (operation === \"delete\" || operation === \"dynamic\" || operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n                templateData = {};\r\n                operation = undefined;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n            selectedRecord['esignpassword'] = \"\"\r\n            selectedRecord['esigncomments'] = \"\"\r\n            selectedRecord['esignreason']=\"\"\r\n        }\r\n        else {\r\n            openTemplateModal = false;\r\n            openModal = false;\r\n            openChildModal = false;\r\n            selectedRecord = {};\r\n            templateData = {}\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, openChildModal, loadEsign, selectedRecord, templateData, selectedParamId: null, operation, openTemplateModal }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData,\r\n            operation: this.props.Login.operation\r\n        }\r\n        if (this.props.Login.operation === 'dynamic' || this.props.Login.operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\r\n            this.props.validateEsignforApproval(inputParam, \"openChildModal\");\r\n        } else {\r\n            this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n        }\r\n    }\r\n    // covertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n    //     const fromDate = fromDateOnly + \"T00:00:00\";\r\n    //     const toDate = toDateOnly + \"T23:59:59\";\r\n\r\n\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n    getActiveTestURL() {\r\n        let url = \"approval/getapprovalparameter\"\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_RESULTS\":\r\n                url = \"approval/getapprovalparameter\"\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                url = \"resultentrybysample/getResultUsedInstrument\"\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                url = \"resultentrybysample/getResultUsedMaterial\"\r\n                break;\r\n            case \"IDS_TASK\":\r\n                url = \"resultentrybysample/getResultUsedTask\"\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                url = \"attachment/getTestAttachment\"\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                url = \"approval/getApprovalResultChangeHistory\"\r\n                break;\r\n            case \"IDS_TESTAPPROVALHISTORY\":\r\n                url = \"approval/getApprovalHistory\"\r\n                break;\r\n\r\n            default:\r\n                url = \"approval/getapprovalparameter\"\r\n                break;\r\n        }\r\n        return url;\r\n    }\r\n    onTemplateInputChange = (event, control) => {\r\n        let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateComboChange = (comboData, control) => {\r\n        let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateDateChange = (dateData, control) => {\r\n        let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        if (selectedTestList.length > 0) {\r\n\r\n            if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveTestComments(saveParam, selectedTestList);\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\r\n                let sampleList = [];\r\n                if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                    sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\r\n                } else {\r\n                    sampleList = this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take);\r\n                }\r\n                let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n\r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveSampleComments(saveParam, acceptList);\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\r\n                let sampleList = [];\r\n                if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n                    sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake), \"npreregno\");\r\n                } else {\r\n                    sampleList = this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake);\r\n                }\r\n                let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n                // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\r\n\r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveSubSampleComments(saveParam, acceptList);\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        operation: this.props.Login.operation,\r\n                        screenName: this.props.Login.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n            }\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n    }\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let { testskip, testtake, skip, take } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let sampleList = this.props.Login.masterData.searchedSample ? [...this.props.Login.masterData.searchedSample] : [...this.props.Login.masterData.AP_SAMPLE];\r\n        sampleList = sampleList.slice(skip, skip + take);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let ok = true;\r\n        if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            if (selectedSampleList.length > 0) {\r\n                inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\r\n            }\r\n            else {\r\n                ok = false\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.APSelectedSubSample);\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            if (selectedTestList.length > 0) {\r\n                inputParam = onSaveTestAttachment(saveParam, selectedTestList);\r\n            }\r\n            else {\r\n                ok = false\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        if (ok) {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        operation: this.props.Login.operation,\r\n                        screenName: this.props.Login.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    generateCOAReport = (inputData, ncontrolCode) => {\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            let inputParam = { reporparam: inputData }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openChildModal: true,\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: \"reportgeneration\",\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n\r\n        } else {\r\n\r\n            this.props.generateCOAReport(inputData);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, viewAttachment, checkListRecord,\r\n    updateDecision, getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo,\r\n    validateEsignCredential, crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList,\r\n    getSampleChildTabDetail, getAttachmentCombo, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest,\r\n    generateCOAReport, getEnforceCommentsHistory, reportGenerate, getSubSampleChildTabDetail\r\n})(injectIntl(Approval))"]},"metadata":{},"sourceType":"module"}