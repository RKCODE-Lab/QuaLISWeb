{"ast":null,"code":"import { intl } from '../../components/App';\nimport { convertDateTimetoStringDBFormat, formatInputDate } from '../../components/CommonScript';\nimport { transactionStatus } from '../../components/Enumeration';\nexport function fnCheckBatchComponentMandatory(Components) {\n  // Components.map(component => {\n  for (var i = 0; i < Components.length; i++) {\n    if (Components[i].smanuflotno.length <= 0) {\n      // alert('IDS_ENTERMANUFLOTNOFOR ' + Components[i].scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERMANUFLOTNOFOR\"\n      }) + Components[i].scomponentname;\n    } else if (Components[i].nnoofcontainer && Components[i].nnoofcontainer.length <= 0) {\n      // alert('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERNOOFCONTFOR\"\n      }) + Components[i].scomponentname; // return ('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\n    } else if (Components[i].dreceiveddate === null) {\n      // alert('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERMANUFLOTNOFOR\"\n      }) + Components[i].scomponentname; // return ('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\n    }\n  }\n\n  return true;\n}\nexport function fnCheckBatchProtocolComponentMandatory(Components) {\n  //Components.map(component => {\n  for (var i = 0; i < Components.length; i++) {\n    if (Components[i].smanuflotno.length <= 0) {\n      // alert('IDS_ENTERMANUFLOTNOFOR ' + {} + component.scomponentname);\n      //return (intl.formatMessage({ id: 'IDS_ENTERMANUFLOTNOFOR ' }) + {} + Components[i].scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERMANUFLOTNOFOR\"\n      }) + Components[i].scomponentname;\n    } else if (Components[i].dreceiveddate === null) {\n      // alert('IDS_ENTERMANUFLOTNOFOR' + component.scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERMANUFLOTNOFOR\"\n      }) + Components[i].scomponentname;\n    } //return null;\n    //});\n\n  }\n\n  return true;\n}\nexport function checkDuplicateComponentandManufLot(Components) {\n  let copiedArrays = [...Components];\n  let DuplicateComponent = [];\n  let bReturnFlag = true;\n  Components.map(component => {\n    copiedArrays.forEach(componentArray => {\n      component.slno !== componentArray.slno && component.smanuflotno === componentArray.smanuflotno && component.scomponentname === componentArray.scomponentname && DuplicateComponent.push(component);\n    });\n    return null;\n  });\n\n  if (DuplicateComponent.length > 0) {\n    let smanuflotno = DuplicateComponent[0].smanuflotno;\n    let scomponentname = DuplicateComponent[0].scomponentname; // Alert.show(resourceManager.getString('LocalizedStrings', 'IDS_DUPLICATEMANFNO') + \" \" + smanuflotno + \" for \" + scomponentname, resourceManager.getString('LocalizedStrings', 'IDS_WARNING'));\n\n    bReturnFlag = intl.formatMessage({\n      id: 'IDS_DUPLICATEMANFNO'\n    }) + \" \" + smanuflotno + \" \" + intl.formatMessage({\n      id: 'IDS_FOR'\n    }) + \" \" + scomponentname;\n  }\n\n  return bReturnFlag;\n}\nexport function TestListManipulation(Components, Test) {\n  let ArrayList = [];\n  Components.map(component => {\n    return ArrayList = Test && Test[component.slno] ? [...ArrayList, ...Test[component.slno]] : ArrayList;\n  }); //    ArrayList.map(item=>{\n  //        item['jsondata']={}\n  //       // if(item==='nsectioncode'||item==='nmethodcode'){\n  //         item['jsondata']['nsectioncode']={value:item['nsectioncode'],label:item['ssectionname']}\n  //         item['jsondata']['nmethodcode']={value:item['nmethodcode'],label:item['smethodname']}\n  //         item['jsondata']['ninstrumentcatcode']={value:item['ninstrumentcatcode'],label:item['sinstrumentcatname']}\n  //         item['jsondata']['ntestcode']=item['ntestcode']\n  //         item['jsondata']['ncost']=item['ncost']\n  //       // }\n  //    })\n\n  return ArrayList ? ArrayList : [];\n}\nexport function SubSample(Components, specBasedComponent, nneedsubsample, selectedSpec) {\n  //  let ArrayList = [];\n  if (nneedsubsample) {\n    if (specBasedComponent) {\n      Components.map(component => {\n        // if(component===\"ncomponentcode\"){\n        return component[\"ncomponentcode\"]; // }\n      });\n      return Components;\n    } else {\n      Components.map(component => {\n        // if(component===\"ncomponentcode\"){\n        return component[\"ncomponentcode\"] = -1; // }\n      });\n      return Components;\n    }\n  } else {\n    Components.map(component => {\n      // if(component===\"ncomponentcode\"){\n      component[\"ncomponentcode\"] = -1;\n      component[\"nspecsampletypecode\"] = selectedSpec.nallottedspeccode.item.nspecsampletypecode;\n      return component; // }\n    });\n    return Components;\n  }\n}\nexport function getRegistration(masterData, selectedRecord, selectedSpec, templateList, userInfo, defaulttimezone, operation, comboComponents) {\n  let sampleRegistration = {};\n  let dateList = [];\n  sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue.nsampletypecode;\n  sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue.nregtypecode;\n  sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegSubTypeValue.nregsubtypecode;\n  sampleRegistration[\"ndesigntemplatemappingcode\"] = masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\n  sampleRegistration[\"nregsubtypeversioncode\"] = masterData.RealRegSubTypeValue.nregsubtypeversioncode;\n  sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample.ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\n  sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample.nallottedspeccode : selectedSpec.nallottedspeccode.value;\n\n  if (masterData.RealSampleTypeValue.nsampletypecode === 1) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === 2) {\n    sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === 3) {\n    sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\n    sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n  }\n\n  sampleRegistration[\"jsondata\"] = {};\n  sampleRegistration[\"jsonuidata\"] = {};\n  templateList && templateList.map(row => {\n    return row.children.map(column => {\n      return column.children.map(component => {\n        if (component.hasOwnProperty(\"children\")) {\n          return component.children.map(componentrow => {\n            if (componentrow.inputtype === \"combo\") {\n              //  if(componentrow.recordbasedreadonly)\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                value: selectedRecord[componentrow.label].value,\n                label: selectedRecord[componentrow.label].label\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n            } else if (componentrow.inputtype === \"date\") {\n              if (componentrow.mandatory) {\n                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              }\n\n              if (componentrow.timezone) {\n                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                  value: selectedRecord[`tz${componentrow.label}`].value,\n                  label: selectedRecord[`tz${componentrow.label}`].label\n                } : defaulttimezone ? defaulttimezone : -1;\n                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`];\n              }\n\n              dateList.push(componentrow.label);\n            } else {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n            }\n          });\n          return sampleRegistration;\n        } else {\n          if (component.inputtype === \"combo\") {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n              value: selectedRecord[component.label].value,\n              label: selectedRecord[component.label].label\n            } : -1;\n            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n          } else if (component.inputtype === \"date\") {\n            if (component.mandatory) {\n              sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            }\n\n            if (component.timezone) {\n              sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                value: selectedRecord[`tz${component.label}`].value,\n                label: selectedRecord[`tz${component.label}`].label\n              } : defaulttimezone ? defaulttimezone : -1;\n              sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`];\n            }\n\n            dateList.push(component.label);\n          } else {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n          }\n\n          return sampleRegistration;\n        }\n      });\n    });\n  });\n  const param = {\n    sampleRegistration,\n    dateList\n  };\n  return param;\n} // export function getComponentListfromUnwantedAttr(Components) {\n//     Components.map(component => {\n//         // if (component.ncomponentcode !== null && typeof component.ncomponentcode === \"object\") {\n//         //     component.ncomponentcode = component.ncomponentcode.value;\n//         // }\n//         // component['jsondata']['ssubsamplename'] = component['ssubsamplename'] ? component['ssubsamplename'] : \"\"\n//         // component['jsondata']['ssampleqty'] = component['ssampleqty'] ? component['ssampleqty'] : \"\"\n//         // component['jsondata']['nunitcode'] = { value: component.nunitcode, label: component.sunitname };\n//         // component['jsondata']['scomments'] = component['scomments'] ? component['scomments'] : \"\"\n//         return component;\n//     });\n//     return Components;\n// }\n\nexport function getRegistrationSubSample(selectedRecord, templateList, userInfo, defaulttimezone, preRegPopUp, specBasedComponent, selectedSpec) {\n  let sampleRegistration = {};\n  let dateList = []; // let dataGridList={}\n  // sampleRegistration[\"ntemplatemanipulationcode\"] = selectedSpec.ntemplatemanipulationcode;\n  // sampleRegistration[\"nallottedspeccode\"] = selectedSpec.nallottedspeccode.value;\n\n  sampleRegistration[\"jsondata\"] = {};\n  sampleRegistration[\"jsonuidata\"] = {};\n  templateList && templateList.map(row => {\n    return row.children.map(column => {\n      return column.children.map(component => {\n        if (component.hasOwnProperty(\"children\")) {\n          //  let componentrowlabel = ''\n          // let componentrowvalue = ''\n          return component.children.map(componentrow => {\n            if (componentrow.inputtype === \"combo\") {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                value: selectedRecord[componentrow.label].value,\n                label: selectedRecord[componentrow.label].label\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\"; // if (componentrow.mandatory || selectedRecord[componentrow.label]) {\n              //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n              //     componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label].label\n              // }\n            } else if (componentrow.inputtype === \"date\") {\n              if (componentrow.mandatory) {\n                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              }\n\n              if (componentrow.timezone) {\n                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                  value: selectedRecord[`tz${componentrow.label}`].value,\n                  label: selectedRecord[`tz${componentrow.label}`].label\n                } : defaulttimezone ? defaulttimezone : -1;\n                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`];\n              }\n\n              dateList.push(componentrow.label);\n            } else {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]; // if (selectedRecord[componentrow.label]) {\n              //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n              //     componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label]\n              // }\n            }\n\n            return sampleRegistration;\n          }); //  sampleRegistration[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\n        } else {\n          if (component.inputtype === \"combo\") {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n              value: selectedRecord[component.label].value,\n              label: selectedRecord[component.label].label\n            } : -1;\n            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n          } else if (component.inputtype === \"date\") {\n            if (component.mandatory) {\n              sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            }\n\n            if (component.timezone) {\n              sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                value: selectedRecord[`tz${component.label}`].value,\n                label: selectedRecord[`tz${component.label}`].label\n              } : defaulttimezone ? defaulttimezone : -1;\n              sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`];\n            }\n\n            dateList.push(component.label);\n          } else {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n          }\n\n          return sampleRegistration;\n        }\n      });\n    });\n  });\n\n  if (preRegPopUp) {\n    sampleRegistration[\"nallottedspeccode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"].value : -1;\n\n    if (specBasedComponent) {\n      sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\n      sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"];\n      sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\n      sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\n    } else {\n      sampleRegistration[\"nspecsampletypecode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\n    }\n  }\n\n  const param = {\n    sampleRegistration,\n    dateList\n  };\n  return param;\n}\nexport function checkTestPresent(Test, Samples) {\n  const filterArray = Samples.filter(function (x) {\n    return !Test.some(function (y) {\n      return x[\"npreregno\"] === y[\"npreregno\"] && y[\"ntransactionstatus\"] !== transactionStatus.REJECT && y[\"ntransactionstatus\"] !== transactionStatus.CANCELLED;\n    });\n  });\n  return filterArray.length > 0 ? false : true;\n} // //added by perumalraj on 23/12/2020\n// //compare two arrays of object and filter the record which are not present in the second array and vice versa\n// export function filterStatusBasedOnTwoArrays(firstArray, secondArray, PrimaryKey) {\n//     const filterArray = firstArray.filter(function (x) {\n//         return secondArray.some(function (y) {\n//             return x[PrimaryKey] === y[PrimaryKey]\n//         })\n//     });\n//     return filterArray;\n// }\n\nexport function getRegistrationRoutine(selectedRecord) {\n  let sampleRegistrationRoutine = {};\n  sampleRegistrationRoutine[\"nclientcode\"] = selectedRecord.nclientcode ? selectedRecord.nclientcode.value : -1;\n  sampleRegistrationRoutine[\"nmanufcode\"] = selectedRecord.nmanufcode ? selectedRecord.nmanufcode.value : -1;\n  sampleRegistrationRoutine[\"nsuppliercode\"] = selectedRecord.nsuppliercode ? selectedRecord.nsuppliercode.value : -1;\n  sampleRegistrationRoutine[\"ssamplecondition\"] = selectedRecord.ssamplecondition ? selectedRecord.ssamplecondition : '';\n  sampleRegistrationRoutine[\"nstorageconditioncode\"] = selectedRecord.nstorageconditioncode ? selectedRecord.nstorageconditioncode.value : -1;\n  sampleRegistrationRoutine[\"dreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\n  sampleRegistrationRoutine[\"sreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\n  sampleRegistrationRoutine[\"ntzdreceivedate\"] = selectedRecord.ntzdreceivedate ? selectedRecord.ntzdreceivedate.value : -1;\n  sampleRegistrationRoutine[\"stzdreceivedate\"] = selectedRecord.stzdreceivedate ? selectedRecord.stzdreceivedate.label : -1;\n  sampleRegistrationRoutine[\"ncontainertypecode\"] = selectedRecord.ncontainertypecode ? selectedRecord.ncontainertypecode.value : -1;\n  sampleRegistrationRoutine[\"sourfile\"] = selectedRecord.sourfile ? selectedRecord.sourfile : '';\n  sampleRegistrationRoutine[\"sbatchno\"] = selectedRecord.sbatchno ? selectedRecord.sbatchno : '';\n  sampleRegistrationRoutine[\"slotno\"] = selectedRecord.slotno ? selectedRecord.slotno : '';\n  sampleRegistrationRoutine[\"ndisposition\"] = selectedRecord.ndisposition ? selectedRecord.ndisposition.value : -1;\n  sampleRegistrationRoutine[\"stotalqty\"] = selectedRecord.stotalqty ? selectedRecord.stotalqty : '0';\n  sampleRegistrationRoutine[\"ntotalunitcode\"] = selectedRecord.ntotalunitcode ? selectedRecord.ntotalunitcode.value : -1;\n  sampleRegistrationRoutine[\"npriority\"] = selectedRecord.npriority ? selectedRecord.npriority.value : -1;\n  sampleRegistrationRoutine[\"sdeadline\"] = selectedRecord.sdeadline ? selectedRecord.sdeadline : '0';\n  sampleRegistrationRoutine[\"nperiodconfigcode\"] = selectedRecord.nperiodconfigcode ? selectedRecord.nperiodconfigcode.value : -1;\n  sampleRegistrationRoutine[\"sremarks\"] = selectedRecord.sremarks ? selectedRecord.sremarks : null;\n  sampleRegistrationRoutine[\"sreportremarks\"] = selectedRecord.sreportremarks ? selectedRecord.sreportremarks : null;\n  sampleRegistrationRoutine[\"sdeviationcomments\"] = selectedRecord.sdeviationcomments ? selectedRecord.sdeviationcomments : null;\n  return sampleRegistrationRoutine;\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/registration/RegistrationValidation.jsx"],"names":["intl","convertDateTimetoStringDBFormat","formatInputDate","transactionStatus","fnCheckBatchComponentMandatory","Components","i","length","smanuflotno","formatMessage","id","scomponentname","nnoofcontainer","dreceiveddate","fnCheckBatchProtocolComponentMandatory","checkDuplicateComponentandManufLot","copiedArrays","DuplicateComponent","bReturnFlag","map","component","forEach","componentArray","slno","push","TestListManipulation","Test","ArrayList","SubSample","specBasedComponent","nneedsubsample","selectedSpec","nallottedspeccode","item","nspecsampletypecode","getRegistration","masterData","selectedRecord","templateList","userInfo","defaulttimezone","operation","comboComponents","sampleRegistration","dateList","RealSampleTypeValue","nsampletypecode","RealRegTypeValue","nregtypecode","RealRegSubTypeValue","nregsubtypecode","RealDesignTemplateMappingValue","ndesigntemplatemappingcode","nregsubtypeversioncode","selectedSample","ntemplatemanipulationcode","value","findIndex","x","name","row","children","column","hasOwnProperty","componentrow","inputtype","label","mandatory","Date","loadcurrentdate","timezone","param","getRegistrationSubSample","preRegPopUp","checkTestPresent","Samples","filterArray","filter","some","y","REJECT","CANCELLED","getRegistrationRoutine","sampleRegistrationRoutine","nclientcode","nmanufcode","nsuppliercode","ssamplecondition","nstorageconditioncode","ntzdreceivedate","stzdreceivedate","ncontainertypecode","sourfile","sbatchno","slotno","ndisposition","stotalqty","ntotalunitcode","npriority","sdeadline","nperiodconfigcode","sremarks","sreportremarks","sdeviationcomments"],"mappings":"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","sourcesContent":["\r\nimport { intl } from '../../components/App';\r\nimport {convertDateTimetoStringDBFormat, formatInputDate } from '../../components/CommonScript';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nexport function fnCheckBatchComponentMandatory(Components) {\r\n    // Components.map(component => {\r\n    for (var i = 0; i < Components.length; i++) {\r\n        if ((\r\n            Components[i].smanuflotno).length <= 0) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR ' + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n\r\n        } else if (Components[i].nnoofcontainer && (Components[i].nnoofcontainer).length <= 0) {\r\n            // alert('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERNOOFCONTFOR\" }) + Components[i].scomponentname);\r\n            // return ('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\r\n        } else if (Components[i].dreceiveddate === null) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n            // return ('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function fnCheckBatchProtocolComponentMandatory(Components) {\r\n    //Components.map(component => {\r\n    for (var i = 0; i < Components.length; i++) {\r\n        if ((Components[i].smanuflotno).length <= 0) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR ' + {} + component.scomponentname);\r\n            //return (intl.formatMessage({ id: 'IDS_ENTERMANUFLOTNOFOR ' }) + {} + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n        } else if (Components[i].dreceiveddate === null) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR' + component.scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n        }\r\n        //return null;\r\n        //});\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function checkDuplicateComponentandManufLot(Components) {\r\n    let copiedArrays = [...Components];\r\n    let DuplicateComponent = [];\r\n    let bReturnFlag = true;\r\n    Components.map(component => {\r\n        copiedArrays.forEach(componentArray => {\r\n            (component.slno !== componentArray.slno && component.smanuflotno === componentArray.smanuflotno &&\r\n                component.scomponentname === componentArray.scomponentname) && DuplicateComponent.push(component);\r\n        })\r\n        return null;\r\n    });\r\n    if (DuplicateComponent.length > 0) {\r\n        let smanuflotno = DuplicateComponent[0].smanuflotno;\r\n        let scomponentname = DuplicateComponent[0].scomponentname;\r\n        // Alert.show(resourceManager.getString('LocalizedStrings', 'IDS_DUPLICATEMANFNO') + \" \" + smanuflotno + \" for \" + scomponentname, resourceManager.getString('LocalizedStrings', 'IDS_WARNING'));\r\n        bReturnFlag = intl.formatMessage({ id: 'IDS_DUPLICATEMANFNO' }) + \" \" + smanuflotno + \" \" + intl.formatMessage({ id: 'IDS_FOR' }) + \" \" + scomponentname;\r\n    }\r\n    return bReturnFlag;\r\n}\r\nexport function TestListManipulation(Components, Test) {\r\n    let ArrayList = [];\r\n    Components.map(component => {\r\n        return ArrayList = Test && Test[component.slno] ? [...ArrayList, ...Test[component.slno]] : ArrayList;\r\n    });\r\n\r\n    //    ArrayList.map(item=>{\r\n    //        item['jsondata']={}\r\n    //       // if(item==='nsectioncode'||item==='nmethodcode'){\r\n    //         item['jsondata']['nsectioncode']={value:item['nsectioncode'],label:item['ssectionname']}\r\n    //         item['jsondata']['nmethodcode']={value:item['nmethodcode'],label:item['smethodname']}\r\n    //         item['jsondata']['ninstrumentcatcode']={value:item['ninstrumentcatcode'],label:item['sinstrumentcatname']}\r\n    //         item['jsondata']['ntestcode']=item['ntestcode']\r\n    //         item['jsondata']['ncost']=item['ncost']\r\n    //       // }\r\n    //    })\r\n    return ArrayList ? ArrayList : [];\r\n}\r\n\r\nexport function SubSample(Components, specBasedComponent,nneedsubsample,selectedSpec) {\r\n    //  let ArrayList = [];\r\n    if(nneedsubsample){\r\n    if (specBasedComponent) {\r\n        Components.map(component => {\r\n            // if(component===\"ncomponentcode\"){\r\n         return  component[\"ncomponentcode\"] \r\n            // }\r\n        });\r\n        return Components;\r\n    } else {\r\n        Components.map(component => {\r\n            // if(component===\"ncomponentcode\"){\r\n            return component[\"ncomponentcode\"] = -1;\r\n            // }\r\n        });\r\n        return Components;\r\n    }\r\n    }else{\r\n        Components.map(component => {\r\n            // if(component===\"ncomponentcode\"){\r\n                component[\"ncomponentcode\"] = -1\r\n                component[\"nspecsampletypecode\"] =selectedSpec.nallottedspeccode.item.nspecsampletypecode\r\n            return component;\r\n            // }\r\n        });\r\n        return Components;\r\n    }\r\n}\r\n\r\nexport function getRegistration(masterData, selectedRecord, selectedSpec,\r\n    templateList, userInfo, defaulttimezone, operation,comboComponents) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n    sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue.nsampletypecode;\r\n    sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue.nregtypecode;\r\n    sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegSubTypeValue.nregsubtypecode;\r\n    sampleRegistration[\"ndesigntemplatemappingcode\"] = masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n    sampleRegistration[\"nregsubtypeversioncode\"] = masterData.RealRegSubTypeValue.nregsubtypeversioncode;\r\n    sampleRegistration[\"ntemplatemanipulationcode\"] = operation==='update'?masterData.selectedSample.ntemplatemanipulationcode:selectedSpec.ntemplatemanipulationcode;\r\n    sampleRegistration[\"nallottedspeccode\"] =operation==='update'?masterData.selectedSample.nallottedspeccode:selectedSpec.nallottedspeccode.value;\r\n    \r\n    \r\n    if(masterData.RealSampleTypeValue.nsampletypecode===1){\r\n\r\n        sampleRegistration[\"nproductcatcode\"] =selectedRecord[comboComponents[comboComponents.findIndex(x=>x.name==='Product Category')]['label']] ? \r\n        selectedRecord[comboComponents[comboComponents.findIndex(x=>x.name==='Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x=>x.name==='Product')]['label']] ? \r\n        selectedRecord[comboComponents[comboComponents.findIndex(x=>x.name==='Product')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"]=-1\r\n        sampleRegistration[\"ninstrumentcode\"]=-1\r\n        sampleRegistration[\"nmaterialcatcode\"]=-1\r\n        sampleRegistration[\"nmaterialcode\"]=-1\r\n    }else if(masterData.RealSampleTypeValue.nsampletypecode===2){\r\n        sampleRegistration[\"ninstrumentcatcode\"] =selectedRecord[comboComponents[comboComponents.findIndex(x=>x.name==='Instrument Category')]['label']] ? \r\n        selectedRecord[comboComponents[comboComponents.findIndex(x=>x.name==='Instrument Category')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x=>x.name==='Instrument')]['label']] ? \r\n        selectedRecord[comboComponents[comboComponents.findIndex(x=>x.name==='Instrument')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"]=-1\r\n        sampleRegistration[\"nproductcode\"]=-1\r\n        sampleRegistration[\"nmaterialcatcode\"]=-1\r\n        sampleRegistration[\"nmaterialcode\"]=-1\r\n    }\r\n    else if(masterData.RealSampleTypeValue.nsampletypecode===3){\r\n        sampleRegistration[\"nmaterialcatcode\"] =selectedRecord[comboComponents[comboComponents.findIndex(x=>x.name==='Material Category')]['label']] ? \r\n        selectedRecord[comboComponents[comboComponents.findIndex(x=>x.name==='Material Category')]['label']].value : -1;\r\n        sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x=>x.name==='Material')]['label']] ? \r\n        selectedRecord[comboComponents[comboComponents.findIndex(x=>x.name==='Material')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"]=-1\r\n        sampleRegistration[\"nproductcode\"]=-1\r\n        sampleRegistration[\"ninstrumentcatcode\"]=-1\r\n        sampleRegistration[\"ninstrumentcode\"]=-1\r\n    }\r\n    \r\n    sampleRegistration[\"jsondata\"] = {}\r\n    sampleRegistration[\"jsonuidata\"] = {}\r\n\r\n\r\n    \r\n    templateList && templateList.map(row => {\r\n      return  row.children.map(column => {\r\n           return column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                   return component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                          //  if(componentrow.recordbasedreadonly)\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                { value: selectedRecord[componentrow.label].value, label: selectedRecord[componentrow.label].label } : -1\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\"\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\" : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n\r\n                                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`]\r\n                            }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n\r\n                        else {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                        }\r\n                    })\r\n                    return sampleRegistration;\r\n                   \r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\") {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            { value: selectedRecord[component.label].value, label: selectedRecord[component.label].label } : -1\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\"\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\" : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`]\r\n                        }\r\n                        dateList.push(component.label)\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                    }\r\n                   return sampleRegistration;\r\n                }\r\n            }\r\n            )\r\n        })\r\n    })\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}\r\n// export function getComponentListfromUnwantedAttr(Components) {\r\n//     Components.map(component => {\r\n//         // if (component.ncomponentcode !== null && typeof component.ncomponentcode === \"object\") {\r\n//         //     component.ncomponentcode = component.ncomponentcode.value;\r\n//         // }\r\n\r\n//         // component['jsondata']['ssubsamplename'] = component['ssubsamplename'] ? component['ssubsamplename'] : \"\"\r\n//         // component['jsondata']['ssampleqty'] = component['ssampleqty'] ? component['ssampleqty'] : \"\"\r\n//         // component['jsondata']['nunitcode'] = { value: component.nunitcode, label: component.sunitname };\r\n//         // component['jsondata']['scomments'] = component['scomments'] ? component['scomments'] : \"\"\r\n\r\n\r\n//         return component;\r\n//     });\r\n//     return Components;\r\n// }\r\n\r\n\r\nexport function getRegistrationSubSample(selectedRecord,\r\n    templateList, userInfo, defaulttimezone,preRegPopUp,specBasedComponent,selectedSpec) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n   // let dataGridList={}\r\n    // sampleRegistration[\"ntemplatemanipulationcode\"] = selectedSpec.ntemplatemanipulationcode;\r\n    // sampleRegistration[\"nallottedspeccode\"] = selectedSpec.nallottedspeccode.value;\r\n \r\n    sampleRegistration[\"jsondata\"] = {}\r\n    sampleRegistration[\"jsonuidata\"] = {}\r\n    templateList && templateList.map(row => {\r\n       return row.children.map(column => {\r\n           return column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                  //  let componentrowlabel = ''\r\n                   // let componentrowvalue = ''\r\n                  return  component.children.map(componentrow => {\r\n\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                { value: selectedRecord[componentrow.label].value, label: selectedRecord[componentrow.label].label } : -1\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label  : \"\"\r\n                            // if (componentrow.mandatory || selectedRecord[componentrow.label]) {\r\n                            //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n                            //     componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label].label\r\n                            // }\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\";\r\n\r\n                                        sampleRegistration[\"jsonuidata\"][componentrow.label] =sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\" : \"\";\r\n\r\n                                        sampleRegistration[\"jsonuidata\"][componentrow.label] =sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n\r\n                                    sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] =sampleRegistration[\"jsondata\"][`tz${componentrow.label}`]\r\n                            }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n\r\n                        else {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] =sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            // if (selectedRecord[componentrow.label]) {\r\n                            //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n                            //     componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label]\r\n                            // }\r\n                        }\r\n                        return sampleRegistration;\r\n                    })\r\n                   \r\n                  //  sampleRegistration[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\") {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            { value: selectedRecord[component.label].value, label: selectedRecord[component.label].label } : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label  : \"\"\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label] \r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\" : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label] \r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n\r\n                                sampleRegistration[\"jsonuidata\"][`tz${component.label}`]  = sampleRegistration[\"jsondata\"][`tz${component.label}`] \r\n                        }\r\n                        dateList.push(component.label)\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label] \r\n                    }\r\n                    return sampleRegistration;\r\n                }\r\n\r\n            }\r\n            )\r\n        })\r\n    })\r\n    if(preRegPopUp){\r\n        sampleRegistration[\"nallottedspeccode\"] = selectedSpec[\"nallottedspeccode\"] ?selectedSpec[\"nallottedspeccode\"].value : -1;\r\n        if(specBasedComponent){\r\n            sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\r\n            sampleRegistration[\"jsonuidata\"][\"scomponentname\"]= sampleRegistration[\"scomponentname\"]\r\n\r\n            sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\r\n            sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ?selectedRecord[\"nspecsampletypecode\"]  : -1;\r\n        }else{\r\n            sampleRegistration[\"nspecsampletypecode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\r\n        }\r\n    }\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}\r\nexport function checkTestPresent(Test, Samples) {\r\n\r\n    const filterArray = Samples.filter(function (x) {\r\n        return !Test.some(function (y) {\r\n            return x[\"npreregno\"] === y[\"npreregno\"] && (y[\"ntransactionstatus\"] !== transactionStatus.REJECT && y[\"ntransactionstatus\"] !== transactionStatus.CANCELLED)\r\n        });\r\n    });\r\n    return filterArray.length > 0 ? false : true\r\n}\r\n\r\n// //added by perumalraj on 23/12/2020\r\n// //compare two arrays of object and filter the record which are not present in the second array and vice versa\r\n// export function filterStatusBasedOnTwoArrays(firstArray, secondArray, PrimaryKey) {\r\n\r\n//     const filterArray = firstArray.filter(function (x) {\r\n//         return secondArray.some(function (y) {\r\n//             return x[PrimaryKey] === y[PrimaryKey]\r\n//         })\r\n//     });\r\n//     return filterArray;\r\n// }\r\n\r\nexport function getRegistrationRoutine(selectedRecord) {\r\n\r\n    let sampleRegistrationRoutine = {};\r\n    sampleRegistrationRoutine[\"nclientcode\"] = selectedRecord.nclientcode ? selectedRecord.nclientcode.value : -1;\r\n    sampleRegistrationRoutine[\"nmanufcode\"] = selectedRecord.nmanufcode ? selectedRecord.nmanufcode.value : -1;\r\n    sampleRegistrationRoutine[\"nsuppliercode\"] = selectedRecord.nsuppliercode ? selectedRecord.nsuppliercode.value : -1;\r\n    sampleRegistrationRoutine[\"ssamplecondition\"] = selectedRecord.ssamplecondition ? selectedRecord.ssamplecondition : '';\r\n    sampleRegistrationRoutine[\"nstorageconditioncode\"] = selectedRecord.nstorageconditioncode ? selectedRecord.nstorageconditioncode.value : -1;\r\n    sampleRegistrationRoutine[\"dreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\r\n    sampleRegistrationRoutine[\"sreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\r\n    sampleRegistrationRoutine[\"ntzdreceivedate\"] = selectedRecord.ntzdreceivedate ? selectedRecord.ntzdreceivedate.value : -1;\r\n    sampleRegistrationRoutine[\"stzdreceivedate\"] = selectedRecord.stzdreceivedate ? selectedRecord.stzdreceivedate.label : -1;\r\n    sampleRegistrationRoutine[\"ncontainertypecode\"] = selectedRecord.ncontainertypecode ? selectedRecord.ncontainertypecode.value : -1;\r\n    sampleRegistrationRoutine[\"sourfile\"] = selectedRecord.sourfile ? selectedRecord.sourfile : '';\r\n    sampleRegistrationRoutine[\"sbatchno\"] = selectedRecord.sbatchno ? selectedRecord.sbatchno : '';\r\n    sampleRegistrationRoutine[\"slotno\"] = selectedRecord.slotno ? selectedRecord.slotno : '';\r\n    sampleRegistrationRoutine[\"ndisposition\"] = selectedRecord.ndisposition ? selectedRecord.ndisposition.value : -1;\r\n    sampleRegistrationRoutine[\"stotalqty\"] = selectedRecord.stotalqty ? selectedRecord.stotalqty : '0';\r\n    sampleRegistrationRoutine[\"ntotalunitcode\"] = selectedRecord.ntotalunitcode ? selectedRecord.ntotalunitcode.value : -1;\r\n    sampleRegistrationRoutine[\"npriority\"] = selectedRecord.npriority ? selectedRecord.npriority.value : -1;\r\n    sampleRegistrationRoutine[\"sdeadline\"] = selectedRecord.sdeadline ? selectedRecord.sdeadline : '0';\r\n    sampleRegistrationRoutine[\"nperiodconfigcode\"] = selectedRecord.nperiodconfigcode ? selectedRecord.nperiodconfigcode.value : -1;\r\n    sampleRegistrationRoutine[\"sremarks\"] = selectedRecord.sremarks ? selectedRecord.sremarks : null;\r\n    sampleRegistrationRoutine[\"sreportremarks\"] = selectedRecord.sreportremarks ? selectedRecord.sreportremarks : null;\r\n    sampleRegistrationRoutine[\"sdeviationcomments\"] = selectedRecord.sdeviationcomments ? selectedRecord.sdeviationcomments : null;\r\n\r\n    return sampleRegistrationRoutine;\r\n}"]},"metadata":{},"sourceType":"module"}