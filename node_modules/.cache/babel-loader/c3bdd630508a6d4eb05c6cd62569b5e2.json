{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\configurationmaster\\\\approvalconfig\\\\UserRoleAccordion.js\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Row, Col, FormGroup, FormLabel } from 'react-bootstrap';\nimport CustomTab from '../../../components/custom-tabs/custom-tabs.component'; //import { ReadOnlyText } from '../../../components/login/login.styles';\n\nimport { ReadOnlyText } from '../../../components/App.styles';\n\nconst UserRoleAccordion = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_APPROVALSTATUS\",\n    message: \"Approval Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 36\n    }\n  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }\n  }, props.role.sapprovalstatus))), props.role.schecklistname !== 'NA' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_CHECKLIST\",\n    message: \"Checklist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 33\n    }\n  }, props.role.schecklistname))), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_CHECKLISTVERSION\",\n    message: \"Checklist Version\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }, props.role.schecklistversionname)))) : \"\", props.approvalSubTypeValue && props.approvalSubTypeValue !== undefined && props.approvalSubTypeValue.value === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_CORRECTION\",\n    message: \"Correction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }, props.role.scorrectionneed)))) : \"\", props.roleConfig ? props.roleConfig.map(item => item.stransdisplaystatus && /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: item.stransdisplaystatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 40\n    }\n  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, props.role[`${item.ntranscode}`])))) : \"\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomTab, {\n    tabDetail: props.tabDetail,\n    onTabChange: props.onTabOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default injectIntl(UserRoleAccordion);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/configurationmaster/approvalconfig/UserRoleAccordion.js"],"names":["React","FormattedMessage","injectIntl","Row","Col","FormGroup","FormLabel","CustomTab","ReadOnlyText","UserRoleAccordion","props","role","sapprovalstatus","schecklistname","schecklistversionname","approvalSubTypeValue","undefined","value","scorrectionneed","roleConfig","map","item","stransdisplaystatus","ntranscode","tabDetail","onTabOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport CustomTab from '../../../components/custom-tabs/custom-tabs.component';\r\n//import { ReadOnlyText } from '../../../components/login/login.styles';\r\nimport { ReadOnlyText } from '../../../components/App.styles';\r\n\r\nconst UserRoleAccordion = (props) => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <FormLabel><FormattedMessage id={\"IDS_APPROVALSTATUS\"} message=\"Approval Status\" /></FormLabel>\r\n                        <ReadOnlyText>{props.role.sapprovalstatus}</ReadOnlyText>\r\n                    </FormGroup>\r\n                </Col>\r\n                {props.role.schecklistname !== 'NA' ?\r\n                    <>\r\n                        <Col md=\"6\">\r\n                            <FormGroup>\r\n                                <FormLabel><FormattedMessage id={\"IDS_CHECKLIST\"} message=\"Checklist\" /></FormLabel>\r\n                                <ReadOnlyText>{props.role.schecklistname}</ReadOnlyText>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <FormGroup>\r\n                                <FormLabel><FormattedMessage id={\"IDS_CHECKLISTVERSION\"} message=\"Checklist Version\" /></FormLabel>\r\n                                <ReadOnlyText>{props.role.schecklistversionname}</ReadOnlyText>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </>\r\n                    : \"\"}\r\n                {props.approvalSubTypeValue && props.approvalSubTypeValue !== undefined && props.approvalSubTypeValue.value === 1 ?\r\n                    <>\r\n                        <Col md=\"6\">\r\n                            <FormGroup>\r\n                                <FormLabel><FormattedMessage id={\"IDS_CORRECTION\"} message=\"Correction\" /></FormLabel>\r\n                                <ReadOnlyText>{props.role.scorrectionneed}</ReadOnlyText>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </>\r\n                    : \"\"}\r\n                {props.roleConfig ? props.roleConfig.map(item =>\r\n                    item.stransdisplaystatus &&\r\n                    <Col md=\"6\">\r\n                        <FormGroup>\r\n                            <FormLabel><FormattedMessage id={item.stransdisplaystatus} /></FormLabel>\r\n                            <ReadOnlyText>{props.role[`${item.ntranscode}`]}</ReadOnlyText>\r\n                        </FormGroup>\r\n                    </Col>\r\n                ) : \"\"}\r\n            </Row>\r\n            <Row>\r\n                <Col md={12} >\r\n                    <CustomTab tabDetail={props.tabDetail} onTabChange={props.onTabOnChange} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\nexport default injectIntl(UserRoleAccordion);\r\n"]},"metadata":{},"sourceType":"module"}