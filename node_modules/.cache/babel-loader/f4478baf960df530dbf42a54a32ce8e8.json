{"ast":null,"code":"import _slicedToArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import DataGrid from'../../components/data-grid/data-grid.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{ListWrapper}from'../../components/client-group.styles';import AddSampleProcessing from'../storagemanagement//AddSampleProcessing';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import{SampleCycle,transactionStatus}from'../../components/Enumeration';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{callService,crudMaster,updateStore,validateEsignCredential,getComboSampleProcessing,getBarcodeDataDetails,getSampleProcessType,getProcessduration,saveSampleProcessing,getActiveSampleProcessingById,getSampleProcessing,validateEsignCredentialSampleProcessing}from'../../actions';import{sortData,getControlMap,getStartOfDay,getEndOfDay,convertDateValuetoString,rearrangeDateFormat,constructOptionList,Lims_JSON_stringify,formatInputDate,showEsign}from'../../components/CommonScript';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var SampleProcessing=/*#__PURE__*/function(_React$Component){_inherits(SampleProcessing,_React$Component);var _super=_createSuper(SampleProcessing);function SampleProcessing(props){var _this;_classCallCheck(this,SampleProcessing);_this=_super.call(this,props);_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esignreason']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};if(_this.props.Login.operation==='update'){_this.props.validateEsignCredentialSampleProcessing(inputParam,\"openModal\");}else{_this.props.validateEsignCredential(inputParam,\"openModal\");}};_this.deleteRecord=function(deleteParam){var _inputData;var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:(_inputData={},_defineProperty(_inputData,_this.props.Login.inputParam.methodUrl.toLowerCase(),deleteParam.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_defineProperty(_inputData,\"fromDate\",fromDate),_defineProperty(_inputData,\"toDate\",toDate),_defineProperty(_inputData,\"nprojecttypecode\",_this.props.Login.masterData.selectedProjectType.value||-1),_defineProperty(_inputData,\"nsampleprocessingcode\",deleteParam.selectedRecord['nsampleprocessingcode']),_defineProperty(_inputData,\"sbarcodeid\",deleteParam.selectedRecord['sbarcodeid']),_inputData),operation:deleteParam.operation,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:deleteParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.onSaveClick=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord||{};var alertMessage;var sbarcodeid=_this.props.Login.masterData.barcodedata;//ALPD-5139--Vignesh R(24-12-2024)---added the collection tube type in datagrid\nvar checkCollectionTubeType=true;var checkSampleType=true;//ALPD-5139--Vignesh R(26-12-2024)---while updating this condition,this can't apply\nif(_this.props.Login.operation!=='update'){var jsonPrimaryKeyValue=_this.props.Login.masterData.jsonPrimaryKeyValue;if(jsonPrimaryKeyValue.nsamplecollectiontypecode){if(jsonPrimaryKeyValue.nsamplecollectiontypecode!==selectedRecord['nproductcode'].item.nsamplecollectiontypecode){checkSampleType=false;}}if(jsonPrimaryKeyValue.ncollectiontubetypecode){if(jsonPrimaryKeyValue.ncollectiontubetypecode!==selectedRecord['ncollectiontubetypecode'].value){checkCollectionTubeType=false;}}}if(checkSampleType){if(checkCollectionTubeType){if(selectedRecord[\"sbarcodeid\"]&&selectedRecord[\"sbarcodeid\"].length===parseInt(_this.props.Login.masterData.nbarcodelength&&_this.props.Login.masterData.nbarcodelength)){var invalidbarcode=selectedRecord[\"sbarcodeid\"].substring(1,2);if(parseInt(invalidbarcode)===SampleCycle.PROCESSING){if(sbarcodeid!=undefined&&sbarcodeid!=''){var date1;var date2;var diffenecemill;var differenceInMinutes;var flag=false;if(selectedRecord[\"dprocessenddate\"]!==undefined&&selectedRecord[\"dprocessenddate\"]!==\"\"&&selectedRecord[\"dprocessenddate\"]!==null){date1=new Date(formatInputDate(selectedRecord[\"dprocessstartdate\"],false));date2=new Date(formatInputDate(selectedRecord[\"dprocessenddate\"],false));diffenecemill=date2-date1;differenceInMinutes=diffenecemill/(1000*60);var nngracetimetime;var nprocesstime;nngracetimetime=parseInt(selectedRecord['ngracetime'])+parseInt(selectedRecord['nprocesstime']);nprocesstime=parseInt(selectedRecord['nprocesstime']);if(differenceInMinutes>nngracetimetime){if(selectedRecord[\"sdeviationcomments\"]===undefined||selectedRecord[\"sdeviationcomments\"]===\"\"){flag=true;alertMessage=\"IDS_DEVIATIONCOMMENTS\";}}else if(differenceInMinutes>nprocesstime){if(selectedRecord[\"scomments\"]===undefined||selectedRecord[\"scomments\"]===\"\"){flag=true;alertMessage=\"IDS_COMMENTS\";}}}if(!flag){var inputData={};inputData[\"sampleprocessing\"]={};if(_this.props.Login.operation===\"create\"){inputData[\"sampleprocessing\"][\"nsamplecollectiontypecode\"]=selectedRecord[\"nsamplecollectiontypecode\"]?selectedRecord[\"nsamplecollectiontypecode\"]:-1;inputData[\"sampleprocessing\"][\"nproductcode\"]=selectedRecord[\"nproductcode\"]?selectedRecord[\"nproductcode\"].value:-1;inputData[\"sampleprocessing\"][\"ncollectiontubetypecode\"]=selectedRecord[\"ncollectiontubetypecode\"]?selectedRecord[\"ncollectiontubetypecode\"].value:-1;inputData[\"sampleprocessing\"][\"jsondata\"]=Lims_JSON_stringify(JSON.stringify(_this.props.Login.masterData.barcodedata));var listProcessType=_toConsumableArray(_this.state.selectedRecord[\"processtype\"]);var removeIndex=listProcessType.findIndex(function(item){return item.value===parseInt(selectedRecord[\"nprocesstypecode\"].value);});if(removeIndex!==-1){listProcessType.splice(removeIndex,listProcessType.length);if(listProcessType.length>0){inputData=_objectSpread(_objectSpread({},inputData),{},{\"listOfnsampleprocesstypecode\":listProcessType.map(function(item){return item.item.nsampleprocesstypecode;}).join(','),\"nsampleprocesstypecode\":selectedRecord[\"nsampleprocesstypecode\"],\"nprocesstypelength\":listProcessType.length});}else{inputData=_objectSpread(_objectSpread({},inputData),{},{\"listOfnsampleprocesstypecode\":selectedRecord[\"nsampleprocesstypecode\"],\"nsampleprocesstypecode\":selectedRecord[\"nsampleprocesstypecode\"],\"isSingleProcesstype\":true,\"nprocesstypelength\":1});}}}inputData[\"sampleprocessing\"][\"nprojecttypecode\"]=_this.props.Login.masterData.selectedProjectType.value||transactionStatus.NA;if(_this.props.Login.operation===\"update\"){inputData[\"sampleprocessing\"][\"nsampleprocessingcode\"]=_this.props.Login.selectedId;}inputData[\"sampleprocessing\"][\"sbarcodeid\"]=selectedRecord[\"sbarcodeid\"]?selectedRecord[\"sbarcodeid\"]:-1;inputData[\"sampleprocessing\"][\"nsamplecollectiontypecode\"]=selectedRecord[\"nsamplecollectiontypecode\"]?selectedRecord[\"nsamplecollectiontypecode\"]:-1;inputData[\"sampleprocessing\"][\"scomments\"]=selectedRecord[\"scomments\"]&&selectedRecord[\"scomments\"]||\"\";inputData[\"sampleprocessing\"][\"sdeviationcomments\"]=selectedRecord[\"sdeviationcomments\"]&&selectedRecord[\"sdeviationcomments\"]||\"\";inputData[\"sampleprocessing\"][\"dprocessstartdate\"]=formatInputDate(selectedRecord[\"dprocessstartdate\"],false);inputData[\"sampleprocessing\"][\"ntzprocessstartdate\"]=selectedRecord[\"ntzprocessstartdate\"]&&selectedRecord[\"ntzprocessstartdate\"].value||transactionStatus.NA;inputData[\"sampleprocessing\"][\"noffsetdprocessstartdate\"]=selectedRecord[\"noffsetdprocessenddate\"]&&selectedRecord[\"noffsetdprocessenddate\"].value||transactionStatus.NA;inputData[\"sampleprocessing\"][\"nsampleprocesstypecode\"]=selectedRecord[\"nsampleprocesstypecode\"]?selectedRecord[\"nsampleprocesstypecode\"]:-1;inputData[\"sampleprocessing\"][\"noffsetdprocessenddate\"]=selectedRecord[\"noffsetdprocessenddate\"]&&selectedRecord[\"noffsetdprocessenddate\"].value||transactionStatus.NA;inputData[\"sampleprocessing\"][\"ntzprocessenddate\"]=selectedRecord[\"ntzprocessenddate\"]&&selectedRecord[\"ntzprocessenddate\"].value||transactionStatus.NA;if(selectedRecord[\"dprocessenddate\"]!==undefined&&selectedRecord[\"dprocessenddate\"]!==\"\"&&selectedRecord[\"dprocessenddate\"]!==null){inputData[\"sampleprocessing\"][\"dprocessenddate\"]=formatInputDate(selectedRecord[\"dprocessenddate\"],false);}var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;inputData[\"fromDate\"]=fromDate;inputData[\"toDate\"]=toDate;inputData[\"nprojecttypecode\"]=_this.props.Login.masterData.selectedProjectType.value||transactionStatus.NA;inputData[\"userinfo\"]=_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sformname:Lims_JSON_stringify(_this.props.Login.userInfo.sformname),smodulename:Lims_JSON_stringify(_this.props.Login.userInfo.smodulename)});var inputParam={nformcode:_this.props.Login.userInfo.nformcode,classUrl:\"storagesampleprocessing\",methodUrl:\"SampleProcessing\",inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,selectedRecord:_this.state.selectedRecord||{}};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.saveSampleProcessing(inputParam,masterData);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_ENTER\"})+\" \"+_this.props.intl.formatMessage({id:alertMessage}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_CLICKENTERTOJSONRECORD\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_INVALIDBARCODEID\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_INVALIDABARCODE\"//ALPD-4750 Changed IDS value to throw alert correctly by VISHAKH\n}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_INVALIDCOLLECTIONTUBETYPE\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_INVALIDSAMPLETYPE\"}));}};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};if(fieldName==='nprojecttypecode'){var inputData=[];var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;inputData[\"fromDate\"]=fromDate;inputData[\"toDate\"]=toDate;inputData={userinfo:_this.props.Login.userInfo,nprojecttypecode:parseInt(comboData.value),selectedProjectType:comboData,toDate:toDate,fromDate:fromDate};delete selectedRecord[\"nproductcode\"];delete selectedRecord[\"ncollectiontubetypecode\"];delete selectedRecord[\"nprocesstypecode\"];var masterData=_objectSpread({},_this.props.Login.masterData);var inputParam={masterData:masterData,inputData:inputData};_this.props.getSampleProcessing(inputParam);}/*  if (fieldName === \"nproductcode\") {\r\n              let inputData = [];\r\n              let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n              let fromDate = obj.fromDate;\r\n              let toDate = obj.toDate;\r\n              inputData[\"fromDate\"] = fromDate;\r\n              inputData[\"toDate\"] = toDate;\r\n              inputData = {\r\n                  userinfo: this.props.Login.userInfo,\r\n                  nprojecttypecode: this.props.Login.masterData.selectedProjectType.value,\r\n                  toDate: toDate,\r\n                  fromDate: fromDate\r\n              }\r\n              const masterData = { ...this.props.Login.masterData }\r\n              selectedRecord={...selectedRecord,\"nproductcode\":comboData}\r\n              const inputParam = { masterData, inputData,selectedRecord }\r\n              this.props.getCollectionTubeType(inputParam)\r\n          } else {*/if(fieldName===\"ncollectiontubetypecode\"&&selectedRecord['nproductcode']!==undefined){var _inputData2=[];var _obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var _fromDate=_obj.fromDate;var _toDate=_obj.toDate;_inputData2[\"fromDate\"]=_fromDate;_inputData2[\"toDate\"]=_toDate;_inputData2={userinfo:_this.props.Login.userInfo,nprojecttypecode:_this.props.Login.masterData.selectedProjectType.value,nproductcode:selectedRecord['nproductcode']&&selectedRecord['nproductcode'].value||-1,nsamplecollectiontypecode:selectedRecord['nsamplecollectiontypecode']&&selectedRecord['nsamplecollectiontypecode']||-1,ncollectiontubetypecode:parseInt(comboData.value),toDate:_toDate,fromDate:_fromDate};delete selectedRecord[\"ncollectiontubetypecode\"];delete selectedRecord[\"nprocesstypecode\"];var _masterData=_objectSpread({},_this.props.Login.masterData);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},_defineProperty({},fieldName,comboData));var _inputParam={masterData:_masterData,inputData:_inputData2,selectedRecord:selectedRecord};_this.props.getSampleProcessType(_inputParam);}else if(fieldName===\"nproductcode\"&&selectedRecord['ncollectiontubetypecode']!==undefined){var _objectSpread3;var _inputData3=[];var _obj2=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var _fromDate2=_obj2.fromDate;var _toDate2=_obj2.toDate;_inputData3[\"fromDate\"]=_fromDate2;_inputData3[\"toDate\"]=_toDate2;_inputData3={userinfo:_this.props.Login.userInfo,nprojecttypecode:_this.props.Login.masterData.selectedProjectType.value,nproductcode:parseInt(comboData.value),nsamplecollectiontypecode:parseInt(comboData.item.nsamplecollectiontypecode),ncollectiontubetypecode:selectedRecord['ncollectiontubetypecode']&&selectedRecord['ncollectiontubetypecode'].value||-1,toDate:_toDate2,fromDate:_fromDate2};delete selectedRecord[\"ncollectiontubetypecode\"];delete selectedRecord[\"nprocesstypecode\"];var _masterData2=_objectSpread({},_this.props.Login.masterData);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},(_objectSpread3={},_defineProperty(_objectSpread3,fieldName,comboData),_defineProperty(_objectSpread3,\"nsamplecollectiontypecode\",parseInt(comboData.item.nsamplecollectiontypecode)),_objectSpread3));var _inputParam2={masterData:_masterData2,inputData:_inputData3,selectedRecord:selectedRecord};_this.props.getSampleProcessType(_inputParam2);}else if(fieldName===\"nprocesstypecode\"){var _inputData4=[];var _obj3=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var _fromDate3=_obj3.fromDate;var _toDate3=_obj3.toDate;_inputData4[\"fromDate\"]=_fromDate3;_inputData4[\"toDate\"]=_toDate3;_inputData4={userinfo:_this.props.Login.userInfo,nprojecttypecode:_this.props.Login.masterData.selectedProjectType.value,nproductcode:selectedRecord['nproductcode']&&selectedRecord['nproductcode'].value||-1,ncollectiontubetypecode:selectedRecord['ncollectiontubetypecode']&&selectedRecord['ncollectiontubetypecode'].value,nsamplecollectiontypecode:selectedRecord['nsamplecollectiontypecode']&&selectedRecord['nsamplecollectiontypecode']||-1,nprocesstypecode:parseInt(comboData.value),toDate:_toDate3,fromDate:_fromDate3};var _masterData3=_objectSpread({},_this.props.Login.masterData);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{\"nprocesstypecode\":comboData});var _inputParam3={masterData:_masterData3,inputData:_inputData4,selectedRecord:selectedRecord};_this.props.getProcessduration(_inputParam3);}else{selectedRecord[fieldName]=comboData;if(fieldName===\"nproductcode\"){selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{\"nsamplecollectiontypecode\":comboData.item.nsamplecollectiontypecode});}_this.setState({selectedRecord:selectedRecord});}//  }\n};_this.handleDateChangeSlidout=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});/* if (selectedRecord[\"sbarcodeid\"] !== undefined) {\r\n              let inputData = {};\r\n              inputData[\"sampleprocessing\"] = {};\r\n            if (dateName === \"dprocessenddate\") {\r\n                  inputData[\"sampleprocessing\"][\"dprocessenddate\"] = formatInputDate(dateValue, false);\r\n                  inputData[\"sampleprocessing\"][\"nsampleprocesstypecode\"] = selectedRecord[\"nsampleprocesstypecode\"] ? selectedRecord[\"nsampleprocesstypecode\"] : -1;\r\n                  inputData[\"sampleprocessing\"][\"sbarcodeid\"] = selectedRecord[\"sbarcodeid\"] ? selectedRecord[\"sbarcodeid\"] : -1;\r\n                  inputData[\"userinfo\"] = {\r\n                      ...this.props.Login.userInfo,\r\n                      sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                      smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename)\r\n                  }\r\n                  selectedRecord = { ...selectedRecord, [dateName]: dateValue }\r\n  \r\n                  const inputParam = {\r\n                      nformcode: this.props.Login.userInfo.nformcode,\r\n                      inputData: inputData,\r\n                      operation: this.props.Login.operation,\r\n                      selectedRecord: selectedRecord,\r\n                      masterData: this.props.Login.masterData\r\n  \r\n                  }\r\n                  this.props.getCommentsDeviation(inputParam)\r\n              }\r\n              else {\r\n  \r\n                \r\n              }\r\n          } else {\r\n  \r\n              toast.warn(this.props.intl.formatMessage({\r\n                  id: \"IDS_ENTER\",\r\n              }) +\r\n                  this.props.intl.formatMessage({\r\n                      id: \"IDS_BARCODEID\",\r\n                  })\r\n              );\r\n  \r\n          }\r\n  */};_this.autoSaveGetDataProcessing=function(event){var selectedRecord=_this.state.selectedRecord||{};event.stopPropagation();//ALPD-4701--Vignesh R(21-08-2024)\nif(event.keyCode===13){if(selectedRecord['ncollectiontubetypecode']&&selectedRecord['nproductcode']&&selectedRecord['nprocesstypecode']){if(parseInt(selectedRecord[\"sbarcodeid\"]&&selectedRecord[\"sbarcodeid\"].length)===parseInt(_this.props.Login.masterData.nbarcodelength&&_this.props.Login.masterData.nbarcodelength)&&event.keyCode===13){var invalidbarcode=event.target.value.substring(1,2);if(parseInt(invalidbarcode)===SampleCycle.PROCESSING){var checkCollectionTubeType=false;var checkSampleType=false;//if(checkCollectionTubeType){\nvar inputParam={nprojecttypecode:_this.props.Login.masterData.selectedProjectType.value,spositionvalue:event.target.value,userinfo:_this.props.Login.userInfo,nbarcodeLength:parseInt(_this.props.Login.masterData.nbarcodelength&&_this.props.Login.masterData.nbarcodelength),jsondata:{},masterData:_this.props.Login.masterData,selectedRecord:selectedRecord||{}};_this.props.getBarcodeDataDetails(inputParam);//}\n// else {\n//     toast.warn(\n//         this.props.intl.formatMessage({\n//             id: \"IDS_INVALIDCOLLECTIONTUBETYPE\",\n//         })\n//     );\n// }\n}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_INVALIDBARCODEID\"}));}}}else{event.stopPropagation();if(selectedRecord['nproductcode']===undefined){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECT\"})+_this.props.intl.formatMessage({id:\"IDS_SAMPLETYPE\"}));}else if(selectedRecord['ncollectiontubetypecode']===undefined){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECT\"})+_this.props.intl.formatMessage({id:\"IDS_COLLECTIONTUBETYPENAME\"}));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECT\"})+_this.props.intl.formatMessage({id:\"IDS_PROCESSTYPENAME\"}));}}}};_this.onInputOnChange=function(event,fieldname){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}if(dateName==='todate'){selectedRecord[dateName]=dateValue;}else{selectedRecord[dateName]=dateValue;}selectedRecord[dateName]=dateValue;// this.setState({ selectedRecord });\n// this.reloadData(selectedRecord, true);\nvar dateObj={};var obj=convertDateValuetoString(selectedRecord['fromdate']&&selectedRecord['fromdate']||_this.props.Login.masterData.FromDate,selectedRecord['todate']&&selectedRecord['todate']||_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:fromDate,toDate:toDate,nprojecttypecode:_this.props.Login.masterData.selectedProjectType&&_this.props.Login.masterData.selectedProjectType.value||-1}};_this.props.getSampleProcessing(inputParam);};_this.reloadData=function(){//this.searchRef.current.value = \"\";\nvar fromDate=_this.props.Login.masterData.FromDate;var toDate=_this.props.Login.masterData.ToDate;var obj=convertDateValuetoString(fromDate,toDate,_this.props.Login.userInfo,true);var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:obj.fromDate,toDate:obj.toDate,\"nprojecttypecode\":_this.props.Login.masterData.selectedProjectType.value||-1// currentdate: isDateChange === true ? null : formatInputDate(new Date(), true)\n},classUrl:'storagesampleprocessing',methodUrl:\"SampleProcessing\",displayName:_this.props.Login.inputParam.displayName,userInfo:_this.props.Login.userInfo,selectedRecord:_this.state.selectedRecord||{}};_this.props.getSampleProcessing(inputParam);};_this.searchRef=React.createRef();var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,userRoleControlRights:[],controlMap:new Map(),showSaveContinue:true};return _this;}_createClass(SampleProcessing,[{key:\"gridfillingColumn\",value:function gridfillingColumn(data,barcodeFields){//  const tempArray = [];\nvar temparray1=[{idsName:'IDS_BARCODEID',dataField:'sbarcodeid',width:'250px',controlType:'textinput'},{idsName:'IDS_SAMPLETYPE',dataField:'sproductname',width:'250px',controlType:'selectbox'},{idsName:'IDS_COLLECTIONTUBETYPENAME',dataField:'stubename',width:'250px',controlType:'selectbox'},{idsName:'IDS_PROCESSTYPENAME',dataField:'sprocesstypename',width:'250px',controlType:'selectbox'},{idsName:'IDS_PROCESSDURATION',dataField:'sprocessduration',width:'250px',controlType:'selectbox'},{idsName:'IDS_GRACEDURATION',dataField:'sgraceduration',width:'250px',controlType:'selectbox'},{idsName:'IDS_STARTDATEANDTIME',dataField:'sprocessstartdate',width:'250px'},{idsName:'IDS_ENDDATEANDTIME',dataField:'sprocessenddate',width:'250px'}];this.mandatoryColumns=[{\"mandatory\":true,\"idsName\":'IDS_SAMPLETYPE',dataField:'nproductcode',width:'250px',mandatoryLabel:'IDS_SELECT',controlType:'selectbox'},{\"mandatory\":true,\"idsName\":'IDS_COLLECTIONTUBETYPENAME',dataField:'ncollectiontubetypecode',width:'250px',mandatoryLabel:'IDS_SELECT',controlType:'selectbox'},{\"mandatory\":true,\"idsName\":'IDS_PROCESSTYPENAME',dataField:'nprocesstypecode',width:'250px',mandatoryLabel:'IDS_SELECT',controlType:'selectbox'},{\"mandatory\":true,\"idsName\":\"IDS_BARCODEID\",\"dataField\":\"sbarcodeid\",\"width\":\"250px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textinput\"}];this.mandatoryColumns.push(!(this.props.Login.masterData.sprocessstartdatesecondtime&&this.props.Login.masterData.sprocessstartdatesecondtime)?{\"mandatory\":true,\"idsName\":\"IDS_STARTDATEANDTIME\",\"dataField\":\"dprocessstartdate\",\"width\":\"250px\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}:{\"mandatory\":true,\"idsName\":\"IDS_ENDDATEANDTIME\",\"dataField\":\"dprocessenddate\",\"width\":\"250px\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});var temparray2=[];//ALPD-5139--Vignesh R(24-12-2024)---added the collection tube type in datagrid\nvar scollectiontubetype=this.props.Login.masterData.sfieldnameCollection&&this.props.Login.masterData.sfieldnameCollection;var sfieldnameSampleType=this.props.Login.masterData.sfieldnameSampleType&&this.props.Login.masterData.sfieldnameSampleType;barcodeFields&&barcodeFields.forEach(function(barcodeItem){data&&data.forEach(function(dataItem){var entries=Object.entries(dataItem.jsondata);if(entries.length>0){entries.forEach(function(_ref){var _ref2=_slicedToArray(_ref,1),key=_ref2[0];var keyExists=temparray2.some(function(column){return column.idsName===key;});if(!keyExists){//    if ('Visit Number' === key || 'Participant ID' === key) {\n//ALPD-5139--Vignesh R(24-12-2024)---added the collection tube type in datagrid\nif(barcodeItem.sfieldname===key&&barcodeItem.sfieldname!==scollectiontubetype&&barcodeItem.sfieldname!==sfieldnameSampleType){temparray2.push({idsName:key,dataField:key,width:'250px'});}}});}});});var newArray=[].concat(temparray1,temparray2);newArray.push({idsName:'IDS_COMMENTS',dataField:'scomments',width:'250px'},{idsName:'IDS_DEVIATIONCOMMENTS',dataField:'sdeviationcomments',width:'250px'});return newArray;}},{key:\"render\",value:function render(){var _this2=this;/* console.log(\"SampleProcessing\", this.props.Login.masterData.SampleProcessing);\r\n         console.log(\"extractedColumnList\", this.extractedColumnList);\r\n         console.log(\"SampleProcessing-Data\", this.state.data);*/var fromDate=\"\";var toDate=\"\";var extractedColumnList=this.gridfillingColumn(this.props.Login.masterData.SampleProcessing&&this.props.Login.masterData.SampleProcessing||[],this.props.Login.masterData.jsondataBarcodeFields&&this.props.Login.masterData.jsondataBarcodeFields);this.extractedColumnList=extractedColumnList;var addId=this.state.controlMap.has(\"AddSampleProcessing\")&&this.state.controlMap.get(\"AddSampleProcessing\").ncontrolcode;var editId=this.state.controlMap.has(\"EditSampleProcessing\")&&this.state.controlMap.get(\"EditSampleProcessing\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteSampleProcessing\")&&this.state.controlMap.get(\"DeleteSampleProcessing\").ncontrolcode;var editParam={screenName:this.props.Login.displayName,operation:\"update\",userInfo:this.props.Login.userInfo,ncontrolcode:editId,masterData:this.props.Login.masterData,inputParam:this.props.Login.inputParam,primaryKeyField:\"nsampleprocessingcode\",selectedRecord:this.state.selectedRecord||{},dataState:this.state.dataState};var addParam={screenName:this.props.Login.displayName,primaryKeyField:\"nsampleprocessingcode\",primaryKeyValue:undefined,operation:\"create\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolcode:addId,selectedRecord:this.state.selectedRecord,masterData:this.props.Login.masterData};//\t\t//ALPD-4618--Vignesh R(01-08-2024)\nvar deleteParam={operation:\"delete\",ncontrolcode:deleteId,selectedRecord:this.state.selectedRecord};if(this.props.Login.masterData&&this.props.Login.masterData.FromDate){fromDate=this.state.selectedRecord[\"fromdate\"]&&getStartOfDay(this.state.selectedRecord[\"fromdate\"])||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.FromDate);toDate=this.state.selectedRecord[\"todate\"]&&getEndOfDay(this.state.selectedRecord[\"todate\"])||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"fromdate\",label:this.props.intl.formatMessage({id:\"IDS_FROM\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.state.selectedRecord[\"fromdate\"]||fromDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this2.handleDateChange(\"fromdate\",date);},value:this.state.selectedRecord[\"fromdate\"]||fromDate})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"todate\",label:this.props.intl.formatMessage({id:\"IDS_TO\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.state.selectedRecord[\"todate\"]||toDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this2.handleDateChange(\"todate\",date);},value:this.state.selectedRecord[\"todate\"]||toDate})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_PROJECTTYPE\"}),isSearchable:true,name:\"nprojecttypecode\",isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:this.state.projectType,value:this.state.selectedRecord[\"nprojecttypecode\"]&&this.state.selectedRecord[\"nprojecttypecode\"]||this.props.Login.masterData.selectedProjectType,defaultValue:this.state.selectedRecord[\"nprojecttypecode\"],onChange:function onChange(event){return _this2.onComboChange(event,\"nprojecttypecode\");},closeMenuOnSelect:true})),\"    \"),this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nsampleprocessingcode\",data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,reloadData:this.reloadData,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,scrollable:\"scrollable\",pageable:true,isComponent:true,gridHeight:'600px',isToolBarRequired:true,isActionRequired:true,expandField:\"expanded\",selectedId:this.props.Login.selectedId,addRecord:function addRecord(){return _this2.props.getComboSampleProcessing(addParam);},deleteParam:deleteParam,deleteRecord:this.deleteRecord,fetchRecord:this.props.getActiveSampleProcessingById,editParam:editParam//ATE234 Janakumar ALPD-5577 Sample Storage-->while download the pdf, screen getting freezed\n,isDownloadPDFRequired:false,isDownloadExcelRequired:true}):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,size:'lg',esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.mandatoryColumns,showSaveContinue:true,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddSampleProcessing,{autoSaveGetDataProcessing:this.autoSaveGetDataProcessing,selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,formatMessage:this.props.intl.formatMessage,operation:this.props.Login.operation,sampletype:this.props.Login.sampletype,collectiontubetype:this.props.Login.collectiontubetype,userInfo:this.props.Login.userInfo,handleDateChangeSlidout:this.handleDateChangeSlidout,projectType:this.state.projectType,masterData:this.props.Login.masterData})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var projectType=this.state.projectType;var bool=false;if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.masterData.projectType!==previousProps.Login.masterData.projectType){var projectTypeMap=constructOptionList(this.props.Login.masterData.projectType||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,undefined);projectType=projectTypeMap.get(\"OptionList\");bool=true;}if(this.props.Login.masterData.selectedProjectType!==previousProps.Login.masterData.selectedProjectType){var _projectTypeMap=constructOptionList(this.props.Login.masterData.projectType||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,undefined);projectType=_projectTypeMap.get(\"OptionList\");bool=true;}// if (this.props.Login.masterData.SampleProcessing !== previousProps.Login.masterData.SampleProcessing) {\n//     let samplecollect = [];\n//     samplecollect = this.props.Login.masterData.SampleProcessing && this.props.Login.masterData.SampleProcessing.map(sampleItem => {\n//         const entries = Object.entries(sampleItem.jsondata);\n//         if (entries.length > 0) {\n//             const newItem = { ...sampleItem };\n//             entries.forEach(([key, value]) => {\n//                 newItem[key] = value;\n//             });\n//             return newItem;\n//         }\n//         return sampleItem;\n//     });\n//     let { dataState } = this.state;\n//     if (dataState === undefined) {\n//         dataState = { skip: 0, take: this.state.dataState.take }\n//     }\n//     if (this.state.dataResult.data) {\n//         if (this.state.dataResult.data.length === 1) {\n//             let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\n//                 this.state.dataState.skip\n//             dataState = { skip: skipcount, take: this.state.dataState.take }\n//         }\n//     }\n//     this.setState({\n//         data: samplecollect,\n//         dataState,\n//         dataResult: process(samplecollect || [], dataState),\n//     });\n// }\nif(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);var sampleProcessing=[];sampleProcessing=this.props.Login.masterData.SampleProcessing&&this.props.Login.masterData.SampleProcessing.map(function(sampleItem){var entries=Object.entries(sampleItem.jsondata);if(entries.length>0){var newItem=_objectSpread({},sampleItem);entries.forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],value=_ref4[1];newItem[key]=value;});return newItem;}return sampleItem;});var dataState=this.state.dataState;if(dataState===undefined){dataState={skip:0,take:this.state.dataState.take};}if(this.state.dataResult.data){if(this.state.dataResult.data.length===1){var skipcount=this.state.dataState.skip>0?this.state.dataState.skip-this.state.dataState.take:this.state.dataState.skip;dataState={skip:skipcount,take:this.state.dataState.take};}}this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:sampleProcessing,dataState:dataState,dataResult:process(sampleProcessing||[],dataState)});}else{//jana ALPD-4694 Temporary Storage-->While Try to Delete the Records the Fields are Align Wrongly\nvar _dataState=this.state.dataState;var sampleProcessingdata=[];sampleProcessingdata=this.props.Login.masterData.SampleProcessing&&this.props.Login.masterData.SampleProcessing.map(function(sampleItem){var entries=Object.entries(sampleItem.jsondata);if(entries.length>0){var newItem=_objectSpread({},sampleItem);entries.forEach(function(_ref5){var _ref6=_slicedToArray(_ref5,2),key=_ref6[0],value=_ref6[1];newItem[key]=value;});return newItem;}return sampleItem;});if(this.props.Login.dataState===undefined||this.props.Login.masterData.selectedProjectType!==previousProps.Login.masterData.selectedProjectType){_dataState={skip:0,take:this.state.dataState.take};}if(this.state.dataResult.data){if(this.state.dataResult.data.length===1){var _skipcount=this.state.dataState.skip>0?this.state.dataState.skip-this.state.dataState.take:this.state.dataState.skip;_dataState={skip:_skipcount,take:this.state.dataState.take};}}this.setState({data:sampleProcessingdata,selectedRecord:this.props.Login.selectedRecord,dataResult:process(sampleProcessingdata||[],_dataState),dataState:_dataState});}if(this.props.Login.masterData.jsondataBarcodeFields!==previousProps.Login.masterData.jsondataBarcodeFields){var retrievedData=sortData(this.props.Login.masterData.jsondataBarcodeFields,\"ascending\",\"nsorter\");this.setState({jsondataBarcodeFields:retrievedData});}/* else {\r\n                 if (this.props.Login.masterData.SampleProcessing) {\r\n                     let {dataState}=this.state;\r\n                     if(dataState===undefined){\r\n                         dataState={skip:0,take:this.state.dataState.take}\r\n                     }\r\n                      if(this.state.dataResult.data){\r\n                          if(this.state.dataResult.data.length ===1){\r\n                             let skipcount=this.state.dataState.skip>0?(this.state.dataState.skip-this.state.dataState.take):\r\n                             this.state.dataState.skip\r\n                              dataState={skip:skipcount,take:this.state.dataState.take}\r\n                          }\r\n                      } \r\n                     \r\n                     let samplecollect = [];\r\n                     samplecollect = this.props.Login.masterData.SampleProcessing && this.props.Login.masterData.SampleProcessing.map(sampleItem => {\r\n                         const entries = Object.entries(sampleItem.jsondata);\r\n                         if (entries.length > 0) {\r\n                             const newItem = { ...sampleItem };\r\n                             entries.forEach(([key, value]) => {\r\n \r\n                                 newItem[key] = value;\r\n \r\n                             });\r\n                             return newItem;\r\n                         }\r\n                         return sampleItem;\r\n                     });\r\n \r\n                     this.setState({\r\n                         data: samplecollect,\r\n                         dataState,\r\n                         dataResult: process(samplecollect || [], dataState),\r\n                     });\r\n                 }\r\n             }*/}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(bool){this.setState({projectType:projectType});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return SampleProcessing;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,validateEsignCredential:validateEsignCredential,getComboSampleProcessing:getComboSampleProcessing,getBarcodeDataDetails:getBarcodeDataDetails,getSampleProcessType:getSampleProcessType,getProcessduration:getProcessduration,saveSampleProcessing:saveSampleProcessing,getActiveSampleProcessingById:getActiveSampleProcessingById,getSampleProcessing:getSampleProcessing,validateEsignCredentialSampleProcessing:validateEsignCredentialSampleProcessing})(injectIntl(SampleProcessing));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/storagemanagement/SampleProcessing.jsx"],"names":["React","connect","injectIntl","Row","Col","toast","process","DataGrid","DateTimePicker","ListWrapper","AddSampleProcessing","SlideOutModal","Esign","SampleCycle","transactionStatus","DEFAULT_RETURN","FormSelectSearch","callService","crudMaster","updateStore","validateEsignCredential","getComboSampleProcessing","getBarcodeDataDetails","getSampleProcessType","getProcessduration","saveSampleProcessing","getActiveSampleProcessingById","getSampleProcessing","validateEsignCredentialSampleProcessing","sortData","getControlMap","getStartOfDay","getEndOfDay","convertDateValuetoString","rearrangeDateFormat","constructOptionList","Lims_JSON_stringify","formatInputDate","showEsign","mapStateToProps","state","Login","SampleProcessing","props","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","data","dataStateChange","event","setState","dataResult","dataState","validateEsign","inputParam","inputData","userInfo","sreason","nreasoncode","value","spredefinedreason","label","password","screenData","deleteRecord","deleteParam","obj","masterData","FromDate","ToDate","fromDate","toDate","classUrl","methodUrl","displayName","toLowerCase","selectedProjectType","userRoleControlRights","nformcode","ncontrolCode","screenName","intl","formatMessage","id","onSaveClick","saveType","formRef","alertMessage","sbarcodeid","barcodedata","checkCollectionTubeType","checkSampleType","jsonPrimaryKeyValue","nsamplecollectiontypecode","item","ncollectiontubetypecode","length","parseInt","nbarcodelength","invalidbarcode","substring","PROCESSING","undefined","date1","date2","diffenecemill","differenceInMinutes","flag","Date","nngracetimetime","nprocesstime","JSON","stringify","listProcessType","removeIndex","findIndex","splice","map","nsampleprocesstypecode","join","NA","selectedId","sformname","smodulename","ncontrolcode","warn","onComboChange","comboData","fieldName","userinfo","nprojecttypecode","nproductcode","nprocesstypecode","handleDateChangeSlidout","dateName","dateValue","autoSaveGetDataProcessing","stopPropagation","keyCode","target","spositionvalue","nbarcodeLength","jsondata","onInputOnChange","fieldname","type","name","checked","YES","NO","handleDateChange","dateObj","reloadData","searchRef","createRef","skip","take","settings","masterStatus","error","controlMap","Map","showSaveContinue","barcodeFields","temparray1","idsName","dataField","width","controlType","mandatoryColumns","mandatoryLabel","push","sprocessstartdatesecondtime","temparray2","scollectiontubetype","sfieldnameCollection","sfieldnameSampleType","forEach","barcodeItem","dataItem","entries","Object","key","keyExists","some","column","sfieldname","newArray","extractedColumnList","gridfillingColumn","jsondataBarcodeFields","addId","has","get","editId","deleteId","editParam","primaryKeyField","addParam","primaryKeyValue","ssitedate","date","projectType","sampletype","collectiontubetype","previousProps","bool","projectTypeMap","values","sampleProcessing","sampleItem","newItem","skipcount","sampleProcessingdata","retrievedData","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport AddSampleProcessing from '../storagemanagement//AddSampleProcessing';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { SampleCycle, transactionStatus } from '../../components/Enumeration';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nimport {\r\n    callService, crudMaster,\r\n    updateStore, validateEsignCredential, getComboSampleProcessing, getBarcodeDataDetails,\r\n    getSampleProcessType, getProcessduration, saveSampleProcessing, getActiveSampleProcessingById, getSampleProcessing, validateEsignCredentialSampleProcessing\r\n} from '../../actions';\r\nimport {sortData, getControlMap, getStartOfDay, getEndOfDay, convertDateValuetoString, rearrangeDateFormat, constructOptionList, Lims_JSON_stringify, formatInputDate, showEsign } from '../../components/CommonScript'\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass SampleProcessing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showSaveContinue: true\r\n        };\r\n\r\n\r\n\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord }\r\n        }\r\n\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    gridfillingColumn(data, barcodeFields) {\r\n        //  const tempArray = [];\r\n        const temparray1 = [\r\n            { idsName: 'IDS_BARCODEID', dataField: 'sbarcodeid', width: '250px', controlType: 'textinput' },\r\n            { idsName: 'IDS_SAMPLETYPE', dataField: 'sproductname', width: '250px', controlType: 'selectbox' },\r\n            { idsName: 'IDS_COLLECTIONTUBETYPENAME', dataField: 'stubename', width: '250px', controlType: 'selectbox' },\r\n            { idsName: 'IDS_PROCESSTYPENAME', dataField: 'sprocesstypename', width: '250px', controlType: 'selectbox' },\r\n            { idsName: 'IDS_PROCESSDURATION', dataField: 'sprocessduration', width: '250px', controlType: 'selectbox' },\r\n            { idsName: 'IDS_GRACEDURATION', dataField: 'sgraceduration', width: '250px', controlType: 'selectbox' },\r\n            { idsName: 'IDS_STARTDATEANDTIME', dataField: 'sprocessstartdate', width: '250px' },\r\n            { idsName: 'IDS_ENDDATEANDTIME', dataField: 'sprocessenddate', width: '250px' },\r\n        ];\r\n        \r\n        this.mandatoryColumns = [\r\n            { \"mandatory\": true, \"idsName\": 'IDS_SAMPLETYPE', dataField: 'nproductcode', width: '250px', mandatoryLabel: 'IDS_SELECT', controlType: 'selectbox' },\r\n            { \"mandatory\": true, \"idsName\": 'IDS_COLLECTIONTUBETYPENAME', dataField: 'ncollectiontubetypecode', width: '250px', mandatoryLabel: 'IDS_SELECT', controlType: 'selectbox' },\r\n            { \"mandatory\": true, \"idsName\": 'IDS_PROCESSTYPENAME', dataField: 'nprocesstypecode', width: '250px', mandatoryLabel: 'IDS_SELECT', controlType: 'selectbox' },\r\n            { \"mandatory\": true, \"idsName\": \"IDS_BARCODEID\", \"dataField\": \"sbarcodeid\", \"width\": \"250px\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textinput\" }\r\n\r\n        ]\r\n        this.mandatoryColumns.push(\r\n            !(this.props.Login.masterData.sprocessstartdatesecondtime && this.props.Login.masterData.sprocessstartdatesecondtime)\r\n                ? { \"mandatory\": true, \"idsName\": \"IDS_STARTDATEANDTIME\", \"dataField\": \"dprocessstartdate\", \"width\": \"250px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                : { \"mandatory\": true, \"idsName\": \"IDS_ENDDATEANDTIME\", \"dataField\": \"dprocessenddate\", \"width\": \"250px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        );\r\n\r\n        let temparray2 = [];\r\n        //ALPD-5139--Vignesh R(24-12-2024)---added the collection tube type in datagrid\r\n        let scollectiontubetype=this.props.Login.masterData.sfieldnameCollection&& this.props.Login.masterData.sfieldnameCollection;\r\n        let sfieldnameSampleType=this.props.Login.masterData.sfieldnameSampleType&& this.props.Login.masterData.sfieldnameSampleType;\r\n\r\n        barcodeFields && barcodeFields.forEach(barcodeItem => {\r\n            data && data.forEach(dataItem => {\r\n                const entries = Object.entries(dataItem.jsondata);\r\n                if (entries.length > 0) {\r\n                    entries.forEach(([key]) => {\r\n                        const keyExists = temparray2.some(column => column.idsName === key);\r\n                        if (!keyExists) {\r\n                            //    if ('Visit Number' === key || 'Participant ID' === key) {\r\n                                    //ALPD-5139--Vignesh R(24-12-2024)---added the collection tube type in datagrid\r\n\r\n                            if (barcodeItem.sfieldname === key && barcodeItem.sfieldname!==scollectiontubetype && barcodeItem.sfieldname!==sfieldnameSampleType) {\r\n                                temparray2.push({\r\n                                    idsName: key,\r\n                                    dataField: key,\r\n                                    width: '250px'\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        const newArray = [...temparray1, ...temparray2]\r\n        newArray.push(\r\n            { idsName: 'IDS_COMMENTS', dataField: 'scomments', width: '250px' },\r\n            { idsName: 'IDS_DEVIATIONCOMMENTS', dataField: 'sdeviationcomments', width: '250px' }\r\n        );\r\n        return newArray;\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if (this.props.Login.operation === 'update') {\r\n            this.props.validateEsignCredentialSampleProcessing(inputParam, \"openModal\");\r\n        }\r\n\r\n        else {\r\n            this.props.validateEsignCredential(inputParam, \"openModal\");\r\n        }\r\n    }\r\n    render() {\r\n        /* console.log(\"SampleProcessing\", this.props.Login.masterData.SampleProcessing);\r\n         console.log(\"extractedColumnList\", this.extractedColumnList);\r\n         console.log(\"SampleProcessing-Data\", this.state.data);*/\r\n\r\n\r\n        let fromDate = \"\";\r\n        let toDate = \"\";\r\n        const extractedColumnList = this.gridfillingColumn(this.props.Login.masterData.SampleProcessing && this.props.Login.masterData.SampleProcessing || [], this.props.Login.masterData.jsondataBarcodeFields && this.props.Login.masterData.jsondataBarcodeFields);\r\n\r\n\r\n\r\n\r\n        this.extractedColumnList = extractedColumnList;\r\n\r\n\r\n        const addId = this.state.controlMap.has(\"AddSampleProcessing\") && this.state.controlMap.get(\"AddSampleProcessing\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditSampleProcessing\") && this.state.controlMap.get(\"EditSampleProcessing\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteSampleProcessing\") && this.state.controlMap.get(\"DeleteSampleProcessing\").ncontrolcode;\r\n        const editParam = {\r\n            screenName: this.props.Login.displayName,\r\n            operation: \"update\",\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: editId,\r\n            masterData: this.props.Login.masterData,\r\n            inputParam: this.props.Login.inputParam,\r\n            primaryKeyField: \"nsampleprocessingcode\",\r\n            selectedRecord: this.state.selectedRecord || {},\r\n            dataState:this.state.dataState\r\n\r\n        };\r\n        const addParam = {\r\n            screenName: this.props.Login.displayName, primaryKeyField: \"nsampleprocessingcode\", primaryKeyValue: undefined,\r\n            operation: \"create\", inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolcode: addId,\r\n            selectedRecord: this.state.selectedRecord,\r\n            masterData: this.props.Login.masterData\r\n        };\r\n//\t\t//ALPD-4618--Vignesh R(01-08-2024)\r\n        const deleteParam = { operation: \"delete\", ncontrolcode:deleteId, selectedRecord: this.state.selectedRecord };\r\n\r\n        if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\r\n            fromDate = (this.state.selectedRecord[\"fromdate\"] && getStartOfDay(this.state.selectedRecord[\"fromdate\"])) || rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\r\n            toDate = (this.state.selectedRecord[\"todate\"] && getEndOfDay(this.state.selectedRecord[\"todate\"])) || rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate);\r\n        }\r\n        return (\r\n            <>\r\n                {/* <Preloader loadng={this.props.Login.loading}/> */}\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <DateTimePicker\r\n                                        name={\"fromdate\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"fromdate\"] || fromDate}\r\n                                        dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                        isClearable={false}\r\n                                        onChange={date => this.handleDateChange(\"fromdate\", date)}\r\n                                        value={this.state.selectedRecord[\"fromdate\"] || fromDate}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <DateTimePicker\r\n                                        name={\"todate\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"todate\"] || toDate}\r\n                                        dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                        isClearable={false}\r\n                                        onChange={date => this.handleDateChange(\"todate\", date)}\r\n                                        value={this.state.selectedRecord[\"todate\"] || toDate}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"nprojecttypecode\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={this.state.projectType}\r\n                                        value={this.state.selectedRecord[\"nprojecttypecode\"] && this.state.selectedRecord[\"nprojecttypecode\"] || this.props.Login.masterData.selectedProjectType}\r\n                                        defaultValue={this.state.selectedRecord[\"nprojecttypecode\"]}\r\n                                        onChange={(event) => this.onComboChange(event, \"nprojecttypecode\")}\r\n                                        closeMenuOnSelect={true}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>    {/* <Col></Col> */}\r\n                            </Row>\r\n\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={\"nsampleprocessingcode\"}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    scrollable={\"scrollable\"}\r\n                                    pageable={true}\r\n                                    isComponent={true}\r\n                                    gridHeight={'600px'}\r\n                                    isToolBarRequired={true}\r\n                                    isActionRequired={true}\r\n                                    expandField=\"expanded\"\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    addRecord={() => this.props.getComboSampleProcessing(addParam)}\r\n                                    deleteParam={deleteParam}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    fetchRecord={this.props.getActiveSampleProcessingById}\r\n                                    editParam={editParam}\r\n                                    //ATE234 Janakumar ALPD-5577 Sample Storage-->while download the pdf, screen getting freezed\r\n                                    isDownloadPDFRequired={false}\r\n                                    isDownloadExcelRequired={true}\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        size={'lg'}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.mandatoryColumns}\r\n                        showSaveContinue={true}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddSampleProcessing\r\n                                autoSaveGetDataProcessing={this.autoSaveGetDataProcessing}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                operation={this.props.Login.operation}\r\n                                sampletype={this.props.Login.sampletype}\r\n                                collectiontubetype={this.props.Login.collectiontubetype}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                handleDateChangeSlidout={this.handleDateChangeSlidout}\r\n                                projectType={this.state.projectType}\r\n                                masterData={this.props.Login.masterData}\r\n\r\n\r\n                            />}\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n    deleteRecord = (deleteParam) => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                [this.props.Login.inputParam.methodUrl.toLowerCase()]: deleteParam.selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"fromDate\": fromDate,\r\n                \"toDate\": toDate,\r\n                \"nprojecttypecode\": this.props.Login.masterData.selectedProjectType.value || -1,\r\n                \"nsampleprocessingcode\": deleteParam.selectedRecord['nsampleprocessingcode'],\r\n                \"sbarcodeid\": deleteParam.selectedRecord['sbarcodeid']\r\n\r\n            },\r\n            operation: deleteParam.operation,\r\n            dataState: this.state.dataState\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: deleteParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let alertMessage;\r\n        const sbarcodeid = this.props.Login.masterData.barcodedata;\r\n\r\n        //ALPD-5139--Vignesh R(24-12-2024)---added the collection tube type in datagrid\r\n             let checkCollectionTubeType=true;\r\n            let checkSampleType=true;\r\n\r\n        //ALPD-5139--Vignesh R(26-12-2024)---while updating this condition,this can't apply\r\n            if(this.props.Login.operation!=='update'){\r\n            let jsonPrimaryKeyValue=this.props.Login.masterData.jsonPrimaryKeyValue;\r\n\r\n            if(jsonPrimaryKeyValue.nsamplecollectiontypecode){\r\n                if(jsonPrimaryKeyValue.nsamplecollectiontypecode !== selectedRecord['nproductcode'].item.nsamplecollectiontypecode){\r\n                    checkSampleType=false;\r\n                }\r\n            }\r\n\r\n            if(jsonPrimaryKeyValue.ncollectiontubetypecode){\r\n            if(jsonPrimaryKeyValue.ncollectiontubetypecode !== selectedRecord['ncollectiontubetypecode'].value){\r\n                checkCollectionTubeType=false;\r\n            }\r\n        }\r\n\r\n    }\r\n    if(checkSampleType){\r\n    if(checkCollectionTubeType){\r\n        if (selectedRecord[\"sbarcodeid\"] && selectedRecord[\"sbarcodeid\"].length === parseInt(this.props.Login.masterData.nbarcodelength && this.props.Login.masterData.nbarcodelength)) {\r\n            let invalidbarcode = selectedRecord[\"sbarcodeid\"].substring(1, 2);\r\n            if (parseInt(invalidbarcode) === SampleCycle.PROCESSING) {\r\n                if (sbarcodeid != undefined && sbarcodeid != '') {\r\n\r\n                    let date1;\r\n                    let date2;\r\n                    let diffenecemill;\r\n                    let differenceInMinutes;\r\n\r\n                    let flag = false;\r\n\r\n                    if (selectedRecord[\"dprocessenddate\"] !== undefined && selectedRecord[\"dprocessenddate\"] !== \"\"&&selectedRecord[\"dprocessenddate\"] !==null) {\r\n\r\n                        date1 = new Date(formatInputDate(selectedRecord[\"dprocessstartdate\"], false));\r\n                        date2 = new Date(formatInputDate(selectedRecord[\"dprocessenddate\"], false));\r\n\r\n                        diffenecemill = date2 - date1;\r\n                        differenceInMinutes = diffenecemill / (1000 * 60);\r\n\r\n                        let nngracetimetime;\r\n                        let nprocesstime;\r\n\r\n                        nngracetimetime = parseInt(selectedRecord['ngracetime']) + parseInt(selectedRecord['nprocesstime']);\r\n                        nprocesstime = parseInt(selectedRecord['nprocesstime']);\r\n                        if (differenceInMinutes > nngracetimetime) {\r\n                            if (selectedRecord[\"sdeviationcomments\"] === undefined || selectedRecord[\"sdeviationcomments\"] === \"\") {\r\n                                flag = true;\r\n                                alertMessage = \"IDS_DEVIATIONCOMMENTS\"\r\n                            }\r\n                        }\r\n                        else if (differenceInMinutes > nprocesstime) {\r\n                            if (selectedRecord[\"scomments\"] === undefined || selectedRecord[\"scomments\"] === \"\") {\r\n                                flag = true;\r\n                                alertMessage = \"IDS_COMMENTS\"\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (!flag) {\r\n                        let inputData = {};\r\n                        inputData[\"sampleprocessing\"] = {};\r\n                        if (this.props.Login.operation === \"create\") {\r\n                            inputData[\"sampleprocessing\"][\"nsamplecollectiontypecode\"] = selectedRecord[\"nsamplecollectiontypecode\"] ? selectedRecord[\"nsamplecollectiontypecode\"] : -1;\r\n                            inputData[\"sampleprocessing\"][\"nproductcode\"] = selectedRecord[\"nproductcode\"] ? selectedRecord[\"nproductcode\"].value : -1;\r\n                            inputData[\"sampleprocessing\"][\"ncollectiontubetypecode\"] = selectedRecord[\"ncollectiontubetypecode\"] ? selectedRecord[\"ncollectiontubetypecode\"].value : -1;\r\n                            inputData[\"sampleprocessing\"][\"jsondata\"] = Lims_JSON_stringify(JSON.stringify(this.props.Login.masterData.barcodedata));\r\n                        \r\n                        let listProcessType=[...this.state.selectedRecord[\"processtype\"]];\r\n\r\n                        \r\n                        const removeIndex = listProcessType.findIndex(item => {\r\n                            return item.value === parseInt(selectedRecord[\"nprocesstypecode\"].value);\r\n                        });\r\n                        \r\n                        if (removeIndex !== -1) {\r\n                            listProcessType.splice(removeIndex, listProcessType.length);\r\n                            if(listProcessType.length>0){\r\n\r\n                                inputData={...inputData,\"listOfnsampleprocesstypecode\":listProcessType.map(item => item.item.nsampleprocesstypecode).join(','),\"nsampleprocesstypecode\":selectedRecord[\"nsampleprocesstypecode\"],\"nprocesstypelength\":listProcessType.length}\r\n                            }else{\r\n                                inputData={...inputData,\"listOfnsampleprocesstypecode\":selectedRecord[\"nsampleprocesstypecode\"],\"nsampleprocesstypecode\":selectedRecord[\"nsampleprocesstypecode\"],\"isSingleProcesstype\":true,\"nprocesstypelength\":1}\r\n\r\n                            }\r\n\r\n                        }\r\n                        \r\n                        }\r\n                        inputData[\"sampleprocessing\"][\"nprojecttypecode\"] = this.props.Login.masterData.selectedProjectType.value || transactionStatus.NA;\r\n                        if (this.props.Login.operation === \"update\") {\r\n                            inputData[\"sampleprocessing\"][\"nsampleprocessingcode\"] = this.props.Login.selectedId;\r\n                        }\r\n                        inputData[\"sampleprocessing\"][\"sbarcodeid\"] = selectedRecord[\"sbarcodeid\"] ? selectedRecord[\"sbarcodeid\"] : -1;\r\n\r\n                inputData[\"sampleprocessing\"][\"nsamplecollectiontypecode\"] = selectedRecord[\"nsamplecollectiontypecode\"] ? selectedRecord[\"nsamplecollectiontypecode\"] : -1;\r\n\r\n                        inputData[\"sampleprocessing\"][\"scomments\"] = selectedRecord[\"scomments\"] && selectedRecord[\"scomments\"] || \"\";\r\n\r\n                        inputData[\"sampleprocessing\"][\"sdeviationcomments\"] = selectedRecord[\"sdeviationcomments\"] && selectedRecord[\"sdeviationcomments\"] || \"\";\r\n\r\n                        inputData[\"sampleprocessing\"][\"dprocessstartdate\"] = formatInputDate(selectedRecord[\"dprocessstartdate\"], false);\r\n                        inputData[\"sampleprocessing\"][\"ntzprocessstartdate\"] = selectedRecord[\"ntzprocessstartdate\"] && selectedRecord[\"ntzprocessstartdate\"].value || transactionStatus.NA\r\n                        inputData[\"sampleprocessing\"][\"noffsetdprocessstartdate\"] = selectedRecord[\"noffsetdprocessenddate\"] && selectedRecord[\"noffsetdprocessenddate\"].value || transactionStatus.NA\r\n\r\n                        inputData[\"sampleprocessing\"][\"nsampleprocesstypecode\"] = selectedRecord[\"nsampleprocesstypecode\"] ? selectedRecord[\"nsampleprocesstypecode\"] : -1;\r\n                        inputData[\"sampleprocessing\"][\"noffsetdprocessenddate\"] = selectedRecord[\"noffsetdprocessenddate\"] && selectedRecord[\"noffsetdprocessenddate\"].value || transactionStatus.NA\r\n                        inputData[\"sampleprocessing\"][\"ntzprocessenddate\"] = selectedRecord[\"ntzprocessenddate\"] && selectedRecord[\"ntzprocessenddate\"].value || transactionStatus.NA\r\n                        if (selectedRecord[\"dprocessenddate\"] !== undefined && selectedRecord[\"dprocessenddate\"] !== \"\" && selectedRecord[\"dprocessenddate\"]!==null) {\r\n                            inputData[\"sampleprocessing\"][\"dprocessenddate\"] = formatInputDate(selectedRecord[\"dprocessenddate\"], false);\r\n\r\n                        }\r\n\r\n\r\n                        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n                        let fromDate = obj.fromDate;\r\n                        let toDate = obj.toDate;\r\n                        inputData[\"fromDate\"] = fromDate;\r\n                        inputData[\"toDate\"] = toDate;\r\n                        inputData[\"nprojecttypecode\"] = this.props.Login.masterData.selectedProjectType.value || transactionStatus.NA;\r\n                        inputData[\"userinfo\"] = {\r\n                            ...this.props.Login.userInfo,\r\n                            sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                            smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename)\r\n                        }\r\n\r\n\r\n\r\n                        const inputParam = {\r\n                            nformcode: this.props.Login.userInfo.nformcode,\r\n                            classUrl: \"storagesampleprocessing\",\r\n                            methodUrl: \"SampleProcessing\",\r\n                            inputData: inputData,\r\n                            operation: this.props.Login.operation,\r\n                            saveType, formRef,\r\n                            selectedRecord: this.state.selectedRecord || {}\r\n                        }\r\n\r\n                        const masterData = this.props.Login.masterData;\r\n\r\n                        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n                            const updateInfo = {\r\n                                typeName: DEFAULT_RETURN,\r\n                                data: {\r\n                                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                                }\r\n                            }\r\n                            this.props.updateStore(updateInfo);\r\n                        }\r\n                        else {\r\n                            this.props.saveSampleProcessing(inputParam, masterData);\r\n                        }\r\n                    }\r\n                    else {\r\n                        toast.warn(this.props.intl.formatMessage({\r\n                            id: \"IDS_ENTER\",\r\n                        }) + \" \" +\r\n                            this.props.intl.formatMessage({\r\n                                id: alertMessage,\r\n                            })\r\n                        );\r\n                    }\r\n                }\r\n                else {\r\n                    toast.warn(\r\n                        this.props.intl.formatMessage({\r\n                            id: \"IDS_CLICKENTERTOJSONRECORD\",\r\n                        })\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                toast.warn(\r\n                    this.props.intl.formatMessage({\r\n                        id: \"IDS_INVALIDBARCODEID\",\r\n                    })\r\n                );\r\n            }\r\n        } else {\r\n            toast.warn(\r\n                this.props.intl.formatMessage({\r\n                    id: \"IDS_INVALIDABARCODE\",\t//ALPD-4750 Changed IDS value to throw alert correctly by VISHAKH\r\n                })\r\n            );\r\n        }\r\n    }\r\n    else {\r\n        toast.warn(\r\n            this.props.intl.formatMessage({\r\n                id: \"IDS_INVALIDCOLLECTIONTUBETYPE\",\r\n            })\r\n        );\r\n    }\r\n}\r\n    else {\r\n        toast.warn(\r\n            this.props.intl.formatMessage({\r\n                id: \"IDS_INVALIDSAMPLETYPE\",\r\n            })\r\n        );\r\n    }\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (fieldName === 'nprojecttypecode') {\r\n            let inputData = [];\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n            let fromDate = obj.fromDate;\r\n            let toDate = obj.toDate;\r\n            inputData[\"fromDate\"] = fromDate;\r\n            inputData[\"toDate\"] = toDate;\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                nprojecttypecode: parseInt(comboData.value),\r\n                selectedProjectType: comboData,\r\n                toDate: toDate,\r\n                fromDate: fromDate\r\n            }\r\n            delete selectedRecord[\"nproductcode\"];\r\n            delete selectedRecord[\"ncollectiontubetypecode\"];\r\n            delete selectedRecord[\"nprocesstypecode\"];\r\n            const masterData = { ...this.props.Login.masterData }\r\n            const inputParam = { masterData, inputData }\r\n            this.props.getSampleProcessing(inputParam)\r\n        }\r\n        /*  if (fieldName === \"nproductcode\") {\r\n              let inputData = [];\r\n              let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n              let fromDate = obj.fromDate;\r\n              let toDate = obj.toDate;\r\n              inputData[\"fromDate\"] = fromDate;\r\n              inputData[\"toDate\"] = toDate;\r\n              inputData = {\r\n                  userinfo: this.props.Login.userInfo,\r\n                  nprojecttypecode: this.props.Login.masterData.selectedProjectType.value,\r\n                  toDate: toDate,\r\n                  fromDate: fromDate\r\n              }\r\n              const masterData = { ...this.props.Login.masterData }\r\n              selectedRecord={...selectedRecord,\"nproductcode\":comboData}\r\n              const inputParam = { masterData, inputData,selectedRecord }\r\n              this.props.getCollectionTubeType(inputParam)\r\n          } else {*/\r\n        if (fieldName === \"ncollectiontubetypecode\" && selectedRecord['nproductcode'] !== undefined) {\r\n            let inputData = [];\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n            let fromDate = obj.fromDate;\r\n            let toDate = obj.toDate;\r\n            inputData[\"fromDate\"] = fromDate;\r\n            inputData[\"toDate\"] = toDate;\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                nprojecttypecode: this.props.Login.masterData.selectedProjectType.value,\r\n                nproductcode: selectedRecord['nproductcode'] && selectedRecord['nproductcode'].value || -1,\r\n                nsamplecollectiontypecode: selectedRecord['nsamplecollectiontypecode'] && selectedRecord['nsamplecollectiontypecode'] || -1,\r\n                ncollectiontubetypecode: parseInt(comboData.value),\r\n                toDate: toDate,\r\n                fromDate: fromDate\r\n            }\r\n\r\n            delete selectedRecord[\"ncollectiontubetypecode\"];\r\n            delete selectedRecord[\"nprocesstypecode\"];\r\n            const masterData = { ...this.props.Login.masterData }\r\n            selectedRecord = { ...selectedRecord, [fieldName]: comboData }\r\n            const inputParam = { masterData, inputData, selectedRecord }\r\n\r\n\r\n            this.props.getSampleProcessType(inputParam)\r\n        }\r\n        else if (fieldName === \"nproductcode\" && selectedRecord['ncollectiontubetypecode'] !== undefined) {\r\n            let inputData = [];\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n            let fromDate = obj.fromDate;\r\n            let toDate = obj.toDate;\r\n            inputData[\"fromDate\"] = fromDate;\r\n            inputData[\"toDate\"] = toDate;\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                nprojecttypecode: this.props.Login.masterData.selectedProjectType.value,\r\n                nproductcode: parseInt(comboData.value),\r\n                nsamplecollectiontypecode: parseInt(comboData.item.nsamplecollectiontypecode),\r\n                ncollectiontubetypecode: selectedRecord['ncollectiontubetypecode'] && selectedRecord['ncollectiontubetypecode'].value || -1,\r\n                toDate: toDate,\r\n                fromDate: fromDate\r\n            }\r\n            delete selectedRecord[\"ncollectiontubetypecode\"];\r\n            delete selectedRecord[\"nprocesstypecode\"];\r\n            const masterData = { ...this.props.Login.masterData }\r\n            selectedRecord = {\r\n                ...selectedRecord, [fieldName]: comboData, \"nsamplecollectiontypecode\": parseInt(comboData.item.nsamplecollectiontypecode)\r\n            }\r\n            const inputParam = { masterData, inputData, selectedRecord }\r\n            this.props.getSampleProcessType(inputParam)\r\n        }\r\n        else if (fieldName === \"nprocesstypecode\") {\r\n            let inputData = [];\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n            let fromDate = obj.fromDate;\r\n            let toDate = obj.toDate;\r\n            inputData[\"fromDate\"] = fromDate;\r\n            inputData[\"toDate\"] = toDate;\r\n\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                nprojecttypecode: this.props.Login.masterData.selectedProjectType.value,\r\n                nproductcode: selectedRecord['nproductcode'] && selectedRecord['nproductcode'].value || -1,\r\n                ncollectiontubetypecode: selectedRecord['ncollectiontubetypecode'] && selectedRecord['ncollectiontubetypecode'].value,\r\n                nsamplecollectiontypecode: selectedRecord['nsamplecollectiontypecode'] && selectedRecord['nsamplecollectiontypecode'] || -1,\r\n                nprocesstypecode: parseInt(comboData.value),\r\n                toDate: toDate,\r\n                fromDate: fromDate\r\n            }\r\n\r\n            const masterData = { ...this.props.Login.masterData }\r\n            selectedRecord = { ...selectedRecord, \"nprocesstypecode\": comboData }\r\n            const inputParam = { masterData, inputData, selectedRecord }\r\n            this.props.getProcessduration(inputParam)\r\n        }\r\n        else {\r\n            selectedRecord[fieldName] = comboData;\r\n            if (fieldName === \"nproductcode\") {\r\n                selectedRecord = { ...selectedRecord, \"nsamplecollectiontypecode\": comboData.item.nsamplecollectiontypecode }\r\n            }\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n        //  }\r\n\r\n    }\r\n    handleDateChangeSlidout = (dateName, dateValue) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n        /* if (selectedRecord[\"sbarcodeid\"] !== undefined) {\r\n              let inputData = {};\r\n              inputData[\"sampleprocessing\"] = {};\r\n            if (dateName === \"dprocessenddate\") {\r\n                  inputData[\"sampleprocessing\"][\"dprocessenddate\"] = formatInputDate(dateValue, false);\r\n                  inputData[\"sampleprocessing\"][\"nsampleprocesstypecode\"] = selectedRecord[\"nsampleprocesstypecode\"] ? selectedRecord[\"nsampleprocesstypecode\"] : -1;\r\n                  inputData[\"sampleprocessing\"][\"sbarcodeid\"] = selectedRecord[\"sbarcodeid\"] ? selectedRecord[\"sbarcodeid\"] : -1;\r\n                  inputData[\"userinfo\"] = {\r\n                      ...this.props.Login.userInfo,\r\n                      sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                      smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename)\r\n                  }\r\n                  selectedRecord = { ...selectedRecord, [dateName]: dateValue }\r\n  \r\n                  const inputParam = {\r\n                      nformcode: this.props.Login.userInfo.nformcode,\r\n                      inputData: inputData,\r\n                      operation: this.props.Login.operation,\r\n                      selectedRecord: selectedRecord,\r\n                      masterData: this.props.Login.masterData\r\n  \r\n                  }\r\n                  this.props.getCommentsDeviation(inputParam)\r\n              }\r\n              else {\r\n  \r\n                \r\n              }\r\n          } else {\r\n  \r\n              toast.warn(this.props.intl.formatMessage({\r\n                  id: \"IDS_ENTER\",\r\n              }) +\r\n                  this.props.intl.formatMessage({\r\n                      id: \"IDS_BARCODEID\",\r\n                  })\r\n              );\r\n  \r\n          }\r\n  */\r\n    };\r\n    autoSaveGetDataProcessing = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {}\r\n\r\n        event.stopPropagation();\r\n        //ALPD-4701--Vignesh R(21-08-2024)\r\n        if(event.keyCode === 13){\r\n        if (selectedRecord['ncollectiontubetypecode'] && selectedRecord['nproductcode'] && selectedRecord['nprocesstypecode']) {\r\n            if (parseInt(selectedRecord[\"sbarcodeid\"] && selectedRecord[\"sbarcodeid\"].length) === parseInt(this.props.Login.masterData.nbarcodelength && this.props.Login.masterData.nbarcodelength) && event.keyCode === 13) {\r\n\r\n                let invalidbarcode = event.target.value.substring(1, 2);\r\n                if (parseInt(invalidbarcode) === SampleCycle.PROCESSING) {\r\n                    let checkCollectionTubeType=false;\r\n                    let checkSampleType=false;\r\n\r\n                   \r\n\r\n                //if(checkCollectionTubeType){\r\n                    let inputParam = {\r\n                        nprojecttypecode: this.props.Login.masterData.selectedProjectType.value,\r\n                        spositionvalue: event.target.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nbarcodeLength:  parseInt(this.props.Login.masterData.nbarcodelength && this.props.Login.masterData.nbarcodelength),\r\n                        jsondata: {},\r\n                        masterData: this.props.Login.masterData,\r\n                        selectedRecord: selectedRecord || {}\r\n                    }\r\n                    this.props.getBarcodeDataDetails(inputParam);\r\n                //}\r\n                // else {\r\n                //     toast.warn(\r\n                //         this.props.intl.formatMessage({\r\n                //             id: \"IDS_INVALIDCOLLECTIONTUBETYPE\",\r\n                //         })\r\n                //     );\r\n                // }\r\n                }\r\n                else {\r\n                    toast.warn(\r\n                        this.props.intl.formatMessage({\r\n                            id: \"IDS_INVALIDBARCODEID\",\r\n                        })\r\n                    );\r\n                }\r\n            } \r\n        }\r\n        else {\r\n            event.stopPropagation();    \r\n            if (selectedRecord['nproductcode'] === undefined) {\r\n                toast.warn(this.props.intl.formatMessage({\r\n                    id: \"IDS_SELECT\",\r\n                }) +\r\n                    this.props.intl.formatMessage({\r\n                        id: \"IDS_SAMPLETYPE\",\r\n                    })\r\n                );\r\n            } else if (selectedRecord['ncollectiontubetypecode'] === undefined) {\r\n                toast.warn(this.props.intl.formatMessage({\r\n                    id: \"IDS_SELECT\",\r\n                }) +\r\n                    this.props.intl.formatMessage({\r\n                        id: \"IDS_COLLECTIONTUBETYPENAME\",\r\n                    })\r\n                );\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({\r\n                    id: \"IDS_SELECT\",\r\n                }) +\r\n                    this.props.intl.formatMessage({\r\n                        id: \"IDS_PROCESSTYPENAME\",\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    };\r\n    onInputOnChange = (event, fieldname) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let { projectType } = this.state;\r\n        let bool = false;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n        if (this.props.Login.masterData.projectType !== previousProps.Login.masterData.projectType) {\r\n            const projectTypeMap = constructOptionList(this.props.Login.masterData.projectType || [], \"nprojecttypecode\",\r\n                \"sprojecttypename\", undefined, undefined, undefined);\r\n            projectType = projectTypeMap.get(\"OptionList\");\r\n            bool = true;\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData.selectedProjectType !== previousProps.Login.masterData.selectedProjectType) {\r\n            const projectTypeMap = constructOptionList(this.props.Login.masterData.projectType || [], \"nprojecttypecode\",\r\n                \"sprojecttypename\", undefined, undefined, undefined);\r\n            projectType = projectTypeMap.get(\"OptionList\");\r\n            bool = true;\r\n\r\n        }\r\n\r\n        // if (this.props.Login.masterData.SampleProcessing !== previousProps.Login.masterData.SampleProcessing) {\r\n        //     let samplecollect = [];\r\n        //     samplecollect = this.props.Login.masterData.SampleProcessing && this.props.Login.masterData.SampleProcessing.map(sampleItem => {\r\n        //         const entries = Object.entries(sampleItem.jsondata);\r\n        //         if (entries.length > 0) {\r\n        //             const newItem = { ...sampleItem };\r\n        //             entries.forEach(([key, value]) => {\r\n\r\n        //                 newItem[key] = value;\r\n\r\n        //             });\r\n        //             return newItem;\r\n        //         }\r\n        //         return sampleItem;\r\n        //     });\r\n        //     let { dataState } = this.state;\r\n        //     if (dataState === undefined) {\r\n        //         dataState = { skip: 0, take: this.state.dataState.take }\r\n        //     }\r\n        //     if (this.state.dataResult.data) {\r\n        //         if (this.state.dataResult.data.length === 1) {\r\n        //             let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\r\n        //                 this.state.dataState.skip\r\n        //             dataState = { skip: skipcount, take: this.state.dataState.take }\r\n        //         }\r\n        //     }\r\n\r\n        //     this.setState({\r\n        //         data: samplecollect,\r\n        //         dataState,\r\n        //         dataResult: process(samplecollect || [], dataState),\r\n        //     });\r\n        // }\r\n\r\n\r\n       \r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                let sampleProcessing = [];\r\n                sampleProcessing =\r\n                    this.props.Login.masterData.SampleProcessing && this.props.Login.masterData.SampleProcessing.map(sampleItem => {\r\n                        const entries = Object.entries(sampleItem.jsondata);\r\n                        if (entries.length > 0) {\r\n                            const newItem = { ...sampleItem };\r\n                            entries.forEach(([key, value]) => {\r\n\r\n                                newItem[key] = value;\r\n\r\n                            });\r\n                            return newItem;\r\n                        }\r\n                        return sampleItem;\r\n                    });\r\n\r\n                let { dataState } = this.state;\r\n                if (dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.state.dataState.take }\r\n                }\r\n                if (this.state.dataResult.data) {\r\n                    if (this.state.dataResult.data.length === 1) {\r\n                        let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\r\n                            this.state.dataState.skip\r\n                        dataState = { skip: skipcount, take: this.state.dataState.take }\r\n                    }\r\n                }\r\n\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: sampleProcessing, dataState,\r\n                    dataResult: process(sampleProcessing || [], dataState),\r\n                });\r\n            }else { \r\n                //jana ALPD-4694 Temporary Storage-->While Try to Delete the Records the Fields are Align Wrongly\r\n\r\n            let {dataState}=this.state;\r\n            let sampleProcessingdata = [];\r\n            sampleProcessingdata =\r\n                this.props.Login.masterData.SampleProcessing && this.props.Login.masterData.SampleProcessing.map(sampleItem => {\r\n                    const entries = Object.entries(sampleItem.jsondata);\r\n                    if (entries.length > 0) {\r\n                        const newItem = { ...sampleItem };\r\n                        entries.forEach(([key, value]) => {\r\n\r\n                            newItem[key] = value;\r\n\r\n                        });\r\n                        return newItem;\r\n                    }\r\n                    return sampleItem;\r\n                });\r\n\r\n            if(this.props.Login.dataState===undefined  || this.props.Login.masterData.selectedProjectType !== previousProps.Login.masterData.selectedProjectType){\r\n                dataState={skip:0,take:this.state.dataState.take}\r\n            }\r\n             if(this.state.dataResult.data){\r\n                 if(this.state.dataResult.data.length ===1){\r\n                    let skipcount=this.state.dataState.skip>0?(this.state.dataState.skip-this.state.dataState.take):\r\n                    this.state.dataState.skip\r\n                     dataState={skip:skipcount,take:this.state.dataState.take}\r\n                 }\r\n             } \r\n             this.setState({\r\n                data: sampleProcessingdata, selectedRecord: this.props.Login.selectedRecord,\r\n                dataResult: process(sampleProcessingdata || [],dataState),\r\n                dataState\r\n            });\r\n            }\r\n\r\n            \r\n            if (this.props.Login.masterData.jsondataBarcodeFields !== previousProps.Login.masterData.jsondataBarcodeFields) {\r\n                const retrievedData = sortData(this.props.Login.masterData.jsondataBarcodeFields,\"ascending\",\"nsorter\");\r\n                this.setState({ jsondataBarcodeFields: retrievedData });\r\n            }\r\n            /* else {\r\n                 if (this.props.Login.masterData.SampleProcessing) {\r\n                     let {dataState}=this.state;\r\n                     if(dataState===undefined){\r\n                         dataState={skip:0,take:this.state.dataState.take}\r\n                     }\r\n                      if(this.state.dataResult.data){\r\n                          if(this.state.dataResult.data.length ===1){\r\n                             let skipcount=this.state.dataState.skip>0?(this.state.dataState.skip-this.state.dataState.take):\r\n                             this.state.dataState.skip\r\n                              dataState={skip:skipcount,take:this.state.dataState.take}\r\n                          }\r\n                      } \r\n                     \r\n                     let samplecollect = [];\r\n                     samplecollect = this.props.Login.masterData.SampleProcessing && this.props.Login.masterData.SampleProcessing.map(sampleItem => {\r\n                         const entries = Object.entries(sampleItem.jsondata);\r\n                         if (entries.length > 0) {\r\n                             const newItem = { ...sampleItem };\r\n                             entries.forEach(([key, value]) => {\r\n \r\n                                 newItem[key] = value;\r\n \r\n                             });\r\n                             return newItem;\r\n                         }\r\n                         return sampleItem;\r\n                     });\r\n \r\n                     this.setState({\r\n                         data: samplecollect,\r\n                         dataState,\r\n                         dataResult: process(samplecollect || [], dataState),\r\n                     });\r\n                 }\r\n             }*/\r\n        }else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n        if (bool) {\r\n            this.setState({\r\n                projectType\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        if (dateName === 'todate') {\r\n            selectedRecord[dateName] = dateValue;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[dateName] = dateValue;\r\n\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        // this.setState({ selectedRecord });\r\n        // this.reloadData(selectedRecord, true);\r\n\r\n        let dateObj = {};\r\n        let obj = convertDateValuetoString(selectedRecord['fromdate'] && selectedRecord['fromdate'] || this.props.Login.masterData.FromDate, selectedRecord['todate'] && selectedRecord['todate'] || this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate: fromDate,\r\n                toDate: toDate,\r\n                nprojecttypecode: this.props.Login.masterData.selectedProjectType && this.props.Login.masterData.selectedProjectType.value || -1\r\n            }\r\n\r\n        };\r\n        this.props.getSampleProcessing(inputParam);\r\n    }\r\n\r\n    reloadData = () => {\r\n        //this.searchRef.current.value = \"\";\r\n        let fromDate = this.props.Login.masterData.FromDate;\r\n        let toDate = this.props.Login.masterData.ToDate;\r\n\r\n        let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo, true);\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate: obj.fromDate,\r\n                toDate: obj.toDate,\r\n                \"nprojecttypecode\": this.props.Login.masterData.selectedProjectType.value || -1\r\n                // currentdate: isDateChange === true ? null : formatInputDate(new Date(), true)\r\n            },\r\n            classUrl: 'storagesampleprocessing',\r\n            methodUrl: \"SampleProcessing\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            userInfo: this.props.Login.userInfo,\r\n            selectedRecord: this.state.selectedRecord || {}\r\n        };\r\n        this.props.getSampleProcessing(inputParam);\r\n    }\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster,\r\n    updateStore, validateEsignCredential, getComboSampleProcessing, getBarcodeDataDetails, getSampleProcessType, getProcessduration, saveSampleProcessing,\r\n    getActiveSampleProcessingById, getSampleProcessing, validateEsignCredentialSampleProcessing\r\n})(injectIntl(SampleProcessing));"]},"metadata":{},"sourceType":"module"}