{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\product\\\\Product.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { process } from '@progress/kendo-data-query';\nimport { callService, crudMaster, updateStore, getProductComboService, validateEsignCredential, filterColumnData, getProductDetail, addProductFile, viewAttachment } from '../../actions';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport AddProduct from './AddProduct';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport { getControlMap, showEsign, validateEmail, validatePhoneNumber, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, Lims_JSON_stringify } from '../../components/CommonScript';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport Esign from '../audittrail/Esign';\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport './product.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport ProductFileTab from './ProductFileTab';\nimport AddProductFile from './AddProductFile';\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openChildModal = this.props.Login.openChildModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedId = this.props.Login.selectedId;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          openChildModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        openChildModal = false;\n        selectedRecord = {};\n        selectedId = null;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          openChildModal,\n          loadEsign,\n          selectedRecord,\n          selectedId\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropProductFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\" //fileToDelete:file.name \n\n      });\n    };\n\n    this.onInputOnChange = (event, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else if (event.target.type === \"radio\") {\n        selectedRecord[event.target.name] = optional;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      ;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.confirmDelete = (deleteParam, deleteId) => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteRecord(deleteParam, deleteId));\n    };\n\n    this.deleteRecord = (deleteParam, ncontrolCode) => {\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"Product\",\n        //this.props.Login.inputParam.methodUrl,\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: {\n          //[this.props.Login.inputParam.methodUrl.toLowerCase()]: this.props.Login.masterData.SelectedProduct,\n          [\"product\"]: this.props.Login.masterData.SelectedProduct,\n          \"userinfo\": this.props.Login.userInfo\n        },\n        operation: deleteParam.operation,\n        dataState: this.state.dataState,\n        postParam: {\n          inputListName: \"Product\",\n          selectedObject: \"SelectedProduct\",\n          primaryKeyField: \"nproductcode\",\n          primaryKeyValue: this.props.Login.masterData.SelectedProduct.nproductcode,\n          fetchUrl: \"product/getProduct\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        }\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode ? deleteParam.ncontrolCode : ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n            operation: deleteParam.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      tabMap.set(\"IDS_FILE\", /*#__PURE__*/React.createElement(ProductFileTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        deleteRecord: this.deleteFileRecord,\n        productFile: this.props.Login.masterData.productFile || [],\n        getAvailableData: this.props.getAvailableData,\n        addProductFile: this.props.addProductFile,\n        viewProductFile: this.viewProductFile,\n        defaultRecord: this.defaultRecord,\n        screenName: this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \" + this.props.intl.formatMessage({\n          id: \"IDS_FILE\"\n        })),\n        genericLabel: this.props.Login.genericLabel,\n        settings: this.props.Login.settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 9\n        }\n      }));\n      return tabMap;\n    };\n\n    this.viewProductFile = filedata => {\n      const inputParam = {\n        inputData: {\n          productfile: filedata,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"product\",\n        operation: \"view\",\n        methodUrl: \"AttachedProductFile\",\n        screenName: this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \" + this.props.intl.formatMessage({\n          id: \"IDS_FILE\"\n        }))\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.deleteFileRecord = productparam => {\n      let inputParam = {}; //if (this.props.Login.screenName === 'Product File') {\n\n      inputParam = {\n        classUrl: \"product\",\n        methodUrl: productparam.methodUrl,\n        inputData: {\n          [productparam.methodUrl.toLowerCase()]: productparam.selectedRecord,\n          \"userinfo\": this.props.Login.userInfo\n        },\n        operation: productparam.operation,\n        //dataState: this.state.dataState,\n        //dataStateMaterial: this.state.dataStateMaterial\n        dataState: this.state.dataState\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, productparam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openChildModal: true,\n            screenName: this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \" + this.props.intl.formatMessage({\n              id: \"IDS_FILE\"\n            })),\n            operation: productparam.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\n      } //}\n\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: this.props.Login.inputParam.methodUrl,\n        displayName: this.props.Login.inputParam.displayName,\n        userInfo: this.props.Login.userInfo\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.onSaveProductFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let productFileArray = [];\n      let productFile = {\n        nproductcode: this.props.Login.masterData.SelectedProduct.nproductcode,\n        nproductfilecode: selectedRecord.nproductfilecode ? selectedRecord.nproductfilecode : 0,\n        nstatus: transactionStatus.ACTIVE,\n        nattachmenttypecode,\n        ndefaultstatus: selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] ? selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] : 4\n      };\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, productFile);\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== undefined ? selectedRecord.ssystemfilename.split('.') : create_UUID();\n            const filesystemfileext = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== undefined ? file.name.split('.')[ssystemfilename.length - 1] : fileExtension;\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.nproductfilecode && selectedRecord.nproductfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\n            tempData[\"sfilename\"] = Lims_JSON_stringify(file.name.trim(), false);\n            tempData[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\", false);\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            productFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          productFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename, false);\n          productFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\", false);\n          productFile[\"nlinkcode\"] = transactionStatus.NA;\n          productFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          productFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          productFileArray.push(productFile);\n        }\n      } else {\n        productFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.slinkfilename.trim(), false);\n        productFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\", false);\n        productFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n        productFile[\"ssystemfilename\"] = \"\";\n        productFile[\"nfilesize\"] = 0;\n        productFileArray.push(productFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"productfile\", JSON.stringify(productFileArray)); // formData.append(\"userinfo\", JSON.stringify(this.props.userInfo));\n\n      let selectedId = null;\n      let postParam = undefined;\n\n      if (this.props.Login.operation === \"update\") {\n        // edit\n        postParam = {\n          inputListName: \"Product\",\n          selectedObject: \"SelectedProduct\",\n          primaryKeyField: \"nproductcode\"\n        };\n        selectedId = selectedRecord[\"nproductfilecode\"];\n      }\n\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\n            smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename)\n          }\n        },\n        displayName: this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"product\",\n        saveType,\n        formRef,\n        methodUrl: \"ProductFile\",\n        postParam\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      //add / edit            \n      let inputData = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let dataState = undefined;\n      let selectedId = null;\n      let postParam = undefined;\n\n      if (this.props.Login.operation === \"update\") {\n        postParam = {\n          inputListName: \"Product\",\n          selectedObject: \"SelectedProduct\",\n          primaryKeyField: \"nproductcode\",\n          primaryKeyValue: this.props.Login.selectedRecord.nproductcode,\n          fetchUrl: \"product/getActiveProductById\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          },\n          masterData: this.props.Login.masterData\n        }; // edit\n\n        dataState = this.state.dataState; // inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = JSON.parse(JSON.stringify(this.state.selectedRecord));\n\n        inputData[\"product\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\n        selectedId = this.props.Login.selectedRecord.nproductcode;\n      } else {\n        //add               \n        //inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\n        inputData[\"product\"] = {\n          \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n        };\n      }\n\n      if (inputData[\"product\"].hasOwnProperty('esignpassword')) {\n        if (inputData[\"product\"]['esignpassword'] === '') {\n          delete inputData[\"product\"]['esigncomments'];\n          delete inputData[\"product\"]['esignpassword'];\n        }\n      }\n\n      inputData[\"product\"][\"ndefaultstatus\"] = this.state.selectedRecord[\"ndefaultstatus\"] ? this.state.selectedRecord[\"ndefaultstatus\"] : transactionStatus.NO;\n      inputData[\"product\"][\"nproductcatcode\"] = this.state.selectedRecord[\"nproductcatcode\"] ? this.state.selectedRecord[\"nproductcatcode\"].value : \"\";\n      inputData[\"product\"][\"sproductname\"] = this.state.selectedRecord[\"sproductname\"] ? this.state.selectedRecord[\"sproductname\"] : \"\";\n      inputData[\"product\"][\"sdescription\"] = this.state.selectedRecord[\"sdescription\"] ? this.state.selectedRecord[\"sdescription\"] : \"\";\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"Product\",\n        //this.props.Login.inputParam.methodUrl,\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: inputData,\n        selectedId,\n        dataState,\n        operation: this.props.Login.operation,\n        saveType,\n        postParam,\n        formRef,\n        searchRef: this.searchRef\n      };\n      const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n\n      if (esignNeeded) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.validateEsign = () => {\n      let modalName = this.props.Login.screenName === this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \" + this.props.intl.formatMessage({\n        id: \"IDS_FILE\"\n      })) ? \"openChildModal\" : \"openModal\";\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, modalName);\n    };\n\n    this.formRef = React.createRef();\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      dataState: _dataState,\n      userRoleControlRights: [],\n      controlMap: new Map()\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.extractedColumnList = [{\n      \"idsName\": this.props.Login.genericLabel ? this.props.Login.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : \"IDS_PRODUCTCATEGORY\",\n      \"dataField\": \"sproductcatname\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": this.props.Login.genericLabel ? this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : \"IDS_PRODUCT\",\n      \"dataField\": \"sproductname\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_DESCRIPTION\",\n      \"dataField\": \"sdescription\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_DISPLAYSTATUS\",\n      \"dataField\": \"sdisplaystatus\",\n      \"width\": \"200px\"\n    }];\n    this.productFileFTP = [{\n      \"idsName\": \"IDS_FILE\",\n      \"dataField\": \"sfilename\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }];\n    this.productFileLink = [{\n      \"idsName\": \"IDS_FILENAME\",\n      \"dataField\": \"slinkfilename\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }, {\n      \"idsName\": \"IDS_LINKNAME\",\n      \"dataField\": \"nlinkcode\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    this.searchFieldList = [\"sproductcatname\", \"sproductname\", \"sdescription\", \"sdisplaystatus\"];\n  } // dataStateChange = (event) => {\n  //     this.setState({\n  //         dataResult: process(this.state.data, event.dataState),\n  //         dataState: event.dataState\n  //     });\n  // }\n\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    const addId = this.props.Login.inputParam && this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl)) && this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\n    const editId = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl)) && this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\n    const deleteId = this.props.Login.inputParam && this.state.controlMap.has(\"Delete\".concat(this.props.Login.inputParam.methodUrl)) && this.state.controlMap.get(\"Delete\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\n    const addParam = {\n      screenName: this.props.Login.genericLabel ? this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : \"IDS_PRODUCT\",\n      primaryeyField: \"nproductcode\",\n      primaryKeyValue: undefined,\n      operation: \"create\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: addId\n    }; // const editParam = {\n    //     screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), operation: \"update\",\n    //     primaryKeyField: \"nproductcode\", inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editId\n    // };\n\n    const editParam = {\n      screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n      operation: \"update\",\n      primaryKeyName: \"nproductcode\",\n      masterData: this.props.Login.masterData,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: editId,\n      inputListName: \"Product\",\n      selectedObject: \"SelectedProduct\"\n    };\n    const deleteParam = {\n      operation: \"delete\"\n    };\n    const filterParam = {\n      inputListName: \"Product\",\n      selectedObject: \"SelectedProduct\",\n      primaryKeyField: \"nproductcode\",\n      fetchUrl: \"product/getProduct\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const mandatoryFileFields = [];\n\n    if (this.props.Login.screenName === (this.props.Login.genericLabel ? this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \" + this.props.intl.formatMessage({\n      id: \"IDS_FILE\"\n    })) : \"IDS_PRODUCTFILE\")) {\n      if (this.state.selectedRecord.nattachmenttypecode === attachmentType.FTP) {\n        this.productFileFTP.forEach(item => item.mandatory === true ? mandatoryFileFields.push(item) : \"\");\n      } else {\n        this.productFileLink.forEach(item => item.mandatory === true ? mandatoryFileFields.push(item) : \"\");\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster // screenName={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\n    , {\n      screenName: this.props.Login.genericLabel ? this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : \"IDS_PRODUCT\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Product,\n      getMasterDetail: product => this.props.getProductDetail(product, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.SelectedProduct,\n      primaryKeyField: \"nproductcode\",\n      mainField: \"sproductname\",\n      firstField: \"sproductcatname\",\n      secondField: \"sdisplaystatus\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getProductComboService(addParam),\n      isMultiSelecct: false,\n      hidePaging: false,\n      isClearSearch: this.props.Login.isClearSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 33\n      }\n    }, this.props.Login.masterData.Product && this.props.Login.masterData.Product.length > 0 && this.props.Login.masterData.SelectedProduct ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 49\n      }\n    }, this.props.Login.masterData.SelectedProduct.sproductname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editProduct\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      onClick: () => this.props.getProductComboService(editParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteProduct\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.confirmDelete(deleteParam, deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 65\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DESCRIPTION\",\n      message: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedProduct.sdescription)))), /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(CustomTabs, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 57\n      }\n    })))))) : \"\"))))), this.props.Login.openModal || this.props.Login.openChildModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.screenName === this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \" + this.props.intl.formatMessage({\n        id: \"IDS_FILE\"\n      })) ? // show ={this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({id : \"IDS_FILE\"})) ?\n      this.props.Login.openChildModal : this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.Login.screenName === this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \" + this.props.intl.formatMessage({\n        id: \"IDS_FILE\"\n      })) ? this.onSaveProductFile : this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.screenName === this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \" + this.props.intl.formatMessage({\n        id: \"IDS_FILE\"\n      })) ? mandatoryFileFields : [{\n        \"idsName\": this.props.Login.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": \"nproductcatcode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": \"sproductname\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }],\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 29\n        }\n      }) : this.props.Login.openChildModal && this.props.Login.screenName === this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \" + this.props.intl.formatMessage({\n        id: \"IDS_FILE\"\n      })) ? /*#__PURE__*/React.createElement(AddProductFile, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropProductFile,\n        onDropAccepted: this.onDropAccepted,\n        deleteAttachment: this.deleteAttachment,\n        actionType: this.state.actionType,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.Login.linkMaster,\n        editFiles: this.props.editFiles,\n        maxSize: 20 // maxFiles={this.props.operation === \"update\" ? 1 : 3}\n        // multiple={this.props.operation === \"update\" ? false : true}\n        ,\n        maxFiles: 1,\n        multiple: false // label={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPEFILE\" })}\n        ,\n        label: this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \" + this.props.intl.formatMessage({\n          id: \"IDS_FILE\"\n        })),\n        name: \"productfilename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(AddProduct, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        productCategoryList: this.props.Login.productCategoryList || [],\n        operation: this.props.Login.operation,\n        genericLabel: this.props.Login.genericLabel,\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        this.setState({\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData //dataResult: process(this.props.Login.masterData, this.state.dataState),\n\n        });\n      } else {\n        let {\n          dataState\n        } = this.state;\n\n        if (this.props.Login.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n          };\n        }\n\n        this.setState({\n          data: this.props.Login.masterData,\n          selectedRecord: this.props.Login.selectedRecord //dataResult: process(this.props.Login.masterData, dataState), dataState\n\n        });\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  getProductComboService,\n  updateStore,\n  validateEsignCredential,\n  filterColumnData,\n  getProductDetail,\n  addProductFile,\n  viewAttachment\n})(injectIntl(Product));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/product/Product.jsx"],"names":["React","Component","connect","process","callService","crudMaster","updateStore","getProductComboService","validateEsignCredential","filterColumnData","getProductDetail","addProductFile","viewAttachment","Row","Col","Card","Nav","FormGroup","FormLabel","toast","injectIntl","FormattedMessage","AddProduct","SlideOutModal","getControlMap","showEsign","validateEmail","validatePhoneNumber","onDropAttachFileList","deleteAttachmentDropZone","create_UUID","Lims_JSON_stringify","DEFAULT_RETURN","Esign","transactionStatus","attachmentType","ListWrapper","DataGrid","FontAwesomeIcon","faPencilAlt","faTrashAlt","faPlus","ListMaster","ReadOnlyText","ContentPanel","ConfirmMessage","CustomTabs","ProductFileTab","AddProductFile","Product","constructor","props","closeModal","loadEsign","Login","openModal","openChildModal","selectedRecord","selectedId","operation","updateInfo","typeName","data","onDropProductFile","attachedFiles","fieldName","maxSize","state","setState","actionType","deleteAttachment","event","file","onInputOnChange","optional","target","type","name","checked","YES","NO","value","onComboChange","comboData","confirmDelete","deleteParam","deleteId","confirmMessage","confirm","intl","formatMessage","id","deleteRecord","ncontrolCode","inputParam","classUrl","methodUrl","displayName","inputData","masterData","SelectedProduct","userInfo","dataState","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","nproductcode","fetchUrl","fecthInputObject","userinfo","userRoleControlRights","nformcode","screenData","screenName","genericLabel","slanguagetypecode","onTabChange","tabProps","tabDetail","tabMap","Map","set","controlMap","deleteFileRecord","productFile","getAvailableData","viewProductFile","defaultRecord","concat","settings","filedata","productfile","productparam","toLowerCase","reloadData","searchRef","current","onSaveProductFile","saveType","formRef","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","productFileArray","nproductfilecode","nstatus","ACTIVE","ndefaultstatus","LINK","formData","FormData","FTP","Array","isArray","length","forEach","index","tempData","Object","assign","splittedFileName","split","fileExtension","ssystemfilename","undefined","filesystemfileext","uniquefilename","trim","sdescription","NA","size","append","push","nfilesize","slinkfilename","slinkdescription","nlinkcode","JSON","stringify","sformname","smodulename","isFileupload","onSaveClick","parse","nmastersitecode","hasOwnProperty","esignNeeded","validateEsign","modalName","sreason","nreasoncode","spredefinedreason","label","password","createRef","skip","take","parseInt","masterStatus","error","dataResult","extractedColumnList","productFileFTP","productFileLink","searchFieldList","getDerivedStateFromProps","warn","render","addId","has","get","ncontrolcode","editId","addParam","primaryeyField","editParam","primaryKeyName","filterParam","mandatoryFileFields","item","mandatory","searchedData","product","isClearSearch","sproductname","indexOf","onDropAccepted","linkMaster","editFiles","productCategoryList","componentDidUpdate","previousProps","values","map","componentWillUnmount","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport {\r\n    callService, crudMaster, updateStore, getProductComboService, validateEsignCredential, filterColumnData,getProductDetail,addProductFile,viewAttachment\r\n} from '../../actions'\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { injectIntl,FormattedMessage } from 'react-intl';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport AddProduct from './AddProduct';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { getControlMap,showEsign, validateEmail, validatePhoneNumber, onDropAttachFileList, deleteAttachmentDropZone, create_UUID,Lims_JSON_stringify } from '../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport Esign from '../audittrail/Esign';\r\nimport { transactionStatus ,attachmentType} from '../../components/Enumeration';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport './product.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport ProductFileTab from './ProductFileTab';\r\nimport AddProductFile from './AddProductFile';\r\n\r\nclass Product extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.extractedColumnList = [\r\n            { \"idsName\": this.props.Login.genericLabel ? this.props.Login.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : \"IDS_PRODUCTCATEGORY\" , \"dataField\": \"sproductcatname\", \"width\": \"200px\" },\r\n            { \"idsName\": this.props.Login.genericLabel ? this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : \"IDS_PRODUCT\" , \"dataField\": \"sproductname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_DISPLAYSTATUS\", \"dataField\": \"sdisplaystatus\", \"width\": \"200px\" }\r\n        ];\r\n        this.productFileFTP = [\r\n            { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"file\"}\r\n        ];\r\n\r\n        this.productFileLink = [\r\n            { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n            { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n        this.searchFieldList = [\"sproductcatname\",\"sproductname\", \"sdescription\",\"sdisplaystatus\"];\r\n    }\r\n\r\n    // dataStateChange = (event) => {\r\n    //     this.setState({\r\n    //         dataResult: process(this.state.data, event.dataState),\r\n    //         dataState: event.dataState\r\n    //     });\r\n    // }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openChildModal = this.props.Login.openChildModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openChildModal=false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            openChildModal=false;\r\n            selectedRecord = {};\r\n            selectedId=null\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal,openChildModal, loadEsign, selectedRecord, selectedId }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const addId = this.props.Login.inputParam && this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n        const editId = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n        const deleteId = this.props.Login.inputParam && this.state.controlMap.has(\"Delete\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Delete\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n        const addParam = {\r\n            screenName: this.props.Login.genericLabel ? this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : \"IDS_PRODUCT\" , primaryeyField: \"nproductcode\", primaryKeyValue: undefined,\r\n            operation: \"create\", inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: addId\r\n        };\r\n\r\n        // const editParam = {\r\n        //     screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), operation: \"update\",\r\n        //     primaryKeyField: \"nproductcode\", inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editId\r\n        // };\r\n        const editParam = {\r\n            screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], operation: \"update\", primaryKeyName: \"nproductcode\",\r\n            masterData: this.props.Login.masterData,inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: editId, inputListName: \"Product\", selectedObject: \"SelectedProduct\"\r\n        };\r\n\r\n        const deleteParam = { operation: \"delete\" };\r\n\r\n        const filterParam = {\r\n            inputListName: \"Product\", selectedObject: \"SelectedProduct\", primaryKeyField: \"nproductcode\",\r\n            fetchUrl: \"product/getProduct\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n        };\r\n\r\n        const mandatoryFileFields = [];\r\n        if (this.props.Login.screenName === (this.props.Login.genericLabel ? this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({id : \"IDS_FILE\"})) : \"IDS_PRODUCTFILE\" )){\r\n            if(this.state.selectedRecord.nattachmenttypecode === attachmentType.FTP){\r\n                this.productFileFTP.forEach(item => item.mandatory === true ?\r\n                    mandatoryFileFields.push(item) : \"\"\r\n                );\r\n            }\r\n            else {\r\n                this.productFileLink.forEach(item => item.mandatory === true ?\r\n                    mandatoryFileFields.push(item) : \"\"\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {/* <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={\"nproductcode\"}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    fetchRecord={this.props.getProductComboService}\r\n                                    editParam={editParam}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    deleteParam={deleteParam}\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    pageable={true}\r\n                                    scrollable={'scrollable'}\r\n                                    gridHeight={'600px'}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    addRecord={() => this.props.getProductComboService(addParam)}\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row> */}\r\n                <div className=\"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\">\r\n                <Row noGutters>\r\n                    <Col md={4}>\r\n                        {/* <Row noGutters>\r\n                            <Col md={12}> */}\r\n                            {/* <div className=\"list-fixed-wrap\"> */}\r\n                                <ListMaster\r\n                                    // screenName={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                                    screenName= {this.props.Login.genericLabel ? this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : \"IDS_PRODUCT\" }\r\n                                    masterData={this.props.Login.masterData}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Product}\r\n                                    getMasterDetail={(product) => this.props.getProductDetail(product, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                    selectedMaster={this.props.Login.masterData.SelectedProduct}\r\n                                    primaryKeyField=\"nproductcode\"\r\n                                    mainField=\"sproductname\"\r\n                                    firstField=\"sproductcatname\"\r\n                                    secondField=\"sdisplaystatus\"\r\n                                    filterColumnData={this.props.filterColumnData}\r\n                                    filterParam={filterParam}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    addId={addId}\r\n                                    searchRef={this.searchRef}\r\n                                    reloadData={this.reloadData}\r\n                                    openModal={() => this.props.getProductComboService(addParam)}\r\n                                    isMultiSelecct={false}\r\n                                    hidePaging={false}\r\n                                    isClearSearch={this.props.Login.isClearSearch}\r\n                                />\r\n                            {/* </div>\r\n                        </Col></Row> */}\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        {/* <Row>\r\n                            <Col md={12}> */}\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.Product && this.props.Login.masterData.Product.length > 0 && this.props.Login.masterData.SelectedProduct ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                \r\n                                                <Card.Title className=\"product-title-main\">\r\n                                                    {this.props.Login.masterData.SelectedProduct.sproductname}\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle>\r\n                                                    <div className=\"d-flex product-category\">\r\n                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                            \r\n                                                        </h2>\r\n                                                        \r\n                                                        <div className=\"d-inline\">\r\n                                                            <Nav.Link name=\"editProduct\" hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                \r\n                                                                onClick={() => this.props.getProductComboService(editParam)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                            </Nav.Link>\r\n\r\n                                                            <Nav.Link name=\"deleteProduct\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                              \r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                onClick={() => this.confirmDelete(deleteParam,deleteId)}>\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                               \r\n                                                            </Nav.Link>\r\n                                                            \r\n                                                            \r\n                                                        </div>\r\n                                                        \r\n                                                    </div>\r\n\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body className=\"form-static-wrap\">\r\n                                                \r\n\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_DESCRIPTION\" message=\"Description\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedProduct.sdescription}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                  \r\n                                                </Row>\r\n                                                \r\n                                                <Row className=\"no-gutters\">\r\n                                                <Col md={12}>\r\n                                                    <Card className=\"at-tabs\">\r\n                                                        <CustomTabs tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n                                                \r\n                                            \r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col></Row>\r\n                    {/* </Col>\r\n                </Row> */}\r\n            </div>\r\n                {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n                {this.props.Login.openModal || this.props.Login.openChildModal ?\r\n                    <SlideOutModal\r\n                        show={this.props.Login.screenName === this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({id : \"IDS_FILE\"})) ?\r\n                        // show ={this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({id : \"IDS_FILE\"})) ?\r\n                        this.props.Login.openChildModal:\r\n                        this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.props.Login.screenName === this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({id : \"IDS_FILE\"}))  ? this.onSaveProductFile: this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenName === this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({id : \"IDS_FILE\"})) ? \r\n                        mandatoryFileFields:\r\n                        [\r\n                            { \"idsName\": this.props.Login.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"dataField\": \"nproductcatcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                            { \"idsName\": this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"dataField\": \"sproductname\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }]}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.openChildModal&&\r\n                            this.props.Login.screenName === this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({id : \"IDS_FILE\"}))  ? \r\n                                \r\n                            <AddProductFile\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            onDrop={this.onDropProductFile}\r\n                            onDropAccepted={this.onDropAccepted}\r\n                            deleteAttachment={this.deleteAttachment}\r\n                            actionType={this.state.actionType}\r\n                            onComboChange={this.onComboChange}\r\n                            linkMaster={this.props.Login.linkMaster}\r\n                            editFiles={this.props.editFiles}\r\n                            maxSize={20}\r\n                            // maxFiles={this.props.operation === \"update\" ? 1 : 3}\r\n                            // multiple={this.props.operation === \"update\" ? false : true}\r\n                            maxFiles={1}\r\n                            multiple={false}\r\n                            // label={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPEFILE\" })}\r\n                            \r\n                            label={this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({ id: \"IDS_FILE\"}))}\r\n                            name=\"productfilename\"\r\n                        />\r\n                                    \r\n    \r\n                                : <AddProduct\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                productCategoryList={this.props.Login.productCategoryList || []}\r\n                                operation={this.props.Login.operation}\r\n                                genericLabel={this.props.Login.genericLabel}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                inputParam={this.props.Login.inputParam}\r\n                            />}\r\n                    />\r\n                    : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    onDropProductFile = (attachedFiles, fieldName, maxSize) => {\r\n\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    //dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n                this.setState({\r\n                    data: this.props.Login.masterData, selectedRecord: this.props.Login.selectedRecord,\r\n                    //dataResult: process(this.props.Login.masterData, dataState), dataState\r\n                });\r\n            }\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event,optional) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else if (event.target.type === \"radio\"){\r\n            selectedRecord[event.target.name] = optional;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;;\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n    confirmDelete = (deleteParam,deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(deleteParam, deleteId));\r\n    }\r\n    deleteRecord = (deleteParam, ncontrolCode) => {\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Product\",//this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                //[this.props.Login.inputParam.methodUrl.toLowerCase()]: this.props.Login.masterData.SelectedProduct,\r\n                [\"product\"]: this.props.Login.masterData.SelectedProduct,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: deleteParam.operation,\r\n            dataState: this.state.dataState,\r\n            postParam: { inputListName: \"Product\", selectedObject: \"SelectedProduct\", primaryKeyField: \"nproductcode\",\r\n            primaryKeyValue:this.props.Login.masterData.SelectedProduct.nproductcode,\r\n            fetchUrl: \"product/getProduct\", fecthInputObject: { userinfo: this.props.Login.userInfo } }\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode ? deleteParam.ncontrolCode : ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName:this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\r\n                    operation: deleteParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    tabDetail = () => {\r\n      \r\n        const tabMap = new Map();\r\n\r\n       tabMap.set(\"IDS_FILE\",\r\n        <ProductFileTab\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            userInfo={this.props.Login.userInfo}\r\n            inputParam={this.props.Login.inputParam}\r\n            deleteRecord={this.deleteFileRecord}\r\n            productFile={this.props.Login.masterData.productFile || []}\r\n            getAvailableData={this.props.getAvailableData}\r\n            addProductFile={this.props.addProductFile}\r\n            viewProductFile={this.viewProductFile}\r\n            defaultRecord={this.defaultRecord}\r\n            screenName={this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({id : \"IDS_FILE\"}))}\r\n            genericLabel={this.props.Login.genericLabel}\r\n            settings={this.props.Login.settings}\r\n        />);\r\n        return tabMap;\r\n    }\r\n\r\n    viewProductFile = (filedata) => {\r\n        const inputParam = {\r\n            inputData: {\r\n                productfile: filedata,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"product\",\r\n            operation: \"view\",\r\n            methodUrl: \"AttachedProductFile\",\r\n            screenName: this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({id : \"IDS_FILE\"}))\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n\r\n    deleteFileRecord = (productparam) => {\r\n       \r\n        let inputParam = {};\r\n        //if (this.props.Login.screenName === 'Product File') {\r\n            inputParam = {\r\n                classUrl: \"product\",\r\n                methodUrl: productparam.methodUrl,\r\n                inputData: {\r\n                    [productparam.methodUrl.toLowerCase()]: productparam.selectedRecord,\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n\r\n                },\r\n                operation: productparam.operation,\r\n                //dataState: this.state.dataState,\r\n                //dataStateMaterial: this.state.dataStateMaterial\r\n                dataState: this.state.dataState\r\n            }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, productparam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openChildModal: true, screenName: this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({id : \"IDS_FILE\"})) , operation: productparam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\r\n        }\r\n    //}\r\n}\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        this.props.callService(inputParam);\r\n    }\r\n    onSaveProductFile=(saveType, formRef) =>{\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let productFileArray = [];\r\n        let productFile = {\r\n            nproductcode: this.props.Login.masterData.SelectedProduct.nproductcode,\r\n            nproductfilecode: selectedRecord.nproductfilecode ? selectedRecord.nproductfilecode : 0,\r\n            nstatus: transactionStatus.ACTIVE,\r\n            nattachmenttypecode,\r\n            ndefaultstatus: selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] ? selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] : 4\r\n        };\r\n        const formData = new FormData();\r\n        if (nattachmenttypecode === attachmentType.FTP) {\r\n            if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const tempData = Object.assign({}, productFile);\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const ssystemfilename = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !==undefined ? selectedRecord.ssystemfilename.split('.') :  create_UUID();\r\n                    const filesystemfileext = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !==undefined  ? file.name.split('.')[ssystemfilename.length - 1] : fileExtension;\r\n                    const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.nproductfilecode && selectedRecord.nproductfilecode > 0\r\n                        && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext:  create_UUID() + '.' + fileExtension : \"\";\r\n                    tempData[\"sfilename\"] =Lims_JSON_stringify(file.name.trim(),false);\r\n                    tempData[\"sdescription\"] =Lims_JSON_stringify( selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\",false);\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    tempData[\"nfilesize\"] = file.size;\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    productFileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                productFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename,false);\r\n                productFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\",false);\r\n                productFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                productFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                productFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                productFileArray.push(productFile);\r\n            }\r\n        } else {\r\n            productFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.slinkfilename.trim(),false);\r\n            productFile[\"sdescription\"] =Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\",false);\r\n            productFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            productFile[\"ssystemfilename\"] = \"\";\r\n            productFile[\"nfilesize\"] = 0;\r\n            productFileArray.push(productFile);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"productfile\", JSON.stringify(productFileArray));\r\n        // formData.append(\"userinfo\", JSON.stringify(this.props.userInfo));\r\n\r\n\r\n\r\n        let selectedId = null;\r\n        let postParam = undefined;\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"Product\", selectedObject: \"SelectedProduct\", primaryKeyField: \"nproductcode\" };\r\n            selectedId = selectedRecord[\"nproductfilecode\"];\r\n        }\r\n        const inputParam = {\r\n           inputData: { \"userinfo\": {...this.props.Login.userInfo,\r\n            sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n            smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename)} },\r\n            displayName:this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\r\n            formData: formData,\r\n            isFileupload: true,\r\n            operation: this.props.Login.operation,\r\n            classUrl: \"product\",\r\n            saveType, formRef, methodUrl: \"ProductFile\", postParam\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\r\n        }\r\n        \r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        //add / edit            \r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let dataState = undefined;\r\n        let selectedId = null;\r\n        let postParam = undefined;\r\n        if (this.props.Login.operation === \"update\") {\r\n            postParam = { inputListName: \"Product\", selectedObject: \"SelectedProduct\", primaryKeyField: \"nproductcode\",\r\n        primaryKeyValue: this.props.Login.selectedRecord.nproductcode,\r\n         fetchUrl: \"product/getActiveProductById\", fecthInputObject: {userinfo: this.props.Login.userInfo },\r\n         masterData: this.props.Login.masterData \r\n      }\r\n            // edit\r\n            dataState = this.state.dataState;\r\n           // inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n           inputData[\"product\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n            selectedId = this.props.Login.selectedRecord.nproductcode;\r\n        } else {\r\n            //add               \r\n            //inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n            inputData[\"product\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n        }\r\n        if (inputData[\"product\"].hasOwnProperty('esignpassword')) {\r\n            if (inputData[\"product\"]['esignpassword'] === '') {\r\n                delete inputData[\"product\"]['esigncomments']\r\n                delete inputData[\"product\"]['esignpassword']\r\n            }\r\n        }\r\n\r\n        inputData[\"product\"][\"ndefaultstatus\"] = this.state.selectedRecord[\"ndefaultstatus\"] ? this.state.selectedRecord[\"ndefaultstatus\"] : transactionStatus.NO;\r\n        inputData[\"product\"][\"nproductcatcode\"] = this.state.selectedRecord[\"nproductcatcode\"] ? this.state.selectedRecord[\"nproductcatcode\"].value : \"\";\r\n        inputData[\"product\"][\"sproductname\"] = this.state.selectedRecord[\"sproductname\"] ? this.state.selectedRecord[\"sproductname\"] : \"\";\r\n        inputData[\"product\"][\"sdescription\"] = this.state.selectedRecord[\"sdescription\"] ? this.state.selectedRecord[\"sdescription\"] : \"\";\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Product\",//this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData, selectedId, dataState,\r\n            operation: this.props.Login.operation, saveType,postParam, formRef, searchRef: this.searchRef\r\n        }\r\n\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n    validateEsign = () => {\r\n        let modalName = this.props.Login.screenName === this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({id : \"IDS_FILE\"})) ? \"openChildModal\" : \"openModal\";\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, modalName);\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, getProductComboService,\r\n    updateStore, validateEsignCredential, filterColumnData,getProductDetail,addProductFile,viewAttachment\r\n})(injectIntl(Product));"]},"metadata":{},"sourceType":"module"}