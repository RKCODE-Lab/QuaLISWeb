{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var _this=this;import React from'react';import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{filterRecordBasedOnTwoArrays,sortData,rearrangeDateFormat,convertDateTimetoString,fillRecordBasedOnCheckBoxSelection,getRecordBasedOnPrimaryKeyName,updatedObjectWithNewElement,replaceUpdatedObject,parentChildComboLoad,getSameRecordFromTwoArrays,constructjsonOptionList,constructjsonOptionDefault,childComboLoad,filterRecordBasedOnPrimaryKeyName,reArrangeArrays,childComboLoadForEdit}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{intl}from'../components/App';import{initRequest}from'./LoginAction';import{RegistrationSubType,RegistrationType,transactionStatus}from'../components/Enumeration';import{crudMaster,postCRUDOrganiseTransSearch}from'./ServiceAction';//import { getTestChildTabDetail } from './index.js'\nimport{constructOptionList}from'../components/CommonScript';import{Operators,TextFilter,NumericFilter,BooleanFilter,DateFilter,EnumFilter,EnumFilterProps}from\"@progress/kendo-react-data-tools\";import{ComboBox}from\"@progress/kendo-react-dropdowns\";export function getSampleTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getRegTypeBySampleType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getSubSampleChildTabDetail(inputData){return function(dispatch){if(inputData.ntransactionsamplecode.length>0){var inputParamData={ntransactionsamplecode:inputData.ntransactionsamplecode,userinfo:inputData.userinfo};var url=null;switch(inputData.activeSubSampleTab){case\"IDS_SUBSAMPLEATTACHMENTS\":url=\"attachment/getSubSampleAttachment\";break;case\"IDS_SUBSAMPLECOMMENTS\":url=\"comments/getSubSampleComment\";break;default:url=null;break;}if(url!==null){dispatch(initRequest(true));rsapi.post(url,inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{selectedSubSample:inputData.selectedSubSample// selectedTestCode: inputData.ntransactiontestcode,\n}),loading:false,showFilter:false,activeSubSampleTab:inputData.activeSubSampleTab,screenName:inputData.screenName}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{//toast.warn(\"Please Select a Sample\");\ntoast.warn(intl.FormattedMessage({id:\"IDS_PLSSELECTASAMPLE\"}));}};}export function getRegTypeChange(Map,masterData,event,labelname){return function(dispatch){rsapi.post(\"/registration/getRegSubTypeByRegType\",Map).then(function(response){// const RegistrationSubType = response.data[\"RegistrationSubType\"];\n//  console.log(response.data);\n// RegistrationSubType.length > 0 ?\n//     selectedRecord[\"nregsubtypecode\"] = {\n//         \"value\": RegistrationSubType[0].nregsubtypecode,\n//         \"label\": RegistrationSubType[0].sregsubtypename\n//     } : selectedRecord[\"nregsubtypecode\"] = \"\";\n// const [labelname] = event.item;\nmasterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getRegSubTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getRegTemplateTypeByRegSubType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getComponentTestBySpec(Map,selectedRecord,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getComponentTestBySpec\",Map).then(function(response){var _response$data=response.data,Component=_response$data.Component,Test=_response$data.Test;var slno=Component.length>0?Component[0].slno:-1;var selectedComponent=Component.length>0?Component[0]:undefined;var SelectedTest=[];if(Object.keys(Test).length>0){SelectedTest=Test[slno];}dispatch({type:DEFAULT_RETURN,payload:{Component:Component,Test:Test,SelectedTest:SelectedTest,selectedComponent:selectedComponent,loading:false,selectedRecord:selectedRecord,popUptestDataState:{skip:0,take:10}}});}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getTestfromDB(objComponent,LoginProps,nflag){return function(dispatch){dispatch(initRequest(true));var component=_objectSpread({},objComponent);component[\"ncomponentcode\"]=objComponent[\"ncomponentcode\"]?objComponent[\"ncomponentcode\"].value:-1;component[\"nstoragelocationcode\"]=objComponent[\"nstoragelocationcode\"]?objComponent[\"nstoragelocationcode\"].value:-1;component[\"nstorageconditioncode\"]=objComponent[\"nstorageconditioncode\"]?objComponent[\"nstorageconditioncode\"].value:-1;component[\"slno\"]=LoginProps.Component?Object.keys(LoginProps.Component).length+1:0;component[\"scomponentname\"]=objComponent[\"ncomponentcode\"].label;component[\"sstoragelocationname\"]=objComponent[\"nstoragelocationcode\"]&&objComponent[\"nstoragelocationcode\"].label?objComponent[\"nstoragelocationcode\"].label:\"\";component[\"sstorageconditionname\"]=objComponent[\"nstorageconditioncode\"]&&objComponent[\"nstorageconditioncode\"].label?objComponent[\"nstorageconditioncode\"].label:\"\";component[\"ntzdmanufdate\"]=objComponent[\"ntzdmanufdate\"]?objComponent[\"ntzdmanufdate\"].value:-1;component[\"ntzdreceivedate\"]=objComponent[\"ntzdreceivedate\"]?objComponent[\"ntzdreceivedate\"].value:-1;component[\"stzdreceivedate\"]=objComponent[\"ntzdreceivedate\"]?objComponent[\"ntzdreceivedate\"].label:\"\";component[\"nplasmafilecode\"]=objComponent[\"nplasmafilecode\"]?objComponent[\"nplasmafilecode\"].value:-1;component[\"splasmafilenumber\"]=objComponent[\"nplasmafilecode\"]?objComponent[\"nplasmafilecode\"].label:\"\";var dreceiveddate=objComponent[\"dreceiveddate\"];component[\"dreceiveddate\"]=dreceiveddate;//formatInputDate(objComponent[\"dreceiveddate\"], false);\ncomponent[\"sreceiveddate\"]=convertDateTimetoString(dreceiveddate,LoginProps.userInfo);//formatInputDateWithoutT(objComponent[\"dreceiveddate\"], false);//formatDate(objComponent[\"sreceiveddate\"]);\n// rsapi.post(\"/registration/getTestfromDB\", { \"Component\": component })\nrsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:component.nspecsampletypecode,slno:component.slno}).then(function(response){var TestData=response.data;var slno=component.slno;var SelectedTest=[];var loadComponent=true;var selectComponent={};var showSaveContinue=true;var SelectedSource=[];// let openChildModal = true;\nvar selectedComponent=undefined;var parentPopUpSize=\"lg\";// selectComponent = objComponent\nif(nflag===1){loadComponent=true;objComponent[\"smanuflotno\"]=\"\";objComponent[\"dreceiveddate\"]=rearrangeDateFormat(LoginProps.userInfo,LoginProps.CurrentTime);//new Date(LoginProps.CurrentTime);\nobjComponent[\"sreceiveddate\"]=rearrangeDateFormat(LoginProps.userInfo,LoginProps.CurrentTime);//new Date(LoginProps.CurrentTime);\nselectComponent=objComponent;}else{loadComponent=false;parentPopUpSize=\"xl\";// openChildModal = false;\nshowSaveContinue=false;selectComponent=undefined;}var Test=LoginProps.Test||[];var Component=LoginProps.Component||[];Component.unshift(component);selectedComponent=component;Test[slno]=response.data;SelectedTest=TestData;dispatch({type:DEFAULT_RETURN,payload:{Component:Component,Test:Test,SelectedTest:SelectedTest,selectComponent:selectComponent,selectedComponent:selectedComponent,loadComponent:loadComponent,showSaveContinue:showSaveContinue,parentPopUpSize:parentPopUpSize,loading:false,SelectedSource:SelectedSource}});// console.log(response.data);\n}).catch(function(error){//   console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function EditComponent(Map,component,userInfo){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",Map);var timezone=rsapi.post(\"timezone/getTimeZone\");urlArray=[ComponentTestBySpec,timezone];Axios.all(urlArray).then(function(response){var lstComponentMap=constructOptionList(response[0].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var timeZoneListMap=constructOptionList(response[1].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var TimeZoneField=response[1].data;var lstComponent=lstComponentMap.get(\"OptionList\");var timeZoneList=timeZoneListMap.get(\"OptionList\");component[\"ncomponentcode\"]={label:component.scomponentname,value:component.ncomponentcode};component[\"dreceiveddate\"]=rearrangeDateFormat(userInfo,component[\"sreceiveddate\"]);component[\"scomments\"]=component[\"scomments\"];var ntzdreceivedate=component.ntzdreceivedate;if(component.ntzdreceivedate!==null&&typeof component.ntzdreceivedate===\"object\"){ntzdreceivedate=component.ntzdreceivedate.value;}component[\"ntzdreceivedate\"]=component.ntzdreceivedate?{\"label\":TimeZoneField[TimeZoneField.findIndex(function(x){return x.ntimezonecode===ntzdreceivedate;})].stimezoneid,\"value\":TimeZoneField[TimeZoneField.findIndex(function(x){return x.ntimezonecode===ntzdreceivedate;})].ntimezonecode}:\"\";dispatch({type:DEFAULT_RETURN,payload:{loadComponent:true,childoperation:\"update\",lstComponent:lstComponent,ChildscreenName:\"Component\",openChildModal:false,selectComponent:component,parentPopUpSize:\"lg\",timeZoneList:timeZoneList,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function ReloadData(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"registration/getRegistrationByFilterSubmit\",_objectSpread({},inputData.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputData.masterData),response.data);if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";//masterData['searchedTests'] = undefined\nmasterData['searchedTest']=undefined;}// let selectedFilter = inputData.selectedFilter;\n// selectedFilter[\"fromdate\"] = \"\";\n// selectedFilter[\"todate\"] = \"\";\nsortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampletake:undefined,subsampleskip:0,showSample:undefined//selectedFilter\n}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getTreeByProduct(Map,selectedRecord,comboData,inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getTreeByProduct\",Map).then(function(response){var _ref=[],Specification=_ref.Specification,AgaramTree=_ref.AgaramTree,ActiveKey=_ref.ActiveKey,FocusKey=_ref.FocusKey,OpenNodes=_ref.OpenNodes;var selectedSpec={};if(response.data[\"rtn\"]===true){Specification=constructOptionList(response.data[\"Specification\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true).get(\"OptionList\");AgaramTree=response.data[\"AgaramTree\"];ActiveKey=response.data[\"ActiveKey\"];FocusKey=response.data[\"FocusKey\"];OpenNodes=response.data[\"OpenNodes\"];//Manufacturer = response.data[\"Manufacturer\"];\nselectedSpec[\"nallottedspeccode\"]=Specification.length>0?{\"value\":Specification[0].value,\"label\":Specification[0].label,\"item\":Specification[0].item}:\"\";selectedSpec[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";selectedSpec[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;}selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedSpec);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({Specification:Specification,selectedRecord:selectedRecord,AgaramTree:AgaramTree,ActiveKey:ActiveKey,FocusKey:FocusKey,OpenNodes:OpenNodes,Test:[],SelectedTest:[],loading:false,comboData:comboData},inputParam),{},{selectedSpec:selectedSpec,Component:[],selectComponent:{},selectedComponent:{}})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export var getNewRegSpecification=function getNewRegSpecification(inputParam,masterData){return function(dispatch){if(inputParam.selectedNode!==null){dispatch(initRequest(true));rsapi.post(\"/registration/\"+inputParam.operation+inputParam.methodUrl,_objectSpread(_objectSpread({},inputParam),{},{ntreetemplatemanipulationcode:inputParam.selectedNode.ntemplatemanipulationcode})).then(function(response){sortData(response.data);var Specification=constructOptionList(response.data||[],\"nallottedspeccode\",\"sspecname\",false,false,true).get(\"OptionList\");var selectedComponent=undefined;inputParam.selectedRecord[\"nallottedspeccode\"]=Specification.length>0?{value:Specification[0].value,label:Specification[0].label,item:Specification[0].item}:\"\";inputParam.selectedRecord[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";inputParam.selectedRecord[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;dispatch({type:DEFAULT_RETURN,payload:{ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,primaryKey:inputParam.primaryKey,Specification:Specification,selectedNode:inputParam.selectedNode,selectedRecord:inputParam.selectedRecord,Test:[],selectedComponent:selectedComponent,SelectedTest:[],loading:false,showSample:undefined}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}};};export function AddComponents(Map){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",Map);var timezone=rsapi.post(\"timezone/getTimeZone\");urlArray=[ComponentTestBySpec,timezone];Axios.all(urlArray).then(function(response){var lstComponentMap=constructOptionList(response[0].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var timeZoneListMap=constructOptionList(response[1].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var lstComponent=lstComponentMap.get(\"OptionList\");var timeZoneList=timeZoneListMap.get(\"OptionList\");var dreceiveddate=null;if(lstComponent[0].item.sreceiveddate)dreceiveddate=rearrangeDateFormat(Map[\"userinfo\"],lstComponent[0].item.sreceiveddate);//new Date(lstComponent[0].item.sreceiveddate);//|| [];\nvar selectComponent={sreceiveddate:dreceiveddate,dreceiveddate:dreceiveddate,ntzdreceivedate:{\"label\":Map[\"userinfo\"].stimezoneid,\"value\":Map[\"userinfo\"].ntimezonecode},stzdreceivedate:Map[\"userinfo\"].stimezoneid,scomments:\"\",nallottedspeccode:lstComponent[0].item.nallottedspeccode};var CurrentTime=dreceiveddate;dispatch({type:DEFAULT_RETURN,payload:{loadComponent:true,lstComponent:lstComponent,dreceiveddate:dreceiveddate,ChildscreenName:\"Component\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",selectComponent:selectComponent,parentPopUpSize:\"lg\",CurrentTime:CurrentTime,timeZoneList:timeZoneList,loading:false,openPortal:true,openModal:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getTest(objComponent,LoginProps,nneedsubsample,specBasedComponent){return function(dispatch){if(Object.keys(objComponent).length>0){dispatch(initRequest(true));rsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:objComponent.nspecsampletypecode,slno:objComponent.slno,nneedsubsample:nneedsubsample,nallottedspeccode:objComponent.nallottedspeccode,specBasedComponent:specBasedComponent}).then(function(response){var TestData=response.data;var Test=LoginProps.Test||[];var componentTest=Test[objComponent.slno]?Test[objComponent.slno]:[];var TestCombined=filterRecordBasedOnTwoArrays(TestData,componentTest,\"ntestgrouptestcode\");// const lstComponentMap = constructOptionList(TestCombined|| [], \"ntestgrouptestcode\",\n//\"stestsynonym\", undefined, undefined, true);\ndispatch({type:DEFAULT_RETURN,payload:{TestCombined:TestCombined,loadTest:true,openChildModal:false,ChildscreenName:\"Test\",screenName:\"Test\",operation:\"create\",childoperation:\"create\",parentPopUpSize:\"lg\",loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTCOMPONENTTOADDTEST\"}));}};}export function addsubSample(masterData,userinfo,columnList,selectComponent,childColumnList,SubSamplecomboComponents,SubSamplewithoutCombocomponent,specBasedComponent,Map,Component,isServiceRequired,SubSamplecomboData,selectedRecord){if(isServiceRequired){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray[0]=timeZoneService;var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userinfo});urlArray[1]=actualService;if(specBasedComponent){var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent}));urlArray[2]=ComponentTestBySpec;}else{Component=Component?Component:[];var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:Component?Object.keys(Component).length+1:1,//nneedsubsample: nneedsubsample,\n// nallottedspeccode: objComponent.nallottedspeccode,\nspecBasedComponent:specBasedComponent});urlArray[2]=TestGet;}Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userinfo.stimezoneid,value:userinfo.ntimezonecode};var newcomboData=parentChildComboLoad(columnList,response[1].data,selectComponent,childColumnList,SubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo);var TestCombined=[];var lstComponent=[];if(specBasedComponent){var lstComponentMap=constructOptionList(response[2].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");}else{TestCombined=response[2].data;}var comboData1=newcomboData.comboData;var selectedRecord1=newcomboData.selectedRecord;SubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.mandatory){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?new Date():\"\";}// if (componentrow.timezone) {\n//     sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\n//         { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\n//         defaulttimezone ? defaulttimezone : -1\n// }\n}});if(masterData.RealRegSubTypeValue.nregsubtypecode===6){var portalOrder=selectedRecord&&selectedRecord['Portal Order ID']||{};var containerType=comboData1['Container Type']||[];comboData1['ContainerType']=comboData1['Container Type']||[];var containerList=[];var nportalordercode=portalOrder&&portalOrder.value?portalOrder.value:-1;containerType.map(function(x){if(x.item.jsondata.nportalordercode===nportalordercode){containerList.push(x);}});comboData1['Container Type']=containerList;}dispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:\"SubSample\",screenName:\"SubSample\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:selectedRecord1,SubSamplecomboData:comboData1,SubSamplecomboComponents:SubSamplecomboComponents,SubSamplewithoutCombocomponent:SubSamplewithoutCombocomponent,TestCombined:TestCombined,parentSubSampleColumnList:columnList,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,masterData:masterData}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}else{var newcomboData=parentChildComboLoad(columnList,SubSamplecomboData,selectComponent,childColumnList,SubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo);return function(dispatch){if(!specBasedComponent){rsapi.post(\"/registration/getTestfromDB\",_objectSpread(_objectSpread({nallottedspeccode:Map[\"nallottedspeccode\"],slno:Component?Object.keys(Component).length+1:1},Map),{},{// nallottedspeccode: objComponent.nallottedspeccode,\nspecBasedComponent:specBasedComponent})).then(function(response){var TestCombined=response.data;if(masterData.RealRegSubTypeValue.nregsubtypecode===6){var portalOrder=selectedRecord&&selectedRecord['Portal Order ID']||{};var containerType=SubSamplecomboData['ContainerType']||[];var containerList=[];var nportalordercode=portalOrder&&portalOrder.value?portalOrder.value:-1;containerType.map(function(x){if(x.item.jsondata.nportalordercode===nportalordercode){containerList.push(x);}});SubSamplecomboData['Container Type']=containerList;}dispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:\"SubSample\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:[],openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:newcomboData.selectedRecord,TestCombined:TestCombined}});});}else{// Component = Component ? Component : []\nrsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent})).then(function(response){// const lstComponent =  response.data.lstComponent\nvar lstComponent=response.data.lstComponent;//filterRecordBasedOnTwoArrays(response.data.lstComponent, Component, \"ncomponentcode\")\nvar lstComponentMap=constructOptionList(lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");if(masterData.RealRegSubTypeValue.nregsubtypecode===6){var portalOrder=selectedRecord&&selectedRecord['Portal Order ID']||{};var containerType=SubSamplecomboData['ContainerType']||[];var containerList=[];var nportalordercode=portalOrder&&portalOrder.value?portalOrder.value:-1;containerType.map(function(x){if(x.item.jsondata.nportalordercode===nportalordercode){containerList.push(x);}});SubSamplecomboData['Container Type']=containerList;}dispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:\"SubSample\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:newcomboData.selectedRecord,TestCombined:[],selectedTestData:[]}});});}};}}export function componentTest(selectedobject,Reg,specBasedComponent,Component){return function(dispatch){dispatch(initRequest(true));Component=Component?Component:[];rsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:selectedobject.nspecsampletypecode,slno:Component?Object.keys(Component).length+1:1,specBasedComponent:specBasedComponent}).then(function(response){var TestData=response.data;//let Test = [];\n// Test[selectedobject.slno] = TestData;\nvar Map={};if(Reg){Map[\"selectedRecord\"]=selectedobject;}else{Map[\"selectComponent\"]=selectedobject;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({TestCombined:TestData},Map),{},{loading:false,selectedTestData:[]})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function addSubSampleSaveContinue(Map1,Map,specBasedComponent,Component,selectedTestData,lstComponent){//  const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\n//     selectComponent, childColumnList, SubSamplewithoutCombocomponent)\nreturn function(dispatch){if(!specBasedComponent){rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],nspecsampletypecode:Map[\"nspecsampletypecode\"],slno:Map1.Component?Object.keys(Map1.Component).length+1:1,specBasedComponent:specBasedComponent}).then(function(response){var TestCombined=response.data;selectedTestData=selectedTestData&&selectedTestData.length>0?selectedTestData:[];var selectedTestData1=TestCombined.filter(function(x){return selectedTestData.some(function(y){return x[\"ntestgrouptestcode\"]===y.value;});});// const selectedTestData2 = []\n// TestCombined.map(x=>{\n//     selectedTestData1.map(y=>{\n//         if(x[\"ntestgrouptestcode\"] !== y[\"ntestgrouptestcode\"]){\n//             selectedTestData2.push(x)\n//         } \n//     })\n// });\n//  let filterArray = filterRecordBasedOnTwoArrays(selectedTestData1, TestCombined, \"ntestgrouptestcode\")\n// const filterArray = [...selectedTestData1, ...TestCombined]\nselectedTestData=constructOptionList(selectedTestData1,\"ntestgrouptestcode\",\"stestsynonym\");selectedTestData[\"ntestgrouptestcode\"]=selectedTestData.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},Map1),{},{loading:false,TestCombined:TestCombined,selectedTestData:selectedTestData})});});}else{// lstComponent = lstComponent.filter(x => x.item.nspecsampletypecode !== Map1.selectComponent[\"nspecsampletypecode\"])\nMap1.selectComponent[\"ncomponentcode\"]={};Map1.selectComponent[\"Sample Name\"]=\"\";dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},Map1),{},{loading:false,TestCombined:[],selectedTestData:[],lstComponent:lstComponent})});}};}export function editSubSample(Map,component,userInfo,specBasedComponent,SubSamplecomboData,selectedRecord){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var Componnet={};if(specBasedComponent){Componnet=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread({},Map));}urlArray=[Componnet];Axios.all(urlArray).then(function(response){var comp=[];if(specBasedComponent){comp=response[0].data.lstComponent;}var lstComponentMap=constructOptionList(comp||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var lstComponent=lstComponentMap.get(\"OptionList\");if(Map.nregsubtypecode===6){var portalOrder=component['Container Type']||{};var containerType=SubSamplecomboData['ContainerType']||[];var containerList=[];var nportalordercode=portalOrder&&portalOrder.value?portalOrder.value:-1;containerType.map(function(x){if(x.item.jsondata.nportalordercode===nportalordercode){containerList.push(x);}});SubSamplecomboData['Container Type']=containerList;}dispatch({type:DEFAULT_RETURN,payload:{loadSubSample:true,childoperation:\"update\",ChildscreenName:\"SubSample\",openChildModal:false,selectComponent:component,parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,SubSamplecomboData:SubSamplecomboData}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function insertRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/createRegistration\",inputParam.inputData).then(function(response){if(response.data.rtn===\"Success\"){var _objectSpread5;var RegistrationGetSample=updatedObjectWithNewElement(response.data[\"selectedSample\"],masterData.RegistrationGetSample);var selectedSample=response.data[\"selectedSample\"];var RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];var RegistrationGetTest=response.data[\"RegistrationGetTest\"];var selectedSubSample=RegistrationGetSubSample;RegistrationGetTest=sortData(RegistrationGetTest,\"npreregno\",\"desc\");var selectedTest=RegistrationGetTest.length>0?[RegistrationGetTest[0]]:[];if(inputParam.inputData.nneedsubsample){RegistrationGetSubSample=sortData(response.data[\"RegistrationGetSubSample\"],'npreregno','desc');selectedSubSample=RegistrationGetSubSample.length>0?[RegistrationGetSubSample[0]]:[];RegistrationGetTest=RegistrationGetTest.filter(function(x){return x.ntransactionsamplecode===selectedSubSample[0].ntransactionsamplecode;});selectedTest=RegistrationGetTest.length>0?response.data[\"selectedTest\"]:[];}// RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\nif(inputParam.multipleselectionFlag){selectedSample=updatedObjectWithNewElement(response.data[\"selectedSample\"],masterData.selectedSample);updatedObjectWithNewElement(response.data[\"selectedSubSample\"],masterData.RegistrationGetSubSample);updatedObjectWithNewElement(response.data[\"selectedTest\"],masterData.RegistrationGetTest);RegistrationGetSubSample=masterData.RegistrationGetSubSample;RegistrationGetTest=masterData.RegistrationGetTest;}masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedSample:selectedSample,selectedSubSample:selectedSubSample,selectedTest:selectedTest,RegistrationGetSubSample:RegistrationGetSubSample,RegistrationGetTest:RegistrationGetTest,RegistrationGetSample:RegistrationGetSample});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},(_objectSpread5={openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:undefined,loading:false,loadPreregister:false,showSample:undefined,openPortal:false,selectedSpec:{},selectComponent:{},SelectedTest:{},selectedComponent:{},Component:[]},_defineProperty(_objectSpread5,\"selectedRecord\",{}),_defineProperty(_objectSpread5,\"SelectedTest\",[]),_defineProperty(_objectSpread5,\"Test\",[]),_defineProperty(_objectSpread5,\"selectedComponent\",{}),_defineProperty(_objectSpread5,\"subSampleDataGridList\",[]),_objectSpread5));inputParam.postParamList[0]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}else{toast.warn(response.data.rtn);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});}}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});});};}export function getRegistrationSample(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"registration/getRegistrationByFilterSubmit\",_objectSpread({},inputData.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputData.masterData),response.data);if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}var respObject={};if(inputData.selectedFilter){respObject={selectedFilter:_objectSpread({},inputData.selectedFilter)};}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampleskip:0,subsampletake:undefined,showSample:undefined},respObject),{},{activeSampleTab:inputData.inputData.activeSampleTab})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationsubSampleDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,activeSubSampleTab:inputData.activeSubSampleTab,userinfo:inputData.userinfo,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,nneedsubsample:inputData.nneedsubsample,checkBoxOperation:inputData.nneedsubsample===true?inputData.checkBoxOperation===5?3:inputData.checkBoxOperation:inputData.checkBoxOperation};var activeName=\"\";var dataStateName=\"\";var subSample=inputData.nneedsubsample;dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"registration/getRegistrationSubSample\",inputParamData).then(function(response){sortData(response.data,\"descending\",\"npreregno\");var masterData={};var skipInfo={};var oldSelectedTest=inputData.masterData.selectedTest||[];if(subSample){var oldSelectedSubSample=inputData.masterData.selectedSubSample;fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedSubSample:inputData.masterData.RegistrationGetSubSample.length>0?[inputData.masterData.RegistrationGetSubSample[0]]:[]});var RegistrationTestComment=[];var RegistrationTestAttachment=[];var RegistrationParameter=[];//if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 7) {  \nif(inputData.checkBoxOperation===1){var wholeSubSampleList=masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(subsample,index){if(!wholeSubSampleList.includes(subsample.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}});if(oldSelectedSubSample.length>0){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedSubSample:oldSelectedSubSample});}var selectedTest=getSameRecordFromTwoArrays(oldSelectedTest,masterData.selectedSubSample,'npreregno');masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:selectedTest});}if(inputData.checkBoxOperation===7){// masterData = {\n//     ...masterData,\n//     APSelectedTest:responseData.APSelectedTest,\n//     AP_TEST:responseData.AP_TEST,\n//     ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\n// }\nswitch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var ResponseData=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment1=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData));}var ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment1,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{var _ResponseData=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var RegistrationTestAttachment1=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){RegistrationTestAttachment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData));}var _ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1,_ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var RegistrationParameter1=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(resultResponseData));var ntransactiontestcode1=masterData.selectedTest.length>0?masterData.selectedTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(RegistrationParameter1,ntransactiontestcode1,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var ResponseData1=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData1));}var ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment2,ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}masterData['RegistrationTestComment']=RegistrationTestComment;masterData['RegistrationTestAttachment']=RegistrationTestAttachment;masterData[\"RegistrationParameter\"]=RegistrationParameter;}if(inputData.checkBoxOperation===3||inputData.checkBoxOperation===5){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:masterData.RegistrationGetTest.length>0?[masterData.RegistrationGetTest[0]]:[]});switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var _ResponseData2=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData2));}var _ntransactiontestcode2=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment,_ntransactiontestcode2,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{var _ResponseData4=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var _RegistrationTestAttachment=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){_RegistrationTestAttachment=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData4));}var _ntransactiontestcode4=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_RegistrationTestAttachment,_ntransactiontestcode4,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var _resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var _RegistrationParameter=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(_resultResponseData));var _ntransactiontestcode3=masterData.selectedTest.length>0?masterData.selectedTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(_RegistrationParameter,_ntransactiontestcode3,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var _ResponseData3=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData3));}var _ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment2,_ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}masterData['RegistrationTestComment']=RegistrationTestComment;masterData['RegistrationTestAttachment']=RegistrationTestAttachment;masterData[\"RegistrationParameter\"]=RegistrationParameter;}var _inputData=inputData,testskip=_inputData.testskip,testtake=_inputData.testtake,subsampleskip=_inputData.subsampleskip,subsampletake=_inputData.subsampletake;var bool=false;if(inputData.masterData.RegistrationGetSubSample.length<inputData.subsampleskip){testskip=0;subsampleskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake,subsampleskip:subsampleskip,subsampletake:subsampletake};}}else{//let oldSelectedTest = inputData.masterData.selectedTest\n//  let oldSelectedSubSample = inputData.masterData.selectedSubSample\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[],selectedSubSample:inputData.masterData.RegistrationGetSubSample});var _RegistrationTestComment3=[];var _RegistrationParameter2=[];var _RegistrationTestAttachment2=[];if(inputData.checkBoxOperation===7||inputData.checkBoxOperation===1){var wholeTestList=masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}});var keepOld=false;var _ntransactiontestcode5;if(oldSelectedTest.length>0){keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode5=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"\";}switch(inputData.activeTestTab){case\"IDS_PARAMETERRESULTS\":_RegistrationParameter2=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_TESTATTACHMENTS\":{_RegistrationTestAttachment2=keepOld?inputData.masterData.RegistrationTestAttachment?inputData.masterData.RegistrationTestAttachment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_TESTCOMMENTS\":_RegistrationTestComment3=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;default:_RegistrationParameter2=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var _ResponseData5=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment4=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment4=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData5));}var _ntransactiontestcode6=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationTestComment3=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment4,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{var _ResponseData7=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var _RegistrationTestAttachment3=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){_RegistrationTestAttachment3=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData7));}var _ntransactiontestcode8=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationTestAttachment2=getRecordBasedOnPrimaryKeyName(_RegistrationTestAttachment3,_ntransactiontestcode8,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var _resultResponseData2=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var _RegistrationParameter3=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(_resultResponseData2));var _ntransactiontestcode7=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationParameter2=getRecordBasedOnPrimaryKeyName(_RegistrationParameter3,_ntransactiontestcode7,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var _ResponseData6=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment5=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment5=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData6));}var _ntransactionTestCode2=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;_RegistrationTestComment3=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment5,_ntransactionTestCode2,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else{switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":_RegistrationTestComment3=response.data.RegistrationTestComment?_toConsumableArray(response.data.RegistrationTestComment):[];activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":{_RegistrationTestAttachment2=response.data.RegistrationTestAttachment?_toConsumableArray(response.data.RegistrationTestAttachment):[];activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":_RegistrationParameter2=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:_RegistrationParameter2=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}masterData['RegistrationTestComment']=_RegistrationTestComment3;masterData[\"RegistrationParameter\"]=_RegistrationParameter2;masterData['RegistrationTestAttachment']=_RegistrationTestAttachment2;var _inputData2=inputData,_testskip=_inputData2.testskip,_testtake=_inputData2.testtake;var _bool=false;if(inputData.masterData.RegistrationGetTest.length<inputData.testskip){_testskip=0;_bool=true;}if(_bool){skipInfo={testskip:_testskip,testtake:_testtake};}}if(inputData.masterData.selectedSample&&inputData.sampleGridDataState&&inputData.masterData.selectedSample.length<=inputData.sampleGridDataState.skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{skip:0,sort:undefined,filter:undefined})});}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{sort:undefined,filter:undefined})});}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}var inputParam={attachmentskip:undefined};if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,skip:undefined,take:undefined},skipInfo),{},{inputParam:inputParam})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var bool=false;var skipInfo={};var _inputData3=inputData,testskip=_inputData3.testskip,testtake=_inputData3.testtake,subsampletake=_inputData3.subsampletake,subsampleskip=_inputData3.subsampleskip;var oldSelectedTest=inputData.masterData.selectedTest;var oldSelectedSubSample=inputData.masterData.selectedSubSample;// let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\nvar isGrandChildGetRequired=false;var TestSelected=[];var subSampleSelected=[];if(inputData[\"statusNone\"]){TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");subSampleSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");}else{TestSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");subSampleSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");}if(TestSelected.length>0){isGrandChildGetRequired=false;}else{isGrandChildGetRequired=true;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var selectedSample=inputData.selectedSample;var filterTestSameOldSelectedTest=getSameRecordFromTwoArrays(oldSelectedTest,inputData.masterData.RegistrationGetTest,\"ntransactiontestcode\");var selectedTest=filterTestSameOldSelectedTest.length>0?filterTestSameOldSelectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[];var ntransactiontestcode=selectedTest.length>0?selectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\";var selectedSubSample=inputData.masterData.RegistrationGetSubSample;if(subSample){var filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");selectedSubSample=filterSelectedSubSample.length>0?filterSelectedSubSample:[inputData.masterData.RegistrationGetSubSample[0]];if(inputData.masterData.RegistrationGetSubSample.length<=inputData.subsampleskip){subsampleskip=0;skipInfo={subsampletake:subsampletake,subsampleskip:subsampleskip};}}var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:selectedSample,selectedSubSample:selectedSubSample,selectedTest:selectedTest});if(inputData.masterData.RegistrationGetTest.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{testskip:testskip,testtake:testtake});}inputData=_objectSpread(_objectSpread({},inputData),{},_defineProperty({childTabsKey:[\"RegistrationTestComment\",\"RegistrationParameter\"],ntransactiontestcode:ntransactiontestcode,masterData:masterData,selectedTest:selectedTest,selectedSubSample:selectedSubSample,checkBoxOperation:3,skipInfo:skipInfo},\"masterData\",masterData));if(subSample){if(selectedTest.length===0){inputData[\"npreregno\"]=selectedSubSample.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=selectedSubSample.map(function(x){return x.ntransactionsamplecode;}).join(\",\");inputData[\"checkBoxOperation\"]=3;inputData[\"childTabsKey\"]=[\"RegistrationGetTest\"];dispatch(getRegistrationTestDetail(inputData,true));}else{dispatch(getTestChildTabDetailRegistration(inputData,true));}}else{dispatch(getTestChildTabDetailRegistration(inputData,true));}}else{var _masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedTest:TestSelected?TestSelected:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[],// RegistrationTestComment,\nselectedSubSample:subSampleSelected?subSampleSelected:inputData.masterData.RegistrationGetSubSample});var subsamplecheck=true;if(subSample){var SubSampleSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");if(SubSampleSelected.length>0){var _filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");if(_filterSelectedSubSample.length===0){var wholeSubSample=_masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(test,index){if(!wholeSubSample.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});if(oldSelectedSubSample.length===0&&wholeSubSample.length>0&&_masterData.selectedTest.length===0){var selectedSubSample1=[inputData.masterData.RegistrationGetSubSample[0]];_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedSubSample:selectedSubSample1,selectedTest:[]});inputData=_objectSpread(_objectSpread({},inputData),_masterData);inputData[\"npreregno\"]=selectedSubSample1.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=selectedSubSample1.map(function(x){return x.ntransactionsamplecode;}).join(\",\");inputData[\"checkBoxOperation\"]=3;inputData[\"childTabsKey\"]=[\"RegistrationGetTest\"];subsamplecheck=false;dispatch(getRegistrationTestDetail(inputData,true));}}else{oldSelectedSubSample=_filterSelectedSubSample;}}else{var _wholeSubSample=_masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(test,index){if(!_wholeSubSample.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});}if(subsamplecheck){_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedSubSample:oldSelectedSubSample});}if(inputData.masterData.RegistrationGetSubSample.length<=inputData.subsampleskip){subsampleskip=0;_skipInfo={subsampleskip:subsampleskip,subsampletake:subsampletake};}}var wholeTestList=_masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode9;if(oldSelectedTest.length>0){keepOld=true;_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode9=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"-1\";}_masterData[\"RegistrationTestComment\"]=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode9,\"ntransactiontestcode\");_masterData[\"RegistrationParameter\"]=keepOld?inputData.masterData.RegistrationParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode9,\"ntransactiontestcode\");var _skipInfo={};if(inputData.masterData.RegistrationGetTest.length<=inputData.testskip){testskip=0;bool=true;}if(bool){_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},{testskip:testskip,testtake:testtake});}var dataStateArray=[{activeName:'selectedSample',dataStateName:'sampleGridDataState'},{activeName:'RegistrationSourceCountry',dataStateName:'sourceDataState'},{activeName:'RegistrationTestComment',dataStateName:'testCommentDataState'},{activeName:'RegistrationParameter',dataStateName:'resultDataState'}];dataStateArray.map(function(arr){if(inputData[arr.dataStateName]&&_masterData[arr.activeName]&&_masterData[arr.activeName].length<=inputData[arr.dataStateName].skip){_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{sort:undefined,filter:undefined})));}return null;});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:_masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab},_skipInfo)});}}};}export function getRegistrationTestDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionsamplecode:inputData.ntransactionsamplecode,ntransactionstatus:inputData.ntransactionstatus,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,activeSubSampleTab:inputData.activeSubSampleTab,userinfo:inputData.userinfo,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,checkBoxOperation:inputData.checkBoxOperation,nneedsubsample:inputData.nneedsubsample};var subSample=inputData.nneedsubsample;var activeName=\"\";var dataStateName=\"\";dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"registration/getRegistrationTest\",inputParamData).then(function(response){sortData(response.data);var oldSelectedTest=inputData.masterData.selectedTest||[];var oldSelectedSubSample=inputData.masterData.selectedSubSample||[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:inputData.selectedSubSample,selectedTransactionsamplecode:inputData.ntransactionsamplecode,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[]// RegistrationTestComment,\n});//let wholeRegistrationTestComments = [];\nvar RegistrationTestComment=[];var RegistrationTestAttachment=[];var RegistrationParameter=[];var RegistrationSampleComment=[];var RegistrationSampleAttachment=[];if(inputData.checkBoxOperation===1){var wholeTestList=masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}});var keepOld=false;var ntransactiontestcode;if(oldSelectedTest.length>0){keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:oldSelectedTest});}else{ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"\";}switch(inputData.activeTestTab){case\"IDS_PARAMETERRESULTS\":RegistrationParameter=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment?inputData.masterData.RegistrationTestAttachment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";break;default:RegistrationParameter=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var ResponseData=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment1=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData));}var _ntransactiontestcode10=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment1,_ntransactiontestcode10,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTCOMMENTS\":{var _ResponseData8=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var RegistrationTestAttachment1=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){RegistrationTestAttachment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData8));}var _ntransactiontestcode11=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1,_ntransactiontestcode11,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var RegistrationParameter1=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(resultResponseData));var ntransactiontestcode1=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(RegistrationParameter1,ntransactiontestcode1,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var ResponseData1=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData1));}var ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment2,ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else if(inputData.checkBoxOperation===7){var testList=reArrangeArrays(inputData.masterData.RegistrationGetSubSample,response.data.RegistrationGetTest,\"ntransactionsamplecode\");masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:testList?testList.length>0?[testList[0]]:[]:[],RegistrationGetTest:testList?testList.length>0?testList:[]:[]//ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\n});switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var _ResponseData9=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment6=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment6=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData9));}var _ntransactiontestcode12=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment6,_ntransactiontestcode12,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTCOMMENTS\":{var _ResponseData11=response.data.RegistrationTestAttachment?response.data.RegistrationTestAttachment:[];var _RegistrationTestAttachment4=[];if(inputData.masterData.RegistrationTestAttachment!==undefined){_RegistrationTestAttachment4=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(_ResponseData11));}var _ntransactiontestcode14=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_RegistrationTestAttachment4,_ntransactiontestcode14,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";}break;case\"IDS_PARAMETERRESULTS\":var _resultResponseData3=response.data.RegistrationParameter?response.data.RegistrationParameter:[];// let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\nvar _RegistrationParameter4=_toConsumableArray(_resultResponseData3);var _ntransactiontestcode13=testList?testList.length>0?testList[0].ntransactiontestcode:inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(_RegistrationParameter4,_ntransactiontestcode13,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var _ResponseData10=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var _RegistrationTestComment7=[];if(inputData.masterData.RegistrationTestComment!==undefined){_RegistrationTestComment7=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(_ResponseData10));}var _ntransactionTestCode3=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_RegistrationTestComment7,_ntransactionTestCode3,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else{switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":RegistrationTestComment=response.data.RegistrationTestComment?_toConsumableArray(response.data.RegistrationTestComment):[];activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=response.data.RegistrationTestAttachment?_toConsumableArray(response.data.RegistrationTestAttachment):[];activeName=\"RegistrationTestAttachment\";dataStateName=\"testCommentDataState\";break;case\"IDS_PARAMETERRESULTS\":RegistrationParameter=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:RegistrationParameter=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}if(subSample){var wholeSubsampleList=masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.map(function(test,index){if(!wholeSubsampleList.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});var _keepOld=false;var ntransactionsamplecode;if(oldSelectedSubSample.length>0){_keepOld=true;}else{ntransactionsamplecode=masterData.selectedSubSample[0].ntransactionsamplecode;}switch(inputData.activeSubSampleTab){case\"IDS_SUBSAMPLECOMMENTS\":RegistrationSampleComment=_keepOld?inputData.masterData.RegistrationSampleComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleComment,ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleComment\";dataStateName=\"subSampleCommentDataState\";break;default:RegistrationSampleAttachment=_keepOld?inputData.masterData.RegistrationSampleAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleAttachment,ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleAttachment\";dataStateName=\"subSampleAttachmentDataState\";break;}}masterData['RegistrationTestComment']=RegistrationTestComment;masterData['RegistrationTestAttachment']=RegistrationTestAttachment;masterData[\"RegistrationParameter\"]=RegistrationParameter;masterData[\"RegistrationSampleComment\"]=RegistrationSampleComment;masterData[\"RegistrationSampleAttachment\"]=RegistrationSampleAttachment;var _inputData4=inputData,testskip=_inputData4.testskip,testtake=_inputData4.testtake;var bool=false;var skipInfo={};if(inputData.masterData.RegistrationGetTest.length<inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake};}if(inputData.masterData.selectedSample&&inputData.sampleGridDataState&&inputData.masterData.selectedSample.length<=inputData.sampleGridDataState.skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{skip:0,sort:undefined,filter:undefined})});}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{sort:undefined,filter:undefined})});}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}var inputParam={attachmentskip:undefined};if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,skip:undefined,take:undefined},skipInfo),{},{inputParam:inputParam})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var oldSelectedTest=inputData.masterData.selectedTest;var TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");var isGrandChildGetRequired=false;if(TestSelected.length>0){isGrandChildGetRequired=true;}else{isGrandChildGetRequired=false;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode.toString():\"-1\";var selectedSubSample=inputData.selectedSubSample;// let selectedPreregno = inputData.npreregno;\nvar selectedTest=inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[];// let selectedSubSample = inputData.masterData.RegistrationGetSubSample\nvar masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:selectedSubSample,selectedTest:selectedTest});inputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"RegistrationTestComment\",\"RegistrationParameter\"],ntransactiontestcode:ntransactiontestcode,masterData:masterData,selectedTest:selectedTest,selectedSubSample:selectedSubSample,checkBoxOperation:3});dispatch(getTestChildTabDetailRegistration(inputData,true));}else{var _masterData2=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:inputData.selectedSubSample,selectedTransactioncode:inputData.ntransactionsamplecode,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[]});var wholeTestList=_masterData2.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode15;if(oldSelectedTest.length>0){keepOld=true;_masterData2=_objectSpread(_objectSpread({},_masterData2),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode15=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"-1\";}_masterData2[\"RegistrationTestComment\"]=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode15,\"ntransactiontestcode\");_masterData2[\"RegistrationParameter\"]=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode15,\"ntransactiontestcode\");var skipInfo={};var dataStateArray=[{activeName:'selectedSample',dataStateName:'sampleGridDataState'},{activeName:'RegistrationSourceCountry',dataStateName:'sourceDataState'},{activeName:'RegistrationTestComment',dataStateName:'testCommentDataState'},{activeName:'RegistrationParameter',dataStateName:'resultDataState'}];dataStateArray.map(function(arr){if(inputData[arr.dataStateName]&&_masterData2[arr.activeName]&&_masterData2[arr.activeName].length<=inputData[arr.dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{sort:undefined,filter:undefined})));}return null;});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:_masterData2,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab},skipInfo)});}}};}export function acceptRegistration(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/acceptRegistration\",inputParam.inputData).then(function(response){if(response.data.rtn===undefined||response.data.rtn===\"Success\"||response.data.rtn===\"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"||response.data.rtn===\"IDS_ALLSAMPLESAREREGISTERED\"||response.data.rtn===\"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\"){replaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");delete response.data[\"RegistrationGetSample\"];delete response.data[\"RegistrationGetSubSample\"];delete response.data[\"RegistrationGetTest\"];var masterData=_objectSpread(_objectSpread(_objectSpread({},LoginProps),response.data),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));if(response.data.rtn===\"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"||response.data.rtn===\"IDS_ALLSAMPLESAREREGISTERED\"||response.data.rtn===\"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\"){toast.warn(intl.formatMessage({id:response.data.rtn}));}}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false}});toast.warn(response.data.rtn);}}).catch(function(error){toast.error(error.message);});};}export var addMoreTest=function addMoreTest(inputParam,ncontrolCode){return function(dispatch){var sampleList=inputParam.sampleList;var value=false;if(inputParam.selectedSubSample&&inputParam.selectedSubSample.length>0){value=inputParam.selectedSubSample.some(function(obj){return obj.nspecsampletypecode!==inputParam.selectedSubSample[0].nspecsampletypecode;});if(value){return toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}sampleList=sampleList?_toConsumableArray(sampleList.slice(inputParam.skip,inputParam.take)):[];var selectedsample=getSameRecordFromTwoArrays(sampleList,inputParam.selectedSample,\"npreregno\");// const selectsubsample = getSameRecordFromTwoArrays(sampleList, inputParam.selectedsubsample, \"npreregno\");\nif(selectedsample&&selectedsample.length>0){var findTransactionStatus=_toConsumableArray(new Set(selectedsample.map(function(item){return item.ntransactionstatus;})));if(findTransactionStatus.length===1){if(findTransactionStatus[0]!==transactionStatus.REJECT&&findTransactionStatus[0]!==transactionStatus.CANCELLED){if(findTransactionStatus[0]!==transactionStatus.CERTIFIED&&findTransactionStatus[0]!==transactionStatus.SENT){var findApprovalVersion=_toConsumableArray(new Set(selectedsample.map(function(item){return item.napprovalversioncode;})));if(findApprovalVersion.length===1){var findSampleSpec=_toConsumableArray(new Set(selectedsample.map(function(item){return item.nallottedspeccode;})));//const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\nif(findSampleSpec.length===1)//&& findComponent.length === 1 \n{inputParam[\"snspecsampletypecode\"]=inputParam.selectedSubSample&&_toConsumableArray(new Set(inputParam.selectedSubSample.map(function(x){return x.nspecsampletypecode;}))).join(\",\");dispatch(initRequest(true));rsapi.post(\"/registration/getMoreTest\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{availableTest:response.data,loadChildTest:true,loading:false,ncontrolCode:ncontrolCode,screenName:\"IDS_TEST\",operation:\"create\",openModal:true,parentPopUpSize:\"lg\",selectedRecord:{},showSample:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(_this.props.formatMessage({id:error.response.data}));}});}else{toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_TESTCANNOTBEFORCERTIFIEDSAMPLES\"}));}}else{////     toast.warn(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCANCELLEDREJECTSAMPLES\" }));\ntoast.warn(intl.formatMessage({id:\"IDS_SAMPLEISREJECTEDORCANCELLED\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSUBSAMPLE\"}));}};};export var createRegistrationTest=function createRegistrationTest(inputParam,masterData,modalName){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputParam.classUrl+\"/\"+inputParam.operation+inputParam.methodUrl,_objectSpread({},inputParam.inputData)).then(function(response){var _respObject;var RegistrationGetTest=updatedObjectWithNewElement(masterData[\"RegistrationGetTest\"],response.data[\"RegistrationGetTest\"]);masterData=_objectSpread(_objectSpread({},masterData),{},{RegistrationGetTest:RegistrationGetTest,selectedTest:response.data[\"RegistrationGetTest\"],RegistrationParameter:response.data.RegistrationParameter// RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, masterData.RegistrationGetSample, 'npreregno')\n});var respObject=(_respObject={masterData:masterData},_defineProperty(_respObject,modalName,false),_defineProperty(_respObject,\"loading\",false),_defineProperty(_respObject,\"loadChildTest\",false),_defineProperty(_respObject,\"showSample\",undefined),_defineProperty(_respObject,\"openModal\",false),_defineProperty(_respObject,\"selectedRecord\",{}),_respObject);inputParam.postParamList[0]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));// dispatch({\n//     type: DEFAULT_RETURN,\n//     payload: {\n//         masterData,\n//         [modalName]: false,\n//         loading: false,\n//         loadChildTest: false,\n//         showSample: undefined,\n//         openModal: false,\n//         selectedRecord: {}\n//     }\n// });\n}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export function getEditRegistrationComboService(inputParam,columnList,selectedRecord1,childColumnList,comboComponents,withoutCombocomponent){return function(dispatch){dispatch(initRequest(true));var _inputParam=_objectSpread({},inputParam),userInfo=_inputParam.userInfo,operation=_inputParam.operation,masterData=_inputParam.masterData;if(masterData[\"selectedSample\"].length>1||masterData[\"selectedSample\"].findIndex(function(x){return x[inputParam.primaryKeyName]===inputParam[\"mastertoedit\"][inputParam.primaryKeyName];})===-1){inputParam.editRegParam[\"getSampleChildDetail\"]=true;}masterData[\"selectedSample\"]=[];masterData[\"selectedSample\"].push(inputParam[\"mastertoedit\"]);var npreregno=inputParam.mastertoedit[inputParam.primaryKeyName];var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");// const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\n//     parentcolumnlist: columnList,\n//     childcolumnlist: childColumnList,\n//     userinfo: userInfo\n// })\nvar selectedRegistration=rsapi.post(\"/registration/getEditRegistrationDetails\",_objectSpread(_objectSpread({},inputParam.editRegParam),{},{npreregno:npreregno,parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userInfo}));urlArray=[timeZoneService,selectedRegistration];Axios.all(urlArray).then(function(response){var selectedRecord=_objectSpread({},response[1].data[\"EditData\"]);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedRecord['jsondata']);// const recordToEdit = { ...response[2].data[\"SelectedRegistration\"][0] };\n//  const currentTime = rearrangeDateFormat(userInfo, response[6].data);\nvar timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userInfo.stimezoneid,value:userInfo.ntimezonecode};//  const newcomboData = parentChildComboLoad(columnList, response[1].data,\n// selectedRecord, childColumnList, withoutCombocomponent)\nif(selectedRecord.ntransactionstatus===transactionStatus.CANCELLED||selectedRecord.ntransactionstatus===transactionStatus.REJECT){toast.warn(intl.formatMessage({id:\"IDS_CANNOTEDITCANCELLEDSAMPLE\"}));dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else{var languagetypeCode=undefined;var comboData=response[1].data;delete comboData['EditData'];var comboValues={};if(columnList.length>0){columnList.map(function(x){if(x.inputtype==='combo'){if(comboData[x.label]&&comboData[x.label].length>0)//&& comboData[x.label][0].hasOwnProperty(x.source) \n{if(comboData[x.label].length>0){if(comboData[x.label][0].label===undefined){var optionList=constructjsonOptionList(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode);comboData[x.label]=optionList.get(\"OptionList\");}else{comboData[x.label]=comboData[x.label];var _optionList=constructjsonOptionDefault(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode);}}else{comboData[x.label]=[];}//comboValues = childComboLoad(x, comboData, selectedRecord, \n//   childColumnList, withoutCombocomponent)\\\ncomboValues=childComboLoadForEdit(x,comboData,selectedRecord,childColumnList,withoutCombocomponent);}else{comboValues={\"comboData\":comboData};}}else{comboValues=_objectSpread({comboData:comboData},comboValues);}});}else{comboValues={\"comboData\":comboData};}withoutCombocomponent.map(function(date){if(date.inputtype==='date'){selectedRecord[date.label]=selectedRecord[date.label]&&selectedRecord[date.label]!=='-'?rearrangeDateFormat(userInfo,selectedRecord[date.label]):\"\";}});var _ref2=[],Specification=_ref2.Specification,AgaramTree=_ref2.AgaramTree,ActiveKey=_ref2.ActiveKey,FocusKey=_ref2.FocusKey,OpenNodes=_ref2.OpenNodes;var selectedSpec={};Specification=constructOptionList(response[1].data[\"Specification\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true).get(\"OptionList\");AgaramTree=response[1].data[\"AgaramTree\"];ActiveKey=response[1].data[\"FocusKey\"];FocusKey=response[1].data[\"ActiveKey\"];OpenNodes=response[1].data[\"OpenNodes\"];//Manufacturer = response.data[\"Manufacturer\"];\nselectedSpec[\"nallottedspeccode\"]=Specification.length>0?{\"value\":Specification[0].value,\"label\":Specification[0].label,\"item\":Specification[0].item}:\"\";selectedSpec[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";selectedSpec[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedSpec);dispatch({type:DEFAULT_RETURN,payload:{AgaramTree:AgaramTree,FocusKey:FocusKey,ActiveKey:ActiveKey,OpenNodes:OpenNodes,selectedSpec:selectedSpec,Specification:Specification,// statustoEditDetail: response[2].data[\"ApprovalConfigRole\"] || {},\n// currentTime,\noperation:\"update\",screenName:inputParam.masterData.RealRegSubTypeValue.sregsubtypename,// PopUpLabel: popUpLabel,\ntimeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,selectedRecord:selectedRecord,openPortal:true,ncontrolCode:inputParam.editRegParam.ncontrolCode,loadPreregister:true,parentPopUpSize:\"xl\",loading:false,showSample:undefined,comboData:comboValues.comboData,childColumnList:childColumnList,comboComponents:comboComponents,withoutCombocomponent:withoutCombocomponent,columnList:columnList//  regRecordToEdit:recordToEdit\n}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function updateRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/updateRegistration\",inputParam.inputData).then(function(response){// sortData(response.data);\nreplaceUpdatedObject(response.data[\"RegistrationGetSample\"],masterData.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],masterData.RegistrationGetTest,\"ntransactiontestcode\");//  let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\n//let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\nmasterData=_objectSpread(_objectSpread({},masterData),{},{selectedSample:response.data[\"selectedSample\"],// selectedSubSample: masterData[\"selectedSubSample\"],\n//selectedTest:masterData[\"selectedTest\"],\n// RegistrationGetTest,\n// RegistrationGetSubSample,\nRegistrationParameter:masterData[\"RegistrationParameter\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,openPortal:false,loading:false,showConfirmAlert:false,regDateEditConfirmMessage:undefined,loadEsign:false,loadPreregister:false,selectedRecord:{},showSample:undefined}});// let inputData = {\n//     masterData,\n//     selectedTest: masterData.selectedTest,\n//     ntransactiontestcode: masterData.selectedTest ?\n//         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n//     npreregno: masterData.selectedSample ?\n//         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n//     userinfo: inputParam.inputData.userinfo,\n//     activeTestTab : masterData.activeTestTab,\n//     screenName: masterData.activeTestTab,\n//     resultDataState: inputParam.resultDataState,\n//     testCommentDataState: inputParam.testCommentDataState,\n// }\n// dispatch(getTestChildTabDetail(inputData, true))\n}).catch(function(error){if(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else if(error.response.status===302){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,regEditParam:inputParam,showConfirmAlert:true,parentPopUpSize:\"xl\",regDateEditConfirmMessage:error.response.data,showSample:undefined}});}else{toast.warn(error.response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showSample:undefined}});}});};}export function cancelTestAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelTest\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\nvar masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedTest:response.data[\"selectedTest\"],// RegistrationGetTest:response.data[\"RegistrationGetTest\"],\nRegistrationGetTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\")//  RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, LoginProps.RegistrationGetSample, 'npreregno')\n});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:{},loading:false,loadPreregister:false,showSample:undefined});inputParam.postParamList[0]['clearFilter']='no';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function cancelSampleAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelSample\",inputParam.inputData).then(function(response){replaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");var masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function addsubSampleRegistration(masterData,userinfo,regcolumnList,selectRecord,regchildColumnList,regSubSamplecomboComponents,regSubSamplewithoutCombocomponent,Map,ncontrolcode,specBasedComponent){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray[0]=timeZoneService;var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:regcolumnList,childcolumnlist:regchildColumnList,userinfo:userinfo});urlArray[1]=actualService;if(specBasedComponent){var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent,userinfo:userinfo}));urlArray[2]=ComponentTestBySpec;}else{var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:1,specBasedComponent:specBasedComponent});urlArray[2]=TestGet;}Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userinfo.stimezoneid,value:userinfo.ntimezonecode};var newcomboData=parentChildComboLoad(regcolumnList,response[1].data,selectRecord,regchildColumnList,regSubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo);var TestCombined=[];var lstComponent=[];if(specBasedComponent){var lstComponentMap=constructOptionList(response[2].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");}else{TestCombined=response[2].data;}var comboData1=newcomboData.comboData;var selectedRecord1=newcomboData.selectedRecord;regSubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.mandatory){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?new Date():\"\";}// if (componentrow.timezone) {\n//     sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\n//         { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\n//         defaulttimezone ? defaulttimezone : -1\n// }\n}});dispatch({type:DEFAULT_RETURN,payload:{screenName:\"SubSample\",showSaveContinue:false,parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openModal:true,operation:\"create\",loadRegSubSample:true,selectedRecord:selectedRecord1,regSubSamplecomboData:comboData1,regSubSamplecomboComponents:regSubSamplecomboComponents,regSubSamplewithoutCombocomponent:regSubSamplewithoutCombocomponent,TestCombined:TestCombined,regparentSubSampleColumnList:regcolumnList,ncontrolCode:ncontrolcode,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,masterData:masterData,specBasedComponent:specBasedComponent}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function saveSubSample(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/createSubSample\",inputParam.inputData).then(function(response){// let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\n// let selectedSample = response.data[\"selectedSample\"];\nvar RegistrationGetSubSample=updatedObjectWithNewElement(inputParam.inputData.masterData.RegistrationGetSubSample,response.data[\"selectedSubSample\"]);var RegistrationGetTest=response.data[\"selectedTest\"];var selectedSubSample=response.data[\"selectedSubSample\"];// RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\nRegistrationGetTest=sortData(RegistrationGetTest,\"npreregno\",\"desc\");var selectedTest=RegistrationGetTest.length>0?[RegistrationGetTest[0]]:[];var RegistrationParameter=response.data[\"RegistrationParameter\"];RegistrationParameter=getSameRecordFromTwoArrays(RegistrationParameter,selectedTest,'ntransactiontestcode');var masterData=_objectSpread({},inputParam.inputData.masterData);masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedSubSample:selectedSubSample,selectedTest:selectedTest,RegistrationGetSubSample:RegistrationGetSubSample,RegistrationGetTest:RegistrationGetTest,RegistrationParameter:RegistrationParameter});var respObject={masterData:masterData,openModal:false,loadEsign:false,loading:false,showSample:undefined,selectedRecord:{},loadRegSubSample:false};inputParam.postParamList[0]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));//    dispatch({\n//     type: DEFAULT_RETURN,\n//     payload: {\n//         masterData,\n//         openModal: false,\n//         loadEsign: false,\n//         loading: false,\n//         showSample: undefined,\n//         selectedRecord: {},\n//         loadRegSubSample:false\n//     }\n// });\n}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});});};}export function getEditSubSampleComboService(inputParam,columnList,selectedRecord1,childColumnList,comboComponents,withoutCombocomponent,specBasedComponent){return function(dispatch){dispatch(initRequest(true));var _inputParam2=_objectSpread({},inputParam),userInfo=_inputParam2.userInfo,operation=_inputParam2.operation;var ntransactionsamplecode=inputParam.mastertoedit[inputParam.primaryKeyName];var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");// const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\n//     parentcolumnlist: columnList,\n//     childcolumnlist: childColumnList,\n//     userinfo: userInfo\n// })\nvar selectedRegistration=rsapi.post(\"/registration/getEditRegistrationSubSampleDetails\",_objectSpread(_objectSpread({},inputParam.editSubSampleRegParam),{},{ntransactionsamplecode:ntransactionsamplecode,parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userInfo}));urlArray=[timeZoneService,selectedRegistration];// if(specBasedComponent){\n//     const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\n//         ...Map,\n//         specBasedComponent: specBasedComponent\n//     })\n//     urlArray.push(ComponentTestBySpec) \n// }\nAxios.all(urlArray).then(function(response){var selectedRecord=_objectSpread({},response[1].data[\"EditData\"]);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedRecord['jsondata']);var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userInfo.stimezoneid,value:userInfo.ntimezonecode};if(selectedRecord.ntransactionstatus!==transactionStatus.PREREGISTER){toast.warn(intl.formatMessage({id:\"IDS_SELECTPREREGISTERSUBSAMPLETOEDIT\"}));dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else{var _payload;//               let lstComponent=[]\nif(specBasedComponent){selectedRecord[\"ncomponentcode\"]={label:selectedRecord[\"scomponentname\"],value:selectedRecord[\"ncomponentcode\"]};}var languagetypeCode=undefined;var comboData=response[1].data;delete comboData['EditData'];var comboValues={};if(columnList.length>0){columnList.map(function(x){if(x.inputtype==='combo'){if(comboData[x.label]&&comboData[x.label].length>0)//&& comboData[x.label][0].hasOwnProperty(x.source) \n{if(comboData[x.label].length>0){if(comboData[x.label][0].label===undefined){var optionList=constructjsonOptionList(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode);comboData[x.label]=optionList.get(\"OptionList\");}else{comboData[x.label]=comboData[x.label];var _optionList2=constructjsonOptionDefault(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode);}}else{comboData[x.label]=[];}//comboValues = childComboLoad(x, comboData, selectedRecord, \n//   childColumnList, withoutCombocomponent)\\\ncomboValues=childComboLoadForEdit(x,comboData,selectedRecord,childColumnList,withoutCombocomponent);}else{comboValues={\"comboData\":comboData};}}else{comboValues=_objectSpread({comboData:comboData},comboValues);}});}else{comboValues={\"comboData\":comboData};}withoutCombocomponent.map(function(date){if(date.inputtype==='date')selectedRecord[date.label]=selectedRecord[date.label]&&selectedRecord[date.label]!=='-'?rearrangeDateFormat(userInfo,selectedRecord[date.label]):\"\";});selectedRecord=_objectSpread({},selectedRecord);dispatch({type:DEFAULT_RETURN,payload:(_payload={operation:operation,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,selectedRecord:selectedRecord,openModal:true,ncontrolCode:inputParam.editSubSampleRegParam.ncontrolCode,parentPopUpSize:\"lg\",loading:false,showSample:undefined,regSubSamplecomboData:comboValues.comboData,loadRegSubSample:true,screenName:\"IDS_SUBSAMPLE\"},_defineProperty(_payload,\"operation\",\"update\"),_defineProperty(_payload,\"specBasedComponent\",specBasedComponent),_payload)});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function onUpdateSubSampleRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/updateRegistrationSubSample\",inputParam.inputData).then(function(response){sortData(response.data);replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");//replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\n// replaceUpdatedObject(response.data[\"selectedTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\n//  let RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];\nvar RegistrationGetTest=response.data[\"RegistrationGetTest\"];masterData=_objectSpread(_objectSpread({},masterData),{},{// selectedSample: response.data[\"selectedSample\"],\nselectedSubSample:response.data[\"selectedSubSample\"],selectedTest:response.data[\"selectedTest\"],RegistrationGetTest:RegistrationGetTest,// RegistrationGetSubSample,\nRegistrationParameter:response.data[\"RegistrationParameter\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,openModal:false,loading:false,showConfirmAlert:false,regDateEditConfirmMessage:undefined,loadEsign:false,loadRegSubSample:false,selectedRecord:{},showSample:undefined,screenName:\"SubSample\"}});// let inputData = {\n//     masterData,\n//     selectedTest: masterData.selectedTest,\n//     ntransactiontestcode: masterData.selectedTest ?\n//         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n//     npreregno: masterData.selectedSample ?\n//         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n//     userinfo: inputParam.inputData.userinfo,\n//     activeTestTab : masterData.activeTestTab,\n//     screenName: masterData.activeTestTab,\n//     resultDataState: inputParam.resultDataState,\n//     testCommentDataState: inputParam.testCommentDataState,\n// }\n// dispatch(getTestChildTabDetail(inputData, true))\n}).catch(function(error){if(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else if(error.response.status===302){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,regEditParam:inputParam,showConfirmAlert:true,parentPopUpSize:\"xl\",regDateEditConfirmMessage:error.response.data,showSample:undefined}});}else{toast.warn(error.response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showSample:undefined}});}});};}export function cancelSubSampleAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelSubSample\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\nreplaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");var masterData=_objectSpread(_objectSpread({},LoginProps),{},{// selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\nselectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function preregRecordToQuarantine(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/quarantineRegistration\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\n// replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\n// replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\nreplaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");delete response.data[\"RegistrationGetSample\"];delete response.data[\"RegistrationGetSubSample\"];delete response.data[\"RegistrationGetTest\"];var masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject={masterData:masterData,loading:false,loadEsign:false,openModal:false,showSample:undefined};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function getTestChildTabDetailRegistration(inputData,isServiceRequired){return function(dispatch){if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){var inputParamData={ntransactiontestcode:inputData.ntransactiontestcode,npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;var testtake=inputData.testtake;var activeName=\"\";var dataStateName=\"\";switch(inputData.activeTestTab){case\"IDS_RESULTS\":url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_PARAMETERRESULTS\":url=\"registration/getregistrationparameter\";activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":url=\"resultentrybysample/getResultUsedInstrument\";activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_MATERIAL\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_TASK\":url=\"resultentrybysample/getResultUsedTask\";activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";activeName=\"RegistrationTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_DOCUMENTS\":url=\"approval/getapprovalparameter\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"approval/getApprovalResultChangeHistory\";activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":url=\"approval/getApprovalHistory\";activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;default:url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}if(url!==null){dispatch(initRequest(true));if(isServiceRequired){rsapi.post(url,inputParamData).then(function(response){var skipInfo={};var responseData=_objectSpread(_objectSpread({},response.data),{},{selectedSample:inputData.selectedSample||inputData.masterData.selectedSample,selectedTest:inputData.selectedTest});//responseData = sortData(responseData)\n// fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample||inputData.masterData.selectedSample,selectedTest:inputData.selectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedTest,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactiontestcode\",inputData.removeElementFromArray);var skipInfo={};var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:inputData.selectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},inputData.masterData),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{var _inputData$masterData=inputData.masterData,ApprovalParameter=_inputData$masterData.ApprovalParameter,ResultUsedInstrument=_inputData$masterData.ResultUsedInstrument,ResultUsedTasks=_inputData$masterData.ResultUsedTasks,RegistrationTestAttachment=_inputData$masterData.RegistrationTestAttachment,ApprovalResultChangeHistory=_inputData$masterData.ApprovalResultChangeHistory,RegistrationTestComment=_inputData$masterData.RegistrationTestComment,ApprovalHistory=_inputData$masterData.ApprovalHistory;switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=[];break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=[];break;case\"IDS_TASK\":ResultUsedTasks=[];break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=[];break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=[];break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=[];break;case\"IDS_APPROVALHISTORY\":ApprovalHistory=[];break;default:ApprovalParameter=[];break;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:[],ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false}});}};}var toTimestamp=function toTimestamp(strDate){// const dt = new Date(strDate).getTime();\n// return dt / 1000;\nvar dt=strDate.getTime();return dt;};export function getDynamicFilter(inputParam){if(inputParam.component.inputtype==='frontendsearchfilter'){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/dynamicpreregdesign/getcustomsearchfilter\",_objectSpread(_objectSpread({},inputParam.component),{},{userinfo:inputParam.userinfo})).then(function(response){var source=inputParam.component.source;var languageTypeCode=inputParam.userinfo.slanguagetypecode;var lstData=response.data[inputParam.component.label];// const responseparam={}\nvar gridColumns=[];var fields=[];var datefileds=[];var multilingual=[];inputParam.component.filterfields.map(function(item){fields.push(filterObject(item,languageTypeCode,response.data));if(item.ismultilingual){multilingual.push(item.columnname);}if(item.filterinputtype===\"date\"){datefileds.push(item.columnname);}if(item.filterinputtype!=='predefinednumeric'){gridColumns.push(creategridColumns(item,languageTypeCode));}});var optionList=lstData.map(function(item){var jsondata=item[source]?item[source].value?JSON.parse(item[source].value):item.jsondata:item.jsondata;datefileds.map(function(x){jsondata[x+\"timestamp\"]=toTimestamp(rearrangeDateFormatforKendoDataTool(inputParam.userinfo,jsondata[x]));});multilingual.map(function(mul){jsondata[mul]=jsondata[mul][languageTypeCode]||jsondata[mul]['en-US'];});return jsondata;});dispatch({type:DEFAULT_RETURN,payload:{lstPatient:optionList,gridColumns:gridColumns,fields:fields,loadCustomSearchFilter:true,loading:false,screenName:inputParam.component.displayname[languageTypeCode],seletedFilterComponent:inputParam.component,kendoSkip:0,kendoTake:5,kendoFilter:{logic:\"and\",filters:[]},awesomeTree:undefined,awesomeConfig:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}else if(inputParam.component.inputtype===\"backendsearchfilter\"){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/dynamicpreregdesign/getcustomsearchfilterpredefined\",_objectSpread(_objectSpread({},inputParam.component),{},{userinfo:inputParam.userinfo})).then(function(response){var languageTypeCode=inputParam.userinfo.slanguagetypecode;var _filterObjectForReact=filterObjectForReactAwesomeFilter(inputParam.component.filterfields,languageTypeCode,response.data),fields=_filterObjectForReact.fields,gridColumns=_filterObjectForReact.gridColumns;dispatch({type:DEFAULT_RETURN,payload:{lstPatient:[],gridColumns:gridColumns,fields:fields,loadCustomSearchFilter:true,loading:false,screenName:inputParam.component.displayname[languageTypeCode],seletedFilterComponent:inputParam.component,kendoSkip:0,kendoTake:5,kendoFilter:{logic:\"and\",filters:[]},awesomeTree:undefined,awesomeConfig:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}}var datapredef={};var CustomFilter=function CustomFilter(props){var filter=props.filter,_props$data=props.data,data=_props$data===void 0?[]:_props$data,defaultItem=props.defaultItem;var onChange=function onChange(event){props.onFilterChange.call(undefined,{nextFilter:_objectSpread(_objectSpread({},props.filter),{},{value:event.target.value.value})});};return/*#__PURE__*/React.createElement(ComboBox,{onChange:onChange,data:filter.field?datapredef[filter.field]:[],textField:\"text\"});};export function creategridColumns(item,languageTypeCode){var obj={};if(item.filterinputtype!=='predefinednumeric'){return{field:item.columnname,title:item.displayname[languageTypeCode],width:\"200px\"};}}export function filterObjectForReactAwesomeFilter(filterFields,languageTypeCode,resposedata){var obj={};obj['fields']={};obj['gridColumns']=[];filterFields.map(function(item){if(item.filterinputtype==='predefinednumeric'||item.filterinputtype==='predefinedtext'){var optionList=resposedata[item.predefinedtablename].map(function(data){var jsondata=data[item.predefinedtablename]?data[item.predefinedtablename].value?JSON.parse(data[item.predefinedtablename].value):data.jsondata:data.jsondata;jsondata['title']=item.predefinedismultilingual?jsondata[item.predefineddisplaymember][languageTypeCode]||jsondata[item.predefineddisplaymember]['en-US']:jsondata[item.predefineddisplaymember];jsondata['value']=jsondata[item.predefinedvaluemember];return jsondata;});datapredef[item.columnname]=optionList;}switch(item.filterinputtype){case\"text\":obj['fields'][item.type==='dynamic'?item.ismultilingual?\"jsondata->'\"+item.columnname+\"'->>'\"+languageTypeCode+\"'\":\"jsondata->>'\"+item.columnname+\"'\":item.columnname]={label:item.displayname[languageTypeCode],type:\"text\",valueSources:[\"value\",\"func\"],mainWidgetProps:{\"valueLabel\":\"Name\",\"valuePlaceholder\":\"Enter\"+item.displayname[languageTypeCode]}};break;case\"numeric\":obj['fields'][item.type==='dynamic'?\"(jsondata->>'\"+item.columnname+\"')::int\":item.columnname]={label:item.displayname[languageTypeCode],type:\"number\",valueSources:[\"value\"],fieldSettings:_objectSpread({},item.numericcondition)};break;case\"date\":obj['fields'][item.type==='dynamic'?\"jsondata->>'\"+item.columnname+\"'\":item.columnname]={label:item.displayname[languageTypeCode],type:\"date\",valueSources:[\"value\"]};break;case\"predefinednumeric\":obj['fields'][item.type==='dynamic'?\"(jsondata->>'\"+item.columnname+\"')::int\":item.columnname]={label:item.displayname[languageTypeCode],type:\"select\",valueSources:[\"value\"],fieldSettings:{listValues:datapredef[item.columnname]}};break;case\"predefinedtext\":obj['fields'][item.type==='dynamic'?item.ismultilingual?\"jsondata->'\"+item.columnname+\"'->>'\"+languageTypeCode+\"'\":\"jsondata->>'\"+item.columnname+\"'\":item.columnname]={label:item.displayname[languageTypeCode],type:\"select\",valueSources:[\"value\"],fieldSettings:{listValues:datapredef[item.columnname]}};break;}var gridColumns=creategridColumns(item,languageTypeCode);if(item.filterinputtype!=='predefinednumeric'){obj['gridColumns'].push(gridColumns);}});return obj;}export function filterObject(item,languageTypeCode,resposedata){var obj={};var preobj={};if(item.filterinputtype==='predefinednumeric'||item.filterinputtype==='predefinedtext'){var optionList=resposedata[item.predefinedtablename].map(function(data){var jsondata=data[item.predefinedtablename]?data[item.predefinedtablename].value?JSON.parse(data[item.predefinedtablename].value):data.jsondata:data.jsondata;jsondata['text']=item.predefinedismultilingual?jsondata[item.predefineddisplaymember][languageTypeCode]||jsondata[item.predefineddisplaymember]['en-US']:jsondata[item.predefineddisplaymember];jsondata['value']=jsondata[item.predefinedvaluemember];//delete jsondata.jsondata\nreturn jsondata;});datapredef[item.columnname]=optionList;// preobj = {\n//     predefdata: optionList, predefineddisplaymember: item.predefineddisplaymember,\n//     predefinedvaluemember: item.columnname\n// }\n}switch(item.filterinputtype){case\"text\":return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:TextFilter,operators:Operators.text};case\"numeric\":return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:NumericFilter,operators:Operators.numeric};case\"date\":return obj={name:item.columnname+\"timestamp\",label:item.displayname[languageTypeCode],filter:DateFilter,operators:Operators.date};case\"predefinednumeric\":return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:CustomFilter,operators:Operators.numeric};case\"predefinedtext\":return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:CustomFilter,operators:Operators.text};default:return obj={name:item.columnname,label:item.displayname[languageTypeCode],filter:TextFilter,operators:Operators.text};}//return obj;\n}export function getDynamicFilterExecuteData(inputParam){return function(dispatch){var obj=_objectSpread(_objectSpread({},inputParam.component),{},{filterquery:inputParam.filterquery,userinfo:inputParam.userinfo});dispatch(initRequest(true));rsapi.post(\"/dynamicpreregdesign/getdynamicfilterexecutedata\",obj).then(function(response){var source=inputParam.component.source;var languageTypeCode=inputParam.userinfo.slanguagetypecode;var lstData=response.data[inputParam.component.label];var multilingual=[];inputParam.component.filterfields.map(function(item){if(item.ismultilingual){multilingual.push(item.columnname);}});var optionList=lstData.map(function(item){var jsondata=item[source]?item[source].value?JSON.parse(item[source].value):item.jsondata:item.jsondata;multilingual.map(function(mul){jsondata[mul]=jsondata[mul][languageTypeCode]||jsondata[mul]['en-US'];});// let label = isMultiLingual ?\n//   jsondata[optionValue]\n//   [languageTypeCode] || jsondata[optionValue]['en-US']\n//   : jsondata[optionValue];\nreturn jsondata;});dispatch({type:DEFAULT_RETURN,payload:{lstPatient:optionList,loading:false,screenName:inputParam.component.displayname[languageTypeCode]}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function rearrangeDateFormatforKendoDataTool(userInfo,dateValue){var splitChar=\"/\";if(dateValue!==undefined){var index=userInfo.ssitedatetime&&userInfo.ssitedatetime.indexOf(\"/\"||\"-\");if(index!==-1)splitChar=userInfo.ssitedatetime.substring(index,index+1);}//   console.log(\"splitChar:\", splitChar);\nif((splitChar===\"/\"||splitChar===\"-\")&&typeof dateValue===\"string\"){var firstField=userInfo.ssitedatetime&&userInfo.ssitedatetime.split(splitChar)[0];// console.log(\"firstField:\", firstField);\nvar timeSplitChar=dateValue.indexOf(\"T\")!==-1?\"T\":\" \";var datetime=dateValue.split(timeSplitChar);var dateArray=datetime[0].split(splitChar);if(firstField===\"dd\"){var day=dateArray[0];var month=dateArray[1];var year=dateArray[2];var time=datetime[1]||\"00:00:00\";var formatted=year+\"-\"+month+\"-\"+day+\"T\"+time;return new Date(formatted);}else if(firstField===\"yyyy\"){var _year=dateArray[0];var _month=dateArray[1];var _day=dateArray[2];var _time=datetime[1]||\"00:00:00\";var _formatted=_year+\"-\"+_month+\"-\"+_day+\"T\"+_time;return new Date(_formatted);}else{return new Date(dateValue);}}else{return dateValue;}}export function preRegDispatch(inputParam){return function(dispatch){dispatch(initRequest(true));dispatch({type:DEFAULT_RETURN,payload:_objectSpread({},inputParam)});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/RegistrationAction.js"],"names":["React","rsapi","Axios","toast","filterRecordBasedOnTwoArrays","sortData","rearrangeDateFormat","convertDateTimetoString","fillRecordBasedOnCheckBoxSelection","getRecordBasedOnPrimaryKeyName","updatedObjectWithNewElement","replaceUpdatedObject","parentChildComboLoad","getSameRecordFromTwoArrays","constructjsonOptionList","constructjsonOptionDefault","childComboLoad","filterRecordBasedOnPrimaryKeyName","reArrangeArrays","childComboLoadForEdit","DEFAULT_RETURN","intl","initRequest","RegistrationSubType","RegistrationType","transactionStatus","crudMaster","postCRUDOrganiseTransSearch","constructOptionList","Operators","TextFilter","NumericFilter","BooleanFilter","DateFilter","EnumFilter","EnumFilterProps","ComboBox","getSampleTypeChange","Map","masterData","event","labelname","dispatch","post","then","response","data","item","type","payload","loading","catch","error","message","getSubSampleChildTabDetail","inputData","ntransactionsamplecode","length","inputParamData","userinfo","url","activeSubSampleTab","responseData","selectedSubSample","showFilter","screenName","status","warn","selectedSample","activeSampleTab","FormattedMessage","id","getRegTypeChange","getRegSubTypeChange","getComponentTestBySpec","selectedRecord","Component","Test","slno","selectedComponent","undefined","SelectedTest","Object","keys","popUptestDataState","skip","take","getTestfromDB","objComponent","LoginProps","nflag","component","value","label","dreceiveddate","userInfo","nspecsampletypecode","TestData","loadComponent","selectComponent","showSaveContinue","SelectedSource","parentPopUpSize","CurrentTime","unshift","EditComponent","urlArray","ComponentTestBySpec","timezone","all","lstComponentMap","lstComponent","timeZoneListMap","TimeZoneField","get","timeZoneList","scomponentname","ncomponentcode","ntzdreceivedate","findIndex","x","ntimezonecode","stimezoneid","childoperation","ChildscreenName","openChildModal","ReloadData","searchSampleRef","current","searchSubSampleRef","searchTestRef","testskip","testtake","subsampletake","subsampleskip","showSample","getTreeByProduct","comboData","inputParam","Specification","AgaramTree","ActiveKey","FocusKey","OpenNodes","selectedSpec","sversion","ntemplatemanipulationcode","getNewRegSpecification","selectedNode","operation","methodUrl","ntreetemplatemanipulationcode","activeKey","focusKey","primaryKey","AddComponents","sreceiveddate","stzdreceivedate","scomments","nallottedspeccode","openPortal","openModal","getTest","nneedsubsample","specBasedComponent","componentTest","TestCombined","loadTest","formatMessage","addsubSample","columnList","childColumnList","SubSamplecomboComponents","SubSamplewithoutCombocomponent","isServiceRequired","SubSamplecomboData","timeZoneService","actualService","parentcolumnlist","childcolumnlist","TestGet","timeZoneMap","defaultTimeZone","newcomboData","slanguagetypecode","comboData1","selectedRecord1","map","componentrow","inputtype","mandatory","loadcurrentdate","Date","RealRegSubTypeValue","nregsubtypecode","portalOrder","containerType","containerList","nportalordercode","jsondata","push","loadSubSample","parentSubSampleColumnList","selectedTestData","selectedobject","Reg","addSubSampleSaveContinue","Map1","selectedTestData1","filter","some","y","editSubSample","Componnet","comp","insertRegistration","rtn","RegistrationGetSample","RegistrationGetSubSample","RegistrationGetTest","selectedTest","multipleselectionFlag","respObject","loadEsign","showConfirmAlert","loadPreregister","postParamList","getRegistrationSample","selectedFilter","getRegistrationsubSampleDetail","nsampletypecode","nregtypecode","npreregno","ntransactionstatus","napprovalconfigcode","activeTestTab","ndesigntemplatemappingcode","checkBoxOperation","activeName","dataStateName","subSample","skipInfo","oldSelectedTest","oldSelectedSubSample","childTabsKey","removeElementFromArray","selectedPreregno","RegistrationTestComment","RegistrationTestAttachment","RegistrationParameter","wholeSubSampleList","b","forEach","subsample","index","includes","splice","ResponseData","RegistrationTestComment1","ntransactiontestcode","RegistrationTestAttachment1","resultResponseData","RegistrationParameter1","ntransactiontestcode1","ResponseData1","RegistrationTestComment2","ntransactionTestCode","bool","wholeTestList","test","keepOld","sampleGridDataState","sort","attachmentskip","isGrandChildGetRequired","TestSelected","subSampleSelected","filterTestSameOldSelectedTest","join","filterSelectedSubSample","getRegistrationTestDetail","getTestChildTabDetailRegistration","subsamplecheck","SubSampleSelected","wholeSubSample","selectedSubSample1","dataStateArray","arr","selectedTransactionsamplecode","RegistrationSampleComment","RegistrationSampleAttachment","testList","wholeSubsampleList","toString","selectedTransactioncode","acceptRegistration","addMoreTest","ncontrolCode","sampleList","obj","slice","selectedsample","findTransactionStatus","Set","REJECT","CANCELLED","CERTIFIED","SENT","findApprovalVersion","napprovalversioncode","findSampleSpec","availableTest","loadChildTest","props","createRegistrationTest","modalName","classUrl","getEditRegistrationComboService","comboComponents","withoutCombocomponent","primaryKeyName","editRegParam","mastertoedit","selectedRegistration","languagetypeCode","comboValues","optionList","valuemember","displaymember","source","isMultiLingual","date","sregsubtypename","updateRegistration","regDateEditConfirmMessage","regEditParam","cancelTestAction","cancelSampleAction","addsubSampleRegistration","regcolumnList","selectRecord","regchildColumnList","regSubSamplecomboComponents","regSubSamplewithoutCombocomponent","ncontrolcode","loadRegSubSample","regSubSamplecomboData","regparentSubSampleColumnList","saveSubSample","getEditSubSampleComboService","editSubSampleRegParam","PREREGISTER","onUpdateSubSampleRegistration","cancelSubSampleAction","preregRecordToQuarantine","selectedSampleCode","selectedTestCode","ApprovalParameter","ResultUsedInstrument","ResultUsedTasks","ApprovalResultChangeHistory","ApprovalHistory","toTimestamp","strDate","dt","getTime","getDynamicFilter","languageTypeCode","lstData","gridColumns","fields","datefileds","multilingual","filterfields","filterObject","ismultilingual","columnname","filterinputtype","creategridColumns","JSON","parse","rearrangeDateFormatforKendoDataTool","mul","lstPatient","loadCustomSearchFilter","displayname","seletedFilterComponent","kendoSkip","kendoTake","kendoFilter","logic","filters","awesomeTree","awesomeConfig","filterObjectForReactAwesomeFilter","datapredef","CustomFilter","defaultItem","onChange","onFilterChange","call","nextFilter","target","field","title","width","filterFields","resposedata","predefinedtablename","predefinedismultilingual","predefineddisplaymember","predefinedvaluemember","valueSources","mainWidgetProps","fieldSettings","numericcondition","listValues","preobj","name","operators","text","numeric","getDynamicFilterExecuteData","filterquery","dateValue","splitChar","ssitedatetime","indexOf","substring","firstField","split","timeSplitChar","datetime","dateArray","day","month","year","time","formatted","preRegDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    filterRecordBasedOnTwoArrays, sortData,\r\n    rearrangeDateFormat, convertDateTimetoString, fillRecordBasedOnCheckBoxSelection, getRecordBasedOnPrimaryKeyName, updatedObjectWithNewElement, replaceUpdatedObject, parentChildComboLoad, getSameRecordFromTwoArrays, constructjsonOptionList, constructjsonOptionDefault, childComboLoad, filterRecordBasedOnPrimaryKeyName, reArrangeArrays, childComboLoadForEdit\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { intl } from '../components/App';\r\nimport { initRequest } from './LoginAction';\r\nimport { RegistrationSubType, RegistrationType, transactionStatus } from '../components/Enumeration';\r\nimport { crudMaster, postCRUDOrganiseTransSearch } from './ServiceAction'\r\n//import { getTestChildTabDetail } from './index.js'\r\nimport { constructOptionList } from '../components/CommonScript';\r\nimport {\r\n    Operators,\r\n    TextFilter,\r\n    NumericFilter,\r\n    BooleanFilter,\r\n    DateFilter,\r\n    EnumFilter,\r\n    EnumFilterProps,\r\n} from \"@progress/kendo-react-data-tools\";\r\nimport { ComboBox } from \"@progress/kendo-react-dropdowns\";\r\nexport function getSampleTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getRegTypeBySampleType\", Map)\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getSubSampleChildTabDetail(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactionsamplecode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            switch (inputData.activeSubSampleTab) {\r\n                case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSubSampleAttachment\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                    url = \"comments/getSubSampleComment\"\r\n                    break;\r\n                default:\r\n                    url = null\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(url, inputParamData)\r\n                    .then(response => {\r\n                        let responseData = { ...response.data }\r\n                        responseData = sortData(responseData)\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData: {\r\n                                    ...inputData.masterData,\r\n                                    ...responseData,\r\n                                    selectedSubSample: inputData.selectedSubSample,\r\n                                    // selectedTestCode: inputData.ntransactiontestcode,\r\n                                },\r\n                                loading: false,\r\n                                showFilter: false,\r\n                                activeSubSampleTab: inputData.activeSubSampleTab,\r\n                                screenName: inputData.screenName\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            //toast.warn(\"Please Select a Sample\");\r\n            toast.warn(intl.FormattedMessage({\r\n                id: \"IDS_PLSSELECTASAMPLE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport function getRegTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        rsapi.post(\"/registration/getRegSubTypeByRegType\", Map)\r\n            .then(response => {\r\n                // const RegistrationSubType = response.data[\"RegistrationSubType\"];\r\n\r\n                //  console.log(response.data);\r\n                // RegistrationSubType.length > 0 ?\r\n                //     selectedRecord[\"nregsubtypecode\"] = {\r\n                //         \"value\": RegistrationSubType[0].nregsubtypecode,\r\n                //         \"label\": RegistrationSubType[0].sregsubtypename\r\n                //     } : selectedRecord[\"nregsubtypecode\"] = \"\";\r\n                // const [labelname] = event.item;\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegSubTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getRegTemplateTypeByRegSubType\", Map)\r\n\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function getComponentTestBySpec(Map, selectedRecord, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getComponentTestBySpec\", Map)\r\n            .then(response => {\r\n                const { Component, Test } = response.data;\r\n                let slno = Component.length > 0 ? Component[0].slno : -1;\r\n                let selectedComponent = Component.length > 0 ? Component[0] : undefined\r\n                let SelectedTest = [];\r\n                if (Object.keys(Test).length > 0) {\r\n                    SelectedTest = Test[slno];\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Component, Test, SelectedTest, selectedComponent, loading: false,\r\n                        selectedRecord, popUptestDataState: { skip: 0, take: 10 }\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getTestfromDB(objComponent, LoginProps, nflag) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let component = { ...objComponent };\r\n        component[\"ncomponentcode\"] = objComponent[\"ncomponentcode\"] ? objComponent[\"ncomponentcode\"].value : -1;\r\n        component[\"nstoragelocationcode\"] = objComponent[\"nstoragelocationcode\"] ? objComponent[\"nstoragelocationcode\"].value : -1;\r\n        component[\"nstorageconditioncode\"] = objComponent[\"nstorageconditioncode\"] ? objComponent[\"nstorageconditioncode\"].value : -1;\r\n        component[\"slno\"] = LoginProps.Component ? Object.keys(LoginProps.Component).length + 1 : 0;\r\n        component[\"scomponentname\"] = objComponent[\"ncomponentcode\"].label;\r\n        component[\"sstoragelocationname\"] = objComponent[\"nstoragelocationcode\"] && objComponent[\"nstoragelocationcode\"].label ? objComponent[\"nstoragelocationcode\"].label : \"\";\r\n        component[\"sstorageconditionname\"] = objComponent[\"nstorageconditioncode\"] && objComponent[\"nstorageconditioncode\"].label ? objComponent[\"nstorageconditioncode\"].label : \"\";\r\n        component[\"ntzdmanufdate\"] = objComponent[\"ntzdmanufdate\"] ? objComponent[\"ntzdmanufdate\"].value : -1;\r\n        component[\"ntzdreceivedate\"] = objComponent[\"ntzdreceivedate\"] ? objComponent[\"ntzdreceivedate\"].value : -1;\r\n        component[\"stzdreceivedate\"] = objComponent[\"ntzdreceivedate\"] ? objComponent[\"ntzdreceivedate\"].label : \"\";\r\n        component[\"nplasmafilecode\"] = objComponent[\"nplasmafilecode\"] ? objComponent[\"nplasmafilecode\"].value : -1;\r\n        component[\"splasmafilenumber\"] = objComponent[\"nplasmafilecode\"] ? objComponent[\"nplasmafilecode\"].label : \"\";\r\n        const dreceiveddate = objComponent[\"dreceiveddate\"];\r\n        component[\"dreceiveddate\"] = dreceiveddate;//formatInputDate(objComponent[\"dreceiveddate\"], false);\r\n        component[\"sreceiveddate\"] = convertDateTimetoString(dreceiveddate, LoginProps.userInfo);//formatInputDateWithoutT(objComponent[\"dreceiveddate\"], false);//formatDate(objComponent[\"sreceiveddate\"]);\r\n        // rsapi.post(\"/registration/getTestfromDB\", { \"Component\": component })\r\n        rsapi.post(\"/registration/getTestfromDB\", {\r\n            nspecsampletypecode: component.nspecsampletypecode,\r\n            slno: component.slno\r\n        })\r\n            .then(response => {\r\n                let TestData = response.data;\r\n                let slno = component.slno;\r\n                let SelectedTest = [];\r\n                let loadComponent = true;\r\n                let selectComponent = {};\r\n                let showSaveContinue = true;\r\n                let SelectedSource = [];\r\n                // let openChildModal = true;\r\n                let selectedComponent = undefined;\r\n                let parentPopUpSize = \"lg\"\r\n                // selectComponent = objComponent\r\n                if (nflag === 1) {\r\n                    loadComponent = true;\r\n                    objComponent[\"smanuflotno\"] = \"\";\r\n                    objComponent[\"dreceiveddate\"] = rearrangeDateFormat(LoginProps.userInfo, LoginProps.CurrentTime)//new Date(LoginProps.CurrentTime);\r\n                    objComponent[\"sreceiveddate\"] = rearrangeDateFormat(LoginProps.userInfo, LoginProps.CurrentTime)//new Date(LoginProps.CurrentTime);\r\n                    selectComponent = objComponent;\r\n                } else {\r\n                    loadComponent = false;\r\n                    parentPopUpSize = \"xl\"\r\n                    // openChildModal = false;\r\n                    showSaveContinue = false;\r\n                    selectComponent = undefined\r\n                }\r\n                let Test = LoginProps.Test || [];\r\n                let Component = LoginProps.Component || [];\r\n                Component.unshift(component);\r\n                selectedComponent = component;\r\n                Test[slno] = response.data;\r\n                SelectedTest = TestData;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Component, Test, SelectedTest, selectComponent, selectedComponent,\r\n                        loadComponent, showSaveContinue, parentPopUpSize, loading: false, SelectedSource\r\n                    }\r\n                });\r\n                // console.log(response.data);\r\n            })\r\n            .catch(error => {\r\n                //   console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function EditComponent(Map, component, userInfo) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [];\r\n        const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\",\r\n            Map);\r\n\r\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n        urlArray = [ComponentTestBySpec, timezone]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const lstComponentMap = constructOptionList(response[0].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                    \"stimezoneid\", undefined, undefined, true);\r\n                const TimeZoneField = response[1].data;\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n\r\n                component[\"ncomponentcode\"] = { label: component.scomponentname, value: component.ncomponentcode }\r\n                component[\"dreceiveddate\"] = rearrangeDateFormat(userInfo, component[\"sreceiveddate\"]);\r\n                component[\"scomments\"] = component[\"scomments\"]\r\n\r\n                let ntzdreceivedate = component.ntzdreceivedate;\r\n                if (component.ntzdreceivedate !== null && typeof component.ntzdreceivedate === \"object\") {\r\n                    ntzdreceivedate = component.ntzdreceivedate.value;\r\n                }\r\n                component[\"ntzdreceivedate\"] = component.ntzdreceivedate ?\r\n                    {\r\n                        \"label\": TimeZoneField[TimeZoneField.findIndex(x => x.ntimezonecode === ntzdreceivedate)].stimezoneid, \"value\":\r\n                            TimeZoneField[TimeZoneField.findIndex(x => x.ntimezonecode === ntzdreceivedate)].ntimezonecode\r\n                    } : \"\"\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadComponent: true, childoperation: \"update\",\r\n                        lstComponent, ChildscreenName: \"Component\",\r\n                        openChildModal: false, selectComponent: component, parentPopUpSize: \"lg\",\r\n                        timeZoneList, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function ReloadData(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"registration/getRegistrationByFilterSubmit\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                    inputData.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                    inputData.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    //masterData['searchedTests'] = undefined\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n                // let selectedFilter = inputData.selectedFilter;\r\n                // selectedFilter[\"fromdate\"] = \"\";\r\n                // selectedFilter[\"todate\"] = \"\";\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampletake: undefined,\r\n                        subsampleskip: 0,\r\n                        showSample: undefined,\r\n                        //selectedFilter\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTreeByProduct(Map, selectedRecord, comboData, inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getTreeByProduct\", Map)\r\n            .then(response => {\r\n                let { Specification, AgaramTree, ActiveKey, FocusKey, OpenNodes } = [];\r\n                const selectedSpec = {}\r\n                if (response.data[\"rtn\"] === true) {\r\n                    Specification = constructOptionList(response.data[\"Specification\"] || [], \"nallottedspeccode\",\r\n                        \"sspecname\", undefined, undefined, true).get(\"OptionList\");\r\n                    AgaramTree = response.data[\"AgaramTree\"];\r\n                    ActiveKey = response.data[\"ActiveKey\"];\r\n                    FocusKey = response.data[\"FocusKey\"];\r\n                    OpenNodes = response.data[\"OpenNodes\"];\r\n                    //Manufacturer = response.data[\"Manufacturer\"];\r\n                    selectedSpec[\"nallottedspeccode\"] = Specification.length > 0 ? {\r\n                        \"value\": Specification[0].value,\r\n                        \"label\": Specification[0].label,\r\n                        \"item\": Specification[0].item\r\n                    } : \"\";\r\n\r\n                    selectedSpec[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\"\r\n                    selectedSpec[\"ntemplatemanipulationcode\"] = Specification.length > 0 ? Specification[0].item.ntemplatemanipulationcode : -1\r\n                }\r\n                selectedRecord = { ...selectedRecord, ...selectedSpec }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Specification,\r\n                        selectedRecord,\r\n                        AgaramTree, ActiveKey, FocusKey, OpenNodes,\r\n                        Test: [],\r\n                        SelectedTest: [],\r\n                        loading: false,\r\n                        comboData,\r\n                        ...inputParam,\r\n                        selectedSpec,\r\n                        Component: [],\r\n                        selectComponent: {},\r\n                        selectedComponent: {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport const getNewRegSpecification = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        if (inputParam.selectedNode !== null) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/registration/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam, ntreetemplatemanipulationcode: inputParam.selectedNode.ntemplatemanipulationcode })\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    let Specification = constructOptionList(response.data || [], \"nallottedspeccode\", \"sspecname\", false, false, true).get(\"OptionList\");\r\n                    let selectedComponent = undefined;\r\n                    inputParam.selectedRecord[\"nallottedspeccode\"] = Specification.length > 0 ? { value: Specification[0].value, label: Specification[0].label, item: Specification[0].item } : \"\";\r\n                    inputParam.selectedRecord[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\";\r\n                    inputParam.selectedRecord[\"ntemplatemanipulationcode\"] = Specification.length > 0 ? Specification[0].item.ntemplatemanipulationcode : -1;\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ActiveKey: inputParam.activeKey,\r\n                            FocusKey: inputParam.focusKey,\r\n                            primaryKey: inputParam.primaryKey,\r\n                            Specification: Specification,\r\n                            selectedNode: inputParam.selectedNode,\r\n                            selectedRecord: inputParam.selectedRecord,\r\n                            Test: [],\r\n                            selectedComponent,\r\n                            SelectedTest: [],\r\n                            loading: false,\r\n                            showSample: undefined\r\n                        }\r\n                    }\r\n                    );\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function AddComponents(Map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = []\r\n        const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\",\r\n            Map);\r\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n        urlArray = [ComponentTestBySpec, timezone\r\n        ]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const lstComponentMap = constructOptionList(response[0].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                    \"stimezoneid\", undefined, undefined, true);\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n                let dreceiveddate = null;\r\n                if (lstComponent[0].item.sreceiveddate)\r\n                    dreceiveddate = rearrangeDateFormat(Map[\"userinfo\"], lstComponent[0].item.sreceiveddate);//new Date(lstComponent[0].item.sreceiveddate);//|| [];\r\n\r\n                let selectComponent = {\r\n                    sreceiveddate: dreceiveddate,\r\n                    dreceiveddate,\r\n                    ntzdreceivedate: { \"label\": Map[\"userinfo\"].stimezoneid, \"value\": Map[\"userinfo\"].ntimezonecode },\r\n                    stzdreceivedate: Map[\"userinfo\"].stimezoneid,\r\n                    scomments: \"\",\r\n                    nallottedspeccode: lstComponent[0].item.nallottedspeccode\r\n                };\r\n                let CurrentTime = dreceiveddate;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadComponent: true,\r\n                        lstComponent, dreceiveddate, ChildscreenName: \"Component\",\r\n                        showSaveContinue: true, openChildModal: false, childoperation: \"create\", selectComponent\r\n                        , parentPopUpSize: \"lg\", CurrentTime, timeZoneList, loading: false,\r\n                        openPortal: true, openModal: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\nexport function getTest(objComponent, LoginProps, nneedsubsample, specBasedComponent) {\r\n    return function (dispatch) {\r\n        if (Object.keys(objComponent).length > 0) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/registration/getTestfromDB\", {\r\n                nspecsampletypecode: objComponent.nspecsampletypecode,\r\n                slno: objComponent.slno,\r\n                nneedsubsample: nneedsubsample,\r\n                nallottedspeccode: objComponent.nallottedspeccode,\r\n                specBasedComponent: specBasedComponent\r\n\r\n            })\r\n                .then(response => {\r\n                    let TestData = response.data;\r\n                    let Test = LoginProps.Test || [];\r\n                    let componentTest = Test[objComponent.slno] ? Test[objComponent.slno] : [];\r\n                    const TestCombined = filterRecordBasedOnTwoArrays(TestData, componentTest, \"ntestgrouptestcode\");\r\n                    // const lstComponentMap = constructOptionList(TestCombined|| [], \"ntestgrouptestcode\",\r\n                    //\"stestsynonym\", undefined, undefined, true);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            TestCombined, loadTest: true, openChildModal: false,\r\n                            ChildscreenName: \"Test\",\r\n                            screenName: \"Test\",\r\n                            operation: \"create\",\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\", loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                })\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTCOMPONENTTOADDTEST\" }));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function addsubSample(masterData, userinfo, columnList,\r\n    selectComponent, childColumnList,\r\n    SubSamplecomboComponents, SubSamplewithoutCombocomponent,\r\n    specBasedComponent, Map, Component, isServiceRequired,\r\n    SubSamplecomboData, selectedRecord) {\r\n    if (isServiceRequired) {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            const urlArray = []\r\n            const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n            urlArray[0] = timeZoneService;\r\n            const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n                parentcolumnlist: columnList,\r\n                childcolumnlist: childColumnList,\r\n                userinfo\r\n            })\r\n            urlArray[1] = actualService;\r\n            if (specBasedComponent) {\r\n                const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                    ...Map,\r\n                    specBasedComponent: specBasedComponent\r\n                })\r\n                urlArray[2] = ComponentTestBySpec;\r\n            } else {\r\n                Component = Component ? Component : []\r\n                const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    //nneedsubsample: nneedsubsample,\r\n                    // nallottedspeccode: objComponent.nallottedspeccode,\r\n                    specBasedComponent: specBasedComponent\r\n\r\n                })\r\n                urlArray[2] = TestGet;\r\n            }\r\n            Axios.all(urlArray).then(response => {\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userinfo.stimezoneid, value: userinfo.ntimezonecode }\r\n                const newcomboData = parentChildComboLoad(columnList, response[1].data,\r\n                    selectComponent, childColumnList, SubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo)\r\n                let TestCombined = [];\r\n                let lstComponent = [];\r\n                if (specBasedComponent) {\r\n                    const lstComponentMap = constructOptionList(response[2].data.lstComponent || [], \"ncomponentcode\",\r\n                        \"scomponentname\", undefined, undefined, true);\r\n\r\n                    lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n                } else {\r\n                    TestCombined = response[2].data\r\n                }\r\n                const comboData1 = newcomboData.comboData\r\n                const selectedRecord1 = newcomboData.selectedRecord\r\n                SubSamplewithoutCombocomponent.map(componentrow => {\r\n                    if (componentrow.inputtype === \"date\") {\r\n                        if (componentrow.mandatory) {\r\n                            selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? new Date() : \"\";\r\n                        }\r\n                        // if (componentrow.timezone) {\r\n                        //     sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                        //         { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                        //         defaulttimezone ? defaulttimezone : -1\r\n                        // }\r\n                    }\r\n\r\n                })\r\n\r\n                if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\r\n\r\n                    let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\r\n                    let containerType = comboData1['Container Type'] || []\r\n                    comboData1['ContainerType'] = comboData1['Container Type'] || []\r\n                    let containerList = []\r\n                    const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                    containerType.map(x => {\r\n                        if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                            containerList.push(x)\r\n                        }\r\n                    })\r\n\r\n                    comboData1['Container Type'] = containerList\r\n                }\r\n\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ChildscreenName: \"SubSample\",\r\n                        screenName: \"SubSample\",\r\n                        showSaveContinue: true,\r\n                        openChildModal: false,\r\n                        childoperation: \"create\",\r\n                        parentPopUpSize: \"lg\",\r\n                        loading: false,\r\n                        lstComponent,\r\n                        openPortal: true,\r\n                        openModal: false,\r\n                        operation: \"create\",\r\n                        loadSubSample: true,\r\n                        selectComponent: selectedRecord1,\r\n                        SubSamplecomboData: comboData1,\r\n                        SubSamplecomboComponents,\r\n                        SubSamplewithoutCombocomponent,\r\n                        TestCombined,\r\n                        parentSubSampleColumnList: columnList,\r\n                        timeZoneList,\r\n                        defaultTimeZone,\r\n                        masterData,\r\n                    }\r\n                });\r\n            })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                })\r\n        }\r\n    } else {\r\n        const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\r\n            selectComponent, childColumnList, SubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo)\r\n        return (dispatch) => {\r\n            if (!specBasedComponent) {\r\n                rsapi.post(\"/registration/getTestfromDB\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    //nneedsubsample: nneedsubsample,\r\n                    ...Map,\r\n                    // nallottedspeccode: objComponent.nallottedspeccode,\r\n                    specBasedComponent: specBasedComponent\r\n                }).then(response => {\r\n\r\n                    const TestCombined = response.data\r\n                    if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\r\n\r\n                        let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\r\n                        let containerType = SubSamplecomboData['ContainerType'] || []\r\n                        let containerList = []\r\n                        const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                        containerType.map(x => {\r\n                            if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                                containerList.push(x)\r\n                            }\r\n                        })\r\n\r\n                        SubSamplecomboData['Container Type'] = containerList\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ChildscreenName: \"SubSample\",\r\n                            showSaveContinue: true,\r\n                            openChildModal: false,\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            lstComponent: [],\r\n                            openPortal: true,\r\n                            openModal: false,\r\n                            operation: \"create\",\r\n                            loadSubSample: true,\r\n                            selectComponent: newcomboData.selectedRecord,\r\n                            TestCombined: TestCombined\r\n                        }\r\n                    });\r\n                })\r\n            } else {\r\n                // Component = Component ? Component : []\r\n                rsapi.post(\"/registration/getComponentBySpec\", {\r\n                    ...Map,\r\n                    specBasedComponent: specBasedComponent\r\n                }).then(response => {\r\n                    // const lstComponent =  response.data.lstComponent\r\n                    let lstComponent = response.data.lstComponent //filterRecordBasedOnTwoArrays(response.data.lstComponent, Component, \"ncomponentcode\")\r\n                    const lstComponentMap = constructOptionList(lstComponent || [], \"ncomponentcode\",\r\n                        \"scomponentname\", undefined, undefined, true);\r\n\r\n                    lstComponent = lstComponentMap.get(\"OptionList\");\r\n                    if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\r\n\r\n                        let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\r\n                        let containerType = SubSamplecomboData['ContainerType'] || []\r\n                        let containerList = []\r\n                        const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                        containerType.map(x => {\r\n                            if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                                containerList.push(x)\r\n                            }\r\n                        })\r\n\r\n                        SubSamplecomboData['Container Type'] = containerList\r\n                    }\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ChildscreenName: \"SubSample\",\r\n                            showSaveContinue: true,\r\n                            openChildModal: false,\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            lstComponent,\r\n                            openPortal: true,\r\n                            openModal: false,\r\n                            operation: \"create\",\r\n                            loadSubSample: true,\r\n                            selectComponent: newcomboData.selectedRecord,\r\n                            TestCombined: [],\r\n                            selectedTestData: []\r\n                        }\r\n                    });\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function componentTest(selectedobject, Reg, specBasedComponent, Component) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        Component = Component ? Component : []\r\n        rsapi.post(\"/registration/getTestfromDB\", {\r\n            nspecsampletypecode: selectedobject.nspecsampletypecode,\r\n            slno: Component ? Object.keys(Component).length + 1 : 1,\r\n            specBasedComponent: specBasedComponent\r\n\r\n        })\r\n            .then(response => {\r\n                let TestData = response.data;\r\n                //let Test = [];\r\n                // Test[selectedobject.slno] = TestData;\r\n                const Map = {}\r\n                if (Reg) {\r\n                    Map[\"selectedRecord\"] = selectedobject\r\n                } else {\r\n                    Map[\"selectComponent\"] = selectedobject\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        TestCombined: TestData, ...Map, loading: false, selectedTestData: []\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function addSubSampleSaveContinue(Map1, Map,\r\n    specBasedComponent, Component, selectedTestData, lstComponent) {\r\n\r\n    //  const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\r\n    //     selectComponent, childColumnList, SubSamplewithoutCombocomponent)\r\n    return (dispatch) => {\r\n        if (!specBasedComponent) {\r\n            rsapi.post(\"/registration/getTestfromDB\", {\r\n                nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                nspecsampletypecode: Map[\"nspecsampletypecode\"],\r\n                slno: Map1.Component ? Object.keys(Map1.Component).length + 1 : 1,\r\n                specBasedComponent: specBasedComponent\r\n            }).then(response => {\r\n                let TestCombined = response.data\r\n                selectedTestData = selectedTestData && selectedTestData.length > 0 ? selectedTestData : []\r\n                const selectedTestData1 = TestCombined.filter(function (x) {\r\n                    return selectedTestData.some(function (y) {\r\n                        return x[\"ntestgrouptestcode\"] === y.value\r\n                    })\r\n                });\r\n                // const selectedTestData2 = []\r\n                // TestCombined.map(x=>{\r\n                //     selectedTestData1.map(y=>{\r\n                //         if(x[\"ntestgrouptestcode\"] !== y[\"ntestgrouptestcode\"]){\r\n                //             selectedTestData2.push(x)\r\n                //         } \r\n                //     })\r\n                // });\r\n\r\n\r\n                //  let filterArray = filterRecordBasedOnTwoArrays(selectedTestData1, TestCombined, \"ntestgrouptestcode\")\r\n                // const filterArray = [...selectedTestData1, ...TestCombined]\r\n\r\n                selectedTestData = constructOptionList(selectedTestData1, \"ntestgrouptestcode\", \"stestsynonym\")\r\n                selectedTestData[\"ntestgrouptestcode\"] = selectedTestData.get(\"OptionList\")\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ...Map1,\r\n                        loading: false,\r\n                        TestCombined,\r\n                        selectedTestData\r\n                    }\r\n                });\r\n            })\r\n        }\r\n        else {\r\n            // lstComponent = lstComponent.filter(x => x.item.nspecsampletypecode !== Map1.selectComponent[\"nspecsampletypecode\"])\r\n            Map1.selectComponent[\"ncomponentcode\"] = {};\r\n            Map1.selectComponent[\"Sample Name\"] = \"\";\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    ...Map1,\r\n                    loading: false,\r\n                    TestCombined: [],\r\n                    selectedTestData: [],\r\n                    lstComponent\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function editSubSample(Map,\r\n    component, userInfo, specBasedComponent,\r\n    SubSamplecomboData, selectedRecord) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = []\r\n        let Componnet = {}\r\n        if (specBasedComponent) {\r\n            Componnet = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                ...Map\r\n            });\r\n        }\r\n        urlArray = [Componnet]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let comp = []\r\n                if (specBasedComponent) {\r\n                    comp = response[0].data.lstComponent\r\n                }\r\n                const lstComponentMap = constructOptionList(comp || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                if (Map.nregsubtypecode === 6) {\r\n                    let portalOrder = component['Container Type'] || {}\r\n                    let containerType = SubSamplecomboData['ContainerType'] || []\r\n                    let containerList = []\r\n                    const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                    containerType.map(x => {\r\n                        if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                            containerList.push(x)\r\n                        }\r\n                    })\r\n\r\n                    SubSamplecomboData['Container Type'] = containerList\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadSubSample: true, childoperation: \"update\",\r\n                        ChildscreenName: \"SubSample\",\r\n                        openChildModal: false, selectComponent: component,\r\n                        parentPopUpSize: \"lg\", loading: false, lstComponent, SubSamplecomboData\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function insertRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/createRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data.rtn === \"Success\") {\r\n                    let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\r\n                    let selectedSample = response.data[\"selectedSample\"];\r\n                    let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\r\n                    let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                    let selectedSubSample = RegistrationGetSubSample;\r\n                    RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\r\n                    let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n                    if (inputParam.inputData.nneedsubsample) {\r\n                        RegistrationGetSubSample = sortData(response.data[\"RegistrationGetSubSample\"], 'npreregno', 'desc')\r\n                        selectedSubSample = RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\r\n                        RegistrationGetTest = RegistrationGetTest.filter(x => x.ntransactionsamplecode === selectedSubSample[0].ntransactionsamplecode)\r\n                        selectedTest = RegistrationGetTest.length > 0 ? response.data[\"selectedTest\"] : [];\r\n                    }\r\n                    // RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\r\n                    if (inputParam.multipleselectionFlag) {\r\n                        selectedSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.selectedSample);\r\n                        updatedObjectWithNewElement(response.data[\"selectedSubSample\"], masterData.RegistrationGetSubSample);\r\n                        updatedObjectWithNewElement(response.data[\"selectedTest\"], masterData.RegistrationGetTest);\r\n                        RegistrationGetSubSample = masterData.RegistrationGetSubSample;\r\n                        RegistrationGetTest = masterData.RegistrationGetTest;\r\n                    }\r\n\r\n\r\n                    masterData = {\r\n                        ...masterData, ...response.data,\r\n                        selectedSample, selectedSubSample, selectedTest,\r\n                        RegistrationGetSubSample, RegistrationGetTest, RegistrationGetSample\r\n                    }\r\n                    let respObject = {\r\n                        masterData,\r\n                        ...inputParam.inputData,\r\n                        openModal: false,\r\n                        loadEsign: false,\r\n                        showConfirmAlert: false,\r\n                        selectedRecord: undefined,\r\n                        loading: false,\r\n                        loadPreregister: false,\r\n                        showSample: undefined,\r\n                        openPortal: false,\r\n                        selectedSpec: {},\r\n                        selectComponent: {},\r\n                        SelectedTest: {},\r\n                        selectedComponent: {},\r\n                        Component: [],\r\n                        selectedRecord: {},\r\n                        SelectedTest: [],\r\n                        Test: [],\r\n                        selectedComponent: {},\r\n                        subSampleDataGridList: []\r\n                    }\r\n                    inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getRegistrationSample(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"registration/getRegistrationByFilterSubmit\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                    inputData.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                    inputData.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n                let respObject = {};\r\n                if (inputData.selectedFilter) {\r\n                    respObject = { selectedFilter: { ...inputData.selectedFilter } };\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampleskip: 0,\r\n                        subsampletake: undefined,\r\n                        showSample: undefined,\r\n                        ...respObject,\r\n                        activeSampleTab: inputData.inputData.activeSampleTab\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegistrationsubSampleDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            activeSubSampleTab: inputData.activeSubSampleTab,\r\n            userinfo: inputData.userinfo,\r\n            ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n            nneedsubsample: inputData.nneedsubsample,\r\n            checkBoxOperation: inputData.nneedsubsample === true ?\r\n                inputData.checkBoxOperation === 5 ? 3 : inputData.checkBoxOperation : inputData.checkBoxOperation\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        const subSample = inputData.nneedsubsample\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"registration/getRegistrationSubSample\", inputParamData)\r\n                .then(response => {\r\n                    sortData(response.data, \"descending\", \"npreregno\");\r\n                    let masterData = {}\r\n                    let skipInfo = {}\r\n                    let oldSelectedTest = inputData.masterData.selectedTest || []\r\n                    if (subSample) {\r\n                        let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                            inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\",\r\n                            inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            selectedSubSample: inputData.masterData.RegistrationGetSubSample.length > 0 ?\r\n                                [inputData.masterData.RegistrationGetSubSample[0]] : [],\r\n                        }\r\n                        let RegistrationTestComment = [];\r\n                        let RegistrationTestAttachment = [];\r\n                        let RegistrationParameter = [];\r\n                        //if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 7) {  \r\n                        if (inputData.checkBoxOperation === 1) {\r\n\r\n                            const wholeSubSampleList = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((subsample, index) => {\r\n                                if (!wholeSubSampleList.includes(subsample.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n                            if (oldSelectedSubSample.length > 0) {\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedSubSample: oldSelectedSubSample\r\n                                }\r\n                            }\r\n                            const selectedTest = getSameRecordFromTwoArrays(oldSelectedTest,\r\n                                masterData.selectedSubSample, 'npreregno')\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest\r\n                            }\r\n                        }\r\n                        if (inputData.checkBoxOperation === 7) {\r\n                            // masterData = {\r\n                            //     ...masterData,\r\n                            //     APSelectedTest:responseData.APSelectedTest,\r\n                            //     AP_TEST:responseData.AP_TEST,\r\n                            //     ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\r\n                            // }\r\n\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                        let RegistrationTestAttachment1 = [];\r\n                                        if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                            RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                        }\r\n                                        let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                        RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = masterData.selectedTest.length > 0 ? masterData.selectedTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                            masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                            masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                        }\r\n                        if (inputData.checkBoxOperation === 3 || inputData.checkBoxOperation === 5) {\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: masterData.RegistrationGetTest.length > 0 ? [masterData.RegistrationGetTest[0]] : []\r\n                            }\r\n\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                        let RegistrationTestAttachment1 = [];\r\n                                        if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                            RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                        }\r\n                                        let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                        RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = masterData.selectedTest.length > 0 ? masterData.selectedTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                            masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                            masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                        }\r\n\r\n\r\n                        let { testskip, testtake, subsampleskip, subsampletake } = inputData\r\n                        let bool = false;\r\n\r\n                        if (inputData.masterData.RegistrationGetSubSample.length < inputData.subsampleskip) {\r\n                            testskip = 0;\r\n                            subsampleskip = 0;\r\n                            bool = true\r\n                        }\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake, subsampleskip, subsampletake }\r\n                        }\r\n                    } else {\r\n\r\n                        //let oldSelectedTest = inputData.masterData.selectedTest\r\n                        //  let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                            inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\",\r\n                            inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                            selectedSubSample: inputData.masterData.RegistrationGetSubSample,\r\n                        }\r\n                        let RegistrationTestComment = [];\r\n                        let RegistrationParameter = [];\r\n                        let RegistrationTestAttachment = [];\r\n\r\n                        if (inputData.checkBoxOperation === 7 || inputData.checkBoxOperation === 1) {\r\n                            const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                            oldSelectedTest.forEach((test, index) => {\r\n                                if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                    oldSelectedTest.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n\r\n                            let keepOld = false;\r\n                            let ntransactiontestcode;\r\n                            if (oldSelectedTest.length > 0) {\r\n                                keepOld = true\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedTest: oldSelectedTest,\r\n                                }\r\n                            } else {\r\n                                ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                    inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"\"\r\n                            }\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                        inputData.masterData.RegistrationParameter : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment ?\r\n                                            inputData.masterData.RegistrationTestAttachment : [] :\r\n                                            getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                                        inputData.masterData.RegistrationTestComment : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                        inputData.masterData.RegistrationParameter : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n                        else if (inputData.checkBoxOperation === 5) {\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                        let RegistrationTestAttachment1 = [];\r\n                                        if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                            RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                        }\r\n                                        let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                        RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                        }\r\n                        else {\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = response.data.RegistrationTestComment ?\r\n                                        [...response.data.RegistrationTestComment] : [];\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    {\r\n                                        RegistrationTestAttachment = response.data.RegistrationTestAttachment ?\r\n                                            [...response.data.RegistrationTestAttachment] : [];\r\n                                        activeName = \"RegistrationTestAttachment\"\r\n                                        dataStateName = \"testCommentDataState\"\r\n\r\n                                    }\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    RegistrationParameter = response.data.RegistrationParameter ?\r\n                                        [...response.data.RegistrationParameter] : [];\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationParameter = response.data.RegistrationParameter ?\r\n                                        [...response.data.RegistrationParameter] : [];\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n                        masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                        masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                        masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                        let { testskip, testtake } = inputData\r\n                        let bool = false;\r\n\r\n                        if (inputData.masterData.RegistrationGetTest.length < inputData.testskip) {\r\n                            testskip = 0;\r\n                            bool = true\r\n                        }\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake }\r\n                        }\r\n\r\n                    }\r\n                    if (inputData.masterData.selectedSample && inputData.sampleGridDataState\r\n                        && inputData.masterData.selectedSample.length <= inputData.sampleGridDataState.skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTest'] = undefined\r\n                    }\r\n                    if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                        inputData.searchSubSampleRef.current.value = \"\"\r\n                        masterData['searchedSubSample'] = undefined\r\n                    }\r\n                    let inputParam = { attachmentskip: undefined }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            inputParam\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            let bool = false;\r\n            let skipInfo = {};\r\n            let { testskip, testtake, subsampletake, subsampleskip } = inputData;\r\n            let oldSelectedTest = inputData.masterData.selectedTest\r\n            let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n            // let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            let isGrandChildGetRequired = false;\r\n            let TestSelected = [];\r\n            let subSampleSelected = [];\r\n\r\n\r\n            if (inputData[\"statusNone\"]) {\r\n                TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                subSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            }\r\n            else {\r\n                TestSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                subSampleSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            }\r\n\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = false;\r\n            } else {\r\n                isGrandChildGetRequired = true;\r\n            }\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let selectedSample = inputData.selectedSample;\r\n                let filterTestSameOldSelectedTest = getSameRecordFromTwoArrays(oldSelectedTest, inputData.masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                let selectedTest = filterTestSameOldSelectedTest.length > 0 ? filterTestSameOldSelectedTest :\r\n                    inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [];\r\n                let ntransactiontestcode = selectedTest.length > 0 ? selectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\";\r\n                let selectedSubSample = inputData.masterData.RegistrationGetSubSample\r\n\r\n                if (subSample) {\r\n                    let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                    selectedSubSample = filterSelectedSubSample.length > 0 ? filterSelectedSubSample : [inputData.masterData.RegistrationGetSubSample[0]];\r\n                    if (inputData.masterData.RegistrationGetSubSample.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampletake, subsampleskip }\r\n                    }\r\n\r\n                }\r\n                let masterData = { ...inputData.masterData, selectedSample, selectedSubSample, selectedTest }\r\n                if (inputData.masterData.RegistrationGetTest.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\"], ntransactiontestcode, masterData, selectedTest,\r\n                    selectedSubSample, checkBoxOperation: 3, skipInfo, masterData\r\n                }\r\n                if (subSample) {\r\n                    if (selectedTest.length === 0) {\r\n                        inputData[\"npreregno\"] = selectedSubSample.map(x => x.npreregno).join(\",\")\r\n                        inputData[\"ntransactionsamplecode\"] = selectedSubSample.map(x => x.ntransactionsamplecode).join(\",\")\r\n                        inputData[\"checkBoxOperation\"] = 3\r\n                        inputData[\"childTabsKey\"] = [\"RegistrationGetTest\"]\r\n                        dispatch(getRegistrationTestDetail(inputData, true));\r\n                    } else {\r\n                        dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n                    }\r\n                } else {\r\n                    dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n                }\r\n            } else {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedSample: inputData.selectedSample,\r\n                    selectedPreregno: inputData.npreregno,\r\n                    selectedTest: TestSelected ? TestSelected : inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                    // RegistrationTestComment,\r\n                    selectedSubSample: subSampleSelected ? subSampleSelected : inputData.masterData.RegistrationGetSubSample\r\n                }\r\n                let subsamplecheck = true;\r\n                if (subSample) {\r\n                    let SubSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                    if (SubSampleSelected.length > 0) {\r\n                        let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                        if (filterSelectedSubSample.length === 0) {\r\n                            let wholeSubSample = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((test, index) => {\r\n                                if (!wholeSubSample.includes(test.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n                                return null;\r\n                            })\r\n                            if (oldSelectedSubSample.length === 0 && wholeSubSample.length > 0\r\n                                && masterData.selectedTest.length === 0) {\r\n                                const selectedSubSample1 = [inputData.masterData.RegistrationGetSubSample[0]];\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedSubSample: selectedSubSample1,\r\n                                    selectedTest: []\r\n                                }\r\n                                inputData = { ...inputData, ...masterData }\r\n                                inputData[\"npreregno\"] = selectedSubSample1.map(x => x.npreregno).join(\",\")\r\n                                inputData[\"ntransactionsamplecode\"] = selectedSubSample1.map(x => x.ntransactionsamplecode).join(\",\")\r\n                                inputData[\"checkBoxOperation\"] = 3\r\n                                inputData[\"childTabsKey\"] = [\"RegistrationGetTest\"]\r\n                                subsamplecheck = false;\r\n                                dispatch(getRegistrationTestDetail(inputData, true));\r\n\r\n                            }\r\n                        } else {\r\n                            oldSelectedSubSample = filterSelectedSubSample\r\n                        }\r\n\r\n                    } else {\r\n                        let wholeSubSample = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                        oldSelectedSubSample.forEach((test, index) => {\r\n                            if (!wholeSubSample.includes(test.ntransactionsamplecode)) {\r\n                                oldSelectedSubSample.splice(index, 1)\r\n                            }\r\n                            return null;\r\n                        })\r\n                    }\r\n\r\n                    if (subsamplecheck) {\r\n                        masterData = {\r\n                            ...masterData,\r\n                            selectedSubSample: oldSelectedSubSample\r\n                        }\r\n                    }\r\n                    if (inputData.masterData.RegistrationGetSubSample.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampleskip, subsampletake }\r\n                    }\r\n                }\r\n                let wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.forEach((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                })\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"-1\"\r\n                }\r\n                masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                let skipInfo = {};\r\n                if (inputData.masterData.RegistrationGetTest.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n\r\n                let dataStateArray = [\r\n                    { activeName: 'selectedSample', dataStateName: 'sampleGridDataState' },\r\n                    { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\r\n                    { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\r\n                    { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\r\n                ]\r\n                dataStateArray.map(arr => {\r\n                    if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\r\n                        masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        ...skipInfo\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function getRegistrationTestDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            activeSubSampleTab: inputData.activeSubSampleTab,\r\n            userinfo: inputData.userinfo,\r\n            ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n            checkBoxOperation: inputData.checkBoxOperation,\r\n            nneedsubsample:inputData.nneedsubsample\r\n            \r\n        }\r\n        const subSample = inputData.nneedsubsample;\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"registration/getRegistrationTest\", inputParamData)\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    let oldSelectedTest = inputData.masterData.selectedTest || []\r\n                    let oldSelectedSubSample = inputData.masterData.selectedSubSample || []\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                        inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\",\r\n                        inputData.removeElementFromArray);\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedSubSample: inputData.selectedSubSample,\r\n                        selectedTransactionsamplecode: inputData.ntransactionsamplecode,\r\n                        selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                            [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                        // RegistrationTestComment,\r\n                    }\r\n                    //let wholeRegistrationTestComments = [];\r\n                    let RegistrationTestComment = [];\r\n                    let RegistrationTestAttachment = [];\r\n                    let RegistrationParameter = [];\r\n                    let RegistrationSampleComment = [];\r\n                    let RegistrationSampleAttachment = [];\r\n                    if (inputData.checkBoxOperation === 1) {\r\n                        const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                        oldSelectedTest.forEach((test, index) => {\r\n                            if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                oldSelectedTest.splice(index, 1)\r\n                            }\r\n\r\n                        })\r\n\r\n                        let keepOld = false;\r\n                        let ntransactiontestcode;\r\n                        if (oldSelectedTest.length > 0) {\r\n                            keepOld = true\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: oldSelectedTest,\r\n                            }\r\n                        } else {\r\n                            ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"\"\r\n                        }\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                    inputData.masterData.RegistrationParameter : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                                    inputData.masterData.RegistrationTestComment : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment ?\r\n                                    inputData.masterData.RegistrationTestAttachment : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                    inputData.masterData.RegistrationParameter : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n                    else if (inputData.checkBoxOperation === 5) {\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment1 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                }\r\n                                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                {\r\n                                    let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                    let RegistrationTestAttachment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                        RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                }\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                let ntransactiontestcode1 = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment2 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                }\r\n                                let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                        // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                    }\r\n                    else if (inputData.checkBoxOperation === 7) {\r\n                        let testList = reArrangeArrays(inputData.masterData.RegistrationGetSubSample, response.data.RegistrationGetTest, \"ntransactionsamplecode\");\r\n                        masterData = {\r\n                            ...masterData,\r\n                            selectedTest: testList ? testList.length > 0 ? [testList[0]] : [] : [],\r\n                            RegistrationGetTest: testList ? testList.length > 0 ? testList : [] : [],\r\n                            //ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\r\n                        }\r\n\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment1 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                }\r\n                                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                {\r\n                                    let ResponseData = response.data.RegistrationTestAttachment ? response.data.RegistrationTestAttachment : [];\r\n                                    let RegistrationTestAttachment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestAttachment !== undefined) {\r\n                                        RegistrationTestAttachment1 = [...inputData.masterData.RegistrationTestAttachment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(RegistrationTestAttachment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                }\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                // let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                let RegistrationParameter1 = [...resultResponseData];\r\n                                let ntransactiontestcode1 = testList ? testList.length > 0 ? testList[0].ntransactiontestcode : inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1 : -1\r\n\r\n                                RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment2 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                }\r\n                                let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                        // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                    }\r\n                    else {\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = response.data.RegistrationTestComment ?\r\n                                    [...response.data.RegistrationTestComment] : [];\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = response.data.RegistrationTestAttachment ?\r\n                                    [...response.data.RegistrationTestAttachment] : [];\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                RegistrationParameter = response.data.RegistrationParameter ?\r\n                                    [...response.data.RegistrationParameter] : [];\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationParameter = response.data.RegistrationParameter ?\r\n                                    [...response.data.RegistrationParameter] : [];\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                    }\r\n                    if(subSample)\r\n                    {\r\n                        let wholeSubsampleList = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                        oldSelectedSubSample.map((test, index) => {\r\n                            if (!wholeSubsampleList.includes(test.ntransactionsamplecode)) {\r\n                                oldSelectedSubSample.splice(index, 1)\r\n                            }\r\n                            return null;\r\n                        })\r\n                    let keepOld = false;\r\n                    let ntransactionsamplecode;\r\n                    if (oldSelectedSubSample.length > 0) {\r\n                        keepOld = true\r\n                    } else {\r\n                        ntransactionsamplecode = masterData.selectedSubSample[0].ntransactionsamplecode\r\n                    }\r\n                 \r\n                        switch (inputData.activeSubSampleTab) {\r\n                            case \"IDS_SUBSAMPLECOMMENTS\":\r\n                                RegistrationSampleComment = keepOld ? inputData.masterData.RegistrationSampleComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleComment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                activeName = \"RegistrationSampleComment\"\r\n                                dataStateName = \"subSampleCommentDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationSampleAttachment = keepOld ? inputData.masterData.RegistrationSampleAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleAttachment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                activeName = \"RegistrationSampleAttachment\"\r\n                                dataStateName = \"subSampleAttachmentDataState\"\r\n                            break;\r\n                        }\r\n                    }\r\n                    masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                    masterData['RegistrationTestAttachment'] = RegistrationTestAttachment;\r\n                    masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                    masterData[\"RegistrationSampleComment\"] = RegistrationSampleComment;\r\n                    masterData[\"RegistrationSampleAttachment\"] = RegistrationSampleAttachment;\r\n                    let { testskip, testtake } = inputData\r\n                    let bool = false;\r\n                    let skipInfo = {}\r\n                    if (inputData.masterData.RegistrationGetTest.length < inputData.testskip) {\r\n                        testskip = 0;\r\n                        bool = true\r\n                    }\r\n\r\n                    if (bool) {\r\n                        skipInfo = { testskip, testtake }\r\n                    }\r\n                    if (inputData.masterData.selectedSample && inputData.sampleGridDataState\r\n                        && inputData.masterData.selectedSample.length <= inputData.sampleGridDataState.skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTest'] = undefined\r\n                    }\r\n                    let inputParam = { attachmentskip: undefined }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            inputParam\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            let oldSelectedTest = inputData.masterData.selectedTest\r\n            let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            let isGrandChildGetRequired = false;\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = true;\r\n            } else {\r\n                isGrandChildGetRequired = false;\r\n            }\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode.toString() : \"-1\";\r\n                let selectedSubSample = inputData.selectedSubSample;\r\n                // let selectedPreregno = inputData.npreregno;\r\n                let selectedTest = inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [];\r\n                // let selectedSubSample = inputData.masterData.RegistrationGetSubSample\r\n                let masterData = { ...inputData.masterData, selectedSubSample, selectedTest }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\"], ntransactiontestcode, masterData, selectedTest,\r\n                    selectedSubSample, checkBoxOperation: 3\r\n                }\r\n                dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n            } else {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedSubSample: inputData.selectedSubSample,\r\n                    selectedTransactioncode: inputData.ntransactionsamplecode,\r\n                    selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                        [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                }\r\n\r\n                const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.forEach((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                })\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest,\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                        inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"-1\"\r\n                }\r\n                masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                    inputData.masterData.RegistrationTestComment : [] :\r\n                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                    inputData.masterData.RegistrationParameter : [] :\r\n                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                let skipInfo = {};\r\n                let dataStateArray = [\r\n                    { activeName: 'selectedSample', dataStateName: 'sampleGridDataState' },\r\n                    { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\r\n                    { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\r\n                    { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\r\n                ]\r\n                dataStateArray.map(arr => {\r\n                    if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\r\n                        masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        ...skipInfo\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport function acceptRegistration(inputParam, LoginProps) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/acceptRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data.rtn === undefined || response.data.rtn === \"Success\"\r\n                    || response.data.rtn === \"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"\r\n                    || response.data.rtn === \"IDS_ALLSAMPLESAREREGISTERED\" || response.data.rtn === \"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\") {\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                    delete response.data[\"RegistrationGetSample\"];\r\n                    delete response.data[\"RegistrationGetSubSample\"];\r\n                    delete response.data[\"RegistrationGetTest\"];\r\n                    let masterData = {\r\n                        ...LoginProps, ...response.data,\r\n                        selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                        selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                        selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                    }\r\n                    let respObject = {\r\n                        masterData,\r\n                        ...inputParam.inputData,\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false,\r\n                        showSample: undefined\r\n                    }\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                    if (response.data.rtn === \"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"\r\n                        || response.data.rtn === \"IDS_ALLSAMPLESAREREGISTERED\" || response.data.rtn === \"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\") {\r\n                        toast.warn(intl.formatMessage({ id: response.data.rtn }));\r\n                    }\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            loadEsign: false,\r\n                            openModal: false\r\n                        }\r\n                    });\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n            })\r\n    }\r\n}\r\n\r\nexport const addMoreTest = (inputParam, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        let { sampleList } = inputParam;\r\n        let value = false;\r\n        if (inputParam.selectedSubSample && inputParam.selectedSubSample.length > 0) {\r\n            value = inputParam.selectedSubSample.some(obj => obj.nspecsampletypecode !== inputParam.selectedSubSample[0].nspecsampletypecode)\r\n            if (value) {\r\n                return toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n            }\r\n            sampleList = sampleList ? [...sampleList.slice(inputParam.skip, inputParam.take)] : [];\r\n            const selectedsample = getSameRecordFromTwoArrays(sampleList, inputParam.selectedSample, \"npreregno\");\r\n            // const selectsubsample = getSameRecordFromTwoArrays(sampleList, inputParam.selectedsubsample, \"npreregno\");\r\n            if (selectedsample && selectedsample.length > 0) {\r\n                const findTransactionStatus = [...new Set(selectedsample.map(item => item.ntransactionstatus))];\r\n\r\n                if (findTransactionStatus.length === 1) {\r\n                    if (findTransactionStatus[0] !== transactionStatus.REJECT && findTransactionStatus[0] !== transactionStatus.CANCELLED) {\r\n                        if (findTransactionStatus[0] !== transactionStatus.CERTIFIED && findTransactionStatus[0] !== transactionStatus.SENT) {\r\n                            const findApprovalVersion = [...new Set(selectedsample.map(item => item.napprovalversioncode))];\r\n                            if (findApprovalVersion.length === 1) {\r\n                                const findSampleSpec = [...new Set(selectedsample.map(item => item.nallottedspeccode))];\r\n                                //const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\r\n                                if (findSampleSpec.length === 1)//&& findComponent.length === 1 \r\n                                {\r\n                                    inputParam[\"snspecsampletypecode\"] = inputParam.selectedSubSample &&\r\n                                        [...new Set(inputParam.selectedSubSample.map(x => x.nspecsampletypecode))].join(\",\")\r\n                                    dispatch(initRequest(true));\r\n                                    rsapi.post(\"/registration/getMoreTest\", { ...inputParam })\r\n                                        .then(response => {\r\n                                            dispatch({\r\n                                                type: DEFAULT_RETURN,\r\n                                                payload: {\r\n                                                    availableTest: response.data,\r\n                                                    loadChildTest: true,\r\n                                                    loading: false, ncontrolCode,\r\n                                                    screenName: \"IDS_TEST\",\r\n                                                    operation: \"create\",\r\n                                                    openModal: true,\r\n                                                    parentPopUpSize: \"lg\",\r\n                                                    selectedRecord: {},\r\n                                                    showSample: undefined\r\n                                                }\r\n                                            });\r\n                                        })\r\n                                        .catch(error => {\r\n                                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                                            if (error.response.status === 500) {\r\n                                                toast.error(error.message);\r\n                                            } else {\r\n                                                toast.warn(this.props.formatMessage({ id: error.response.data }));\r\n                                            }\r\n                                        });\r\n                                } else {\r\n                                    toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n                                }\r\n                            } else {\r\n                                toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\" }));\r\n                            }\r\n                        }\r\n                        else {\r\n                            toast.warn(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCERTIFIEDSAMPLES\" }));\r\n                        }\r\n                    }\r\n                    else {\r\n                        ////     toast.warn(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCANCELLEDREJECTSAMPLES\" }));\r\n                        toast.warn(intl.formatMessage({ id: \"IDS_SAMPLEISREJECTEDORCANCELLED\" }));\r\n                    }\r\n                } else {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\" }));\r\n                }\r\n            } else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }));\r\n            }\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTSUBSAMPLE\" }));\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const createRegistrationTest = (inputParam, masterData, modalName) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam.inputData })\r\n            .then(response => {\r\n                let RegistrationGetTest = updatedObjectWithNewElement(masterData[\"RegistrationGetTest\"], response.data[\"RegistrationGetTest\"]);\r\n                masterData = {\r\n                    ...masterData,\r\n                    RegistrationGetTest,\r\n                    selectedTest: response.data[\"RegistrationGetTest\"],\r\n                    RegistrationParameter: response.data.RegistrationParameter,\r\n                    // RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, masterData.RegistrationGetSample, 'npreregno')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    [modalName]: false,\r\n                    loading: false,\r\n                    loadChildTest: false,\r\n                    showSample: undefined,\r\n                    openModal: false,\r\n                    selectedRecord: {}\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n\r\n                // dispatch({\r\n                //     type: DEFAULT_RETURN,\r\n                //     payload: {\r\n                //         masterData,\r\n                //         [modalName]: false,\r\n                //         loading: false,\r\n                //         loadChildTest: false,\r\n                //         showSample: undefined,\r\n                //         openModal: false,\r\n                //         selectedRecord: {}\r\n                //     }\r\n                // });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getEditRegistrationComboService(inputParam, columnList,\r\n    selectedRecord1, childColumnList, comboComponents,\r\n    withoutCombocomponent) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const { userInfo, operation, masterData } = { ...inputParam };\r\n\r\n        if (masterData[\"selectedSample\"].length > 1 || \r\n                masterData[\"selectedSample\"]\r\n                    .findIndex(x => x[inputParam.primaryKeyName] === inputParam[\"mastertoedit\"][inputParam.primaryKeyName])\r\n                    === -1)\r\n        {\r\n            inputParam.editRegParam[\"getSampleChildDetail\"] = true;\r\n        }\r\n        masterData[\"selectedSample\"] = [];\r\n        masterData[\"selectedSample\"].push(inputParam[\"mastertoedit\"]);\r\n\r\n        const npreregno = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n        let urlArray = [];\r\n\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        // const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n        //     parentcolumnlist: columnList,\r\n        //     childcolumnlist: childColumnList,\r\n        //     userinfo: userInfo\r\n        // })\r\n        const selectedRegistration = rsapi.post(\"/registration/getEditRegistrationDetails\", {\r\n            ...inputParam.editRegParam, npreregno, parentcolumnlist: columnList,\r\n            childcolumnlist: childColumnList,\r\n            userinfo: userInfo\r\n        })\r\n\r\n        urlArray = [timeZoneService, selectedRegistration]\r\n\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = { ...response[1].data[\"EditData\"] };\r\n                selectedRecord = { ...selectedRecord, ...selectedRecord['jsondata'] }\r\n                // const recordToEdit = { ...response[2].data[\"SelectedRegistration\"][0] };\r\n                //  const currentTime = rearrangeDateFormat(userInfo, response[6].data);\r\n\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userInfo.stimezoneid, value: userInfo.ntimezonecode }\r\n                //  const newcomboData = parentChildComboLoad(columnList, response[1].data,\r\n                // selectedRecord, childColumnList, withoutCombocomponent)\r\n\r\n                if (selectedRecord.ntransactionstatus === transactionStatus.CANCELLED\r\n                    || selectedRecord.ntransactionstatus === transactionStatus.REJECT) {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_CANNOTEDITCANCELLEDSAMPLE\" }));\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                }\r\n\r\n                else {\r\n                    const languagetypeCode = undefined\r\n                    const comboData = response[1].data;\r\n                    delete comboData['EditData']\r\n                    let comboValues = {}\r\n                    if (columnList.length > 0) {\r\n                        columnList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    //comboValues = childComboLoad(x, comboData, selectedRecord, \r\n                                    //   childColumnList, withoutCombocomponent)\\\r\n                                    comboValues = childComboLoadForEdit(x, comboData, selectedRecord,\r\n                                        childColumnList, withoutCombocomponent)\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        comboValues = {\r\n                            \"comboData\": comboData,\r\n                        }\r\n                    }\r\n\r\n                    withoutCombocomponent.map(date => {\r\n                        if (date.inputtype === 'date') {\r\n                            selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ?\r\n                                rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\"\r\n                        }\r\n                    })\r\n\r\n                    let { Specification, AgaramTree, ActiveKey, FocusKey, OpenNodes } = [];\r\n                    const selectedSpec = {}\r\n                    Specification = constructOptionList(response[1].data[\"Specification\"] || [], \"nallottedspeccode\",\r\n                        \"sspecname\", undefined, undefined, true).get(\"OptionList\");\r\n                    AgaramTree = response[1].data[\"AgaramTree\"];\r\n                    ActiveKey = response[1].data[\"FocusKey\"];\r\n                    FocusKey = response[1].data[\"ActiveKey\"];\r\n                    OpenNodes = response[1].data[\"OpenNodes\"];\r\n                    //Manufacturer = response.data[\"Manufacturer\"];\r\n                    selectedSpec[\"nallottedspeccode\"] = Specification.length > 0 ? {\r\n                        \"value\": Specification[0].value,\r\n                        \"label\": Specification[0].label,\r\n                        \"item\": Specification[0].item\r\n                    } : \"\";\r\n\r\n                    selectedSpec[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\"\r\n                    selectedSpec[\"ntemplatemanipulationcode\"] = Specification.length > 0 ?\r\n                        Specification[0].item.ntemplatemanipulationcode : -1\r\n                    selectedRecord = { ...selectedRecord, ...selectedSpec }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            AgaramTree,\r\n                            FocusKey,\r\n                            ActiveKey,\r\n                            OpenNodes,\r\n                            selectedSpec,\r\n                            Specification,\r\n                            // statustoEditDetail: response[2].data[\"ApprovalConfigRole\"] || {},\r\n                            // currentTime,\r\n                            operation: \"update\",\r\n                            screenName: inputParam.masterData.RealRegSubTypeValue.sregsubtypename,\r\n                            // PopUpLabel: popUpLabel,\r\n                            timeZoneList,\r\n                            defaultTimeZone,\r\n                            selectedRecord,\r\n                            openPortal: true,\r\n                            ncontrolCode: inputParam.editRegParam.ncontrolCode,\r\n                            loadPreregister: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            loading: false,\r\n                            showSample: undefined,\r\n                            comboData: comboValues.comboData,\r\n                            childColumnList, comboComponents,\r\n                            withoutCombocomponent,\r\n                            columnList\r\n                            //  regRecordToEdit:recordToEdit\r\n\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\nexport function updateRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/updateRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                // sortData(response.data);\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], masterData.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                //  let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\r\n                //let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                masterData = {\r\n                    ...masterData,\r\n                    selectedSample: response.data[\"selectedSample\"],\r\n                    // selectedSubSample: masterData[\"selectedSubSample\"],\r\n                    //selectedTest:masterData[\"selectedTest\"],\r\n                    // RegistrationGetTest,\r\n                    // RegistrationGetSubSample,\r\n                    RegistrationParameter: masterData[\"RegistrationParameter\"]\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, openPortal: false, loading: false, showConfirmAlert: false,\r\n                        regDateEditConfirmMessage: undefined, loadEsign: false,\r\n                        loadPreregister: false, selectedRecord: {}, showSample: undefined\r\n                    }\r\n                });\r\n                // let inputData = {\r\n                //     masterData,\r\n                //     selectedTest: masterData.selectedTest,\r\n                //     ntransactiontestcode: masterData.selectedTest ?\r\n                //         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                //     npreregno: masterData.selectedSample ?\r\n                //         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                //     userinfo: inputParam.inputData.userinfo,\r\n                //     activeTestTab : masterData.activeTestTab,\r\n                //     screenName: masterData.activeTestTab,\r\n                //     resultDataState: inputParam.resultDataState,\r\n                //     testCommentDataState: inputParam.testCommentDataState,\r\n                // }\r\n                // dispatch(getTestChildTabDetail(inputData, true))\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n                else if (error.response.status === 302) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, loadEsign: false,\r\n                            regEditParam: inputParam,\r\n                            showConfirmAlert: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            regDateEditConfirmMessage: error.response.data, showSample: undefined\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showSample: undefined } })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function cancelTestAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelTest\", inputParam.inputData)\r\n            .then(response => {\r\n\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedTest: response.data[\"selectedTest\"],\r\n                    // RegistrationGetTest:response.data[\"RegistrationGetTest\"],\r\n                    RegistrationGetTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\"),\r\n                    //  RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, LoginProps.RegistrationGetSample, 'npreregno')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    showConfirmAlert: false,\r\n                    selectedRecord: {},\r\n                    loading: false,\r\n                    loadPreregister: false,\r\n                    showSample: undefined\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'no'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function cancelSampleAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelSample\", inputParam.inputData)\r\n            .then(response => {\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function addsubSampleRegistration(masterData, userinfo, regcolumnList,\r\n    selectRecord, regchildColumnList,\r\n    regSubSamplecomboComponents,\r\n    regSubSamplewithoutCombocomponent, Map, ncontrolcode, specBasedComponent) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const urlArray = []\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        urlArray[0] = timeZoneService;\r\n        const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n            parentcolumnlist: regcolumnList,\r\n            childcolumnlist: regchildColumnList,\r\n            userinfo\r\n        })\r\n        urlArray[1] = actualService;\r\n\r\n        if (specBasedComponent) {\r\n            const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                ...Map,\r\n                specBasedComponent: specBasedComponent,\r\n                userinfo\r\n            })\r\n            urlArray[2] = ComponentTestBySpec;\r\n        } else {\r\n\r\n            const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n                nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                slno: 1,\r\n                specBasedComponent: specBasedComponent\r\n\r\n            })\r\n            urlArray[2] = TestGet;\r\n        }\r\n        Axios.all(urlArray).then(response => {\r\n            const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n            const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n            const defaultTimeZone = { label: userinfo.stimezoneid, value: userinfo.ntimezonecode }\r\n            const newcomboData = parentChildComboLoad(regcolumnList, response[1].data,\r\n                selectRecord, regchildColumnList, regSubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo)\r\n            let TestCombined = [];\r\n            let lstComponent = [];\r\n            if (specBasedComponent) {\r\n                const lstComponentMap = constructOptionList(response[2].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n\r\n                lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n            } else {\r\n                TestCombined = response[2].data\r\n            }\r\n            const comboData1 = newcomboData.comboData\r\n            const selectedRecord1 = newcomboData.selectedRecord\r\n            regSubSamplewithoutCombocomponent.map(componentrow => {\r\n                if (componentrow.inputtype === \"date\") {\r\n                    if (componentrow.mandatory) {\r\n                        selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? new Date() : \"\";\r\n                    }\r\n                    // if (componentrow.timezone) {\r\n                    //     sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                    //         { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                    //         defaulttimezone ? defaulttimezone : -1\r\n                    // }\r\n                }\r\n\r\n            })\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    screenName: \"SubSample\",\r\n                    showSaveContinue: false,\r\n                    parentPopUpSize: \"lg\",\r\n                    loading: false,\r\n                    lstComponent,\r\n                    openModal: true,\r\n                    operation: \"create\",\r\n                    loadRegSubSample: true,\r\n                    selectedRecord: selectedRecord1,\r\n                    regSubSamplecomboData: comboData1,\r\n                    regSubSamplecomboComponents,\r\n                    regSubSamplewithoutCombocomponent,\r\n                    TestCombined,\r\n                    regparentSubSampleColumnList: regcolumnList,\r\n                    ncontrolCode: ncontrolcode,\r\n                    timeZoneList,\r\n                    defaultTimeZone,\r\n                    masterData,\r\n                    specBasedComponent\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function saveSubSample(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/createSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                // let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\r\n                // let selectedSample = response.data[\"selectedSample\"];\r\n                let RegistrationGetSubSample = updatedObjectWithNewElement(inputParam.inputData.masterData.RegistrationGetSubSample, response.data[\"selectedSubSample\"]);\r\n                let RegistrationGetTest = response.data[\"selectedTest\"];\r\n                let selectedSubSample = response.data[\"selectedSubSample\"];// RegistrationGetSubSample.length > 0 ? [RegistrationGetSubSample[0]] : [];\r\n                RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\r\n                let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n\r\n                let RegistrationParameter = response.data[\"RegistrationParameter\"]\r\n\r\n                RegistrationParameter = getSameRecordFromTwoArrays(RegistrationParameter, selectedTest, 'ntransactiontestcode')\r\n\r\n                let masterData = { ...inputParam.inputData.masterData }\r\n                masterData = {\r\n                    ...masterData, ...response.data,\r\n                    selectedSubSample, selectedTest,\r\n                    RegistrationGetSubSample, RegistrationGetTest, RegistrationParameter\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    loading: false,\r\n                    showSample: undefined,\r\n                    selectedRecord: {},\r\n                    loadRegSubSample: false\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                //    dispatch({\r\n                //     type: DEFAULT_RETURN,\r\n                //     payload: {\r\n                //         masterData,\r\n                //         openModal: false,\r\n                //         loadEsign: false,\r\n                //         loading: false,\r\n                //         showSample: undefined,\r\n                //         selectedRecord: {},\r\n                //         loadRegSubSample:false\r\n                //     }\r\n                // });\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function getEditSubSampleComboService(inputParam, columnList, selectedRecord1,\r\n    childColumnList, comboComponents,\r\n    withoutCombocomponent, specBasedComponent) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const { userInfo, operation } = { ...inputParam };\r\n\r\n        const ntransactionsamplecode = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n        let urlArray = [];\r\n\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        // const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n        //     parentcolumnlist: columnList,\r\n        //     childcolumnlist: childColumnList,\r\n        //     userinfo: userInfo\r\n        // })\r\n        const selectedRegistration = rsapi.post(\"/registration/getEditRegistrationSubSampleDetails\", {\r\n            ...inputParam.editSubSampleRegParam, ntransactionsamplecode, parentcolumnlist: columnList,\r\n            childcolumnlist: childColumnList,\r\n            userinfo: userInfo\r\n        })\r\n\r\n        urlArray = [timeZoneService, selectedRegistration]\r\n        // if(specBasedComponent){\r\n        //     const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n        //         ...Map,\r\n        //         specBasedComponent: specBasedComponent\r\n        //     })\r\n        //     urlArray.push(ComponentTestBySpec) \r\n        // }\r\n\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = { ...response[1].data[\"EditData\"] };\r\n\r\n                selectedRecord = { ...selectedRecord, ...selectedRecord['jsondata'] }\r\n\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userInfo.stimezoneid, value: userInfo.ntimezonecode }\r\n\r\n                if (selectedRecord.ntransactionstatus !== transactionStatus.PREREGISTER) {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_SELECTPREREGISTERSUBSAMPLETOEDIT\" }));\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                }\r\n\r\n                else {\r\n                    //               let lstComponent=[]\r\n                    if (specBasedComponent) {\r\n                        selectedRecord[\"ncomponentcode\"] = { label: selectedRecord[\"scomponentname\"], value: selectedRecord[\"ncomponentcode\"] }\r\n                    }\r\n                    const languagetypeCode = undefined\r\n                    const comboData = response[1].data;\r\n                    delete comboData['EditData']\r\n                    let comboValues = {}\r\n                    if (columnList.length > 0) {\r\n                        columnList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    //comboValues = childComboLoad(x, comboData, selectedRecord, \r\n                                    //   childColumnList, withoutCombocomponent)\\\r\n                                    comboValues = childComboLoadForEdit(x, comboData, selectedRecord,\r\n                                        childColumnList, withoutCombocomponent)\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        comboValues = {\r\n                            \"comboData\": comboData,\r\n                        }\r\n                    }\r\n                    withoutCombocomponent.map(date => {\r\n                        if (date.inputtype === 'date')\r\n                            selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ?\r\n                                rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\";\r\n                    })\r\n\r\n                    selectedRecord = { ...selectedRecord }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            operation,\r\n                            timeZoneList,\r\n                            defaultTimeZone,\r\n                            selectedRecord,\r\n                            openModal: true,\r\n                            ncontrolCode: inputParam.editSubSampleRegParam.ncontrolCode,\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            showSample: undefined,\r\n                            regSubSamplecomboData: comboValues.comboData,\r\n                            loadRegSubSample: true,\r\n                            screenName: \"IDS_SUBSAMPLE\",\r\n                            operation: \"update\",\r\n                            specBasedComponent\r\n                            //  regRecordToEdit:recordToEdit\r\n\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\nexport function onUpdateSubSampleRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/updateRegistrationSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                //replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                //  let RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];\r\n                let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                masterData = {\r\n                    ...masterData,\r\n                    // selectedSample: response.data[\"selectedSample\"],\r\n                    selectedSubSample: response.data[\"selectedSubSample\"],\r\n                    selectedTest: response.data[\"selectedTest\"],\r\n                    RegistrationGetTest,\r\n                    // RegistrationGetSubSample,\r\n                    RegistrationParameter: response.data[\"RegistrationParameter\"]\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, openModal: false, loading: false, showConfirmAlert: false,\r\n                        regDateEditConfirmMessage: undefined, loadEsign: false,\r\n                        loadRegSubSample: false, selectedRecord: {}, showSample: undefined, screenName: \"SubSample\",\r\n                    }\r\n                });\r\n                // let inputData = {\r\n                //     masterData,\r\n                //     selectedTest: masterData.selectedTest,\r\n                //     ntransactiontestcode: masterData.selectedTest ?\r\n                //         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                //     npreregno: masterData.selectedSample ?\r\n                //         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                //     userinfo: inputParam.inputData.userinfo,\r\n                //     activeTestTab : masterData.activeTestTab,\r\n                //     screenName: masterData.activeTestTab,\r\n                //     resultDataState: inputParam.resultDataState,\r\n                //     testCommentDataState: inputParam.testCommentDataState,\r\n                // }\r\n                // dispatch(getTestChildTabDetail(inputData, true))\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n                else if (error.response.status === 302) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, loadEsign: false,\r\n                            regEditParam: inputParam,\r\n                            showConfirmAlert: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            regDateEditConfirmMessage: error.response.data, showSample: undefined\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showSample: undefined } })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function cancelSubSampleAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                // replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    // selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function preregRecordToQuarantine(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/quarantineRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                // replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                // replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                delete response.data[\"RegistrationGetSample\"];\r\n                delete response.data[\"RegistrationGetSubSample\"];\r\n                delete response.data[\"RegistrationGetTest\"];\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTestChildTabDetailRegistration(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactiontestcode: inputData.ntransactiontestcode,\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            let { testtake } = inputData;\r\n            let activeName = \"\";\r\n            let dataStateName = \"\";\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_PARAMETERRESULTS\":\r\n                    url = \"registration/getregistrationparameter\"\r\n                    activeName = \"RegistrationParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    url = \"resultentrybysample/getResultUsedInstrument\"\r\n                    activeName = \"ResultUsedInstrument\"\r\n                    dataStateName = \"instrumentDataState\"\r\n                    break;\r\n                case \"IDS_MATERIAL\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    activeName = \"ResultUsedTasks\"\r\n                    dataStateName = \"taskDataState\"\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    url = \"attachment/getTestAttachment\"\r\n                    activeName = \"RegistrationTestAttachment\"\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    url = \"comments/getTestComment\"\r\n                    activeName = \"RegistrationTestComment\"\r\n                    dataStateName = \"testCommentDataState\"\r\n                    break;\r\n                case \"IDS_DOCUMENTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    url = \"approval/getApprovalResultChangeHistory\"\r\n                    activeName = \"ApprovalResultChangeHistory\"\r\n                    dataStateName = \"resultChangeDataState\"\r\n                    break;\r\n                case \"IDS_TESTAPPROVALHISTORY\":\r\n                    url = \"approval/getApprovalHistory\"\r\n                    activeName = \"ApprovalHistory\"\r\n                    dataStateName = \"historyDataState\"\r\n                    break;\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                default:\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                if (isServiceRequired) {\r\n                    rsapi.post(url, inputParamData)\r\n                        .then(response => {\r\n                            let skipInfo = {};\r\n                            let responseData = { ...response.data, selectedSample: inputData.selectedSample || inputData.masterData.selectedSample, selectedTest: inputData.selectedTest }\r\n                            //responseData = sortData(responseData)\r\n                            // fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\r\n                            fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                            let masterData = {\r\n                                ...inputData.masterData,\r\n                                selectedSample: inputData.selectedSample || inputData.masterData.selectedSample,\r\n                                selectedTest: inputData.selectedTest,\r\n                                selectedPreregno: inputData.npreregno,\r\n                                selectedSampleCode: inputData.ntransactionsamplecode,\r\n                                selectedTestCode: inputData.ntransactiontestcode,\r\n                            }\r\n                            if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                                skipInfo = {\r\n\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        skip: 0,\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                skipInfo = {\r\n                                    ...skipInfo,\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            }\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN, payload: {\r\n                                    masterData,\r\n                                    loading: false,\r\n                                    showFilter: false,\r\n                                    activeTestTab: inputData.activeTestTab,\r\n                                    screenName: inputData.screenName,\r\n                                    testtake, testskip: undefined,\r\n                                    ...skipInfo\r\n                                }\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.warn(error.response.data);\r\n                            }\r\n                        })\r\n                } else {\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\", inputData.removeElementFromArray);\r\n                    let skipInfo = {};\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedTest: inputData.selectedTest,\r\n                        selectedPreregno: inputData.npreregno,\r\n                        selectedSampleCode: inputData.ntransactionsamplecode,\r\n                        selectedTestCode: inputData.ntransactiontestcode,\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            screenName: inputData.screenName,\r\n                            testtake, testskip: undefined,\r\n                            ...skipInfo\r\n                        }\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            let { ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment, ApprovalResultChangeHistory,\r\n                RegistrationTestComment, ApprovalHistory } = inputData.masterData\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    ApprovalParameter = [];\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    ResultUsedInstrument = []\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    ResultUsedTasks = []\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    RegistrationTestAttachment = []\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    ApprovalResultChangeHistory = []\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    RegistrationTestComment = []\r\n                    break;\r\n                case \"IDS_APPROVALHISTORY\":\r\n                    ApprovalHistory = []\r\n                    break;\r\n                default:\r\n                    ApprovalParameter = []\r\n                    break;\r\n            }\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData: {\r\n                        ...inputData.masterData,\r\n                        selectedTest: [],\r\n                        ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory, RegistrationTestComment, ApprovalHistory\r\n                    }, loading: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst toTimestamp = (strDate) => {\r\n   // const dt = new Date(strDate).getTime();\r\n   // return dt / 1000;\r\n   const dt = strDate.getTime();\r\n   return dt;\r\n}\r\n\r\nexport function getDynamicFilter(inputParam) {\r\n    if (inputParam.component.inputtype === 'frontendsearchfilter') {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/dynamicpreregdesign/getcustomsearchfilter\", { ...inputParam.component, userinfo: inputParam.userinfo })\r\n                .then(response => {\r\n                    const source = inputParam.component.source\r\n                    const languageTypeCode = inputParam.userinfo.slanguagetypecode\r\n                    const lstData = response.data[inputParam.component.label]\r\n\r\n\r\n                    // const responseparam={}\r\n                    const gridColumns = []\r\n                    const fields = []\r\n                    const datefileds = []\r\n                    const multilingual=[]\r\n                    inputParam.component.filterfields.map(item => {\r\n                        fields.push(filterObject(item, languageTypeCode, response.data));\r\n                        if(item.ismultilingual){\r\n                            multilingual.push(item.columnname)\r\n                        }\r\n                        if (item.filterinputtype === \"date\") {\r\n                            datefileds.push(item.columnname)\r\n                        }\r\n                        if (item.filterinputtype !== 'predefinednumeric') {\r\n                            gridColumns.push(creategridColumns(item, languageTypeCode,));\r\n                        }\r\n                    })\r\n\r\n                    const optionList = lstData.map(item => {\r\n                        const jsondata = item[source] ? item[source].value ?\r\n                            JSON.parse(item[source].value) : item.jsondata : item.jsondata\r\n\r\n                        datefileds.map(x => {\r\n                            jsondata[x +\"timestamp\"] = toTimestamp(rearrangeDateFormatforKendoDataTool(inputParam.userinfo,jsondata[x]))\r\n                        })\r\n                        multilingual.map(mul=>{\r\n                            jsondata[mul] =  \r\n                            jsondata[mul][languageTypeCode] || jsondata[mul]['en-US']\r\n                           ;\r\n                        })\r\n                       \r\n\r\n                        return jsondata\r\n                    });\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            lstPatient: optionList, gridColumns, fields,\r\n                            loadCustomSearchFilter: true\r\n                            , loading: false,\r\n                            screenName: inputParam.component.displayname[languageTypeCode],\r\n                            seletedFilterComponent: inputParam.component,\r\n                            kendoSkip: 0,\r\n                            kendoTake: 5,\r\n                            kendoFilter: {\r\n                                logic: \"and\",\r\n                                filters: []\r\n                            },\r\n                            awesomeTree: undefined,\r\n                            awesomeConfig: undefined,\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data.rtn);\r\n                    }\r\n\r\n                })\r\n        }\r\n    } else if (inputParam.component.inputtype === \"backendsearchfilter\") {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/dynamicpreregdesign/getcustomsearchfilterpredefined\", { ...inputParam.component, userinfo: inputParam.userinfo })\r\n                .then(response => {\r\n                    const languageTypeCode = inputParam.userinfo.slanguagetypecode\r\n                    const { fields, gridColumns } = filterObjectForReactAwesomeFilter(inputParam.component.filterfields, languageTypeCode, response.data)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            lstPatient: [], gridColumns, fields,\r\n                            loadCustomSearchFilter: true\r\n                            , loading: false,\r\n                            screenName: inputParam.component.displayname[languageTypeCode],\r\n                            seletedFilterComponent: inputParam.component,\r\n                            kendoSkip: 0,\r\n                            kendoTake: 5,\r\n                            kendoFilter: {\r\n                                logic: \"and\",\r\n                                filters: []\r\n                            },\r\n                            awesomeTree: undefined,\r\n                            awesomeConfig: undefined,\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data.rtn);\r\n                    }\r\n\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nlet datapredef = {}\r\nconst CustomFilter = props => {\r\n    const { filter, data = [], defaultItem } = props;\r\n    const onChange = event => {\r\n        props.onFilterChange.call(undefined, {\r\n            nextFilter: { ...props.filter, value: event.target.value.value }\r\n        });\r\n    };\r\n\r\n    return <ComboBox onChange={onChange} data={filter.field ? datapredef[filter.field] : []} textField=\"text\" />;\r\n};\r\n\r\nexport function creategridColumns(item, languageTypeCode) {\r\n    let obj = {}\r\n    if (item.filterinputtype !== 'predefinednumeric') {\r\n        return {\r\n            field: item.columnname,\r\n            title: item.displayname[languageTypeCode], width: \"200px\"\r\n        }\r\n    }\r\n}\r\n\r\nexport function filterObjectForReactAwesomeFilter(filterFields, languageTypeCode, resposedata) {\r\n    let obj = {}\r\n    obj['fields'] = {}\r\n    obj['gridColumns'] = []\r\n    filterFields.map(item => {\r\n        if (item.filterinputtype === 'predefinednumeric' || item.filterinputtype === 'predefinedtext') {\r\n            const optionList = resposedata[item.predefinedtablename].map(data => {\r\n                const jsondata = data[item.predefinedtablename] ? data[item.predefinedtablename].value ?\r\n                    JSON.parse(data[item.predefinedtablename].value) : data.jsondata : data.jsondata\r\n\r\n                jsondata['title'] = item.predefinedismultilingual ?\r\n                    jsondata[item.predefineddisplaymember]\r\n                    [languageTypeCode] || jsondata[item.predefineddisplaymember]['en-US']\r\n                    : jsondata[item.predefineddisplaymember];\r\n                jsondata['value'] = jsondata[item.predefinedvaluemember]\r\n                return jsondata\r\n            });\r\n            datapredef[item.columnname] = optionList\r\n        }\r\n        switch (item.filterinputtype) {\r\n            case \"text\":\r\n                obj['fields'][item.type==='dynamic'?item.ismultilingual?\r\n                \"jsondata->'\"+item.columnname+\"'->>'\"+languageTypeCode+\"'\":\r\n                \"jsondata->>'\"+item.columnname+\"'\":\r\n                item.columnname] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"text\",\r\n                    valueSources: [\"value\", \"func\"],\r\n                    mainWidgetProps: {\r\n                        \"valueLabel\": \"Name\",\r\n                        \"valuePlaceholder\": \"Enter\" + item.displayname[languageTypeCode]\r\n                    }\r\n                }\r\n                break;\r\n            case \"numeric\":\r\n                obj['fields'][item.type==='dynamic'?\r\n                \"(jsondata->>'\"+item.columnname+\"')::int\":\r\n                item.columnname] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"number\",\r\n                    valueSources: [\"value\"],\r\n                    fieldSettings: {\r\n                        ...item.numericcondition\r\n                    }\r\n                }\r\n                break;\r\n            case \"date\":\r\n                obj['fields'][item.type==='dynamic'?\r\n                \"jsondata->>'\"+item.columnname+\"'\":\r\n                item.columnname] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"date\",\r\n                    valueSources: [\"value\"],\r\n                }\r\n                break;\r\n            case \"predefinednumeric\":\r\n                obj['fields'][item.type==='dynamic'?\r\n                \"(jsondata->>'\"+item.columnname+\"')::int\":\r\n                item.columnname] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"select\",\r\n                    valueSources: [\"value\"],\r\n                    fieldSettings: {\r\n                        listValues: datapredef[item.columnname]\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"predefinedtext\":\r\n                obj['fields'][item.type==='dynamic'?item.ismultilingual?\r\n                \"jsondata->'\"+item.columnname+\"'->>'\"+languageTypeCode+\"'\":\r\n                \"jsondata->>'\"+item.columnname+\"'\":\r\n                item.columnname] = {\r\n                    label: item.displayname[languageTypeCode],\r\n                    type: \"select\",\r\n                    valueSources: [\"value\"],\r\n                    fieldSettings: {\r\n                        listValues: datapredef[item.columnname]\r\n                    }\r\n\r\n                }\r\n                break;\r\n        }\r\n        const gridColumns = creategridColumns(item, languageTypeCode)\r\n        if (item.filterinputtype !== 'predefinednumeric') {\r\n            obj['gridColumns'].push(gridColumns)\r\n        }\r\n\r\n\r\n    })\r\n    return obj;\r\n}\r\n\r\nexport function filterObject(item, languageTypeCode, resposedata) {\r\n    let obj = {}\r\n    let preobj = {}\r\n    if (item.filterinputtype === 'predefinednumeric' || item.filterinputtype === 'predefinedtext') {\r\n        const optionList = resposedata[item.predefinedtablename].map(data => {\r\n            const jsondata = data[item.predefinedtablename] ? data[item.predefinedtablename].value ?\r\n                JSON.parse(data[item.predefinedtablename].value) : data.jsondata : data.jsondata\r\n\r\n            jsondata['text'] = item.predefinedismultilingual ?\r\n                jsondata[item.predefineddisplaymember]\r\n                [languageTypeCode] || jsondata[item.predefineddisplaymember]['en-US']\r\n                : jsondata[item.predefineddisplaymember];\r\n            jsondata['value'] = jsondata[item.predefinedvaluemember]\r\n            //delete jsondata.jsondata\r\n            return jsondata\r\n        });\r\n        datapredef[item.columnname] = optionList\r\n        // preobj = {\r\n        //     predefdata: optionList, predefineddisplaymember: item.predefineddisplaymember,\r\n        //     predefinedvaluemember: item.columnname\r\n        // }\r\n    }\r\n    switch (item.filterinputtype) {\r\n        case \"text\":\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: TextFilter,\r\n                operators: Operators.text,\r\n            }\r\n        case \"numeric\":\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: NumericFilter,\r\n                operators: Operators.numeric,\r\n            }\r\n        case \"date\":\r\n            return obj = {\r\n                name: item.columnname + \"timestamp\",\r\n                label: item.displayname[languageTypeCode],\r\n                filter: DateFilter,\r\n                operators: Operators.date,\r\n            }\r\n        case \"predefinednumeric\":\r\n\r\n\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: CustomFilter,\r\n                operators: Operators.numeric,\r\n            }\r\n        case \"predefinedtext\":\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: CustomFilter,\r\n                operators: Operators.text,\r\n            }\r\n        default:\r\n            return obj = {\r\n                name: item.columnname,\r\n                label: item.displayname[languageTypeCode],\r\n                filter: TextFilter,\r\n                operators: Operators.text,\r\n            }\r\n\r\n    }\r\n\r\n    //return obj;\r\n}\r\n\r\nexport function getDynamicFilterExecuteData(inputParam) {\r\n    return function (dispatch) {\r\n        let obj = { ...inputParam.component, filterquery: inputParam.filterquery, userinfo: inputParam.userinfo }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/dynamicpreregdesign/getdynamicfilterexecutedata\", obj)\r\n            .then(response => {\r\n                const source = inputParam.component.source\r\n                const languageTypeCode = inputParam.userinfo.slanguagetypecode\r\n                const lstData = response.data[inputParam.component.label]\r\n                const multilingual=[]\r\n                inputParam.component.filterfields.map(item => {\r\n                if(item.ismultilingual){\r\n                    multilingual.push(item.columnname)\r\n                }\r\n            })\r\n                const optionList = lstData.map(item => {\r\n                    const jsondata = item[source] ? item[source].value ?\r\n                        JSON.parse(item[source].value) : item.jsondata : item.jsondata\r\n                       \r\n                        multilingual.map(mul=>{\r\n                            jsondata[mul] =  \r\n                            jsondata[mul][languageTypeCode] || jsondata[mul]['en-US'];\r\n                        })\r\n                    // let label = isMultiLingual ?\r\n                    //   jsondata[optionValue]\r\n                    //   [languageTypeCode] || jsondata[optionValue]['en-US']\r\n                    //   : jsondata[optionValue];\r\n\r\n                    return jsondata\r\n                });\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        lstPatient: optionList,\r\n                        loading: false,\r\n                        screenName: inputParam.component.displayname[languageTypeCode]\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function rearrangeDateFormatforKendoDataTool(userInfo, dateValue) {\r\n    let splitChar =  \"/\";\r\n\r\n    if(dateValue!==undefined){\r\n        const index=userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\"||\"-\")\r\n        if(index!==-1) \r\n        splitChar=userInfo.ssitedatetime.substring(index,index+1)\r\n       \r\n    }\r\n    //   console.log(\"splitChar:\", splitChar);\r\n    if ((splitChar === \"/\" || splitChar === \"-\") && typeof dateValue === \"string\") {\r\n      const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n      // console.log(\"firstField:\", firstField);\r\n      const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \"\r\n      const datetime = dateValue.split(timeSplitChar);\r\n      const dateArray = datetime[0].split(splitChar);\r\n      if (firstField === \"dd\") {\r\n        const day = dateArray[0];\r\n        const month = dateArray[1];\r\n        const year = dateArray[2];\r\n        const time = datetime[1] || \"00:00:00\";\r\n  \r\n        const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\r\n        return new Date(formatted);\r\n      }\r\n      else if (firstField === \"yyyy\") {\r\n        const year = dateArray[0];\r\n        const month = dateArray[1];\r\n        const day = dateArray[2];\r\n        const time = datetime[1] || \"00:00:00\";\r\n        const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\r\n        return new Date(formatted);\r\n      }\r\n      else {\r\n        return new Date(dateValue);\r\n      }\r\n    }\r\n    else {\r\n      return dateValue;\r\n    }\r\n  }\r\n  \r\n  export function preRegDispatch(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ...inputParam\r\n                    }\r\n                });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}