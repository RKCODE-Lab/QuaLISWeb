{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\ApprovalTask.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\n\nclass ApprovalTask extends React.Component {\n  render() {\n    const extractedColumnList = [//{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"1%\" },\n    {\n      \"idsName\": \"IDS_SAMPLEARNO\",\n      \"dataField\": \"ssamplearno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PREANALYSISTIME\",\n      \"dataField\": \"spreanalysistime\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PREPARATIONTIME\",\n      \"dataField\": \"spreparationtime\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_ANALYSISTIME\",\n      \"dataField\": \"sanalysistime\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_MISCELLANEOUSTIME\",\n      \"dataField\": \"smisctime\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_USER\",\n      \"dataField\": \"sanalyst\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_COMMENTS\",\n      \"dataField\": \"scomments\",\n      \"width\": \"200px\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      noGutters: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nresultusedtaskcode\",\n      data: this.props.ResultUsedTasks,\n      dataResult: process(this.props.ResultUsedTasks || [], this.props.dataState),\n      dataState: this.props.dataState,\n      dataStateChange: this.props.dataStateChange,\n      extractedColumnList: extractedColumnList,\n      userInfo: this.props.userInfo,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      pageable: true,\n      isActionRequired: false,\n      selectedId: this.props.selectedId,\n      isToolBarRequired: false,\n      scrollable: \"scrollable\",\n      gridHeight: \"550px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(ApprovalTask);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/approval/ApprovalTask.jsx"],"names":["React","Row","Col","injectIntl","DataGrid","process","ApprovalTask","Component","render","extractedColumnList","props","ResultUsedTasks","dataState","dataStateChange","userInfo","controlMap","userRoleControlRights","inputParam","selectedId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAEvCC,EAAAA,MAAM,GAAG;AACL,UAAMC,mBAAmB,GAAG,CACxB;AACA;AAAE,iBAAW,gBAAb;AAA+B,mBAAa,aAA5C;AAA2D,eAAS;AAApE,KAFwB,EAGxB;AAAE,iBAAW,cAAb;AAA6B,mBAAa,cAA1C;AAA0D,eAAS;AAAnE,KAHwB,EAIxB;AAAE,iBAAW,qBAAb;AAAoC,mBAAa,kBAAjD;AAAqE,eAAS;AAA9E,KAJwB,EAKxB;AAAE,iBAAW,qBAAb;AAAoC,mBAAa,kBAAjD;AAAqE,eAAS;AAA9E,KALwB,EAMxB;AAAE,iBAAW,kBAAb;AAAiC,mBAAa,eAA9C;AAA+D,eAAS;AAAxE,KANwB,EAOxB;AAAE,iBAAW,uBAAb;AAAsC,mBAAa,WAAnD;AAAgE,eAAS;AAAzE,KAPwB,EAQxB;AAAE,iBAAW,UAAb;AAAyB,mBAAa,UAAtC;AAAkD,eAAS;AAA3D,KARwB,EASxB;AAAE,iBAAW,cAAb;AAA6B,mBAAa,WAA1C;AAAuD,eAAS;AAAhE,KATwB,CAA5B;AAYA,wBACI,uDACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,eAAe,EAAE,qBADrB;AAEI,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,eAFrB;AAGI,MAAA,UAAU,EAAEN,OAAO,CAAC,KAAKK,KAAL,CAAWC,eAAX,IAA8B,EAA/B,EAAmC,KAAKD,KAAL,CAAWE,SAA9C,CAHvB;AAII,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SAJ1B;AAKI,MAAA,eAAe,EAAE,KAAKF,KAAL,CAAWG,eALhC;AAMI,MAAA,mBAAmB,EAAEJ,mBANzB;AAOI,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWI,QAPzB;AAQI,MAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWK,UAR3B;AASI,MAAA,qBAAqB,EAAE,KAAKL,KAAL,CAAWM,qBATtC;AAUI,MAAA,UAAU,EAAE,KAAKN,KAAL,CAAWO,UAV3B;AAWI,MAAA,QAAQ,EAAE,IAXd;AAYI,MAAA,gBAAgB,EAAE,KAZtB;AAaI,MAAA,UAAU,EAAE,KAAKP,KAAL,CAAWQ,UAb3B;AAcI,MAAA,iBAAiB,EAAE,KAdvB;AAeI,MAAA,UAAU,EAAE,YAfhB;AAgBI,MAAA,UAAU,EAAE,OAhBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CADJ;AA0BH;;AAzCsC;;AA2C3C,eAAef,UAAU,CAACG,YAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nclass ApprovalTask extends React.Component {\r\n\r\n    render() {\r\n        const extractedColumnList = [\r\n            //{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"1%\" },\r\n            { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_PREANALYSISTIME\", \"dataField\": \"spreanalysistime\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_PREPARATIONTIME\", \"dataField\": \"spreparationtime\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_ANALYSISTIME\", \"dataField\": \"sanalysistime\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_MISCELLANEOUSTIME\", \"dataField\": \"smisctime\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_USER\", \"dataField\": \"sanalyst\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" }\r\n        ]\r\n\r\n        return (\r\n            <>\r\n                <Row noGutters={\"true\"}>\r\n                    <Col md={12}>\r\n                        <DataGrid\r\n                            primaryKeyField={\"nresultusedtaskcode\"}\r\n                            data={this.props.ResultUsedTasks}\r\n                            dataResult={process(this.props.ResultUsedTasks || [], this.props.dataState)}\r\n                            dataState={this.props.dataState}\r\n                            dataStateChange={this.props.dataStateChange}\r\n                            extractedColumnList={extractedColumnList}\r\n                            userInfo={this.props.userInfo}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            inputParam={this.props.inputParam}\r\n                            pageable={true}\r\n                            isActionRequired={false}\r\n                            selectedId={this.props.selectedId}\r\n                            isToolBarRequired={false}\r\n                            scrollable={\"scrollable\"}\r\n                            gridHeight={\"550px\"}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(ApprovalTask);"]},"metadata":{},"sourceType":"module"}