{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\AddClient.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component'; //import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\n\nconst AddClient = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.formatMessage({\n      id: \"IDS_CLIENTCATEGORY\"\n    }),\n    isSearchable: true,\n    name: \"nclientcatcode\",\n    isDisabled: false,\n    placeholder: props.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    options: props.clientCategoryList || [],\n    optionId: \"nclientcatcode\",\n    optionValue: \"sclientcatname\",\n    value: props.selectedRecord ? props.selectedRecord[\"nclientcatcode\"] : \"\",\n    defaultValue: props.selectedRecord[\"nclientcatcode\"],\n    onChange: event => props.onComboChange(event, 'nclientcatcode') //isMulti={false}\n    ,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.formatMessage({\n      id: \"IDS_CLIENTNAME\"\n    }),\n    name: \"sclientname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_CLIENTNAME\"\n    }),\n    value: props.selectedRecord[\"sclientname\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    readOnly: props.userLogged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.formatMessage({\n      id: \"IDS_CLIENTID\"\n    }),\n    name: \"sclientid\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_CLIENTID\"\n    }),\n    value: props.selectedRecord[\"sclientid\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 50,\n    readOnly: props.userLogged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  })), props.operation !== \"update\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.formatMessage({\n      id: \"IDS_CLIENTSITENAME\"\n    }),\n    name: \"sclientsitename\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_CLIENTSITENAME\"\n    }),\n    value: props.selectedRecord[\"sclientsitename\"],\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.formatMessage({\n      id: \"IDS_CLIENTCONTACTNAME\"\n    }),\n    name: \"scontactname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_CLIENTCONTACTNAME\"\n    }),\n    value: props.selectedRecord[\"scontactname\"],\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.formatMessage({\n      id: \"IDS_ADDRESS1\"\n    }),\n    name: \"saddress1\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_ADDRESS1\"\n    }),\n    defaultValue: props.selectedRecord[\"saddress1\"],\n    rows: \"2\",\n    isMandatory: true,\n    required: true,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.formatMessage({\n      id: \"IDS_COUNTRY\"\n    }),\n    isSearchable: true,\n    name: \"ncountrycode\",\n    isDisabled: false,\n    placeholder: props.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    options: props.countryList || [],\n    optionId: \"ncountrycode\",\n    optionValue: \"scountryname\",\n    value: props.selectedRecord ? props.selectedRecord[\"ncountrycode\"] : \"\",\n    defaultValue: props.selectedRecord[\"ncountrycode\"],\n    onChange: event => props.onComboChange(event, 'ncountrycode') //isMulti={false}\n    ,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }))) : \"\", /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.formatMessage({\n      id: \"IDS_TRANSACTIONSTATUSACTIVE\"\n    }),\n    type: \"switch\",\n    name: \"ntransactionstatus\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_TRANSACTIONSTATUSACTIVE\"\n    }),\n    defaultValue: props.selectedRecord[\"ntransactionstatus\"] === 1 ? true : false,\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord[\"ntransactionstatus\"] === 1 ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default AddClient;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/contactmaster/AddClient.js"],"names":["React","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","AddClient","props","formatMessage","id","clientCategoryList","selectedRecord","event","onComboChange","onInputOnChange","userLogged","operation","countryList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,gBAAP,MAA6B,kEAA7B,C,CACA;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEA,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CADf;AAEI,IAAA,YAAY,EAAE,IAFlB;AAGI,IAAA,IAAI,EAAE,gBAHV;AAII,IAAA,UAAU,EAAE,KAJhB;AAKI,IAAA,WAAW,EAAEF,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CALjB;AAMI,IAAA,WAAW,EAAE,IANjB;AAOI,IAAA,OAAO,EAAEF,KAAK,CAACG,kBAAN,IAA4B,EAPzC;AAQI,IAAA,QAAQ,EAAC,gBARb;AASI,IAAA,WAAW,EAAC,gBAThB;AAUI,IAAA,KAAK,EAAEH,KAAK,CAACI,cAAN,GAAuBJ,KAAK,CAACI,cAAN,CAAqB,gBAArB,CAAvB,GAAgE,EAV3E;AAWI,IAAA,YAAY,EAAEJ,KAAK,CAACI,cAAN,CAAqB,gBAArB,CAXlB;AAYI,IAAA,QAAQ,EAAGC,KAAD,IAAWL,KAAK,CAACM,aAAN,CAAoBD,KAApB,EAA2B,gBAA3B,CAZzB,CAaI;AAbJ;AAcI,IAAA,iBAAiB,EAAE,IAdvB;AAeI,IAAA,gBAAgB,EAAE,IAftB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADN,eAoBI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEL,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CADX;AAEI,IAAA,IAAI,EAAE,aAFV;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGG,KAAD,IAAWL,KAAK,CAACO,eAAN,CAAsBF,KAAtB,CAJzB;AAKI,IAAA,WAAW,EAAEL,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CALjB;AAMI,IAAA,KAAK,EAAEF,KAAK,CAACI,cAAN,CAAqB,aAArB,CANX;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,QAAQ,EAAE,IARd;AASI,IAAA,SAAS,EAAE,GATf;AAUI,IAAA,QAAQ,EAAEJ,KAAK,CAACQ,UAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CApBJ,eAkCI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAER,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CADX;AAEI,IAAA,IAAI,EAAE,WAFV;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGG,KAAD,IAAWL,KAAK,CAACO,eAAN,CAAsBF,KAAtB,CAJzB;AAKI,IAAA,WAAW,EAAEL,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CALjB;AAMI,IAAA,KAAK,EAAEF,KAAK,CAACI,cAAN,CAAqB,WAArB,CANX;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,QAAQ,EAAE,IARd;AASI,IAAA,SAAS,EAAE,EATf;AAUI,IAAA,QAAQ,EAAEJ,KAAK,CAACQ,UAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAlCJ,EAgDMR,KAAK,CAACS,SAAN,KAAoB,QAArB,gBACD,uDACA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AACI,IAAA,KAAK,EAAET,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CADX;AAEI,IAAA,IAAI,EAAE,iBAFV;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGG,KAAD,IAAWL,KAAK,CAACO,eAAN,CAAsBF,KAAtB,CAJzB;AAKI,IAAA,WAAW,EAAEL,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CALjB;AAMI,IAAA,KAAK,EAAEF,KAAK,CAACI,cAAN,CAAqB,iBAArB,CANX;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,QAAQ,EAAE,IARd;AASI,IAAA,SAAS,EAAE,KATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA,eAcJ,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEJ,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CADX;AAEI,IAAA,IAAI,EAAE,cAFV;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGG,KAAD,IAAWL,KAAK,CAACO,eAAN,CAAsBF,KAAtB,CAJzB;AAKI,IAAA,WAAW,EAAEL,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CALjB;AAMI,IAAA,KAAK,EAAEF,KAAK,CAACI,cAAN,CAAqB,cAArB,CANX;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,QAAQ,EAAE,IARd;AASI,IAAA,SAAS,EAAE,KATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAdI,eA2BJ,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAEJ,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CADX;AAEI,IAAA,IAAI,EAAE,WAFV;AAGI,IAAA,QAAQ,EAAGG,KAAD,IAAWL,KAAK,CAACO,eAAN,CAAsBF,KAAtB,CAHzB;AAII,IAAA,WAAW,EAAEL,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CAJjB;AAKI,IAAA,YAAY,EAAEF,KAAK,CAACI,cAAN,CAAqB,WAArB,CALlB;AAMI,IAAA,IAAI,EAAC,GANT;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,QAAQ,EAAE,IARd;AASI,IAAA,SAAS,EAAE,GATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA3BI,eAsHJ,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEJ,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CADf;AAEI,IAAA,YAAY,EAAE,IAFlB;AAGI,IAAA,IAAI,EAAE,cAHV;AAII,IAAA,UAAU,EAAE,KAJhB;AAKI,IAAA,WAAW,EAAEF,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CALjB;AAMI,IAAA,WAAW,EAAE,IANjB;AAOI,IAAA,OAAO,EAAEF,KAAK,CAACU,WAAN,IAAqB,EAPlC;AAQI,IAAA,QAAQ,EAAC,cARb;AASI,IAAA,WAAW,EAAC,cAThB;AAUI,IAAA,KAAK,EAAEV,KAAK,CAACI,cAAN,GAAuBJ,KAAK,CAACI,cAAN,CAAqB,cAArB,CAAvB,GAA8D,EAVzE;AAWI,IAAA,YAAY,EAAEJ,KAAK,CAACI,cAAN,CAAqB,cAArB,CAXlB;AAYI,IAAA,QAAQ,EAAGC,KAAD,IAAWL,KAAK,CAACM,aAAN,CAAoBD,KAApB,EAA2B,cAA3B,CAZzB,CAaI;AAbJ;AAcI,IAAA,iBAAiB,EAAE,IAdvB;AAeI,IAAA,gBAAgB,EAAE,IAftB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAtHI,CADC,GA2IJ,EA3LD,eA4LA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAEL,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CADX;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,IAAI,EAAE,oBAHV;AAII,IAAA,QAAQ,EAAGG,KAAD,IAAWL,KAAK,CAACO,eAAN,CAAsBF,KAAtB,CAJzB;AAKI,IAAA,WAAW,EAAEL,KAAK,CAACC,aAAN,CAAoB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAApB,CALjB;AAMI,IAAA,YAAY,EAAEF,KAAK,CAACI,cAAN,CAAqB,oBAArB,MAA+C,CAA/C,GAAmD,IAAnD,GAA0D,KAN5E;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,QAAQ,EAAE,KARd;AASI,IAAA,OAAO,EAAEJ,KAAK,CAACI,cAAN,CAAqB,oBAArB,MAA+C,CAA/C,GAAmD,IAAnD,GAA0D,KATvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA5LA,CADJ;AA4MH,CA7MD;;AA8MA,eAAeL,SAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n//import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\n\r\nconst AddClient = (props) => {\r\n    return (\r\n        <Row>\r\n              <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.formatMessage({ id: \"IDS_CLIENTCATEGORY\" })}\r\n                    isSearchable={true}\r\n                    name={\"nclientcatcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    options={props.clientCategoryList || []}\r\n                    optionId='nclientcatcode'\r\n                    optionValue='sclientcatname'\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nclientcatcode\"] : \"\"}\r\n                    defaultValue={props.selectedRecord[\"nclientcatcode\"]}\r\n                    onChange={(event) => props.onComboChange(event, 'nclientcatcode')}\r\n                    //isMulti={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.formatMessage({ id: \"IDS_CLIENTNAME\" })}\r\n                    name={\"sclientname\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.formatMessage({ id: \"IDS_CLIENTNAME\" })}\r\n                    value={props.selectedRecord[\"sclientname\"]}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n                    readOnly={props.userLogged}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.formatMessage({ id: \"IDS_CLIENTID\" })}\r\n                    name={\"sclientid\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.formatMessage({ id: \"IDS_CLIENTID\" })}\r\n                    value={props.selectedRecord[\"sclientid\"]}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={50}\r\n                    readOnly={props.userLogged}\r\n                />\r\n            </Col>\r\n            {(props.operation !== \"update\") ?  \r\n            <>\r\n            <Col md={12}>\r\n            <FormInput\r\n                label={props.formatMessage({ id: \"IDS_CLIENTSITENAME\" })}\r\n                name={\"sclientsitename\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_CLIENTSITENAME\" })}\r\n                value={props.selectedRecord[\"sclientsitename\"]}\r\n                isMandatory={true}\r\n                required={true}\r\n                maxLength={\"100\"}\r\n            />\r\n        </Col>\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.formatMessage({ id: \"IDS_CLIENTCONTACTNAME\" })}\r\n                name={\"scontactname\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_CLIENTCONTACTNAME\" })}\r\n                value={props.selectedRecord[\"scontactname\"]}\r\n                isMandatory={true}\r\n                required={true}\r\n                maxLength={\"100\"}\r\n            />\r\n        </Col>\r\n        <Col md={12}>\r\n            <FormTextarea\r\n                label={props.formatMessage({ id: \"IDS_ADDRESS1\" })}\r\n                name={\"saddress1\"}\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_ADDRESS1\" })}\r\n                defaultValue={props.selectedRecord[\"saddress1\"]}\r\n                rows=\"2\"\r\n                isMandatory={true}\r\n                required={true}\r\n                maxLength={255}\r\n            />\r\n        </Col>\r\n        {/* <Col md={12}>\r\n            <FormTextarea\r\n                label={props.formatMessage({ id: \"IDS_ADDRESS2\" })}\r\n                name={\"saddress2\"}\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_ADDRESS2\" })}\r\n                defaultValue={props.selectedRecord[\"saddress2\"]}\r\n                rows=\"2\"\r\n                isMandatory={false}\r\n                required={false}\r\n                maxLength={255}\r\n            />\r\n        </Col>\r\n        <Col md={12}>\r\n            <FormTextarea\r\n                label={props.formatMessage({ id: \"IDS_ADDRESS3\" })}\r\n                name={\"saddress3\"}\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_ADDRESS3\" })}\r\n                defaultValue={props.selectedRecord[\"saddress3\"]}\r\n                rows=\"2\"\r\n                isMandatory={false}\r\n                required={false}\r\n                maxLength={255}\r\n            />\r\n        </Col> */}\r\n        {/* <Col md={12}>\r\n            <FormInput\r\n                label={props.formatMessage({ id: \"IDS_PHONENO\" })}\r\n                name={\"sphoneno\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_PHONENO\" })}\r\n                value={props.selectedRecord[\"sphoneno\"]}\r\n                isMandatory={false}\r\n                required={false}\r\n                maxLength={50}\r\n            />\r\n        </Col>\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.formatMessage({ id: \"IDS_MOBILENO\" })}\r\n                name={\"smobileno\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_MOBILENO\" })}\r\n                value={props.selectedRecord[\"smobileno\"]}\r\n                isMandatory={false}\r\n                required={false}\r\n                maxLength={50}\r\n            />\r\n        </Col>\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.formatMessage({ id: \"IDS_FAXNO\" })}\r\n                name={\"sfaxno\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_FAXNO\" })}\r\n                value={props.selectedRecord[\"sfaxno\"]}\r\n                isMandatory={false}\r\n                required={false}\r\n                maxLength={50}\r\n            />\r\n        </Col>\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.formatMessage({ id: \"IDS_EMAIL\" })}\r\n                name={\"semail\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_EMAIL\" })}\r\n                value={props.selectedRecord[\"semail\"]}\r\n                isMandatory={false}\r\n                required={false}\r\n                maxLength={50}\r\n            />\r\n        </Col> */}\r\n        <Col md={12}>\r\n            <FormSelectSearch\r\n                formLabel={props.formatMessage({ id: \"IDS_COUNTRY\" })}\r\n                isSearchable={true}\r\n                name={\"ncountrycode\"}\r\n                isDisabled={false}\r\n                placeholder={props.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={true}\r\n                options={props.countryList || []}\r\n                optionId='ncountrycode'\r\n                optionValue='scountryname'\r\n                value={props.selectedRecord ? props.selectedRecord[\"ncountrycode\"] : \"\"}\r\n                defaultValue={props.selectedRecord[\"ncountrycode\"]}\r\n                onChange={(event) => props.onComboChange(event, 'ncountrycode')}\r\n                //isMulti={false}\r\n                closeMenuOnSelect={true}\r\n                alphabeticalSort={true}\r\n            />\r\n        </Col>\r\n        </>\r\n        :\"\"}\r\n        <Col md={12}>\r\n            <CustomSwitch\r\n                label={props.formatMessage({ id: \"IDS_TRANSACTIONSTATUSACTIVE\" })}\r\n                type=\"switch\"\r\n                name={\"ntransactionstatus\"}\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_TRANSACTIONSTATUSACTIVE\" })}\r\n                defaultValue={props.selectedRecord[\"ntransactionstatus\"] === 1 ? true : false}\r\n                isMandatory={false}\r\n                required={false}\r\n                checked={props.selectedRecord[\"ntransactionstatus\"] === 1 ? true : false}\r\n            />\r\n        </Col>            \r\n        </Row>\r\n    )\r\n}\r\nexport default AddClient;\r\n"]},"metadata":{},"sourceType":"module"}