{"ast":null,"code":"import _createForOfIteratorHelper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,Nav,FormGroup,FormLabel}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faTrashAlt,faPencilAlt,faTasks,faDatabase}from'@fortawesome/free-solid-svg-icons';import{toast}from'react-toastify';import ListMaster from'../../components/list-master/list-master.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import AddQuery from'./AddQuery';import AddParameter from'./AddParameter';import QueryTypeFilter from'./QueryTypeFilter';import{callService,crudMaster,validateEsignCredential,updateStore,getSQLQueryDetail,getSQLQueryComboService,filterColumnData,comboChangeQueryType,executeUserQuery,comboColumnValues,getColumnNamesByTableName,getTablesName,getModuleFormName,getDatabaseTables,executeQuery,getForeignTable,getViewColumns,getMasterData}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{transactionStatus,queryTypeFilter,tableType,ColumnType}from'../../components/Enumeration';import{constructOptionList,getControlMap,showEsign}from'../../components/CommonScript';import{ReadOnlyText,ContentPanel}from'../../components/App.styles';import rsapi from'../../rsapi';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import{Affix}from'rsuite';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import{ListWrapper}from'../../components/client-group.styles';// import ReactTooltip from 'react-tooltip';\nimport PortalModalSlideout from'../../components/portal-modal/portal-modal-slideout';import BuildQuery from'./BuildQuery';import SqlBuilderNewDesign from'./SqlBuilderNewDesign.jsx';// import {validationData} from './QueryBuilderData';\n// const jsonSql = require('json-sql')({separatedValues: true});\nvar SQLBuilder=/*#__PURE__*/function(_Component){_inherits(SQLBuilder,_Component);var _super=_createSuper(SQLBuilder);function SQLBuilder(props){var _this;_classCallCheck(this,SQLBuilder);_this=_super.call(this,props);_this.sidebarExpandCollapse=function(){_this.setState({sidebarview:true});};_this.userQueryDataStateChange=function(event){_this.setState({dataStateUserQuery:event.dataState});};_this.queryGenrate=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openPortalModal:true,openModal:false}};_this.props.updateStore(updateInfo);};_this.ConfirmDelete=function(deleteId){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteRecord(\"SQLQuery\",_this.props.Login.masterData.SelectedSQLQuery,\"delete\",deleteId);});};_this.handleFilterDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.generateFilterQuery(selectedRecord);};_this.onViewComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;var inputParam={sviewname:comboData.value,selectedRecord:selectedRecord,userinfo:_this.props.Login.userInfo};_this.props.getViewColumns(inputParam);};_this.onRuleChange=function(comboData,fieldName,index){var selectedRecord=_this.state.selectedRecord;_this.clearSelectedRule(selectedRecord,index);var sqlQuery=_this.props.Login.sqlQuery;var oldselectedRecord=selectedRecord;selectedRecord[fieldName]=comboData;var tableData=comboData.items;var mastertablename=tableData.mastertablename;if(comboData.items.needmasterdata&&mastertablename){var inputParam={userinfo:_this.props.Login.userInfo,data:{nflag:2,mastertablename:mastertablename,valuemember:tableData.valuemember,displaymember:tableData.displaymember},selectedRecord:selectedRecord,index:index,optionId:tableData.valuemember};_this.props.getMasterData(inputParam);}else if(comboData.items&&comboData.items.columntype===ColumnType.COMBO){if(sqlQuery){var _inputParam={userinfo:_this.props.Login.userInfo,stablename:comboData.items.foriegntablename,scolumnname:comboData.value,selectedRecord:selectedRecord,index:index};_this.props.getForeignTable(_inputParam,'column');}else{selectedRecord[\"\".concat(comboData.items.sforeigncolumnname,\"_\").concat(index)]=\"\";var _inputParam2={data:_objectSpread(_objectSpread({},comboData.items),{},{nflag:1}),userinfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,index:index,optionId:comboData.items.sforeigncolumnname};_this.props.getMasterData(_inputParam2);}}else if(comboData.items&&comboData.items.columntype===ColumnType.TEXTINPUT&&oldselectedRecord[fieldName].items.columntype!==ColumnType.TEXTINPUT){selectedRecord[\"sinputname_\"+index]=\"\";_this.setState({selectedRecord:selectedRecord});}else{_this.setState({selectedRecord:selectedRecord});}};_this.onMasterDataChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord;selectedRecord[fieldName]=comboData;_this.generateFilterQuery(selectedRecord);};_this.addRule=function(type){var selectedRecord=_this.state.selectedRecord;if(type===\"sql\"){var addRuleList=_this.props.Login.addRuleList||[];if(addRuleList.length>0){var arrayLength=addRuleList.length;addRuleList[arrayLength]=arrayLength;selectedRecord[\"button_and_\"+arrayLength]=true;var updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:addRuleList,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);}else{addRuleList[0]=0;_this.props.getDatabaseTables(_this.props.Login.userInfo,_this.props.Login.sqlQuery,{addRuleList:addRuleList,selectedRecord:{}});}}else{if(selectedRecord[\"sviewname\"]){var viewColumnListByRule=_this.props.Login.viewColumnListByRule||[];var _addRuleList=_this.props.Login.addRuleList||[];var _arrayLength=_addRuleList.length;_addRuleList[_arrayLength]=_arrayLength;viewColumnListByRule[_arrayLength]=_this.props.Login.viewColumnList;if(_arrayLength!==0){selectedRecord[\"button_and_\"+_arrayLength]=true;}var _updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:_addRuleList,viewColumnListByRule:viewColumnListByRule,selectedRecord:selectedRecord}};_this.props.updateStore(_updateInfo);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTVIEW\"}));}}};_this.getDatabaseTables=function(){var sqlQuery=false;_this.props.getDatabaseTables(_this.props.Login.userInfo,sqlQuery,{addRuleList:[]});};_this.closePortalModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openPortalModal:false,openModal:true,addRuleList:[],count:0}};_this.props.updateStore(updateInfo);};_this.onExecuteRule=function(){var selectedRecord=_this.state.selectedRecord;if(selectedRecord[\"sgeneratedquery\"]){var inputParam={sgeneratedquery:selectedRecord[\"sgeneratedquery\"],selectedRecord:selectedRecord,userInfo:_this.props.Login.userInfo};_this.props.executeQuery(inputParam);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_QUERYNOTAVAILABLE\"}));}};_this.deleteRule=function(index){var addRuleList=_this.props.Login.addRuleList;var selectedRecord=_this.state.selectedRecord;addRuleList[index]=-1;selectedRecord[\"button_and_\".concat(index)]&&delete selectedRecord[\"button_and_\".concat(index)];selectedRecord[\"button_or_\".concat(index)]&&delete selectedRecord[\"button_or_\".concat(index)];_this.clearSelectedRule(selectedRecord,index);var updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:addRuleList,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.clearRule=function(){var sviewname=_this.state.selectedRecord.sviewname||\"\";var updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:[],selectedRecord:{sviewname:sviewname},sqlQuery:false}};_this.props.updateStore(updateInfo);};_this.resetRule=function(){var sviewname=_this.state.selectedRecord.sviewname||\"\";_this.setState({selectedRecord:{sviewname:sviewname}});};_this.onSymbolChange=function(comboData,fieldName,index){var selectedRecord=_this.state.selectedRecord;var oldSelectedRecord=selectedRecord[fieldName]||{};selectedRecord[fieldName]=comboData;var items=selectedRecord[\"columnname_\"+index].items;selectedRecord[\"columnname_\"+index][\"items\"][\"needmasterdata\"]=items.needmasterdata?comboData.items.needmasterdata:false;if(comboData.items.symbolType===2||comboData.items.symbolType===3){selectedRecord[items[\"valuemember\"]+\"_\"+index]&&delete selectedRecord[items[\"valuemember\"]+\"_\"+index];selectedRecord[items[\"foreigncolumnname\"]+\"_\"+index]&&delete selectedRecord[items[\"foreigncolumnname\"]+\"_\"+index];selectedRecord[\"sinputname_\"+index]&&delete selectedRecord[\"sinputname_\"+index];}else if(comboData.items.symbolType===5&&oldSelectedRecord.items&&oldSelectedRecord.items.symbolType!==5){selectedRecord[\"snumericinput_\"+index]&&delete selectedRecord[\"snumericinput_\"+index];selectedRecord[\"snumericinputtwo_\"+index]&&delete selectedRecord[\"snumericinputtwo_\"+index];}else if(comboData.items.symbolType===6&&oldSelectedRecord.items&&oldSelectedRecord.items.symbolType===1||comboData.items.symbolType===1&&oldSelectedRecord.items&&oldSelectedRecord.items.symbolType===6){selectedRecord[\"\".concat(items.sforeigncolumnname,\"_\").concat(index)]&&delete selectedRecord[\"\".concat(items.sforeigncolumnname,\"_\").concat(index)];selectedRecord[\"\".concat(items.valuemember,\"_\").concat(index)]&&delete selectedRecord[\"\".concat(items.valuemember,\"_\").concat(index)];}else{}_this.generateFilterQuery(selectedRecord);};_this.onInputChange=function(event,type){var selectedRecord=_this.state.selectedRecord;if(type===2){var inputValue=event.target.value;if(/^-?\\d*?\\.?\\d*?$/.test(inputValue)||inputValue===\"\"){selectedRecord[event.target.name]=event.target.value;}}else{selectedRecord[event.target.name]=event.target.value;}_this.generateFilterQuery(selectedRecord);};_this.generateFilterQuery=function(selectedRecord){var addRuleList=_this.props.Login.addRuleList;//  jsonSql.setDialect('mssql');\nvar databaseCondition=[];var displayCondition=[];if(addRuleList.length>0){var orDisplayConditionArray=[];var orConditionArray=[];addRuleList.forEach(function(index){var symbolObject={};if(selectedRecord[\"columnname_\"+index]){symbolObject=selectedRecord[\"ssymbolname_\"+index].items||{};var current_button_and=selectedRecord[\"button_and_\".concat(index)];var current_button_or=selectedRecord[\"button_or_\".concat(index)];var next_button_and=selectedRecord[\"button_and_\".concat(index+1)];var next_button_or=selectedRecord[\"button_or_\".concat(index+1)]?selectedRecord[\"button_or_\".concat(index+1)]:false;var inputname=selectedRecord[\"sinputname_\"+index];var symbolname=symbolObject.symbol;var numericinput=selectedRecord[\"snumericinput_\"+index];var columnLabel=selectedRecord[\"columnname_\"+index].label;var columnValue=selectedRecord[\"columnname_\"+index].value;var snumericinputtwo=selectedRecord[\"snumericinputtwo_\"+index];var columnName=undefined;var needmasterdata=selectedRecord[\"columnname_\"+index].items.needmasterdata?selectedRecord[\"columnname_\"+index].items.needmasterdata:false;if(selectedRecord[\"columnname_\"+index].items.needmasterdata){columnName=selectedRecord[\"columnname_\"+index].items.valuemember+\"_\"+index;}else if(selectedRecord[\"columnname_\"+index].items.sforeigncolumnname){columnName=selectedRecord[\"columnname_\"+index].items.sforeigncolumnname+\"_\"+index;}var dateinput=selectedRecord[\"dateinput_\"+index];var dateinputtwo=selectedRecord[\"dateinputtwo_\"+index];if(current_button_or||next_button_or||current_button_and&&next_button_or){if(symbolObject&&inputname){if(symbolObject.symbolType===4){var _index=symbolObject.replacewith.indexOf('_');inputname=symbolObject.replacewith.substr(0,_index)+inputname+symbolObject.replacewith.substr(_index+1);orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,inputname)));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,inputname)));}else{orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,inputname)));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,inputname)));}}else if(symbolObject&&numericinput&&symbolObject.symbolType!==5){orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,numericinput)));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,numericinput)));}else if(symbolObject&&symbolObject.symbolType===2||symbolObject&&symbolObject.symbolType===3){orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,'')));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,'')));}else if(symbolObject&&numericinput&&snumericinputtwo&&symbolObject.symbolType===5){if(symbolObject.symbol===\"\"){var tempValue=[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))];var tempValue1=[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))];orConditionArray.push(tempValue);orDisplayConditionArray.push(tempValue1);}else{var _tempValue=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))])];var _tempValue2=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))])];orConditionArray.push(_tempValue);orDisplayConditionArray.push(_tempValue2);}}else if(symbolObject&&symbolObject.symbolType===6&&columnName&&selectedRecord[columnName]){// if(typeof selectedRecord[columnName] === \"object\") {\n//     orConditionArray.push({[columnValue]: { [symbolname]: [selectedRecord[columnName].value]} });\n//     orDisplayConditionArray.push({[columnLabel]: { [symbolname]: [selectedRecord[columnName].label]} });\n// } else {\nvar data=selectedRecord[columnName]&&selectedRecord[columnName].map(function(item){return item.value;})||[];var data1=selectedRecord[columnName]&&selectedRecord[columnName].map(function(item){return item.label;})||[];if(data.length>0){if(needmasterdata){orConditionArray.push(_defineProperty({},selectedRecord[\"columnname_\"+index].items.valuemember,_defineProperty({},symbolname,data)));}else{orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,data)));}}if(data1.length>0){orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,data1)));}// }\n}else if(symbolObject&&columnName&&symbolObject.isInputVisible&&selectedRecord[columnName]){if(needmasterdata){orConditionArray.push(_defineProperty({},selectedRecord[\"columnname_\"+index].items.valuemember,_defineProperty({},symbolname,selectedRecord[columnName].value)));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,selectedRecord[columnName].label)));}else{orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,selectedRecord[columnName].value)));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,selectedRecord[columnName].label)));}}else if(symbolObject&&dateinput&&symbolObject.symbolType!==5){orConditionArray.push(_defineProperty({},columnValue,_defineProperty({},symbolname,dateinput)));orDisplayConditionArray.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,dateinput)));}else if(symbolObject&&dateinput&&dateinputtwo&&symbolObject.symbolType===5){if(symbolObject.symbol===\"\"){var _tempValue3=[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))];var _tempValue4=[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))];orConditionArray.push(_tempValue3);orDisplayConditionArray.push(_tempValue4);}else{var _tempValue5=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))])];var _tempValue6=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))])];orConditionArray.push(_tempValue5);orDisplayConditionArray.push(_tempValue6);}}}else{if(symbolObject&&inputname){if(symbolObject.symbolType===4){var _index2=symbolObject.replacewith.indexOf('_');inputname=symbolObject.replacewith.substr(0,_index2)+inputname+symbolObject.replacewith.substr(_index2+1);databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,inputname)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,inputname)));}else{databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,inputname)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,inputname)));}}else if(symbolObject&&numericinput&&symbolObject.symbolType!==5){databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,numericinput)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,numericinput)));}else if(symbolObject&&symbolObject.symbolType===2||symbolObject&&symbolObject.symbolType===3){databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,'')));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,'')));}else if(symbolObject&&numericinput&&snumericinputtwo&&symbolObject.symbolType===5){if(symbolObject.symbol===\"\"){var _tempValue7=[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))];var _tempValue8=[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))];databaseCondition.push(_tempValue7);displayCondition.push(_tempValue8);}else{var _tempValue9=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))])];var _tempValue10=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],+numericinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],snumericinputtwo))])];databaseCondition.push(_tempValue9);displayCondition.push(_tempValue10);}}else if(symbolObject&&symbolObject.symbolType===6&&columnName&&selectedRecord[columnName]){// if(typeof selectedRecord[columnName] === \"object\") {\n//     databaseCondition.push({[columnValue]: { [symbolname]: [selectedRecord[columnName].value]} });\n//     displayCondition.push({[columnLabel]: { [symbolname]: [selectedRecord[columnName].label]} });\n// } else {\nvar _data=selectedRecord[columnName]&&selectedRecord[columnName].map(function(item){return item.value;})||[];var _data2=selectedRecord[columnName]&&selectedRecord[columnName].map(function(item){return item.label;})||[];if(_data.length>0){if(needmasterdata){databaseCondition.push(_defineProperty({},selectedRecord[\"columnname_\"+index].items.valuemember,_defineProperty({},symbolname,_data)));}else{databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,_data)));}}if(_data2.length>0){displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,_data2)));}// }\n}else if(symbolObject&&columnName&&symbolObject.isInputVisible&&selectedRecord[columnName]){if(needmasterdata){databaseCondition.push(_defineProperty({},selectedRecord[\"columnname_\"+index].items.valuemember,_defineProperty({},symbolname,selectedRecord[columnName].value)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,selectedRecord[columnName].label)));}else{databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,selectedRecord[columnName].value)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,selectedRecord[columnName].label)));}}else if(symbolObject&&dateinput&&symbolObject.symbolType!==5){databaseCondition.push(_defineProperty({},columnValue,_defineProperty({},symbolname,dateinput)));displayCondition.push(_defineProperty({},columnLabel,_defineProperty({},symbolname,dateinput)));}else if(symbolObject&&dateinput&&dateinputtwo&&symbolObject.symbolType===5){if(symbolObject.symbol===\"\"){var _tempValue11=[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))];var _tempValue12=[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))];databaseCondition.push(_tempValue11);displayCondition.push(_tempValue12);}else{var _tempValue13=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnValue,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))])];var _tempValue14=[_defineProperty({},symbolObject.symbol,[_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[0],dateinput)),_defineProperty({},columnLabel,_defineProperty({},symbolObject.replacewith[1],dateinputtwo))])];databaseCondition.push(_tempValue13);displayCondition.push(_tempValue14);}}}if(current_button_or&&(next_button_and||typeof next_button_and==='undefined')||typeof next_button_or==='undefined'){if(orConditionArray.length>0){databaseCondition.push({$or:orConditionArray});orConditionArray=[];}if(orDisplayConditionArray.length>0){displayCondition.push({$or:orDisplayConditionArray});orDisplayConditionArray=[];}}if(_this.props.Login.sqlQuery){// const databaseSQLQuery = jsonSql.build({\n//     type: 'select',\n//     table: selectedRecord[\"stablename_0\"].value,\n//     condition: databaseCondition\n// });\n//     const displaySQLQuery = jsonSql.build({\n//         type: 'select',\n//         table: selectedRecord[\"stablename_0\"].label,\n//         condition: displayCondition\n//     });\n//     selectedRecord[\"sgeneratedquery\"] = databaseSQLQuery.query;\n//     selectedRecord[\"sdisplayquery\"] = displaySQLQuery.query;\n// } else {\n//     const databaseSQLQuery = jsonSql.build({\n//         type: 'select',\n//         table: selectedRecord[\"sviewname\"].value,\n//         condition: databaseCondition\n//     });\n//     const displaySQLQuery = jsonSql.build({\n//         type: 'select',\n//         table: selectedRecord[\"sviewname\"].label,\n//         condition: displayCondition\n//     });\n// jsonSql = jsonSql.setSeparatedValues(true);\n// selectedRecord[\"sgeneratedquery\"] = databaseSQLQuery.query;\n// selectedRecord[\"sdisplayquery\"] = displaySQLQuery.query;\n}_this.setState({selectedRecord:selectedRecord});}else{}});}};_this.onConditionClick=function(fieldName,index){var selectedRecord=_this.state.selectedRecord;if(fieldName===\"button_and_\".concat(index)){selectedRecord[fieldName]=selectedRecord[fieldName]===true?false:true;selectedRecord[\"button_or_\".concat(index)]=false;}else if(fieldName===\"button_or_\".concat(index)){selectedRecord[fieldName]=selectedRecord[fieldName]===true?false:true;selectedRecord[\"button_and_\".concat(index)]=false;}else{}_this.generateFilterQuery(selectedRecord);};_this.onQueryTypeOnclick=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{sqlQuery:!_this.state.sqlQuery}};_this.props.updateStore(updateInfo);};_this.getValidationForEdit=function(screenName,operation,primaryKeyName,primaryKeyValue,masterData,userInfo,queryTypeCode,ncontrolCode){var _rsapi$post;rsapi.post(\"sqlquery/getValidationForEdit\",(_rsapi$post={},_defineProperty(_rsapi$post,primaryKeyName,primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",userInfo),_rsapi$post)).then(function(response){if(response.data===\"IDS_SUCCESS\"){_this.props.getSQLQueryComboService(screenName,operation,primaryKeyName,primaryKeyValue,masterData,userInfo,queryTypeCode,ncontrolCode);}else if(response.data===\"IDS_QUERYUSEDINDASHBOARD\"){_this.confirmAlertForEdit(ncontrolCode);}else{toast.warn(_this.props.intl.formatMessage({id:response.data}));}}).catch(function(error){if(error.response.status===500){toast.error(_this.props.intl.formatMessage({id:error.message}));}else{toast.warn(_this.props.intl.formatMessage({id:error.response.data}));}});};_this.confirmAlertForEdit=function(editId){_this.confirmMessage.confirm(_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_QUERYUSEDINDASHBOARD\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),// () => this.performBatchAction(), \nfunction(){return _this.props.getSQLQueryComboService(_this.state.queryTypeName,\"update\",\"nsqlquerycode\",_this.props.Login.masterData.SelectedSQLQuery.nsqlquerycode,_this.props.Login.masterData,_this.props.Login.userInfo,//this.state.selectedcombo[\"nquerytypecode\"].value, \n_this.props.Login.masterData.SelectedQueryType.nquerytypecode,editId);},undefined,function(){return _this.closeAlert();});};_this.closeAlert=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showConfirmAlertForEdit:false}};_this.props.updateStore(updateInfo);};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){_this.searchRef.current.value=\"\";//    const inputParam = {\n//        inputData: { \"userinfo\": this.props.Login.userInfo, \n//                    nquerytypecode:this.state.selectedRecord[\"nquerytypecode\"] ? \n//                                   this.state.selectedRecord[\"nquerytypecode\"].value : 0\n//                 },        \n//        userInfo: this.props.Login.userInfo,\n//        classUrl: \"sqlquery\",\n//        methodUrl: \"SQLQuery\",\n//        displayName: \"IDS_SQLBUILDER\",\n//    };\n//this.props.callService(inputParam);\nvar nquerytypecode=_this.state.selectedRecord[\"nquerytypecode\"]?_this.state.selectedRecord[\"nquerytypecode\"].value:_this.props.Login.masterData.SelectedQueryType.nquerytypecode;_this.props.comboChangeQueryType(nquerytypecode,_this.props.Login.masterData,_this.props.Login.userInfo);};_this.handlePageChange=function(event){_this.setState({skip:event.skip,take:event.take});};_this.onComboChange=function(comboData,fieldName){if(comboData!=null){if(fieldName===\"ncharttypecode\"){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}if(fieldName===\"ntabletypecode\"||fieldName===\"nformcode\"){var selectedTableType=_this.state.selectedTableType||{};selectedTableType[fieldName]=comboData;_this.setState({selectedTableType:selectedTableType});var _selectedRecord=_this.state.selectedRecord||{};//  this.state.ntableTypeCode=comboData.value;\nif(fieldName===\"ntabletypecode\"){if(comboData.value===tableType.ALL){_selectedRecord[\"nformcode\"]=\"\";_this.props.getTablesName(selectedTableType[\"ntabletypecode\"].value,0,_this.props.Login.userInfo);}else{var updateInfor={typeName:DEFAULT_RETURN,data:{tableName:[]}};_this.props.updateStore(updateInfor);_this.setState({moduleFormName:[]});_selectedRecord[\"nformcode\"]=\"\";_this.props.getModuleFormName(comboData.value,_this.props.Login.userInfo);}}if(fieldName===\"nformcode\"){_selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:_selectedRecord});//this.state.nFormCode=comboData.value;\n//this.getTablesName(selectedRecord[\"ntabletypecode\"].value ,selectedRecord[\"nformcode\"].value)\n_this.props.getTablesName(selectedTableType[\"ntabletypecode\"].value,_selectedRecord[\"nformcode\"].value,_this.props.Login.userInfo);}}else{var selectedcombo=_this.state.selectedcombo||{};selectedcombo[fieldName]=comboData;_this.setState({selectedcombo:selectedcombo});}if(fieldName===\"nquerytypecode\"){_this.searchRef.current.value=\"\";// this.props.comboChangeQueryType(comboData.value, this.props.Login.masterData, this.props.Login.userInfo);\nvar _selectedRecord2=_this.state.selectedRecord||{};_selectedRecord2[fieldName]=comboData;var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:_selectedRecord2}};_this.props.updateStore(updateInfo);}}};_this.onEsignInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){// const selectedRecord = this.state.selectedRecord || {};\nvar selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"ntransactionstatus\")selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;else selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onNumericInputChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var showExecute=_this.props.Login.showExecute;var showParam=_this.props.Login.showParam;var showValidate=_this.props.Login.showValidate;var showSave=_this.props.Login.showSave;var screenName=_this.props.Login.screenName;var operation=_this.props.Login.operation;var slideOperation=_this.props.Login.slideOperation;var parentPopUpSize=_this.props.Login.parentPopUpSize;var resultStatus=_this.props.Login.resultStatus;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";selectedRecord[\"agree\"]=transactionStatus.NO;if(_this.state.param.size>0){showExecute=true;showSave=true;}else{showExecute=false;showSave=false;}parentPopUpSize=\"xl\";}}else{if(_this.props.Login.screenName===\"Parameter for Results\"||_this.props.Login.screenName===\"Results\"){if(_this.props.Login.screenFlag===\"showQuery\"){openModal=true;var queryTypeCode=_this.props.Login.masterData.SelectedQueryType.nquerytypecode;if(queryTypeCode===queryTypeFilter.LIMSDASHBOARDQUERY){screenName=_this.props.intl.formatMessage({id:\"IDS_LIMSDASHBOARDQUERY\"});}else if(queryTypeCode===queryTypeFilter.LIMSALERTQUERY){screenName=_this.props.intl.formatMessage({id:\"IDS_LIMSALERTQUERY\"});}else if(queryTypeCode===queryTypeFilter.LIMSBARCODEQUERY){screenName=_this.props.intl.formatMessage({id:\"IDS_LIMSBARCODEQUERY\"});}else if(queryTypeCode===queryTypeFilter.LIMSGENERALQUERY){screenName=_this.props.intl.formatMessage({id:\"IDS_LIMSGENERALQUERY\"});}else{screenName=_this.props.intl.formatMessage({id:\"IDS_LIMSFILTERQUERY\"});}showSave=false;}else{selectedRecord={};openModal=false;showExecute=false;}showParam=false;showValidate=true;operation=slideOperation;slideOperation=\"\";resultStatus=\"\";}else{openModal=false;selectedRecord={};showExecute=false;}}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,showExecute:showExecute,showParam:showParam,operation:operation,screenName:screenName,showSave:showSave,showValidate:showValidate,parentPopUpSize:parentPopUpSize,resultStatus:resultStatus,showConfirmAlertForEdit:false}};_this.props.updateStore(updateInfo);};_this.upDateComboboxValue=function(i){return function(Value){if(Value!=null){// let parameters = [...this.state.parameters]\n// parameters[i].textValue = Value\n// this.setState({\n//     parameters: parameters\n// })\nvar paramMap=_this.state.param||new Map();paramMap.get(i).textValue=Value;_this.setState({param:paramMap});}};};_this.handleDateChange=function(i){return function(date){// let parameters = [...this.state.parameters]\n// parameters[i].Datetime = date\n// this.setState({\n//     parameters: parameters\n// })\nvar paramMap=_this.state.param||new Map();paramMap.get(i).Datetime=date;_this.setState({param:paramMap});};};_this.handleText=function(i){return function(event){//let parameters = [...this.state.parameters];\n//parameters[i].textValue = e.target.value;\n//this.setState({parameters: parameters});\n// console.log(parameters)\nvar paramMap=_this.state.param||new Map();paramMap.get(event.target.name).textValue=event.target.value;_this.setState({param:paramMap});};};_this.executeQuery=function(methodUrl,selectedRecord,operation,ncontrolCode){var sqlQuery=selectedRecord.ssqlquery;if(sqlQuery.length>10){if(sqlQuery.toUpperCase().indexOf('INSERT')>=0||sqlQuery.toUpperCase().indexOf('UPDATE')>=0||sqlQuery.toUpperCase().indexOf('DELETE')>=0||sqlQuery.toUpperCase().indexOf('TRUNCATE')>=0||sqlQuery.toUpperCase().indexOf('CREATE')>=0||sqlQuery.toUpperCase().indexOf('ALTER')>=0||sqlQuery.toUpperCase().indexOf('DROP')>=0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_CANNOTDATAMANIPULATION\"}));}else{if(sqlQuery.indexOf('<@')>0||sqlQuery.indexOf('<#')>0){var newQuery=sqlQuery;var paramMap=new Map();while(newQuery.indexOf(\"<@\")!==-1||newQuery.indexOf(\"<#\")!==-1){if(newQuery.indexOf(\"<@\")!==-1){var paramLabelStartIndex=newQuery.indexOf(\"<@\");var paramLabelEndIndex=newQuery.indexOf(\"@>\");var paramLabel=newQuery.substring(paramLabelStartIndex+2,paramLabelEndIndex);if(paramLabel.indexOf(\"T$\")!==-1){var displayName=\"\";var localParam=\"\";var tableName=\"\";newQuery=newQuery.substring(paramLabelEndIndex+2,newQuery.length);if(paramLabel.indexOf(\"D$\")!==-1){localParam=paramLabel.substring(0,paramLabel.indexOf('D$'));displayName=paramLabel.substring(paramLabel.indexOf('D$')+2,paramLabel.indexOf('T$'));//tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\ntableName=paramLabel.substring(paramLabel.indexOf('T$')+2,paramLabel.length);}else{localParam=paramLabel.substring(0,paramLabel.indexOf('T$'));// tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\ntableName=paramLabel.substring(paramLabel.indexOf('T$')+2,paramLabel.length);}if(localParam.startsWith('d')||localParam.startsWith('D')){paramMap.set(\"P$\"+localParam+\"$P\",{value:'DateTimePicker',lableName:localParam,//ID: param.length, \nDatetime:new Date(),textValue:'',TableName:tableName,DisplayParam:displayName,actuallableName:localParam.substring(1,localParam.length)});}else if(paramLabel==='slanguagetypecode'){paramMap.set(\"P$\"+localParam+\"$P\",{value:'TextBox1',lableName:localParam,//ID: param.length, \ntextValue:_this.props.Login.userInfo.slanguagetypecode,TableName:tableName,DisplayParam:displayName,actuallableName:localParam.substring(1,localParam.length)});}else{paramMap.set(\"P$\"+localParam+\"$P\",{value:'TextBox1',lableName:localParam,//ID: param.length, \ntextValue:'',TableName:tableName,DisplayParam:displayName,actuallableName:localParam.substring(1,localParam.length)});}}else{newQuery=newQuery.substring(paramLabelEndIndex+2,newQuery.length);if(paramLabel==='slanguagetypecode'){paramMap.set(\"<@\"+paramLabel+\"@>\",{value:'TextBox1',lableName:paramLabel,//ID: param.length, \ntextValue:_this.props.Login.userInfo.slanguagetypecode,TableName:\"\",DisplayParam:\"\",actuallableName:paramLabel.substring(1,paramLabel.length)});}else{paramMap.set(\"<@\"+paramLabel+\"@>\",{value:'TextBox1',lableName:paramLabel,//ID: param.length, \ntextValue:'',TableName:\"\",DisplayParam:\"\",actuallableName:paramLabel.substring(1,paramLabel.length)});}}}else if(newQuery.indexOf(\"<#\")!==-1){var _paramLabelStartIndex=newQuery.indexOf(\"<#\");var _paramLabelEndIndex=newQuery.indexOf(\"#>\");var _paramLabel=newQuery.substring(_paramLabelStartIndex+2,_paramLabelEndIndex);if(_paramLabel.indexOf(\"T$\")!==-1){var _displayName=\"\";var _localParam=\"\";var _tableName=\"\";newQuery=newQuery.substring(_paramLabelEndIndex+2,newQuery.length);if(_paramLabel.indexOf(\"D$\")!==-1){_localParam=_paramLabel.substring(0,_paramLabel.indexOf('D$'));_displayName=_paramLabel.substring(_paramLabel.indexOf('D$')+2,_paramLabel.indexOf('T$'));//tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\n_tableName=_paramLabel.substring(_paramLabel.indexOf('T$')+2,_paramLabel.length);}else{_localParam=_paramLabel.substring(0,_paramLabel.indexOf('T$'));// tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\n_tableName=_paramLabel.substring(_paramLabel.indexOf('T$')+2,_paramLabel.length);}if(_localParam.startsWith('d')||_localParam.startsWith('D')){paramMap.set(\"P$\"+_localParam+\"$P\",{value:'DateTimePicker',lableName:_localParam,//ID: param.length, \nDatetime:new Date(),textValue:'',TableName:_tableName,DisplayParam:_displayName,actuallableName:_localParam.substring(1,_localParam.length)});}else if(_paramLabel==='slanguagetypecode'){paramMap.set(\"P$\"+_localParam+\"$P\",{value:'TextBox1',lableName:_localParam,//ID: param.length, \ntextValue:_this.props.Login.userInfo.slanguagetypecode,TableName:_tableName,DisplayParam:_displayName,actuallableName:_localParam.substring(1,_localParam.length)});}else{paramMap.set(\"P$\"+_localParam+\"$P\",{value:'TextBox1',lableName:_localParam,//ID: param.length, \ntextValue:'',TableName:_tableName,DisplayParam:_displayName,actuallableName:_localParam.substring(1,_localParam.length)});}}else{newQuery=newQuery.substring(_paramLabelEndIndex+2,newQuery.length);paramMap.set(\"<#\"+_paramLabel+\"#>\",{value:'DateTimePicker',lableName:_paramLabel,actuallableName:_paramLabel.substring(1,_paramLabel.length),//ID: param.length, \nDatetime:new Date()});}}}var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:\"Parameter for Results\",openModal:true,showExecute:true,showParam:true,showValidate:false,showSave:false,operation:\"create\",slideOperation:\"\",slideResult:[],slideList:[],screenFlag:\"showParam\",param:paramMap,//param: param, Dparam: Dparam, TBLName: TBLName,\nparentPopUpSize:\"xl\"}};_this.props.updateStore(updateInfo);}else{//query without parameters      \nvar inputParam={query:selectedRecord.ssqlquery.trim(),screenName:\"Results\",openModal:true,showExecute:false,showParam:true,showValidate:false,showSave:false,noSave:true,operation:\"view\",slideOperation:\"\",slideResult:[],slideList:[],//screenFlag: \"showParam\",\nscreenFlag:\"NoParam\",parentPopUpSize:\"xl\",param:new Map(),userInfo:_this.props.Login.userInfo};_this.props.executeUserQuery(inputParam);}}}};_this.deleteRecord=function(methodUrl,selectedRecord,operation,ncontrolCode){var _inputData;var postParam={inputListName:\"SQLQuery\",selectedObject:\"SelectedSQLQuery\",primaryKeyField:\"nsqlquerycode\",primaryKeyValue:_this.props.Login.masterData.SelectedSQLQuery.nsqlquerycode,fetchUrl:\"sqlquery/getSQLQuery\",fecthInputObject:{userInfo:_this.props.Login.userInfo}};var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:methodUrl,postParam:postParam,inputData:(_inputData={},_defineProperty(_inputData,methodUrl.toLowerCase(),selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_defineProperty(_inputData,\"sqlquery\",_this.props.Login.masterData.SelectedSQLQuery),_inputData),operation:operation};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"sqlquery\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.onExecuteClick=function(){// let paramVal;\nvar tempQuery=\"\";var paramFlag=true;var selectedRecord=_this.state.selectedRecord||{};if(_this.props.Login.screenName===\"Parameter for Results\"&&_this.state.param.size>0){if(selectedRecord!=null&&selectedRecord.ssqlquery!=null&&selectedRecord.ssqlquery.length>0){tempQuery=selectedRecord.ssqlquery;}else{tempQuery=_this.props.Login.masterData.SelectedSQLQuery.ssqlquery;}var paramMap=_this.state.param||new Map();var _iterator=_createForOfIteratorHelper(paramMap.entries()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var parameterMap=_step.value;var parameter=parameterMap[0];var parameterDetail=parameterMap[1];var paramVal=\"\";//console.log(\"para detail:\", parameterDetail);\nif(parameter.indexOf('<#')!==-1){if(parameterDetail.Datetime!==null){paramVal=parameterDetail.Datetime.getFullYear()+\"-\";if(parameterDetail.Datetime.getMonth().toString().length>1){paramVal=paramVal+parseInt(parameterDetail.Datetime.getMonth()+1)+\"-\";}else if(parameterDetail.Datetime.getMonth()===9){paramVal=paramVal+parseInt(parameterDetail.Datetime.getMonth()+1)+\"-\";}else{paramVal=paramVal+\"0\"+parseInt(parameterDetail.Datetime.getMonth()+1)+\"-\";}if(parameterDetail.Datetime.getDate().toString().length>1){paramVal=paramVal+parameterDetail.Datetime.getDate();}else{paramVal=paramVal+\"0\"+parameterDetail.Datetime.getDate();}}if(paramVal===undefined){paramFlag=false;tempQuery=tempQuery.replaceAll(parameter,null);}else if(paramVal.trim().length>0){//tempQuery = tempQuery.replace(parameter, \"P#\" + paramVal + \"$P\");\ntempQuery=tempQuery.replaceAll(parameter,\"'\"+paramVal+\"'\");}else{paramFlag=false;}}else{paramVal=parameterDetail.textValue;if(paramVal!==\"\"){if(parameter.indexOf('<@')!==-1){if(tempQuery.indexOf(parameterDetail.lableName.trim()+'D$')>0){tempQuery=tempQuery.replaceAll('P$'+parameterDetail.lableName.trim()+'D$'+parameterDetail.DisplayParam+'T$'+parameterDetail.TableName+'$P',\"'\"+paramVal+\"'\");}else if(tempQuery.indexOf(parameterDetail.lableName.trim()+'T$')>0){tempQuery=tempQuery.replaceAll('P$'+parameterDetail.lableName.trim()+'T$'+parameterDetail.TableName+'$P',\"'\"+paramVal+\"'\");}else{tempQuery=tempQuery.replaceAll(parameter,\"'\"+paramVal+\"'\");}}else{if(tempQuery.indexOf(parameterDetail.lableName.trim()+'D$')>0){tempQuery=tempQuery.replaceAll('P$'+parameterDetail.lableName.trim()+'D$'+parameterDetail.DisplayParam.trim()+'T$'+parameterDetail.TableName+'$P',paramVal);}else if(tempQuery.indexOf(parameterDetail.lableName.trim()+'T$')>0){tempQuery=tempQuery.replaceAll('P$'+parameterDetail.lableName.trim()+'T$'+parameterDetail.TableName+'$P',paramVal);}else{tempQuery=tempQuery.replaceAll(parameter,paramVal);}}}else{paramFlag=false;}}}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(paramFlag===true){//console.log(\"temp:\", tempQuery);\nvar inputParam={slideOperation:_this.props.Login.slideOperation,screenFlag:_this.props.Login.screenFlag,query:tempQuery.trim(),userInfo:_this.props.Login.userInfo,data:{}};_this.props.executeUserQuery(inputParam);//this.props.executeUserQuery(tempQuery.trim(), this.props.Login.screenFlag, this.props.Login.slideOperation, this.props.Login.userInfo);\n}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_ENTERPAREMETRS\"}));}}else{if(selectedRecord.ssqlquery!==null&&selectedRecord.ssqlquery.length>0){var sqlQuery=selectedRecord.ssqlquery;if(sqlQuery.toUpperCase().indexOf('INSERT')>=0||sqlQuery.toUpperCase().indexOf('UPDATE')>=0||sqlQuery.toUpperCase().indexOf('DELETE')>=0||sqlQuery.toUpperCase().indexOf('TRUNCATE')>=0||sqlQuery.toUpperCase().indexOf('CREATE')>=0||sqlQuery.toUpperCase().indexOf('ALTER')>=0||sqlQuery.toUpperCase().indexOf('DROP')>=0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_CANNOTDATAMANIPULATION\"}));}else{// ALPD-3460\nif(sqlQuery.indexOf('<@')>0&&sqlQuery.indexOf('@>')>0||sqlQuery.indexOf('<#')>0&&sqlQuery.indexOf('#>')>0){var newQuery=sqlQuery;var _paramMap=new Map();while(newQuery.indexOf(\"<@\")!==-1||newQuery.indexOf(\"<#\")!==-1){if(newQuery.indexOf(\"<@\")!==-1){var paramLabelStartIndex=newQuery.indexOf(\"<@\");var paramLabelEndIndex=newQuery.indexOf(\"@>\");var paramLabel=newQuery.substring(paramLabelStartIndex+2,paramLabelEndIndex);if(paramLabel.indexOf(\"T$\")!==-1){var displayName=\"\";var localParam=\"\";var tableName=\"\";newQuery=newQuery.substring(paramLabelEndIndex+2,newQuery.length);if(paramLabel.indexOf(\"D$\")!==-1){localParam=paramLabel.substring(0,paramLabel.indexOf('D$'));displayName=paramLabel.substring(paramLabel.indexOf('D$')+2,paramLabel.indexOf('T$'));//tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\ntableName=paramLabel.substring(paramLabel.indexOf('T$')+2,paramLabel.length);}else{localParam=paramLabel.substring(0,paramLabel.indexOf('T$'));//tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\ntableName=paramLabel.substring(paramLabel.indexOf('T$')+2,paramLabel.length);}if(localParam.startsWith('d')||localParam.startsWith('D')){_paramMap.set(\"P$\"+localParam+\"$P\",{value:'DateTimePicker',lableName:localParam,//ID: param.length, \nDatetime:new Date(),textValue:'',TableName:tableName,DisplayParam:displayName,actuallableName:localParam.substring(1,localParam.length)});}else if(localParam==='slanguagetypecode'){_paramMap.set(\"P$\"+localParam+\"$P\",{value:'TextBox1',lableName:localParam,//ID: param.length, \ntextValue:_this.props.Login.userInfo.slanguagetypecode,TableName:tableName,DisplayParam:displayName,actuallableName:localParam.substring(1,localParam.length)});}else{_paramMap.set(\"P$\"+localParam+\"$P\",{value:'TextBox1',lableName:localParam,//ID: param.length, \ntextValue:'',TableName:tableName,DisplayParam:displayName,actuallableName:localParam.substring(1,localParam.length)});}}else{newQuery=newQuery.substring(paramLabelEndIndex+2,newQuery.length);if(paramLabel==='slanguagetypecode'){_paramMap.set(\"<@\"+paramLabel+\"@>\",{value:'TextBox1',lableName:paramLabel,//ID: param.length, \ntextValue:_this.props.Login.userInfo.slanguagetypecode,TableName:\"\",DisplayParam:\"\",actuallableName:paramLabel.substring(1,paramLabel.length)});}else{_paramMap.set(\"<@\"+paramLabel+\"@>\",{value:'TextBox1',lableName:paramLabel,//ID: param.length, \ntextValue:'',TableName:\"\",DisplayParam:\"\",actuallableName:paramLabel.substring(1,paramLabel.length)});}}}else if(newQuery.indexOf(\"<#\")!==-1){var _paramLabelStartIndex2=newQuery.indexOf(\"<#\");var _paramLabelEndIndex2=newQuery.indexOf(\"#>\");var _paramLabel2=newQuery.substring(_paramLabelStartIndex2+2,_paramLabelEndIndex2);if(_paramLabel2.indexOf(\"T$\")!==-1){var _displayName2=\"\";var _localParam2=\"\";var _tableName2=\"\";newQuery=newQuery.substring(_paramLabelEndIndex2+2,newQuery.length);if(_paramLabel2.indexOf(\"D$\")!==-1){_localParam2=_paramLabel2.substring(0,_paramLabel2.indexOf('D$'));_displayName2=_paramLabel2.substring(_paramLabel2.indexOf('D$')+2,_paramLabel2.indexOf('T$'));//tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\n_tableName2=_paramLabel2.substring(_paramLabel2.indexOf('T$')+2,_paramLabel2.length);}else{_localParam2=_paramLabel2.substring(0,_paramLabel2.indexOf('T$'));//tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\n_tableName2=_paramLabel2.substring(_paramLabel2.indexOf('T$')+2,_paramLabel2.length);}if(_localParam2.startsWith('d')||_localParam2.startsWith('D')){_paramMap.set(\"P$\"+_localParam2+\"$P\",{value:'DateTimePicker',lableName:_localParam2,//ID: param.length, \nDatetime:new Date(),textValue:'',TableName:_tableName2,DisplayParam:_displayName2,actuallableName:_localParam2.substring(1,_localParam2.length)});}else if(_localParam2==='slanguagetypecode'){_paramMap.set(\"P$\"+_localParam2+\"$P\",{value:'TextBox1',lableName:_localParam2,//ID: param.length, \ntextValue:_this.props.Login.userInfo.slanguagetypecode,TableName:_tableName2,DisplayParam:_displayName2,actuallableName:_localParam2.substring(1,_localParam2.length)});}else{_paramMap.set(\"P$\"+_localParam2+\"$P\",{value:'TextBox1',lableName:_localParam2,//ID: param.length, \ntextValue:'',TableName:_tableName2,DisplayParam:_displayName2,actuallableName:_localParam2.substring(1,_localParam2.length)});}}else{newQuery=newQuery.substring(_paramLabelEndIndex2+2,newQuery.length);_paramMap.set(\"<#\"+_paramLabel2+\"#>\",{lableName:_paramLabel2,value:'DateTimePicker',//ID: param.length, \nDatetime:new Date(),textValue:'',TableName:\"\",DisplayParam:\"\",actuallableName:_paramLabel2});}}}var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:\"Parameter for Results\",showExecute:true,showSave:true,showParam:true,showValidate:false,slideOperation:_this.props.Login.operation,slideResult:[],slideList:[],screenFlag:\"showQuery\",param:_paramMap// Dparam: Dparam, TBLName: TBLName\n}};_this.props.updateStore(updateInfo);}else{//query without parameters      \nvar _inputParam3={screenName:\"Results\",query:selectedRecord.ssqlquery.trim(),userInfo:_this.props.Login.userInfo,slideOperation:_this.props.Login.operation,screenFlag:\"showQuery\",data:{showExecute:false,showSave:false,showParam:true,showValidate:false,noSave:false,operation:\"view\",param:new Map(),screenName:\"Results\",slideOperation:_this.props.Login.operation,screenFlag:\"showQuery\"}};_this.props.executeUserQuery(_inputParam3);}}}}};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.resultStatus===\"Success\"){var operation=_this.props.Login.operation;var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;if(operation===\"update\"||operation===\"view\"&&_this.props.Login.slideOperation!==\"create\"){// edit\noperation=\"update\";postParam={inputListName:\"SQLQuery\",selectedObject:\"SelectedSQLQuery\",primaryKeyField:\"nsqlquerycode\"};var selectedRecord=_objectSpread({},_this.state.selectedRecord);delete selectedRecord.nformcode;inputData[\"sqlquery\"]=selectedRecord;_this.queryFieldList.map(function(item){return inputData[\"sqlquery\"][item]=_this.state.selectedRecord[item]?_this.state.selectedRecord[item]:\"\";});}else{//add               \ninputData[\"sqlquery\"]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};operation=\"create\";_this.queryFieldList.map(function(item){return inputData[\"sqlquery\"][item]=_this.state.selectedRecord[item];});}if(inputData[\"sqlquery\"].hasOwnProperty('esignpassword')){if(inputData[\"sqlquery\"]['esignpassword']===''){delete inputData[\"sqlquery\"]['esigncomments'];delete inputData[\"sqlquery\"]['esignpassword'];delete inputData[\"sqlquery\"]['agree'];}}inputData[\"sqlquery\"][\"ncharttypecode\"]=_this.state.selectedRecord[\"ncharttypecode\"]?_this.state.selectedRecord[\"ncharttypecode\"].value:\"-1\";inputData[\"sqlquery\"][\"nquerytypecode\"]=_this.props.Login.masterData.SelectedQueryType.nquerytypecode;///code removed\nvar inputParam={classUrl:\"sqlquery\",methodUrl:\"SQLQuery\",inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType,parentPopUpSize:\"lg\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_INAVLIDDATA\"}));}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.reloadData=function(){_this.searchRef.current.value=\"\";// const inputParam = {\n//     inputData: { \"userinfo\": this.props.Login.userInfo },\n//     classUrl: \"sqlquery\",\n//     methodUrl: \"SQLQuery\",\n//     displayName: \"IDS_SQLBUILDER\",\n//     userInfo: this.props.Login.userInfo\n// };\n// this.props.callService(inputParam);\nvar nquerytypecode=_this.props.Login.masterData.SelectedQueryType?_this.props.Login.masterData.SelectedQueryType.nquerytypecode:0;_this.props.comboChangeQueryType(nquerytypecode,_this.props.Login.masterData,_this.props.Login.userInfo);};var dataStateUserQuery={skip:0,take:10};_this.state={selectedRecord:{},error:\"\",// modalIsOpen: false,\nparameters:[],// objparam: [],\n// objDparam: [],\nqueryName:'',// queryResult: [],\nuserRoleControlRights:[],controlMap:new Map(),dataStateUserQuery:dataStateUserQuery,queryTypeName:'',selectedcombo:[],selectedTableType:[],moduleFormName:[],ntableTypeCode:-1,nFormCode:-1,queryType:[],tableType:[],chartList:[],skip:0,take:_this.props.Login.settings?_this.props.Login.settings[3]:25,//tableName : undefined,tableList:[]\noutputColumns:[],selectedTableList:[],tableColumnList:[],foreignTableColumnList:[],joinTableList:[],symbolsList:[],foreignTableList:[],count:0,foreignTableCount:[],selectedforeignTableList:[],filterColumnList:[],sqlQuery:false,// viewColumnList: [],\nswitchRecord:{},sidebarview:false};_this.searchRef=React.createRef();_this.filtersearchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();// this.dropItemRef = React.createRef(); \n_this.queryFieldList=['nquerytypecode','ssqlqueryname','ssqlquery','sscreenrecordquery','sscreenheader','svaluemember','sdisplaymember','ncharttypecode'];// this.queryList = [];\n_this.searchFieldList=[\"ssqlqueryname\",\"ssqlquery\",\"sscreenheader\",\"svaluemember\",\"sdisplaymember\",\"squerytypename\",\"schartname\"];return _this;}_createClass(SQLBuilder,[{key:\"render\",value:function render(){var _this2=this;var _this$props$Login=this.props.Login,masterData=_this$props$Login.masterData,userInfo=_this$props$Login.userInfo;var addId=this.state.controlMap.has(\"AddSQLQuery\")&&this.state.controlMap.get(\"AddSQLQuery\").ncontrolcode;var editId=this.state.controlMap.has(\"EditSQLQuery\")&&this.state.controlMap.get(\"EditSQLQuery\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteSQLQuery\")&&this.state.controlMap.get(\"DeleteSQLQuery\").ncontrolcode;var executeId=this.state.controlMap.has(\"ExecuteSQLQuery\")&&this.state.controlMap.get(\"ExecuteSQLQuery\").ncontrolcode;var filterParam={inputListName:\"SQLQuery\",selectedObject:\"SelectedSQLQuery\",primaryKeyField:\"nsqlquerycode\",fetchUrl:\"sqlquery/getSQLQuery\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};this.validationColumnList=[{\"idsName\":\"IDS_SQLQUERYNAME\",\"dataField\":\"ssqlqueryname\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_SQLQUERY\",\"dataField\":\"ssqlquery\",\"width\":\"200px\",\"mandatory\":true}// { \"idsName\": \"IDS_SCREENHEADER\", \"dataField\": \"sscreenheader\", \"width\": \"200px\",\"mandatory\": true }, \n// { \"idsName\": \"IDS_SVALUEMEMBER\", \"dataField\": \"svaluemember\", \"width\": \"200px\",\"mandatory\": true },\n// { \"idsName\": \"IDS_SDISPLAYMEMBER\", \"dataField\": \"sdisplaymember\", \"width\": \"200px\",\"mandatory\": true },\n// { \"idsName\": \"IDS_CHARTTYPE\", \"dataField\": \"ncharttypecode\", \"width\": \"200px\",\"mandatory\": true },\n];if(this.state.selectedcombo.nquerytypecode&&this.state.selectedcombo.nquerytypecode.value===2){this.validationColumnList=[{\"idsName\":\"IDS_SQLQUERYNAME\",\"dataField\":\"ssqlqueryname\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_SQLQUERY\",\"dataField\":\"ssqlquery\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_SCREENHEADER\",\"dataField\":\"sscreenheader\",\"width\":\"200px\",\"mandatory\":true}];}if(this.state.selectedcombo.nquerytypecode&&this.state.selectedcombo.nquerytypecode.value===5){this.validationColumnList=[{\"idsName\":\"IDS_SQLQUERYNAME\",\"dataField\":\"ssqlqueryname\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_SQLQUERY\",\"dataField\":\"ssqlquery\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_SVALUEMEMBER\",\"dataField\":\"svaluemember\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_SDISPLAYMEMBER\",\"dataField\":\"sdisplaymember\",\"width\":\"200px\",\"mandatory\":true}];}if(this.state.selectedcombo.nquerytypecode&&this.state.selectedcombo.nquerytypecode.value===1){this.validationColumnList=[{\"idsName\":\"IDS_SQLQUERYNAME\",\"dataField\":\"ssqlqueryname\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_SQLQUERY\",\"dataField\":\"ssqlquery\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_CHARTTYPE\",\"dataField\":\"ncharttypecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];}var mandatoryFields=[];this.validationColumnList.forEach(function(item){return item.mandatory===true?mandatoryFields.push(item):\"\";});var breadCrumbData=this.state.filterData||[];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},breadCrumbData.length>0?/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.state.sidebarview?'4':\"2\")},/*#__PURE__*/React.createElement(\"span\",{onClick:function onClick(){return _this2.setState({sidebarview:!_this2.state.sidebarview});},className:\"sidebar-view-btn\"},!this.state.sidebarview?/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-less-than\"}):/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-greater-than\"})),/*#__PURE__*/React.createElement(ListMaster,{masterData:this.props.Login.masterData,screenName:this.props.intl.formatMessage({id:\"IDS_SQLBUILDER\"}),masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.SQLQuery,getMasterDetail:function getMasterDetail(sqlQuery){return _this2.props.getSQLQueryDetail(sqlQuery,userInfo,masterData);},selectedMaster:this.props.Login.masterData.SelectedSQLQuery,primaryKeyField:\"nsqlquerycode\",mainField:\"ssqlqueryname\",firstField:\"squerytypename\",secondField:this.state.selectedcombo[\"nquerytypecode\"]&&this.state.selectedcombo[\"nquerytypecode\"].value===queryTypeFilter.LIMSDASHBOARDQUERY?\"schartname\":\"\",filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,openModal:function openModal(){return _this2.props.getSQLQueryComboService(\"\",\"create\",\"nsqlquerycode\",null,_this2.props.Login.masterData,_this2.props.Login.userInfo,_this2.props.Login.masterData.SelectedQueryType.nquerytypecode,//this.state.selectedcombo[\"nquerytypecode\"].value, \naddId);}//{() => this.props.addTest(\"create\", selectedTest, userInfo, addId, this.state.nfilterTestCategory)}\n,needAccordianFilter:false// skip={this.state.skip}\n// take={this.state.take}\n,handlePageChange:this.handlePageChange,showFilterIcon:true,showFilter:this.props.Login.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,showBuildQuery:false,builderData:this.getDatabaseTables,filterComponent:[{\"IDS_QUERYTYPEFILTER\":/*#__PURE__*/React.createElement(QueryTypeFilter,{queryType:this.state.queryType||[]//{this.props.Login.masterData.QueryType || []}\n,selectedRecord:this.state.selectedcombo||{},onComboChange:this.onComboChange,filterQueryType:this.props.Login.masterData.SelectedQueryType})}]})),/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.state.sidebarview?'8':\"10\")},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.SQLQuery&&this.props.Login.masterData.SQLQuery.length>0&&this.props.Login.masterData.SelectedSQLQuery&&Object.values(this.props.Login.masterData.SelectedSQLQuery).length>0?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedSQLQuery.ssqlqueryname),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined outline-secondary btn-sm ml-3\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:this.props.Login.masterData.SelectedSQLQuery.squerytypename}))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",name:\"editsqlqueryname\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,onClick:function onClick(){return _this2.getValidationForEdit(_this2.state.queryTypeName,\"update\",\"nsqlquerycode\",_this2.props.Login.masterData.SelectedSQLQuery.nsqlquerycode,_this2.props.Login.masterData,_this2.props.Login.userInfo,//this.state.selectedcombo[\"nquerytypecode\"].value, \n_this2.props.Login.masterData.SelectedQueryType.nquerytypecode,editId);}//    data-for=\"tooltip_list_wrap\"\n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",name:\"deletesqlqueryname\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"})//   data-for=\"tooltip_list_wrap\"\n,hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this2.ConfirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",name:\"executequery\",hidden:this.state.userRoleControlRights.indexOf(executeId)===-1,onClick:function onClick(){return _this2.executeQuery(\"SQLQuery\",_this2.props.Login.masterData.SelectedSQLQuery,\"execute\",executeId);}//    data-for=\"tooltip_list_wrap\"\n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EXECUTEQUERY\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTasks})))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,this.props.Login.masterData.SelectedSQLQuery.nquerytypecode===queryTypeFilter.LIMSALERTQUERY&&/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_SCREENHEADER\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSQLQuery.sscreenheader))),this.props.Login.masterData.SelectedSQLQuery.nquerytypecode===queryTypeFilter.LIMSFILTERQUERY&&/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_SVALUEMEMBER\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSQLQuery.svaluemember))),this.props.Login.masterData.SelectedSQLQuery.nquerytypecode===queryTypeFilter.LIMSFILTERQUERY&&/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_SDISPLAYMEMBER\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSQLQuery.sdisplaymember))),/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_SQLQUERY\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedSQLQuery.ssqlquery)))))):\"\"))))))),console.log(this.filtersearchRef),console.log(\"search\",this.searchRef),this.props.Login.openPortalModal&&/*#__PURE__*/React.createElement(PortalModalSlideout,{show:this.props.Login.openPortalModal,noSave:true,closeModal:this.closePortalModal,screenName:this.props.Login.screenName,addComponent:/*#__PURE__*/React.createElement(SqlBuilderNewDesign,{tableName:this.props.Login.tableName||[],tableList:this.props.Login.tableList||[],filtersearchRef:this.filtersearchRef})}),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal//size={this.props.Login.parentPopUpSize}\n,size:this.props.Login.loadEsign?\"lg\":\"xl\",operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,onExecuteClick:this.onExecuteClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,showExecute:this.props.Login.showExecute,showParam:this.props.Login.showParam,noSave:this.props.Login.noSave,showValidate:this.props.Login.showValidate,showQueryTool:this.props.Login.showQueryTool,queryGenrate:this.queryGenrate//graphView={this.props.Login.graphView}\n,showSave:this.props.Login.showSave,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.screenName===\"Parameter for Results\"?[]:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):(this.props.Login.screenName===\"Parameter for Results\"||this.props.Login.screenName===\"Results\")&&this.props.Login.showParam?/*#__PURE__*/React.createElement(AddParameter,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.handleText,onComboChange:this.upDateComboboxValue,onChange:this.handleDateChange//parameters={this.state.parameters || []}\n,parameters:this.state.param||new Map(),queryTypeCode:this.props.Login.masterData.SelectedQueryType.nquerytypecode// queryTypeCode={this.state.selectedcombo[\"nquerytypecode\"].value}\n,sscreenheader:this.props.Login.masterData.SelectedSQLQuery===null?\"\":this.props.Login.masterData.SelectedSQLQuery.sscreenheader,slideResult:this.props.Login.slideResult,slideList:this.props.Login.slideList,resultStatus:this.props.Login.resultStatus,dataStateUserQuery:this.state.dataStateUserQuery,userQueryDataStateChange:this.userQueryDataStateChange,controlMap:this.state.controlMap}):/*#__PURE__*/React.createElement(AddQuery,{selectedRecord:this.state.selectedRecord||{},selectedTableType:this.state.selectedTableType||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,chartList:this.state.chartList||[],tableList:this.props.Login.tableList||[],tableName:this.props.Login.tableName||[]//tableList={}\n,tableType:this.state.tableType||[],moduleFormName:this.state.moduleFormName||[],tableTypeCode:this.state.selectedTableType[\"ntabletypecode\"]?this.state.selectedTableType[\"ntabletypecode\"].value:0// onColumnNameDrop={this.onColumnNameDrop}\n,onDrop:this.onDrop.bind(this)//queryTypeCode={this.state.selectedcombo[\"nquerytypecode\"].value}\n,queryTypeCode:this.props.Login.masterData.SelectedQueryType.nquerytypecode})}),console.log(this.props.Login.openPortalModal));}},{key:\"clearSelectedRule\",value:function clearSelectedRule(selectedRecord,index){selectedRecord[\"sinputname_\"+index]&&delete selectedRecord[\"sinputname_\"+index];selectedRecord[\"ssymbolname_\"+index]&&delete selectedRecord[\"ssymbolname_\"+index];selectedRecord[\"snumericinput_\"+index]&&delete selectedRecord[\"snumericinput_\"+index];selectedRecord[\"columnname_\"+index]&&delete selectedRecord[\"columnname_\"+index];selectedRecord[\"snumericinputtwo_\"+index]&&delete selectedRecord[\"snumericinputtwo_\"+index];selectedRecord[\"dateinput_\"+index]&&delete selectedRecord[\"dateinput_\"+index];selectedRecord[\"dateinputtwo_\"+index]&&delete selectedRecord[\"dateinputtwo_\"+index];}},{key:\"getTablesName\",value:function getTablesName(selectedRecord){return function(dispatch){var url=\"sqlquery/getTablesFromSchema\";rsapi.post(url,{\"tabletypecode\":parseInt(selectedRecord[\"ntabletypecode\"].value),\"moduleformcode\":parseInt(selectedRecord[\"nformcode\"].value),\"userinfo\":this.props.Login.userInfo}).then(function(response){var tableName=undefined;var tableNameOnly=[];Object.values(response[1].data[0]).forEach(function(p){if(p.stable!==tableName){tableName=p.stable;tableNameOnly.push({tableName:tableName});}});dispatch({type:DEFAULT_RETURN,payload:{tableList:response[0].data[0]||[],tableName:tableNameOnly||[]}});//this.setState({ tableList: response[0].data[0] || [], tableName: tableNameOnly || []})\n}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}},{key:\"getModuleFormName\",value:function getModuleFormName(TableTypeCode){var _this3=this;var url=\"sqlquery/getModuleFormName\";rsapi.post(url,{\"tabletypecode\":parseInt(TableTypeCode),\"userinfo\":this.props.Login.userInfo}).then(function(response){_this3.setState({moduleFormName:response.data[0]});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}},{key:\"onDrop\",value:function onDrop(data){var selectedRecord=this.state.selectedRecord;var sqlquery=selectedRecord.ssqlquery?selectedRecord.ssqlquery:\"\";selectedRecord.ssqlquery=data.dragtable?\"\".concat(sqlquery,\" \").concat(data.dragtable):\"\".concat(sqlquery,\" \").concat(data.dragcolumn);this.setState({selectedRecord:selectedRecord});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this4=this;var _this$state=this.state,selectedRecord=_this$state.selectedRecord,dataStateUserQuery=_this$state.dataStateUserQuery,userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,filterData=_this$state.filterData,queryType=_this$state.queryType,chartList=_this$state.chartList,moduleFormName=_this$state.moduleFormName,tableType=_this$state.tableType,selectedTableType=_this$state.selectedTableType,param=_this$state.param,tableColumnList=_this$state.tableColumnList,selectedTableList=_this$state.selectedTableList,foreignTableCount=_this$state.foreignTableCount,foreignTableList=_this$state.foreignTableList,count=_this$state.count,sqlQuery=_this$state.sqlQuery;var updateState=false;// const masterData = this.props.Login.masterData;\nif(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){updateState=true;selectedRecord=this.props.Login.selectedRecord;}if(this.props.Login.sqlQuery!==previousProps.Login.sqlQuery){updateState=true;sqlQuery=this.props.Login.sqlQuery;}if(this.props.Login.tableColumnList!==previousProps.Login.tableColumnList){updateState=true;tableColumnList=this.props.Login.tableColumnList;}if(this.props.Login.slideResult!==previousProps.Login.slideResult){dataStateUserQuery={skip:0,take:10};updateState=true;}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRight=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRight.push(item.ncontrolcode);});}var controlMap1=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);// if (this.props.Login.masterData.QueryType !== previousProps.Login.masterData.QueryType) {\nvar queryTypeMap=constructOptionList(this.props.Login.masterData.QueryType||[],\"nquerytypecode\",\"squerytypename\",\"nsorter\",\"ascending\",false);var QueryTypeList=queryTypeMap.get(\"OptionList\");// const selectedcombo = {\n//     nquerytypecode: QueryTypeList.length > 0 ? {\n//         \"value\": QueryTypeList[0].item.nquerytypecode,\n//         \"label\": QueryTypeList[0].item.squerytypename\n//     } : this.state.selectedcombo[\"nquerytypecode\"]\n// }\n// }\nupdateState=true;userRoleControlRights=userRoleControlRight;controlMap=controlMap1;filterData=this.generateBreadCrumData();queryType=QueryTypeList;}else{filterData=this.generateBreadCrumData();if(this.props.Login.chartList!==previousProps.Login.chartList||this.props.Login.moduleFormName!==previousProps.Login.moduleFormName){var chartListMap=constructOptionList(this.props.Login.chartList||[],\"ncharttypecode\",\"schartname\",undefined,undefined,undefined);var chartTypeList=chartListMap.get(\"OptionList\");var moduleFormNameMap=constructOptionList(this.props.Login.moduleFormName||[],\"nformcode\",\"sdisplayname\",undefined,undefined,undefined);var moduleFormNameList=moduleFormNameMap.get(\"OptionList\");updateState=true;chartList=chartTypeList;moduleFormName=moduleFormNameList;}if(this.props.Login.masterData.QueryType!==previousProps.Login.masterData.QueryType){var _queryTypeMap=constructOptionList(this.props.Login.masterData.QueryType||[],\"nquerytypecode\",\"squerytypename\",\"nsorter\",\"ascending\",false);var _QueryTypeList=_queryTypeMap.get(\"OptionList\");// const selectedcombo = {\n//                         nquerytypecode: QueryTypeList.length > 0 ? {\n//                             \"value\": QueryTypeList[0].item.nquerytypecode,\n//                             \"label\": QueryTypeList[0].item.squerytypename\n//                         } : this.state.selectedcombo[\"nquerytypecode\"]\n//}\nupdateState=true;queryType=_QueryTypeList;//selectedcombo , \n}if(this.props.Login.tableType!==previousProps.Login.tableType){var tableTypeMap=constructOptionList(this.props.Login.tableType||[],\"ntabletypecode\",\"stabletype\",undefined,undefined,undefined);var tableTypeList=tableTypeMap.get(\"OptionList\");selectedTableType={ntabletypecode:tableTypeList.length>0?{\"value\":tableTypeList[0].item.ntabletypecode,//\"label\": tableTypeList[0].item.stabletype\n\"label\":this.props.intl.formatMessage({id:tableTypeList[0].item.sidstablename})}:this.state.selectedTableType[\"ntabletypecode\"]};updateState=true;tableTypeList=tableTypeList.map(function(item){item=_objectSpread(_objectSpread({},item),{},{\"label\":_this4.props.intl.formatMessage({id:item.item.sidstablename})});return item;});tableType=tableTypeList;}if(this.props.Login.masterData.SelectedQueryType!==previousProps.Login.masterData.SelectedQueryType){updateState=true;}if(this.props.Login.param!==previousProps.Login.param){updateState=true;param=this.props.Login.param;}}if(updateState){this.setState({selectedRecord:selectedRecord,dataStateUserQuery:dataStateUserQuery,userRoleControlRights:userRoleControlRights,controlMap:controlMap,filterData:filterData,queryType:queryType,chartList:chartList,moduleFormName:moduleFormName,tableType:tableType,selectedTableType:selectedTableType,param:param,tableColumnList:tableColumnList,selectedTableList:selectedTableList,foreignTableCount:foreignTableCount,foreignTableList:foreignTableList,count:count,sqlQuery:sqlQuery});}}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(){var breadCrumbData=[];if(this.props.Login.masterData&&this.props.Login.masterData.SelectedQueryType){breadCrumbData.push({\"label\":\"IDS_QUERYTYPE\",\"value\":this.props.Login.masterData.SelectedQueryType?this.props.Login.masterData.SelectedQueryType.squerytypename:\"\"//this.props.intl.formatMessage({ id: this.props.Login.masterData.SelectedQueryType.squerytypename}) : \"\"\n});}return breadCrumbData;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined,testData:{},parameterData:{},otherTestData:{},formulaData:{}}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;}}]);return SQLBuilder;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,filterColumnData:filterColumnData,validateEsignCredential:validateEsignCredential,getSQLQueryDetail:getSQLQueryDetail,getSQLQueryComboService:getSQLQueryComboService,comboChangeQueryType:comboChangeQueryType,executeUserQuery:executeUserQuery,comboColumnValues:comboColumnValues,getColumnNamesByTableName:getColumnNamesByTableName,getTablesName:getTablesName,getModuleFormName:getModuleFormName,getDatabaseTables:getDatabaseTables,executeQuery:executeQuery,getForeignTable:getForeignTable,getViewColumns:getViewColumns,getMasterData:getMasterData})(injectIntl(SQLBuilder));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dashboard/SqlBuilder.jsx"],"names":["React","Component","connect","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faTrashAlt","faPencilAlt","faTasks","faDatabase","toast","ListMaster","SlideOutModal","Esign","AddQuery","AddParameter","QueryTypeFilter","callService","crudMaster","validateEsignCredential","updateStore","getSQLQueryDetail","getSQLQueryComboService","filterColumnData","comboChangeQueryType","executeUserQuery","comboColumnValues","getColumnNamesByTableName","getTablesName","getModuleFormName","getDatabaseTables","executeQuery","getForeignTable","getViewColumns","getMasterData","DEFAULT_RETURN","transactionStatus","queryTypeFilter","tableType","ColumnType","constructOptionList","getControlMap","showEsign","ReadOnlyText","ContentPanel","rsapi","ConfirmMessage","Affix","BreadcrumbComponent","ListWrapper","PortalModalSlideout","BuildQuery","SqlBuilderNewDesign","SQLBuilder","props","sidebarExpandCollapse","setState","sidebarview","userQueryDataStateChange","event","dataStateUserQuery","dataState","queryGenrate","updateInfo","typeName","data","openPortalModal","openModal","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deleteRecord","Login","masterData","SelectedSQLQuery","handleFilterDateChange","dateName","dateValue","selectedRecord","state","Date","generateFilterQuery","onViewComboChange","comboData","fieldName","inputParam","sviewname","value","userinfo","userInfo","onRuleChange","index","clearSelectedRule","sqlQuery","oldselectedRecord","tableData","items","mastertablename","needmasterdata","nflag","valuemember","displaymember","optionId","columntype","COMBO","stablename","foriegntablename","scolumnname","sforeigncolumnname","TEXTINPUT","onMasterDataChange","addRule","type","addRuleList","length","arrayLength","viewColumnListByRule","viewColumnList","info","closePortalModal","count","onExecuteRule","sgeneratedquery","deleteRule","clearRule","resetRule","onSymbolChange","oldSelectedRecord","symbolType","onInputChange","inputValue","target","test","name","databaseCondition","displayCondition","orDisplayConditionArray","orConditionArray","forEach","symbolObject","current_button_and","current_button_or","next_button_and","next_button_or","inputname","symbolname","symbol","numericinput","columnLabel","label","columnValue","snumericinputtwo","columnName","undefined","dateinput","dateinputtwo","replacewith","indexOf","substr","push","tempValue","tempValue1","map","item","data1","isInputVisible","$or","onConditionClick","onQueryTypeOnclick","getValidationForEdit","screenName","operation","primaryKeyName","primaryKeyValue","queryTypeCode","ncontrolCode","post","then","response","confirmAlertForEdit","warn","catch","error","status","message","editId","queryTypeName","nsqlquerycode","SelectedQueryType","nquerytypecode","closeAlert","showConfirmAlertForEdit","openFilter","showFilter","closeFilter","onFilterSubmit","searchRef","current","handlePageChange","skip","take","onComboChange","selectedTableType","ALL","updateInfor","tableName","moduleFormName","selectedcombo","onEsignInputOnChange","checked","YES","NO","onInputOnChange","ACTIVE","DEACTIVE","onNumericInputChange","closeModal","loadEsign","showExecute","showParam","showValidate","showSave","slideOperation","parentPopUpSize","resultStatus","param","size","screenFlag","LIMSDASHBOARDQUERY","LIMSALERTQUERY","LIMSBARCODEQUERY","LIMSGENERALQUERY","upDateComboboxValue","i","Value","paramMap","Map","get","textValue","handleDateChange","date","Datetime","handleText","methodUrl","ssqlquery","toUpperCase","newQuery","paramLabelStartIndex","paramLabelEndIndex","paramLabel","substring","displayName","localParam","startsWith","set","lableName","TableName","DisplayParam","actuallableName","slanguagetypecode","slideResult","slideList","query","trim","noSave","postParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","classUrl","inputData","toLowerCase","userRoleControlRights","nformcode","screenData","onExecuteClick","tempQuery","paramFlag","entries","parameterMap","parameter","parameterDetail","paramVal","getFullYear","getMonth","toString","parseInt","getDate","replaceAll","onSaveClick","saveType","formRef","queryFieldList","nmastersitecode","hasOwnProperty","validateEsign","sreason","nreasoncode","spredefinedreason","password","reloadData","parameters","queryName","controlMap","ntableTypeCode","nFormCode","queryType","chartList","settings","outputColumns","selectedTableList","tableColumnList","foreignTableColumnList","joinTableList","symbolsList","foreignTableList","foreignTableCount","selectedforeignTableList","filterColumnList","switchRecord","createRef","filtersearchRef","searchFieldList","addId","has","ncontrolcode","executeId","filterParam","validationColumnList","mandatoryFields","mandatory","breadCrumbData","filterData","searchedData","SQLQuery","Object","values","ssqlqueryname","squerytypename","sscreenheader","LIMSFILTERQUERY","svaluemember","sdisplaymember","console","log","tableList","masterStatus","showQueryTool","onDrop","bind","dispatch","url","tableNameOnly","p","stable","payload","TableTypeCode","sqlquery","dragtable","dragcolumn","previousProps","updateState","userRoleControlRight","controlMap1","queryTypeMap","QueryType","QueryTypeList","generateBreadCrumData","chartListMap","chartTypeList","moduleFormNameMap","moduleFormNameList","tableTypeMap","tableTypeList","ntabletypecode","sidstablename","modalName","testData","parameterData","otherTestData","formulaData","errorCode","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faPencilAlt, faTasks, faDatabase } from '@fortawesome/free-solid-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport AddQuery from './AddQuery';\r\nimport AddParameter from './AddParameter';\r\nimport QueryTypeFilter from './QueryTypeFilter';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getSQLQueryDetail,\r\n    getSQLQueryComboService, filterColumnData, comboChangeQueryType, executeUserQuery,\r\n    comboColumnValues, getColumnNamesByTableName, getTablesName, getModuleFormName,\r\n    getDatabaseTables, executeQuery, getForeignTable, getViewColumns, getMasterData\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus, queryTypeFilter, tableType, ColumnType } from '../../components/Enumeration';\r\nimport { constructOptionList, getControlMap, showEsign } from '../../components/CommonScript';\r\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\r\nimport rsapi from '../../rsapi';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { Affix } from 'rsuite';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport PortalModalSlideout from '../../components/portal-modal/portal-modal-slideout';\r\nimport BuildQuery from './BuildQuery';\r\nimport SqlBuilderNewDesign from './SqlBuilderNewDesign.jsx'\r\n// import {validationData} from './QueryBuilderData';\r\n\r\n// const jsonSql = require('json-sql')({separatedValues: true});\r\n\r\nclass SQLBuilder extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const dataStateUserQuery = {\r\n            skip: 0,\r\n            take: 10,\r\n        };\r\n        this.state = ({\r\n            selectedRecord: {},\r\n            error: \"\",\r\n            // modalIsOpen: false,\r\n            parameters: [],\r\n            // objparam: [],\r\n            // objDparam: [],\r\n            queryName: '',\r\n            // queryResult: [],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            dataStateUserQuery: dataStateUserQuery,\r\n            queryTypeName: '',\r\n            selectedcombo: [],\r\n            selectedTableType: [],\r\n            moduleFormName: [],\r\n            ntableTypeCode: -1,\r\n            nFormCode: -1,\r\n            queryType: [],\r\n            tableType: [],\r\n            chartList: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings ?\r\n                this.props.Login.settings[3] : 25, //tableName : undefined,tableList:[]\r\n            outputColumns: [],\r\n            selectedTableList: [],\r\n            tableColumnList: [],\r\n            foreignTableColumnList: [],\r\n            joinTableList: [],\r\n            symbolsList: [],\r\n            foreignTableList: [],\r\n            count: 0,\r\n            foreignTableCount: [],\r\n            selectedforeignTableList: [],\r\n            filterColumnList: [],\r\n            sqlQuery: false,\r\n            // viewColumnList: [],\r\n            switchRecord: {},\r\n            sidebarview: false            \r\n        });\r\n        this.searchRef = React.createRef();\r\n        this.filtersearchRef= React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        // this.dropItemRef = React.createRef(); \r\n\r\n        this.queryFieldList = ['nquerytypecode', 'ssqlqueryname', 'ssqlquery',\r\n            'sscreenrecordquery', 'sscreenheader', 'svaluemember', 'sdisplaymember', 'ncharttypecode'];\r\n        // this.queryList = [];\r\n\r\n        this.searchFieldList = [\"ssqlqueryname\", \"ssqlquery\", \"sscreenheader\", \"svaluemember\", \"sdisplaymember\",\r\n            \"squerytypename\", \"schartname\"];            \r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    userQueryDataStateChange = (event) => {\r\n        this.setState({\r\n            dataStateUserQuery: event.dataState\r\n        });\r\n    }\r\n\r\n\r\n    queryGenrate=()=>{\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openPortalModal:true,openModal:false\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n    }\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(\"SQLQuery\", this.props.Login.masterData.SelectedSQLQuery, \"delete\", deleteId));\r\n    }\r\n\r\n\r\n    render() {\r\n        const { masterData, userInfo } = this.props.Login;\r\n        const addId = this.state.controlMap.has(\"AddSQLQuery\") && this.state.controlMap.get(\"AddSQLQuery\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditSQLQuery\") && this.state.controlMap.get(\"EditSQLQuery\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteSQLQuery\") && this.state.controlMap.get(\"DeleteSQLQuery\").ncontrolcode;\r\n        const executeId = this.state.controlMap.has(\"ExecuteSQLQuery\") && this.state.controlMap.get(\"ExecuteSQLQuery\").ncontrolcode;\r\n\r\n        const filterParam = {\r\n            inputListName: \"SQLQuery\", selectedObject: \"SelectedSQLQuery\", primaryKeyField: \"nsqlquerycode\",\r\n            fetchUrl: \"sqlquery/getSQLQuery\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n        };\r\n        this.validationColumnList = [\r\n            { \"idsName\": \"IDS_SQLQUERYNAME\", \"dataField\": \"ssqlqueryname\", \"width\": \"200px\", \"mandatory\": true },\r\n            { \"idsName\": \"IDS_SQLQUERY\", \"dataField\": \"ssqlquery\", \"width\": \"200px\", \"mandatory\": true },\r\n            // { \"idsName\": \"IDS_SCREENHEADER\", \"dataField\": \"sscreenheader\", \"width\": \"200px\",\"mandatory\": true }, \r\n            // { \"idsName\": \"IDS_SVALUEMEMBER\", \"dataField\": \"svaluemember\", \"width\": \"200px\",\"mandatory\": true },\r\n            // { \"idsName\": \"IDS_SDISPLAYMEMBER\", \"dataField\": \"sdisplaymember\", \"width\": \"200px\",\"mandatory\": true },\r\n            // { \"idsName\": \"IDS_CHARTTYPE\", \"dataField\": \"ncharttypecode\", \"width\": \"200px\",\"mandatory\": true },\r\n        ]\r\n        if (this.state.selectedcombo.nquerytypecode && this.state.selectedcombo.nquerytypecode.value === 2) {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_SQLQUERYNAME\", \"dataField\": \"ssqlqueryname\", \"width\": \"200px\", \"mandatory\": true },\r\n                { \"idsName\": \"IDS_SQLQUERY\", \"dataField\": \"ssqlquery\", \"width\": \"200px\", \"mandatory\": true },\r\n                { \"idsName\": \"IDS_SCREENHEADER\", \"dataField\": \"sscreenheader\", \"width\": \"200px\", \"mandatory\": true },\r\n            ]\r\n        }\r\n        if (this.state.selectedcombo.nquerytypecode && this.state.selectedcombo.nquerytypecode.value === 5) {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_SQLQUERYNAME\", \"dataField\": \"ssqlqueryname\", \"width\": \"200px\", \"mandatory\": true },\r\n                { \"idsName\": \"IDS_SQLQUERY\", \"dataField\": \"ssqlquery\", \"width\": \"200px\", \"mandatory\": true },\r\n                { \"idsName\": \"IDS_SVALUEMEMBER\", \"dataField\": \"svaluemember\", \"width\": \"200px\", \"mandatory\": true },\r\n                { \"idsName\": \"IDS_SDISPLAYMEMBER\", \"dataField\": \"sdisplaymember\", \"width\": \"200px\", \"mandatory\": true },\r\n            ]\r\n        }\r\n        if (this.state.selectedcombo.nquerytypecode && this.state.selectedcombo.nquerytypecode.value === 1) {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_SQLQUERYNAME\", \"dataField\": \"ssqlqueryname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_SQLQUERY\", \"dataField\": \"ssqlquery\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_CHARTTYPE\", \"dataField\": \"ncharttypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n            ]\r\n        }\r\n        const mandatoryFields = [];\r\n        this.validationColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n\r\n        const breadCrumbData = this.state.filterData || [];\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    {/* <div className=\"client-listing-wrap mtop-4\"> */}\r\n                    {/* Start of get display*/}\r\n                    <Row noGutters={true}>\r\n                        <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n                            <span onClick= {()=>this.setState({sidebarview:!this.state.sidebarview})} className='sidebar-view-btn'>\r\n                                {!this.state.sidebarview ?\r\n                                    <i class=\"fa fa-less-than\"></i> :\r\n                                    <i class=\"fa fa-greater-than\"></i> \r\n                                }\r\n                            </span>\r\n                            <ListMaster\r\n                                masterData={this.props.Login.masterData}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_SQLBUILDER\" })}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.SQLQuery}\r\n                                getMasterDetail={(sqlQuery) => this.props.getSQLQueryDetail(sqlQuery, userInfo, masterData)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedSQLQuery}\r\n                                primaryKeyField=\"nsqlquerycode\"\r\n                                mainField=\"ssqlqueryname\"\r\n                                firstField=\"squerytypename\"\r\n                                secondField={this.state.selectedcombo[\"nquerytypecode\"] && this.state.selectedcombo[\"nquerytypecode\"].value === queryTypeFilter.LIMSDASHBOARDQUERY ? \"schartname\" : \"\"}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getSQLQueryComboService(\"\", \"create\", \"nsqlquerycode\", null,\r\n                                    this.props.Login.masterData, this.props.Login.userInfo,\r\n                                    this.props.Login.masterData.SelectedQueryType.nquerytypecode,\r\n                                    //this.state.selectedcombo[\"nquerytypecode\"].value, \r\n                                    addId)} //{() => this.props.addTest(\"create\", selectedTest, userInfo, addId, this.state.nfilterTestCategory)}\r\n                                needAccordianFilter={false}\r\n                                // skip={this.state.skip}\r\n                                // take={this.state.take}\r\n                                handlePageChange={this.handlePageChange}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showBuildQuery={false}\r\n                                builderData={this.getDatabaseTables}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_QUERYTYPEFILTER\":\r\n                                            <QueryTypeFilter\r\n                                                queryType={this.state.queryType || []}//{this.props.Login.masterData.QueryType || []}\r\n                                                selectedRecord={this.state.selectedcombo || {}}\r\n                                                onComboChange={this.onComboChange}\r\n                                                filterQueryType={this.props.Login.masterData.SelectedQueryType}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                            {this.props.Login.masterData.SQLQuery && this.props.Login.masterData.SQLQuery.length > 0 && this.props.Login.masterData.SelectedSQLQuery && Object.values(this.props.Login.masterData.SelectedSQLQuery).length > 0 ?\r\n                                                <>\r\n                                                    <Card.Header>\r\n                                                        <Card.Title className=\"product-title-main\">\r\n                                                            {this.props.Login.masterData.SelectedSQLQuery.ssqlqueryname}\r\n                                                        </Card.Title>\r\n                                                        <Card.Subtitle>\r\n                                                            <div className=\"d-flex product-category\">\r\n                                                                <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                    <span className={`btn btn-outlined outline-secondary btn-sm ml-3`}>\r\n                                                                        <FormattedMessage id={this.props.Login.masterData.SelectedSQLQuery.squerytypename} />\r\n                                                                    </span>\r\n                                                                </h2>\r\n                                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                                                                <div className=\"d-inline\">\r\n                                                                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"editsqlqueryname\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                        onClick={() => this.getValidationForEdit(this.state.queryTypeName,\r\n                                                                            \"update\", \"nsqlquerycode\",\r\n                                                                            this.props.Login.masterData.SelectedSQLQuery.nsqlquerycode,\r\n                                                                            this.props.Login.masterData, this.props.Login.userInfo,\r\n                                                                            //this.state.selectedcombo[\"nquerytypecode\"].value, \r\n                                                                            this.props.Login.masterData.SelectedQueryType.nquerytypecode,\r\n                                                                            editId)}\r\n                                                                    //    data-for=\"tooltip_list_wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}>\r\n\r\n                                                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                                    </Nav.Link>\r\n                                                                    {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"buildquery\"\r\n                                                                        // hidden={this.state.userRoleControlRights.indexOf(executeId) === -1}\r\n                                                                        onClick={() => this.getDatabaseTables()}\r\n                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_BUILDQUERY\" })}>\r\n                                                                        <FontAwesomeIcon icon={faDatabase} />\r\n                                                                    </Nav.Link> */}\r\n                                                                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"deletesqlqueryname\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                     //   data-for=\"tooltip_list_wrap\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                        onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                    </Nav.Link>\r\n                                                                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"executequery\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(executeId) === -1}\r\n                                                                        onClick={() => this.executeQuery(\"SQLQuery\", this.props.Login.masterData.SelectedSQLQuery, \"execute\", executeId)}\r\n                                                                    //    data-for=\"tooltip_list_wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EXECUTEQUERY\" })}>\r\n                                                                        <FontAwesomeIcon icon={faTasks} />\r\n                                                                    </Nav.Link>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Card.Subtitle>\r\n                                                    </Card.Header>\r\n                                                    <Card.Body>\r\n                                                        <Row>\r\n                                                            {this.props.Login.masterData.SelectedSQLQuery.nquerytypecode === queryTypeFilter.LIMSALERTQUERY &&\r\n                                                                <Col md=\"6\">\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_SCREENHEADER\" })}</FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedSQLQuery.sscreenheader}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                            }\r\n                                                            {this.props.Login.masterData.SelectedSQLQuery.nquerytypecode === queryTypeFilter.LIMSFILTERQUERY &&\r\n                                                                <Col md=\"6\">\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_SVALUEMEMBER\" })}</FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedSQLQuery.svaluemember}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                            }\r\n                                                            {this.props.Login.masterData.SelectedSQLQuery.nquerytypecode === queryTypeFilter.LIMSFILTERQUERY &&\r\n                                                                <Col md=\"6\">\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_SDISPLAYMEMBER\" })}</FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedSQLQuery.sdisplaymember}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                            }\r\n                                                            <Col md=\"12\">\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_SQLQUERY\" })}</FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.SelectedSQLQuery.ssqlquery}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Card.Body>\r\n                                                </>\r\n                                                : \"\"\r\n                                            }\r\n                                        </Card>\r\n                                    </ContentPanel>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {/* </div> */}\r\n                {/* End of get display */}\r\n                {console.log(this.filtersearchRef)}\r\n                {console.log(\"search\",this.searchRef)}\r\n                {\r\n                    this.props.Login.openPortalModal &&\r\n                    <PortalModalSlideout\r\n                        show={this.props.Login.openPortalModal}\r\n                        noSave={true}\r\n                        closeModal={this.closePortalModal}\r\n                        screenName={this.props.Login.screenName}\r\n                        addComponent={\r\n                            <SqlBuilderNewDesign\r\n                            tableName={this.props.Login.tableName || []}\r\n                            tableList={this.props.Login.tableList||[]}\r\n                            filtersearchRef={this.filtersearchRef}\r\n                            />\r\n                        }\r\n                    />\r\n                }\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        //size={this.props.Login.parentPopUpSize}\r\n                        size={this.props.Login.loadEsign ? \"lg\" : \"xl\"}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        onExecuteClick={this.onExecuteClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        showExecute={this.props.Login.showExecute}\r\n                        showParam={this.props.Login.showParam}\r\n                        noSave={this.props.Login.noSave}\r\n                        showValidate={this.props.Login.showValidate}\r\n                        showQueryTool={this.props.Login.showQueryTool}\r\n                        queryGenrate={this.queryGenrate}\r\n                        //graphView={this.props.Login.graphView}\r\n                        showSave={this.props.Login.showSave}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenName === \"Parameter for Results\" ? [] : mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : (this.props.Login.screenName === \"Parameter for Results\" || this.props.Login.screenName === \"Results\") && this.props.Login.showParam ?\r\n                                <AddParameter\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.handleText}\r\n                                    onComboChange={this.upDateComboboxValue}\r\n                                    onChange={this.handleDateChange}\r\n                                    //parameters={this.state.parameters || []}\r\n                                    parameters={this.state.param || new Map()}\r\n                                    queryTypeCode={this.props.Login.masterData.SelectedQueryType.nquerytypecode}\r\n                                    // queryTypeCode={this.state.selectedcombo[\"nquerytypecode\"].value}\r\n                                    sscreenheader={this.props.Login.masterData.SelectedSQLQuery === null ? \"\" : this.props.Login.masterData.SelectedSQLQuery.sscreenheader}\r\n                                    slideResult={this.props.Login.slideResult}\r\n                                    slideList={this.props.Login.slideList}\r\n                                    resultStatus={this.props.Login.resultStatus}\r\n                                    dataStateUserQuery={this.state.dataStateUserQuery}\r\n                                    userQueryDataStateChange={this.userQueryDataStateChange}\r\n                                    controlMap={this.state.controlMap}\r\n                                />\r\n\r\n                                :\r\n                                <AddQuery\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    selectedTableType={this.state.selectedTableType || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    chartList={this.state.chartList || []}\r\n                                    tableList={this.props.Login.tableList || []}\r\n                                    tableName={this.props.Login.tableName || []}\r\n                                    //tableList={}\r\n                                    tableType={this.state.tableType || []}\r\n                                    moduleFormName={this.state.moduleFormName || []}\r\n                                    tableTypeCode={this.state.selectedTableType[\"ntabletypecode\"] ? this.state.selectedTableType[\"ntabletypecode\"].value : 0}\r\n                                    // onColumnNameDrop={this.onColumnNameDrop}\r\n                                    onDrop={this.onDrop.bind(this)}\r\n                                    //queryTypeCode={this.state.selectedcombo[\"nquerytypecode\"].value}\r\n                                    queryTypeCode={this.props.Login.masterData.SelectedQueryType.nquerytypecode}\r\n                                />\r\n                        }\r\n\r\n                    />\r\n                }\r\n{console.log(this.props.Login.openPortalModal)}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    onViewComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {}; \r\n        selectedRecord[fieldName] = comboData;\r\n        const inputParam = {\r\n            sviewname: comboData.value,\r\n            selectedRecord,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.getViewColumns(inputParam);\r\n    }\r\n\r\n    onRuleChange = (comboData, fieldName, index) => {\r\n        const { selectedRecord } = this.state;\r\n        this.clearSelectedRule(selectedRecord, index);\r\n        const sqlQuery = this.props.Login.sqlQuery;\r\n        const oldselectedRecord = selectedRecord;\r\n        selectedRecord[fieldName] = comboData;\r\n        const tableData = comboData.items;\r\n        const mastertablename = tableData.mastertablename;    \r\n\r\n        if(comboData.items.needmasterdata && mastertablename) {\r\n            const inputParam = {\r\n                userinfo: this.props.Login.userInfo,\r\n                data: {\r\n                    nflag: 2,\r\n                    mastertablename,\r\n                    valuemember: tableData.valuemember,\r\n                    displaymember: tableData.displaymember,\r\n                },\r\n                selectedRecord, \r\n                index,\r\n                optionId: tableData.valuemember\r\n            };\r\n            this.props.getMasterData(inputParam);\r\n        } else if(comboData.items && comboData.items.columntype === ColumnType.COMBO) {\r\n            if(sqlQuery) {\r\n                const inputParam = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    stablename: comboData.items.foriegntablename,\r\n                    scolumnname: comboData.value,\r\n                    selectedRecord, \r\n                    index\r\n                };\r\n                this.props.getForeignTable(inputParam, 'column');\r\n            } else {\r\n                selectedRecord[`${comboData.items.sforeigncolumnname}_${index}`] = \"\";\r\n                const inputParam = {\r\n                    data: { ...comboData.items, nflag: 1 },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    selectedRecord,\r\n                    index,\r\n                    optionId: comboData.items.sforeigncolumnname\r\n                };\r\n                this.props.getMasterData(inputParam);\r\n            }\r\n        } else if(comboData.items && comboData.items.columntype === ColumnType.TEXTINPUT \r\n            && oldselectedRecord[fieldName].items.columntype !== ColumnType.TEXTINPUT ) {\r\n            selectedRecord[\"sinputname_\"+index] = \"\";\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n    onMasterDataChange = (comboData, fieldName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[fieldName] = comboData;\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    addRule = (type) => {\r\n        const { selectedRecord } = this.state; \r\n        if(type === \"sql\") {\r\n            let addRuleList = this.props.Login.addRuleList || [];\r\n            if(addRuleList.length > 0) {\r\n                const arrayLength = addRuleList.length;\r\n                addRuleList[arrayLength] = arrayLength;\r\n                selectedRecord[\"button_and_\"+arrayLength] = true;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        addRuleList, \r\n                        selectedRecord\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                addRuleList[0] = 0;\r\n                this.props.getDatabaseTables(this.props.Login.userInfo, this.props.Login.sqlQuery, {addRuleList, selectedRecord: {}});\r\n            }\r\n        } else {\r\n            if(selectedRecord[\"sviewname\"]) {\r\n                const viewColumnListByRule = this.props.Login.viewColumnListByRule || [];\r\n                const addRuleList = this.props.Login.addRuleList || [];\r\n                const arrayLength = addRuleList.length;\r\n                addRuleList[arrayLength] = arrayLength;\r\n                viewColumnListByRule[arrayLength] = this.props.Login.viewColumnList;\r\n                if(arrayLength !== 0) {\r\n                    selectedRecord[\"button_and_\"+arrayLength] = true;\r\n                }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        addRuleList, \r\n                        viewColumnListByRule, \r\n                        selectedRecord\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTVIEW\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    getDatabaseTables = () => {\r\n        const sqlQuery = false;\r\n        this.props.getDatabaseTables(this.props.Login.userInfo, sqlQuery, {addRuleList: []});\r\n    }\r\n\r\n    closePortalModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openPortalModal: false,openModal:true, addRuleList: [], count: 0\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onExecuteRule = () => {\r\n        const { selectedRecord } = this.state;\r\n        if(selectedRecord[\"sgeneratedquery\"]) {\r\n            const inputParam = {\r\n                sgeneratedquery: selectedRecord[\"sgeneratedquery\"],\r\n                selectedRecord,\r\n                userInfo: this.props.Login.userInfo\r\n            }\r\n            this.props.executeQuery(inputParam);\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_QUERYNOTAVAILABLE\" }));\r\n        }       \r\n    }\r\n\r\n    deleteRule = (index) => {\r\n        let addRuleList = this.props.Login.addRuleList;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        addRuleList[index] = -1;\r\n        selectedRecord[`button_and_${index}`] && delete selectedRecord[`button_and_${index}`];\r\n        selectedRecord[`button_or_${index}`] && delete selectedRecord[`button_or_${index}`];\r\n        this.clearSelectedRule(selectedRecord, index);\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { addRuleList, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    clearSelectedRule(selectedRecord, index) {\r\n        selectedRecord[\"sinputname_\"+index] && delete selectedRecord[\"sinputname_\"+index];\r\n        selectedRecord[\"ssymbolname_\"+index] && delete selectedRecord[\"ssymbolname_\"+index];\r\n        selectedRecord[\"snumericinput_\"+index] && delete selectedRecord[\"snumericinput_\"+index];\r\n        selectedRecord[\"columnname_\"+index] && delete selectedRecord[\"columnname_\"+index];\r\n        selectedRecord[\"snumericinputtwo_\"+index] && delete selectedRecord[\"snumericinputtwo_\"+index];\r\n        selectedRecord[\"dateinput_\"+index] && delete selectedRecord[\"dateinput_\"+index];\r\n        selectedRecord[\"dateinputtwo_\"+index] && delete selectedRecord[\"dateinputtwo_\"+index];\r\n    }\r\n\r\n    clearRule = () => {\r\n        const sviewname = this.state.selectedRecord.sviewname || \"\";\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { addRuleList: [], selectedRecord: { sviewname }, sqlQuery: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    resetRule = () => {\r\n        const sviewname = this.state.selectedRecord.sviewname || \"\";\r\n        this.setState({ selectedRecord: { sviewname } });\r\n    }\r\n    \r\n    onSymbolChange = (comboData, fieldName, index) => {\r\n        const { selectedRecord } = this.state;\r\n        const oldSelectedRecord = selectedRecord[fieldName] || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        const items = selectedRecord[\"columnname_\"+index].items;\r\n        selectedRecord[\"columnname_\"+index][\"items\"][\"needmasterdata\"] = items.needmasterdata? comboData.items.needmasterdata: false;\r\n        if(comboData.items.symbolType === 2 || comboData.items.symbolType === 3) {\r\n            selectedRecord[items[\"valuemember\"]+\"_\"+index] && delete selectedRecord[items[\"valuemember\"]+\"_\"+index];\r\n            selectedRecord[items[\"foreigncolumnname\"]+\"_\"+index] && delete selectedRecord[items[\"foreigncolumnname\"]+\"_\"+index];\r\n            selectedRecord[\"sinputname_\"+index] && delete selectedRecord[\"sinputname_\"+index];\r\n        } else if(comboData.items.symbolType === 5 && oldSelectedRecord.items && oldSelectedRecord.items.symbolType !== 5) {\r\n            selectedRecord[\"snumericinput_\"+index] && delete selectedRecord[\"snumericinput_\"+index];\r\n            selectedRecord[\"snumericinputtwo_\"+index] && delete selectedRecord[\"snumericinputtwo_\"+index];\r\n        } else if((comboData.items.symbolType === 6 && oldSelectedRecord.items && oldSelectedRecord.items.symbolType === 1)\r\n            || (comboData.items.symbolType === 1 && oldSelectedRecord.items && oldSelectedRecord.items.symbolType === 6)){\r\n            selectedRecord[`${items.sforeigncolumnname}_${index}`] && delete selectedRecord[`${items.sforeigncolumnname}_${index}`];\r\n            selectedRecord[`${items.valuemember}_${index}`] && delete selectedRecord[`${items.valuemember}_${index}`];\r\n        } else {\r\n           \r\n        }\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    // addJoinTable = (index) => {\r\n    //     const { foreignTableCount, foreignTableList } = this.state;\r\n    //     if(foreignTableList.length > 0) {\r\n    //         const tempCount = foreignTableCount[index]? foreignTableCount[index]: 1;\r\n    //         foreignTableCount[index] = tempCount + 1;\r\n    //         this.setState({ foreignTableCount });\r\n    //     }\r\n    // }\r\n\r\n    // onForeignTableChange = (comboData, fieldName, index) => {\r\n    //     const { selectedRecord, selectedforeignTableList, foreignTableColumnList } = this.state;\r\n    //     selectedforeignTableList[index] = {\r\n    //         \"tablename\": comboData.value,\r\n    //         \"tablevalue\": `\"${comboData.value}\".\"${comboData.items.columnname}\"`\r\n    //     };\r\n    //     selectedRecord[fieldName] = comboData;\r\n    //     // let foreignTableColumnList = [];\r\n    //     foreignTableColumnList[index] = this.props.Login.allTableColumnList.filter(x => x.tablename === comboData.value);\r\n    //     selectedRecord[fieldName] = comboData;\r\n    //     selectedRecord[\"foreigncolumnname\"] = [];\r\n    //     this.setState({ selectedRecord, selectedforeignTableList, foreignTableColumnList });\r\n    // }\r\n\r\n    onInputChange = (event, type) => {\r\n        let selectedRecord = this.state.selectedRecord;       \r\n        if(type === 2) {\r\n            const inputValue = event.target.value;\r\n            if (/^-?\\d*?\\.?\\d*?$/.test(inputValue) || inputValue === \"\") {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    generateFilterQuery = (selectedRecord) => {\r\n        const addRuleList = this.props.Login.addRuleList;\r\n      //  jsonSql.setDialect('mssql');\r\n        let databaseCondition = [];\r\n        let displayCondition = [];\r\n        if(addRuleList.length > 0) {\r\n            let orDisplayConditionArray = [];\r\n            let orConditionArray = [];\r\n            addRuleList.forEach(index => {\r\n                let symbolObject = {};\r\n                if(selectedRecord[\"columnname_\"+index]) {\r\n                    symbolObject = selectedRecord[\"ssymbolname_\"+index].items || {};\r\n                \r\n                    const current_button_and = selectedRecord[`button_and_${index}`];\r\n                    const current_button_or = selectedRecord[`button_or_${index}`];\r\n                    const next_button_and = selectedRecord[`button_and_${index+1}`];\r\n                    const next_button_or = selectedRecord[`button_or_${index+1}`]? selectedRecord[`button_or_${index+1}`]:false;\r\n\r\n                    let inputname = selectedRecord[\"sinputname_\"+index];\r\n                    const symbolname = symbolObject.symbol;\r\n                    let numericinput = selectedRecord[\"snumericinput_\"+index];\r\n                    const columnLabel = selectedRecord[\"columnname_\"+index].label;\r\n                    const columnValue = selectedRecord[\"columnname_\"+index].value;\r\n                    const snumericinputtwo = selectedRecord[\"snumericinputtwo_\"+index];\r\n                    let columnName = undefined;\r\n                    const needmasterdata = selectedRecord[\"columnname_\"+index].items.needmasterdata? \r\n                        selectedRecord[\"columnname_\"+index].items.needmasterdata: false;\r\n\r\n                    if(selectedRecord[\"columnname_\"+index].items.needmasterdata) {\r\n                        columnName = selectedRecord[\"columnname_\"+index].items.valuemember+\"_\"+index;\r\n                    } else if(selectedRecord[\"columnname_\"+index].items.sforeigncolumnname) {\r\n                        columnName = selectedRecord[\"columnname_\"+index].items.sforeigncolumnname+\"_\"+index;\r\n                    }\r\n                    const dateinput = selectedRecord[\"dateinput_\"+index];\r\n                    const dateinputtwo = selectedRecord[\"dateinputtwo_\"+index];\r\n\r\n                    if(current_button_or || next_button_or || (current_button_and && next_button_or)) {\r\n                        if(symbolObject && inputname) {\r\n                            if(symbolObject.symbolType === 4) {\r\n                                const index = symbolObject.replacewith.indexOf('_'); \r\n                                inputname = symbolObject.replacewith.substr(0, index) + inputname + symbolObject.replacewith.substr(index+1);\r\n                                orConditionArray.push({[columnValue]: { [symbolname]: inputname} });\r\n                                orDisplayConditionArray.push({[columnLabel]: { [symbolname]: inputname} });\r\n                            } else {\r\n                                orConditionArray.push({[columnValue]: { [symbolname]: inputname} });\r\n                                orDisplayConditionArray.push({[columnLabel]: { [symbolname]: inputname} });\r\n                            }\r\n                        } else if(symbolObject && numericinput && symbolObject.symbolType !== 5) {\r\n                            orConditionArray.push({[columnValue]: { [symbolname]: numericinput} });\r\n                            orDisplayConditionArray.push({[columnLabel]: { [symbolname]: numericinput} });\r\n                        } else if(symbolObject && symbolObject.symbolType === 2\r\n                            || symbolObject && symbolObject.symbolType === 3) {\r\n                            orConditionArray.push({[columnValue]: { [symbolname]: ''} });\r\n                            orDisplayConditionArray.push({[columnLabel]: { [symbolname]: ''} });\r\n                        } \r\n                        else if(symbolObject && numericinput && snumericinputtwo && symbolObject.symbolType === 5) {\r\n                            if(symbolObject.symbol === \"\") {\r\n                                const tempValue =  [{[columnValue]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: snumericinputtwo} }];\r\n                                const tempValue1 =  [{ [columnLabel]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: snumericinputtwo} }];\r\n                                orConditionArray.push(tempValue);\r\n                                orDisplayConditionArray.push(tempValue1);\r\n                            } else {\r\n                                const tempValue =  [ \r\n                                    {[symbolObject.symbol]: [{[columnValue]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: snumericinputtwo} }]}\r\n                                ];\r\n                                const tempValue1 =  [ \r\n                                    {[symbolObject.symbol]: [{ [columnLabel]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: snumericinputtwo} }]}\r\n                                ];\r\n                                orConditionArray.push(tempValue);\r\n                                orDisplayConditionArray.push(tempValue1);\r\n                            }\r\n                        } else if(symbolObject && symbolObject.symbolType === 6 && columnName && selectedRecord[columnName]) {\r\n                            // if(typeof selectedRecord[columnName] === \"object\") {\r\n                            //     orConditionArray.push({[columnValue]: { [symbolname]: [selectedRecord[columnName].value]} });\r\n                            //     orDisplayConditionArray.push({[columnLabel]: { [symbolname]: [selectedRecord[columnName].label]} });\r\n                            // } else {\r\n                                const data = selectedRecord[columnName] && selectedRecord[columnName].map(item=>{return item.value}) || [];\r\n                                const data1 = selectedRecord[columnName] && selectedRecord[columnName].map(item=>{return item.label}) || [];\r\n                                if(data.length > 0) {\r\n                                    if(needmasterdata) {\r\n                                        orConditionArray.push({[selectedRecord[\"columnname_\"+index].items.valuemember]: {[symbolname]: data}});\r\n                                    } else {\r\n                                        orConditionArray.push({[columnValue]: {[symbolname]: data}});\r\n                                    }\r\n                                }\r\n                                if(data1.length > 0) {\r\n                                    orDisplayConditionArray.push({[columnLabel]: {[symbolname]: data1}});\r\n                                }\r\n                            // }\r\n                        } else if(symbolObject && columnName && symbolObject.isInputVisible && selectedRecord[columnName]) {\r\n                            if(needmasterdata) {\r\n                                orConditionArray.push({[selectedRecord[\"columnname_\"+index].items.valuemember]: { [symbolname]: selectedRecord[columnName].value} });\r\n                                orDisplayConditionArray.push({[columnLabel]: { [symbolname]: selectedRecord[columnName].label} });\r\n                            } else {\r\n                                orConditionArray.push({[columnValue]: { [symbolname]: selectedRecord[columnName].value} });\r\n                                orDisplayConditionArray.push({[columnLabel]: { [symbolname]: selectedRecord[columnName].label} });\r\n                            }\r\n                        }  else if(symbolObject && dateinput && symbolObject.symbolType !== 5) {\r\n                            orConditionArray.push({[columnValue]: { [symbolname]: dateinput } });\r\n                            orDisplayConditionArray.push({[columnLabel]: { [symbolname]: dateinput } });\r\n                        } else if(symbolObject && dateinput && dateinputtwo && symbolObject.symbolType === 5) {\r\n                            if(symbolObject.symbol === \"\") {\r\n                                const tempValue = [{[columnValue]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: dateinputtwo} }];\r\n                                const tempValue1 =  [{ [columnLabel]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: dateinputtwo} }];\r\n                                orConditionArray.push(tempValue);\r\n                                orDisplayConditionArray.push(tempValue1);\r\n                            } else {\r\n                                const tempValue =  [ \r\n                                    {[symbolObject.symbol]: [{[columnValue]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: dateinputtwo} }]}\r\n                                ];\r\n                                const tempValue1 =  [ \r\n                                    {[symbolObject.symbol]: [{ [columnLabel]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: dateinputtwo} }]}\r\n                                ];\r\n                                orConditionArray.push(tempValue);\r\n                                orDisplayConditionArray.push(tempValue1);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if(symbolObject && inputname) {\r\n                            if(symbolObject.symbolType === 4) {\r\n                                const index = symbolObject.replacewith.indexOf('_'); \r\n                                inputname = symbolObject.replacewith.substr(0, index) + inputname + symbolObject.replacewith.substr(index+1);\r\n                                databaseCondition.push({[columnValue]: { [symbolname]: inputname} });\r\n                                displayCondition.push({[columnLabel]: { [symbolname]: inputname} });\r\n                            } else {\r\n                                databaseCondition.push({[columnValue]: { [symbolname]: inputname} });\r\n                                displayCondition.push({[columnLabel]: { [symbolname]: inputname} });\r\n                            }\r\n                        } else if(symbolObject && numericinput && symbolObject.symbolType !== 5) {\r\n                            databaseCondition.push({[columnValue]: { [symbolname]: numericinput} });\r\n                            displayCondition.push({[columnLabel]: { [symbolname]: numericinput} });\r\n                        } else if(symbolObject && symbolObject.symbolType === 2\r\n                            || symbolObject && symbolObject.symbolType === 3) {\r\n                            databaseCondition.push({[columnValue]: { [symbolname]: ''} });\r\n                            displayCondition.push({[columnLabel]: { [symbolname]: ''} });\r\n                        } else if(symbolObject && numericinput && snumericinputtwo && symbolObject.symbolType === 5) {\r\n                            if(symbolObject.symbol === \"\") {\r\n                                const tempValue = [{[columnValue]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: snumericinputtwo} }];\r\n                                const tempValue1 =  [{ [columnLabel]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: snumericinputtwo} }];\r\n                                databaseCondition.push(tempValue);\r\n                                displayCondition.push(tempValue1);\r\n                            } else {\r\n                                const tempValue =  [ \r\n                                    {[symbolObject.symbol]: [{[columnValue]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: snumericinputtwo} }]}\r\n                                ];\r\n                                const tempValue1 =  [ \r\n                                    {[symbolObject.symbol]: [{ [columnLabel]: {[symbolObject.replacewith[0]]: +numericinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: snumericinputtwo} }]}\r\n                                ];\r\n                                databaseCondition.push(tempValue);\r\n                                displayCondition.push(tempValue1);\r\n                            }\r\n                        } else if(symbolObject && symbolObject.symbolType === 6 && columnName && selectedRecord[columnName]) {\r\n                            // if(typeof selectedRecord[columnName] === \"object\") {\r\n                            //     databaseCondition.push({[columnValue]: { [symbolname]: [selectedRecord[columnName].value]} });\r\n                            //     displayCondition.push({[columnLabel]: { [symbolname]: [selectedRecord[columnName].label]} });\r\n                            // } else {\r\n                                const data = selectedRecord[columnName] && selectedRecord[columnName].map(item=>{return item.value}) || [];\r\n                                const data1 = selectedRecord[columnName] && selectedRecord[columnName].map(item=>{return item.label}) || [];\r\n                                if(data.length > 0) {\r\n                                    if(needmasterdata) {\r\n                                        databaseCondition.push({[selectedRecord[\"columnname_\"+index].items.valuemember]: {[symbolname]: data}});\r\n                                    } else {\r\n                                        databaseCondition.push({[columnValue]: {[symbolname]: data}});\r\n                                    }\r\n                                }\r\n                                if(data1.length > 0) {\r\n                                    displayCondition.push({[columnLabel]: {[symbolname]: data1}});\r\n                                }\r\n                            // }\r\n                        } else if(symbolObject && columnName && symbolObject.isInputVisible && selectedRecord[columnName]) {\r\n                            if(needmasterdata) {\r\n                                databaseCondition.push({[selectedRecord[\"columnname_\"+index].items.valuemember]: { [symbolname]: selectedRecord[columnName].value} });\r\n                                displayCondition.push({[columnLabel]: { [symbolname]: selectedRecord[columnName].label} });\r\n                            } else {\r\n                                databaseCondition.push({[columnValue]: { [symbolname]: selectedRecord[columnName].value} });\r\n                                displayCondition.push({[columnLabel]: { [symbolname]: selectedRecord[columnName].label} });\r\n                            }\r\n                        } else if(symbolObject && dateinput && symbolObject.symbolType !== 5) {\r\n                            databaseCondition.push({[columnValue]: { [symbolname]: dateinput } });\r\n                            displayCondition.push({[columnLabel]: { [symbolname]: dateinput } });\r\n                        } else if(symbolObject && dateinput && dateinputtwo && symbolObject.symbolType === 5) {\r\n                            if(symbolObject.symbol === \"\") {\r\n                                const tempValue = [{[columnValue]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: dateinputtwo} }];\r\n                                const tempValue1 =  [{ [columnLabel]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: dateinputtwo} }];\r\n                                databaseCondition.push(tempValue);\r\n                                displayCondition.push(tempValue1);\r\n                            } else {\r\n                                const tempValue =  [ \r\n                                    {[symbolObject.symbol]: [{[columnValue]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                    { [columnValue]: {[symbolObject.replacewith[1]]: dateinputtwo} }]}\r\n                                ];\r\n                                const tempValue1 =  [ \r\n                                    {[symbolObject.symbol]: [{ [columnLabel]: {[symbolObject.replacewith[0]]: dateinput} }, \r\n                                        { [columnLabel]: {[symbolObject.replacewith[1]]: dateinputtwo} }]}\r\n                                ];\r\n                                databaseCondition.push(tempValue);\r\n                                displayCondition.push(tempValue1);\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n\r\n                    if(current_button_or \r\n                        && (next_button_and || typeof next_button_and === 'undefined') \r\n                        || typeof next_button_or === 'undefined') {\r\n                        if(orConditionArray.length > 0) {\r\n                            databaseCondition.push({$or: orConditionArray});\r\n                            orConditionArray = [];\r\n                        } \r\n                        if(orDisplayConditionArray.length > 0) {\r\n                            displayCondition.push({$or: orDisplayConditionArray});\r\n                            orDisplayConditionArray = [];\r\n                        }\r\n                    }\r\n\r\n                    if(this.props.Login.sqlQuery) {\r\n                        // const databaseSQLQuery = jsonSql.build({\r\n                        //     type: 'select',\r\n                        //     table: selectedRecord[\"stablename_0\"].value,\r\n                        //     condition: databaseCondition\r\n                        // });\r\n                    //     const displaySQLQuery = jsonSql.build({\r\n                    //         type: 'select',\r\n                    //         table: selectedRecord[\"stablename_0\"].label,\r\n                    //         condition: displayCondition\r\n                    //     });\r\n                    //     selectedRecord[\"sgeneratedquery\"] = databaseSQLQuery.query;\r\n                    //     selectedRecord[\"sdisplayquery\"] = displaySQLQuery.query;\r\n                    // } else {\r\n                    //     const databaseSQLQuery = jsonSql.build({\r\n                    //         type: 'select',\r\n                    //         table: selectedRecord[\"sviewname\"].value,\r\n                    //         condition: databaseCondition\r\n                    //     });\r\n                    //     const displaySQLQuery = jsonSql.build({\r\n                    //         type: 'select',\r\n                    //         table: selectedRecord[\"sviewname\"].label,\r\n                    //         condition: displayCondition\r\n                    //     });\r\n                        // jsonSql = jsonSql.setSeparatedValues(true);\r\n                        // selectedRecord[\"sgeneratedquery\"] = databaseSQLQuery.query;\r\n                        // selectedRecord[\"sdisplayquery\"] = displaySQLQuery.query;\r\n                    }                    \r\n                    this.setState({ selectedRecord });\r\n                } else {\r\n\r\n                }\r\n            });\r\n        }\r\n       \r\n    }\r\n    \r\n    onConditionClick = (fieldName, index) => {\r\n        let { selectedRecord } = this.state;\r\n        if(fieldName === `button_and_${index}`) {\r\n            selectedRecord[fieldName] = selectedRecord[fieldName]===true? false:true;\r\n            selectedRecord[`button_or_${index}`] = false;\r\n        } else if(fieldName === `button_or_${index}`) {\r\n            selectedRecord[fieldName] = selectedRecord[fieldName]===true? false:true;\r\n            selectedRecord[`button_and_${index}`] = false;\r\n        } else {\r\n\r\n        }\r\n        this.generateFilterQuery(selectedRecord);\r\n    }\r\n\r\n    onQueryTypeOnclick = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { sqlQuery: !this.state.sqlQuery }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    getValidationForEdit = (screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, queryTypeCode, ncontrolCode) => {\r\n        rsapi.post(\"sqlquery/getValidationForEdit\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": userInfo })\r\n            .then(response => {\r\n                if (response.data === \"IDS_SUCCESS\") {\r\n                    this.props.getSQLQueryComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, queryTypeCode, ncontrolCode)\r\n                }\r\n                else if (response.data === \"IDS_QUERYUSEDINDASHBOARD\") {\r\n                    this.confirmAlertForEdit(ncontrolCode)\r\n                }\r\n                else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: response.data }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(this.props.intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n    }\r\n\r\n    confirmAlertForEdit = (editId) => {\r\n        this.confirmMessage.confirm(this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_QUERYUSEDINDASHBOARD\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            // () => this.performBatchAction(), \r\n            () => this.props.getSQLQueryComboService(this.state.queryTypeName,\r\n                \"update\", \"nsqlquerycode\",\r\n                this.props.Login.masterData.SelectedSQLQuery.nsqlquerycode,\r\n                this.props.Login.masterData, this.props.Login.userInfo,\r\n                //this.state.selectedcombo[\"nquerytypecode\"].value, \r\n                this.props.Login.masterData.SelectedQueryType.nquerytypecode, editId),\r\n            undefined,\r\n            () => this.closeAlert()\r\n        );\r\n    }\r\n\r\n    closeAlert = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showConfirmAlertForEdit: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n\r\n        this.searchRef.current.value = \"\";\r\n        //    const inputParam = {\r\n        //        inputData: { \"userinfo\": this.props.Login.userInfo, \r\n        //                    nquerytypecode:this.state.selectedRecord[\"nquerytypecode\"] ? \r\n        //                                   this.state.selectedRecord[\"nquerytypecode\"].value : 0\r\n        //                 },        \r\n        //        userInfo: this.props.Login.userInfo,\r\n        //        classUrl: \"sqlquery\",\r\n        //        methodUrl: \"SQLQuery\",\r\n        //        displayName: \"IDS_SQLBUILDER\",\r\n        //    };\r\n        //this.props.callService(inputParam);\r\n        const nquerytypecode = this.state.selectedRecord[\"nquerytypecode\"] ?\r\n            this.state.selectedRecord[\"nquerytypecode\"].value : this.props.Login.masterData.SelectedQueryType.nquerytypecode;\r\n\r\n        this.props.comboChangeQueryType(nquerytypecode, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n\r\n    }\r\n\r\n    handlePageChange = (event) => {\r\n        this.setState({\r\n            skip: event.skip,\r\n            take: event.take\r\n        });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            if (fieldName === \"ncharttypecode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[fieldName] = comboData;\r\n\r\n                this.setState({ selectedRecord });\r\n            }\r\n\r\n            if (fieldName === \"ntabletypecode\" || fieldName === \"nformcode\") {\r\n                const selectedTableType = this.state.selectedTableType || {};\r\n                selectedTableType[fieldName] = comboData;\r\n\r\n                this.setState({ selectedTableType });\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                //  this.state.ntableTypeCode=comboData.value;\r\n                if (fieldName === \"ntabletypecode\") {\r\n                    if (comboData.value === tableType.ALL) {\r\n                        selectedRecord[\"nformcode\"] = \"\";\r\n                        this.props.getTablesName(selectedTableType[\"ntabletypecode\"].value, 0,this.props.Login.userInfo)\r\n                    }\r\n                    else {\r\n                        const updateInfor = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                tableName: []\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfor);\r\n                        this.setState({ moduleFormName: [] })\r\n                        selectedRecord[\"nformcode\"] = \"\";\r\n                        this.props.getModuleFormName(comboData.value, this.props.Login.userInfo)\r\n                    }\r\n\r\n                }\r\n                if (fieldName === \"nformcode\") {\r\n\r\n                    selectedRecord[fieldName] = comboData;\r\n\r\n                    this.setState({ selectedRecord });\r\n                    //this.state.nFormCode=comboData.value;\r\n                    //this.getTablesName(selectedRecord[\"ntabletypecode\"].value ,selectedRecord[\"nformcode\"].value)\r\n                    this.props.getTablesName(selectedTableType[\"ntabletypecode\"].value, selectedRecord[\"nformcode\"].value,this.props.Login.userInfo)\r\n                }\r\n            }\r\n            else {\r\n                const selectedcombo = this.state.selectedcombo || {};\r\n                selectedcombo[fieldName] = comboData;\r\n\r\n                this.setState({ selectedcombo });\r\n            }\r\n            if (fieldName === \"nquerytypecode\") {\r\n                this.searchRef.current.value = \"\";\r\n                // this.props.comboChangeQueryType(comboData.value, this.props.Login.masterData, this.props.Login.userInfo);\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[fieldName] = comboData;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord: selectedRecord }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getTablesName(selectedRecord) {\r\n        return function (dispatch) {\r\n            const url = \"sqlquery/getTablesFromSchema\";\r\n\r\n            rsapi.post(url, { \"tabletypecode\": parseInt(selectedRecord[\"ntabletypecode\"].value), \"moduleformcode\": parseInt(selectedRecord[\"nformcode\"].value), \"userinfo\": this.props.Login.userInfo })\r\n                .then(response => {\r\n\r\n                    let tableName = undefined;\r\n                    let tableNameOnly = [];\r\n                    Object.values(response[1].data[0]).forEach(p => {\r\n                        if (p.stable !== tableName) {\r\n                            tableName = p.stable;\r\n                            tableNameOnly.push({ tableName });\r\n                        }\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            tableList: response[0].data[0] || [],\r\n                            tableName: tableNameOnly || []\r\n\r\n                        }\r\n                    });\r\n                    //this.setState({ tableList: response[0].data[0] || [], tableName: tableNameOnly || []})\r\n\r\n                })\r\n                .catch(error => {\r\n\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    getModuleFormName(TableTypeCode) {\r\n\r\n        const url = \"sqlquery/getModuleFormName\";\r\n\r\n        rsapi.post(url, { \"tabletypecode\": parseInt(TableTypeCode), \"userinfo\": this.props.Login.userInfo })\r\n            .then(response => {\r\n                this.setState({ moduleFormName: response.data[0] });\r\n            })\r\n            .catch(error => {\r\n\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n    onEsignInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        // const selectedRecord = this.state.selectedRecord || {};\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let showExecute = this.props.Login.showExecute;\r\n        let showParam = this.props.Login.showParam;\r\n        let showValidate = this.props.Login.showValidate;\r\n        let showSave = this.props.Login.showSave;\r\n        let screenName = this.props.Login.screenName;\r\n        let operation = this.props.Login.operation;\r\n        let slideOperation = this.props.Login.slideOperation;\r\n        let parentPopUpSize = this.props.Login.parentPopUpSize;\r\n        let resultStatus = this.props.Login.resultStatus;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n                selectedRecord[\"agree\"] = transactionStatus.NO;\r\n                if (this.state.param.size > 0) {\r\n                    showExecute = true;\r\n                    showSave = true;\r\n                }\r\n                else {\r\n                    showExecute = false;\r\n                    showSave = false;\r\n                }\r\n                parentPopUpSize = \"xl\"\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.Login.screenName === \"Parameter for Results\" || this.props.Login.screenName === \"Results\") {\r\n                if (this.props.Login.screenFlag === \"showQuery\") {\r\n                    openModal = true;\r\n\r\n                    let queryTypeCode = this.props.Login.masterData.SelectedQueryType.nquerytypecode;\r\n                    if (queryTypeCode === queryTypeFilter.LIMSDASHBOARDQUERY) {\r\n                        screenName = this.props.intl.formatMessage({ id: \"IDS_LIMSDASHBOARDQUERY\" });\r\n                    }\r\n                    else if (queryTypeCode === queryTypeFilter.LIMSALERTQUERY) {\r\n                        screenName = this.props.intl.formatMessage({ id: \"IDS_LIMSALERTQUERY\" });\r\n                    }\r\n                    else if (queryTypeCode === queryTypeFilter.LIMSBARCODEQUERY) {\r\n                        screenName = this.props.intl.formatMessage({ id: \"IDS_LIMSBARCODEQUERY\" });\r\n                    }\r\n                    else if (queryTypeCode === queryTypeFilter.LIMSGENERALQUERY) {\r\n                        screenName = this.props.intl.formatMessage({ id: \"IDS_LIMSGENERALQUERY\" });\r\n                    }\r\n                    else {\r\n                        screenName = this.props.intl.formatMessage({ id: \"IDS_LIMSFILTERQUERY\" });\r\n                    }\r\n                    showSave = false;\r\n                }\r\n                else {\r\n                    selectedRecord = {};\r\n                    openModal = false;\r\n                    showExecute = false;\r\n                }\r\n\r\n                showParam = false;\r\n                showValidate = true;\r\n                operation = slideOperation;\r\n                slideOperation = \"\";\r\n                resultStatus = \"\";\r\n            }\r\n            else {\r\n                openModal = false;\r\n                selectedRecord = {};\r\n                showExecute = false;\r\n            }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, loadEsign, selectedRecord, showExecute,\r\n                showParam, operation, screenName, showSave, showValidate,\r\n                parentPopUpSize, resultStatus, showConfirmAlertForEdit: false\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    upDateComboboxValue = i => Value => {\r\n        if (Value != null) {\r\n\r\n            // let parameters = [...this.state.parameters]\r\n            // parameters[i].textValue = Value\r\n            // this.setState({\r\n            //     parameters: parameters\r\n            // })\r\n\r\n            const paramMap = this.state.param || new Map();\r\n            paramMap.get(i).textValue = Value;\r\n            this.setState({ param: paramMap })\r\n\r\n        }\r\n    }\r\n\r\n    handleDateChange = i => date => {\r\n\r\n        // let parameters = [...this.state.parameters]\r\n        // parameters[i].Datetime = date\r\n\r\n        // this.setState({\r\n        //     parameters: parameters\r\n        // })\r\n        const paramMap = this.state.param || new Map();\r\n        paramMap.get(i).Datetime = date;\r\n        this.setState({ param: paramMap })\r\n    }\r\n\r\n    handleText = i => event => {\r\n        //let parameters = [...this.state.parameters];\r\n        //parameters[i].textValue = e.target.value;\r\n        //this.setState({parameters: parameters});\r\n        // console.log(parameters)\r\n        const paramMap = this.state.param || new Map();\r\n        paramMap.get(event.target.name).textValue = event.target.value;\r\n        this.setState({ param: paramMap })\r\n\r\n    }\r\n\r\n    onDrop(data) {\r\n        let { selectedRecord } = this.state;\r\n        let sqlquery = selectedRecord.ssqlquery ? selectedRecord.ssqlquery : \"\";\r\n\r\n        selectedRecord.ssqlquery = data.dragtable ? `${sqlquery} ${data.dragtable}` : `${sqlquery} ${data.dragcolumn}`\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    executeQuery = (methodUrl, selectedRecord, operation, ncontrolCode) => {\r\n\r\n        const sqlQuery = selectedRecord.ssqlquery;\r\n        if (sqlQuery.length > 10) {\r\n            if (sqlQuery.toUpperCase().indexOf('INSERT') >= 0\r\n                || sqlQuery.toUpperCase().indexOf('UPDATE') >= 0\r\n                || sqlQuery.toUpperCase().indexOf('DELETE') >= 0\r\n                || sqlQuery.toUpperCase().indexOf('TRUNCATE') >= 0\r\n                || sqlQuery.toUpperCase().indexOf('CREATE') >= 0\r\n                || sqlQuery.toUpperCase().indexOf('ALTER') >= 0\r\n                || sqlQuery.toUpperCase().indexOf('DROP') >= 0) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_CANNOTDATAMANIPULATION\" }));\r\n            }\r\n            else {\r\n                if (sqlQuery.indexOf('<@') > 0||sqlQuery.indexOf('<#') > 0) {\r\n                    let newQuery = sqlQuery;\r\n\r\n                    const paramMap = new Map();\r\n                    while (newQuery.indexOf(\"<@\") !== -1||newQuery.indexOf(\"<#\")!== -1) {\r\n\r\n                        if(newQuery.indexOf(\"<@\") !== -1){\r\n                            const paramLabelStartIndex = newQuery.indexOf(\"<@\");\r\n                            const paramLabelEndIndex = newQuery.indexOf(\"@>\");\r\n    \r\n                            const paramLabel = newQuery.substring(paramLabelStartIndex + 2, paramLabelEndIndex);\r\n    \r\n                            if (paramLabel.indexOf(\"T$\") !== -1) {\r\n                                let displayName = \"\";\r\n                                let localParam = \"\";\r\n                                let tableName = \"\";\r\n    \r\n                                newQuery = newQuery.substring(paramLabelEndIndex + 2, newQuery.length);\r\n    \r\n                                if (paramLabel.indexOf(\"D$\") !== -1) {\r\n                                    localParam = paramLabel.substring(0, paramLabel.indexOf('D$'));\r\n                                    displayName = paramLabel.substring(paramLabel.indexOf('D$') + 2, paramLabel.indexOf('T$'));\r\n                                    //tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\r\n                                    tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.length);\r\n                                }\r\n                                else {\r\n                                    localParam = paramLabel.substring(0, paramLabel.indexOf('T$'));\r\n                                    // tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\r\n                                    tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.length);\r\n                                }\r\n    \r\n                                if (localParam.startsWith('d') || localParam.startsWith('D')) {\r\n                                    paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                        value: 'DateTimePicker',\r\n                                        lableName: localParam,\r\n                                        //ID: param.length, \r\n                                        Datetime: new Date(),\r\n                                        textValue: '',\r\n                                        TableName: tableName,\r\n                                        DisplayParam: displayName,\r\n                                        actuallableName: localParam.substring(1, localParam.length)\r\n                                    })\r\n                                }\r\n                                else if(paramLabel==='slanguagetypecode'){\r\n                                    paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                        value: 'TextBox1', lableName: localParam,\r\n                                        //ID: param.length, \r\n                                        textValue: this.props.Login.userInfo.slanguagetypecode,\r\n                                        TableName: tableName,\r\n                                        DisplayParam: displayName,\r\n                                        actuallableName: localParam.substring(1, localParam.length)\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                        value: 'TextBox1', lableName: localParam,\r\n                                        //ID: param.length, \r\n                                        textValue: '',\r\n                                        TableName: tableName,\r\n                                        DisplayParam: displayName,\r\n                                        actuallableName: localParam.substring(1, localParam.length)\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                newQuery = newQuery.substring(paramLabelEndIndex + 2, newQuery.length);\r\n    \r\n                                if(paramLabel==='slanguagetypecode'){\r\n                                    paramMap.set(\"<@\" + paramLabel + \"@>\", {\r\n                                        value: 'TextBox1', lableName: paramLabel,\r\n                                        //ID: param.length, \r\n                                        textValue: this.props.Login.userInfo.slanguagetypecode,\r\n                                        TableName: \"\",\r\n                                        DisplayParam: \"\",\r\n                                        actuallableName: paramLabel.substring(1, paramLabel.length)\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    paramMap.set(\"<@\" + paramLabel + \"@>\", {\r\n                                        value: 'TextBox1', lableName: paramLabel,\r\n                                        //ID: param.length, \r\n                                        textValue: '',\r\n                                        TableName: \"\",\r\n                                        DisplayParam: \"\",\r\n                                        actuallableName: paramLabel.substring(1, paramLabel.length)\r\n                                    });\r\n                                }\r\n                            }\r\n                        }else if(newQuery.indexOf(\"<#\")!== -1){\r\n                            const paramLabelStartIndex = newQuery.indexOf(\"<#\");\r\n                            const paramLabelEndIndex = newQuery.indexOf(\"#>\");\r\n    \r\n                            const paramLabel = newQuery.substring(paramLabelStartIndex + 2, paramLabelEndIndex);\r\n    \r\n                            if (paramLabel.indexOf(\"T$\") !== -1) {\r\n                                let displayName = \"\";\r\n                                let localParam = \"\";\r\n                                let tableName = \"\";\r\n    \r\n                                newQuery = newQuery.substring(paramLabelEndIndex + 2, newQuery.length);\r\n    \r\n                                if (paramLabel.indexOf(\"D$\") !== -1) {\r\n                                    localParam = paramLabel.substring(0, paramLabel.indexOf('D$'));\r\n                                    displayName = paramLabel.substring(paramLabel.indexOf('D$') + 2, paramLabel.indexOf('T$'));\r\n                                    //tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\r\n                                    tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.length);\r\n                                }\r\n                                else {\r\n                                    localParam = paramLabel.substring(0, paramLabel.indexOf('T$'));\r\n                                    // tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\r\n                                    tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.length);\r\n                                }\r\n    \r\n                                if (localParam.startsWith('d') || localParam.startsWith('D')) {\r\n                                    paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                        value: 'DateTimePicker',\r\n                                        lableName: localParam,\r\n                                        //ID: param.length, \r\n                                        Datetime: new Date(),\r\n                                        textValue: '',\r\n                                        TableName: tableName,\r\n                                        DisplayParam: displayName,\r\n                                        actuallableName: localParam.substring(1, localParam.length)\r\n                                    })\r\n                                }\r\n                                else if(paramLabel==='slanguagetypecode'){\r\n                                    paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                        value: 'TextBox1', lableName: localParam,\r\n                                        //ID: param.length, \r\n                                        textValue: this.props.Login.userInfo.slanguagetypecode,\r\n                                        TableName: tableName,\r\n                                        DisplayParam: displayName,\r\n                                        actuallableName: localParam.substring(1, localParam.length)\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                        value: 'TextBox1', lableName: localParam,\r\n                                        //ID: param.length, \r\n                                        textValue: '',\r\n                                        TableName: tableName,\r\n                                        DisplayParam: displayName,\r\n                                        actuallableName: localParam.substring(1, localParam.length)\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                newQuery = newQuery.substring(paramLabelEndIndex + 2, newQuery.length);\r\n    \r\n                                    paramMap.set(\"<#\" + paramLabel + \"#>\", {\r\n                                        value: 'DateTimePicker',\r\n                                        lableName: paramLabel,\r\n                                        actuallableName: paramLabel.substring(1, paramLabel.length),\r\n                                        //ID: param.length, \r\n                                        Datetime: new Date()\r\n                                    }) \r\n                            }\r\n                        }\r\n                        \r\n                    }\r\n\r\n                   \r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN, data: {\r\n\r\n                            screenName: \"Parameter for Results\",\r\n                            openModal: true,\r\n                            showExecute: true,\r\n                            showParam: true,\r\n                            showValidate: false,\r\n                            showSave: false,\r\n                            operation: \"create\",\r\n                            slideOperation: \"\",\r\n                            slideResult: [],\r\n                            slideList: [],\r\n                            screenFlag: \"showParam\",\r\n                            param: paramMap,\r\n                            //param: param, Dparam: Dparam, TBLName: TBLName,\r\n                            parentPopUpSize: \"xl\"\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    //query without parameters      \r\n                    const inputParam = {\r\n\r\n                        query: selectedRecord.ssqlquery.trim(),\r\n                        screenName: \"Results\",\r\n                        openModal: true,\r\n                        showExecute: false,\r\n                        showParam: true,\r\n                        showValidate: false,\r\n                        showSave: false,\r\n                        noSave: true,\r\n                        operation: \"view\",\r\n                        slideOperation: \"\",\r\n                        slideResult: [],\r\n                        slideList: [],\r\n                        //screenFlag: \"showParam\",\r\n                        screenFlag: \"NoParam\",\r\n                        parentPopUpSize: \"xl\",\r\n\r\n                        param: new Map(),\r\n                        userInfo: this.props.Login.userInfo\r\n\r\n                    }\r\n                    this.props.executeUserQuery(inputParam);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteRecord = (methodUrl, selectedRecord, operation, ncontrolCode) => {\r\n\r\n        const postParam = {\r\n            inputListName: \"SQLQuery\", selectedObject: \"SelectedSQLQuery\",\r\n            primaryKeyField: \"nsqlquerycode\",\r\n            primaryKeyValue: this.props.Login.masterData.SelectedSQLQuery.nsqlquerycode,\r\n            fetchUrl: \"sqlquery/getSQLQuery\",\r\n            fecthInputObject: { userInfo: this.props.Login.userInfo },\r\n        }\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl, postParam,\r\n            inputData: {\r\n                [methodUrl.toLowerCase()]: selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"sqlquery\": this.props.Login.masterData.SelectedSQLQuery\r\n            },\r\n            operation\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"sqlquery\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n\r\n    onExecuteClick = () => {\r\n        // let paramVal;\r\n        let tempQuery = \"\";\r\n        let paramFlag = true;\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (this.props.Login.screenName === \"Parameter for Results\" && this.state.param.size > 0) {\r\n            if (selectedRecord != null && selectedRecord.ssqlquery != null && selectedRecord.ssqlquery.length > 0) {\r\n                tempQuery = selectedRecord.ssqlquery;\r\n            }\r\n            else {\r\n                tempQuery = this.props.Login.masterData.SelectedSQLQuery.ssqlquery;\r\n            }\r\n\r\n            const paramMap = this.state.param || new Map();\r\n            for (let parameterMap of paramMap.entries()) {\r\n                const parameter = parameterMap[0];\r\n                const parameterDetail = parameterMap[1];\r\n                let paramVal = \"\";\r\n                //console.log(\"para detail:\", parameterDetail);\r\n\r\n                if (parameter.indexOf('<#')!==-1) {\r\n                    if (parameterDetail.Datetime !== null) {\r\n                        paramVal = parameterDetail.Datetime.getFullYear() + \"-\";\r\n                        if (parameterDetail.Datetime.getMonth().toString().length > 1) {\r\n                            paramVal = paramVal + parseInt(parameterDetail.Datetime.getMonth() + 1) + \"-\";\r\n                        }\r\n                        else if(parameterDetail.Datetime.getMonth()===9){\r\n                            paramVal = paramVal + parseInt(parameterDetail.Datetime.getMonth() + 1) + \"-\";\r\n                        }\r\n                        else {\r\n                            paramVal = paramVal + \"0\" + parseInt(parameterDetail.Datetime.getMonth() + 1) + \"-\";\r\n                        }\r\n                        if (parameterDetail.Datetime.getDate().toString().length > 1) {\r\n                            paramVal = paramVal + parameterDetail.Datetime.getDate();\r\n                        }\r\n                        else {\r\n                            paramVal = paramVal + \"0\" + parameterDetail.Datetime.getDate();\r\n                        }\r\n                    }\r\n                    if (paramVal === undefined) {\r\n                        paramFlag = false;\r\n                        tempQuery = tempQuery.replaceAll(parameter, null);\r\n                    }\r\n                    else if (paramVal.trim().length > 0) {\r\n                        //tempQuery = tempQuery.replace(parameter, \"P#\" + paramVal + \"$P\");\r\n                        tempQuery = tempQuery.replaceAll(parameter, \"'\" + paramVal + \"'\");\r\n                    }\r\n                    else {\r\n                        paramFlag = false;\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    paramVal = parameterDetail.textValue;\r\n                    if (paramVal !== \"\") {\r\n                        if (parameter.indexOf('<@')!==-1) {\r\n\r\n                            if (tempQuery.indexOf(parameterDetail.lableName.trim() + 'D$') > 0) {\r\n                                tempQuery = tempQuery.replaceAll('P$' + parameterDetail.lableName.trim()\r\n                                    + 'D$' + parameterDetail.DisplayParam\r\n                                    + 'T$' + parameterDetail.TableName\r\n                                    + '$P', \"'\" + paramVal + \"'\");\r\n                            }\r\n                            else if (tempQuery.indexOf(parameterDetail.lableName.trim() + 'T$') > 0) {\r\n                                tempQuery = tempQuery.replaceAll('P$' + parameterDetail.lableName.trim()\r\n                                    + 'T$' + parameterDetail.TableName\r\n                                    + '$P', \"'\" + paramVal + \"'\");\r\n                            }\r\n                            else {\r\n                                tempQuery = tempQuery.replaceAll(parameter, \"'\" + paramVal + \"'\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (tempQuery.indexOf(parameterDetail.lableName.trim() + 'D$') > 0) {\r\n                                tempQuery = tempQuery.replaceAll('P$' + parameterDetail.lableName.trim()\r\n                                    + 'D$' + parameterDetail.DisplayParam.trim()\r\n                                    + 'T$' + parameterDetail.TableName + '$P', paramVal);\r\n                            }\r\n                            else if (tempQuery.indexOf(parameterDetail.lableName.trim() + 'T$') > 0) {\r\n                                tempQuery = tempQuery.replaceAll('P$' + parameterDetail.lableName.trim()\r\n                                    + 'T$' + parameterDetail.TableName + '$P', paramVal);\r\n                            }\r\n                            else {\r\n                                tempQuery = tempQuery.replaceAll(parameter, paramVal);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        paramFlag = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (paramFlag === true) {\r\n                //console.log(\"temp:\", tempQuery);\r\n                const inputParam = {\r\n                    slideOperation: this.props.Login.slideOperation,\r\n                    screenFlag: this.props.Login.screenFlag,\r\n                    query: tempQuery.trim(),\r\n                    userInfo: this.props.Login.userInfo,\r\n                    data: {}\r\n                }\r\n                this.props.executeUserQuery(inputParam);\r\n\r\n                //this.props.executeUserQuery(tempQuery.trim(), this.props.Login.screenFlag, this.props.Login.slideOperation, this.props.Login.userInfo);\r\n            }\r\n            else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERPAREMETRS\" }));\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (selectedRecord.ssqlquery !== null && selectedRecord.ssqlquery.length > 0) {\r\n                const sqlQuery = selectedRecord.ssqlquery;\r\n                if (sqlQuery.toUpperCase().indexOf('INSERT') >= 0 || sqlQuery.toUpperCase().indexOf('UPDATE') >= 0\r\n                    || sqlQuery.toUpperCase().indexOf('DELETE') >= 0 || sqlQuery.toUpperCase().indexOf('TRUNCATE') >= 0\r\n                    || sqlQuery.toUpperCase().indexOf('CREATE') >= 0 || sqlQuery.toUpperCase().indexOf('ALTER') >= 0\r\n                    || sqlQuery.toUpperCase().indexOf('DROP') >= 0) {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_CANNOTDATAMANIPULATION\" }));\r\n                }\r\n                else {\r\n// ALPD-3460\r\n                    if ((sqlQuery.indexOf('<@') > 0 && sqlQuery.indexOf('@>') > 0) || (sqlQuery.indexOf('<#') > 0 && sqlQuery.indexOf('#>') > 0)) {\r\n                        let newQuery = sqlQuery;\r\n\r\n                        const paramMap = new Map();\r\n                        while (newQuery.indexOf(\"<@\") !== -1||newQuery.indexOf(\"<#\") !== -1) {\r\n                            if(newQuery.indexOf(\"<@\")!== -1){\r\n                                const paramLabelStartIndex = newQuery.indexOf(\"<@\");\r\n                                const paramLabelEndIndex = newQuery.indexOf(\"@>\");\r\n    \r\n                                const paramLabel = newQuery.substring(paramLabelStartIndex + 2, paramLabelEndIndex);\r\n    \r\n                                if (paramLabel.indexOf(\"T$\") !== -1) {\r\n                                    let displayName = \"\";\r\n                                    let localParam = \"\";\r\n                                    let tableName = \"\";\r\n    \r\n                                    newQuery = newQuery.substring(paramLabelEndIndex + 2, newQuery.length);\r\n    \r\n                                    if (paramLabel.indexOf(\"D$\") !== -1) {\r\n                                        localParam = paramLabel.substring(0, paramLabel.indexOf('D$'));\r\n                                        displayName = paramLabel.substring(paramLabel.indexOf('D$') + 2, paramLabel.indexOf('T$'));\r\n                                        //tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\r\n                                        tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.length);\r\n                                    }\r\n                                    else {\r\n                                        localParam = paramLabel.substring(0, paramLabel.indexOf('T$'));\r\n                                        //tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\r\n                                        tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.length);\r\n                                    }\r\n    \r\n                                    if (localParam.startsWith('d') || localParam.startsWith('D')) {\r\n                                        paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                            value: 'DateTimePicker',\r\n                                            lableName: localParam,\r\n                                            //ID: param.length, \r\n                                            Datetime: new Date(),\r\n                                            textValue: '',\r\n                                            TableName: tableName,\r\n                                            DisplayParam: displayName,\r\n                                            actuallableName: localParam.substring(1, localParam.length)\r\n                                        })\r\n                                    }else if(localParam==='slanguagetypecode'){\r\n                                        paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                            value: 'TextBox1', lableName: localParam,\r\n                                            //ID: param.length, \r\n                                            textValue: this.props.Login.userInfo.slanguagetypecode,\r\n                                            TableName: tableName,\r\n                                            DisplayParam: displayName,\r\n                                            actuallableName: localParam.substring(1, localParam.length)\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                            value: 'TextBox1', lableName: localParam,\r\n                                            //ID: param.length, \r\n                                            textValue: '',\r\n                                            TableName: tableName,\r\n                                            DisplayParam: displayName,\r\n                                            actuallableName: localParam.substring(1, localParam.length)\r\n                                        });\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    newQuery = newQuery.substring(paramLabelEndIndex + 2, newQuery.length);\r\n    \r\n                              \r\n                                     if(paramLabel==='slanguagetypecode'){\r\n                                        paramMap.set(\"<@\" + paramLabel + \"@>\", {\r\n                                            value: 'TextBox1', lableName: paramLabel,\r\n                                            //ID: param.length, \r\n                                            textValue: this.props.Login.userInfo.slanguagetypecode,\r\n                                            TableName: \"\",\r\n                                            DisplayParam: \"\",\r\n                                            actuallableName: paramLabel.substring(1, paramLabel.length)\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        paramMap.set(\"<@\" + paramLabel + \"@>\", {\r\n                                            value: 'TextBox1', lableName: paramLabel,\r\n                                            //ID: param.length, \r\n                                            textValue: '',\r\n                                            TableName: \"\",\r\n                                            DisplayParam: \"\",\r\n                                            actuallableName: paramLabel.substring(1, paramLabel.length)\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }else if(newQuery.indexOf(\"<#\")!== -1){\r\n                                const paramLabelStartIndex = newQuery.indexOf(\"<#\");\r\n                                const paramLabelEndIndex = newQuery.indexOf(\"#>\");\r\n    \r\n                                const paramLabel = newQuery.substring(paramLabelStartIndex + 2, paramLabelEndIndex);\r\n    \r\n                                if (paramLabel.indexOf(\"T$\") !== -1) {\r\n                                    let displayName = \"\";\r\n                                    let localParam = \"\";\r\n                                    let tableName = \"\";\r\n    \r\n                                    newQuery = newQuery.substring(paramLabelEndIndex + 2, newQuery.length);\r\n    \r\n                                    if (paramLabel.indexOf(\"D$\") !== -1) {\r\n                                        localParam = paramLabel.substring(0, paramLabel.indexOf('D$'));\r\n                                        displayName = paramLabel.substring(paramLabel.indexOf('D$') + 2, paramLabel.indexOf('T$'));\r\n                                        //tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\r\n                                        tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.length);\r\n                                    }\r\n                                    else {\r\n                                        localParam = paramLabel.substring(0, paramLabel.indexOf('T$'));\r\n                                        //tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.indexOf('$P'));\r\n                                        tableName = paramLabel.substring(paramLabel.indexOf('T$') + 2, paramLabel.length);\r\n                                    }\r\n    \r\n                                    if (localParam.startsWith('d') || localParam.startsWith('D')) {\r\n                                        paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                            value: 'DateTimePicker',\r\n                                            lableName: localParam,\r\n                                            //ID: param.length, \r\n                                            Datetime: new Date(),\r\n                                            textValue: '',\r\n                                            TableName: tableName,\r\n                                            DisplayParam: displayName,\r\n                                            actuallableName: localParam.substring(1, localParam.length)\r\n                                        })\r\n                                    }else if(localParam==='slanguagetypecode'){\r\n                                        paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                            value: 'TextBox1', lableName: localParam,\r\n                                            //ID: param.length, \r\n                                            textValue: this.props.Login.userInfo.slanguagetypecode,\r\n                                            TableName: tableName,\r\n                                            DisplayParam: displayName,\r\n                                            actuallableName: localParam.substring(1, localParam.length)\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        paramMap.set(\"P$\" + localParam + \"$P\", {\r\n                                            value: 'TextBox1', lableName: localParam,\r\n                                            //ID: param.length, \r\n                                            textValue: '',\r\n                                            TableName: tableName,\r\n                                            DisplayParam: displayName,\r\n                                            actuallableName: localParam.substring(1, localParam.length)\r\n                                        });\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    newQuery = newQuery.substring(paramLabelEndIndex + 2, newQuery.length);\r\n    \r\n                                   \r\n                                        paramMap.set(\"<#\" + paramLabel + \"#>\", {\r\n                                             lableName: paramLabel,\r\n                                            value: 'DateTimePicker',\r\n                                            //ID: param.length, \r\n                                            Datetime: new Date(),\r\n                                            textValue: '',\r\n                                            TableName: \"\",\r\n                                            DisplayParam: \"\",\r\n                                            actuallableName: paramLabel\r\n                                        });\r\n                                   \r\n                                }\r\n                            }\r\n                           \r\n                        }\r\n\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN, data: {\r\n                                screenName: \"Parameter for Results\",\r\n                                showExecute: true,\r\n                                showSave: true,\r\n                                showParam: true,\r\n                                showValidate: false,\r\n                                slideOperation: this.props.Login.operation,\r\n                                slideResult: [],\r\n                                slideList: [],\r\n                                screenFlag: \"showQuery\",\r\n                                param: paramMap,\r\n                                // Dparam: Dparam, TBLName: TBLName\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                    else {\r\n                        //query without parameters      \r\n                        const inputParam = {\r\n                            screenName: \"Results\",\r\n                            query: selectedRecord.ssqlquery.trim(),\r\n                            userInfo: this.props.Login.userInfo,\r\n                            slideOperation: this.props.Login.operation,\r\n                            screenFlag: \"showQuery\",\r\n                            data: {\r\n                                showExecute: false,\r\n                                showSave: false,\r\n                                showParam: true,\r\n                                showValidate: false,\r\n                                noSave: false,\r\n                                operation: \"view\",\r\n                                param: new Map(),\r\n                                screenName: \"Results\",\r\n                                slideOperation: this.props.Login.operation,\r\n                                screenFlag: \"showQuery\"\r\n                            }\r\n\r\n                        }\r\n                        this.props.executeUserQuery(inputParam);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.Login.resultStatus === \"Success\") {\r\n            let operation = this.props.Login.operation;\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            let postParam = undefined;\r\n            if (operation === \"update\"\r\n                || (operation === \"view\" && this.props.Login.slideOperation !== \"create\")) {\r\n                // edit\r\n                operation = \"update\";\r\n                postParam = { inputListName: \"SQLQuery\", selectedObject: \"SelectedSQLQuery\", primaryKeyField: \"nsqlquerycode\" };\r\n                let selectedRecord = { ...this.state.selectedRecord };\r\n                delete selectedRecord.nformcode;\r\n                inputData[\"sqlquery\"] = selectedRecord\r\n                this.queryFieldList.map(item => {\r\n                    return inputData[\"sqlquery\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n                })\r\n            }\r\n            else {\r\n                //add               \r\n                inputData[\"sqlquery\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n                operation = \"create\";\r\n                this.queryFieldList.map(item => {\r\n                    return inputData[\"sqlquery\"][item] = this.state.selectedRecord[item]\r\n                });\r\n            }\r\n            if (inputData[\"sqlquery\"].hasOwnProperty('esignpassword')) {\r\n                if (inputData[\"sqlquery\"]['esignpassword'] === '') {\r\n                    delete inputData[\"sqlquery\"]['esigncomments']\r\n                    delete inputData[\"sqlquery\"]['esignpassword']\r\n                    delete inputData[\"sqlquery\"]['agree']\r\n                }\r\n            }\r\n            inputData[\"sqlquery\"][\"ncharttypecode\"] = this.state.selectedRecord[\"ncharttypecode\"] ? this.state.selectedRecord[\"ncharttypecode\"].value : \"-1\";\r\n            inputData[\"sqlquery\"][\"nquerytypecode\"] = this.props.Login.masterData.SelectedQueryType.nquerytypecode;\r\n            ///code removed\r\n            const inputParam = {\r\n                classUrl: \"sqlquery\",\r\n                methodUrl: \"SQLQuery\",\r\n                inputData: inputData,\r\n                operation,\r\n                saveType, formRef, postParam, searchRef: this.searchRef\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (\r\n                showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType, parentPopUpSize: \"lg\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_INAVLIDDATA\" }));\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        // const inputParam = {\r\n        //     inputData: { \"userinfo\": this.props.Login.userInfo },\r\n        //     classUrl: \"sqlquery\",\r\n        //     methodUrl: \"SQLQuery\",\r\n        //     displayName: \"IDS_SQLBUILDER\",\r\n        //     userInfo: this.props.Login.userInfo\r\n        // };\r\n        // this.props.callService(inputParam);\r\n\r\n        let nquerytypecode = this.props.Login.masterData.SelectedQueryType ?\r\n            this.props.Login.masterData.SelectedQueryType.nquerytypecode : 0;\r\n        this.props.comboChangeQueryType(nquerytypecode, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { selectedRecord, dataStateUserQuery, userRoleControlRights, controlMap, filterData, queryType,\r\n            chartList, moduleFormName, tableType, selectedTableType, param, tableColumnList, selectedTableList,\r\n            foreignTableCount, foreignTableList, count, sqlQuery } = this.state;\r\n        let updateState = false;\r\n        // const masterData = this.props.Login.masterData;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            updateState = true;\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n        }\r\n        \r\n        if (this.props.Login.sqlQuery !== previousProps.Login.sqlQuery) {\r\n            updateState = true;\r\n            sqlQuery = this.props.Login.sqlQuery;\r\n        }\r\n\r\n        if (this.props.Login.tableColumnList !== previousProps.Login.tableColumnList) {\r\n            updateState = true;\r\n            tableColumnList = this.props.Login.tableColumnList;\r\n        }\r\n\r\n        if (this.props.Login.slideResult !== previousProps.Login.slideResult) {\r\n            dataStateUserQuery = {\r\n                skip: 0,\r\n                take: 10,\r\n            };\r\n            updateState = true;\r\n        }\r\n\r\n\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRight = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRight.push(item.ncontrolcode))\r\n            }\r\n            const controlMap1 = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            // if (this.props.Login.masterData.QueryType !== previousProps.Login.masterData.QueryType) {\r\n            const queryTypeMap = constructOptionList(this.props.Login.masterData.QueryType || [], \"nquerytypecode\",\r\n                \"squerytypename\", \"nsorter\", \"ascending\", false);\r\n            const QueryTypeList = queryTypeMap.get(\"OptionList\");\r\n\r\n            // const selectedcombo = {\r\n            //     nquerytypecode: QueryTypeList.length > 0 ? {\r\n            //         \"value\": QueryTypeList[0].item.nquerytypecode,\r\n            //         \"label\": QueryTypeList[0].item.squerytypename\r\n            //     } : this.state.selectedcombo[\"nquerytypecode\"]\r\n\r\n            // }\r\n\r\n            // }\r\n            updateState = true;\r\n            userRoleControlRights = userRoleControlRight;\r\n            controlMap = controlMap1;\r\n            filterData = this.generateBreadCrumData();\r\n            queryType = QueryTypeList;\r\n        }\r\n        else {\r\n            filterData = this.generateBreadCrumData();\r\n            if (this.props.Login.chartList !== previousProps.Login.chartList || this.props.Login.moduleFormName !== previousProps.Login.moduleFormName) {\r\n\r\n                const chartListMap = constructOptionList(this.props.Login.chartList || [], \"ncharttypecode\",\r\n                    \"schartname\", undefined, undefined, undefined);\r\n                const chartTypeList = chartListMap.get(\"OptionList\");\r\n\r\n                const moduleFormNameMap = constructOptionList(this.props.Login.moduleFormName || [], \"nformcode\",\r\n                    \"sdisplayname\", undefined, undefined, undefined);\r\n                const moduleFormNameList = moduleFormNameMap.get(\"OptionList\");\r\n                updateState = true;\r\n                chartList = chartTypeList\r\n                moduleFormName = moduleFormNameList\r\n            }\r\n            if (this.props.Login.masterData.QueryType !== previousProps.Login.masterData.QueryType) {\r\n                const queryTypeMap = constructOptionList(this.props.Login.masterData.QueryType || [], \"nquerytypecode\",\r\n                    \"squerytypename\", \"nsorter\", \"ascending\", false);\r\n                const QueryTypeList = queryTypeMap.get(\"OptionList\");\r\n\r\n                // const selectedcombo = {\r\n                //                         nquerytypecode: QueryTypeList.length > 0 ? {\r\n                //                             \"value\": QueryTypeList[0].item.nquerytypecode,\r\n                //                             \"label\": QueryTypeList[0].item.squerytypename\r\n                //                         } : this.state.selectedcombo[\"nquerytypecode\"]\r\n\r\n                //}\r\n\r\n                updateState = true;\r\n                queryType = QueryTypeList //selectedcombo , \r\n\r\n\r\n            }\r\n            if (this.props.Login.tableType !== previousProps.Login.tableType) {\r\n                const tableTypeMap = constructOptionList(this.props.Login.tableType || [], \"ntabletypecode\",\r\n                    \"stabletype\", undefined, undefined, undefined);\r\n                let tableTypeList = tableTypeMap.get(\"OptionList\");\r\n\r\n                selectedTableType = {\r\n                    ntabletypecode: tableTypeList.length > 0 ? {\r\n                        \"value\": tableTypeList[0].item.ntabletypecode,\r\n                        //\"label\": tableTypeList[0].item.stabletype\r\n                        \"label\": this.props.intl.formatMessage({ id:tableTypeList[0].item.sidstablename })\r\n\r\n                    } : this.state.selectedTableType[\"ntabletypecode\"]\r\n\r\n                }\r\n                updateState = true;\r\n\r\n                tableTypeList=tableTypeList.map(item=>{\r\n                    item={...item,\"label\":this.props.intl.formatMessage({ id:item.item.sidstablename })}; \r\n                    return  item})\r\n\r\n                tableType = tableTypeList\r\n\r\n            }\r\n            if (this.props.Login.masterData.SelectedQueryType !== previousProps.Login.masterData.SelectedQueryType) {\r\n                updateState = true;\r\n            }\r\n            if (this.props.Login.param !== previousProps.Login.param) {\r\n                updateState = true;\r\n                param = this.props.Login.param\r\n            }\r\n        }\r\n        if (updateState) {\r\n            this.setState({\r\n                selectedRecord, dataStateUserQuery, userRoleControlRights, controlMap, filterData, queryType,\r\n                chartList, moduleFormName, tableType, selectedTableType, param, tableColumnList, selectedTableList,\r\n                foreignTableCount, foreignTableList, count, sqlQuery\r\n            })\r\n        }\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.SelectedQueryType) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_QUERYTYPE\",\r\n                    \"value\": this.props.Login.masterData.SelectedQueryType ?\r\n                        this.props.Login.masterData.SelectedQueryType.squerytypename : \"\"\r\n                    //this.props.intl.formatMessage({ id: this.props.Login.masterData.SelectedQueryType.squerytypename}) : \"\"\r\n                }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined,\r\n                testData: {}, parameterData: {}, otherTestData: {}, formulaData: {}\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, filterColumnData,\r\n    validateEsignCredential, getSQLQueryDetail, getSQLQueryComboService, comboChangeQueryType,\r\n    executeUserQuery, comboColumnValues, getColumnNamesByTableName,\r\n    getTablesName, getModuleFormName, getDatabaseTables, executeQuery, getForeignTable, \r\n    getViewColumns, getMasterData\r\n})(injectIntl(SQLBuilder));"]},"metadata":{},"sourceType":"module"}