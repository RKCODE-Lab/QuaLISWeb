{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{FormattedMessage,injectIntl}from'react-intl';import{Row,Col,FormGroup,FormLabel}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import DataGrid from'../../components/data-grid/data-grid.component';import AddClient from'./AddClient';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import{ListWrapper}from'../../components/client-group.styles';import{MediaLabel}from'../../components/add-client.styles';import{callService,crudMaster,updateStore,validateEsignCredential,getClientComboService}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{constructOptionList,getControlMap,showEsign,validateEmail,validatePhoneNumber}from'../../components/CommonScript';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var Client=/*#__PURE__*/function(_React$Component){_inherits(Client,_React$Component);var _super=_createSuper(Client);function Client(_props){var _this;_classCallCheck(this,Client);_this=_super.call(this,_props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord[\"agree\"]=4;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.getNestedFieldData=function(nestedColumnArray,data){return nestedColumnArray.reduce(function(xs,x){return xs&&xs[x]?xs[x]:null;},data);};_this.expandChange=function(event){var isExpanded=event.dataItem.expanded===undefined?event.dataItem.aggregates:event.dataItem.expanded;event.dataItem.expanded=!isExpanded;_this.setState(_objectSpread({},_this.props));};_this.detailBand=function(props){var Dataitem=props.dataItem;var OptionalFieldList=[{datafield:\"saddress1\",Column:\"Address1\"},{datafield:\"saddress2\",Column:\"Address2\"},{datafield:\"saddress3\",Column:\"Address3\"},{datafield:\"sphoneno\",Column:\"Phone No\"},{datafield:\"smobileno\",Column:\"Mobile No\"},{datafield:\"sfaxno\",Column:\"Fax No\"},{datafield:\"sdisplaystatus\",Column:\"DisplayStatus\"}];return/*#__PURE__*/React.createElement(Row,null,OptionalFieldList.map(function(fields){return/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:fields.Column,message:fields.Column})),/*#__PURE__*/React.createElement(MediaLabel,{className:\"readonly-text font-weight-normal\"},Dataitem[fields.datafield])));}));};_this.detailedFieldList=[{dataField:\"saddress1\",idsName:\"IDS_ADDRESS1\",columnSize:\"4\"},{dataField:\"saddress2\",idsName:\"IDS_ADDRESS2\",columnSize:\"4\"},{dataField:\"saddress3\",idsName:\"IDS_ADDRESS3\",columnSize:\"4\"},{dataField:\"sphoneno\",idsName:\"IDS_PHONENO\",columnSize:\"4\"},{dataField:\"smobileno\",idsName:\"IDS_MOBILENO\",columnSize:\"4\"},{dataField:\"sfaxno\",idsName:\"IDS_FAXNO\",columnSize:\"4\"}//{ dataField: \"sdisplaystatus\", idsName: \"IDS_DISPLAYSTATUS\" , columnSize:\"4\"},\n];_this.onComboChange=function(comboData,fieldName){if(comboData!=null){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?3:4;}else{selectedRecord[event.target.name]=event.target.checked===true?1:2;}}else if(event.target.type==='select-one'){selectedRecord[event.target.name]=event.target.value;}else{if(event.target.name===\"sphoneno\"||event.target.name===\"smobileno\"||event.target.name===\"sfaxno\"){if(event.target.value!==\"\"){event.target.value=validatePhoneNumber(event.target.value);selectedRecord[event.target.name]=event.target.value!==\"\"?event.target.value:selectedRecord[event.target.name];}else{selectedRecord[event.target.name]=event.target.value;}}else{selectedRecord[event.target.name]=event.target.value;}}_this.setState({selectedRecord:selectedRecord});};_this.deleteRecord=function(deleteparam){var _inputData;if(deleteparam.selectedRecord.expanded!==undefined){delete deleteparam.selectedRecord.expanded;}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:deleteparam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:(_inputData={},_defineProperty(_inputData,deleteparam.methodUrl.toLowerCase(),deleteparam.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_inputData),operation:deleteparam.operation};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteparam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:deleteparam.screenName,operation:deleteparam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.onSaveClick=function(saveType,formRef){var isValidateEmail=_this.state.selectedRecord[\"semail\"]?validateEmail(_this.state.selectedRecord[\"semail\"]):true;if(isValidateEmail){var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var dataState=undefined;if(_this.props.Login.operation===\"update\"){var selectedRecord=_this.state.selectedRecord;// edit\ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]={};_this.fieldList.map(function(item){return inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][item]=selectedRecord[item]!==null?selectedRecord[item]:\"\";});inputData[\"client\"][\"nclientcode\"]=selectedRecord[\"nclientcode\"]?selectedRecord[\"nclientcode\"]:-1;inputData[\"client\"][\"ncountrycode\"]=selectedRecord[\"ncountrycode\"]?selectedRecord[\"ncountrycode\"].value:-1;dataState=_this.state.dataState;}else{//add               \ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};_this.fieldList.map(function(item){return inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][item]=_this.state.selectedRecord[item];});inputData[\"client\"][\"ncountrycode\"]=_this.state.selectedRecord[\"ncountrycode\"]?_this.state.selectedRecord[\"ncountrycode\"].value:-1;}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:inputData,selectedId:_this.state.selectedRecord[\"nclientcode\"],operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,dataState:dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:_this.props.Login.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_ENTERVALIDEMAIL\"}));}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.fieldList=[];var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={addScreen:false,data:[],masterStatus:\"\",error:\"\",operation:\"create\",dataResult:[],dataState:_dataState,clientData:[],userRoleControlRights:[],controlMap:new Map(),selectedRecord:{},countryList:[]};_this.mandatoryFields=[{\"idsName\":\"IDS_CLIENTNAME\",\"dataField\":\"sclientname\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_ADDRESS1\",\"dataField\":\"saddress1\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_COUNTRY\",\"dataField\":\"ncountrycode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];return _this;}_createClass(Client,[{key:\"render\",value:function render(){var _this2=this;this.extractedColumnList=[{\"idsName\":\"IDS_CLIENTNAME\",\"dataField\":\"sclientname\",\"width\":\"200px\"},{\"idsName\":\"IDS_COUNTRYNAME\",\"dataField\":\"scountryname\",\"width\":\"200px\"},{\"idsName\":\"IDS_EMAIL\",\"dataField\":\"semail\",\"width\":\"200px\"},{\"idsName\":\"IDS_STATUS\",\"dataField\":\"sdisplaystatus\",\"width\":\"100px\"}];this.fieldList=[\"sclientname\",\"saddress1\",\"saddress2\",\"saddress3\",\"sphoneno\",\"smobileno\",\"sfaxno\",\"semail\",\"ntransactionstatus\",\"ncountrycode\"];var addId=this.state.controlMap.has(\"AddClient\")&&this.state.controlMap.get(\"AddClient\").ncontrolcode;var editId=this.state.controlMap.has(\"EditClient\")&&this.state.controlMap.get(\"EditClient\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteClient\")&&this.state.controlMap.get(\"DeleteClient\").ncontrolcode;var clientAddParam={screenName:\"Client\",operation:\"create\",primaryKeyField:\"nclientcode\",userInfo:this.props.Login.userInfo,ncontrolCode:addId};var clientEditParam={screenName:\"Client\",operation:\"update\",primaryKeyField:\"nclientcode\",userInfo:this.props.Login.userInfo,ncontrolCode:editId};var clientDeleteParam={screenName:\"Client\",methodUrl:\"Client\",operation:\"delete\",ncontrolCode:deleteId};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nclientcode\",expandField:\"expanded\",detailedFieldList:this.detailedFieldList,data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,fetchRecord:this.props.getClientComboService,editParam:clientEditParam,deleteRecord:this.deleteRecord,deleteParam:clientDeleteParam,reloadData:this.reloadData,addRecord:function addRecord(){return _this2.props.getClientComboService(clientAddParam);},pageable:{buttonCount:4,pageSizes:true},scrollable:\"scrollable\",gridHeight:\"600px\",isActionRequired:true,isToolBarRequired:true,selectedId:this.props.Login.selectedId,hasDynamicColSize:true}):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.mandatoryFields||[],addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddClient,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,formatMessage:this.props.intl.formatMessage,countryList:this.state.countryList||[],operation:this.props.Login.operation,inputParam:this.props.Login.inputParam})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState});}}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.countryList!==previousProps.Login.countryList){var countryList=constructOptionList(this.props.Login.countryList||[],\"ncountrycode\",\"scountryname\",undefined,undefined,undefined);var countryListClient=countryList.get(\"OptionList\");this.setState({countryList:countryListClient});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;}}]);return Client;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,validateEsignCredential:validateEsignCredential,getClientComboService:getClientComboService})(injectIntl(Client));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/contactmaster/Client.jsx"],"names":["React","connect","FormattedMessage","injectIntl","Row","Col","FormGroup","FormLabel","toast","process","DataGrid","AddClient","SlideOutModal","Esign","ListWrapper","MediaLabel","callService","crudMaster","updateStore","validateEsignCredential","getClientComboService","DEFAULT_RETURN","constructOptionList","getControlMap","showEsign","validateEmail","validatePhoneNumber","mapStateToProps","state","Login","Client","props","dataStateChange","event","setState","dataResult","data","dataState","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","selectedId","getNestedFieldData","nestedColumnArray","reduce","xs","x","expandChange","isExpanded","dataItem","expanded","undefined","aggregates","detailBand","Dataitem","OptionalFieldList","datafield","Column","map","fields","detailedFieldList","dataField","idsName","columnSize","onComboChange","comboData","fieldName","onInputOnChange","target","type","name","checked","value","deleteRecord","deleteparam","inputParam","classUrl","methodUrl","displayName","inputData","toLowerCase","userInfo","userRoleControlRights","nformcode","ncontrolCode","screenData","masterData","screenName","reloadData","onSaveClick","saveType","formRef","isValidateEmail","fieldList","item","nmastersitecode","intl","formatMessage","id","info","validateEsign","sreason","password","createRef","extractedColumnList","skip","take","settings","parseInt","addScreen","masterStatus","error","clientData","controlMap","Map","countryList","mandatoryFields","addId","has","get","ncontrolcode","editId","deleteId","clientAddParam","primaryKeyField","clientEditParam","clientDeleteParam","buttonCount","pageSizes","previousProps","Object","values","push","countryListClient","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport AddClient from './AddClient';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { MediaLabel } from '../../components/add-client.styles';\r\nimport { callService, crudMaster, updateStore, validateEsignCredential, getClientComboService } from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { constructOptionList, getControlMap, showEsign, validateEmail, validatePhoneNumber } from '../../components/CommonScript';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Client extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.fieldList = [];\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            addScreen: false, data: [], masterStatus: \"\", error: \"\", operation: \"create\",\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            clientData: [],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedRecord: {}, \r\n            countryList: []\r\n        };\r\n        this.mandatoryFields = [\r\n            { \"idsName\": \"IDS_CLIENTNAME\", \"dataField\": \"sclientname\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            { \"idsName\": \"IDS_ADDRESS1\", \"dataField\": \"saddress1\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_COUNTRY\", \"dataField\": \"ncountrycode\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ]\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getNestedFieldData = (nestedColumnArray, data) =>\r\n        nestedColumnArray.reduce((xs, x) => (xs && xs[x]) ? xs[x] : null, data);\r\n\r\n    render() {\r\n\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_CLIENTNAME\", \"dataField\": \"sclientname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_COUNTRYNAME\", \"dataField\": \"scountryname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_EMAIL\", \"dataField\": \"semail\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"sdisplaystatus\", \"width\": \"100px\"},\r\n        ]\r\n\r\n        this.fieldList = [\"sclientname\", \"saddress1\", \"saddress2\", \"saddress3\", \"sphoneno\", \"smobileno\", \"sfaxno\", \"semail\", \"ntransactionstatus\", \"ncountrycode\"];\r\n\r\n        const addId = this.state.controlMap.has(\"AddClient\") && this.state.controlMap.get(\"AddClient\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditClient\") && this.state.controlMap.get(\"EditClient\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteClient\") && this.state.controlMap.get(\"DeleteClient\").ncontrolcode;\r\n\r\n        const clientAddParam = {\r\n            screenName: \"Client\", operation: \"create\", primaryKeyField: \"nclientcode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: addId\r\n        };\r\n\r\n        const clientEditParam = {\r\n            screenName: \"Client\", operation: \"update\", primaryKeyField: \"nclientcode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: editId\r\n        };\r\n\r\n        const clientDeleteParam = { screenName: \"Client\", methodUrl: \"Client\", operation: \"delete\", ncontrolCode: deleteId };\r\n\r\n        return (\r\n\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={\"nclientcode\"}\r\n                                    expandField=\"expanded\"\r\n                                    detailedFieldList={this.detailedFieldList}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    fetchRecord={this.props.getClientComboService}\r\n                                    editParam={clientEditParam}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    deleteParam={clientDeleteParam}\r\n                                    reloadData={this.reloadData}\r\n                                    addRecord={() => this.props.getClientComboService(clientAddParam)}\r\n                                    pageable={{ buttonCount: 4, pageSizes: true }}\r\n                                    scrollable={\"scrollable\"}\r\n                                    gridHeight={\"600px\"}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    hasDynamicColSize={true}\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.mandatoryFields || []}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddClient\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                countryList={this.state.countryList || []}\r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.Login.inputParam}\r\n\r\n                            />}\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    expandChange = (event) => {\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined ?\r\n                event.dataItem.aggregates : event.dataItem.expanded;\r\n        event.dataItem.expanded = !isExpanded;\r\n        this.setState({ ...this.props });\r\n    }\r\n    detailBand = (props) => {\r\n\r\n        const Dataitem = props.dataItem\r\n        const OptionalFieldList = [\r\n            { datafield: \"saddress1\", Column: \"Address1\" },\r\n            { datafield: \"saddress2\", Column: \"Address2\" },\r\n            { datafield: \"saddress3\", Column: \"Address3\" },\r\n            { datafield: \"sphoneno\", Column: \"Phone No\" },\r\n            { datafield: \"smobileno\", Column: \"Mobile No\" },\r\n            { datafield: \"sfaxno\", Column: \"Fax No\" },\r\n            { datafield: \"sdisplaystatus\", Column: \"DisplayStatus\" },\r\n\r\n        ];\r\n        return (<Row>\r\n            {OptionalFieldList.map((fields) => {\r\n                return (\r\n                    <Col md='6'>\r\n                        <FormGroup>\r\n                            <FormLabel><FormattedMessage id={fields.Column} message={fields.Column} /></FormLabel>\r\n                            <MediaLabel className=\"readonly-text font-weight-normal\">{Dataitem[fields.datafield]}</MediaLabel>\r\n                        </FormGroup>\r\n                    </Col>\r\n                )\r\n            })\r\n            }\r\n        </Row>)\r\n    }\r\n    detailedFieldList = [\r\n        { dataField: \"saddress1\", idsName: \"IDS_ADDRESS1\" , columnSize:\"4\"},\r\n        { dataField: \"saddress2\", idsName: \"IDS_ADDRESS2\" , columnSize:\"4\"},\r\n        { dataField: \"saddress3\", idsName: \"IDS_ADDRESS3\", columnSize:\"4\" },\r\n        { dataField: \"sphoneno\", idsName: \"IDS_PHONENO\" , columnSize:\"4\"},\r\n        { dataField: \"smobileno\", idsName: \"IDS_MOBILENO\" , columnSize:\"4\"},\r\n        { dataField: \"sfaxno\", idsName: \"IDS_FAXNO\" , columnSize:\"4\"},\r\n        //{ dataField: \"sdisplaystatus\", idsName: \"IDS_DISPLAYSTATUS\" , columnSize:\"4\"},\r\n    ];\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState\r\n                });\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.countryList !== previousProps.Login.countryList) {\r\n\r\n            const countryList = constructOptionList(this.props.Login.countryList || [], \"ncountrycode\",\r\n                \"scountryname\", undefined, undefined, undefined);\r\n            const countryListClient = countryList.get(\"OptionList\");\r\n\r\n            this.setState({ countryList: countryListClient });\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 1 : 2;\r\n            }\r\n        } else if (event.target.type === 'select-one') {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        } else {\r\n            if (event.target.name === \"sphoneno\" || event.target.name === \"smobileno\" || event.target.name === \"sfaxno\") {\r\n                if (event.target.value !== \"\") {\r\n                    event.target.value = validatePhoneNumber(event.target.value);\r\n                    selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    deleteRecord = (deleteparam) => {\r\n        if (deleteparam.selectedRecord.expanded !== undefined) {\r\n            delete deleteparam.selectedRecord.expanded\r\n        }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: deleteparam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                [deleteparam.methodUrl.toLowerCase()]: deleteparam.selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: deleteparam.operation\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteparam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    screenName: deleteparam.screenName, operation: deleteparam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        const isValidateEmail = this.state.selectedRecord[\"semail\"]? validateEmail(this.state.selectedRecord[\"semail\"]): true;\r\n        if (isValidateEmail) {\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            let dataState = undefined;\r\n            if (this.props.Login.operation === \"update\") {\r\n                const selectedRecord=this.state.selectedRecord;\r\n                // edit\r\n                inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = {};\r\n\r\n                this.fieldList.map(item => {\r\n                    return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\r\n               })\r\n               inputData[\"client\"][\"nclientcode\"] =selectedRecord[\"nclientcode\"] ? selectedRecord[\"nclientcode\"] : -1;\r\n               inputData[\"client\"][\"ncountrycode\"] = selectedRecord[\"ncountrycode\"] ? selectedRecord[\"ncountrycode\"].value : -1;\r\n                dataState = this.state.dataState;\r\n            }\r\n            else {\r\n                //add               \r\n                inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n\r\n                this.fieldList.map(item => {\r\n                    return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item] = this.state.selectedRecord[item]\r\n                })\r\n                inputData[\"client\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\r\n            }\r\n     \r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: this.props.Login.inputParam.methodUrl,\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                selectedId: this.state.selectedRecord[\"nclientcode\"],\r\n                operation: this.props.Login.operation, saveType, formRef, dataState\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                        operation: this.props.Login.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }))\r\n        }\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    getClientComboService\r\n})(injectIntl(Client));"]},"metadata":{},"sourceType":"module"}