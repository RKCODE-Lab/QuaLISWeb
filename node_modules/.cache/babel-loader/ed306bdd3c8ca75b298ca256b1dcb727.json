{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\home\\\\FormIcon.js\";\nimport React from 'react';\nimport { Form, Image } from 'react-bootstrap';\nimport { ReactComponent as Manufacturer } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/manufacturer.svg\";\nimport { ReactComponent as DiscountBand } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/discount band.svg\";\nimport { ReactComponent as VATBand } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/vat band.svg\";\nimport { ReactComponent as OEM } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/oem.svg\";\nimport { ReactComponent as Quotation } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/quotation.svg\";\nimport { ReactComponent as SampleRegistration } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sample registration.svg\";\nimport { ReactComponent as JobAllocation } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/job allocation.svg\";\nimport { ReactComponent as Worklist } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/worklist.svg\";\nimport { ReactComponent as MyJobs } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/my jobs.svg\";\nimport { ReactComponent as RunBatchCreation } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/run batch creation.svg\";\nimport { ReactComponent as ResultEntry } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/result entry.svg\";\nimport { ReactComponent as TestApproval } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/test approval.svg\";\nimport { ReactComponent as StorageCategory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/storage category.svg\";\nimport { ReactComponent as ChainofCustody } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/chain of custody.svg\";\nimport { ReactComponent as ReleaseReport } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/release.svg\";\nimport { ReactComponent as Reason } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/reason.svg\";\nimport { ReactComponent as UnitofMeasurement } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/unit of measurement.svg\";\nimport { ReactComponent as StorageCondition } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/storage condition.svg\";\nimport { ReactComponent as StorageLocation } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/storage location.svg\";\nimport { ReactComponent as ContainerType } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/container type.svg\";\nimport { ReactComponent as Barcode } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/barcode.svg\";\nimport { ReactComponent as SampleTestComments } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sample test comments.svg\";\nimport { ReactComponent as RegistrationType } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/registration type.svg\";\nimport { ReactComponent as RegistrationSubType } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/registration sub type.svg\";\nimport { ReactComponent as TemplateDesign } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/template design.svg\";\nimport { ReactComponent as TemplateMapping } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/template mapping.svg\";\nimport { ReactComponent as UserRoleTemplate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/user role template.svg\";\nimport { ReactComponent as ApprovalConfiguration } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/approval configuration.svg\";\nimport { ReactComponent as FTPConfig } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/ftp config.svg\";\nimport { ReactComponent as UserMapping } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/user mapping.svg\";\nimport { ReactComponent as Language } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/language.svg\";\nimport { ReactComponent as Designation } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/designation.svg\";\nimport { ReactComponent as PasswordPolicy } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/password policy.svg\";\nimport { ReactComponent as ScreenRights } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/screen rights.svg\";\nimport { ReactComponent as UserRole } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/user role template.svg\";\nimport { ReactComponent as Users } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/users.svg\";\nimport { ReactComponent as MISRights } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/mis rights.svg\";\nimport { ReactComponent as AuditTrail } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/audit trail.svg\";\nimport { ReactComponent as UserRoleConfiguration } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/user role configuration.svg\";\nimport { ReactComponent as ExceptionLogs } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/exception logs.svg\";\nimport { ReactComponent as LIMSELNSiteMapping } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/lims eln sitemapping.svg\";\nimport { ReactComponent as LIMSELNUserMapping } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/lims eln usermapping.svg\";\nimport { ReactComponent as Site } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/site.svg\";\nimport { ReactComponent as Department } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/department.svg\";\nimport { ReactComponent as Lab } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/lab.svg\";\nimport { ReactComponent as Section } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/section.svg\";\nimport { ReactComponent as Organisation } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/organisation.svg\";\nimport { ReactComponent as MethodCategory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/method category.svg\";\nimport { ReactComponent as Method } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/method.svg\";\nimport { ReactComponent as TestCategory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/test category.svg\";\nimport { ReactComponent as TestMaster } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/test master.svg\";\nimport { ReactComponent as TestPricing } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/test pricing.svg\";\nimport { ReactComponent as TemplateMaster } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/template master.svg\";\nimport { ReactComponent as TestGroup } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/test group.svg\";\nimport { ReactComponent as InstrumentCategory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/instrument category.svg\";\nimport { ReactComponent as Instrument } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/instrument.svg\";\nimport { ReactComponent as MaterialCategory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/material category.svg\";\nimport { ReactComponent as Material } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/material.svg\";\nimport { ReactComponent as MaterialInventory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/materialinventory.svg\";\nimport { ReactComponent as MaterialGrade } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/material grade.svg\";\nimport { ReactComponent as QBCategory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/qb category.svg\";\nimport { ReactComponent as QB } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/qb.svg\";\nimport { ReactComponent as Checklist } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/checklist.svg\";\nimport { ReactComponent as Country } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/country.svg\";\nimport { ReactComponent as SupplierCategory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/supplier category.svg\";\nimport { ReactComponent as Supplier } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/supplier.svg\";\nimport { ReactComponent as ClientCategory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/client category.svg\";\nimport { ReactComponent as Client } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/client.svg\";\nimport { ReactComponent as Courier } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/courier.svg\";\nimport { ReactComponent as SampleCategory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sample category.svg\";\nimport { ReactComponent as SampleType } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/product.svg\";\nimport { ReactComponent as Component } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/component.svg\";\nimport { ReactComponent as ReportDesigner } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/report designer.svg\";\nimport { ReactComponent as Region } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/region.svg\";\nimport { ReactComponent as District } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/district.svg\";\nimport { ReactComponent as City } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/city.svg\";\nimport { ReactComponent as InstitutionCategory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/institution category.svg\";\nimport { ReactComponent as Institution } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/institution.svg\";\nimport { ReactComponent as InstitutionDepartment } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/institution department.svg\";\nimport { ReactComponent as Submitter } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/submitter.svg\";\nimport { ReactComponent as PatientMaster } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/patient master.svg\";\nimport { ReactComponent as ProjectType } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/project type.svg\";\nimport { ReactComponent as ProjectMaster } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/project master.svg\";\nimport { ReactComponent as ProjectView } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/project view.svg\";\nimport { ReactComponent as ReportingTool } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/stimulsoft.svg\";\nimport { ReactComponent as Reports } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/reports.svg\";\nimport { ReactComponent as SqlBuilder } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sql builder.svg\";\nimport { ReactComponent as DashboardTypes } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/dashboard types.svg\";\nimport { ReactComponent as DashboardView } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/dashboard view.svg\";\nimport { ReactComponent as DashboardHomeConfig } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/dashboard home config.svg\";\nimport { ReactComponent as AlertView } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/alert view.svg\";\nimport { ReactComponent as QueryBuilder } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/query builder.svg\";\nimport { ReactComponent as Technique } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/technique.svg\";\nimport { ReactComponent as TrainingCategory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/training category.svg\";\nimport { ReactComponent as TrainingCertification } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/training & certification.svg\";\nimport { ReactComponent as TrainingUpdate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/training update.svg\";\nimport { ReactComponent as ReScheduleLog } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/reschedule log.svg\";\nimport { ReactComponent as UserView } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/user view.svg\";\nimport { ReactComponent as GoodsIn } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/goods in.svg\";\nimport { ReactComponent as MailHost } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/mail host.svg\";\nimport { ReactComponent as MailTemplate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/mail template.svg\";\nimport { ReactComponent as MailConfig } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/mail config.svg\";\nimport { ReactComponent as MailAlertTransaction } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/mail alert transaction.svg\";\nimport { ReactComponent as MailStatus } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/mail status.svg\";\nimport { ReactComponent as StorageStructure } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sample storage structure.svg\";\nimport { ReactComponent as InterfacerMapping } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Interfacer Mapping.svg\";\nimport { ReactComponent as InstrumentLocation } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Instrument Location.svg\";\nimport { ReactComponent as SyncHistory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sync History.svg\";\nimport { ReactComponent as SampleCycle } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/sample cycle.svg\";\nimport { ReactComponent as SampleCollectionType } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Collection Type.svg\";\nimport { ReactComponent as ContainerStructure } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Container Structure.svg\";\nimport { ReactComponent as MaterialRetrievalCertificate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Material Retrieval Certificate.svg\";\nimport { ReactComponent as SampleStorageMapping } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Storage Mapping.svg\";\nimport { ReactComponent as SampleStorage } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Storage.svg\";\nimport { ReactComponent as SampleListPreparation } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample List preparation.svg\";\nimport { ReactComponent as SampleRetrievalandDisposal } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Retrieval and Disposal.svg\";\nimport { ReactComponent as VisitNumber } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/visit number.svg\";\nimport { ReactComponent as SampleDonor } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Donor.svg\";\nimport { ReactComponent as PatientCategory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Patient Category.svg\";\nimport { ReactComponent as CollectionTubType } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Collection tube type.svg\";\nimport { ReactComponent as StudyIdentity } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Study Identity.svg\";\nimport { ReactComponent as CollectionSite } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Collection Site.svg\";\nimport { ReactComponent as SamplePunchSite } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Punch Site.svg\";\nimport { ReactComponent as ContainerRelocation } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Container Relocation.svg\";\nimport { ReactComponent as PlantGroup } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Plant Group.svg\";\nimport { ReactComponent as FusionPlant } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Fusion Plant.svg\";\nimport { ReactComponent as FusionSite } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Fusion Site.svg\";\nimport { ReactComponent as FusionUsers } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Fusion Users.svg\";\nimport { ReactComponent as FusionPlantUser } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Fusion Plant User.svg\";\nimport { ReactComponent as SampleGroup } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Group.svg\";\nimport { ReactComponent as SamplePlantMapping } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/forms-icon/Sample Plant Mapping.svg\";\n\nconst {\n  faAd,\n  faMagic,\n  faUniversity,\n  faAddressBook\n} = require(\"@fortawesome/free-solid-svg-icons\");\n\nconst {\n  FontAwesomeIcon\n} = require(\"@fortawesome/react-fontawesome\");\n\nconst FormsIcon = props => {\n  switch (props.form.nformcode) {\n    case 208:\n      return /*#__PURE__*/React.createElement(ContainerRelocation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 209:\n      return /*#__PURE__*/React.createElement(FusionPlant, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 210:\n      return /*#__PURE__*/React.createElement(FusionSite, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 211:\n      return /*#__PURE__*/React.createElement(FusionUsers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 212:\n      return /*#__PURE__*/React.createElement(SampleGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 214:\n      return /*#__PURE__*/React.createElement(PlantGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 215:\n      return /*#__PURE__*/React.createElement(FusionPlantUser, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 216:\n      return /*#__PURE__*/React.createElement(SamplePlantMapping, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 2:\n      return /*#__PURE__*/React.createElement(Manufacturer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 3:\n      return /*#__PURE__*/React.createElement(Users, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 5:\n      return /*#__PURE__*/React.createElement(Country, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 7:\n      return /*#__PURE__*/React.createElement(GoodsIn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 8:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 15:\n      return /*#__PURE__*/React.createElement(Component, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 20:\n      return /*#__PURE__*/React.createElement(ClientCategory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 21:\n      return /*#__PURE__*/React.createElement(MethodCategory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 22:\n      return /*#__PURE__*/React.createElement(Method, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 23:\n      return /*#__PURE__*/React.createElement(MaterialCategory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 24:\n      return /*#__PURE__*/React.createElement(SampleCategory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 25:\n      return /*#__PURE__*/React.createElement(TestCategory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 27:\n      return /*#__PURE__*/React.createElement(InstrumentCategory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 28:\n      return /*#__PURE__*/React.createElement(Instrument, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 29:\n      return /*#__PURE__*/React.createElement(Site, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 30:\n      return /*#__PURE__*/React.createElement(Department, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 31:\n      return /*#__PURE__*/React.createElement(Section, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 32:\n      return /*#__PURE__*/React.createElement(Lab, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 33:\n      return /*#__PURE__*/React.createElement(UnitofMeasurement, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 34:\n      return /*#__PURE__*/React.createElement(StorageCondition, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 35:\n      return /*#__PURE__*/React.createElement(StorageLocation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 36:\n      return /*#__PURE__*/React.createElement(Designation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 39:\n      return /*#__PURE__*/React.createElement(SampleType, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 40:\n      return /*#__PURE__*/React.createElement(Material, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 41:\n      return /*#__PURE__*/React.createElement(TestMaster, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 43:\n      return /*#__PURE__*/React.createElement(SampleRegistration, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 45:\n      return /*#__PURE__*/React.createElement(ContainerType, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 47:\n      return /*#__PURE__*/React.createElement(SupplierCategory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 48:\n      return /*#__PURE__*/React.createElement(Supplier, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 49:\n      return /*#__PURE__*/React.createElement(Courier, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 50:\n      return /*#__PURE__*/React.createElement(Client, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 51:\n      return /*#__PURE__*/React.createElement(PasswordPolicy, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 52:\n      return /*#__PURE__*/React.createElement(ScreenRights, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 54:\n      return /*#__PURE__*/React.createElement(Organisation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 55:\n      return /*#__PURE__*/React.createElement(ApprovalConfiguration, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 56:\n      return /*#__PURE__*/React.createElement(ResultEntry, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 57:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 58:\n      return /*#__PURE__*/React.createElement(UserRoleTemplate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 60:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 61:\n      return /*#__PURE__*/React.createElement(TestApproval, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 62:\n      return /*#__PURE__*/React.createElement(TestGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 63:\n      return /*#__PURE__*/React.createElement(TemplateMaster, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 64:\n      return /*#__PURE__*/React.createElement(QBCategory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 65:\n      return /*#__PURE__*/React.createElement(QB, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 66:\n      return /*#__PURE__*/React.createElement(Checklist, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 67:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 70:\n      return /*#__PURE__*/React.createElement(UserRole, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 74:\n      return /*#__PURE__*/React.createElement(MailHost, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 75:\n      return /*#__PURE__*/React.createElement(MailTemplate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 76:\n      return /*#__PURE__*/React.createElement(MailConfig, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 77:\n      return /*#__PURE__*/React.createElement(ReportDesigner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 78:\n      return /*#__PURE__*/React.createElement(AuditTrail, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 81:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 82:\n      return /*#__PURE__*/React.createElement(DashboardTypes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 83:\n      return /*#__PURE__*/React.createElement(SqlBuilder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 86:\n      return /*#__PURE__*/React.createElement(Technique, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 87:\n      return /*#__PURE__*/React.createElement(TrainingCategory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 88:\n      return /*#__PURE__*/React.createElement(TrainingCertification, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 89:\n      return /*#__PURE__*/React.createElement(TrainingUpdate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 95:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 96:\n      return /*#__PURE__*/React.createElement(UserView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 98:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 107:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 108:\n      return /*#__PURE__*/React.createElement(Barcode, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 18\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 110:\n      return /*#__PURE__*/React.createElement(JobAllocation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 111:\n      return /*#__PURE__*/React.createElement(FTPConfig, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 112:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 113:\n      return /*#__PURE__*/React.createElement(TestPricing, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 114:\n      return /*#__PURE__*/React.createElement(MailAlertTransaction, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 115:\n      return /*#__PURE__*/React.createElement(MailStatus, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 117:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 118:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 119:\n      return /*#__PURE__*/React.createElement(UserRoleConfiguration, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 121:\n      return /*#__PURE__*/React.createElement(Reports, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 123:\n      return /*#__PURE__*/React.createElement(DashboardView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 124:\n      return /*#__PURE__*/React.createElement(DashboardHomeConfig, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 125:\n      return /*#__PURE__*/React.createElement(AlertView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 126:\n      return /*#__PURE__*/React.createElement(UserMapping, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 130:\n      return /*#__PURE__*/React.createElement(MISRights, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 131:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 132:\n      return /*#__PURE__*/React.createElement(TemplateDesign, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 133:\n      return /*#__PURE__*/React.createElement(RegistrationType, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 134:\n      return /*#__PURE__*/React.createElement(TemplateMapping, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 22\n        }\n      });\n\n    case 135:\n      return /*#__PURE__*/React.createElement(RegistrationSubType, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 136:\n      return /*#__PURE__*/React.createElement(ReScheduleLog, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 137:\n      return /*#__PURE__*/React.createElement(PatientMaster, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 138:\n      return /*#__PURE__*/React.createElement(MaterialInventory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 140:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 141:\n      return /*#__PURE__*/React.createElement(SampleTestComments, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 142:\n      return /*#__PURE__*/React.createElement(MyJobs, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 143:\n      return /*#__PURE__*/React.createElement(ReleaseReport, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 144:\n      return /*#__PURE__*/React.createElement(QueryBuilder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 145:\n      return /*#__PURE__*/React.createElement(ExceptionLogs, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 146:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 147:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 148:\n      return /*#__PURE__*/React.createElement(Language, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 149:\n      return /*#__PURE__*/React.createElement(InstitutionDepartment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 150:\n      return /*#__PURE__*/React.createElement(City, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 151:\n      return /*#__PURE__*/React.createElement(InstitutionCategory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 152:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 153:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 154:\n      return /*#__PURE__*/React.createElement(StorageCategory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 156:\n      return /*#__PURE__*/React.createElement(MaterialGrade, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 158:\n      return /*#__PURE__*/React.createElement(Institution, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 159:\n      return /*#__PURE__*/React.createElement(Submitter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 160:\n      return /*#__PURE__*/React.createElement(Region, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 161:\n      return /*#__PURE__*/React.createElement(District, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 162:\n      return /*#__PURE__*/React.createElement(Reason, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 163:\n      return /*#__PURE__*/React.createElement(ProjectType, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 164:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 165:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 166:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 167:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 168:\n      return /*#__PURE__*/React.createElement(StorageStructure, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 169:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 170:\n      return /*#__PURE__*/React.createElement(ReportingTool, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 171:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 172:\n      return /*#__PURE__*/React.createElement(ProjectMaster, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 173:\n      return /*#__PURE__*/React.createElement(Worklist, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 174:\n      return /*#__PURE__*/React.createElement(RunBatchCreation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 175:\n      return /*#__PURE__*/React.createElement(ChainofCustody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 176:\n      return /*#__PURE__*/React.createElement(DiscountBand, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 177:\n      return /*#__PURE__*/React.createElement(Quotation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 178:\n      return /*#__PURE__*/React.createElement(VATBand, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 179:\n      return /*#__PURE__*/React.createElement(ProjectView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 180:\n      return /*#__PURE__*/React.createElement(LIMSELNUserMapping, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 181:\n      return /*#__PURE__*/React.createElement(LIMSELNSiteMapping, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 182:\n      return /*#__PURE__*/React.createElement(OEM, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 183:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 184:\n      return /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        height: \"60\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 185:\n      return /*#__PURE__*/React.createElement(InstrumentLocation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 187:\n      return /*#__PURE__*/React.createElement(CollectionTubType, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 188:\n      return /*#__PURE__*/React.createElement(PatientCategory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 189:\n      return /*#__PURE__*/React.createElement(SampleCycle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 190:\n      return /*#__PURE__*/React.createElement(SampleCollectionType, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 191:\n      return /*#__PURE__*/React.createElement(SampleDonor, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 192:\n      return /*#__PURE__*/React.createElement(StudyIdentity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 193:\n      return /*#__PURE__*/React.createElement(CollectionSite, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 194:\n      return /*#__PURE__*/React.createElement(SamplePunchSite, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 195:\n      return /*#__PURE__*/React.createElement(VisitNumber, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 196:\n      return /*#__PURE__*/React.createElement(SyncHistory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 197:\n      return /*#__PURE__*/React.createElement(SampleStorageMapping, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 198:\n      return /*#__PURE__*/React.createElement(SampleListPreparation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 199:\n      return /*#__PURE__*/React.createElement(SampleStorage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 22\n        }\n      });\n      break;\n\n    case 200:\n      return /*#__PURE__*/React.createElement(InterfacerMapping, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 201:\n      return /*#__PURE__*/React.createElement(ContainerStructure, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 202:\n      return /*#__PURE__*/React.createElement(MaterialRetrievalCertificate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    case 203:\n      return /*#__PURE__*/React.createElement(SampleRetrievalandDisposal, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 22\n        }\n      }); // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\n\n      break;\n\n    default:\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"home-default-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 25\n        }\n      }, props.form['sdisplayname'].substring(0, 1).toUpperCase()));\n      break;\n  }\n};\n\nexport default FormsIcon;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/home/FormIcon.js"],"names":["React","Form","Image","faAd","faMagic","faUniversity","faAddressBook","require","FontAwesomeIcon","FormsIcon","props","form","nformcode","sformname","toLowerCase","substring","toUpperCase"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Form, Image } from 'react-bootstrap'\r\nimport { ReactComponent as Manufacturer } from '../../assets/image/forms-icon/manufacturer.svg';\r\nimport { ReactComponent as DiscountBand } from '../../assets/image/forms-icon/discount band.svg';\r\nimport { ReactComponent as VATBand } from '../../assets/image/forms-icon/vat band.svg';\r\nimport { ReactComponent as OEM } from '../../assets/image/forms-icon/oem.svg';\r\nimport { ReactComponent as Quotation } from '../../assets/image/forms-icon/quotation.svg';\r\nimport { ReactComponent as SampleRegistration } from '../../assets/image/forms-icon/sample registration.svg';            \r\nimport { ReactComponent as JobAllocation} from '../../assets/image/forms-icon/job allocation.svg';            \r\nimport { ReactComponent as Worklist} from '../../assets/image/forms-icon/worklist.svg';             \r\nimport { ReactComponent as MyJobs} from '../../assets/image/forms-icon/my jobs.svg';             \r\nimport { ReactComponent as RunBatchCreation} from '../../assets/image/forms-icon/run batch creation.svg';             \r\nimport { ReactComponent as ResultEntry} from '../../assets/image/forms-icon/result entry.svg';             \r\nimport { ReactComponent as TestApproval} from '../../assets/image/forms-icon/test approval.svg';             \r\nimport { ReactComponent as StorageCategory} from '../../assets/image/forms-icon/storage category.svg';             \r\nimport { ReactComponent as ChainofCustody} from '../../assets/image/forms-icon/chain of custody.svg';             \r\nimport { ReactComponent as ReleaseReport} from '../../assets/image/forms-icon/release.svg';             \r\nimport { ReactComponent as Reason} from '../../assets/image/forms-icon/reason.svg';             \r\nimport { ReactComponent as UnitofMeasurement} from '../../assets/image/forms-icon/unit of measurement.svg';             \r\nimport { ReactComponent as StorageCondition} from '../../assets/image/forms-icon/storage condition.svg';              \r\nimport { ReactComponent as StorageLocation} from '../../assets/image/forms-icon/storage location.svg';              \r\nimport { ReactComponent as ContainerType} from '../../assets/image/forms-icon/container type.svg';              \r\nimport { ReactComponent as Barcode} from '../../assets/image/forms-icon/barcode.svg';              \r\nimport { ReactComponent as SampleTestComments} from '../../assets/image/forms-icon/sample test comments.svg';              \r\nimport { ReactComponent as RegistrationType} from '../../assets/image/forms-icon/registration type.svg';              \r\nimport { ReactComponent as RegistrationSubType} from '../../assets/image/forms-icon/registration sub type.svg';              \r\nimport { ReactComponent as TemplateDesign} from '../../assets/image/forms-icon/template design.svg';              \r\nimport { ReactComponent as TemplateMapping} from '../../assets/image/forms-icon/template mapping.svg';              \r\nimport { ReactComponent as UserRoleTemplate} from '../../assets/image/forms-icon/user role template.svg';              \r\nimport { ReactComponent as ApprovalConfiguration} from '../../assets/image/forms-icon/approval configuration.svg';              \r\nimport { ReactComponent as FTPConfig} from '../../assets/image/forms-icon/ftp config.svg';              \r\nimport { ReactComponent as UserMapping} from '../../assets/image/forms-icon/user mapping.svg';              \r\nimport { ReactComponent as Language} from '../../assets/image/forms-icon/language.svg';              \r\nimport { ReactComponent as Designation} from '../../assets/image/forms-icon/designation.svg';              \r\nimport { ReactComponent as PasswordPolicy} from '../../assets/image/forms-icon/password policy.svg';              \r\nimport { ReactComponent as ScreenRights} from '../../assets/image/forms-icon/screen rights.svg';              \r\nimport { ReactComponent as UserRole} from '../../assets/image/forms-icon/user role template.svg';              \r\nimport { ReactComponent as Users} from '../../assets/image/forms-icon/users.svg';              \r\nimport { ReactComponent as MISRights} from '../../assets/image/forms-icon/mis rights.svg';              \r\nimport { ReactComponent as AuditTrail} from '../../assets/image/forms-icon/audit trail.svg';              \r\nimport { ReactComponent as UserRoleConfiguration} from '../../assets/image/forms-icon/user role configuration.svg';              \r\nimport { ReactComponent as ExceptionLogs} from '../../assets/image/forms-icon/exception logs.svg';              \r\nimport { ReactComponent as LIMSELNSiteMapping} from '../../assets/image/forms-icon/lims eln sitemapping.svg';              \r\nimport { ReactComponent as LIMSELNUserMapping} from '../../assets/image/forms-icon/lims eln usermapping.svg';              \r\nimport { ReactComponent as Site} from '../../assets/image/forms-icon/site.svg';              \r\nimport { ReactComponent as Department} from '../../assets/image/forms-icon/department.svg';              \r\nimport { ReactComponent as Lab} from '../../assets/image/forms-icon/lab.svg';              \r\nimport { ReactComponent as Section} from '../../assets/image/forms-icon/section.svg';              \r\nimport { ReactComponent as Organisation} from '../../assets/image/forms-icon/organisation.svg';              \r\nimport { ReactComponent as MethodCategory} from '../../assets/image/forms-icon/method category.svg';              \r\nimport { ReactComponent as Method} from '../../assets/image/forms-icon/method.svg';              \r\nimport { ReactComponent as TestCategory} from '../../assets/image/forms-icon/test category.svg';              \r\nimport { ReactComponent as TestMaster} from '../../assets/image/forms-icon/test master.svg';              \r\nimport { ReactComponent as TestPricing} from '../../assets/image/forms-icon/test pricing.svg';              \r\nimport { ReactComponent as TemplateMaster} from '../../assets/image/forms-icon/template master.svg';              \r\nimport { ReactComponent as TestGroup} from '../../assets/image/forms-icon/test group.svg';              \r\nimport { ReactComponent as InstrumentCategory} from '../../assets/image/forms-icon/instrument category.svg';              \r\nimport { ReactComponent as Instrument} from '../../assets/image/forms-icon/instrument.svg';              \r\nimport { ReactComponent as MaterialCategory} from '../../assets/image/forms-icon/material category.svg';              \r\nimport { ReactComponent as Material} from '../../assets/image/forms-icon/material.svg';              \r\nimport { ReactComponent as MaterialInventory} from '../../assets/image/forms-icon/materialinventory.svg';              \r\nimport { ReactComponent as MaterialGrade} from '../../assets/image/forms-icon/material grade.svg';              \r\nimport { ReactComponent as QBCategory} from '../../assets/image/forms-icon/qb category.svg';              \r\nimport { ReactComponent as QB} from '../../assets/image/forms-icon/qb.svg';              \r\nimport { ReactComponent as Checklist} from '../../assets/image/forms-icon/checklist.svg';              \r\nimport { ReactComponent as Country} from '../../assets/image/forms-icon/country.svg';              \r\nimport { ReactComponent as SupplierCategory} from '../../assets/image/forms-icon/supplier category.svg';              \r\nimport { ReactComponent as Supplier} from '../../assets/image/forms-icon/supplier.svg';              \r\nimport { ReactComponent as ClientCategory} from '../../assets/image/forms-icon/client category.svg';              \r\nimport { ReactComponent as Client} from '../../assets/image/forms-icon/client.svg';              \r\nimport { ReactComponent as Courier} from '../../assets/image/forms-icon/courier.svg';              \r\nimport { ReactComponent as SampleCategory} from '../../assets/image/forms-icon/sample category.svg';              \r\nimport { ReactComponent as SampleType} from '../../assets/image/forms-icon/product.svg';              \r\nimport { ReactComponent as Component} from '../../assets/image/forms-icon/component.svg';              \r\nimport { ReactComponent as ReportDesigner} from '../../assets/image/forms-icon/report designer.svg';              \r\nimport { ReactComponent as Region} from '../../assets/image/forms-icon/region.svg';              \r\nimport { ReactComponent as District} from '../../assets/image/forms-icon/district.svg';              \r\nimport { ReactComponent as City} from '../../assets/image/forms-icon/city.svg';              \r\nimport { ReactComponent as InstitutionCategory} from '../../assets/image/forms-icon/institution category.svg';              \r\nimport { ReactComponent as Institution} from '../../assets/image/forms-icon/institution.svg';              \r\nimport { ReactComponent as InstitutionDepartment} from '../../assets/image/forms-icon/institution department.svg';              \r\nimport { ReactComponent as Submitter} from '../../assets/image/forms-icon/submitter.svg';              \r\nimport { ReactComponent as PatientMaster} from '../../assets/image/forms-icon/patient master.svg';              \r\nimport { ReactComponent as ProjectType} from '../../assets/image/forms-icon/project type.svg';           \r\nimport { ReactComponent as ProjectMaster} from '../../assets/image/forms-icon/project master.svg';             \r\nimport { ReactComponent as ProjectView} from '../../assets/image/forms-icon/project view.svg';              \r\nimport { ReactComponent as ReportingTool} from '../../assets/image/forms-icon/stimulsoft.svg';              \r\nimport { ReactComponent as Reports} from '../../assets/image/forms-icon/reports.svg';              \r\nimport { ReactComponent as SqlBuilder} from '../../assets/image/forms-icon/sql builder.svg';              \r\nimport { ReactComponent as DashboardTypes} from '../../assets/image/forms-icon/dashboard types.svg';              \r\nimport { ReactComponent as DashboardView} from '../../assets/image/forms-icon/dashboard view.svg';              \r\nimport { ReactComponent as DashboardHomeConfig} from '../../assets/image/forms-icon/dashboard home config.svg';              \r\nimport { ReactComponent as AlertView} from '../../assets/image/forms-icon/alert view.svg';              \r\nimport { ReactComponent as QueryBuilder} from '../../assets/image/forms-icon/query builder.svg';              \r\nimport { ReactComponent as Technique} from '../../assets/image/forms-icon/technique.svg';              \r\nimport { ReactComponent as TrainingCategory} from '../../assets/image/forms-icon/training category.svg';              \r\nimport { ReactComponent as TrainingCertification} from '../../assets/image/forms-icon/training & certification.svg';              \r\nimport { ReactComponent as TrainingUpdate} from '../../assets/image/forms-icon/training update.svg';              \r\nimport { ReactComponent as ReScheduleLog} from '../../assets/image/forms-icon/reschedule log.svg';              \r\nimport { ReactComponent as UserView} from '../../assets/image/forms-icon/user view.svg';              \r\nimport { ReactComponent as GoodsIn} from '../../assets/image/forms-icon/goods in.svg';              \r\nimport { ReactComponent as MailHost} from '../../assets/image/forms-icon/mail host.svg';              \r\nimport { ReactComponent as MailTemplate} from '../../assets/image/forms-icon/mail template.svg';              \r\nimport { ReactComponent as MailConfig} from '../../assets/image/forms-icon/mail config.svg';              \r\nimport { ReactComponent as MailAlertTransaction} from '../../assets/image/forms-icon/mail alert transaction.svg';              \r\nimport { ReactComponent as MailStatus} from '../../assets/image/forms-icon/mail status.svg';              \r\nimport { ReactComponent as StorageStructure} from '../../assets/image/forms-icon/sample storage structure.svg';              \r\nimport { ReactComponent as InterfacerMapping} from '../../assets/image/forms-icon/Interfacer Mapping.svg';              \r\nimport { ReactComponent as InstrumentLocation} from '../../assets/image/forms-icon/Instrument Location.svg';              \r\nimport { ReactComponent as SyncHistory} from '../../assets/image/forms-icon/Sync History.svg';              \r\nimport { ReactComponent as SampleCycle} from '../../assets/image/forms-icon/sample cycle.svg';              \r\nimport { ReactComponent as SampleCollectionType} from '../../assets/image/forms-icon/Sample Collection Type.svg';                 \r\nimport { ReactComponent as ContainerStructure} from '../../assets/image/forms-icon/Container Structure.svg';              \r\nimport { ReactComponent as MaterialRetrievalCertificate} from '../../assets/image/forms-icon/Material Retrieval Certificate.svg';              \r\nimport { ReactComponent as SampleStorageMapping} from '../../assets/image/forms-icon/Sample Storage Mapping.svg';              \r\nimport { ReactComponent as SampleStorage} from '../../assets/image/forms-icon/Sample Storage.svg';       \r\nimport { ReactComponent as SampleListPreparation} from '../../assets/image/forms-icon/Sample List preparation.svg'; \r\nimport { ReactComponent as SampleRetrievalandDisposal} from '../../assets/image/forms-icon/Sample Retrieval and Disposal.svg'; \r\nimport { ReactComponent as VisitNumber} from '../../assets/image/forms-icon/visit number.svg'; \r\nimport { ReactComponent as SampleDonor} from '../../assets/image/forms-icon/Sample Donor.svg'; \r\nimport { ReactComponent as PatientCategory} from '../../assets/image/forms-icon/Patient Category.svg'; \r\nimport { ReactComponent as CollectionTubType} from '../../assets/image/forms-icon/Collection tube type.svg'; \r\nimport { ReactComponent as StudyIdentity} from '../../assets/image/forms-icon/Study Identity.svg'; \r\nimport { ReactComponent as CollectionSite} from '../../assets/image/forms-icon/Collection Site.svg'; \r\nimport { ReactComponent as SamplePunchSite} from '../../assets/image/forms-icon/Sample Punch Site.svg'; \r\nimport { ReactComponent as ContainerRelocation } from '../../assets/image/forms-icon/Container Relocation.svg'; \r\nimport { ReactComponent as PlantGroup } from '../../assets/image/forms-icon/Plant Group.svg'; \r\nimport { ReactComponent as FusionPlant  } from '../../assets/image/forms-icon/Fusion Plant.svg'; \r\nimport { ReactComponent as FusionSite  } from '../../assets/image/forms-icon/Fusion Site.svg'; \r\nimport { ReactComponent as FusionUsers  } from '../../assets/image/forms-icon/Fusion Users.svg'; \r\nimport { ReactComponent as FusionPlantUser  } from '../../assets/image/forms-icon/Fusion Plant User.svg'; \r\nimport { ReactComponent as SampleGroup  } from '../../assets/image/forms-icon/Sample Group.svg'; \r\nimport { ReactComponent as SamplePlantMapping  } from '../../assets/image/forms-icon/Sample Plant Mapping.svg'; \r\n\r\nconst { faAd, faMagic, faUniversity, faAddressBook } = require(\"@fortawesome/free-solid-svg-icons\")\r\nconst { FontAwesomeIcon } = require(\"@fortawesome/react-fontawesome\")\r\n\r\n\r\n\r\nconst FormsIcon = (props) => {\r\n    switch (props.form.nformcode) { \r\n\r\n\r\n        case 208:\r\n            return   <ContainerRelocation  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 209:\r\n            return   <FusionPlant  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 210:\r\n            return   <FusionSite  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n        case 211:\r\n            return   <FusionUsers  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n        case 212:\r\n            return   <SampleGroup  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 214:\r\n            return   <PlantGroup  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 215:\r\n            return   <FusionPlantUser  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 216:\r\n            return   <SamplePlantMapping  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n\r\n        case 2:\r\n            return   <Manufacturer />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 3:\r\n            return   <Users />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 5:\r\n            return   <Country />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 7:\r\n            return   <GoodsIn />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 8:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 15:\r\n            return   <Component />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 20:\r\n            return   <ClientCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 21:\r\n            return   <MethodCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 22:\r\n            return   <Method />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 23:\r\n            return   <MaterialCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 24:\r\n            return   <SampleCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 25:\r\n            return   <TestCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 27:\r\n            return   <InstrumentCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 28:\r\n            return   <Instrument />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 29:\r\n            return   <Site />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 30:\r\n            return   <Department />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 31:\r\n            return   <Section />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 32:\r\n            return   <Lab />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 33:\r\n            return   <UnitofMeasurement />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 34:\r\n            return   <StorageCondition />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 35:\r\n            return   <StorageLocation  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 36:\r\n            return   <Designation />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;   \r\n        \r\n        case 39:\r\n            return   <SampleType />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 40:\r\n            return   <Material />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n        \r\n        case 41:\r\n            return   <TestMaster />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 43:\r\n            return   <SampleRegistration  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 45:\r\n            return   <ContainerType />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 47:\r\n            return   <SupplierCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 48:\r\n            return   <Supplier />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 49:\r\n            return   <Courier />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 50:\r\n            return   <Client />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 51:\r\n            return   <PasswordPolicy />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 52:\r\n            return   <ScreenRights />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;            \r\n\r\n        case 54:\r\n            return   <Organisation />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 55:\r\n            return   <ApprovalConfiguration />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 56:\r\n            return   <ResultEntry  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 57:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 58:\r\n            return   <UserRoleTemplate />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;    \r\n\r\n        case 60:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 61:\r\n            return   <TestApproval  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 62:\r\n            return   <TestGroup />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 63:\r\n            return   <TemplateMaster />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n         case 64:\r\n            return   <QBCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n         case 65:\r\n            return   <QB />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 66:\r\n            return   <Checklist />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 67:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n        case 70:\r\n            return   <UserRole />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 74:\r\n            return   <MailHost  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 75:\r\n            return   <MailTemplate />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 76:\r\n            return   <MailConfig />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 77:\r\n            return   <ReportDesigner />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 78:\r\n            return   <AuditTrail />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 81:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 82:\r\n            return   <DashboardTypes />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 83:\r\n            return   <SqlBuilder />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 86:\r\n            return   <Technique />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 87:\r\n            return   <TrainingCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;   \r\n\r\n        case 88:\r\n            return   <TrainingCertification />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;     \r\n\r\n        case 89:\r\n            return   <TrainingUpdate />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;  \r\n            \r\n        case 95:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n        case 96:\r\n            return   <UserView />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 98:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 107:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 108:\r\n        return   <Barcode  />\r\n        // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n        break;\r\n\r\n        case 110:\r\n            return   <JobAllocation />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 111:\r\n            return   <FTPConfig />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 112:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 113:\r\n            return   <TestPricing/>\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 114:\r\n            return   <MailAlertTransaction />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 115:\r\n            return   <MailStatus  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 117:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n\r\n        case 118:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 119:\r\n            return   <UserRoleConfiguration />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 121:\r\n            return   <Reports />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 123:\r\n            return   <DashboardView />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 124:\r\n            return   <DashboardHomeConfig />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 125:\r\n            return   <AlertView />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 126:\r\n            return   <UserMapping />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 130:\r\n            return   <MISRights />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 131:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;        \r\n        \r\n\r\n        case 132:\r\n            return   <TemplateDesign />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 133:\r\n            return   <RegistrationType />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 134:\r\n            return   <TemplateMapping />            \r\n \r\n        case 135:\r\n            return   <RegistrationSubType />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 136:\r\n            return   <ReScheduleLog/>\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 137:\r\n            return   <PatientMaster />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 138:\r\n            return   <MaterialInventory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 140:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 141:\r\n            return   <SampleTestComments />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 142:\r\n            return   <MyJobs />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 143:\r\n            return   <ReleaseReport />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n                break;\r\n\r\n        case 144:\r\n            return   <QueryBuilder />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 145:\r\n            return   <ExceptionLogs />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 146:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n            \r\n        case 147:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 148:\r\n            return   <Language />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 149:\r\n            return   <InstitutionDepartment />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 150:\r\n            return   <City />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 151:\r\n            return   <InstitutionCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 152:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 153:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 154:\r\n            return   <StorageCategory />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 156:\r\n            return   <MaterialGrade />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 158:\r\n            return   <Institution />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 159:\r\n            return   <Submitter />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 160:\r\n            return   <Region />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 161:\r\n            return   <District />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 162:\r\n            return   <Reason />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 163:\r\n            return   <ProjectType />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 164:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 165:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 166:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 167:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 168:\r\n            return   <StorageStructure />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 169:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 170:\r\n            return   <ReportingTool />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n\r\n        case 171:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n\r\n        case 172:\r\n            return   <ProjectMaster />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 173:\r\n            return   <Worklist />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 174:\r\n            return   <RunBatchCreation />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 175:\r\n            return   <ChainofCustody />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 176:\r\n            return   <DiscountBand />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 177:\r\n            return   <Quotation  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 178:\r\n            return   <VATBand />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n        \r\n        case 179:\r\n            return   <ProjectView />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 180:\r\n            return   <LIMSELNUserMapping  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 181:\r\n            return   <LIMSELNSiteMapping />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 182:\r\n            return   <OEM  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 183:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 184:\r\n            return   <Image src={require(`../../assets/image/forms-icon/${props.form.sformname.toLowerCase()}.svg`)} alt=\"sidebar\" height=\"60\"  />\r\n            break; \r\n\r\n        case 185:\r\n            return   <InstrumentLocation />            \r\n            break; \r\n            \r\n        case 187:\r\n            return   <CollectionTubType />            \r\n            break;\r\n\r\n        case 188:\r\n            return   <PatientCategory />            \r\n            break;\r\n        \r\n        case 189:\r\n            return   <SampleCycle />            \r\n            break;\r\n\r\n        case 190:\r\n            return   <SampleCollectionType/>            \r\n            break;\r\n\r\n        case 191:\r\n            return   <SampleDonor/>            \r\n            break;\r\n\r\n        case 192:\r\n            return   <StudyIdentity/>            \r\n            break;\r\n\r\n        case 193:\r\n            return   <CollectionSite />            \r\n            break; \r\n\r\n        case 194:\r\n            return   <SamplePunchSite />            \r\n            break; \r\n            \r\n        case 195:\r\n            return   <VisitNumber />            \r\n            break; \r\n\r\n        case 196:\r\n            return   <SyncHistory />            \r\n            break;  \r\n            \r\n        case 197:\r\n            return   <SampleStorageMapping />            \r\n            break;  \r\n        \r\n        case 198:\r\n            return   <SampleListPreparation />            \r\n            break;\r\n\r\n        case 199:\r\n            return   <SampleStorage/>            \r\n            break;        \r\n        \r\n        case 200:\r\n            return   <InterfacerMapping/>\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;      \r\n        \r\n        case 201:\r\n            return   <ContainerStructure/>\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;  \r\n        \r\n        case 202:\r\n            return   <MaterialRetrievalCertificate/>\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        case 203:\r\n            return   <SampleRetrievalandDisposal/>\r\n            // <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n\r\n        default:\r\n            return   <>\r\n                        <span className='home-default-icon'>\r\n                            {/* <FontAwesomeIcon icon={faUniversity} size={props.size}/>  */}\r\n                            {props.form['sdisplayname'].substring(0, 1).toUpperCase()}\r\n                        </span>\r\n                    </>           \r\n            break;\r\n    }\r\n\r\n}\r\n\r\nexport default FormsIcon;"]},"metadata":{},"sourceType":"module"}