{"ast":null,"code":"import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';\nimport { useLocalization } from '@progress/kendo-react-intl';\nimport { messages, editorOccurrence, editorSeries, editorRecurringConfirmation, editorRecurringDialogTitle, deleteOccurrence, deleteSeries, deleteRecurringDialogTitle, deleteRecurringConfirmation } from '../messages';\nimport { canUseDOM } from '@progress/kendo-react-common';\nimport { Button } from '@progress/kendo-react-buttons';\n/* eslint-disable max-len */\n\n/**\n * Represents the default `occurrenceDialog` component rendered by the [KendoReact SchedulerEditItem component]({% slug api_scheduler_scheduleredititem  %}).\n */\n\nexport var SchedulerOccurrenceDialog = React.forwardRef(function (props, ref) {\n  // tslint:enable:max-line-length\n  var isRemove = props.isRemove,\n      onClose = props.onClose,\n      onSeriesClick = props.onSeriesClick,\n      onOccurrenceClick = props.onOccurrenceClick;\n  var target = React.useRef(null);\n  React.useImperativeHandle(target, function () {\n    return {\n      props: props\n    };\n  });\n  React.useImperativeHandle(ref, function () {\n    return target.current;\n  });\n  var localizationService = useLocalization();\n\n  var localizeMessage = function (message) {\n    return localizationService.toLanguageString(message, messages[message]);\n  };\n\n  var editOccurrenceMessage = localizeMessage(editorOccurrence);\n  var editSeriesMessage = localizeMessage(editorSeries);\n  var editRecurringConfirmationMessage = localizeMessage(editorRecurringConfirmation);\n  var editRecurringDialogTitleMessage = localizeMessage(editorRecurringDialogTitle);\n  var deleteOccurrenceMessage = localizeMessage(deleteOccurrence);\n  var deleteSeriesMessage = localizeMessage(deleteSeries);\n  var deleteRecurringDialogTitleMessage = localizeMessage(deleteRecurringDialogTitle);\n  var deleteRecurringConfirmationMessage = localizeMessage(deleteRecurringConfirmation);\n  var titleMessage = isRemove ? deleteRecurringDialogTitleMessage : editRecurringDialogTitleMessage;\n  var confirmationMessage = isRemove ? deleteRecurringConfirmationMessage : editRecurringConfirmationMessage;\n  var occurrenceMessage = isRemove ? deleteOccurrenceMessage : editOccurrenceMessage;\n  var seriesMessage = isRemove ? deleteSeriesMessage : editSeriesMessage;\n  var handleClose = React.useCallback(function (_a) {\n    var syntheticEvent = _a.syntheticEvent;\n\n    if (!onClose) {\n      return;\n    }\n\n    onClose.call(undefined, {\n      syntheticEvent: syntheticEvent,\n      value: null,\n      target: target.current\n    });\n  }, [onClose]);\n  var handleSeriesClick = React.useCallback(function (syntheticEvent) {\n    if (!onSeriesClick) {\n      return;\n    }\n\n    onSeriesClick.call(undefined, {\n      syntheticEvent: syntheticEvent,\n      value: null,\n      target: target.current\n    });\n  }, [onSeriesClick]);\n  var handleOccurrenceClick = React.useCallback(function (syntheticEvent) {\n    if (!onOccurrenceClick) {\n      return;\n    }\n\n    onOccurrenceClick.call(undefined, {\n      syntheticEvent: syntheticEvent,\n      value: null,\n      target: target.current\n    });\n  }, [onOccurrenceClick]);\n  return canUseDOM ? ReactDOM.createPortal(React.createElement(Dialog, {\n    title: titleMessage,\n    onClose: handleClose\n  }, confirmationMessage, React.createElement(DialogActionsBar, null, React.createElement(Button, {\n    onClick: handleOccurrenceClick\n  }, occurrenceMessage), React.createElement(Button, {\n    onClick: handleSeriesClick\n  }, seriesMessage))), document && document.body) : null;\n});\nSchedulerOccurrenceDialog.displayName = 'KendoReactSchedulerSchedulerOccurrenceDialog';","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/node_modules/@progress/kendo-react-scheduler/dist/es/components/SchedulerOccurrenceDialog.js"],"names":["React","ReactDOM","Dialog","DialogActionsBar","useLocalization","messages","editorOccurrence","editorSeries","editorRecurringConfirmation","editorRecurringDialogTitle","deleteOccurrence","deleteSeries","deleteRecurringDialogTitle","deleteRecurringConfirmation","canUseDOM","Button","SchedulerOccurrenceDialog","forwardRef","props","ref","isRemove","onClose","onSeriesClick","onOccurrenceClick","target","useRef","useImperativeHandle","current","localizationService","localizeMessage","message","toLanguageString","editOccurrenceMessage","editSeriesMessage","editRecurringConfirmationMessage","editRecurringDialogTitleMessage","deleteOccurrenceMessage","deleteSeriesMessage","deleteRecurringDialogTitleMessage","deleteRecurringConfirmationMessage","titleMessage","confirmationMessage","occurrenceMessage","seriesMessage","handleClose","useCallback","_a","syntheticEvent","call","undefined","value","handleSeriesClick","handleOccurrenceClick","createPortal","createElement","title","onClick","document","body","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';\nimport { useLocalization } from '@progress/kendo-react-intl';\nimport { messages, editorOccurrence, editorSeries, editorRecurringConfirmation, editorRecurringDialogTitle, deleteOccurrence, deleteSeries, deleteRecurringDialogTitle, deleteRecurringConfirmation } from '../messages';\nimport { canUseDOM } from '@progress/kendo-react-common';\nimport { Button } from '@progress/kendo-react-buttons';\n/* eslint-disable max-len */\n/**\n * Represents the default `occurrenceDialog` component rendered by the [KendoReact SchedulerEditItem component]({% slug api_scheduler_scheduleredititem  %}).\n */\nexport var SchedulerOccurrenceDialog = React.forwardRef(function (props, ref) {\n    // tslint:enable:max-line-length\n    var isRemove = props.isRemove, onClose = props.onClose, onSeriesClick = props.onSeriesClick, onOccurrenceClick = props.onOccurrenceClick;\n    var target = React.useRef(null);\n    React.useImperativeHandle(target, function () { return ({ props: props }); });\n    React.useImperativeHandle(ref, function () { return target.current; });\n    var localizationService = useLocalization();\n    var localizeMessage = function (message) {\n        return localizationService.toLanguageString(message, messages[message]);\n    };\n    var editOccurrenceMessage = localizeMessage(editorOccurrence);\n    var editSeriesMessage = localizeMessage(editorSeries);\n    var editRecurringConfirmationMessage = localizeMessage(editorRecurringConfirmation);\n    var editRecurringDialogTitleMessage = localizeMessage(editorRecurringDialogTitle);\n    var deleteOccurrenceMessage = localizeMessage(deleteOccurrence);\n    var deleteSeriesMessage = localizeMessage(deleteSeries);\n    var deleteRecurringDialogTitleMessage = localizeMessage(deleteRecurringDialogTitle);\n    var deleteRecurringConfirmationMessage = localizeMessage(deleteRecurringConfirmation);\n    var titleMessage = isRemove ? deleteRecurringDialogTitleMessage : editRecurringDialogTitleMessage;\n    var confirmationMessage = isRemove ? deleteRecurringConfirmationMessage : editRecurringConfirmationMessage;\n    var occurrenceMessage = isRemove ? deleteOccurrenceMessage : editOccurrenceMessage;\n    var seriesMessage = isRemove ? deleteSeriesMessage : editSeriesMessage;\n    var handleClose = React.useCallback(function (_a) {\n        var syntheticEvent = _a.syntheticEvent;\n        if (!onClose) {\n            return;\n        }\n        onClose.call(undefined, { syntheticEvent: syntheticEvent, value: null, target: target.current });\n    }, [onClose]);\n    var handleSeriesClick = React.useCallback(function (syntheticEvent) {\n        if (!onSeriesClick) {\n            return;\n        }\n        onSeriesClick.call(undefined, { syntheticEvent: syntheticEvent, value: null, target: target.current });\n    }, [onSeriesClick]);\n    var handleOccurrenceClick = React.useCallback(function (syntheticEvent) {\n        if (!onOccurrenceClick) {\n            return;\n        }\n        onOccurrenceClick.call(undefined, { syntheticEvent: syntheticEvent, value: null, target: target.current });\n    }, [onOccurrenceClick]);\n    return canUseDOM\n        ? ReactDOM.createPortal((React.createElement(Dialog, { title: titleMessage, onClose: handleClose },\n            confirmationMessage,\n            React.createElement(DialogActionsBar, null,\n                React.createElement(Button, { onClick: handleOccurrenceClick }, occurrenceMessage),\n                React.createElement(Button, { onClick: handleSeriesClick }, seriesMessage)))), document && document.body)\n        : null;\n});\nSchedulerOccurrenceDialog.displayName = 'KendoReactSchedulerSchedulerOccurrenceDialog';\n"]},"metadata":{},"sourceType":"module"}