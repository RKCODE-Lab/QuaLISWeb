{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import MultiColumnComboSearch from'../../components/multi-column-combo-search/multi-column-combo-search';var AddBatchinitiate=function AddBatchinitiate(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dtransactiondate\",label:props.operation==\"initiate\"?props.intl.formatMessage({id:\"IDS_BATCHINITIATEDTIME\"}):props.intl.formatMessage({id:\"IDS_BATCHCOMPLETEDTIME\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord?props.selectedRecord[\"dtransactiondate\"]!==undefined?props.selectedRecord[\"dtransactiondate\"]:props.currentTime:props.currentTime,dateFormat:props.userInfo.ssitedatetime,timeInputLabel:props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:true//showTimeSelect ={true}\n,isClearable:false,timeIntervals:1,onChange:function onChange(date){return props.handleDateChange(\"dtransactiondate\",date);}//value={props.selectedRecord[\"dexpirydate\"]}\n,maxDate:props.currentTime//minTime={new Date()}\n,maxTime:props.currentTime,minTime:props.currentTime,isMandatory:true,required:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"scomments\",label:props.intl.formatMessage({id:\"IDS_REMARKS\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_REMARKS\"})//ALPD-3588\n,value:props.selectedRecord[\"scomments\"]?props.selectedRecord[\"scomments\"]:\"\",rows:\"2\",required:false,maxLength:255}))))));};export default injectIntl(AddBatchinitiate);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/batchruncreation/AddBatchinitiate.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","FormSelectSearch","DateTimePicker","FormNumericInput","MultiColumnComboSearch","AddBatchinitiate","props","operation","intl","formatMessage","id","selectedRecord","undefined","currentTime","userInfo","ssitedatetime","date","handleDateChange","event","onInputOnChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAAQC,GAAR,CAAaC,GAAb,KAAuB,iBAAvB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,MAAOC,CAAAA,cAAP,KAA2B,8DAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,MAAOC,CAAAA,sBAAP,KAAmC,sEAAnC,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAU,CAC5B,mBAAQ,qDACJ,oBAAC,GAAD,mBACK,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACG,oBAAC,GAAD,mBACA,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACA,oBAAC,cAAD,EACK,IAAI,CAAE,kBADX,CAEK,KAAK,CAAEA,KAAK,CAACC,SAAN,EAAiB,UAAjB,CAA8BD,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,wBAAN,CAAzB,CAA9B,CAA2FJ,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,wBAAN,CAAzB,CAFvG,CAGK,SAAS,CAAC,cAHf,CAIK,eAAe,CAAC,eAJrB,CAKK,QAAQ,CAAEJ,KAAK,CAACK,cAAN,CAAuBL,KAAK,CAACK,cAAN,CAAqB,kBAArB,IAA6CC,SAA7C,CAAyDN,KAAK,CAACK,cAAN,CAAqB,kBAArB,CAAzD,CAAmGL,KAAK,CAACO,WAAhI,CACPP,KAAK,CAACO,WANd,CAOK,UAAU,CAAEP,KAAK,CAACQ,QAAN,CAAeC,aAPhC,CAQK,cAAc,CAAET,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,UAAN,CAAzB,CARrB,CASK,aAAa,CAAE,IACf;AAVL,CAWK,WAAW,CAAE,KAXlB,CAYK,aAAa,CAAE,CAZpB,CAaK,QAAQ,CAAE,kBAAAM,IAAI,QAAIV,CAAAA,KAAK,CAACW,gBAAN,CAAuB,kBAAvB,CAA2CD,IAA3C,CAAJ,EACd;AAdL,CAeK,OAAO,CAAEV,KAAK,CAACO,WACf;AAhBL,CAiBK,OAAO,CAAEP,KAAK,CAACO,WAjBpB,CAkBK,OAAO,CAAEP,KAAK,CAACO,WAlBpB,CAmBK,WAAW,CAAE,IAnBlB,CAoBK,QAAQ,CAAE,IApBf,EADA,CADA,cA0BC,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,YAAD,EACQ,IAAI,CAAE,WADd,CAEQ,KAAK,CAAEP,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,aAAN,CAAzB,CAFf,CAGQ,QAAQ,CAAE,kBAACQ,KAAD,QAAWZ,CAAAA,KAAK,CAACa,eAAN,CAAsBD,KAAtB,CAA6B,CAA7B,CAAX,EAHlB,CAIQ,WAAW,CAAEZ,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,aAAN,CAAzB,CACb;AALR,CAMQ,KAAK,CAAEJ,KAAK,CAACK,cAAN,CAAqB,WAArB,EAAkCL,KAAK,CAACK,cAAN,CAAqB,WAArB,CAAlC,CAAoE,EANnF,CAOQ,IAAI,CAAC,GAPb,CAQQ,QAAQ,CAAE,KARlB,CASQ,SAAS,CAAE,GATnB,EADJ,CA1BD,CADH,CADL,CADI,CAAR,CAiDH,CAlDJ,CAmDG,cAAef,CAAAA,UAAU,CAACS,gBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport MultiColumnComboSearch from '../../components/multi-column-combo-search/multi-column-combo-search';\r\n\r\nconst AddBatchinitiate = (props) =>{    \r\n       return (<>\r\n           <Row>                                \r\n                <Col md={12}>\r\n                   <Row>\r\n                   <Col md={12}>\r\n                   <DateTimePicker\r\n                        name={\"dtransactiondate\"}\r\n                        label={props.operation==\"initiate\" ? props.intl.formatMessage({ id: \"IDS_BATCHINITIATEDTIME\" }) : props.intl.formatMessage({ id: \"IDS_BATCHCOMPLETEDTIME\" })}\r\n                        className='form-control'\r\n                        placeholderText=\"Select date..\"\r\n                        selected={props.selectedRecord ? props.selectedRecord[\"dtransactiondate\"] !== undefined ? props.selectedRecord[\"dtransactiondate\"]: props.currentTime\r\n                         : props.currentTime}\r\n                        dateFormat={props.userInfo.ssitedatetime}\r\n                        timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                        showTimeInput={true}\r\n                        //showTimeSelect ={true}\r\n                        isClearable={false}\r\n                        timeIntervals={1}\r\n                        onChange={date => props.handleDateChange(\"dtransactiondate\", date)}\r\n                        //value={props.selectedRecord[\"dexpirydate\"]}\r\n                        maxDate={props.currentTime}\r\n                        //minTime={new Date()}\r\n                        maxTime={props.currentTime}\r\n                        minTime={props.currentTime}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                    />\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                                name={\"scomments\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                                onChange={(event) => props.onInputOnChange(event, 1)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                                //ALPD-3588\r\n                                value={props.selectedRecord[\"scomments\"]?props.selectedRecord[\"scomments\"]:\"\"}\r\n                                rows=\"2\"\r\n                                required={false}\r\n                                maxLength={255}\r\n                            >\r\n                        </FormTextarea>\r\n                    </Col>\r\n                   </Row>\r\n               </Col>      \r\n        </Row>   \r\n       \r\n      </>\r\n       )\r\n   }\r\n   export default injectIntl(AddBatchinitiate);\r\n"]},"metadata":{},"sourceType":"module"}