{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\batchruncreation\\\\AddSample.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { MediaHeader } from '../product/product.styled';\nimport { toast } from 'react-toastify';\nimport { process } from \"@progress/kendo-data-query\"; //ALPD-5137--Vignesh R(28-01-2025)---Function component convert to Class component\n\nclass AddSample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.headerSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      const eventData = event.target.props.data.hasOwnProperty('data') ? event.target.props.data.data || [] : event.target.props.data || [];\n      let samples = //event.target.props.data \n      this.state.samples || [];\n      let addedSamplesList = this.state.addedSamplesList || [];\n\n      if (checked) {\n        const data = samples.map(item => {\n          const matchingData = eventData.find(dataItem => dataItem.ntransactiontestcode === item.ntransactiontestcode);\n\n          if (matchingData) {\n            const existingIndex = addedSamplesList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode);\n\n            if (existingIndex === -1) {\n              const newItem = { ...item,\n                selected: true // ALPD-5535 - commented by Gowtham in 12/03/2025 - Run Batch Creation --> While Add/Remove Samples multiple times --> Application crash.\n                // jsondata: { samplelist: item },\n                // jsonuidata: { samplelist: item },\n\n              };\n              addedSamplesList.push(newItem);\n            } // ALPD-5523 - commented by Gowtham in 10/03/2025 - Run batch creation -->In the sample grid filter, samples are repeated.\n            // else {\n            //         const oldItem = { ...addedSamplesList[existingIndex], selected: true };\n            //         const newItem = {\n            //                 ...oldItem,\n            //                 selected: true,\n            //                 jsondata: { samplelist: oldItem },\n            //                 jsonuidata: { samplelist: oldItem },\n            //         };\n            //         addedSamplesList.push(newItem);\n            // }\n\n\n            return { ...item,\n              selected: true\n            };\n          } else {\n            return { ...item,\n              selected: item.selected ? true : false\n            };\n          }\n        });\n        this.setState({\n          samples: data,\n          addedSamplesList,\n          addComponentDataListCopy: this.valiateCopy(this.state.addedSamplesListSortedList || [], data || [], addedSamplesList || []),\n          addSelectAll: this.valiateCheckAll(process(data || [], this.state.dataState)),\n          addSelectAll: checked,\n          deleteSelectAll: false\n        });\n      } else {\n        let addedSamplesList = this.state.addedSamplesList || [];\n        let deletedListdData = this.state.deletedList || [];\n        const data = samples.map(x => {\n          const matchedItem = eventData.find(item => x.ntransactiontestcode === item.ntransactiontestcode);\n\n          if (matchedItem) {\n            addedSamplesList = addedSamplesList.filter(item1 => item1.npreregno !== matchedItem.npreregno);\n            deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== matchedItem.npreregno);\n            matchedItem.selected = false;\n            return matchedItem;\n          }\n\n          return x;\n        });\n        this.setState({\n          samples: data,\n          addedSamplesList: addedSamplesList,\n          deletedList: deletedListdData,\n          addSelectAll: this.valiateCheckAll(addedSamplesList),\n          deleteSelectAll: this.valiateCheckAll(addedSamplesList),\n          addSelectAll: checked,\n          deleteSelectAll: false,\n          addComponentDataListCopy: this.valiateCopy(this.state.addedSamplesListSortedList || [], data || [], addedSamplesList || [])\n        });\n      }\n    };\n\n    this.addSaveDataGrid = () => {\n      let filterdata1 = this.state.dataState ? process(this.state.addComponentDataListCopy || [], { ...this.state.dataState,\n        take: this.state.samples.length\n      }).data : [];\n      let sortListedData1 = filterdata1.filter(x => this.state.addedSamplesList.some(item => item.ntransactiontestcode === x.ntransactiontestcode));\n      let exists = this.state.dataState && this.state.dataState.filter !== null && this.state.dataState.filter !== undefined ? sortListedData1.length > 0 ? true : false : true;\n      let sortListedDataList = this.state.addedSamplesList && this.state.addedSamplesList.filter(addedItem => process(this.state.samples || [], this.state.dataState).data.some(item => addedItem.ntransactiontestcode === item.ntransactiontestcode)) || [];\n\n      if (sortListedDataList && sortListedDataList.length > 0 && exists) {\n        let addedSamplesListSortedList = [];\n        let updatedList = [];\n        let ListedData = [];\n        let sortListedData = [];\n        let updatedDataList = [];\n\n        if (this.state.dataState && this.state.dataState.filter !== null && this.state.dataState.filter !== undefined) {\n          let filterdata = process(this.state.addComponentDataListCopy || this.state.samples || [], this.state.dataState).data || [];\n          sortListedData = filterdata.filter(x => this.state.addedSamplesList.some(item => item.ntransactiontestcode === x.ntransactiontestcode));\n          updatedDataList = this.state.addedSamplesList.filter(item => !sortListedData.some(addedItem => addedItem.ntransactiontestcode === item.ntransactiontestcode));\n          updatedList = process(this.state.addComponentDataListCopy || this.state.samples || [], { ...this.state.dataState,\n            skip: 0,\n            take: this.state.samples.length\n          }).data.filter(item => !sortListedData.some(addedItem => addedItem.ntransactiontestcode === item.ntransactiontestcode));\n          updatedDataList.map(x => {\n            if (x.selected) {\n              ListedData.push(x);\n            }\n          });\n        } else {\n          ListedData = this.state.addedSamplesList.filter(addedItem => !process(this.state.samples || [], this.state.dataState).data.some(item => addedItem.ntransactiontestcode === item.ntransactiontestcode)) || [];\n          sortListedData = this.state.addedSamplesList.filter(addedItem => process(this.state.samples || [], this.state.dataState).data.some(item => addedItem.ntransactiontestcode === item.ntransactiontestcode));\n          updatedList = this.state.samples.filter(item => !sortListedData.some(addedItem => addedItem.ntransactiontestcode === item.ntransactiontestcode));\n        }\n\n        if (this.state.addedSamplesListSortedList.length > 0) {\n          this.state.addedSamplesListSortedList.map(item => {\n            const newItem = JSON.parse(JSON.stringify(item));\n            newItem[\"jsondata\"] = {};\n            newItem[\"jsonuidata\"] = {};\n            newItem[\"selected\"] = false;\n            newItem[\"jsondata\"]['samplelist'] = { ...item,\n              selected: false\n            };\n            newItem[\"jsonuidata\"]['samplelist'] = { ...item,\n              selected: false\n            };\n            addedSamplesListSortedList.push(newItem);\n          });\n        }\n\n        sortListedData.map(item => {\n          const newItem = JSON.parse(JSON.stringify(item));\n          newItem[\"jsondata\"] = {};\n          newItem[\"jsonuidata\"] = {};\n          newItem[\"selected\"] = false;\n          newItem[\"jsondata\"]['samplelist'] = { ...item,\n            selected: false\n          };\n          newItem[\"jsonuidata\"]['samplelist'] = { ...item,\n            selected: false\n          };\n          addedSamplesListSortedList.push(newItem);\n        });\n        this.props.childDataChange(addedSamplesListSortedList);\n        this.setState({\n          samples: updatedList || [],\n          addSelectAll: this.valiateCheckAll(this.state.dataState && this.state.dataState.filter !== null && this.state.dataState.filter !== undefined ? process(updatedList || [], { ...this.state.dataState,\n            skip: 0,\n            take: updatedList.length\n          }).data || [] : updatedList),\n          addedSamplesListSortedList: addedSamplesListSortedList,\n          addedSamplesList: ListedData,\n          addComponentDataListCopy: this.valiateCopy(addedSamplesListSortedList || [], updatedList || [], ListedData || []),\n          dataState: this.dataStateValidation()\n        });\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELCETONESAMPLE\"\n        }));\n      }\n    };\n\n    this.handleClickDelete = row => {\n      let updatedAddList = [];\n\n      if (row) {\n        const ntransactiontestcode = row && row.dataItem && row.dataItem.ntransactiontestcode;\n        const updatedList = this.state.addedSamplesListSortedList && this.state.addedSamplesListSortedList.filter(item => item.ntransactiontestcode !== ntransactiontestcode);\n        const exists = this.state.samples && this.state.samples.some(item => item.ntransactiontestcode === ntransactiontestcode);\n\n        if (!exists) {\n          updatedAddList = this.state.samples && this.state.samples.map(item => {\n            return item;\n          }); // ALPD-5535 - delete json by Gowtham in 12/03/2025 - Run Batch Creation --> While Add/Remove Samples multiple times --> Application crash.\n\n          row.dataItem && row.dataItem.jsondata && delete row.dataItem.jsondata;\n          row.dataItem && row.dataItem.jsonuidata && delete row.dataItem.jsonuidata;\n          updatedAddList.push({ ...row.dataItem,\n            selected: false\n          });\n        }\n\n        this.props.childDataChange(updatedList);\n        this.setState({\n          samples: updatedAddList,\n          addedSamplesListSortedList: updatedList,\n          addComponentDataListCopy: this.valiateCopy(updatedList || [], updatedAddList || []),\n          addSelectAll: this.valiateCheckAll(updatedAddList)\n        });\n      }\n    };\n\n    this.selectionChange = event => {\n      let addedSamplesList = this.state.addedSamplesList || [];\n      const samples = this.state.samples.map(item => {\n        if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\n          item.selected = !event.dataItem.selected;\n\n          if (item.selected) {\n            const newItem = JSON.parse(JSON.stringify(item)); // ALPD-5535 - commented by Gowtham in 12/03/2025 - Run Batch Creation --> While Add/Remove Samples multiple times --> Application crash.\n            // newItem[\"jsondata\"] = {}\n            // newItem[\"jsonuidata\"] = {}\n\n            delete newItem['selected'];\n            newItem.selected = true; // newItem[\"jsondata\"]['samplelist'] = item\n            // newItem[\"jsonuidata\"]['samplelist'] = item\n\n            addedSamplesList.push(newItem);\n          } else {\n            addedSamplesList = addedSamplesList.filter(item1 => item1.ntransactiontestcode !== item.ntransactiontestcode);\n          }\n        }\n\n        return item;\n      });\n      this.setState({\n        addSelectAll: this.valiateCheckAll(process(samples || [], this.state.dataState).data),\n        samples,\n        addedSamplesList,\n        deleteSelectAll: this.valiateCheckAll(addedSamplesList),\n        addComponentDataListCopy: this.valiateCopy(this.state.addedSamplesListSortedList || [], samples || [], addedSamplesList || [])\n      });\n    };\n\n    this.dataStateChangeBatchSample = event => {\n      let updatedList = [];\n\n      if (event.dataState && event.dataState.filter === null) {\n        let addComponentDataListCopy = this.state.addComponentDataListCopy || this.state.samples || [];\n        addComponentDataListCopy.forEach(x => {\n          const exists = this.state.addedSamplesListSortedList.some(item => item.ntransactiontestcode === x.ntransactiontestcode);\n\n          if (!exists) {\n            updatedList.push(x);\n          }\n        });\n      } else {\n        updatedList = this.state.samples || [];\n      }\n\n      this.setState({\n        dataResult: process(this.state.samples || [], event.dataState),\n        dataState: event.dataState,\n        samples: updatedList,\n        addSelectAll: event.dataState && event.dataState.filter === null ? this.valiateCheckAll(updatedList) : this.valiateCheckAll(process(updatedList || [], event.dataState).data)\n      });\n    };\n\n    const dataState = {\n      skip: 0,\n      take: 10\n    };\n    this.state = {\n      addedSamplesListSortedList: [],\n      dataState\n    };\n    this.formRef = React.createRef();\n  }\n\n  render() {\n    const extractedColumnList = []; //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\n\n    let count = (this.state.addedSamplesListSortedList || []).length;\n\n    if (this.props.nneedsubsample) {\n      extractedColumnList.push({\n        \"idsName\": \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\"\n      }, {\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\"\n      });\n    } else {\n      extractedColumnList.push({\n        \"idsName\": \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"width\": \"155px\"\n      });\n    }\n\n    extractedColumnList.push({\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestname\",\n      \"width\": \"155px\"\n    }, {\n      \"idsName\": \"IDS_SAMPLENAME\",\n      \"dataField\": \"ssamplename\",\n      \"width\": \"155px\"\n    }, {\n      \"idsName\": \"IDS_REGDATE\",\n      \"dataField\": \"dregdate\",\n      \"width\": \"200px\"\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 8\n      }\n    }, \"                               \", /*#__PURE__*/React.createElement(Col, {\n      className: \"d-flex justify-content-end p-2\",\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.addSaveDataGrid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADD\",\n      defaultMessage: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataGridWithSelection, {\n      primaryKeyField: \"nbatchsamplecode\",\n      data: this.state.samples || [] //dataState={this.state.dataState}\n      //dataResult={this.state.dataResult}\n      ,\n      selectAll: this.state.addSelectAll,\n      userInfo: this.props.userInfo,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_SELECTTODELETE\"\n      }),\n      headerSelectionChange: this.headerSelectionChange,\n      selectionChange: this.selectionChange,\n      dataStateChange: this.dataStateChangeBatchSample,\n      extractedColumnList: extractedColumnList,\n      dataState: this.state.dataState ? this.state.dataState : {\n        skip: 0,\n        take: 10\n      },\n      dataResult: this.state.dataResult ? this.state.dataResult : process(this.state.samples || [], this.state.dataState ? this.state.dataState : {\n        skip: 0,\n        take: 10\n      }),\n      scrollable: 'scrollable',\n      pageable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: '12',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MediaHeader, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SELECTEDSAMPLES\"\n    }) + \" : \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\",\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 49\n      }\n    }, count))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DataGridWithSelection, {\n      primaryKeyField: \"nbatchsamplecode\",\n      userInfo: this.props.userInfo,\n      data: this.state.addedSamplesListSortedList || [],\n      title: this.props.intl.formatMessage({\n        id: \"IDS_SELECTTODELETE\"\n      }),\n      extractedColumnList: extractedColumnList,\n      hideColumnFilter: true,\n      isHidemulipleselect: true,\n      isActionRequired: true,\n      handleClickDelete: this.handleClickDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }))));\n  } //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\n\n\n  componentDidUpdate(previousProps, previousState) {\n    if (this.props.samples !== previousProps.samples) {\n      this.setState({\n        samples: this.props.samples || []\n      });\n    }\n\n    if (this.state.samples !== previousState.samples) {\n      this.setState({\n        dataResult: process(this.state.samples || [], this.state.dataState)\n      });\n    }\n  } //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\n\n\n  //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\n  valiateCopy(sortedList, samples, addedSamplesList) {\n    let addedSamplesLists = addedSamplesList || this.state.addedSamplesList || [];\n    let listData = this.props.samples || [];\n    let copyingList = listData.filter(item1 => !sortedList.some(item2 => item1.ntransactiontestcode === item2.ntransactiontestcode)) || [];\n    let copyingListData = copyingList.map(item => {\n      const existsInAddComponentDataList = addedSamplesLists.some(item1 => item1.ntransactiontestcode === item.ntransactiontestcode);\n\n      if (existsInAddComponentDataList) {\n        return { ...item,\n          selected: true\n        };\n      } else {\n        return { ...item,\n          selected: false\n        };\n      }\n    });\n    return copyingListData;\n  } //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\n\n\n  dataStateValidation() {\n    let dataState = { ...this.state.dataState\n    };\n    let count = 0;\n    this.state.dataResult.data.map(x => {\n      if (x.selected) {\n        count++;\n      }\n    });\n\n    if (this.state.dataResult.data) {\n      if (parseInt(this.state.dataResult.total) === parseInt(count) + parseInt(this.state.dataState.skip)) {\n        let skipcount = this.state.dataState.skip > 0 ? this.state.dataState.skip - this.state.dataState.take : this.state.dataState.skip;\n        dataState = { ...dataState,\n          skip: skipcount,\n          take: this.state.dataState.take\n        };\n      }\n    }\n\n    return dataState;\n  } //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\n\n\n  valiateCheckAll(data) {\n    let selectAll = true;\n\n    if (data && data.length > 0) {\n      data.forEach(dataItem => {\n        if (dataItem.selected) {\n          if (dataItem.selected === false) {\n            selectAll = false;\n          }\n        } else {\n          selectAll = false;\n        }\n      });\n    } else {\n      selectAll = false;\n    }\n\n    return selectAll;\n  } //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\n\n\n}\n\nexport default injectIntl(AddSample);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/batchruncreation/AddSample.js"],"names":["React","Component","FormattedMessage","injectIntl","Button","Row","Col","DataGridWithSelection","faSave","FontAwesomeIcon","MediaHeader","toast","process","AddSample","constructor","props","headerSelectionChange","event","checked","syntheticEvent","target","eventData","data","hasOwnProperty","samples","state","addedSamplesList","map","item","matchingData","find","dataItem","ntransactiontestcode","existingIndex","findIndex","x","newItem","selected","push","setState","addComponentDataListCopy","valiateCopy","addedSamplesListSortedList","addSelectAll","valiateCheckAll","dataState","deleteSelectAll","deletedListdData","deletedList","matchedItem","filter","item1","npreregno","addSaveDataGrid","filterdata1","take","length","sortListedData1","some","exists","undefined","sortListedDataList","addedItem","updatedList","ListedData","sortListedData","updatedDataList","filterdata","skip","JSON","parse","stringify","childDataChange","dataStateValidation","warn","intl","formatMessage","id","handleClickDelete","row","updatedAddList","jsondata","jsonuidata","selectionChange","dataStateChangeBatchSample","forEach","dataResult","formRef","createRef","render","extractedColumnList","count","nneedsubsample","marginTop","userInfo","fontWeight","color","componentDidUpdate","previousProps","previousState","sortedList","addedSamplesLists","listData","copyingList","item2","copyingListData","existsInAddComponentDataList","parseInt","total","skipcount","selectAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport {Button,Row, Col} from 'react-bootstrap';\r\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\r\nimport {faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { MediaHeader } from '../product/product.styled';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from \"@progress/kendo-data-query\";\r\n\r\n   //ALPD-5137--Vignesh R(28-01-2025)---Function component convert to Class component\r\n   class AddSample extends Component {\r\n        \r\n        constructor(props) {\r\n\r\n                super(props);\r\n                const dataState = { skip: 0, take: 10 };\r\n                this.state = {\r\n                        addedSamplesListSortedList: [], dataState\r\n                };\r\n                this.formRef = React.createRef();\r\n        }\r\n        render() {\r\n        const extractedColumnList = [];\r\n        //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\n        let count = (this.state.addedSamplesListSortedList || []).length;\r\n        if (this.props.nneedsubsample){\r\n                extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\"},\r\n                        {\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\" } \r\n                );            \r\n        }\r\n            else{\r\n                extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n            }\r\n            extractedColumnList .push(      \r\n                {\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestname\",\"width\": \"155px\"},\r\n                {\"idsName\":\"IDS_SAMPLENAME\",\"dataField\":\"ssamplename\", \"width\": \"155px\"},\r\n                {\"idsName\":\"IDS_REGDATE\",\"dataField\":\"dregdate\",\"width\": \"200px\" },\r\n             );\r\n       return (<>\r\n       { /*ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid*/}\r\n       <Row>                               <Col className=\"d-flex justify-content-end p-2\" md={12}>\r\n                                <Button className=\"btn-user btn-primary-blue\"\r\n                                onClick={() => this.addSaveDataGrid()}\r\n                                >\r\n                                <FontAwesomeIcon icon={faSave} /> { }\r\n                                <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                                </Button>\r\n                        </Col>\r\n        <Row style={{marginTop:'10px'}}>\r\n                <Col>                     \r\n                        <DataGridWithSelection                               \r\n                                  primaryKeyField={\"nbatchsamplecode\"}                            \r\n                                  data={this.state.samples ||[]} \r\n                                  //dataState={this.state.dataState}\r\n                                  //dataResult={this.state.dataResult}\r\n                                  selectAll={this.state.addSelectAll}\r\n                                  userInfo={this.props.userInfo}\r\n                                  title={this.props.intl.formatMessage({ id: \"IDS_SELECTTODELETE\" })}\r\n                                  headerSelectionChange={this.headerSelectionChange}\r\n                                  selectionChange={this.selectionChange}\r\n                                  dataStateChange={this.dataStateChangeBatchSample}\r\n                                  extractedColumnList={extractedColumnList}\r\n                                  dataState={this.state.dataState ? this.state.dataState : { skip: 0, take: 10 }}\r\n                                  dataResult={this.state.dataResult ? this.state.dataResult :\r\n                                  process(this.state.samples || [], this.state.dataState\r\n                                   ? this.state.dataState : { skip: 0, take: 10 })}   \r\n                                   scrollable={'scrollable'}\r\n                                   pageable={true}                           \r\n                        /> \r\n                </Col>\r\n        </Row>\r\n        </Row>\r\n \r\n                        <Row style={{marginTop:'10px'}}>\r\n\r\n\r\n                        {/*ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid*/}\r\n                        <Col md={'12'}>\r\n                                        <MediaHeader className='mb-3'>\r\n                                                <span style={{ fontWeight: \"bold\", color: \"black\" }}>\r\n                                                        {this.props.intl.formatMessage({ id: \"IDS_SELECTEDSAMPLES\" }) + \" : \"}\r\n                                                </span>\r\n                                                <span style={{ fontWeight: \"bold\", color: \"blue\" }}>\r\n                                                        {count}\r\n                                                </span>\r\n                                        </MediaHeader>\r\n                                </Col>\r\n                                <Col>\r\n                                        <DataGridWithSelection\r\n                                                 primaryKeyField={\"nbatchsamplecode\"}\r\n                                                 userInfo={this.props.userInfo}\r\n                                                 data={this.state.addedSamplesListSortedList || []}\r\n                                                 title={this.props.intl.formatMessage({ id: \"IDS_SELECTTODELETE\" })}\r\n                                                 extractedColumnList={extractedColumnList}                                                \r\n                                             \r\n                                                 hideColumnFilter={true}\r\n                                                 isHidemulipleselect={true}\r\n                                                 isActionRequired={true}\r\n                                                 handleClickDelete={this.handleClickDelete}\r\n                                        />\r\n                                </Col>\r\n                {/* <Col md={6}>\r\n                        <span className=\"add-txt-btn\">\r\n                                <FormattedMessage id=\"IDS_ADDEDCOMPONENTS\" defaultMessage=\"Added Components\"/>\r\n                                 : {props.addedComponentList && props.addedComponentList.length}\r\n                        </span>\r\n                </Col> */}\r\n\r\n                {/* <Col md={12} className=\"d-flex justify-content-end\">\r\n                     \r\n                        <Button variant=\"outline-danger\" onClick={() => props.onDeleteSelectedComponent()} >\r\n                                <FormattedMessage id='IDS_REMOVECOMPONENTS' defaultMessage='Remove Components' />\r\n                        </Button> */}\r\n                        {/* <Nav.Link name=\"addrole\" className=\"add-txt-btn\" onClick={() => props.onDeleteSelectedComponent()}>\r\n                                <FormattedMessage id='IDS_DELETECOMPONENTS' defaultMessage='Delete Components' />\r\n                        </Nav.Link> */}\r\n                {/* </Col> */}\r\n        </Row>\r\n        {/* <Row style={{marginTop:'10px'}}> \r\n                 <Col>      \r\n                        <DataGridWithSelection\r\n                                primaryKeyField={\"npreregno\"}                               \r\n                                data={props.samples }\r\n                                // componentPopupSkip={props.componentPopupSkip}\r\n                                // componentPopupTake={props.componentPopupTake}\r\n                                // componentPageSizes={props.componentPageSizes}\r\n                                selectAll={props.deleteSelectAll}\r\n                                title={props.intl.formatMessage({id:\"IDS_SELECTTODELETE\"})}\r\n                                headerSelectionChange={props.addedHeaderSelectionChange}\r\n                                selectionChange={props.addedSelectionChange}\r\n                                extractedColumnList={[  {idsName:\"IDS_ARNO\", dataField:\"sarno\"},\r\n                                                        {idsName:\"IDS_COMPONENTNAME\", dataField:\"scomponentname\"},\r\n                                                        {idsName:\"IDS_BATCHLOTNO\", dataField:\"smanuflotno\"},\r\n                                                        {idsName:\"IDS_SPECNAME\", dataField:\"sspecname\"}]}\r\n                              \r\n                        /> \r\n                </Col>\r\n        </Row> */}\r\n        </>\r\n       )\r\n   }\r\n     //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\n componentDidUpdate(previousProps,previousState) {\r\n        if (this.props.samples !== previousProps.samples) {\r\n                this.setState({ samples: this.props.samples || [] });\r\n        }\r\n        if(this.state.samples!==previousState.samples){\r\n                this.setState({ dataResult: process(this.state.samples || [], this.state.dataState) });\r\n        }\r\n}\r\n\r\n            //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\nheaderSelectionChange = (event) => {\r\n                const checked = event.syntheticEvent.target.checked;\r\n                const eventData = event.target.props.data.hasOwnProperty('data') ? event.target.props.data.data || [] : event.target.props.data || [];\r\n                let samples = //event.target.props.data \r\n                        this.state.samples || [];\r\n                let addedSamplesList = this.state.addedSamplesList || [];\r\n                if (checked) {\r\n                        const data = samples.map(item => {\r\n                                const matchingData = eventData.find(dataItem => dataItem.ntransactiontestcode === item.ntransactiontestcode);\r\n                                if (matchingData) {\r\n                                        const existingIndex = addedSamplesList.findIndex(\r\n                                                x => x.ntransactiontestcode === item.ntransactiontestcode\r\n                                        );\r\n\r\n                                        if (existingIndex === -1) {\r\n                                                const newItem = {\r\n                                                        ...item,\r\n                                                        selected: true,\r\n                                                        // ALPD-5535 - commented by Gowtham in 12/03/2025 - Run Batch Creation --> While Add/Remove Samples multiple times --> Application crash.\r\n                                                        // jsondata: { samplelist: item },\r\n                                                        // jsonuidata: { samplelist: item },\r\n                                                };\r\n                                                addedSamplesList.push(newItem);\r\n                                        } \r\n                                        // ALPD-5523 - commented by Gowtham in 10/03/2025 - Run batch creation -->In the sample grid filter, samples are repeated.\r\n                                        // else {\r\n                                        //         const oldItem = { ...addedSamplesList[existingIndex], selected: true };\r\n                                        //         const newItem = {\r\n                                        //                 ...oldItem,\r\n                                        //                 selected: true,\r\n                                        //                 jsondata: { samplelist: oldItem },\r\n                                        //                 jsonuidata: { samplelist: oldItem },\r\n                                        //         };\r\n                                        //         addedSamplesList.push(newItem);\r\n                                        // }\r\n\r\n                                        return { ...item, selected: true };\r\n                                } else {\r\n                                        return { ...item, selected: item.selected ? true : false };\r\n                                }\r\n                        });\r\n                        this.setState({\r\n                                samples: data, addedSamplesList,\r\n                                addComponentDataListCopy: this.valiateCopy(this.state.addedSamplesListSortedList || [], data || [], addedSamplesList || []),\r\n                                addSelectAll: this.valiateCheckAll(process(data || [], this.state.dataState)),\r\n                                addSelectAll: checked, deleteSelectAll: false\r\n                        });\r\n                } else {\r\n                        let addedSamplesList = this.state.addedSamplesList || [];\r\n                        let deletedListdData = this.state.deletedList || [];\r\n                        const data = samples.map(x => {\r\n                                const matchedItem = eventData.find(item => x.ntransactiontestcode === item.ntransactiontestcode);\r\n                                if (matchedItem) {\r\n                                        addedSamplesList = addedSamplesList.filter(item1 => item1.npreregno !== matchedItem.npreregno);\r\n                                        deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== matchedItem.npreregno);\r\n                                        matchedItem.selected = false;\r\n                                        return matchedItem;\r\n                                }\r\n                                return x;\r\n                        });\r\n\r\n                        this.setState({\r\n                                samples: data, addedSamplesList: addedSamplesList, deletedList: deletedListdData,\r\n                                addSelectAll: this.valiateCheckAll(addedSamplesList),\r\n                                deleteSelectAll: this.valiateCheckAll(addedSamplesList),\r\n                                addSelectAll: checked, deleteSelectAll: false,\r\n                                addComponentDataListCopy: this.valiateCopy(this.state.addedSamplesListSortedList || [], data || [], addedSamplesList || []),\r\n                        });\r\n                }\r\n        }\r\n\r\n    //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\n  addSaveDataGrid = () => {\r\n                let filterdata1 = this.state.dataState ? process(this.state.addComponentDataListCopy || [], { ...this.state.dataState, take: this.state.samples.length }).data : [];\r\n                let sortListedData1 = filterdata1.filter(x =>\r\n                        this.state.addedSamplesList.some(item => item.ntransactiontestcode === x.ntransactiontestcode)\r\n                );\r\n                let exists = this.state.dataState && this.state.dataState.filter !== null && this.state.dataState.filter !== undefined ?\r\n                        sortListedData1.length > 0 ? true : false : true;\r\n                let sortListedDataList = this.state.addedSamplesList && this.state.addedSamplesList.filter(\r\n                        (addedItem) => process(this.state.samples || [], this.state.dataState).data.some(\r\n                                (item) => addedItem.ntransactiontestcode === item.ntransactiontestcode\r\n                        )\r\n                ) || [];\r\n                if (sortListedDataList && sortListedDataList.length > 0 && exists) {\r\n                        let addedSamplesListSortedList = [];\r\n                        let updatedList = [];\r\n                        let ListedData = [];\r\n                        let sortListedData = [];\r\n                        let updatedDataList = [];\r\n                        if (this.state.dataState && this.state.dataState.filter !== null && this.state.dataState.filter !== undefined) {\r\n                                let filterdata = process(this.state.addComponentDataListCopy || this.state.samples || [],\r\n                                        this.state.dataState ).data || [];\r\n                                sortListedData = filterdata.filter(x =>\r\n                                        this.state.addedSamplesList.some(item => item.ntransactiontestcode === x.ntransactiontestcode)\r\n                                );\r\n                                updatedDataList = this.state.addedSamplesList.filter(\r\n                                        (item) => !sortListedData.some(\r\n                                                (addedItem) => addedItem.ntransactiontestcode === item.ntransactiontestcode\r\n                                        )\r\n                                );\r\n                                updatedList = process(this.state.addComponentDataListCopy || this.state.samples || [],{ ...this.state.dataState,skip:0, take: this.state.samples.length } ).data.filter(\r\n                                        (item) => !sortListedData.some(\r\n                                                (addedItem) => addedItem.ntransactiontestcode === item.ntransactiontestcode\r\n                                        )\r\n                                );\r\n                                updatedDataList.map(x => { if (x.selected) { ListedData.push(x) } });\r\n\r\n                        } else {\r\n\r\n                                ListedData = this.state.addedSamplesList.filter(\r\n                                        (addedItem) => !process(this.state.samples || [], this.state.dataState).data.some(\r\n                                                (item) => addedItem.ntransactiontestcode === item.ntransactiontestcode\r\n                                        )\r\n                                ) || [];\r\n\r\n                                sortListedData = this.state.addedSamplesList.filter(\r\n                                        (addedItem) => process(this.state.samples || [], this.state.dataState).data.some(\r\n                                                (item) => addedItem.ntransactiontestcode === item.ntransactiontestcode\r\n                                        )\r\n                                );\r\n                                updatedList = this.state.samples.filter(\r\n                                        (item) => !sortListedData.some(\r\n                                                (addedItem) => addedItem.ntransactiontestcode === item.ntransactiontestcode\r\n                                        )\r\n                                );\r\n                        }\r\n                        if (this.state.addedSamplesListSortedList.length > 0) {\r\n                                this.state.addedSamplesListSortedList.map(item => {\r\n                                        const newItem = JSON.parse(JSON.stringify(item));\r\n                                        newItem[\"jsondata\"] = {}\r\n                                        newItem[\"jsonuidata\"] = {}\r\n                                        newItem[\"selected\"]=false;\r\n                                        newItem[\"jsondata\"]['samplelist'] =  {...item,selected:false}\r\n                                        newItem[\"jsonuidata\"]['samplelist'] =  {...item,selected:false}\r\n                                        addedSamplesListSortedList.push(newItem)\r\n                                })\r\n                        }\r\n                        sortListedData.map(item => {\r\n                                const newItem = JSON.parse(JSON.stringify(item));\r\n                                newItem[\"jsondata\"] = {}\r\n                                newItem[\"jsonuidata\"] = {}\r\n                                newItem[\"selected\"]=false;\r\n                                newItem[\"jsondata\"]['samplelist'] =  {...item,selected:false}\r\n                                newItem[\"jsonuidata\"]['samplelist'] =  {...item,selected:false}\r\n                                addedSamplesListSortedList.push(newItem)\r\n                        })\r\n                        this.props.childDataChange(addedSamplesListSortedList);\r\n                        this.setState({\r\n                                samples:updatedList||[],\r\n                                addSelectAll: this.valiateCheckAll(this.state.dataState && this.state.dataState.filter !== null && this.state.dataState.filter !== undefined\r\n                                        ? process(updatedList || [],\r\n                                                { ...this.state.dataState,skip:0, take: updatedList.length }).data || [] : updatedList)\r\n                                , addedSamplesListSortedList: addedSamplesListSortedList\r\n                                , addedSamplesList: ListedData,\r\n                                addComponentDataListCopy: this.valiateCopy(addedSamplesListSortedList || [], updatedList || [], ListedData || []),\r\n                                dataState: this.dataStateValidation()\r\n                        })\r\n                } else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELCETONESAMPLE\" }));\r\n                }\r\n        }\r\n\r\n                        //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\n        valiateCopy(sortedList, samples, addedSamplesList) {\r\n                let addedSamplesLists = addedSamplesList || this.state.addedSamplesList || [];\r\n                let listData = this.props.samples || [];\r\n                let copyingList = listData.filter(item1 =>\r\n                        !sortedList.some(item2 => item1.ntransactiontestcode === item2.ntransactiontestcode)\r\n                ) || [];\r\n                let copyingListData = copyingList.map(item => {\r\n                        const existsInAddComponentDataList = addedSamplesLists.some(\r\n                                item1 => item1.ntransactiontestcode === item.ntransactiontestcode\r\n                        );\r\n                        if (existsInAddComponentDataList) {\r\n                                return { ...item, selected: true };\r\n                        } else {\r\n                                return { ...item, selected: false };\r\n                        }\r\n                });\r\n                return copyingListData;\r\n        }\r\n\r\n\r\n                         //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\n          handleClickDelete = (row) => {\r\n                let updatedAddList = [];\r\n                if (row) {\r\n                        const ntransactiontestcode = row && row.dataItem && row.dataItem.ntransactiontestcode;\r\n                        const updatedList = this.state.addedSamplesListSortedList && this.state.addedSamplesListSortedList.filter(\r\n                                (item) => item.ntransactiontestcode !== ntransactiontestcode\r\n                        );\r\n                        const exists = this.state.samples && this.state.samples.some(\r\n                                (item) => item.ntransactiontestcode === ntransactiontestcode\r\n                        );\r\n                        if (!exists) {\r\n                                updatedAddList = this.state.samples && this.state.samples.map(item => {\r\n                                        return item\r\n                                })\r\n                                // ALPD-5535 - delete json by Gowtham in 12/03/2025 - Run Batch Creation --> While Add/Remove Samples multiple times --> Application crash.\r\n                                row.dataItem && row.dataItem.jsondata && delete row.dataItem.jsondata;\r\n                                row.dataItem && row.dataItem.jsonuidata && delete row.dataItem.jsonuidata;\r\n                                updatedAddList.push({ ...row.dataItem, selected: false });\r\n                        }\r\n                        this.props.childDataChange(updatedList);\r\n                        this.setState({\r\n                                samples: updatedAddList, addedSamplesListSortedList: updatedList,\r\n                                addComponentDataListCopy: this.valiateCopy(updatedList || [], updatedAddList || []),\r\n                                addSelectAll: this.valiateCheckAll(updatedAddList)\r\n                        })\r\n                }\r\n        }\r\n\r\n          dataStateValidation() {\r\n                let dataState = { ...this.state.dataState };\r\n                let count=0;\r\n                this.state.dataResult.data.map(x=>{if(x.selected){count++}});\r\n                if (this.state.dataResult.data) {\r\n                        if (parseInt(this.state.dataResult.total) ===  (parseInt(count)+parseInt(this.state.dataState.skip))) {\r\n                                let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\r\n                                        this.state.dataState.skip\r\n                                dataState = { ...dataState,skip: skipcount, take: this.state.dataState.take }\r\n                        }\r\n                }\r\n               return dataState;\r\n        }\r\n\r\n//ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\nselectionChange = (event) => {\r\n                let addedSamplesList = this.state.addedSamplesList || [];\r\n                const samples = this.state.samples.map(item => {\r\n                        if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                                item.selected = !event.dataItem.selected;\r\n                                if (item.selected) {\r\n                                        const newItem = JSON.parse(JSON.stringify(item));\r\n                                        // ALPD-5535 - commented by Gowtham in 12/03/2025 - Run Batch Creation --> While Add/Remove Samples multiple times --> Application crash.\r\n                                        // newItem[\"jsondata\"] = {}\r\n                                        // newItem[\"jsonuidata\"] = {}\r\n                                        delete newItem['selected']\r\n                                        newItem.selected = true;\r\n                                        // newItem[\"jsondata\"]['samplelist'] = item\r\n                                        // newItem[\"jsonuidata\"]['samplelist'] = item\r\n                                        addedSamplesList.push(newItem);\r\n                                }\r\n                                else {\r\n                                        addedSamplesList = addedSamplesList.filter(item1 => item1.ntransactiontestcode !== item.ntransactiontestcode)\r\n                                }\r\n                        }\r\n                        return item;\r\n                });\r\n                this.setState({\r\n                        addSelectAll: this.valiateCheckAll(process(samples || [], this.state.dataState).data),\r\n                        samples, addedSamplesList,\r\n                        deleteSelectAll: this.valiateCheckAll(addedSamplesList),\r\n                        addComponentDataListCopy: this.valiateCopy(this.state.addedSamplesListSortedList || [], samples || [], addedSamplesList || [])\r\n                });\r\n        }\r\n\r\nvaliateCheckAll(data) {\r\n                let selectAll = true;\r\n                if (data && data.length > 0) {\r\n                        data.forEach(dataItem => {\r\n                                if (dataItem.selected) {\r\n                                        if (dataItem.selected === false) {\r\n                                                selectAll = false;\r\n                                        }\r\n                                } else {\r\n                                        selectAll = false;\r\n                                }\r\n                        })\r\n                } else {\r\n                        selectAll = false;\r\n                }\r\n                return selectAll;\r\n        }\r\n                //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\n        dataStateChangeBatchSample = (event) => {\r\n               let updatedList = [];\r\n               if (event.dataState && event.dataState.filter === null) {\r\n                       let addComponentDataListCopy = this.state.addComponentDataListCopy || this.state.samples || [];\r\n                       addComponentDataListCopy.forEach(x => {\r\n                               const exists = this.state.addedSamplesListSortedList.some(\r\n                                       item => item.ntransactiontestcode === x.ntransactiontestcode\r\n                               );\r\n                               if (!exists) {\r\n                                       updatedList.push(x);\r\n                               }\r\n                       });\r\n               } else {\r\n                       updatedList = this.state.samples || []\r\n               }\r\n               this.setState({\r\n                       dataResult: process(this.state.samples || [], event.dataState),\r\n                       dataState: event.dataState, samples: updatedList, addSelectAll: event.dataState && event.dataState.filter === null ?\r\n                               this.valiateCheckAll(updatedList) :\r\n                               this.valiateCheckAll(process(updatedList || [], event.dataState).data)\r\n               });\r\n       }\r\n}\r\n   export default injectIntl(AddSample);\r\n"]},"metadata":{},"sourceType":"module"}