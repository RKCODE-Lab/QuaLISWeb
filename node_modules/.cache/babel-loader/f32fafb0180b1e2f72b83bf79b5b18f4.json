{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\designtemplatemapping\\\\AddDesignTemplateMapping.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col, Nav } from 'react-bootstrap';\nimport { faLanguage } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport ReactSelectAddEdit from '../../components/react-select-add-edit/react-select-add-edit-component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst AddDesignTemplateMapping = props => {\n  console.log(\"props.selectedRecord:\", props);\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, props.nformcode === -2 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.formatMessage({\n      id: \"IDS_FORMNAME\"\n    }),\n    name: \"sformname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, 'sformname'),\n    placeholder: props.formatMessage({\n      id: \"IDS_FORMNAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord.sformname : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.formatMessage({\n      id: \"IDS_MODULETYPE\"\n    }),\n    isSearchable: true,\n    name: \"nnewmodule\",\n    isDisabled: false,\n    placeholder: props.formatMessage({\n      id: \"IDS_MODULETYPE\"\n    }),\n    isMandatory: true,\n    options: props.moduleTypeArray,\n    value: props.selectedRecord[\"nnewmodule\"],\n    onChange: event => props.onComboChange(event, 'nnewmodule'),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), props.selectedRecord[\"nnewmodule\"] && props.selectedRecord[\"nnewmodule\"].value === transactionStatus.YES ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormInput //name={props.language}\n  , {\n    name: \"nmodulecode\",\n    placeholder: props.formatMessage({\n      id: \"IDS_MODULENAME\"\n    }),\n    onChange: event => props.onInputOnChange(event, 'nmodulecode'),\n    className: \"\",\n    isMandatory: true,\n    label: props.formatMessage({\n      id: \"IDS_MODULENAME\"\n    }),\n    required: true,\n    value: props.selectedRecord.nmodulecode ? props.selectedRecord.nmodulecode : \"\",\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.formatMessage({\n      id: \"IDS_MODULENAME\"\n    }),\n    isSearchable: true,\n    name: \"nmodulecode\",\n    isDisabled: false,\n    placeholder: props.formatMessage({\n      id: \"IDS_MODULENAME\"\n    }),\n    isMandatory: true,\n    options: props.designTemplateQualisModule,\n    value: props.selectedRecord[\"nmodulecode\"],\n    onChange: event => props.onComboChange(event, 'nmodulecode'),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.formatMessage({\n      id: \"IDS_TEMPLATE\"\n    }),\n    isSearchable: true,\n    name: \"nreactregtemplatecode\",\n    isDisabled: false,\n    placeholder: props.formatMessage({\n      id: \"IDS_TEMPLATE\"\n    }),\n    isMandatory: true,\n    options: props.designtemplatemappingList,\n    optionId: \"nreactregtemplatecode\",\n    optionValue: \"sregtemplatename\",\n    value: props.selectedRecord[\"nreactregtemplatecode\"],\n    onChange: event => props.onComboChange(event, 'nreactregtemplatecode'),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), props.needSubSample && props.subSampleTemplateList.length > 0 ? /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.formatMessage({\n      id: \"IDS_SUBSAMPLETEMPLATE\"\n    }),\n    isSearchable: true,\n    name: \"nsubsampletemplatecode\",\n    isDisabled: false,\n    placeholder: props.formatMessage({\n      id: \"IDS_SUBSAMPLETEMPLATE\"\n    }),\n    isMandatory: true,\n    options: props.subSampleTemplateList,\n    optionId: \"nsubsampletemplatecode\",\n    optionValue: \"sregtemplatename\",\n    value: props.selectedRecord[\"nsubsampletemplatecode\"],\n    onChange: event => props.onComboChange(event, 'nsubsampletemplatecode'),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  })) : \"\");\n};\n\nexport default injectIntl(AddDesignTemplateMapping);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/designtemplatemapping/AddDesignTemplateMapping.jsx"],"names":["React","injectIntl","Row","Col","Nav","faLanguage","FontAwesomeIcon","FormSelectSearch","FormInput","ReactSelectAddEdit","CustomSwitch","transactionStatus","AddDesignTemplateMapping","props","console","log","nformcode","formatMessage","id","event","onInputOnChange","selectedRecord","sformname","moduleTypeArray","onComboChange","value","YES","nmodulecode","designTemplateQualisModule","designtemplatemappingList","needSubSample","subSampleTemplateList","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col,Nav } from 'react-bootstrap';\r\n\r\nimport { faLanguage } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport ReactSelectAddEdit from '../../components/react-select-add-edit/react-select-add-edit-component'\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst AddDesignTemplateMapping = (props) => {\r\n    console.log(\"props.selectedRecord:\", props);\r\n    return (\r\n        <Row>\r\n            {props.nformcode === -2 &&\r\n                <>\r\n                \r\n                    <FormInput\r\n                        label={props.formatMessage({ id: \"IDS_FORMNAME\" })}\r\n                        name={\"sformname\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event, 'sformname')}\r\n                        placeholder={props.formatMessage({ id: \"IDS_FORMNAME\" })}\r\n                        value={props.selectedRecord ? props.selectedRecord.sformname : \"\"}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={\"30\"}\r\n                    />\r\n               \r\n                    {/* <CustomSwitch\r\n                            label={props.formatMessage({ id: \"IDS_ISNEWMODULE\" })}\r\n                            type=\"switch\"\r\n                            name={\"nnewmodule\"}\r\n                            onChange={(event) => props.onInputOnChange(event, \"nnewmodule\")}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            //checked={props.selectedRecord[\"nnewmodule\"]}\r\n                            checked={props.selectedRecord[\"nnewmodule\"] && props.selectedRecord[\"nnewmodule\"] === 3 ? true : false}\r\n                        /> */}\r\n                    <FormSelectSearch\r\n                        formLabel={props.formatMessage({ id: \"IDS_MODULETYPE\" })}\r\n                        isSearchable={true}\r\n                        name={\"nnewmodule\"}\r\n                        isDisabled={false}\r\n                        placeholder={props.formatMessage({ id: \"IDS_MODULETYPE\" })}\r\n                        isMandatory={true}\r\n                        options={props.moduleTypeArray}                       \r\n                        value={props.selectedRecord[\"nnewmodule\"]}\r\n                        onChange={(event) => props.onComboChange(event, 'nnewmodule')}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                    />\r\n                {/* </Col> */}\r\n                    {props.selectedRecord[\"nnewmodule\"] && props.selectedRecord[\"nnewmodule\"].value === transactionStatus.YES ?\r\n                    <>\r\n                        {/* <Col md={10}> */}\r\n                            <FormInput\r\n                                //name={props.language}\r\n                                name={\"nmodulecode\"}\r\n                                placeholder={props.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                                onChange={(event) => props.onInputOnChange(event, 'nmodulecode')}\r\n                                className=\"\"\r\n                                isMandatory={true}\r\n                                label={props.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                                required={true}\r\n                                value={props.selectedRecord.nmodulecode ? props.selectedRecord.nmodulecode : \"\"}\r\n                                maxLength={\"100\"}\r\n                            />\r\n                       \r\n                    </>                  \r\n                    :\r\n                  \r\n                        <FormSelectSearch\r\n                            formLabel={props.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                            isSearchable={true}\r\n                            name={\"nmodulecode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                            isMandatory={true}\r\n                            options={props.designTemplateQualisModule}                       \r\n                            value={props.selectedRecord[\"nmodulecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, 'nmodulecode')}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                        />\r\n               \r\n                    }\r\n                     {/* <ReactSelectAddEdit\r\n                            name=\"nmodulecode\"\r\n                            label={props.intl.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                            className=\"color-select\"\r\n                            classNamePrefix=\"react-select\"\r\n                            optionId=\"nmodulecode\"\r\n                            optionValue=\"sdisplayname\"\r\n                            options={props.designTemplateQualisModule || []}\r\n                            isMandatory={true}\r\n                            getValue={value => props.onComboChange(value, \"nmodulecode\")}\r\n                            value={props.selectedRecord[\"nmodulecode\"]? props.selectedRecord[\"nmodulecode\"]: \"\" }\r\n                            // defaultValue={props.selectedRecord? props.selectedRecord[\"sparametername\"]:\"\"}\r\n                    />  */}\r\n                \r\n                </>\r\n            }\r\n            {/* <Col md={12}> */}\r\n                <FormSelectSearch\r\n                    formLabel={props.formatMessage({ id: \"IDS_TEMPLATE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nreactregtemplatecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.formatMessage({ id: \"IDS_TEMPLATE\" })}\r\n                    isMandatory={true}\r\n                    options={props.designtemplatemappingList}\r\n                    optionId='nreactregtemplatecode'\r\n                    optionValue='sregtemplatename'\r\n                    value={props.selectedRecord[\"nreactregtemplatecode\"]}\r\n                    onChange={(event) => props.onComboChange(event, 'nreactregtemplatecode')}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n            {/* </Col> */}\r\n            {props.needSubSample && props.subSampleTemplateList.length > 0 ?\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={props.formatMessage({ id: \"IDS_SUBSAMPLETEMPLATE\" })}\r\n                        isSearchable={true}\r\n                        name={\"nsubsampletemplatecode\"}\r\n                        isDisabled={false}\r\n                        placeholder={props.formatMessage({ id: \"IDS_SUBSAMPLETEMPLATE\" })}\r\n                        isMandatory={true}\r\n                        options={props.subSampleTemplateList}\r\n                        optionId='nsubsampletemplatecode'\r\n                        optionValue='sregtemplatename'\r\n                        value={props.selectedRecord[\"nsubsampletemplatecode\"]}\r\n                        onChange={(event) => props.onComboChange(event, 'nsubsampletemplatecode')}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                    />\r\n                </Col>\r\n                : \"\"}\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddDesignTemplateMapping);\r\n"]},"metadata":{},"sourceType":"module"}