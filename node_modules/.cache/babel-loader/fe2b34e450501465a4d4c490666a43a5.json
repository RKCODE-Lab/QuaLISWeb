{"ast":null,"code":"import rsapi from '../rsapi';\nimport Axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { initRequest } from './LoginAction';\nimport { intl } from '../components/App';\nimport { sortData, constructOptionList, replaceUpdatedObject, constructjsonOptionList, constructjsonOptionDefault, childComboLoadForEdit, rearrangeDateFormat } from '../components/CommonScript';\nimport { transactionStatus, attachmentType } from '../components/Enumeration';\nimport { postCRUDOrganiseTransSearch, viewAttachment, crudMaster } from './ServiceAction';\nexport function getProtocolTemplateByConfigVersion(inputData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"protocol/getProtocolTemplateList\", inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData: { ...inputData.masterData,\n            ...responseData,\n            defaultApprovalVersionValue: inputData.defaultApprovalVersionValue\n          },\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function ProtocolFilterSubmit(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"protocol/getProtocolData\", inputParam.inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      };\n\n      if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\n        inputParam.searchRef.current.value = \"\";\n        masterData['searchedProtocol'] = undefined;\n      }\n\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport const getProtocolDetail = protocolItem => {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/protocol/getActiveProtocolById\", {\n      ndesigntemplatemappingcode: protocolItem.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n      napprovalconfigversioncode: protocolItem.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n      ntranscode: protocolItem.masterData.realStatusValue.ntransactionstatus,\n      nprotocolcode: protocolItem.nprotocolcode,\n      userinfo: protocolItem.userinfo\n    }).then(response => {\n      let masterData = { ...protocolItem.masterData,\n        ...response.data\n      }; //sortData(masterData);\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          dataState: undefined,\n          masterData\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n};\nexport function completeProtocolAction(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"protocol/completeProtocol\", inputParam.inputData).then(response => {\n      if (response.data) {\n        replaceUpdatedObject(response.data[\"protocol\"], inputParam.inputData.masterData.protocol, \"nprotocolcode\");\n        delete response.data[\"protocol\"];\n        let masterData = { ...inputParam.inputData.masterData,\n          ...response.data\n        };\n        let respObject = { ...inputParam.inputData,\n          masterData,\n          //Added by sonia on 13th Feb 2025 for jira id:ALPD-5403\n          loading: false,\n          loadEsign: false,\n          openModal: false\n        };\n        dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject)); // dispatch({\n        //     type: DEFAULT_RETURN,\n        //     payload: {\n        //         masterData,\n        //         loading: false,\n        //         loadEsign: false,\n        //         openModal: false,\n        //     }    \n        // })\n      } else {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false,\n            loadEsign: false,\n            openModal: false\n          }\n        });\n        toast.warn(response.data.rtn);\n      }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function dynamicAction(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"protocol/dynamicActionProtocol\", inputParam.inputData).then(response => {\n      if (response.data) {\n        replaceUpdatedObject(response.data[\"protocol\"], inputParam.inputData.masterData.protocol, \"nprotocolcode\");\n        delete response.data[\"protocol\"];\n        let masterData = { ...inputParam.inputData.masterData,\n          ...response.data\n        };\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            masterData,\n            loading: false,\n            loadEsign: false,\n            openModal: false\n          }\n        });\n      } else {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false,\n            loadEsign: false,\n            openModal: false\n          }\n        });\n        toast.warn(response.data.rtn);\n      }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function rejectProtocolAction(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"protocol/rejectProtocol\", inputParam.inputData).then(response => {\n      if (response.data) {\n        replaceUpdatedObject(response.data[\"protocol\"], inputParam.inputData.masterData.protocol, \"nprotocolcode\");\n        delete response.data[\"protocol\"];\n        let masterData = { ...inputParam.inputData.masterData,\n          ...response.data\n        };\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            masterData,\n            loading: false,\n            loadEsign: false,\n            openModal: false\n          }\n        });\n      } else {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false,\n            loadEsign: false,\n            openModal: false\n          }\n        });\n        toast.warn(response.data.rtn);\n      }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport const addProtocolFile = inputParam => {\n  return dispatch => {\n    //if(inputParam.masterData.selectedProtocol[0].ntransactionstatus === transactionStatus.DRAFT || inputParam.masterData.selectedProtocol[0].ntransactionstatus === transactionStatus.CORRECTION){\n    dispatch(initRequest(true));\n    let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\n      userinfo: inputParam.userInfo\n    })];\n\n    if (inputParam.operation === \"update\") {\n      urlArray.push(rsapi.post(\"/protocol/getActiveProtocolFileById\", {\n        userinfo: inputParam.userInfo,\n        genericlabel: inputParam.genericLabel,\n        \"nprotocolcode\": inputParam.selectedRecord.nprotocolcode,\n        \"nprotocolfilecode\": inputParam.selectedRecord.nprotocolfilecode\n      }));\n    }\n\n    Axios.all(urlArray).then(response => {\n      const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\n      const linkmaster = linkMap.get(\"OptionList\");\n      let selectedRecord = {};\n      const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\n      let disabled = false;\n      let editObject = {};\n\n      if (inputParam.operation === \"update\") {\n        editObject = response[1].data.ProtocolFile[0];\n        let nlinkcode = {};\n        let link = {};\n\n        if (editObject.nattachmenttypecode === attachmentType.LINK) {\n          nlinkcode = {\n            \"label\": editObject.slinkname,\n            \"value\": editObject.nlinkcode\n          };\n          link = {\n            slinkfilename: editObject.sfilename,\n            slinkdescription: editObject.sdescription,\n            nlinkdefaultstatus: editObject.ndefaultstatus,\n            sfilesize: '',\n            nfilesize: 0,\n            ndefaultstatus: 4,\n            sfilename: ''\n          };\n        } else {\n          nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\"; //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\n\n          link = {\n            slinkfilename: '',\n            slinkdescription: '',\n            nlinkdefaultstatus: 4,\n            sfilesize: editObject.sfilesize,\n            nfilesize: editObject.nfilesize,\n            ndefaultstatus: editObject.ndefaultstatus,\n            sfilename: editObject.sfilename\n          };\n        }\n\n        selectedRecord = { ...link,\n          nprotocolfilecode: editObject.nprotocolfilecode,\n          nattachmenttypecode: editObject.nattachmenttypecode,\n          sdescription: editObject.sdescription,\n          nlinkcode // disabled: true\n\n        };\n      } else {\n        selectedRecord = {\n          nattachmenttypecode: response[0].data.AttachmentType.length > 0 ? response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\n          nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\",\n          disabled\n        };\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          [inputParam.modalName]: true,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          ncontrolCode: inputParam.ncontrolCode,\n          selectedRecord,\n          loading: false,\n          linkMaster: linkmaster,\n          showSaveContinue: false,\n          editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    }); // }else{\n    //     toast.warn(intl.formatMessage({ id:\"IDS_SELECTDRAFTCORRECTIONRECORD\" }));\n    // }\n  };\n};\nexport function validateEsignforProtocol(inputParam) {\n  return dispatch => {\n    dispatch(initRequest(true));\n    return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData).then(response => {\n      if (response.data === \"Success\") {\n        const methodUrl = inputParam.screenData.inputParam.methodUrl;\n        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\n\n        if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] && inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\n          delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\n          delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\n          delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\n          delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\n        }\n\n        dispatch(dispatchMethods(inputParam[\"screenData\"]));\n      }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.info(error.response.data);\n      }\n    });\n  };\n}\n\nfunction dispatchMethods(screenData) {\n  return dispatch => {\n    let action = screenData.inputParam.action;\n\n    switch (action) {\n      case \"editprotocol\":\n        dispatch(updateProtocolAction(screenData.inputParam, screenData.masterData, \"openModal\"));\n        break;\n\n      case \"deleteprotocol\":\n        dispatch(crudMaster(screenData.inputParam, screenData.masterData, \"openModal\"));\n        break;\n\n      case \"editprotocolfile\":\n        dispatch(crudMaster(screenData.inputParam, screenData.masterData, \"openChildModal\"));\n        break;\n\n      case \"deleteprotocolfile\":\n        dispatch(crudMaster(screenData.inputParam, screenData.masterData, \"openChildModal\"));\n        break;\n\n      case \"complete\":\n        dispatch(completeProtocolAction(screenData.inputParam, screenData.masterData));\n        break;\n\n      case \"dynamicAction\":\n        dispatch(dynamicAction(screenData.inputParam, screenData.masterData));\n        break;\n\n      case \"reject\":\n        dispatch(rejectProtocolAction(screenData.inputParam, screenData.masterData));\n        break;\n\n      case \"copy\":\n        dispatch(crudMaster(screenData.inputParam, screenData.masterData, \"openModal\"));\n        break;\n\n      default:\n        break;\n    }\n  };\n}\n\nexport function getEditComboService(inputParam, columnList, selectedRecord1, childColumnList, comboComponents, withoutCombocomponent, editableComboList) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    const {\n      userInfo\n    } = { ...inputParam\n    };\n    let masterData = inputParam[\"masterData\"];\n    let parentColumnList = [...columnList, ...editableComboList];\n    masterData[\"selectedProtocol\"] = [];\n    masterData[\"selectedProtocol\"].push(inputParam[\"toedit\"]);\n    const nprotocolcode = inputParam.toedit[inputParam.primaryKeyField];\n    const ndesigntemplatemappingcode = inputParam.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode;\n    let urlArray = [];\n    const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\n    const selectedProtocolData = rsapi.post(\"/protocol/getEditProtocolDetails\", {\n      nprotocolcode,\n      ndesigntemplatemappingcode,\n      parentcolumnlist: parentColumnList,\n      childcolumnlist: childColumnList,\n      userinfo: userInfo\n    });\n    const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\n      datecolumnlist: withoutCombocomponent.filter(x => x.inputtype === \"date\"),\n      userinfo: userInfo\n    });\n    urlArray = [timeZoneService, selectedProtocolData, dateService];\n    Axios.all(urlArray).then(response => {\n      let selectedRecord = { ...response[1].data[\"EditData\"]\n      };\n      selectedRecord = { ...selectedRecord,\n        ...selectedRecord['jsondata']\n      };\n      const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\n      const timeZoneList = timeZoneMap.get(\"OptionList\");\n      const defaultTimeZone = {\n        label: userInfo.stimezoneid,\n        value: userInfo.ntimezonecode\n      };\n      const languagetypeCode = undefined;\n      const comboData = response[1].data;\n      delete comboData['EditData'];\n      let comboValues = {};\n\n      if (columnList.length > 0) {\n        columnList.map(x => {\n          if (x.inputtype === 'combo') {\n            if (comboData[x.label] && comboData[x.label].length > 0) {\n              if (comboData[x.label].length > 0) {\n                if (comboData[x.label][0].label === undefined) {\n                  const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember, x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x);\n                  comboData[x.label] = optionList.get(\"OptionList\");\n                } else {\n                  comboData[x.label] = comboData[x.label];\n                  const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember, x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x);\n                }\n              } else {\n                comboData[x.label] = [];\n              }\n\n              comboValues = childComboLoadForEdit(x, comboData, selectedRecord, childColumnList, withoutCombocomponent);\n            } else {\n              comboValues = {\n                \"comboData\": comboData\n              };\n            }\n          } else {\n            comboValues = {\n              comboData: comboData,\n              ...comboValues\n            };\n          }\n        });\n      } else {\n        comboValues = {\n          \"comboData\": comboData\n        };\n      }\n\n      if (editableComboList.length > 0) {\n        editableComboList.map(x => {\n          if (x.inputtype === 'combo') {\n            if (comboData[x.label] && comboData[x.label].length > 0) {\n              if (comboData[x.label].length > 0) {\n                if (comboData[x.label][0].label === undefined) {\n                  const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember, x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x);\n                  comboData[x.label] = optionList.get(\"OptionList\");\n                } else {\n                  comboData[x.label] = comboData[x.label];\n                  const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember, x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x);\n                }\n              } else {\n                comboData[x.label] = [];\n              }\n\n              comboValues = {\n                \"comboData\": comboData\n              };\n            } else {\n              comboValues = {\n                \"comboData\": comboData\n              };\n            }\n          } else {\n            comboValues = {\n              comboData: comboData,\n              ...comboValues\n            };\n          }\n        });\n      }\n\n      withoutCombocomponent.map(date => {\n        if (date.inputtype === 'date') {\n          selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ? rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\";\n\n          if (date.nperiodcode) {\n            selectedRecord[date.label + \"value\"] = response[2].data[date.label] ? new Date(response[2].data[date.label][\"datevalue\"]) : null;\n          } else {\n            selectedRecord[date.label + \"value\"] = new Date();\n          }\n\n          if (date.hidebeforedate) {\n            selectedRecord[date.label + \"min\"] = selectedRecord[date.label + \"value\"];\n          }\n\n          if (date.hideafterdate) {\n            selectedRecord[date.label + \"max\"] = selectedRecord[date.label + \"value\"];\n          }\n        }\n      });\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          operation: \"update\",\n          screenName: \"IDS_PROTOCOL\",\n          timeZoneList,\n          defaultTimeZone,\n          selectedRecord,\n          ncontrolCode: inputParam.ncontrolCode,\n          openModal: true,\n          loading: false,\n          comboData: comboValues.comboData,\n          childColumnList,\n          comboComponents,\n          withoutCombocomponent,\n          columnList,\n          masterData\n        }\n      }); //}\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.info(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function insertProtocolAction(inputParam, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    let requestUrl = '';\n\n    if (inputParam.isFileupload) {\n      requestUrl = rsapi.post(\"/protocol/createProtocolWithFile\", inputParam.formData);\n    } else {\n      requestUrl = rsapi.post(\"/protocol/createProtocol\", inputParam.inputData);\n    }\n\n    return requestUrl.then(response => {\n      if (response.data) {\n        // let Protocol = updatedObjectWithNewElement(response.data[\"Protocol\"], masterData.Protocol, 'Protocol');\n        let protocol = response.data[\"protocol\"];\n        let selectedProtocol = response.data[\"selectedProtocol\"];\n        masterData = { ...masterData,\n          ...response.data,\n          selectedProtocol,\n          protocol\n        };\n        let respObject = {\n          masterData,\n          ...inputParam.inputData,\n          openModal: false,\n          loadEsign: false,\n          selectedRecord: undefined,\n          loading: false,\n          selectedRecord: {},\n          protocolSkip: 0\n        };\n        inputParam.postParamList[0]['clearFilter'] = 'yes';\n        dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject)); // dispatch({\n        //     type: DEFAULT_RETURN, \n        //     payload: { \n        //         masterData,\n        //        ...inputParam.inputData,\n        //        openModal: false,\n        //        loadEsign: false,                     \n        //        selectedRecord: undefined,\n        //        loading: false,                       \n        //        selectedRecord: {},                      \n        //        protocolSkip: 0,                       \n        //     } \n        // })\n      } else {\n        toast.warn(response.data.rtn);\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n\n      if (error.response.status === 500) {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n      }\n    });\n  };\n}\nexport function updateProtocolAction(inputParam, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    let requestUrl = '';\n\n    if (inputParam.isFileupload) {\n      requestUrl = rsapi.post(\"/protocol/updateProtocolWithFile\", inputParam.formData);\n    } else {\n      requestUrl = rsapi.post(\"/protocol/updateProtocol\", inputParam.inputData);\n    }\n\n    return requestUrl.then(response => {\n      if (response.data) {\n        replaceUpdatedObject(response.data[\"protocol\"], masterData.protocol, \"nprotocolcode\");\n        masterData = { ...masterData,\n          selectedProtocol: response.data[\"selectedProtocol\"]\n        };\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            masterData,\n            loading: false,\n            loadEsign: false,\n            openModal: false,\n            selectedRecord: {}\n          }\n        });\n      } else {\n        toast.warn(response.data.rtn);\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n      }\n    }).catch(error => {\n      if (error.response.status === 500) {\n        toast.error(error.message);\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n      } else if (error.response.status === 302) {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false,\n            loadEsign: false,\n            regEditParam: inputParam,\n            openModal: false\n          }\n        });\n      } else {\n        toast.warn(error.response.data);\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n      }\n    });\n  };\n}\nexport function copyProtocolAction(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"protocol/getCopyProtocol\", inputParam.inputData).then(response => {\n      const produtCategoryMap = constructOptionList(response.data && response.data.productCategory || [], \"nproductcatcode\", \"sproductcatname\", undefined, undefined, false);\n      const productMap = constructOptionList(response.data && response.data.product || [], \"nproductcode\", \"sproductname\", undefined, undefined, false);\n      const productCategory = produtCategoryMap.get(\"OptionList\");\n      const product = productMap.get(\"OptionList\");\n      const copyData = response.data && response.data.copyProtocol;\n      const productCategoryName = copyData[0][\"sproductcatname\"];\n      const productName = copyData[0][\"sproductname\"];\n      const protocolName = copyData[0][\"sprotocolname\"];\n      let selectedRecord = {};\n      selectedRecord[\"sprotocolname\"] = \"\";\n      selectedRecord[\"nproductcatcode\"] = {\n        \"value\": copyData[0][\"nproductcatcode\"],\n        \"label\": copyData[0][\"sproductcatname\"]\n      };\n      selectedRecord[\"nproductcode\"] = {\n        \"value\": copyData[0][\"nproductcode\"],\n        \"label\": copyData[0][\"sproductname\"]\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          productCategory,\n          product,\n          selectedRecord,\n          productCategoryName,\n          productName,\n          protocolName,\n          operation: inputParam.inputData.operation,\n          screenName: inputParam.inputData.screenName,\n          openModal: true,\n          loading: false,\n          ncontrolCode: inputParam.inputData.ncontrolCode\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function dynamicFileDownload(filedata) {\n  return dispatch => {\n    if (filedata.viewName === 'InfoView') {\n      if (filedata && filedata[filedata.field[2] + ['_ssystemfilename_Protocol']] !== undefined && filedata[filedata.field[2]] !== \"\") {\n        const inputParam = {\n          inputData: {\n            viewFile: {\n              ssystemfilename: filedata[filedata.field[2] + ['_ssystemfilename_Protocol']],\n              nprotocolcode: filedata.nprotocolcode,\n              sfilename: filedata[filedata.field[2]]\n            },\n            userinfo: filedata.userInfo\n          },\n          classUrl: \"protocol\",\n          operation: \"view\",\n          methodUrl: \"ProtocolWithFile\"\n        };\n        dispatch(viewAttachment(inputParam));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: \"IDS_FILENOTUPLOADED\"\n        }));\n      }\n    }\n  };\n}\nexport function getProduct(nproductcatcode, userInfo, selectedRecord) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"protocol/getProduct\", {\n      \"nproductcatcode\": nproductcatcode,\n      \"userinfo\": userInfo\n    }).then(response => {\n      let product = [];\n      const productMap = constructOptionList(response.data && response.data.product || [], \"nproductcode\", \"sproductname\", undefined, undefined, false);\n      product = productMap.get(\"OptionList\");\n      selectedRecord[\"nproductcode\"] = \"\";\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          product,\n          selectedRecord,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/ProtocolAction.js"],"names":["rsapi","Axios","toast","DEFAULT_RETURN","initRequest","intl","sortData","constructOptionList","replaceUpdatedObject","constructjsonOptionList","constructjsonOptionDefault","childComboLoadForEdit","rearrangeDateFormat","transactionStatus","attachmentType","postCRUDOrganiseTransSearch","viewAttachment","crudMaster","getProtocolTemplateByConfigVersion","inputData","dispatch","post","then","response","responseData","data","type","payload","masterData","defaultApprovalVersionValue","loading","catch","error","status","message","warn","ProtocolFilterSubmit","inputParam","searchRef","undefined","current","value","getProtocolDetail","protocolItem","ndesigntemplatemappingcode","realDesignTemplateMappingValue","napprovalconfigversioncode","realApprovalVersionValue","ntranscode","realStatusValue","ntransactionstatus","nprotocolcode","userinfo","dataState","completeProtocolAction","protocol","respObject","loadEsign","openModal","postParamList","rtn","dynamicAction","rejectProtocolAction","addProtocolFile","urlArray","userInfo","operation","push","genericlabel","genericLabel","selectedRecord","nprotocolfilecode","all","linkMap","LinkMaster","linkmaster","get","defaultLink","filter","items","item","ndefaultlink","YES","disabled","editObject","ProtocolFile","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","sdescription","nlinkdefaultstatus","ndefaultstatus","sfilesize","nfilesize","length","AttachmentType","FTP","modalName","screenName","ncontrolCode","linkMaster","showSaveContinue","editFiles","validateEsignforProtocol","methodUrl","screenData","toLowerCase","dispatchMethods","info","action","updateProtocolAction","getEditComboService","columnList","selectedRecord1","childColumnList","comboComponents","withoutCombocomponent","editableComboList","parentColumnList","toedit","primaryKeyField","defaultDesignTemplateMappingValue","timeZoneService","selectedProtocolData","parentcolumnlist","childcolumnlist","dateService","datecolumnlist","x","inputtype","timeZoneMap","timeZoneList","defaultTimeZone","label","stimezoneid","ntimezonecode","languagetypeCode","comboData","comboValues","map","optionList","valuemember","displaymember","source","isMultiLingual","date","nperiodcode","Date","hidebeforedate","hideafterdate","formatMessage","id","insertProtocolAction","requestUrl","isFileupload","formData","selectedProtocol","protocolSkip","console","log","regEditParam","copyProtocolAction","produtCategoryMap","productCategory","productMap","product","copyData","copyProtocol","productCategoryName","productName","protocolName","dynamicFileDownload","filedata","viewName","field","viewFile","ssystemfilename","classUrl","getProduct","nproductcatcode"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { sortData,constructOptionList,replaceUpdatedObject,constructjsonOptionList,constructjsonOptionDefault,childComboLoadForEdit\r\n    ,rearrangeDateFormat } from '../components/CommonScript';\r\nimport { transactionStatus, attachmentType } from '../components/Enumeration';\r\nimport { postCRUDOrganiseTransSearch,viewAttachment,crudMaster } from './ServiceAction';\r\n\r\nexport function getProtocolTemplateByConfigVersion(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"protocol/getProtocolTemplateList\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            defaultApprovalVersionValue: inputData.defaultApprovalVersionValue                           \r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function ProtocolFilterSubmit(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"protocol/getProtocolData\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                \r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\r\n                    inputParam.searchRef.current.value = \"\";\r\n                    masterData['searchedProtocol'] = undefined\r\n                }\r\n                \r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false\r\n                       \r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getProtocolDetail = (protocolItem) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n       \r\n        rsapi.post(\"/protocol/getActiveProtocolById\", {ndesigntemplatemappingcode:protocolItem.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            napprovalconfigversioncode:protocolItem.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n            ntranscode:protocolItem.masterData.realStatusValue.ntransactionstatus,\r\n            nprotocolcode: protocolItem.nprotocolcode,userinfo: protocolItem.userinfo })\r\n            .then(response => {                \r\n                    let masterData = {...protocolItem.masterData, ...response.data };\r\n\r\n                //sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        dataState: undefined,\r\n                        masterData\r\n                        \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function completeProtocolAction(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"protocol/completeProtocol\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data) {\r\n                    replaceUpdatedObject(response.data[\"protocol\"], inputParam.inputData.masterData.protocol, \"nprotocolcode\");\r\n\r\n                    delete response.data[\"protocol\"];\r\n                    let masterData = {\r\n                        ...inputParam.inputData.masterData, ...response.data,                       \r\n                    }\r\n\r\n                    let respObject = {                        \r\n                        ...inputParam.inputData,\r\n                        masterData, //Added by sonia on 13th Feb 2025 for jira id:ALPD-5403\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false\r\n                    }\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n\r\n                   \r\n                    // dispatch({\r\n                    //     type: DEFAULT_RETURN,\r\n                    //     payload: {\r\n                    //         masterData,\r\n                    //         loading: false,\r\n                    //         loadEsign: false,\r\n                    //         openModal: false,\r\n                    //     }    \r\n                    // })\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            loadEsign: false,\r\n                            openModal: false\r\n                        }\r\n                    });\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function dynamicAction(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"protocol/dynamicActionProtocol\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data) {\r\n                    replaceUpdatedObject(response.data[\"protocol\"], inputParam.inputData.masterData.protocol, \"nprotocolcode\");\r\n\r\n                    delete response.data[\"protocol\"];\r\n                    let masterData = {\r\n                        ...inputParam.inputData.masterData, ...response.data,\r\n                    }\r\n                    \r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            loadEsign: false,\r\n                            openModal: false,\r\n                        }    \r\n                    })\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            loadEsign: false,\r\n                            openModal: false\r\n                        }\r\n                    });\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function rejectProtocolAction(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"protocol/rejectProtocol\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data) {\r\n                    replaceUpdatedObject(response.data[\"protocol\"], inputParam.inputData.masterData.protocol, \"nprotocolcode\");\r\n\r\n                    delete response.data[\"protocol\"];\r\n                    let masterData = {\r\n                        ...inputParam.inputData.masterData, ...response.data,\r\n                       \r\n                    }\r\n                   \r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            loadEsign: false,\r\n                            openModal: false,\r\n                        }    \r\n                    })\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            loadEsign: false,\r\n                            openModal: false\r\n                        }\r\n                    });\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const addProtocolFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        //if(inputParam.masterData.selectedProtocol[0].ntransactionstatus === transactionStatus.DRAFT || inputParam.masterData.selectedProtocol[0].ntransactionstatus === transactionStatus.CORRECTION){\r\n            dispatch(initRequest(true));\r\n            let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n                userinfo: inputParam.userInfo\r\n            })];\r\n            if (inputParam.operation === \"update\") {\r\n                urlArray.push(rsapi.post(\"/protocol/getActiveProtocolFileById\", {\r\n                    userinfo: inputParam.userInfo,\r\n                    genericlabel:inputParam.genericLabel,\r\n                    \"nprotocolcode\": inputParam.selectedRecord.nprotocolcode,\r\n                    \"nprotocolfilecode\" : inputParam.selectedRecord.nprotocolfilecode,\r\n                }))\r\n            }\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                    const linkmaster = linkMap.get(\"OptionList\");\r\n                    let selectedRecord = {};\r\n                    const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                    let disabled = false;\r\n                    let editObject = {};\r\n                    if (inputParam.operation === \"update\") {\r\n                        editObject = response[1].data.ProtocolFile[0];\r\n                        let nlinkcode = {};\r\n                        let link = {};\r\n                        if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                            nlinkcode = {\r\n                                \"label\": editObject.slinkname,\r\n                                \"value\": editObject.nlinkcode\r\n                            }\r\n    \r\n                            link = {\r\n                                slinkfilename: editObject.sfilename,\r\n                                slinkdescription: editObject.sdescription,\r\n                                nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                                sfilesize: '',\r\n                                nfilesize: 0,\r\n                                ndefaultstatus: 4,\r\n                                sfilename: '',\r\n                            }\r\n    \r\n                        } else {\r\n                            nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\" //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\r\n                            link = {\r\n                                slinkfilename: '',\r\n                                slinkdescription: '',\r\n                                nlinkdefaultstatus: 4,\r\n                                sfilesize: editObject.sfilesize,\r\n                                nfilesize: editObject.nfilesize,\r\n                                ndefaultstatus: editObject.ndefaultstatus,\r\n                                sfilename: editObject.sfilename,\r\n                            }\r\n                        }\r\n    \r\n                        selectedRecord = {\r\n                            ...link,\r\n                            nprotocolfilecode: editObject.nprotocolfilecode,\r\n                            nattachmenttypecode: editObject.nattachmenttypecode,\r\n                            sdescription:editObject.sdescription,\r\n                            nlinkcode,\r\n    \r\n                            // disabled: true\r\n                        };\r\n                    } else {\r\n                        selectedRecord = {\r\n                            nattachmenttypecode: response[0].data.AttachmentType.length > 0 ?\r\n                                response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\r\n                            nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", \r\n                            disabled\r\n                        };\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            [inputParam.modalName]: true,\r\n                            operation: inputParam.operation,\r\n                            screenName: inputParam.screenName,\r\n                            ncontrolCode: inputParam.ncontrolCode,\r\n                            selectedRecord,\r\n                            loading: false,\r\n                            linkMaster: linkmaster,\r\n                            showSaveContinue: false,\r\n                            editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n        // }else{\r\n        //     toast.warn(intl.formatMessage({ id:\"IDS_SELECTDRAFTCORRECTIONRECORD\" }));\r\n\r\n        // }\r\n      \r\n    }\r\n}\r\n\r\nexport function validateEsignforProtocol(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n                    const methodUrl = inputParam.screenData.inputParam.methodUrl;\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"]\r\n                    }\r\n                    dispatch(dispatchMethods(inputParam[\"screenData\"]))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nfunction dispatchMethods(screenData) {\r\n    return (dispatch) => {\r\n        let action = screenData.inputParam.action\r\n        switch (action) {\r\n            case \"editprotocol\":\r\n                dispatch(updateProtocolAction(screenData.inputParam, screenData.masterData, \"openModal\"));\r\n                break;\r\n            case \"deleteprotocol\":\r\n                dispatch(crudMaster(screenData.inputParam, screenData.masterData,\"openModal\"));\r\n                break; \r\n            case \"editprotocolfile\":\r\n                dispatch(crudMaster(screenData.inputParam, screenData.masterData,\"openChildModal\"));\r\n                break; \r\n            case \"deleteprotocolfile\":\r\n                dispatch(crudMaster(screenData.inputParam, screenData.masterData,\"openChildModal\"));\r\n                break;     \r\n            case \"complete\":\r\n                dispatch(completeProtocolAction(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"dynamicAction\":\r\n                dispatch(dynamicAction(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"reject\":\r\n                dispatch(rejectProtocolAction(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"copy\":\r\n                dispatch(crudMaster(screenData.inputParam, screenData.masterData, \"openModal\"));\r\n                break;    \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getEditComboService(inputParam, columnList,\r\n    selectedRecord1, childColumnList, comboComponents,\r\n    withoutCombocomponent, editableComboList) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const { userInfo } = { ...inputParam };\r\n        let masterData = inputParam[\"masterData\"];\r\n        let parentColumnList = [...columnList, ...editableComboList];\r\n        \r\n        masterData[\"selectedProtocol\"] = [];\r\n        masterData[\"selectedProtocol\"].push(inputParam[\"toedit\"]);\r\n\r\n        const nprotocolcode = inputParam.toedit[inputParam.primaryKeyField];\r\n        const ndesigntemplatemappingcode = inputParam.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n\r\n        let urlArray = [];\r\n\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        \r\n        const selectedProtocolData = rsapi.post(\"/protocol/getEditProtocolDetails\", {\r\n            nprotocolcode,ndesigntemplatemappingcode, parentcolumnlist: parentColumnList,\r\n            childcolumnlist: childColumnList,userinfo: userInfo\r\n        })\r\n\r\n        const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n            datecolumnlist: withoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n            userinfo: userInfo\r\n        })\r\n\r\n        urlArray = [timeZoneService, selectedProtocolData, dateService]\r\n\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = { ...response[1].data[\"EditData\"] };\r\n                selectedRecord = { ...selectedRecord, ...selectedRecord['jsondata'] }\r\n                \r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userInfo.stimezoneid, value: userInfo.ntimezonecode }\r\n\r\n                \r\n                    const languagetypeCode = undefined\r\n                    const comboData = response[1].data;\r\n                    delete comboData['EditData']\r\n                    let comboValues = {}\r\n                    if (columnList.length > 0) {\r\n                        columnList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    \r\n                                    comboValues = childComboLoadForEdit(x, comboData, selectedRecord,\r\n                                        childColumnList, withoutCombocomponent)\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        comboValues = {\r\n                            \"comboData\": comboData,\r\n                        }\r\n                    }\r\n                    if (editableComboList.length > 0) {\r\n                        editableComboList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n\r\n                    }\r\n\r\n                    withoutCombocomponent.map(date => {\r\n                        if (date.inputtype === 'date') {\r\n                            selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ?\r\n                                rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\"\r\n\r\n                            if (date.nperiodcode) {\r\n                                selectedRecord[date.label + \"value\"] = response[2].data[date.label] ?\r\n                                    new Date(response[2].data[date.label][\"datevalue\"]) : null;\r\n                            } else {\r\n                                selectedRecord[date.label + \"value\"] = new Date();\r\n                            }\r\n\r\n                            if (date.hidebeforedate) {\r\n                                selectedRecord[date.label + \"min\"] = selectedRecord[date.label + \"value\"]\r\n                            }\r\n                            if (date.hideafterdate) {\r\n                                selectedRecord[date.label + \"max\"] = selectedRecord[date.label + \"value\"]\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                   \r\n\r\n                    \r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                           \r\n                            operation: \"update\",\r\n                            screenName:\"IDS_PROTOCOL\",                           \r\n                            timeZoneList,\r\n                            defaultTimeZone,\r\n                            selectedRecord,\r\n                            ncontrolCode: inputParam.ncontrolCode,\r\n                            openModal: true,                           \r\n                            loading: false,                            \r\n                            comboData: comboValues.comboData,\r\n                            childColumnList, comboComponents,\r\n                            withoutCombocomponent,\r\n                            columnList,\r\n                            masterData\r\n                        }\r\n                    })\r\n                //}\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.info(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport function insertProtocolAction(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let requestUrl = '';\r\n        if (inputParam.isFileupload) {\r\n            requestUrl = rsapi.post(\"/protocol/createProtocolWithFile\", inputParam.formData);\r\n        } else {\r\n            requestUrl = rsapi.post(\"/protocol/createProtocol\", inputParam.inputData);\r\n        }\r\n        return requestUrl\r\n            .then(response => {\r\n                if (response.data) {\r\n                    // let Protocol = updatedObjectWithNewElement(response.data[\"Protocol\"], masterData.Protocol, 'Protocol');\r\n                    let protocol = response.data[\"protocol\"];\r\n                    let selectedProtocol = response.data[\"selectedProtocol\"];    \r\n                    masterData = {\r\n                        ...masterData, ...response.data,\r\n                        selectedProtocol,protocol,\r\n                    }\r\n                    \r\n                    let respObject = {\r\n                        masterData,\r\n                        ...inputParam.inputData,\r\n                        openModal: false,\r\n                        loadEsign: false,                     \r\n                        selectedRecord: undefined,\r\n                        loading: false,                       \r\n                        selectedRecord: {},                      \r\n                        protocolSkip: 0,                       \r\n                    }\r\n\r\n                     inputParam.postParamList[0]['clearFilter'] = 'yes';\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                    // dispatch({\r\n                    //     type: DEFAULT_RETURN, \r\n                    //     payload: { \r\n                    //         masterData,\r\n                    //        ...inputParam.inputData,\r\n                    //        openModal: false,\r\n                    //        loadEsign: false,                     \r\n                    //        selectedRecord: undefined,\r\n                    //        loading: false,                       \r\n                    //        selectedRecord: {},                      \r\n                    //        protocolSkip: 0,                       \r\n                    //     } \r\n                    // })\r\n\r\n\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                    dispatch({ \r\n                        type: DEFAULT_RETURN, \r\n                        payload: { \r\n                            loading: false                            \r\n                        } \r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                if (error.response.status === 500) {\r\n                    dispatch({ \r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        } })\r\n                    toast.error(error.message);\r\n                }\r\n                else {                    \r\n                    toast.warn(error.response.data);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false\r\n                        }\r\n                    });                    \r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function updateProtocolAction(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let requestUrl = '';\r\n        if (inputParam.isFileupload) {\r\n            requestUrl = rsapi.post(\"/protocol/updateProtocolWithFile\", inputParam.formData);\r\n        } else {\r\n            requestUrl = rsapi.post(\"/protocol/updateProtocol\", inputParam.inputData);\r\n        }\r\n        return requestUrl\r\n            .then(response => {\r\n                if (response.data) {\r\n                  \r\n                    replaceUpdatedObject(response.data[\"protocol\"], masterData.protocol, \"nprotocolcode\");\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedProtocol: response.data[\"selectedProtocol\"],               \r\n                    }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData,  loading: false, \r\n                            loadEsign: false, openModal: false,\r\n                             selectedRecord: {}\r\n                        }\r\n                    });\r\n                   \r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n                else if (error.response.status === 302) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, loadEsign: false,\r\n                            regEditParam: inputParam,\r\n                            openModal:false\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false} })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function copyProtocolAction(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"protocol/getCopyProtocol\", inputParam.inputData)\r\n            .then(response => {\r\n\r\n                const produtCategoryMap = constructOptionList(response.data && response.data.productCategory || [], \"nproductcatcode\",\r\n                    \"sproductcatname\", undefined, undefined, false);\r\n\r\n                const productMap = constructOptionList(response.data && response.data.product || [], \"nproductcode\",\r\n                    \"sproductname\", undefined, undefined, false);\r\n\r\n                const productCategory = produtCategoryMap.get(\"OptionList\");\r\n                const product = productMap.get(\"OptionList\");\r\n\r\n                const copyData = response.data && response.data.copyProtocol;\r\n                const productCategoryName = copyData[0][\"sproductcatname\"];\r\n                const productName = copyData[0][\"sproductname\"];\r\n                const protocolName = copyData[0][\"sprotocolname\"];\r\n\r\n                let selectedRecord = {};\r\n                selectedRecord[\"sprotocolname\"] = \"\";\r\n                \r\n                selectedRecord[\"nproductcatcode\"] = {\r\n                    \"value\": copyData[0][\"nproductcatcode\"],\r\n                    \"label\": copyData[0][\"sproductcatname\"]\r\n                };\r\n\r\n                selectedRecord[\"nproductcode\"] = {\r\n                    \"value\": copyData[0][\"nproductcode\"],\r\n                    \"label\": copyData[0][\"sproductname\"]\r\n                };\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                      \r\n                        productCategory,\r\n                        product,                       \r\n                        selectedRecord,\r\n                        productCategoryName,\r\n                        productName,\r\n                        protocolName,\r\n                        operation: inputParam.inputData.operation,\r\n                        screenName: inputParam.inputData.screenName,\r\n                        openModal: true,\r\n                        loading: false,\r\n                        ncontrolCode:inputParam.inputData.ncontrolCode,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function dynamicFileDownload(filedata) {\r\n    return (dispatch) => {\r\n        if (filedata.viewName === 'InfoView') {\r\n            if (filedata && filedata[filedata.field[2] + ['_ssystemfilename_Protocol']] !== undefined && filedata[filedata.field[2]] !== \"\") {\r\n                const inputParam = {\r\n                    inputData: {\r\n                    viewFile: {\r\n                        ssystemfilename: filedata[filedata.field[2] + ['_ssystemfilename_Protocol']],\r\n                        nprotocolcode: filedata.nprotocolcode,\r\n                        sfilename: filedata[filedata.field[2]]\r\n                    },\r\n                    userinfo: filedata.userInfo\r\n                    },\r\n                    classUrl: \"protocol\",\r\n                    operation: \"view\",\r\n                    methodUrl: \"ProtocolWithFile\",\r\n                }\r\n                dispatch(viewAttachment(inputParam));\r\n            } else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_FILENOTUPLOADED\" }))\r\n            }      \r\n        }  \r\n    }\r\n}\r\n\r\nexport function getProduct(nproductcatcode,userInfo, selectedRecord) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"protocol/getProduct\", {\"nproductcatcode\": nproductcatcode,\"userinfo\": userInfo})\r\n            .then(response => {\r\n                let product = [];                \r\n                const productMap = constructOptionList(response.data && response.data.product || [], \"nproductcode\",\"sproductname\",\r\n                     undefined, undefined, false);\r\n                product = productMap.get(\"OptionList\");\r\n                selectedRecord[\"nproductcode\"]=\"\";\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        product,                      \r\n                        selectedRecord,\r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}