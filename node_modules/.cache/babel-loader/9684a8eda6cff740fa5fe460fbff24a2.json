{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';export function ViewJsonExceptionLogs(masterData,userInfo,viewJsonExceptionLogs,screenName){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"jsonexceptionlogs/getJsonExceptionLogsDetails\",{njsonexceptioncode:viewJsonExceptionLogs.njsonexceptioncode,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);dispatch({type:DEFAULT_RETURN,payload:{viewJsonExceptionLogs:viewJsonExceptionLogs,masterData:masterData,selectedId:viewJsonExceptionLogs.njsonexceptioncode,screenName:screenName,loading:false,openModal:true,needOldValueColumn:response.data['needOldValueColumn']}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/JsonExceptionLogsAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","initRequest","ViewJsonExceptionLogs","masterData","userInfo","viewJsonExceptionLogs","screenName","dispatch","post","njsonexceptioncode","userinfo","then","response","data","type","payload","selectedId","loading","openModal","needOldValueColumn","catch","error","status","message","warn"],"mappings":"yLAAA,MAAOA,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAAQC,cAAR,KAA6B,cAA7B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,WAAT,KAA4B,eAA5B,CAEA,MAAO,SAASC,CAAAA,qBAAT,CAA+BC,UAA/B,CAA2CC,QAA3C,CAAqDC,qBAArD,CAA4EC,UAA5E,CAAwF,CAC3F,MAAO,UAAUC,QAAV,CAAoB,CACvBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAH,KAAK,CAACU,IAAN,CAAW,+CAAX,CAA4D,CAAEC,kBAAkB,CAACJ,qBAAqB,CAACI,kBAA3C,CAA8DC,QAAQ,CAACN,QAAvE,CAA5D,EACKO,IADL,CACU,SAAAC,QAAQ,CAAI,CACbT,UAAU,gCACJA,UADI,EAEJS,QAAQ,CAACC,IAFL,CAAV,CAIDN,QAAQ,CAAC,CACLO,IAAI,CAAEf,cADD,CACiBgB,OAAO,CAAE,CAC3BV,qBAAqB,CAACA,qBADK,CAE3BF,UAAU,CAAVA,UAF2B,CAG3Ba,UAAU,CAACX,qBAAqB,CAACI,kBAHN,CAI3BH,UAAU,CAAVA,UAJ2B,CAK3BW,OAAO,CAAE,KALkB,CAM3BC,SAAS,CAAC,IANiB,CAO3BC,kBAAkB,CAACP,QAAQ,CAACC,IAAT,CAAc,oBAAd,CAPQ,CAD1B,CAAD,CAAR,CAYH,CAlBL,EAmBKO,KAnBL,CAmBW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CAAEO,IAAI,CAAEf,cAAR,CAAwBgB,OAAO,CAAE,CAAEE,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACA,GAAII,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAmC,CAC/BtB,KAAK,CAACqB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACDvB,KAAK,CAACwB,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeC,IAA1B,EACH,CACJ,CA3BL,EA4BH,CA9BD,CA+BH","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\n\r\nexport function ViewJsonExceptionLogs(masterData, userInfo, viewJsonExceptionLogs, screenName) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"jsonexceptionlogs/getJsonExceptionLogsDetails\", { njsonexceptioncode:viewJsonExceptionLogs.njsonexceptioncode,userinfo:userInfo})\r\n            .then(response => {\r\n                 masterData = {\r\n                    ...masterData,\r\n                    ...response.data\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        viewJsonExceptionLogs:viewJsonExceptionLogs,\r\n                        masterData,\r\n                        selectedId:viewJsonExceptionLogs.njsonexceptioncode,\r\n                        screenName,\r\n                        loading: false,\r\n                        openModal:true,\r\n                        needOldValueColumn:response.data['needOldValueColumn'] \r\n                        \r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}