{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Card,Modal,Button}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSave}from'@fortawesome/free-solid-svg-icons';import{connect}from'react-redux';import{FormattedMessage,injectIntl}from'react-intl';import{toast}from'react-toastify';import{callService,crudMaster,getHomeDashBoard,updateStore,validateEsignCredential,filterColumnData,checkParametersAvailableForHomeDashBoard,getReportViewChildDataListForDashBoard,selectCheckBoxDashBoardView,getAllSelectionDashBoardView}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{formatInputDate,rearrangeDateFormat}from'../../components/CommonScript';import{transactionStatus}from'../../components/Enumeration';import HomeDashBoardRowColTemplate from'../dashboardtypes/HomeDashBoardRowColTemplate';import DashBoardDynamicControls from'./DashBoardDynamicControls';import{ModalInner}from\"../../components/App.styles\";var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var HomeDashBoard=/*#__PURE__*/function(_React$Component){_inherits(HomeDashBoard,_React$Component);var _super=_createSuper(HomeDashBoard);function HomeDashBoard(props){var _this;_classCallCheck(this,HomeDashBoard);_this=_super.call(this,props);_this.openModal=function(){_this.setState({openModal:!_this.state.openModal});};_this.closeModal=function(){// this.setState({\n//     openModal: false\n// })\nvar openModalForHomeDashBoard=_this.props.Login.openModalForHomeDashBoard;openModalForHomeDashBoard=false;var updateInfo={typeName:DEFAULT_RETURN,data:{openModalForHomeDashBoard:openModalForHomeDashBoard}};_this.props.updateStore(updateInfo);};_this.onNumericInputOnChange=function(value,name,item){var _objectSpread2;var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.Login.inputFieldData),{},(_objectSpread2={},_defineProperty(_objectSpread2,name,value),_defineProperty(_objectSpread2,name.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread2,name.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread2)),parentcode:value.toString(),parentid:item.ndashboarddesigncode,userinfo:_this.props.Login.userInfo,ndashboardtypecode:_this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.Login.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);};_this.onInputOnChange=function(event,item){var _objectSpread3;var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.Login.inputFieldData),{},(_objectSpread3={},_defineProperty(_objectSpread3,event.target.name,selectedRecord[event.target.name]),_defineProperty(_objectSpread3,event.target.name.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread3,event.target.name.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread3)),parentcode:selectedRecord[event.target.name].toString(),parentid:item.ndashboarddesigncode,userinfo:_this.props.Login.userInfo,ndashboardtypecode:_this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.Login.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);};_this.onComboChange=function(comboData,fieldName,item){var _objectSpread4;//console.log(\"combo data:\", comboData, fieldName, item);\nvar selectedRecord=_this.state.selectedRecord||{};var selectedRecord2=_this.state.selectedRecord2||{};selectedRecord[fieldName]=comboData;selectedRecord2[fieldName]=comboData===null?-1:comboData.value;var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.Login.inputFieldData),{},(_objectSpread4={},_defineProperty(_objectSpread4,fieldName,comboData===null?-1:comboData.value),_defineProperty(_objectSpread4,fieldName.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread4,fieldName.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread4)),parentcode:comboData===null?\"-1\":comboData.value.toString(),parentid:item.ndashboarddesigncode,userinfo:_this.props.Login.userInfo,ndashboardtypecode:_this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.Login.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);};_this.handleDateChange=function(dateName,dateValue,item){var _objectSpread5;var selectedRecord=_this.state.selectedRecord;var selectedRecord2=_this.state.selectedRecord2||{};if(dateValue===null){// dateValue = new Date(item.dataList[0]);\ndateValue=rearrangeDateFormat(_this.props.Login.userInfo,item.dataList[0]);}selectedRecord[dateName]=dateValue;selectedRecord2[dateName]=dateValue;var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.Login.inputFieldData),{},(_objectSpread5={},_defineProperty(_objectSpread5,dateName,formatInputDate(dateValue,true)),_defineProperty(_objectSpread5,dateName.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread5,dateName.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread5)),parentcode:formatInputDate(dateValue,true),parentid:item.ndashboarddesigncode,userinfo:_this.props.Login.userInfo,ndashboardtypecode:_this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.Login.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);};_this.onSaveClick=function(saveType,formRef){var inputFieldData=_this.props.Login.inputFieldData;var failedControls=[];var startLabel=[];var label=\"IDS_ENTER\";var mandatoryFields=[];// console.log(\"this.state.selectedRecord:\", this.state.selectedRecord);\nvar fieldList=_this.props.Login.masterData.viewDashBoardDesignConfigList||[];fieldList.forEach(function(item){if(item.nmandatory===transactionStatus.YES){//if (item.ndesigncomponentcode !== designComponents.PATH ){\nmandatoryFields.push({\"idsName\":item.sdisplayname,\"dataField\":item.sfieldname,\"mandatoryLabel\":\"IDS_PROVIDE\",\"controlType\":\"textbox\"});}});mandatoryFields.forEach(function(item){if(_this.state.selectedRecord[item.dataField]===undefined||_this.state.selectedRecord[item.dataField]===null){var alertMessage=(item.alertPreFix?item.alertPreFix:'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'');failedControls.push(alertMessage);startLabel.push(item.mandatoryLabel);//\"IDS_PROVIDE\";\n}else{if(item.validateFunction){var validateData=item.validateFunction;if(validateData(_this.state.selectedRecord[item.dataField])===false){var _alertMessage=(item.alertPreFix?item.alertPreFix+\" \":'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?\" \"+item.alertSuffix:'');failedControls.push(_alertMessage);startLabel.push(item.mandatoryLabel);}}else{if(typeof _this.state.selectedRecord[item.dataField]===\"object\"){//to validate FormSelectSearch component\nif(_this.state.selectedRecord[item.dataField].length===0){var _alertMessage2=(item.alertPreFix?item.alertPreFix:'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'');failedControls.push(_alertMessage2);startLabel.push(item.mandatoryLabel);//\"IDS_SELECT\";\n}}else if(typeof _this.state.selectedRecord[item.dataField]===\"string\"){//to handle string field -- added trim function\nif(_this.state.selectedRecord[item.dataField].trim().length===0){var _alertMessage3=(item.alertPreFix?item.alertPreFix:'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'');failedControls.push(_alertMessage3);startLabel.push(item.mandatoryLabel);}}else{//number field\nif(_this.state.selectedRecord[item.dataField].length===0){var _alertMessage4=(item.alertPreFix?item.alertPreFix:'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'');failedControls.push(_alertMessage4);startLabel.push(item.mandatoryLabel);}}}}});if(failedControls.length===0){var inputParam={dashboardtypes:_this.props.Login.masterData.selectedDashBoardTypes,inputfielddata:inputFieldData,userinfo:_this.props.Login.userInfo};//console.log(\"inputParam:\", inputParam);\n_this.props.selectCheckBoxDashBoardView(\"HomeDashBoard\",_this.state.selectedRecord,_this.props.Login.masterData,inputParam,_this.props.Login.dashBoardTemplateNo,_this.props.Login.templateCode,_this.props.Login.homeDashBoard,_this.props.Login.currentPageNo);}else{//toast.info(`${this.props.intl.formatMessage({id:\"IDS_ENTER\"})} ${failedControls.join(\",\")}`);\nlabel=startLabel[0]===undefined?label:startLabel[0];toast.info(\"\".concat(_this.props.intl.formatMessage({id:label}),\" \").concat(failedControls[0]));}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.gridColumnList=[];_this.state={selectedRecord:{},controlMap:new Map(),userRoleControlRights:[],currentPageNo:0,openModal:false};_this.searchRef=React.createRef();return _this;}_createClass(HomeDashBoard,[{key:\"render\",value:function render(){//console.log(\"home dashbaord screen:\", this.props.Login);\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap\"},/*#__PURE__*/React.createElement(HomeDashBoardRowColTemplate,{userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,homeDashBoard:this.props.Login.homeDashBoard&&this.props.Login.homeDashBoard[this.props.Login.currentPageNo],checkParametersAvailable:this.props.checkParametersAvailableForHomeDashBoard,selectedRecord:this.props.Login.selectedRecordRealValue||{}})),this.props.Login.openModalForHomeDashBoard&&/*#__PURE__*/ // \nReact.createElement(Modal,{show:this.props.Login.openModalForHomeDashBoard,onHide:this.closeModal,backdrop:\"static\",className:\"dashboard-parameter\",dialogClassName:\"freakerstop\"},/*#__PURE__*/React.createElement(Modal.Header,{className:\"d-flex align-items-center\"},/*#__PURE__*/React.createElement(Modal.Title,{id:\"create-password\",className:\"header-primary flex-grow-1\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_PARAMETERS\",defaultMessage:\"Parameter\"})),/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-cancel\",variant:\"\",onClick:this.closeModal},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CANCEL\",defaultMessage:\"Cancel\"})),/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:this.onSaveClick},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SUBMIT\",defaultMessage:\"Submit\"}))),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(ModalInner,null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(DashBoardDynamicControls,{selectedRecord:this.props.Login.selectedRecord||{},onInputOnChange:this.onInputOnChange,onNumericInputOnChange:this.onNumericInputOnChange,onComboChange:this.onComboChange,handleDateChange:this.handleDateChange,viewDashBoardDesignConfigList:this.props.Login.masterData.viewDashBoardDesignConfigList||[]// operation={this.props.Login.operation}\n,operation:\"filter\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo}))))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.openModalForHomeDashBoard!==previousProps.Login.openModalForHomeDashBoard){this.setState({openModal:this.props.Login.openModalForHomeDashBoard});}}}]);return HomeDashBoard;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,getHomeDashBoard:getHomeDashBoard,updateStore:updateStore,validateEsignCredential:validateEsignCredential,filterColumnData:filterColumnData,checkParametersAvailableForHomeDashBoard:checkParametersAvailableForHomeDashBoard,getReportViewChildDataListForDashBoard:getReportViewChildDataListForDashBoard,selectCheckBoxDashBoardView:selectCheckBoxDashBoardView,getAllSelectionDashBoardView:getAllSelectionDashBoardView})(injectIntl(HomeDashBoard));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dashboardtypes/HomeDashBoard.jsx"],"names":["React","Card","Modal","Button","FontAwesomeIcon","faSave","connect","FormattedMessage","injectIntl","toast","callService","crudMaster","getHomeDashBoard","updateStore","validateEsignCredential","filterColumnData","checkParametersAvailableForHomeDashBoard","getReportViewChildDataListForDashBoard","selectCheckBoxDashBoardView","getAllSelectionDashBoardView","DEFAULT_RETURN","formatInputDate","rearrangeDateFormat","transactionStatus","HomeDashBoardRowColTemplate","DashBoardDynamicControls","ModalInner","mapStateToProps","state","Login","HomeDashBoard","props","openModal","setState","closeModal","openModalForHomeDashBoard","updateInfo","typeName","data","onNumericInputOnChange","value","name","item","selectedRecord","inputData","dashboarddesignconfig","inputfielddata","inputFieldData","concat","ndesigncomponentcode","sdesigncomponentname","parentcode","toString","parentid","ndashboarddesigncode","userinfo","userInfo","ndashboardtypecode","masterData","selectedDashBoardTypes","inputParam","viewDashBoardDesignConfigList","onInputOnChange","event","target","type","checked","YES","NO","onComboChange","comboData","fieldName","selectedRecord2","handleDateChange","dateName","dateValue","dataList","onSaveClick","saveType","formRef","failedControls","startLabel","label","mandatoryFields","fieldList","forEach","nmandatory","push","sdisplayname","sfieldname","dataField","undefined","alertMessage","alertPreFix","intl","formatMessage","id","idsName","alertSuffix","mandatoryLabel","validateFunction","validateData","length","trim","dashboardtypes","dashBoardTemplateNo","templateCode","homeDashBoard","currentPageNo","info","validateEsign","sreason","nreasoncode","spredefinedreason","password","screenData","createRef","extractedColumnList","gridColumnList","controlMap","Map","userRoleControlRights","searchRef","selectedRecordRealValue","previousProps","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, Modal, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    callService, crudMaster, getHomeDashBoard,\r\n    updateStore, validateEsignCredential, filterColumnData, checkParametersAvailableForHomeDashBoard,\r\n    getReportViewChildDataListForDashBoard, selectCheckBoxDashBoardView,\r\n    getAllSelectionDashBoardView\r\n} from '../../actions';\r\n\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { formatInputDate, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport HomeDashBoardRowColTemplate from '../dashboardtypes/HomeDashBoardRowColTemplate';\r\nimport DashBoardDynamicControls from './DashBoardDynamicControls';\r\nimport { ModalInner } from \"../../components/App.styles\";\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass HomeDashBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.gridColumnList = [];\r\n\r\n        this.state = {\r\n            selectedRecord: {},\r\n            controlMap: new Map(), userRoleControlRights: [],\r\n            currentPageNo: 0,\r\n            openModal: false\r\n        }\r\n        this.searchRef = React.createRef();\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            openModal: !this.state.openModal\r\n        })\r\n    }\r\n\r\n    closeModal = () => {\r\n        // this.setState({\r\n        //     openModal: false\r\n        // })\r\n        let openModalForHomeDashBoard = this.props.Login.openModalForHomeDashBoard;\r\n        openModalForHomeDashBoard = false;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModalForHomeDashBoard }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    render() {\r\n\r\n        //console.log(\"home dashbaord screen:\", this.props.Login);\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap\">\r\n                    <HomeDashBoardRowColTemplate\r\n                        userInfo={this.props.Login.userInfo}\r\n                        masterData={this.props.Login.masterData}\r\n                        homeDashBoard={this.props.Login.homeDashBoard && this.props.Login.homeDashBoard[this.props.Login.currentPageNo]}\r\n                        checkParametersAvailable={this.props.checkParametersAvailableForHomeDashBoard}\r\n                        selectedRecord={this.props.Login.selectedRecordRealValue || {}}\r\n                    />\r\n                </div>\r\n                {this.props.Login.openModalForHomeDashBoard &&\r\n                    // \r\n                    <Modal show={this.props.Login.openModalForHomeDashBoard}\r\n                        onHide={this.closeModal} backdrop=\"static\" className=\"dashboard-parameter\" dialogClassName=\"freakerstop\">\r\n                        <Modal.Header className=\"d-flex align-items-center\">\r\n                            <Modal.Title id=\"create-password\" className=\"header-primary flex-grow-1\">\r\n                                <FormattedMessage id={\"IDS_PARAMETERS\"} defaultMessage=\"Parameter\" />\r\n                            </Modal.Title>\r\n                            <Button className=\"btn-user btn-cancel\" variant=\"\" onClick={this.closeModal}>\r\n                                <FormattedMessage id='IDS_CANCEL' defaultMessage='Cancel' />\r\n                            </Button>\r\n                            <Button className=\"btn-user btn-primary-blue\" onClick={this.onSaveClick}>\r\n                                <FontAwesomeIcon icon={faSave} /> { }\r\n                                <FormattedMessage id='IDS_SUBMIT' defaultMessage='Submit' />\r\n                            </Button>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ModalInner>\r\n                                <Card.Body>\r\n                                    <DashBoardDynamicControls\r\n                                        selectedRecord={this.props.Login.selectedRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                        onComboChange={this.onComboChange}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        viewDashBoardDesignConfigList={this.props.Login.masterData.viewDashBoardDesignConfigList || []}\r\n                                       // operation={this.props.Login.operation}\r\n                                        operation={\"filter\"}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                    />\r\n                                </Card.Body>\r\n                            </ModalInner>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                }\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name, item) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        selectedRecord[name] = value;\r\n\r\n        const inputData = {\r\n            dashboarddesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.props.Login.inputFieldData,\r\n                [name]: value,\r\n                [name.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [name.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: value.toString(),\r\n            parentid: item.ndashboarddesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndashboardtypecode: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewDashBoardDesignConfigList: this.props.Login.masterData.viewDashBoardDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    }\r\n\r\n    onInputOnChange = (event, item) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        const inputData = {\r\n            dashboarddesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.props.Login.inputFieldData,\r\n                [event.target.name]: selectedRecord[event.target.name],\r\n                [event.target.name.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [event.target.name.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: selectedRecord[event.target.name].toString(),\r\n            parentid: item.ndashboarddesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndashboardtypecode: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewDashBoardDesignConfigList: this.props.Login.masterData.viewDashBoardDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    }\r\n\r\n    // onComboChange = (comboData, fieldName, item) => {\r\n    //     const selectedRecord = this.state.selectedRecord || {};\r\n\r\n    //     selectedRecord[fieldName] = comboData;\r\n\r\n    //     if (comboData != null){\r\n\r\n    //         const inputData = {\r\n    //             dashboarddesignconfig: item,\r\n    //             inputfielddata: {\r\n    //                 ...this.props.Login.inputFieldData,\r\n    //                 [fieldName]: comboData.value,\r\n    //                 [fieldName.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n    //                 [fieldName.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n    //             },\r\n    //             parentcode: comboData.value.toString(),\r\n    //             parentid: item.ndashboarddesigncode,\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             ndashboardtypecode: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n    //         }\r\n    //         const inputParam = {\r\n    //             viewDashBoardDesignConfigList: this.props.Login.masterData.viewDashBoardDesignConfigList,\r\n    //             selectedRecord,\r\n    //             inputData\r\n    //         }\r\n\r\n    //         this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    //     }\r\n    // }\r\n\r\n    onComboChange = (comboData, fieldName, item) => {\r\n        //console.log(\"combo data:\", comboData, fieldName, item);\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        const selectedRecord2 = this.state.selectedRecord2 || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        selectedRecord2[fieldName] = comboData === null ? -1 : comboData.value;\r\n        const inputData = {\r\n            dashboarddesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.props.Login.inputFieldData,\r\n                [fieldName]: comboData === null ? -1 : comboData.value,\r\n                [fieldName.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [fieldName.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: comboData === null ? \"-1\" : comboData.value.toString(),\r\n            parentid: item.ndashboarddesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndashboardtypecode: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewDashBoardDesignConfigList: this.props.Login.masterData.viewDashBoardDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    }\r\n\r\n    // handleDateChange = (dateName, dateValue, item) => {\r\n    //     const { selectedRecord } = this.state;\r\n       \r\n    //     if (dateValue === null){\r\n    //         dateValue = new Date(item.dataList[0]);\r\n    //     }\r\n\r\n    //     selectedRecord[dateName] = dateValue;      \r\n     \r\n    //     const inputData = {\r\n    //         dashboarddesignconfig: item,\r\n    //         inputfielddata: {\r\n    //             ...this.props.Login.inputFieldData,\r\n    //             [dateName]: formatInputDate(dateValue, true),\r\n    //             [dateName.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n    //             [dateName.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n    //         },\r\n    //         parentcode: formatInputDate(dateValue, true),\r\n    //         parentid: item.ndashboarddesigncode,\r\n    //         userinfo: this.props.Login.userInfo,\r\n    //         ndashboardtypecode: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n    //     }\r\n    //     const inputParam = {\r\n    //         viewDashBoardDesignConfigList: this.props.Login.masterData.viewDashBoardDesignConfigList,\r\n    //         selectedRecord,\r\n    //         inputData\r\n    //     }\r\n\r\n    //     this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n        \r\n    // }\r\n\r\n    handleDateChange = (dateName, dateValue, item) => {\r\n        const { selectedRecord } = this.state;\r\n        const selectedRecord2 = this.state.selectedRecord2 || {};\r\n\r\n        if (dateValue === null){\r\n            // dateValue = new Date(item.dataList[0]);\r\n            dateValue = rearrangeDateFormat(this.props.Login.userInfo,item.dataList[0]);\r\n        }\r\n\r\n        selectedRecord[dateName] = dateValue;\r\n        selectedRecord2[dateName] = dateValue;\r\n        \r\n        const inputData = {\r\n            dashboarddesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.props.Login.inputFieldData,\r\n                [dateName]: formatInputDate(dateValue, true),\r\n                [dateName.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [dateName.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: formatInputDate(dateValue, true),\r\n            parentid: item.ndashboarddesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndashboardtypecode: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewDashBoardDesignConfigList: this.props.Login.masterData.viewDashBoardDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        const inputFieldData = this.props.Login.inputFieldData;\r\n\r\n        const failedControls = [];\r\n        const startLabel = [];\r\n        let label = \"IDS_ENTER\";\r\n        let mandatoryFields = [];\r\n\r\n       // console.log(\"this.state.selectedRecord:\", this.state.selectedRecord);\r\n\r\n        const fieldList = this.props.Login.masterData.viewDashBoardDesignConfigList || [];\r\n        fieldList.forEach(item => {\r\n            if (item.nmandatory === transactionStatus.YES){\r\n            //if (item.ndesigncomponentcode !== designComponents.PATH ){\r\n                mandatoryFields.push({ \"idsName\": item.sdisplayname, \"dataField\": item.sfieldname  , \"mandatoryLabel\":\"IDS_PROVIDE\", \"controlType\": \"textbox\"})\r\n            }\r\n        });\r\n\r\n        mandatoryFields.forEach(item => {\r\n            if (this.state.selectedRecord[item.dataField] === undefined || this.state.selectedRecord[item.dataField] === null)\r\n            {\r\n                const alertMessage = (item.alertPreFix ? item.alertPreFix : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? item.alertSuffix : '')\r\n                failedControls.push(alertMessage);\r\n                startLabel.push(item.mandatoryLabel)//\"IDS_PROVIDE\";\r\n            }\r\n            else {\r\n                if (item.validateFunction) {\r\n                    const validateData = item.validateFunction;\r\n                    if (validateData(this.state.selectedRecord[item.dataField]) === false) {\r\n                        const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                        failedControls.push(alertMessage);\r\n                        startLabel.push(item.mandatoryLabel)\r\n                    }\r\n                }\r\n                else {\r\n                    if (typeof this.state.selectedRecord[item.dataField] === \"object\") {\r\n                        //to validate FormSelectSearch component\r\n                        if (this.state.selectedRecord[item.dataField].length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)//\"IDS_SELECT\";\r\n                        }\r\n                    }\r\n                    else if (typeof this.state.selectedRecord[item.dataField] === \"string\") {\r\n                        //to handle string field -- added trim function\r\n                        if (this.state.selectedRecord[item.dataField].trim().length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)\r\n                        }\r\n                    }\r\n                    else {\r\n                        //number field\r\n                        if (this.state.selectedRecord[item.dataField].length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (failedControls.length === 0) {\r\n            const inputParam = {\r\n                dashboardtypes: this.props.Login.masterData.selectedDashBoardTypes,\r\n                inputfielddata: inputFieldData,\r\n                userinfo: this.props.Login.userInfo\r\n            }\r\n            //console.log(\"inputParam:\", inputParam);\r\n            this.props.selectCheckBoxDashBoardView(\"HomeDashBoard\", this.state.selectedRecord, this.props.Login.masterData, inputParam, this.props.Login.dashBoardTemplateNo,\r\n                this.props.Login.templateCode, this.props.Login.homeDashBoard, this.props.Login.currentPageNo);\r\n        }\r\n        else {\r\n            //toast.info(`${this.props.intl.formatMessage({id:\"IDS_ENTER\"})} ${failedControls.join(\",\")}`);\r\n            label = startLabel[0] === undefined ? label :startLabel[0];\r\n            toast.info(`${this.props.intl.formatMessage({ id: label })} ${failedControls[0]}`);          \r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.openModalForHomeDashBoard !== previousProps.Login.openModalForHomeDashBoard) {\r\n            this.setState({ openModal: this.props.Login.openModalForHomeDashBoard });\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, getHomeDashBoard, updateStore,\r\n    validateEsignCredential, filterColumnData, checkParametersAvailableForHomeDashBoard,\r\n    getReportViewChildDataListForDashBoard, selectCheckBoxDashBoardView,\r\n    getAllSelectionDashBoardView\r\n})(injectIntl(HomeDashBoard));"]},"metadata":{},"sourceType":"module"}