{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import DropZone from'../../../components/dropzone/dropzone.component';import{Row,Col,Form}from'react-bootstrap';import FormTextarea from'../../../components/form-textarea/form-textarea.component';import FormInput from'../../../components/form-input/form-input.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import{attachmentType,transactionStatus}from'../../../components/Enumeration';import{MediaHeader}from'../../../components/App.styles';import TestPopOver from'../../ResultEntryBySample/TestPopOver';import CustomSwitch from'../../../components/custom-switch/custom-switch.component';var AddAttachment=function AddAttachment(props){var _props$selectedRecord=props.selectedRecord,nattachmenttypecode=_props$selectedRecord.nattachmenttypecode,disabled=_props$selectedRecord.disabled;// let nameString = props.operation === 'update'? props.selectedRecord && props.selectedRecord[props.displayName] && [props.selectedRecord[props.displayName]] : props.masterList ? props.masterList.map(obj=>obj[props.displayName]||obj[props.jsonField][props.displayName]) : []\nvar nameString=[];if(props.operation==='update'){if(props.selectedRecord&&props.selectedRecord[props.displayName]&&props.selectedRecord[props.displayName]!==\"-\"){nameString=[props.selectedRecord[props.displayName]];}else if(props.masterList){nameString=props.masterList.map(function(obj){return obj[props.displayName]||obj[props.jsonField][props.displayName];});}}else if(props.operation==='create'){if(props.masterList){nameString=props.masterList.map(function(obj){return obj[props.displayName]||obj[props.jsonField][props.displayName];});}}var message=\"\".concat(nameString.length,\" \").concat(props.intl.formatMessage({id:props.selectedListName||\"IDS_TESTS\"}),\" \").concat(props.intl.formatMessage({id:\"IDS_SELECTED\"}));var sdescrption=nattachmenttypecode===attachmentType.LINK?\"slinkdescription\":\"sdescription\";//console.log(\"props in file:\", props, nameString);\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,props.masterList&&Object.values(props.masterList).length>0?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\"},nameString.length===1?\"\".concat(props.intl.formatMessage({id:props.selectedListName||\"IDS_TESTS\"}),\": \").concat(nameString[0]):/*#__PURE__*/React.createElement(TestPopOver,{stringList:nameString,message:message}))))):\"\"),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Check,{name:\"nattachmenttypecode\",type:\"radio\",id:\"AddFiles\",label:props.intl.formatMessage({id:\"IDS_FTP\"}),inline:true,onChange:function onChange(event){return props.onInputOnChange(event,1,attachmentType.FTP);},checked:nattachmenttypecode===attachmentType.FTP?true:false,disabled:disabled}),/*#__PURE__*/React.createElement(Form.Check,{name:\"nattachmenttypecode\",type:\"radio\",id:\"AddLink\",label:props.intl.formatMessage({id:\"IDS_LINK\"}),inline:true,onChange:function onChange(event){return props.onInputOnChange(event,1,attachmentType.LINK);},checked:nattachmenttypecode===attachmentType.LINK?true:false,disabled:disabled}))),props.selectedRecord&&nattachmenttypecode===attachmentType.FTP&&/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DropZone,{name:\"AttachmentFile\",label:props.intl.formatMessage({id:\"IDS_FILE\"}),isMandatory:true,maxFiles:props.maxFiles,minSize:0,maxSize:props.maxSize,onDrop:function onDrop(event){return props.onDrop(event,'sfilename',props.maxFiles);},deleteAttachment:props.deleteAttachment,actionType:props.actionType,fileNameLength:props.fileNameLength,multiple:props.multiple!==undefined?props.multiple:true,editFiles:props.selectedRecord?props.selectedRecord:{},attachmentTypeCode:props.editFiles&&props.editFiles.nattachmenttypecode,fileSizeName:\"nfilesize\",fileName:\"sfilename\"//disabled={disabled}\n})),props.selectedRecord&&nattachmenttypecode===attachmentType.LINK&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormInput,{name:\"slinkfilename\",label:props.intl.formatMessage({id:\"IDS_FILENAME\"}),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_FILENAME\"}),value:props.selectedRecord?props.selectedRecord[\"slinkfilename\"]:\"\",isMandatory:\"*\",required:true,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_LINKNAME\"}),isSearchable:true,name:\"nlinkcode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_PLEASESELECT\"}),isMandatory:true,showOption:true,options:props.linkMaster||[],optionId:\"nlinkcode\",optionValue:\"slinkname\",value:props.selectedRecord[\"nlinkcode\"],onChange:function onChange(value){return props.onComboChange(value,\"nlinkcode\",1);},alphabeticalSort:true}))),props.selectedRecord&&nattachmenttypecode===attachmentType.FTP&&props.isneedHeader?/*#__PURE__*/React.createElement(Col,{md:\"12\",className:\"mt-4\"},/*#__PURE__*/React.createElement(FormTextarea,{name:\"sheader\",label:props.intl.formatMessage({id:\"IDS_HEADER\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_HEADER\"}),value:props.selectedRecord[\"sheader\"]?props.selectedRecord[\"sheader\"]:\"\",rows:\"2\",required:false,maxLength:255})):\"\",/*#__PURE__*/React.createElement(Col,{md:\"12\",className:\"mt-4\"},/*#__PURE__*/React.createElement(FormTextarea,{name:sdescrption,label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord[sdescrption]?props.selectedRecord[sdescrption]:\"\",rows:\"2\",required:false,maxLength:1000})),props.selectedRecord&&nattachmenttypecode===attachmentType.FTP&&props.isneedReport?/*#__PURE__*/React.createElement(Col,{md:\"12\",className:\"mt-4\"},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_INCULDEINREPORT\"}),type:\"switch\",name:\"nneedreport\",onChange:function onChange(event){return props.onInputOnChange(event,1);},defaultValue:false,isMandatory:false,required:true,checked:props.selectedRecord?props.selectedRecord.nneedreport==transactionStatus.YES?true:false:false})):\"\"));};export default injectIntl(AddAttachment);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/attachmentscomments/attachments/AddAttachment.jsx"],"names":["React","injectIntl","DropZone","Row","Col","Form","FormTextarea","FormInput","FormSelectSearch","attachmentType","transactionStatus","MediaHeader","TestPopOver","CustomSwitch","AddAttachment","props","selectedRecord","nattachmenttypecode","disabled","nameString","operation","displayName","masterList","map","obj","jsonField","message","length","intl","formatMessage","id","selectedListName","sdescrption","LINK","Object","values","event","onInputOnChange","FTP","maxFiles","maxSize","onDrop","deleteAttachment","actionType","fileNameLength","multiple","undefined","editFiles","linkMaster","value","onComboChange","isneedHeader","isneedReport","nneedreport","YES"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../../components/dropzone/dropzone.component';\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport { attachmentType, transactionStatus } from '../../../components/Enumeration';\r\nimport { MediaHeader } from '../../../components/App.styles';\r\nimport TestPopOver from '../../ResultEntryBySample/TestPopOver';\r\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\r\n\r\nconst AddAttachment = props => {\r\n    const { nattachmenttypecode, disabled } = props.selectedRecord;\r\n    // let nameString = props.operation === 'update'? props.selectedRecord && props.selectedRecord[props.displayName] && [props.selectedRecord[props.displayName]] : props.masterList ? props.masterList.map(obj=>obj[props.displayName]||obj[props.jsonField][props.displayName]) : []\r\n\r\n    let nameString = [];\r\n    if (props.operation === 'update') {\r\n        if (props.selectedRecord && props.selectedRecord[props.displayName] && props.selectedRecord[props.displayName] !== \"-\") {\r\n            nameString = [props.selectedRecord[props.displayName]];\r\n        }\r\n        else if (props.masterList) {\r\n            nameString = props.masterList.map(obj => obj[props.displayName] || obj[props.jsonField][props.displayName]);\r\n        }\r\n    } else if (props.operation === 'create') {\r\n        if (props.masterList) {\r\n            nameString = props.masterList.map(obj => obj[props.displayName] || obj[props.jsonField][props.displayName]);\r\n        }\r\n    }\r\n\r\n    let message = `${nameString.length} ${props.intl.formatMessage({ id: props.selectedListName || \"IDS_TESTS\" })} ${props.intl.formatMessage({ id: \"IDS_SELECTED\" })}`\r\n    const sdescrption = nattachmenttypecode === attachmentType.LINK ? \"slinkdescription\" : \"sdescription\";\r\n    //console.log(\"props in file:\", props, nameString);\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                {props.masterList && Object.values(props.masterList).length > 0 ?\r\n                    <div>\r\n                        <Row className=\"mb-4\">\r\n                            <Col md={12}>\r\n                                <MediaHeader className={`labelfont`}>\r\n                                    {nameString.length === 1 ?\r\n                                        `${props.intl.formatMessage({ id: props.selectedListName || \"IDS_TESTS\" })}: ${nameString[0]}` :\r\n                                        <TestPopOver stringList={nameString} message={message}></TestPopOver>\r\n\r\n                                    }\r\n                                </MediaHeader>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    : \"\"}\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <Form.Group>\r\n                        <Form.Check\r\n                            name=\"nattachmenttypecode\"\r\n                            type=\"radio\"\r\n                            id=\"AddFiles\"\r\n                            label={props.intl.formatMessage({ id: \"IDS_FTP\" })}\r\n                            inline={true}\r\n                            onChange={(event) => props.onInputOnChange(event, 1, attachmentType.FTP)}\r\n                            checked={nattachmenttypecode === attachmentType.FTP ? true : false}\r\n                            disabled={disabled}\r\n                        >\r\n                        </Form.Check>\r\n                        <Form.Check\r\n                            name=\"nattachmenttypecode\"\r\n                            type=\"radio\"\r\n                            id=\"AddLink\"\r\n                            label={props.intl.formatMessage({ id: \"IDS_LINK\" })}\r\n                            inline={true}\r\n                            onChange={(event) => props.onInputOnChange(event, 1, attachmentType.LINK)}\r\n                            checked={nattachmenttypecode === attachmentType.LINK ? true : false}\r\n                            disabled={disabled}\r\n                        >\r\n                        </Form.Check>\r\n                    </Form.Group>\r\n                </Col>\r\n                {props.selectedRecord && nattachmenttypecode === attachmentType.FTP &&\r\n\r\n                    <Col md={12}>\r\n                        <DropZone\r\n                            name='AttachmentFile'\r\n                            label={props.intl.formatMessage({ id: \"IDS_FILE\" })}\r\n                            isMandatory={true}\r\n                            maxFiles={props.maxFiles}\r\n                            minSize={0}\r\n                            maxSize={props.maxSize}\r\n                            onDrop={(event) => props.onDrop(event, 'sfilename', props.maxFiles)}\r\n                            deleteAttachment={props.deleteAttachment}\r\n                            actionType={props.actionType}\r\n                            fileNameLength={props.fileNameLength}\r\n                            multiple={props.multiple !== undefined ? props.multiple : true}\r\n                            editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                            attachmentTypeCode={props.editFiles && props.editFiles.nattachmenttypecode}\r\n                            fileSizeName=\"nfilesize\"\r\n                            fileName=\"sfilename\"\r\n                        //disabled={disabled}\r\n                        />\r\n                    </Col>\r\n                }\r\n                {props.selectedRecord && nattachmenttypecode === attachmentType.LINK &&\r\n                    <>\r\n                        <Col md=\"12\">\r\n                            <FormInput\r\n                                name={\"slinkfilename\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event, 1)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                                value={props.selectedRecord ? props.selectedRecord[\"slinkfilename\"] : \"\"}\r\n                                isMandatory=\"*\"\r\n                                required={true}\r\n                                maxLength={100}\r\n                            />\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <FormSelectSearch\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_LINKNAME\" })}\r\n                                isSearchable={true}\r\n                                name={\"nlinkcode\"}\r\n                                isDisabled={false}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                                isMandatory={true}\r\n                                showOption={true}\r\n                                options={props.linkMaster || []}\r\n                                optionId='nlinkcode'\r\n                                optionValue='slinkname'\r\n                                value={props.selectedRecord[\"nlinkcode\"]}\r\n                                onChange={value => props.onComboChange(value, \"nlinkcode\", 1)}\r\n                                alphabeticalSort={true}\r\n                            >\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n                    </>\r\n                }\r\n                {props.selectedRecord && nattachmenttypecode === attachmentType.FTP && props.isneedHeader ?\r\n\r\n                    <Col md=\"12\" className=\"mt-4\">\r\n                        <FormTextarea\r\n                            name={\"sheader\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_HEADER\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_HEADER\" })}\r\n                            value={props.selectedRecord[\"sheader\"] ? props.selectedRecord[\"sheader\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={255}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col> : \"\"\r\n                }\r\n\r\n                <Col md=\"12\" className=\"mt-4\">\r\n                    <FormTextarea\r\n                        name={sdescrption}\r\n                        label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                        onChange={(event) => props.onInputOnChange(event, 1)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                        value={props.selectedRecord[sdescrption] ? props.selectedRecord[sdescrption] : \"\"}\r\n                        rows=\"2\"\r\n                        required={false}\r\n                        maxLength={1000}\r\n                    >\r\n                    </FormTextarea>\r\n                </Col>\r\n\r\n                {props.selectedRecord && nattachmenttypecode === attachmentType.FTP && props.isneedReport ?\r\n                    <Col md=\"12\" className=\"mt-4\">\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_INCULDEINREPORT\" })}\r\n                            type=\"switch\"\r\n                            name={\"nneedreport\"}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            defaultValue={false}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            checked={props.selectedRecord ? props.selectedRecord.nneedreport == transactionStatus.YES ? true : false : false}\r\n                        />\r\n                    </Col>\r\n                    : \"\"}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddAttachment);"]},"metadata":{},"sourceType":"module"}