{"ast":null,"code":"import rsapi from '../rsapi';\nimport Axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { getComboLabelValue, constructOptionList } from '../components/CommonScript';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { initRequest } from './LoginAction';\nimport { sortData } from '../components/CommonScript';\nimport { transactionStatus, attachmentType } from '../components/Enumeration';\nexport function getProductDetail(product, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"product/getProduct\", {\n      nproductcode: product.nproductcode,\n      userinfo: userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          operation: null,\n          modalName: undefined,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getProductComboService(productParam) {\n  return function (dispatch) {\n    const productCategoryService = rsapi.post(\"/productcategory/getProductCategory\", {\n      userinfo: productParam.userInfo\n    });\n    let urlArray = [];\n    let selectedId = null;\n\n    if (productParam.operation === \"create\") {\n      urlArray = [productCategoryService];\n    } else {\n      const url = productParam.inputParam.classUrl + \"/getActiveProductById\"; // productParam.inputParam.methodUrl \"product/getActiveproductById\"      \n      //const productById =  rsapi.post(url, { [productParam.primaryKeyField] :productParam.primaryKeyValue, \"userinfo\": productParam.userInfo} );\n\n      const productById = rsapi.post(url, {\n        [productParam.primaryKeyName]: productParam.masterData.SelectedProduct[productParam.primaryKeyName],\n        \"userinfo\": productParam.userInfo\n      });\n      urlArray = [productCategoryService, productById];\n      selectedId = productParam.primaryKeyValue;\n    }\n\n    dispatch(initRequest(true));\n    Axios.all(urlArray).then(response => {\n      let selectedRecord = {};\n      const productCatMap = constructOptionList(response[0].data || [], \"nproductcatcode\", \"sproductcatname\", undefined, undefined, true);\n      const productCategoryList = productCatMap.get(\"OptionList\");\n\n      if (productParam.operation === \"update\") {\n        selectedRecord = response[1].data;\n        selectedRecord[\"nproductcatcode\"] = getComboLabelValue(selectedRecord, response[0].data, \"nproductcatcode\", \"sproductcatname\");\n      } else {\n        const productCatdefault = productCatMap.get(\"DefaultValue\");\n        selectedRecord[\"nproductcatcode\"] = productCatdefault;\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          productCategoryList,\n          //:response[0].data || [],                               \n          operation: productParam.operation,\n          screenName: productParam.screenName,\n          selectedRecord,\n          openModal: true,\n          ncontrolCode: productParam.ncontrolcode,\n          loading: false,\n          selectedId\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport const addProductFile = inputParam => {\n  return dispatch => {\n    dispatch(initRequest(true));\n    let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\n      userinfo: inputParam.userInfo\n    })];\n\n    if (inputParam.operation === \"update\") {\n      urlArray.push(rsapi.post(\"/product/editProductFile\", {\n        userinfo: inputParam.userInfo,\n        genericlabel: inputParam.genericLabel,\n        productfile: inputParam.selectedRecord\n      }));\n    }\n\n    Axios.all(urlArray).then(response => {\n      const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\n      const linkmaster = linkMap.get(\"OptionList\");\n      let selectedRecord = {};\n      const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\n      let disabled = false;\n      let editObject = {};\n\n      if (inputParam.operation === \"update\") {\n        editObject = response[1].data;\n        let nlinkcode = {};\n        let link = {};\n\n        if (editObject.nattachmenttypecode === attachmentType.LINK) {\n          nlinkcode = {\n            \"label\": editObject.slinkname,\n            \"value\": editObject.nlinkcode\n          };\n          link = {\n            slinkfilename: editObject.sfilename,\n            slinkdescription: editObject.sdescription,\n            nlinkdefaultstatus: editObject.ndefaultstatus,\n            sfilesize: '',\n            nfilesize: 0,\n            ndefaultstatus: 4,\n            sfilename: ''\n          };\n        } else {\n          nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\"; //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\n\n          link = {\n            slinkfilename: '',\n            slinkdescription: '',\n            nlinkdefaultstatus: 4,\n            sfilesize: editObject.sfilesize,\n            nfilesize: editObject.nfilesize,\n            ndefaultstatus: editObject.ndefaultstatus,\n            sfilename: editObject.sfilename\n          };\n        }\n\n        selectedRecord = { ...link,\n          nproductfilecode: editObject.nproductfilecode,\n          nattachmenttypecode: editObject.nattachmenttypecode,\n          sdescription: editObject.sdescription,\n          nlinkcode // disabled: true\n\n        };\n      } else {\n        selectedRecord = {\n          nattachmenttypecode: response[0].data.AttachmentType.length > 0 ? response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\n          nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\",\n          //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\n          disabled\n        };\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          [inputParam.modalName]: true,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          ncontrolCode: inputParam.ncontrolCode,\n          selectedRecord,\n          loading: false,\n          linkMaster: linkmaster,\n          showSaveContinue: false,\n          editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n};","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/ProductAction.js"],"names":["rsapi","Axios","toast","getComboLabelValue","constructOptionList","DEFAULT_RETURN","initRequest","sortData","transactionStatus","attachmentType","getProductDetail","product","userInfo","masterData","dispatch","post","nproductcode","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getProductComboService","productParam","productCategoryService","urlArray","selectedId","url","inputParam","classUrl","productById","primaryKeyName","SelectedProduct","primaryKeyValue","all","selectedRecord","productCatMap","productCategoryList","get","productCatdefault","screenName","openModal","ncontrolCode","ncontrolcode","addProductFile","push","genericlabel","genericLabel","productfile","linkMap","LinkMaster","linkmaster","defaultLink","filter","items","item","ndefaultlink","YES","disabled","editObject","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","sdescription","nlinkdefaultstatus","ndefaultstatus","sfilesize","nfilesize","length","nproductfilecode","AttachmentType","FTP","linkMaster","showSaveContinue","editFiles"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    getComboLabelValue,\r\n    constructOptionList\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData} from '../components/CommonScript';\r\nimport { transactionStatus, attachmentType } from '../components/Enumeration';\r\n\r\n\r\n\r\nexport function getProductDetail (product, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"product/getProduct\", {nproductcode:product.nproductcode, \r\n                                                          userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getProductComboService (productParam) {            \r\n    return function (dispatch) {   \r\n    const productCategoryService = rsapi.post(\"/productcategory/getProductCategory\", \r\n                                    {userinfo:productParam.userInfo});\r\n    let urlArray = [];\r\n    let selectedId = null;\r\n    if (productParam.operation === \"create\"){\r\n        urlArray = [productCategoryService];\r\n    }\r\n    else{           \r\n        const url = productParam.inputParam.classUrl+ \"/getActiveProductById\";   // productParam.inputParam.methodUrl \"product/getActiveproductById\"      \r\n        //const productById =  rsapi.post(url, { [productParam.primaryKeyField] :productParam.primaryKeyValue, \"userinfo\": productParam.userInfo} );\r\n        const productById =  rsapi.post(url, { [productParam.primaryKeyName] :productParam.masterData.SelectedProduct[productParam.primaryKeyName], \"userinfo\": productParam.userInfo} );\r\n        \r\n        urlArray = [productCategoryService, productById];\r\n        selectedId = productParam.primaryKeyValue;\r\n    }\r\n    dispatch(initRequest(true));\r\n    Axios.all(urlArray)\r\n        .then(response=>{                  \r\n            \r\n            let selectedRecord =  {};\r\n\r\n            const productCatMap = constructOptionList(response[0].data || [], \"nproductcatcode\",\r\n                                \"sproductcatname\", undefined, undefined, true);\r\n            const productCategoryList = productCatMap.get(\"OptionList\");\r\n           \r\n           \r\n            \r\n            if (productParam.operation === \"update\"){\r\n                selectedRecord = response[1].data;\r\n                selectedRecord[\"nproductcatcode\"] = getComboLabelValue(selectedRecord, response[0].data, \r\n                    \"nproductcatcode\", \"sproductcatname\");                   \r\n            }\r\n           else\r\n           {\r\n \t\t\tconst  productCatdefault  = productCatMap.get(\"DefaultValue\");\r\n            selectedRecord[\"nproductcatcode\"] = productCatdefault; \r\n           }\r\n            dispatch({type: DEFAULT_RETURN, payload:{productCategoryList,//:response[0].data || [],                               \r\n                        operation:productParam.operation, screenName:productParam.screenName, selectedRecord, \r\n                        openModal : true,\r\n                        ncontrolCode:productParam.ncontrolcode,\r\n                        loading:false,selectedId\r\n                    }});\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }  \r\n        })        \r\n    }\r\n}\r\n\r\nexport const addProductFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n            userinfo: inputParam.userInfo\r\n        })];\r\n        if (inputParam.operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"/product/editProductFile\", {\r\n                userinfo: inputParam.userInfo,\r\n                genericlabel:inputParam.genericLabel,\r\n                productfile: inputParam.selectedRecord\r\n            }))\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                const linkmaster = linkMap.get(\"OptionList\");\r\n                let selectedRecord = {};\r\n                const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                let disabled = false;\r\n                let editObject = {};\r\n                if (inputParam.operation === \"update\") {\r\n                    editObject = response[1].data;\r\n                    let nlinkcode = {};\r\n                    let link = {};\r\n                    if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                        nlinkcode = {\r\n                            \"label\": editObject.slinkname,\r\n                            \"value\": editObject.nlinkcode\r\n                        }\r\n\r\n                        link = {\r\n                            slinkfilename: editObject.sfilename,\r\n                            slinkdescription: editObject.sdescription,\r\n                            nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                            sfilesize: '',\r\n                            nfilesize: 0,\r\n                            ndefaultstatus: 4,\r\n                            sfilename: '',\r\n                        }\r\n\r\n                    } else {\r\n                        nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\" //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\r\n                        link = {\r\n                            slinkfilename: '',\r\n                            slinkdescription: '',\r\n                            nlinkdefaultstatus: 4,\r\n                            sfilesize: editObject.sfilesize,\r\n                            nfilesize: editObject.nfilesize,\r\n                            ndefaultstatus: editObject.ndefaultstatus,\r\n                            sfilename: editObject.sfilename,\r\n                        }\r\n                    }\r\n\r\n                    selectedRecord = {\r\n                        ...link,\r\n                        nproductfilecode: editObject.nproductfilecode,\r\n                        nattachmenttypecode: editObject.nattachmenttypecode,\r\n                        sdescription:editObject.sdescription,\r\n                        nlinkcode,\r\n\r\n                        // disabled: true\r\n                    };\r\n                } else {\r\n                    selectedRecord = {\r\n                        nattachmenttypecode: response[0].data.AttachmentType.length > 0 ?\r\n                            response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\r\n                        nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\r\n                        disabled\r\n                    };\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        [inputParam.modalName]: true,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        linkMaster: linkmaster,\r\n                        showSaveContinue: false,\r\n                        editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}