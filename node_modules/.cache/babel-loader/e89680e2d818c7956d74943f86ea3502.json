{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Col,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import{transactionStatus}from'../../components/Enumeration';import{updateStore}from'../../actions';import{connect}from'react-redux';import DataGrid from'../../components/data-grid/data-grid.component';import{process}from'@progress/kendo-data-query';import rsapi from'../../rsapi';import{toast}from'react-toastify';import{constructOptionList}from\"../../components/CommonScript\";import Axios from\"axios\";import{DEFAULT_RETURN}from'../../actions/LoginTypes';var ReleaseTestComment=/*#__PURE__*/function(_React$Component){_inherits(ReleaseTestComment,_React$Component);var _super=_createSuper(ReleaseTestComment);function ReleaseTestComment(props){var _this;_classCallCheck(this,ReleaseTestComment);_this=_super.call(this,props);_this.getSampleDetails=function(event,ncontrolCode,operation){var url=\"release/getActiveReleaseTestCommentById\";var masterData=_this.props.masterData;var isInitialRender=true;if(_this.props.masterData.selectedReleaseHistory[0].ntransactionstatus!==transactionStatus.RELEASED&&_this.props.masterData.selectedReleaseHistory[0].ntransactionstatus!==transactionStatus.PRELIMINARYRELEASE){if(operation===\"update\"){var urlArray=[];urlArray.push(rsapi.post(url,{\"ncoaparentcode\":event.editRow.ncoaparentcode,\"npreregno\":event.editRow.npreregno,\"ntransactionsamplecode\":event.editRow.ntransactionsamplecode,\"ntransactiontestcode\":event.editRow.ntransactiontestcode,\"nreleasetestcommentcode\":event.editRow.nreleasetestcommentcode,\"userinfo\":_this.props.userInfo}));urlArray.push(rsapi.post(\"/comments/getSampleTestCommentsListById\",{userinfo:_this.props.userInfo,ncommentsubtypecode:event.editRow&&event.editRow.ncommentsubtypecode&&event.editRow.ncommentsubtypecode}));Axios.all(urlArray).then(function(response){var responseData=response[0].data;var lstSampleTestComments=constructOptionList(response[1].data.SampleTestComments||[],\"nsampletestcommentscode\",\"spredefinedname\",false,false,true);var SampleTestComments=lstSampleTestComments.get(\"OptionList\");if(responseData.ntransactionstatus!==transactionStatus.RELEASED&&responseData.ntransactionstatus!==transactionStatus.PRELIMINARYRELEASE){var selectedReleaseTestComment=event.editRow;var nneedreport=responseData&&responseData.nneedreport?responseData.nneedreport:transactionStatus.NO;var scomments=responseData&&responseData.scomments?responseData.scomments:\"\";var npreregno;var ntransactionsamplecode;var ntransactiontestcode;var sarno;var ssamplearno;var stestsynonym;masterData.RegistrationArno.map(function(item){if(item.value===responseData.npreregno){npreregno=item;sarno=item.label;}});masterData.RegistrationSampleArno.map(function(item){if(item.value===responseData.ntransactionsamplecode){ntransactionsamplecode=item;ssamplearno=item.label;}});masterData.RegistrationTest.map(function(item){if(item.value===responseData.ntransactiontestcode){ntransactiontestcode=item;stestsynonym=item.label;}});var selectedRecord=_objectSpread(_objectSpread({},_this.state.selectedRecord),{},{npreregno:npreregno,ntransactionsamplecode:ntransactionsamplecode,ntransactiontestcode:ntransactiontestcode,sarno:sarno,ssamplearno:ssamplearno,stestsynonym:stestsynonym,nneedreport:nneedreport,scomments:scomments,selectedReleaseTestComment:selectedReleaseTestComment});selectedRecord[\"scommentsubtype\"]=responseData.scommentsubtype;selectedRecord[\"ncommentsubtypecode\"]={label:responseData.scommentsubtype,value:responseData.ncommentsubtypecode};selectedRecord[\"spredefinedname\"]=responseData.spredefinedname;selectedRecord[\"nsampletestcommentscode\"]={label:responseData.spredefinedname,value:responseData.nsampletestcommentscode};masterData[\"selectedRecord\"]=selectedRecord;var screenName=\"IDS_EDITRELEASETESTCOMMENT\";var updateInfo={typeName:DEFAULT_RETURN,data:{isReleaseTestComment:false,isAddReleaseTestComment:true,masterData:masterData,operation:operation,selectedRecord:selectedRecord,screenName:screenName,ncontrolCode:ncontrolCode,isInitialRender:isInitialRender,SampleTestComments:SampleTestComments}};_this.props.updateStore(updateInfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTCORRECTEDRECORD\"}));}}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});}else{var screenName=\"IDS_ADDRELEASETESTCOMMENT\";var RegistrationArno=_this.props.masterData.RegistrationArno;var commentSubType=_this.props.CommentSubType;var SampleTestComments=_this.props.SampleTestComments;var selectedRecord={RegistrationArno:RegistrationArno,ReleaseTestCommentDetails:_this.props.masterData.ReleaseTestCommentDetails,nneedreport:transactionStatus.NO,ncommentsubtypecode:commentSubType&&commentSubType[0],scommentsubtype:commentSubType&&commentSubType[0]&&commentSubType[0].label,//ALPD-4948 Passed sampletestcomments and predefined details when open add test comment slideout\nnsampletestcommentscode:SampleTestComments&&SampleTestComments[0],spredefinedname:SampleTestComments&&SampleTestComments[0]&&SampleTestComments[0].label};masterData[\"selectedRecord\"]=selectedRecord;var updateInfo={typeName:DEFAULT_RETURN,data:{isReleaseTestComment:false,isAddReleaseTestComment:true,masterData:masterData,operation:operation,selectedRecord:selectedRecord,screenName:screenName,ncontrolCode:ncontrolCode,isInitialRender:isInitialRender}};_this.props.updateStore(updateInfo);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTCORRECTEDRECORD\"}));}};var dataState={skip:0,take:_this.props.settings?parseInt(_this.props.settings[14]):5};_this.state={loading:false,ReleaseTestCommentDetails:_this.props.ReleaseTestCommentDetails,dataState:dataState,openModal:false,inputParam:_this.props.inputParam,loadEsign:false,operation:\"\",selectedRecord:{},isneedReport:_this.props.isneedReport};return _this;}_createClass(ReleaseTestComment,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.ReleaseTestCommentDetails!==prevProps.ReleaseTestCommentDetails){this.setState({ReleaseTestCommentDetails:this.props.ReleaseTestCommentDetails});}if(this.props.inputParam!==prevProps.inputParam){this.setState({inputParam:this.props.inputParam});}}},{key:\"render\",value:function render(){var _this2=this;var addReleaseTestComment=this.props.controlMap.has(\"AddReleaseTestComment\")&&this.props.controlMap.get(\"AddReleaseTestComment\").ncontrolcode;var editReleaseTestComment=this.props.controlMap.has(\"EditReleaseTestComment\")&&this.props.controlMap.get(\"EditReleaseTestComment\").ncontrolcode;var editReleaseTestCommentParam={screenName:this.props.intl.formatMessage({id:\"IDS_RELEASETESTCOMMENT\"}),operation:\"update\",primaryKeyField:\"nreleasetestcommentcode\",inputParam:this.state.inputParam,userInfo:this.props.userInfo,ncontrolCode:editReleaseTestComment};this.fieldsForReleasedTestCommentGrid=[{\"idsName\":\"IDS_ARNO\",\"dataField\":\"sarno\",\"width\":\"200px\"}];{this.props.masterData.realRegSubTypeValue&&this.props.masterData.realRegSubTypeValue.nneedsubsample&&this.fieldsForReleasedTestCommentGrid.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"200px\"});}this.fieldsForReleasedTestCommentGrid.push({\"idsName\":\"IDS_TESTSYNONYM\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_SCREENNAME\",\"dataField\":\"sformname\",\"width\":\"200px\"},{\"idsName\":\"IDS_COMMENTNAME\",\"dataField\":\"scommentsubtype\",\"width\":\"200px\"},{\"idsName\":\"IDS_ABBREVIATIONNAME\",\"dataField\":\"spredefinedname\",\"width\":\"200px\"},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",\"width\":\"200px\"},{\"idsName\":\"IDS_INCULDEINREPORT\",\"dataField\":\"sneedreport\",\"width\":\"200px\"},{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"200px\"},{\"idsName\":\"IDS_USERROLENAME\",\"dataField\":\"suserrolename\",\"width\":\"200px\"});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nreleasetestcommentcode\",data:this.state.ReleaseTestCommentDetails||[],dataResult:process(this.state.ReleaseTestCommentDetails&&this.state.ReleaseTestCommentDetails||[],this.props.dataState),dataState:this.props.dataState,isExportExcelRequired:false,controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,userInfo:this.props.userInfo,editParam:editReleaseTestCommentParam,extractedColumnList:this.fieldsForReleasedTestCommentGrid,pageable:true,dataStateChange:this.props.dataStateChange,scrollable:'scrollable',gridHeight:'630px',isActionRequired:true,addRecord:function addRecord(event){return _this2.getSampleDetails(event,addReleaseTestComment,\"create\");},isToolBarRequired:true,methodUrl:'ReleaseTestComment',isAddRequired:this.props.isAddRequired,isRefreshRequired:this.props.isRefreshRequired,isImportRequired:this.props.isImportRequired,isDownloadPDFRequired:this.props.isDownloadPDFRequired,isDownloadExcelRequired:this.props.isDownloadExcelRequired,fetchRecord:function fetchRecord(event){_this2.getSampleDetails(event,editReleaseTestComment,\"update\");},deleteRecord:this.props.deleteRecord}))));}}]);return ReleaseTestComment;}(React.Component);export default connect(null,{updateStore:updateStore})(injectIntl(ReleaseTestComment));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/release/ReleaseTestComment.jsx"],"names":["React","Col","Row","injectIntl","transactionStatus","updateStore","connect","DataGrid","process","rsapi","toast","constructOptionList","Axios","DEFAULT_RETURN","ReleaseTestComment","props","getSampleDetails","event","ncontrolCode","operation","url","masterData","isInitialRender","selectedReleaseHistory","ntransactionstatus","RELEASED","PRELIMINARYRELEASE","urlArray","push","post","editRow","ncoaparentcode","npreregno","ntransactionsamplecode","ntransactiontestcode","nreleasetestcommentcode","userInfo","userinfo","ncommentsubtypecode","all","then","response","responseData","data","lstSampleTestComments","SampleTestComments","get","selectedReleaseTestComment","nneedreport","NO","scomments","sarno","ssamplearno","stestsynonym","RegistrationArno","map","item","value","label","RegistrationSampleArno","RegistrationTest","selectedRecord","state","scommentsubtype","spredefinedname","nsampletestcommentscode","screenName","updateInfo","typeName","isReleaseTestComment","isAddReleaseTestComment","warn","intl","formatMessage","id","catch","error","status","message","setState","loading","commentSubType","CommentSubType","ReleaseTestCommentDetails","dataState","skip","take","settings","parseInt","openModal","inputParam","loadEsign","isneedReport","prevProps","addReleaseTestComment","controlMap","has","ncontrolcode","editReleaseTestComment","editReleaseTestCommentParam","primaryKeyField","fieldsForReleasedTestCommentGrid","realRegSubTypeValue","nneedsubsample","userRoleControlRights","dataStateChange","isAddRequired","isRefreshRequired","isImportRequired","isDownloadPDFRequired","isDownloadExcelRequired","deleteRecord","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { updateStore } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport rsapi from '../../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport { constructOptionList } from \"../../components/CommonScript\";\r\nimport Axios from \"axios\";\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\n\r\nclass ReleaseTestComment extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            loading: false,\r\n            ReleaseTestCommentDetails: this.props.ReleaseTestCommentDetails,\r\n            dataState: dataState,\r\n            openModal: false,\r\n            inputParam: this.props.inputParam,\r\n            loadEsign: false,\r\n            operation: \"\",\r\n            selectedRecord: {},\r\n            isneedReport: this.props.isneedReport\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.ReleaseTestCommentDetails !== prevProps.ReleaseTestCommentDetails) {\r\n            this.setState({ ReleaseTestCommentDetails: this.props.ReleaseTestCommentDetails })\r\n        }\r\n        if (this.props.inputParam !== prevProps.inputParam) {\r\n            this.setState({ inputParam: this.props.inputParam })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const addReleaseTestComment =\r\n            this.props.controlMap.has(\"AddReleaseTestComment\") &&\r\n            this.props.controlMap.get(\"AddReleaseTestComment\").ncontrolcode;\r\n\r\n        const editReleaseTestComment =\r\n            this.props.controlMap.has(\"EditReleaseTestComment\") &&\r\n            this.props.controlMap.get(\"EditReleaseTestComment\").ncontrolcode;\r\n\r\n        const editReleaseTestCommentParam = {\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASETESTCOMMENT\" }),\r\n            operation: \"update\", primaryKeyField: \"nreleasetestcommentcode\",\r\n            inputParam: this.state.inputParam,\r\n            userInfo: this.props.userInfo,\r\n            ncontrolCode: editReleaseTestComment\r\n        };\r\n\r\n        this.fieldsForReleasedTestCommentGrid = [\r\n            { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n        ];\r\n        {\r\n            this.props.masterData.realRegSubTypeValue && this.props.masterData.realRegSubTypeValue.nneedsubsample &&\r\n                this.fieldsForReleasedTestCommentGrid.push(\r\n                    { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" }\r\n                )\r\n        }\r\n        this.fieldsForReleasedTestCommentGrid.push(\r\n            { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_SCREENNAME\", \"dataField\": \"sformname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_COMMENTNAME\", \"dataField\": \"scommentsubtype\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_ABBREVIATIONNAME\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_INCULDEINREPORT\", \"dataField\": \"sneedreport\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_USERROLENAME\", \"dataField\": \"suserrolename\", \"width\": \"200px\" }\r\n        )\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <DataGrid\r\n                            primaryKeyField=\"nreleasetestcommentcode\"\r\n                            data={this.state.ReleaseTestCommentDetails || []}\r\n                            dataResult={process(this.state.ReleaseTestCommentDetails && this.state.ReleaseTestCommentDetails || [], this.props.dataState)}\r\n                            dataState={this.props.dataState}\r\n                            isExportExcelRequired={false}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            userInfo={this.props.userInfo}\r\n                            editParam={editReleaseTestCommentParam}\r\n                            extractedColumnList={this.fieldsForReleasedTestCommentGrid}\r\n                            pageable={true}\r\n                            dataStateChange={this.props.dataStateChange}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight={'630px'}\r\n                            isActionRequired={true}\r\n                            addRecord={(event) => this.getSampleDetails(event, addReleaseTestComment, \"create\")}\r\n                            isToolBarRequired={true}\r\n                            methodUrl={'ReleaseTestComment'}\r\n                            isAddRequired={this.props.isAddRequired}\r\n                            isRefreshRequired={this.props.isRefreshRequired}\r\n                            isImportRequired={this.props.isImportRequired}\r\n                            isDownloadPDFRequired={this.props.isDownloadPDFRequired}\r\n                            isDownloadExcelRequired={this.props.isDownloadExcelRequired}\r\n                            fetchRecord={(event) => { this.getSampleDetails(event, editReleaseTestComment, \"update\") }}\r\n                            deleteRecord={this.props.deleteRecord}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    };\r\n\r\n    getSampleDetails = (event, ncontrolCode, operation) => {\r\n        const url = \"release/getActiveReleaseTestCommentById\";\r\n        let masterData = this.props.masterData;\r\n        const isInitialRender = true;\r\n        if (this.props.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED\r\n            && this.props.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\r\n            if (operation === \"update\") {\r\n                let urlArray = [];\r\n                urlArray.push(rsapi.post(url, {\r\n                    \"ncoaparentcode\": event.editRow.ncoaparentcode,\r\n                    \"npreregno\": event.editRow.npreregno,\r\n                    \"ntransactionsamplecode\": event.editRow.ntransactionsamplecode,\r\n                    \"ntransactiontestcode\": event.editRow.ntransactiontestcode,\r\n                    \"nreleasetestcommentcode\": event.editRow.nreleasetestcommentcode,\r\n                    \"userinfo\": this.props.userInfo\r\n                }));\r\n                urlArray.push(\r\n                    rsapi.post(\"/comments/getSampleTestCommentsListById\", {\r\n                        userinfo: this.props.userInfo,\r\n                        ncommentsubtypecode: event.editRow && event.editRow.ncommentsubtypecode && event.editRow.ncommentsubtypecode\r\n                    })\r\n                );\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        let responseData = response[0].data;\r\n                        const lstSampleTestComments = constructOptionList(response[1].data.SampleTestComments || [], \"nsampletestcommentscode\", \"spredefinedname\", false, false, true);\r\n                        const SampleTestComments = lstSampleTestComments.get(\"OptionList\");\r\n                        if (responseData.ntransactionstatus !== transactionStatus.RELEASED && responseData.ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\r\n                            let selectedReleaseTestComment = event.editRow;\r\n                            let nneedreport = responseData && responseData.nneedreport ? responseData.nneedreport : transactionStatus.NO;\r\n                            let scomments = responseData && responseData.scomments ? responseData.scomments : \"\";\r\n                            let npreregno;\r\n                            let ntransactionsamplecode;\r\n                            let ntransactiontestcode;\r\n                            let sarno;\r\n                            let ssamplearno;\r\n                            let stestsynonym;\r\n                            masterData.RegistrationArno.map(item => {\r\n                                if (item.value === responseData.npreregno) {\r\n                                    npreregno = item;\r\n                                    sarno = item.label;\r\n                                }\r\n                            });\r\n                            masterData.RegistrationSampleArno.map(item => {\r\n                                if (item.value === responseData.ntransactionsamplecode) {\r\n                                    ntransactionsamplecode = item;\r\n                                    ssamplearno = item.label;\r\n                                }\r\n                            });\r\n                            masterData.RegistrationTest.map(item => {\r\n                                if (item.value === responseData.ntransactiontestcode) {\r\n                                    ntransactiontestcode = item;\r\n                                    stestsynonym = item.label;\r\n                                }\r\n                            });\r\n\r\n                            let selectedRecord = {\r\n                                ...this.state.selectedRecord, npreregno, ntransactionsamplecode, ntransactiontestcode, sarno, ssamplearno, stestsynonym, nneedreport,\r\n                                scomments, selectedReleaseTestComment,\r\n                            };\r\n                            selectedRecord[\"scommentsubtype\"] = responseData.scommentsubtype;\r\n                            selectedRecord[\"ncommentsubtypecode\"] = {\r\n                                label: responseData.scommentsubtype,\r\n                                value: responseData.ncommentsubtypecode\r\n                            };\r\n                            selectedRecord[\"spredefinedname\"] = responseData.spredefinedname;\r\n                            selectedRecord[\"nsampletestcommentscode\"] = {\r\n                                label: responseData.spredefinedname,\r\n                                value: responseData.nsampletestcommentscode\r\n                            };\r\n                            masterData[\"selectedRecord\"] = selectedRecord;\r\n                            let screenName = \"IDS_EDITRELEASETESTCOMMENT\";\r\n                            const updateInfo = {\r\n                                typeName: DEFAULT_RETURN,\r\n                                data: { isReleaseTestComment: false, isAddReleaseTestComment: true, masterData, operation, selectedRecord, screenName, ncontrolCode, isInitialRender, SampleTestComments }\r\n                            }\r\n                            this.props.updateStore(updateInfo);\r\n                        } else {\r\n                            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n                        }\r\n                    }).catch(error => {\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        } else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                        this.setState({\r\n                            loading: false\r\n                        });\r\n                    });\r\n            } else {\r\n                let screenName = \"IDS_ADDRELEASETESTCOMMENT\";\r\n                let RegistrationArno = this.props.masterData.RegistrationArno;\r\n                let commentSubType = this.props.CommentSubType;\r\n                let SampleTestComments = this.props.SampleTestComments;\r\n                let selectedRecord = {\r\n                    RegistrationArno: RegistrationArno,\r\n                    ReleaseTestCommentDetails: this.props.masterData.ReleaseTestCommentDetails,\r\n                    nneedreport: transactionStatus.NO,\r\n                    ncommentsubtypecode: commentSubType && commentSubType[0],\r\n                    scommentsubtype: commentSubType && commentSubType[0] && commentSubType[0].label,\r\n                    //ALPD-4948 Passed sampletestcomments and predefined details when open add test comment slideout\r\n                    nsampletestcommentscode: SampleTestComments && SampleTestComments[0],\r\n                    spredefinedname: SampleTestComments && SampleTestComments[0] && SampleTestComments[0].label\r\n                };\r\n                masterData[\"selectedRecord\"] = selectedRecord;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { isReleaseTestComment: false, isAddReleaseTestComment: true, masterData, operation, selectedRecord, screenName, ncontrolCode, isInitialRender }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, { updateStore })(injectIntl(ReleaseTestComment));"]},"metadata":{},"sourceType":"module"}