{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nimport { sortData } from '../components/CommonScript';\nexport function fetchById(languagesParam) {\n  return function (dispatch) {\n    let primaryKeyField;\n    let fieldName;\n    let selectedJsondata;\n    let jsondataKeys;\n    let URL;\n\n    if (languagesParam.masterData.headername == \"Menu\") {\n      URL = rsapi.post(\"language/getActiveMenuByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nmenucode\": languagesParam.languagesRow.nmenucode\n      });\n      primaryKeyField = languagesParam.languagesRow.nmenucode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Module\") {\n      URL = rsapi.post(\"language/getActiveModuleByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nmodulecode\": languagesParam.languagesRow.nmodulecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nmodulecode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Forms\") {\n      URL = rsapi.post(\"language/getActiveFormByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nformcode\": languagesParam.languagesRow.nformcode\n      });\n      primaryKeyField = languagesParam.languagesRow.nformcode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"TransactionStatus\") {\n      URL = rsapi.post(\"language/getActiveTransactionStatusByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ntranscode\": languagesParam.languagesRow.ntranscode\n      });\n      primaryKeyField = languagesParam.languagesRow.ntranscode;\n      jsondataKeys = Object.keys(languagesParam.languagesRow.jsondata);\n      fieldName = jsondataKeys;\n    } else if (languagesParam.masterData.headername == \"ControlMaster\") {\n      URL = rsapi.post(\"language/getActiveControlMasterByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ncontrolcode\": languagesParam.languagesRow.ncontrolcode\n      });\n      primaryKeyField = languagesParam.languagesRow.ncontrolcode;\n      fieldName = \"scontrolids\";\n    } else if (languagesParam.masterData.headername == \"ApprovalSubType\") {\n      URL = rsapi.post(\"language/getActiveApprovalSubTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"napprovalsubtypecode\": languagesParam.languagesRow.napprovalsubtypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.napprovalsubtypecode;\n      fieldName = \"approvalsubtypename\";\n    } else if (languagesParam.masterData.headername == \"SampleType\") {\n      URL = rsapi.post(\"language/getActiveSampleTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nsampletypecode\": languagesParam.languagesRow.nsampletypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nsampletypecode;\n      fieldName = \"sampletypename\";\n    } else if (languagesParam.masterData.headername == \"TemplateType\") {\n      URL = rsapi.post(\"language/getActiveTemplateTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ntemplatetypecode\": languagesParam.languagesRow.ntemplatetypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.ntemplatetypecode;\n      fieldName = \"stemplatetypename\";\n    } else if (languagesParam.masterData.headername == \"Period\") {\n      URL = rsapi.post(\"language/getActivePeriodByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nperiodcode\": languagesParam.languagesRow.nperiodcode\n      });\n      primaryKeyField = languagesParam.languagesRow.nperiodcode;\n      fieldName = \"speriodname\";\n    } else if (languagesParam.masterData.headername == \"Gender\") {\n      URL = rsapi.post(\"language/getActiveGenderByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ngendercode\": languagesParam.languagesRow.ngendercode\n      });\n      primaryKeyField = languagesParam.languagesRow.ngendercode;\n      fieldName = \"sgendername\";\n    } else if (languagesParam.masterData.headername == \"Grade\") {\n      URL = rsapi.post(\"language/getActiveGradeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ngradecode\": languagesParam.languagesRow.ngradecode\n      });\n      primaryKeyField = languagesParam.languagesRow.ngradecode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"SchedulerType\") {\n      URL = rsapi.post(\"language/getActiveSchedulerTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nschedulertypecode\": languagesParam.languagesRow.nschedulertypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nschedulertypecode;\n      fieldName = \"sschedulertypename\";\n    } else if (languagesParam.masterData.headername == \"DynamicRecordDetail\") {\n      URL = rsapi.post(\"language/getActiveDynamicRecordDetailTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nrecorddetailtypecode\": languagesParam.languagesRow.nrecorddetailtypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nrecorddetailtypecode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"SqlQueryBuilder\") {\n      URL = rsapi.post(\"language/getActiveQueryBuilderTablesByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nquerybuildertablecode\": languagesParam.languagesRow.nquerybuildertablecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nquerybuildertablecode;\n      fieldName = \"tablename\";\n    } else if (languagesParam.masterData.headername == \"ViewsQueryBuilder\") {\n      URL = rsapi.post(\"language/getActiveQueryBuilderViewsByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nquerybuilderviewscode\": languagesParam.languagesRow.nquerybuilderviewscode\n      });\n      primaryKeyField = languagesParam.languagesRow.nquerybuilderviewscode;\n      fieldName = \"displayname\";\n    } else if (languagesParam.masterData.headername == \"QueryBuilderViewsColumns\") {\n      URL = rsapi.post(\"language/getActiveTestMasterByID\", {\n        \"languagesParam\": languagesParam.languagesRow.jsondata.findIndex(item => item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\"),\n        \"userinfo\": languagesParam.userInfo,\n        \"sviewname\": languagesParam.languagesRow.sviewname\n      });\n      primaryKeyField = languagesParam.languagesRow.sviewname;\n      fieldName = \"displayname\";\n    } else if (languagesParam.masterData.headername == \"testmasterview\") {\n      URL = rsapi.post(\"language/getActiveTestCategoryByID\", {\n        \"languagesParam\": languagesParam.languagesRow.jsondata.findIndex(item => item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\"),\n        \"userinfo\": languagesParam.userInfo,\n        \"sviewname\": languagesParam.languagesRow.sviewname\n      });\n      primaryKeyField = languagesParam.languagesRow.sviewname;\n      fieldName = \"displayname\";\n    } //const URL = rsapi.post(\"language/getActiveFormByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nflag\": nflag, \"int\": primaryKeyField })\n\n\n    dispatch(initRequest(true));\n    Axios.all([URL]).then(response => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          selectedRecord: { ...response[0].data,\n            ...response[0].data.jsondata,\n            fieldName,\n            selectedJsondata\n          },\n          operation: languagesParam.operation,\n          openModal: true,\n          screenName: languagesParam.screenName,\n          ncontrolcode: languagesParam.ncontrolCode,\n          loading: false,\n          selectedId: primaryKeyField,\n          data: undefined,\n          dataState: undefined\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function comboService(methodParam) {\n  return function (dispatch) {\n    let URL;\n    let needHeader;\n\n    if (methodParam.inputData.sdisplayname == \"Menu\") {\n      URL = rsapi.post(\"language/getMenuComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nmenucode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Module\") {\n      URL = rsapi.post(\"language/getModuleComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nmodulecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Forms\") {\n      URL = rsapi.post(\"language/getFormComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nformcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"TransactionStatus\") {\n      URL = rsapi.post(\"language/getTransactionStatusComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ntranscode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Control Master\") {\n      URL = rsapi.post(\"language/getControlMasterComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ncontrolcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"ApprovalSubType\") {\n      URL = rsapi.post(\"language/getApprovalSubTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"napprovalsubtypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"SampleType\") {\n      URL = rsapi.post(\"language/getSampleTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nsampletypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"TemplateType\") {\n      URL = rsapi.post(\"language/getTemplateTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ntemplatetypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Period\") {\n      URL = rsapi.post(\"language/getPeriodComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nperiodcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Gender\") {\n      URL = rsapi.post(\"language/getGenderComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ngendercode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Grade\") {\n      URL = rsapi.post(\"language/getGradeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ngradecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"SchedulerType\") {\n      URL = rsapi.post(\"language/getSchedulerTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nschedulertypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"DynamicRecordDetail\") {\n      URL = rsapi.post(\"language/getDynamicRecordDetailTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nrecorddetailtypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"SqlQueryBuilder\") {\n      URL = rsapi.post(\"language/getQueryBuilderTablesComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nquerybuildertablecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"ViewsQueryBuilder\") {\n      URL = rsapi.post(\"language/getQueryBuilderViewsComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nquerybuilderviewscode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"QueryBuilderViewsColumns\" || methodParam.inputData.sdisplayname == \"Test Master\") {\n      URL = rsapi.post(\"language/getQueryBuilderViewsColumnsComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"sviewname\": methodParam.inputData.sdisplayname\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Test Category\") {\n      URL = rsapi.post(\"language/getTestCategoryColumnsName\", {\n        \"userinfo\": methodParam.userinfo,\n        \"sviewname\": methodParam.inputData.sviewname\n      });\n    }\n\n    dispatch(initRequest(true)); //return rsapi.post(methodParam.url, methodParam.inputData)\n\n    Axios.all([URL]).then(response => {\n      let masterData;\n      const selectedRecord = methodParam.sdisplayname;\n      masterData = { ...response[0].data\n      }; //posts.forEach(obj => {\n      //Object.entries(obj).forEach(([key, value]) => {})});\n      //const display = Object.keys(posts).map((item,index)=>{})\n      // sortData(masterData[filterParam.sortList],'descending',filterParam.sortValue);\n      //    if(methodParam.inputData.sdisplayname==\"QueryBuilderViewsColumns\"){\n      //     let posts=   masterData.listofItem.map((item)=>item.jsondata.map((item1)=>item1))\n      //      }   \n\n      sortData(masterData, 'descending');\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          selectedRecord,\n          masterData,\n          loading: false,\n          data: undefined,\n          dataState: undefined\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/LanguagesAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","sortData","fetchById","languagesParam","dispatch","primaryKeyField","fieldName","selectedJsondata","jsondataKeys","URL","masterData","headername","post","languagesRow","sdisplayname","userInfo","nmenucode","nmodulecode","nformcode","ntranscode","Object","keys","jsondata","ncontrolcode","napprovalsubtypecode","nsampletypecode","ntemplatetypecode","nperiodcode","ngendercode","ngradecode","nschedulertypecode","nrecorddetailtypecode","nquerybuildertablecode","nquerybuilderviewscode","findIndex","item","displayname","slanguagetypecode","sviewname","all","then","response","type","payload","selectedRecord","data","operation","openModal","screenName","ncontrolCode","loading","selectedId","undefined","dataState","catch","error","status","message","warn","comboService","methodParam","needHeader","inputData","userinfo","primarykey"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,QAAT,QAAyB,4BAAzB;AAEA,OAAO,SAASC,SAAT,CAAmBC,cAAnB,EAAmC;AACtC,SAAO,UAAUC,QAAV,EAAoB;AACvB,QAAIC,eAAJ;AACA,QAAIC,SAAJ;AACA,QAAIC,gBAAJ;AACA,QAAIC,YAAJ;AACA,QAAIC,GAAJ;;AACA,QAAIN,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,MAA5C,EAAoD;AAC/CF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,4BAAX,EAAwC;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,qBAAaZ,cAAc,CAACU,YAAf,CAA4BG;AAA5I,OAAxC,CAAN;AACDX,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4BG,SAA9C;AACAV,MAAAA,SAAS,GAAG,cAAZ;AACH,KAJD,MAIO,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,QAA5C,EAAsD;AACzDF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,8BAAX,EAA0C;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,uBAAeZ,cAAc,CAACU,YAAf,CAA4BI;AAA9I,OAA1C,CAAN;AACAZ,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4BI,WAA9C;AACAX,MAAAA,SAAS,GAAG,cAAZ;AACH,KAJM,MAIA,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,OAA5C,EAAqD;AACvDF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,4BAAX,EAAwC;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,qBAAaZ,cAAc,CAACU,YAAf,CAA4BK;AAA5I,OAAxC,CAAN;AACDb,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4BK,SAA9C;AACAZ,MAAAA,SAAS,GAAG,cAAZ;AACH,KAJM,MAIA,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,mBAA5C,EAAiE;AACpEF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,yCAAX,EAAqD;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,sBAAcZ,cAAc,CAACU,YAAf,CAA4BM;AAA7I,OAArD,CAAN;AACAd,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4BM,UAA9C;AACAX,MAAAA,YAAY,GAAGY,MAAM,CAACC,IAAP,CAAYlB,cAAc,CAACU,YAAf,CAA4BS,QAAxC,CAAf;AACAhB,MAAAA,SAAS,GAAGE,YAAZ;AACH,KALM,MAKA,IAAIL,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,eAA5C,EAA6D;AAChEF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,qCAAX,EAAiD;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,wBAAgBZ,cAAc,CAACU,YAAf,CAA4BU;AAA/I,OAAjD,CAAN;AACAlB,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4BU,YAA9C;AACAjB,MAAAA,SAAS,GAAG,aAAZ;AACH,KAJM,MAIA,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,iBAA5C,EAA+D;AAClEF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,uCAAX,EAAmD;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,gCAAwBZ,cAAc,CAACU,YAAf,CAA4BW;AAAvJ,OAAnD,CAAN;AACAnB,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4BW,oBAA9C;AACAlB,MAAAA,SAAS,GAAG,qBAAZ;AACH,KAJM,MAIA,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,YAA5C,EAA0D;AAC7DF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,kCAAX,EAA8C;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,2BAAmBZ,cAAc,CAACU,YAAf,CAA4BY;AAAlJ,OAA9C,CAAN;AACApB,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4BY,eAA9C;AACAnB,MAAAA,SAAS,GAAG,gBAAZ;AACH,KAJM,MAIA,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,cAA5C,EAA4D;AAC/DF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,oCAAX,EAAgD;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,6BAAqBZ,cAAc,CAACU,YAAf,CAA4Ba;AAApJ,OAAhD,CAAN;AACArB,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4Ba,iBAA9C;AACApB,MAAAA,SAAS,GAAG,mBAAZ;AACH,KAJM,MAIA,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,QAA5C,EAAsD;AACzDF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,8BAAX,EAA0C;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,uBAAeZ,cAAc,CAACU,YAAf,CAA4Bc;AAA9I,OAA1C,CAAN;AACAtB,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4Bc,WAA9C;AACArB,MAAAA,SAAS,GAAG,aAAZ;AACH,KAJM,MAIA,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,QAA5C,EAAsD;AACzDF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,8BAAX,EAA0C;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,uBAAeZ,cAAc,CAACU,YAAf,CAA4Be;AAA9I,OAA1C,CAAN;AACAvB,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4Be,WAA9C;AACAtB,MAAAA,SAAS,GAAG,aAAZ;AACH,KAJM,MAIA,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,OAA5C,EAAqD;AACxDF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,6BAAX,EAAyC;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,sBAAcZ,cAAc,CAACU,YAAf,CAA4BgB;AAA7I,OAAzC,CAAN;AACAxB,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4BgB,UAA9C;AACAvB,MAAAA,SAAS,GAAG,cAAZ;AACH,KAJM,MAID,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,eAA5C,EAA6D;AAC/DF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,qCAAX,EAAiD;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,8BAAsBZ,cAAc,CAACU,YAAf,CAA4BiB;AAArJ,OAAjD,CAAN;AACAzB,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4BiB,kBAA9C;AACAxB,MAAAA,SAAS,GAAG,oBAAZ;AACH,KAJK,MAIC,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,qBAA5C,EAAmE;AACtEF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,+CAAX,EAA2D;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,iCAAyBZ,cAAc,CAACU,YAAf,CAA4BkB;AAAxJ,OAA3D,CAAN;AACA1B,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4BkB,qBAA9C;AACAzB,MAAAA,SAAS,GAAG,cAAZ;AACH,KAJM,MAIA,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,iBAA5C,EAA+D;AAClEF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,0CAAX,EAAsD;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,kCAA0BZ,cAAc,CAACU,YAAf,CAA4BmB;AAAzJ,OAAtD,CAAN;AACA3B,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4BmB,sBAA9C;AACA1B,MAAAA,SAAS,GAAG,WAAZ;AACH,KAJM,MAID,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,mBAA5C,EAAiE;AACnEF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,yCAAX,EAAqD;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BC,YAAhD;AAA8D,oBAAYX,cAAc,CAACY,QAAzF;AAAmG,kCAA0BZ,cAAc,CAACU,YAAf,CAA4BoB;AAAzJ,OAArD,CAAN;AACA5B,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4BoB,sBAA9C;AACA3B,MAAAA,SAAS,GAAG,aAAZ;AACH,KAJK,MAIA,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,0BAA5C,EAAwE;AAC1EF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,kCAAX,EAA8C;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BS,QAA5B,CAAqCY,SAArC,CAAgDC,IAAD,IAASA,IAAI,CAACC,WAAL,CAAiBjC,cAAc,CAACY,QAAf,CAAwBsB,iBAAzC,KAA6DlC,cAAc,CAACU,YAAf,CAA4BC,YAAzF,GAAsGqB,IAAtG,GAA2G,EAAnK,CAApB;AAA8L,oBAAYhC,cAAc,CAACY,QAAzN;AAAmO,qBAAaZ,cAAc,CAACU,YAAf,CAA4ByB;AAA5Q,OAA9C,CAAN;AACAjC,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4ByB,SAA9C;AACAhC,MAAAA,SAAS,GAAG,aAAZ;AACH,KAJK,MAIA,IAAIH,cAAc,CAACO,UAAf,CAA0BC,UAA1B,IAAwC,gBAA5C,EAA8D;AAChEF,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,oCAAX,EAAgD;AAAE,0BAAkBT,cAAc,CAACU,YAAf,CAA4BS,QAA5B,CAAqCY,SAArC,CAAgDC,IAAD,IAASA,IAAI,CAACC,WAAL,CAAiBjC,cAAc,CAACY,QAAf,CAAwBsB,iBAAzC,KAA6DlC,cAAc,CAACU,YAAf,CAA4BC,YAAzF,GAAsGqB,IAAtG,GAA2G,EAAnK,CAApB;AAA8L,oBAAYhC,cAAc,CAACY,QAAzN;AAAmO,qBAAaZ,cAAc,CAACU,YAAf,CAA4ByB;AAA5Q,OAAhD,CAAN;AACAjC,MAAAA,eAAe,GAAGF,cAAc,CAACU,YAAf,CAA4ByB,SAA9C;AACAhC,MAAAA,SAAS,GAAG,aAAZ;AACH,KA3EsB,CA4EvB;;;AACAF,IAAAA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAD,IAAAA,KAAK,CAACwC,GAAN,CAAU,CAAC9B,GAAD,CAAV,EACK+B,IADL,CACUC,QAAQ,IAAI;AACdrC,MAAAA,QAAQ,CAAC;AACLsC,QAAAA,IAAI,EAAE7C,cADD;AACiB8C,QAAAA,OAAO,EAAE;AAC3BC,UAAAA,cAAc,EAAE,EAAE,GAAGH,QAAQ,CAAC,CAAD,CAAR,CAAYI,IAAjB;AAAuB,eAAGJ,QAAQ,CAAC,CAAD,CAAR,CAAYI,IAAZ,CAAiBvB,QAA3C;AAAqDhB,YAAAA,SAArD;AAAgEC,YAAAA;AAAhE,WADW;AAE3BuC,UAAAA,SAAS,EAAE3C,cAAc,CAAC2C,SAFC;AAG3BC,UAAAA,SAAS,EAAE,IAHgB;AAI3BC,UAAAA,UAAU,EAAE7C,cAAc,CAAC6C,UAJA;AAK3BzB,UAAAA,YAAY,EAAEpB,cAAc,CAAC8C,YALF;AAM3BC,UAAAA,OAAO,EAAE,KANkB;AAMXC,UAAAA,UAAU,EAAE9C,eAND;AAO3BwC,UAAAA,IAAI,EAAEO,SAPqB;AAOVC,UAAAA,SAAS,EAAED;AAPD;AAD1B,OAAD,CAAR;AAWH,KAbL,EAcKE,KAdL,CAcWC,KAAK,IAAI;AACZnD,MAAAA,QAAQ,CAAC;AAAEsC,QAAAA,IAAI,EAAE7C,cAAR;AAAwB8C,QAAAA,OAAO,EAAE;AAAEO,UAAAA,OAAO,EAAE;AAAX;AAAjC,OAAD,CAAR;;AACA,UAAIK,KAAK,CAACd,QAAN,CAAee,MAAf,KAA0B,GAA9B,EAAmC;AAC/B1D,QAAAA,KAAK,CAACyD,KAAN,CAAYA,KAAK,CAACE,OAAlB;AACH,OAFD,MAGK;AACD3D,QAAAA,KAAK,CAAC4D,IAAN,CAAWH,KAAK,CAACd,QAAN,CAAeI,IAA1B;AACH;AACJ,KAtBL;AAuBH,GArGD;AAsGH;AAED,OAAO,SAASc,YAAT,CAAsBC,WAAtB,EAAmC;AACtC,SAAO,UAAUxD,QAAV,EAAoB;AACvB,QAAIK,GAAJ;AACA,QAAIoD,UAAJ;;AACA,QAAGD,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,MAAvC,EAA8C;AAC9CL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,8BAAX,EAA0C;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,qBAAaH,WAAW,CAACE,SAAZ,CAAsBE;AAApE,OAA1C,CAAN;AACC,KAFD,MAGK,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,QAAvC,EAAgD;AACjDL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,gCAAX,EAA4C;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,uBAAeH,WAAW,CAACE,SAAZ,CAAsBE;AAAtE,OAA5C,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,OAAvC,EAA+C;AAChDL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,8BAAX,EAA0C;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,qBAAaH,WAAW,CAACE,SAAZ,CAAsBE;AAApE,OAA1C,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,mBAAvC,EAA2D;AAC5DL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,2CAAX,EAAuD;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,sBAAcH,WAAW,CAACE,SAAZ,CAAsBE;AAArE,OAAvD,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,gBAAvC,EAAwD;AACzDL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,uCAAX,EAAmD;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,wBAAgBH,WAAW,CAACE,SAAZ,CAAsBE;AAAvE,OAAnD,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,iBAAvC,EAAyD;AAC1DL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,yCAAX,EAAqD;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,gCAAwBH,WAAW,CAACE,SAAZ,CAAsBE;AAA/E,OAArD,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,YAAvC,EAAoD;AACrDL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,oCAAX,EAAgD;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,2BAAmBH,WAAW,CAACE,SAAZ,CAAsBE;AAA1E,OAAhD,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,cAAvC,EAAsD;AACvDL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,sCAAX,EAAkD;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,6BAAqBH,WAAW,CAACE,SAAZ,CAAsBE;AAA5E,OAAlD,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,QAAvC,EAAgD;AACjDL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,gCAAX,EAA4C;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,uBAAeH,WAAW,CAACE,SAAZ,CAAsBE;AAAtE,OAA5C,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,QAAvC,EAAgD;AACjDL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,gCAAX,EAA4C;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,uBAAeH,WAAW,CAACE,SAAZ,CAAsBE;AAAtE,OAA5C,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,OAAvC,EAA+C;AAChDL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,+BAAX,EAA2C;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,sBAAcH,WAAW,CAACE,SAAZ,CAAsBE;AAArE,OAA3C,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,eAAvC,EAAuD;AACxDL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,uCAAX,EAAmD;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,8BAAsBH,WAAW,CAACE,SAAZ,CAAsBE;AAA7E,OAAnD,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,qBAAvC,EAA6D;AAC9DL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,iDAAX,EAA6D;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,iCAAyBH,WAAW,CAACE,SAAZ,CAAsBE;AAAhF,OAA7D,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,iBAAvC,EAAyD;AAC1DL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,4CAAX,EAAwD;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,kCAA0BH,WAAW,CAACE,SAAZ,CAAsBE;AAAjF,OAAxD,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,mBAAvC,EAA2D;AAC5DL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,2CAAX,EAAuD;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,kCAA0BH,WAAW,CAACE,SAAZ,CAAsBE;AAAjF,OAAvD,CAAN;AACH,KAFI,MAGA,IAAGJ,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,0BAApC,IAAgE8C,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,aAAvG,EAAqH;AACtHL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,kDAAX,EAA8D;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,qBAAYH,WAAW,CAACE,SAAZ,CAAsBhD;AAAnE,OAA9D,CAAN;AACH,KAFI,MAGC,IAAG8C,WAAW,CAACE,SAAZ,CAAsBhD,YAAtB,IAAoC,eAAvC,EAAuD;AACzDL,MAAAA,GAAG,GAAGb,KAAK,CAACgB,IAAN,CAAW,qCAAX,EAAiD;AAAC,oBAAWgD,WAAW,CAACG,QAAxB;AAAiC,qBAAaH,WAAW,CAACE,SAAZ,CAAsBxB;AAApE,OAAjD,CAAN;AACH;;AACDlC,IAAAA,QAAQ,CAACJ,WAAW,CAAC,IAAD,CAAZ,CAAR,CAtDuB,CAuDvB;;AACAD,IAAAA,KAAK,CAACwC,GAAN,CAAU,CAAC9B,GAAD,CAAV,EACK+B,IADL,CACUC,QAAQ,IAAI;AACd,UAAI/B,UAAJ;AACD,YAAMkC,cAAc,GAACgB,WAAW,CAAC9C,YAAjC;AAGCJ,MAAAA,UAAU,GAAG,EACT,GAAG+B,QAAQ,CAAC,CAAD,CAAR,CAAYI;AADN,OAAb,CALc,CAQf;AACC;AACA;AACD;AACH;AACA;AACA;;AACI5C,MAAAA,QAAQ,CAACS,UAAD,EAAY,YAAZ,CAAR;AACAN,MAAAA,QAAQ,CAAC;AAAEsC,QAAAA,IAAI,EAAE7C,cAAR;AAAwB8C,QAAAA,OAAO,EAAE;AAAEC,UAAAA,cAAF;AAAiBlC,UAAAA,UAAjB;AAA4BwC,UAAAA,OAAO,EAAE,KAArC;AAA4CL,UAAAA,IAAI,EAAEO,SAAlD;AAA6DC,UAAAA,SAAS,EAAED;AAAxE;AAAjC,OAAD,CAAR;AACH,KAlBL,EAmBKE,KAnBL,CAmBWC,KAAK,IAAI;AACZnD,MAAAA,QAAQ,CAAC;AAAEsC,QAAAA,IAAI,EAAE7C,cAAR;AAAwB8C,QAAAA,OAAO,EAAE;AAAEO,UAAAA,OAAO,EAAE;AAAX;AAAjC,OAAD,CAAR;;AACA,UAAIK,KAAK,CAACd,QAAN,CAAee,MAAf,KAA0B,GAA9B,EAAmC;AAC/B1D,QAAAA,KAAK,CAACyD,KAAN,CAAYA,KAAK,CAACE,OAAlB;AACH,OAFD,MAGK;AACD3D,QAAAA,KAAK,CAAC4D,IAAN,CAAWH,KAAK,CAACd,QAAN,CAAeI,IAA1B;AACH;AACJ,KA3BL;AA4BH,GApFD;AAqFH","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios'\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData } from '../components/CommonScript';\r\n\r\nexport function fetchById(languagesParam) {\r\n    return function (dispatch) {\r\n        let primaryKeyField;\r\n        let fieldName;\r\n        let selectedJsondata;\r\n        let jsondataKeys;\r\n        let URL;\r\n        if (languagesParam.masterData.headername == \"Menu\") {\r\n             URL = rsapi.post(\"language/getActiveMenuByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nmenucode\": languagesParam.languagesRow.nmenucode })\r\n            primaryKeyField = languagesParam.languagesRow.nmenucode\r\n            fieldName = \"sdisplayname\"\r\n        } else if (languagesParam.masterData.headername == \"Module\") {\r\n            URL = rsapi.post(\"language/getActiveModuleByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nmodulecode\": languagesParam.languagesRow.nmodulecode })\r\n            primaryKeyField = languagesParam.languagesRow.nmodulecode\r\n            fieldName = \"sdisplayname\"\r\n        } else if (languagesParam.masterData.headername == \"Forms\") {\r\n             URL = rsapi.post(\"language/getActiveFormByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nformcode\": languagesParam.languagesRow.nformcode })\r\n            primaryKeyField = languagesParam.languagesRow.nformcode\r\n            fieldName = \"sdisplayname\"\r\n        } else if (languagesParam.masterData.headername == \"TransactionStatus\") {\r\n            URL = rsapi.post(\"language/getActiveTransactionStatusByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ntranscode\": languagesParam.languagesRow.ntranscode })\r\n            primaryKeyField = languagesParam.languagesRow.ntranscode\r\n            jsondataKeys = Object.keys(languagesParam.languagesRow.jsondata)\r\n            fieldName = jsondataKeys\r\n        } else if (languagesParam.masterData.headername == \"ControlMaster\") {\r\n            URL = rsapi.post(\"language/getActiveControlMasterByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ncontrolcode\": languagesParam.languagesRow.ncontrolcode })\r\n            primaryKeyField = languagesParam.languagesRow.ncontrolcode\r\n            fieldName = \"scontrolids\"\r\n        } else if (languagesParam.masterData.headername == \"ApprovalSubType\") {\r\n            URL = rsapi.post(\"language/getActiveApprovalSubTypeByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"napprovalsubtypecode\": languagesParam.languagesRow.napprovalsubtypecode })\r\n            primaryKeyField = languagesParam.languagesRow.napprovalsubtypecode\r\n            fieldName = \"approvalsubtypename\"\r\n        } else if (languagesParam.masterData.headername == \"SampleType\") {\r\n            URL = rsapi.post(\"language/getActiveSampleTypeByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nsampletypecode\": languagesParam.languagesRow.nsampletypecode })\r\n            primaryKeyField = languagesParam.languagesRow.nsampletypecode\r\n            fieldName = \"sampletypename\"\r\n        } else if (languagesParam.masterData.headername == \"TemplateType\") {\r\n            URL = rsapi.post(\"language/getActiveTemplateTypeByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ntemplatetypecode\": languagesParam.languagesRow.ntemplatetypecode })\r\n            primaryKeyField = languagesParam.languagesRow.ntemplatetypecode\r\n            fieldName = \"stemplatetypename\"\r\n        } else if (languagesParam.masterData.headername == \"Period\") {\r\n            URL = rsapi.post(\"language/getActivePeriodByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nperiodcode\": languagesParam.languagesRow.nperiodcode })\r\n            primaryKeyField = languagesParam.languagesRow.nperiodcode\r\n            fieldName = \"speriodname\"\r\n        } else if (languagesParam.masterData.headername == \"Gender\") {\r\n            URL = rsapi.post(\"language/getActiveGenderByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ngendercode\": languagesParam.languagesRow.ngendercode })\r\n            primaryKeyField = languagesParam.languagesRow.ngendercode\r\n            fieldName = \"sgendername\"\r\n        } else if (languagesParam.masterData.headername == \"Grade\") {\r\n            URL = rsapi.post(\"language/getActiveGradeByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ngradecode\": languagesParam.languagesRow.ngradecode })\r\n            primaryKeyField = languagesParam.languagesRow.ngradecode\r\n            fieldName = \"sdisplayname\"        \r\n        }else if (languagesParam.masterData.headername == \"SchedulerType\") {\r\n            URL = rsapi.post(\"language/getActiveSchedulerTypeByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nschedulertypecode\": languagesParam.languagesRow.nschedulertypecode })\r\n            primaryKeyField = languagesParam.languagesRow.nschedulertypecode\r\n            fieldName = \"sschedulertypename\"\r\n        } else if (languagesParam.masterData.headername == \"DynamicRecordDetail\") {\r\n            URL = rsapi.post(\"language/getActiveDynamicRecordDetailTypeByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nrecorddetailtypecode\": languagesParam.languagesRow.nrecorddetailtypecode })\r\n            primaryKeyField = languagesParam.languagesRow.nrecorddetailtypecode\r\n            fieldName = \"sdisplayname\"\r\n        } else if (languagesParam.masterData.headername == \"SqlQueryBuilder\") {\r\n            URL = rsapi.post(\"language/getActiveQueryBuilderTablesByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nquerybuildertablecode\": languagesParam.languagesRow.nquerybuildertablecode })\r\n            primaryKeyField = languagesParam.languagesRow.nquerybuildertablecode\r\n            fieldName = \"tablename\"\r\n        }else if (languagesParam.masterData.headername == \"ViewsQueryBuilder\") {\r\n            URL = rsapi.post(\"language/getActiveQueryBuilderViewsByID\",{ \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nquerybuilderviewscode\": languagesParam.languagesRow.nquerybuilderviewscode })\r\n            primaryKeyField = languagesParam.languagesRow.nquerybuilderviewscode\r\n            fieldName = \"displayname\"\r\n        }else if (languagesParam.masterData.headername == \"QueryBuilderViewsColumns\") {\r\n            URL = rsapi.post(\"language/getActiveTestMasterByID\",{ \"languagesParam\": languagesParam.languagesRow.jsondata.findIndex((item)=>(item.displayname[languagesParam.userInfo.slanguagetypecode]==languagesParam.languagesRow.sdisplayname?item:\"\")) , \"userinfo\": languagesParam.userInfo, \"sviewname\": languagesParam.languagesRow.sviewname })\r\n            primaryKeyField = languagesParam.languagesRow.sviewname\r\n            fieldName = \"displayname\"\r\n        }else if (languagesParam.masterData.headername == \"testmasterview\") {\r\n            URL = rsapi.post(\"language/getActiveTestCategoryByID\",{ \"languagesParam\": languagesParam.languagesRow.jsondata.findIndex((item)=>(item.displayname[languagesParam.userInfo.slanguagetypecode]==languagesParam.languagesRow.sdisplayname?item:\"\")) , \"userinfo\": languagesParam.userInfo, \"sviewname\": languagesParam.languagesRow.sviewname })\r\n            primaryKeyField = languagesParam.languagesRow.sviewname\r\n            fieldName = \"displayname\"\r\n        }\r\n        //const URL = rsapi.post(\"language/getActiveFormByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nflag\": nflag, \"int\": primaryKeyField })\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL])\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        selectedRecord: { ...response[0].data, ...response[0].data.jsondata, fieldName, selectedJsondata },\r\n                        operation: languagesParam.operation,\r\n                        openModal: true,\r\n                        screenName: languagesParam.screenName,\r\n                        ncontrolcode: languagesParam.ncontrolCode,\r\n                        loading: false, selectedId: primaryKeyField,\r\n                        data: undefined, dataState: undefined,\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function comboService(methodParam) {\r\n    return function (dispatch) {\r\n        let URL;\r\n        let needHeader;\r\n        if(methodParam.inputData.sdisplayname==\"Menu\"){\r\n        URL = rsapi.post(\"language/getMenuComboService\",{\"userinfo\":methodParam.userinfo,\"nmenucode\": methodParam.inputData.primarykey}) \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"Module\"){\r\n            URL = rsapi.post(\"language/getModuleComboService\",{\"userinfo\":methodParam.userinfo,\"nmodulecode\": methodParam.inputData.primarykey})    \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"Forms\"){\r\n            URL = rsapi.post(\"language/getFormComboService\",{\"userinfo\":methodParam.userinfo,\"nformcode\": methodParam.inputData.primarykey})     \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"TransactionStatus\"){\r\n            URL = rsapi.post(\"language/getTransactionStatusComboService\",{\"userinfo\":methodParam.userinfo,\"ntranscode\": methodParam.inputData.primarykey})   \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"Control Master\"){\r\n            URL = rsapi.post(\"language/getControlMasterComboService\",{\"userinfo\":methodParam.userinfo,\"ncontrolcode\": methodParam.inputData.primarykey})   \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"ApprovalSubType\"){\r\n            URL = rsapi.post(\"language/getApprovalSubTypeComboService\",{\"userinfo\":methodParam.userinfo,\"napprovalsubtypecode\": methodParam.inputData.primarykey})   \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"SampleType\"){\r\n            URL = rsapi.post(\"language/getSampleTypeComboService\",{\"userinfo\":methodParam.userinfo,\"nsampletypecode\": methodParam.inputData.primarykey})   \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"TemplateType\"){\r\n            URL = rsapi.post(\"language/getTemplateTypeComboService\",{\"userinfo\":methodParam.userinfo,\"ntemplatetypecode\": methodParam.inputData.primarykey})   \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"Period\"){\r\n            URL = rsapi.post(\"language/getPeriodComboService\",{\"userinfo\":methodParam.userinfo,\"nperiodcode\": methodParam.inputData.primarykey})   \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"Gender\"){\r\n            URL = rsapi.post(\"language/getGenderComboService\",{\"userinfo\":methodParam.userinfo,\"ngendercode\": methodParam.inputData.primarykey})   \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"Grade\"){\r\n            URL = rsapi.post(\"language/getGradeComboService\",{\"userinfo\":methodParam.userinfo,\"ngradecode\": methodParam.inputData.primarykey})   \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"SchedulerType\"){\r\n            URL = rsapi.post(\"language/getSchedulerTypeComboService\",{\"userinfo\":methodParam.userinfo,\"nschedulertypecode\": methodParam.inputData.primarykey})   \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"DynamicRecordDetail\"){\r\n            URL = rsapi.post(\"language/getDynamicRecordDetailTypeComboService\",{\"userinfo\":methodParam.userinfo,\"nrecorddetailtypecode\": methodParam.inputData.primarykey})   \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"SqlQueryBuilder\"){\r\n            URL = rsapi.post(\"language/getQueryBuilderTablesComboService\",{\"userinfo\":methodParam.userinfo,\"nquerybuildertablecode\": methodParam.inputData.primarykey})   \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"ViewsQueryBuilder\"){\r\n            URL = rsapi.post(\"language/getQueryBuilderViewsComboService\",{\"userinfo\":methodParam.userinfo,\"nquerybuilderviewscode\": methodParam.inputData.primarykey})   \r\n        }\r\n        else if(methodParam.inputData.sdisplayname==\"QueryBuilderViewsColumns\"||methodParam.inputData.sdisplayname==\"Test Master\"){\r\n            URL = rsapi.post(\"language/getQueryBuilderViewsColumnsComboService\",{\"userinfo\":methodParam.userinfo,\"sviewname\":methodParam.inputData.sdisplayname})   \r\n        }\r\n         else if(methodParam.inputData.sdisplayname==\"Test Category\"){\r\n            URL = rsapi.post(\"language/getTestCategoryColumnsName\",{\"userinfo\":methodParam.userinfo,\"sviewname\": methodParam.inputData.sviewname})   \r\n        }\r\n        dispatch(initRequest(true));\r\n        //return rsapi.post(methodParam.url, methodParam.inputData)\r\n        Axios.all([URL])\r\n            .then(response => {\r\n                let masterData;\r\n               const selectedRecord=methodParam.sdisplayname;\r\n                        \r\n           \r\n                masterData = {\r\n                    ...response[0].data\r\n                };\r\n               //posts.forEach(obj => {\r\n                //Object.entries(obj).forEach(([key, value]) => {})});\r\n                //const display = Object.keys(posts).map((item,index)=>{})\r\n               // sortData(masterData[filterParam.sortList],'descending',filterParam.sortValue);\r\n            //    if(methodParam.inputData.sdisplayname==\"QueryBuilderViewsColumns\"){\r\n            //     let posts=   masterData.listofItem.map((item)=>item.jsondata.map((item1)=>item1))\r\n            //      }   \r\n                sortData(masterData,'descending')\r\n                dispatch({ type: DEFAULT_RETURN, payload: { selectedRecord,masterData,loading: false, data: undefined, dataState: undefined } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}