{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\slider-page\\\\slider-page-component.jsx\";\nimport React from \"react\";\nimport './slider-page-component.css';\nimport { Button, Modal } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight, faSync } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { updateStore } from '../../actions';\nimport HomeDashBoard from \"../../pages/dashboardtypes/HomeDashBoard\";\nimport StaticHomeDashBoard from '../../pages/dashboardtypes/StaticHomeDashBoard';\nimport AlertSlide from \"../../pages/dashboardtypes/AlertSlide\";\nimport { getListAlert } from '../../actions';\nimport { injectIntl } from \"react-intl\"; // import ReactTooltip from 'react-tooltip';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass SliderPage extends React.Component {\n  constructor(Props) {\n    super(Props);\n\n    this.toggleSilde = () => {\n      this.setState({\n        SliderOpen: !this.state.SliderOpen,\n        loader: !this.state.loader\n      });\n    };\n\n    this.getListAlert = () => {\n      this.props.getListAlert(this.props.Login.userInfo, true);\n    };\n\n    this.getListAlert1 = () => {\n      this.props.getListAlert(this.props.Login.userInfo, false);\n    };\n\n    this.getPreviousPage = () => {\n      if (this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length > 0) {\n        let initialPage = Object.keys(this.props.Login.homeDashBoard)[0];\n\n        if (this.props.Login.masterDataStatic && Object.values(this.props.Login.masterDataStatic).length > 0) {\n          initialPage = -1;\n        }\n\n        console.log(\"initial page:\", initialPage, this.props.Login.currentPageNo);\n\n        if (this.props.Login.currentPageNo > initialPage) {\n          const currentPageNo = this.props.Login.currentPageNo - 1;\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              currentPageNo\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      }\n    };\n\n    this.getNextPage = () => {\n      if (this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length - 1 > this.props.Login.currentPageNo) {\n        const currentPageNo = this.props.Login.currentPageNo + 1;\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            currentPageNo\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.state = { ...Props,\n      SliderOpen: false,\n      loader: false\n    };\n  }\n\n  render() {\n    let initialPage = this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length > 0 && Object.keys(this.props.Login.homeDashBoard)[0];\n\n    if (this.props.Login.masterDataStatic && Object.values(this.props.Login.masterDataStatic).length > 0) {\n      initialPage = -1;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      centered: true,\n      scrollable: true,\n      bsPrefix: \"model model_zindex\",\n      show: this.props.show,\n      onHide: this.props.closeModal,\n      dialogClassName: `${this.props.nflag && this.props.nflag === 2 ? 'alert-popup' : ''} modal-fullscreen`,\n      backdrop: \"static\",\n      keyboard: false,\n      enforceFocus: false,\n      \"aria-labelledby\": \"example-custom-modal-styling-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      style: {\n        \"line-height\": \"1.0\"\n      },\n      id: \"example-custom-modal-styling-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, this.props.intl.formatMessage({\n      id: this.props.nflag && this.props.nflag === 1 ? \"IDS_DASHBOARD\" : \"IDS_ALERTS\"\n    })), this.props.nflag && this.props.nflag === 2 ? /*#__PURE__*/React.createElement(Button, {\n      className: \"solid-blue btn btn-circle btn-primary buttonstyle\",\n      variant: \"link\",\n      onClick: () => this.getListAlert() //title={this.props.intl.formatMessage({id:\"IDS_REFRESH\"})} \n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REFRESH\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSync,\n      style: {\n        \"width\": \"0.6!important\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    })) // <Button className=\"btn-user btn-primary-blue\" onClick={() => this.getListAlert()}>\n    //   <FontAwesomeIcon icon={faSync} /> { }\n    //   <FormattedMessage id='IDS_REFRESH' defaultMessage='Refresh' />\n    // </Button>\n    : \"\"), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-inner-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, this.props.nflag && this.props.nflag === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, this.props.Login.currentPageNo === -1 && this.props.Login.masterDataStatic && Object.values(this.props.Login.masterDataStatic).length > 0 ? /*#__PURE__*/React.createElement(StaticHomeDashBoard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(HomeDashBoard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }\n    })), this.props.Login.currentPageNo > initialPage ? /*#__PURE__*/React.createElement(\"a\", {\n      href: () => false,\n      class: \"left-arrow\",\n      onClick: this.getPreviousPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null), this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length > 0 && this.props.Login.homeDashBoard.length - 1 !== this.props.Login.currentPageNo // && (this.props.Login.masterDataStatic \n    //   && Object.values(this.props.Login.masterDataStatic).length > 0)  \n    ? /*#__PURE__*/React.createElement(\"a\", {\n      href: () => false,\n      class: \"right-arrow\",\n      onClick: this.getNextPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(AlertSlide, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }))))));\n  } // componentDidMount() {\n  //   const thisBoundedIncrementer = this.getListAlert1.bind(this);\n  //   setInterval(thisBoundedIncrementer, 100000);\n  // }\n\n\n}\n\nexport default connect(mapStateToProps, {\n  updateStore,\n  getListAlert\n})(injectIntl(SliderPage));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/slider-page/slider-page-component.jsx"],"names":["React","Button","Modal","FontAwesomeIcon","faArrowLeft","faArrowRight","faSync","connect","DEFAULT_RETURN","updateStore","HomeDashBoard","StaticHomeDashBoard","AlertSlide","getListAlert","injectIntl","mapStateToProps","state","Login","SliderPage","Component","constructor","Props","toggleSilde","setState","SliderOpen","loader","props","userInfo","getListAlert1","getPreviousPage","homeDashBoard","length","initialPage","Object","keys","masterDataStatic","values","console","log","currentPageNo","updateInfo","typeName","data","getNextPage","render","show","closeModal","nflag","intl","formatMessage","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './slider-page-component.css';\nimport { Button, Modal } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight, faSync } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { updateStore } from '../../actions';\nimport HomeDashBoard from \"../../pages/dashboardtypes/HomeDashBoard\";\nimport StaticHomeDashBoard from '../../pages/dashboardtypes/StaticHomeDashBoard';\nimport AlertSlide from \"../../pages/dashboardtypes/AlertSlide\";\nimport {\n  getListAlert\n} from '../../actions';\nimport { injectIntl } from \"react-intl\";\n// import ReactTooltip from 'react-tooltip';\n\nconst mapStateToProps = state => {\n  return ({ Login: state.Login })\n}\n\nclass SliderPage extends React.Component {\n  constructor(Props) {\n    super(Props);\n    this.state = { ...Props, SliderOpen: false, loader: false }\n  }\n\n  toggleSilde = () => {\n     this.setState({ SliderOpen: !this.state.SliderOpen, loader: !this.state.loader })\n  }\n  render() {\n    let initialPage = this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length > 0\n                      && Object.keys(this.props.Login.homeDashBoard)[0];\n    if (this.props.Login.masterDataStatic && Object.values(this.props.Login.masterDataStatic).length > 0) \n    {\n        initialPage = -1;\n    }\n    return (\n      <>\n        <div>\n          <Modal\n            centered\n            scrollable\n            bsPrefix = \"model model_zindex\"\n            show={this.props.show}\n            onHide={this.props.closeModal}\n            dialogClassName={`${this.props.nflag && this.props.nflag === 2 ? 'alert-popup':''} modal-fullscreen`}\n            backdrop=\"static\"\n            keyboard={false}\n                enforceFocus={false}\n            aria-labelledby=\"example-custom-modal-styling-title\"\n          >\n            <Modal.Header closeButton>\n              <Modal.Title style={{ \"line-height\": \"1.0\" }} id=\"example-custom-modal-styling-title\">\n                      {this.props.intl.formatMessage({id: this.props.nflag && this.props.nflag === 1 ?\"IDS_DASHBOARD\" : \"IDS_ALERTS\"})}\n              </Modal.Title>\n              {/* <ReactTooltip globalEventOff=\"true\"/> */}\n              {this.props.nflag && this.props.nflag === 2 ?\n                  <Button className=\"solid-blue btn btn-circle btn-primary buttonstyle\" variant=\"link\"\n                    onClick={() => this.getListAlert()}\n                    //title={this.props.intl.formatMessage({id:\"IDS_REFRESH\"})} \n                    data-tip={this.props.intl.formatMessage({id:\"IDS_REFRESH\"})}\n                    >\n                    <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\n                  </Button>\n                  \n                  // <Button className=\"btn-user btn-primary-blue\" onClick={() => this.getListAlert()}>\n                  //   <FontAwesomeIcon icon={faSync} /> { }\n                  //   <FormattedMessage id='IDS_REFRESH' defaultMessage='Refresh' />\n                  // </Button>\n\n                  : \"\"}\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"modal-inner-content\">\n                {this.props.nflag && this.props.nflag === 1 ?\n                  <>\n                    <>\n                      {this.props.Login.currentPageNo === -1 \n                        && (this.props.Login.masterDataStatic  && Object.values(this.props.Login.masterDataStatic).length > 0) \n                        ? <StaticHomeDashBoard />\n                        : <HomeDashBoard />\n                      }\n                    </>\n\n                    {/* Arrow Left and Right */}\n                    {this.props.Login.currentPageNo > initialPage ?\n                      <a href={() => false} class=\"left-arrow\" onClick={this.getPreviousPage}>\n                        <FontAwesomeIcon icon={faArrowLeft} />\n                      </a>\n                      :\n                      <></>\n                    }\n                    {this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length > 0\n                      && (this.props.Login.homeDashBoard.length - 1) !== this.props.Login.currentPageNo\n                      // && (this.props.Login.masterDataStatic \n                      //   && Object.values(this.props.Login.masterDataStatic).length > 0)  \n                        ?\n                      <a href={() => false} class=\"right-arrow\" onClick={this.getNextPage}>\n                        <FontAwesomeIcon icon={faArrowRight} />\n                      </a>\n                      :\n                      <></>\n                    }\n                  </>\n                  : <AlertSlide />\n                }\n              </div>\n            </Modal.Body>\n          </Modal>\n        </div>\n      </>\n    )\n  }\n\n  getListAlert = () => {\n    this.props.getListAlert(this.props.Login.userInfo,true)\n  }\n\n  getListAlert1 = () => {\n    this.props.getListAlert(this.props.Login.userInfo,false)\n  }\n\n  getPreviousPage = () => {\n      if (this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length > 0) \n      {\n          let initialPage = Object.keys(this.props.Login.homeDashBoard)[0];\n          if (this.props.Login.masterDataStatic && Object.values(this.props.Login.masterDataStatic).length > 0) \n          {\n              initialPage = -1;\n          }\n          console.log(\"initial page:\", initialPage, this.props.Login.currentPageNo);\n          if (this.props.Login.currentPageNo > initialPage) {\n                const currentPageNo = this.props.Login.currentPageNo - 1;\n\n                const updateInfo = {  typeName: DEFAULT_RETURN,\n                                      data: { currentPageNo }\n                                    }\n                this.props.updateStore(updateInfo);\n          }\n      }\n  }\n\n  getNextPage = () => {\n    if (this.props.Login.homeDashBoard && this.props.Login.homeDashBoard.length - 1 > this.props.Login.currentPageNo) \n    {\n          const currentPageNo = this.props.Login.currentPageNo + 1;\n          const updateInfo = {typeName: DEFAULT_RETURN,\n                              data: { currentPageNo }\n                            }\n          this.props.updateStore(updateInfo);\n    }\n  }\n\n  // componentDidMount() {\n  //   const thisBoundedIncrementer = this.getListAlert1.bind(this);\n  //   setInterval(thisBoundedIncrementer, 100000);\n  // }\n\n}\nexport default connect(mapStateToProps, { updateStore, getListAlert })(injectIntl(SliderPage));\n\n"]},"metadata":{},"sourceType":"module"}