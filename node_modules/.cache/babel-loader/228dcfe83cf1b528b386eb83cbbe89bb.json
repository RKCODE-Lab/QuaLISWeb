{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{faAngleDoubleRight,faTimes}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React from'react';import{Col,Row}from'react-bootstrap';import{injectIntl}from'react-intl';//import { comboChangeUserRolePolicy } from '../../actions';\nimport DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';var ResultEntryFilter=/*#__PURE__*/function(_React$Component){_inherits(ResultEntryFilter,_React$Component);var _super=_createSuper(ResultEntryFilter);function ResultEntryFilter(props){var _this;_classCallCheck(this,ResultEntryFilter);_this=_super.call(this,props);_this.showMoreToggle=function(){_this.setState({showMore:!_this.state.showMore});};_this.state={showMore:false};return _this;}_createClass(ResultEntryFilter,[{key:\"render\",value:function render(){var _this2=this;console.log(\"date:\",this.props.fromDate,this.props.toDate);return/*#__PURE__*/React.createElement(\"div\",{className:\"side_more_filter_wrap\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"fromdate\",label:this.props.intl.formatMessage({id:\"IDS_FROM\"}),className:\"form-control\",placeholderText:this.props.intl.formatMessage({id:\"IDS_FROM\"}),selected:this.props.fromDate,value:this.props.fromDate,dateFormat:this.props.userInfo.ssitedate,onChange:function onChange(date){return _this2.props.onFilterComboChange(date,\"fromDate\");},isClearable:false})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"fromdate\",label:this.props.intl.formatMessage({id:\"IDS_TO\"}),className:\"form-control\",placeholderText:this.props.intl.formatMessage({id:\"IDS_TO\"}),selected:this.props.toDate,value:this.props.toDate,dateFormat:this.props.userInfo.ssitedate,onChange:function onChange(date){return _this2.props.onFilterComboChange(date,\"toDate\");},isClearable:false})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_SAMPLETYPE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"nsampletypecode\",optionId:\"nsampletypecode\",optionValue:\"ssampletypename\",className:\"form-control\",options:this.props.SampleType,value:this.props.SampleTypeValue?{\"label\":this.props.SampleTypeValue.ssampletypename,\"value\":this.props.SampleTypeValue.nsampletypecode}:\"\",isMandatory:false,isMulti:false,isSearchable:false,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"nsampletypecode\");}}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONTYPE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"nregtypecode\",className:\"form-control\",options:this.props.RegType,value:this.props.RegTypeValue?{\"label\":this.props.RegTypeValue.sregtypename,\"value\":this.props.RegTypeValue.nregtypecode}:\"\",optionId:\"nregtypecode\",optionValue:\"sregtypename\",isMandatory:false,isMulti:false,isSearchable:false,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"nregtypecode\");}}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONSUBTYPE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"nregsubtypecode\",optionId:\"nregsubtypecode\",optionValue:\"sregsubtypename\",className:\"form-control\",options:this.props.RegSubType,value:this.props.RegSubTypeValue?{\"label\":this.props.RegSubTypeValue.sregsubtypename,\"value\":this.props.RegSubTypeValue.nregsubtypecode}:\"\",isMandatory:false,isMulti:false,isSearchable:false,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"nregsubtypecode\");}}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_TESTSTATUS\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"ntransactionstatus\",optionId:\"ntransactionstatus\",optionValue:\"sfilterstatus\",className:\"form-control\",options:this.props.FilterStatus,value:this.props.FilterStatusValue?{\"label\":this.props.FilterStatusValue.sfilterstatus,\"value\":this.props.FilterStatusValue.ntransactionstatus}:\"\",isMandatory:false,isMulti:false,isSearchable:false,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"filter\");}}))),!this.state.showMore?/*#__PURE__*/React.createElement(\"button\",{className:\"btn_sidebar_open\",onClick:this.showMoreToggle},\" \",/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faAngleDoubleRight}),\" \"):'',/*#__PURE__*/React.createElement(\"div\",{className:\"side_more_filter \".concat(this.state.showMore?'active':'',\" \")},/*#__PURE__*/React.createElement(\"button\",{className:\"btn_sidebar_close\",onClick:this.showMoreToggle},\" \",/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTimes}),\" \"),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_CONFIGVERSION\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"sversionname\",optionId:\"napprovalconfigversioncode\",optionValue:\"sversionname\",className:\"form-control\",options:this.props.ApprovalVersion,value:this.props.ApprovalVersionValue?{\"label\":this.props.ApprovalVersionValue.sversionname,\"value\":this.props.ApprovalVersionValue.napprovalconfigversioncode}:\"\",isMandatory:false,isMulti:false,isSearchable:false,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"version\");}}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_DESIGNTEMPLATE\"}),isSearchable:true,name:\"ndesigntemplatemappingcode\",isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:false,options:this.props.DynamicDesignMapping,optionId:\"ndesigntemplatemappingcode\",optionValue:\"sregtemplatename\",value:this.props.DesignTemplateMappingValue?{\"label\":this.props.DesignTemplateMappingValue.sregtemplatename,\"value\":this.props.DesignTemplateMappingValue.ndesigntemplatemappingcode}:\"\",showOption:true,sortField:\"ndesigntemplatemappingcode\",sortOrder:\"ascending\",onChange:function onChange(event){return _this2.props.onFilterComboChange(event,'ndesigntemplatemappingcode','DesignTemplateMappingValue');}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_TEST\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"ntestcode\",optionId:\"ntestcode\",optionValue:\"stestsynonym\",className:\"form-control\",options:this.props.Test,value:this.props.TestValue?{\"label\":this.props.TestValue.stestsynonym,\"value\":this.props.TestValue.ntestcode}:\"\",isMandatory:false,isMulti:false,isSearchable:true,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"test\");}})),this.props.RegSubTypeValue&&(this.props.RegSubTypeValue.nneedbatch==true||this.props.RegSubTypeValue.nneedworklist==true)&&/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_WORKLISTORBATCH\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"nconfigfiltercode\",optionId:\"sfiltername\",optionValue:\"sfiltername\",className:\"form-control\",options:this.props.ConfigurationFilter,value:this.props.ConfigurationFilterValue?{\"label\":this.props.ConfigurationFilterValue.sfiltername,\"value\":this.props.ConfigurationFilterValue.nconfigfiltercode}:\"\",isMandatory:false,isMulti:false,isSearchable:false,isDisabled:false,alphabeticalSort:false,isClearable:true,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"nconfigfiltercode\");}})),this.props.ConfigurationFilterValue&&this.props.ConfigurationFilterValue.nconfigfiltercode==1&&this.props.RegSubTypeValue.nneedworklist==true&&/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_WORKLIST\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"nworklistcode\",optionId:\"sworklistno\",optionValue:\"sworklistno\",className:\"form-control\",options:this.props.Worklist,value:this.props.WorklistValue?{\"label\":this.props.WorklistValue.sworklistno,\"value\":this.props.WorklistValue.nworklistcode}:\"\",isMandatory:false,isMulti:false,isSearchable:true,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"nworklistcode\");}})),this.props.ConfigurationFilterValue&&this.props.ConfigurationFilterValue.nconfigfiltercode==2&&this.props.RegSubTypeValue.nneedbatch==true&&/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_BATCH\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"nbatchmastercode\",optionId:\"nbatchmastercode\",optionValue:\"sbatcharno\",className:\"form-control\",options:this.props.Batch,value:this.props.BatchValue?{\"label\":this.props.BatchValue.sbatcharno,\"value\":this.props.BatchValue.nbatchmastercode}:\"\",isMandatory:false,isMulti:false,isSearchable:true,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"nbatchmastercode\");}})))));}}]);return ResultEntryFilter;}(React.Component);export default injectIntl(ResultEntryFilter);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryFilter.jsx"],"names":["faAngleDoubleRight","faTimes","FontAwesomeIcon","React","Col","Row","injectIntl","DateTimePicker","FormSelectSearch","ResultEntryFilter","props","showMoreToggle","setState","showMore","state","console","log","fromDate","toDate","intl","formatMessage","id","userInfo","ssitedate","date","onFilterComboChange","SampleType","SampleTypeValue","ssampletypename","nsampletypecode","event","RegType","RegTypeValue","sregtypename","nregtypecode","RegSubType","RegSubTypeValue","sregsubtypename","nregsubtypecode","FilterStatus","FilterStatusValue","sfilterstatus","ntransactionstatus","ApprovalVersion","ApprovalVersionValue","sversionname","napprovalconfigversioncode","DynamicDesignMapping","DesignTemplateMappingValue","sregtemplatename","ndesigntemplatemappingcode","Test","TestValue","stestsynonym","ntestcode","nneedbatch","nneedworklist","ConfigurationFilter","ConfigurationFilterValue","sfiltername","nconfigfiltercode","Worklist","WorklistValue","sworklistno","nworklistcode","Batch","BatchValue","sbatcharno","nbatchmastercode","Component"],"mappings":"wtBAAA,OAASA,kBAAT,CAA6BC,OAA7B,KAA4C,mCAA5C,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA;AACA,MAAOC,CAAAA,cAAP,KAA2B,8DAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,C,GACMC,CAAAA,iB,kIAEF,2BAAYC,KAAZ,CAAmB,mDACf,uBAAMA,KAAN,EADe,MAOnBC,cAPmB,CAOF,UAAM,CACnB,MAAKC,QAAL,CAAc,CACVC,QAAQ,CAAE,CAAC,MAAKC,KAAL,CAAWD,QADZ,CAAd,EAIH,CAZkB,CAEf,MAAKC,KAAL,CAAa,CACTD,QAAQ,CAAE,KADD,CAAb,CAFe,aAKlB,C,oDASD,iBAAS,iBACLE,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqB,KAAKN,KAAL,CAAWO,QAAhC,CAA0C,KAAKP,KAAL,CAAWQ,MAArD,EACA,mBACI,2BAAK,SAAS,CAAC,uBAAf,eACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,cAAD,EACI,IAAI,CAAE,UADV,CAEI,KAAK,CAAE,KAAKR,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,UAAN,CAA9B,CAFX,CAGI,SAAS,CAAC,cAHd,CAII,eAAe,CAAE,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,UAAN,CAA9B,CAJrB,CAKI,QAAQ,CAAE,KAAKX,KAAL,CAAWO,QALzB,CAMI,KAAK,CAAE,KAAKP,KAAL,CAAWO,QANtB,CAOI,UAAU,CAAE,KAAKP,KAAL,CAAWY,QAAX,CAAoBC,SAPpC,CAQI,QAAQ,CAAE,kBAAAC,IAAI,QAAI,CAAA,MAAI,CAACd,KAAL,CAAWe,mBAAX,CAA+BD,IAA/B,CAAqC,UAArC,CAAJ,EARlB,CASI,WAAW,CAAE,KATjB,EADJ,CADJ,cAcI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,cAAD,EACI,IAAI,CAAE,UADV,CAEI,KAAK,CAAE,KAAKd,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,QAAN,CAA9B,CAFX,CAGI,SAAS,CAAC,cAHd,CAII,eAAe,CAAE,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,QAAN,CAA9B,CAJrB,CAKI,QAAQ,CAAE,KAAKX,KAAL,CAAWQ,MALzB,CAMI,KAAK,CAAE,KAAKR,KAAL,CAAWQ,MANtB,CAOI,UAAU,CAAE,KAAKR,KAAL,CAAWY,QAAX,CAAoBC,SAPpC,CAQI,QAAQ,CAAE,kBAAAC,IAAI,QAAI,CAAA,MAAI,CAACd,KAAL,CAAWe,mBAAX,CAA+BD,IAA/B,CAAqC,QAArC,CAAJ,EARlB,CASI,WAAW,CAAE,KATjB,EADJ,CAdJ,cA2BI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,SAAS,CAAE,KAAKd,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,gBAAN,CAA9B,CADf,CAEI,WAAW,CAAE,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFjB,CAGI,IAAI,CAAC,iBAHT,CAII,QAAQ,CAAC,iBAJb,CAKI,WAAW,CAAC,iBALhB,CAMI,SAAS,CAAC,cANd,CAOI,OAAO,CAAE,KAAKX,KAAL,CAAWgB,UAPxB,CAQI,KAAK,CAAE,KAAKhB,KAAL,CAAWiB,eAAX,CAA6B,CAAE,QAAS,KAAKjB,KAAL,CAAWiB,eAAX,CAA2BC,eAAtC,CAAuD,QAAS,KAAKlB,KAAL,CAAWiB,eAAX,CAA2BE,eAA3F,CAA7B,CAA4I,EARvJ,CASI,WAAW,CAAE,KATjB,CAUI,OAAO,CAAE,KAVb,CAWI,YAAY,CAAE,KAXlB,CAYI,UAAU,CAAE,KAZhB,CAaI,gBAAgB,CAAE,KAbtB,CAcI,WAAW,CAAE,KAdjB,CAeI,QAAQ,CAAE,kBAACC,KAAD,QAAW,CAAA,MAAI,CAACpB,KAAL,CAAWe,mBAAX,CAA+BK,KAA/B,CAAsC,iBAAtC,CAAX,EAfd,EADJ,cAmBI,oBAAC,gBAAD,EACI,SAAS,CAAE,KAAKpB,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,sBAAN,CAA9B,CADf,CAEI,WAAW,CAAE,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFjB,CAGI,IAAI,CAAC,cAHT,CAII,SAAS,CAAC,cAJd,CAKI,OAAO,CAAE,KAAKX,KAAL,CAAWqB,OALxB,CAMI,KAAK,CAAE,KAAKrB,KAAL,CAAWsB,YAAX,CAA0B,CAAE,QAAS,KAAKtB,KAAL,CAAWsB,YAAX,CAAwBC,YAAnC,CAAiD,QAAS,KAAKvB,KAAL,CAAWsB,YAAX,CAAwBE,YAAlF,CAA1B,CAA6H,EANxI,CAOI,QAAQ,CAAC,cAPb,CAQI,WAAW,CAAC,cARhB,CASI,WAAW,CAAE,KATjB,CAUI,OAAO,CAAE,KAVb,CAWI,YAAY,CAAE,KAXlB,CAYI,UAAU,CAAE,KAZhB,CAaI,gBAAgB,CAAE,KAbtB,CAcI,WAAW,CAAE,KAdjB,CAeI,QAAQ,CAAE,kBAACJ,KAAD,QAAW,CAAA,MAAI,CAACpB,KAAL,CAAWe,mBAAX,CAA+BK,KAA/B,CAAsC,cAAtC,CAAX,EAfd,EAnBJ,cAqCI,oBAAC,gBAAD,EACI,SAAS,CAAE,KAAKpB,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,yBAAN,CAA9B,CADf,CAEI,WAAW,CAAE,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFjB,CAGI,IAAI,CAAC,iBAHT,CAII,QAAQ,CAAC,iBAJb,CAKI,WAAW,CAAC,iBALhB,CAMI,SAAS,CAAC,cANd,CAOI,OAAO,CAAE,KAAKX,KAAL,CAAWyB,UAPxB,CAQI,KAAK,CAAE,KAAKzB,KAAL,CAAW0B,eAAX,CAA6B,CAAE,QAAS,KAAK1B,KAAL,CAAW0B,eAAX,CAA2BC,eAAtC,CAAuD,QAAS,KAAK3B,KAAL,CAAW0B,eAAX,CAA2BE,eAA3F,CAA7B,CAA4I,EARvJ,CASI,WAAW,CAAE,KATjB,CAUI,OAAO,CAAE,KAVb,CAWI,YAAY,CAAE,KAXlB,CAYI,UAAU,CAAE,KAZhB,CAaI,gBAAgB,CAAE,KAbtB,CAcI,WAAW,CAAE,KAdjB,CAeI,QAAQ,CAAE,kBAACR,KAAD,QAAW,CAAA,MAAI,CAACpB,KAAL,CAAWe,mBAAX,CAA+BK,KAA/B,CAAsC,iBAAtC,CAAX,EAfd,EArCJ,cA8FI,oBAAC,gBAAD,EACI,SAAS,CAAE,KAAKpB,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,gBAAN,CAA9B,CADf,CAEI,WAAW,CAAE,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFjB,CAGI,IAAI,CAAC,oBAHT,CAII,QAAQ,CAAC,oBAJb,CAKI,WAAW,CAAC,eALhB,CAMI,SAAS,CAAC,cANd,CAOI,OAAO,CAAE,KAAKX,KAAL,CAAW6B,YAPxB,CAQI,KAAK,CAAE,KAAK7B,KAAL,CAAW8B,iBAAX,CAA+B,CAAE,QAAS,KAAK9B,KAAL,CAAW8B,iBAAX,CAA6BC,aAAxC,CAAuD,QAAS,KAAK/B,KAAL,CAAW8B,iBAAX,CAA6BE,kBAA7F,CAA/B,CAAmJ,EAR9J,CASI,WAAW,CAAE,KATjB,CAUI,OAAO,CAAE,KAVb,CAWI,YAAY,CAAE,KAXlB,CAYI,UAAU,CAAE,KAZhB,CAaI,gBAAgB,CAAE,KAbtB,CAcI,WAAW,CAAE,KAdjB,CAeI,QAAQ,CAAE,kBAACZ,KAAD,QAAW,CAAA,MAAI,CAACpB,KAAL,CAAWe,mBAAX,CAA+BK,KAA/B,CAAsC,QAAtC,CAAX,EAfd,EA9FJ,CA3BJ,CADJ,CA6IK,CAAC,KAAKhB,KAAL,CAAWD,QAAZ,cACG,8BAAQ,SAAS,CAAC,kBAAlB,CAAqC,OAAO,CAAE,KAAKF,cAAnD,mBAAoE,oBAAC,eAAD,EAAiB,IAAI,CAAEX,kBAAvB,EAApE,KADH,CACiI,EA9ItI,cA+II,2BAAK,SAAS,4BAAsB,KAAKc,KAAL,CAAWD,QAAX,CAAsB,QAAtB,CAAiC,EAAvD,KAAd,eACI,8BAAQ,SAAS,CAAC,mBAAlB,CAAsC,OAAO,CAAE,KAAKF,cAApD,mBAAqE,oBAAC,eAAD,EAAiB,IAAI,CAAEV,OAAvB,EAArE,KADJ,cAEI,oBAAC,GAAD,mBAEI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,SAAS,CAAE,KAAKS,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,mBAAN,CAA9B,CADf,CAEI,WAAW,CAAE,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFjB,CAGI,IAAI,CAAC,cAHT,CAII,QAAQ,CAAC,4BAJb,CAKI,WAAW,CAAC,cALhB,CAMI,SAAS,CAAC,cANd,CAOI,OAAO,CAAE,KAAKX,KAAL,CAAWiC,eAPxB,CAQI,KAAK,CAAE,KAAKjC,KAAL,CAAWkC,oBAAX,CAAkC,CAAE,QAAS,KAAKlC,KAAL,CAAWkC,oBAAX,CAAgCC,YAA3C,CAAyD,QAAS,KAAKnC,KAAL,CAAWkC,oBAAX,CAAgCE,0BAAlG,CAAlC,CAAmK,EAR9K,CASI,WAAW,CAAE,KATjB,CAWI,OAAO,CAAE,KAXb,CAYI,YAAY,CAAE,KAZlB,CAaI,UAAU,CAAE,KAbhB,CAcI,gBAAgB,CAAE,KAdtB,CAeI,WAAW,CAAE,KAfjB,CAgBI,QAAQ,CAAE,kBAAChB,KAAD,QAAW,CAAA,MAAI,CAACpB,KAAL,CAAWe,mBAAX,CAA+BK,KAA/B,CAAsC,SAAtC,CAAX,EAhBd,EADJ,cAmBI,oBAAC,gBAAD,EACI,SAAS,CAAE,KAAKpB,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oBAAN,CAA9B,CADf,CAEI,YAAY,CAAE,IAFlB,CAGI,IAAI,CAAE,4BAHV,CAII,UAAU,CAAE,KAJhB,CAKI,WAAW,CAAE,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CALjB,CAMI,WAAW,CAAE,KANjB,CAOI,OAAO,CAAE,KAAKX,KAAL,CAAWqC,oBAPxB,CAQI,QAAQ,CAAC,4BARb,CASI,WAAW,CAAC,kBAThB,CAUI,KAAK,CAAE,KAAKrC,KAAL,CAAWsC,0BAAX,CAAwC,CAAE,QAAS,KAAKtC,KAAL,CAAWsC,0BAAX,CAAsCC,gBAAjD,CAAmE,QAAS,KAAKvC,KAAL,CAAWsC,0BAAX,CAAsCE,0BAAlH,CAAxC,CAAyL,EAVpM,CAWI,UAAU,CAAE,IAXhB,CAYI,SAAS,CAAC,4BAZd,CAaI,SAAS,CAAC,WAbd,CAcI,QAAQ,CAAE,kBAACpB,KAAD,QAAW,CAAA,MAAI,CAACpB,KAAL,CAAWe,mBAAX,CAA+BK,KAA/B,CAAsC,4BAAtC,CAAoE,4BAApE,CAAX,EAdd,EAnBJ,CAFJ,cAuCI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eAEI,oBAAC,gBAAD,EACI,SAAS,CAAE,KAAKpB,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,UAAN,CAA9B,CADf,CAEI,WAAW,CAAE,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFjB,CAGI,IAAI,CAAC,WAHT,CAII,QAAQ,CAAC,WAJb,CAKI,WAAW,CAAC,cALhB,CAMI,SAAS,CAAC,cANd,CAOI,OAAO,CAAE,KAAKX,KAAL,CAAWyC,IAPxB,CAQI,KAAK,CAAE,KAAKzC,KAAL,CAAW0C,SAAX,CAAuB,CAAE,QAAS,KAAK1C,KAAL,CAAW0C,SAAX,CAAqBC,YAAhC,CAA8C,QAAS,KAAK3C,KAAL,CAAW0C,SAAX,CAAqBE,SAA5E,CAAvB,CAAiH,EAR5H,CASI,WAAW,CAAE,KATjB,CAUI,OAAO,CAAE,KAVb,CAWI,YAAY,CAAE,IAXlB,CAYI,UAAU,CAAE,KAZhB,CAaI,gBAAgB,CAAE,KAbtB,CAcI,WAAW,CAAE,KAdjB,CAeI,QAAQ,CAAE,kBAACxB,KAAD,QAAW,CAAA,MAAI,CAACpB,KAAL,CAAWe,mBAAX,CAA+BK,KAA/B,CAAsC,MAAtC,CAAX,EAfd,EAFJ,CAvCJ,CA4DK,KAAKpB,KAAL,CAAW0B,eAAX,GAA+B,KAAK1B,KAAL,CAAW0B,eAAX,CAA2BmB,UAA3B,EAAyC,IAAzC,EAAiD,KAAK7C,KAAL,CAAW0B,eAAX,CAA2BoB,aAA3B,EAA4C,IAA5H,gBACD,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,SAAS,CAAE,KAAK9C,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,qBAAN,CAA9B,CADf,CAEI,WAAW,CAAE,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFjB,CAGI,IAAI,CAAC,mBAHT,CAII,QAAQ,CAAC,aAJb,CAKI,WAAW,CAAC,aALhB,CAMI,SAAS,CAAC,cANd,CAOI,OAAO,CAAE,KAAKX,KAAL,CAAW+C,mBAPxB,CAQI,KAAK,CAAE,KAAK/C,KAAL,CAAWgD,wBAAX,CAAsC,CAAE,QAAS,KAAKhD,KAAL,CAAWgD,wBAAX,CAAoCC,WAA/C,CAA4D,QAAS,KAAKjD,KAAL,CAAWgD,wBAAX,CAAoCE,iBAAzG,CAAtC,CAAqK,EARhL,CASI,WAAW,CAAE,KATjB,CAUI,OAAO,CAAE,KAVb,CAWI,YAAY,CAAE,KAXlB,CAYI,UAAU,CAAE,KAZhB,CAaI,gBAAgB,CAAE,KAbtB,CAcI,WAAW,CAAE,IAdjB,CAeI,QAAQ,CAAE,kBAAC9B,KAAD,QAAW,CAAA,MAAI,CAACpB,KAAL,CAAWe,mBAAX,CAA+BK,KAA/B,CAAsC,mBAAtC,CAAX,EAfd,EADJ,CA7DJ,CAiFd,KAAKpB,KAAL,CAAWgD,wBAAX,EAAuC,KAAKhD,KAAL,CAAWgD,wBAAX,CAAoCE,iBAApC,EAAyD,CAAhG,EAAqG,KAAKlD,KAAL,CAAW0B,eAAX,CAA2BoB,aAA3B,EAA4C,IAAjJ,eACkB,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,SAAS,CAAE,KAAK9C,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,cAAN,CAA9B,CADf,CAEI,WAAW,CAAE,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFjB,CAGI,IAAI,CAAC,eAHT,CAII,QAAQ,CAAC,aAJb,CAKI,WAAW,CAAC,aALhB,CAMI,SAAS,CAAC,cANd,CAOI,OAAO,CAAE,KAAKX,KAAL,CAAWmD,QAPxB,CAQI,KAAK,CAAE,KAAKnD,KAAL,CAAWoD,aAAX,CAA2B,CAAE,QAAS,KAAKpD,KAAL,CAAWoD,aAAX,CAAyBC,WAApC,CAAiD,QAAS,KAAKrD,KAAL,CAAWoD,aAAX,CAAyBE,aAAnF,CAA3B,CAAgI,EAR3I,CASI,WAAW,CAAE,KATjB,CAUI,OAAO,CAAE,KAVb,CAWI,YAAY,CAAE,IAXlB,CAYI,UAAU,CAAE,KAZhB,CAaI,gBAAgB,CAAE,KAbtB,CAcI,WAAW,CAAE,KAdjB,CAeI,QAAQ,CAAE,kBAAClC,KAAD,QAAW,CAAA,MAAI,CAACpB,KAAL,CAAWe,mBAAX,CAA+BK,KAA/B,CAAsC,eAAtC,CAAX,EAfd,EADJ,CAlFJ,CAsGG,KAAKpB,KAAL,CAAWgD,wBAAX,EAAuC,KAAKhD,KAAL,CAAWgD,wBAAX,CAAoCE,iBAApC,EAAyD,CAAhG,EAAqG,KAAKlD,KAAL,CAAW0B,eAAX,CAA2BmB,UAA3B,EAAyC,IAA9I,eACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACG,oBAAC,gBAAD,EACI,SAAS,CAAE,KAAK7C,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,WAAN,CAA9B,CADf,CAEI,WAAW,CAAE,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFjB,CAGI,IAAI,CAAC,kBAHT,CAII,QAAQ,CAAC,kBAJb,CAKI,WAAW,CAAC,YALhB,CAMI,SAAS,CAAC,cANd,CAOI,OAAO,CAAE,KAAKX,KAAL,CAAWuD,KAPxB,CAQI,KAAK,CAAE,KAAKvD,KAAL,CAAWwD,UAAX,CAAwB,CAAE,QAAS,KAAKxD,KAAL,CAAWwD,UAAX,CAAsBC,UAAjC,CAA6C,QAAS,KAAKzD,KAAL,CAAWwD,UAAX,CAAsBE,gBAA5E,CAAxB,CAAyH,EARpI,CASI,WAAW,CAAE,KATjB,CAUI,OAAO,CAAE,KAVb,CAWI,YAAY,CAAE,IAXlB,CAYI,UAAU,CAAE,KAZhB,CAaI,gBAAgB,CAAE,KAbtB,CAcI,WAAW,CAAE,KAdjB,CAeI,QAAQ,CAAE,kBAACtC,KAAD,QAAW,CAAA,MAAI,CAACpB,KAAL,CAAWe,mBAAX,CAA+BK,KAA/B,CAAsC,kBAAtC,CAAX,EAfd,EADH,CAvGL,CAFJ,CA/IJ,CADJ,CAkRH,C,+BApS2B3B,KAAK,CAACkE,S,EAsStC,cAAe/D,CAAAA,UAAU,CAACG,iBAAD,CAAzB","sourcesContent":["import { faAngleDoubleRight, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\n//import { comboChangeUserRolePolicy } from '../../actions';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nclass ResultEntryFilter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore: false\r\n        }\r\n    }\r\n\r\n    showMoreToggle = () => {\r\n        this.setState({\r\n            showMore: !this.state.showMore\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"date:\", this.props.fromDate, this.props.toDate);\r\n        return (\r\n            <div className=\"side_more_filter_wrap\">\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"fromdate\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                            className='form-control'\r\n                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                            selected={this.props.fromDate}\r\n                            value={this.props.fromDate}\r\n                            dateFormat={this.props.userInfo.ssitedate}\r\n                            onChange={date => this.props.onFilterComboChange(date, \"fromDate\")}\r\n                            isClearable={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"fromdate\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                            className='form-control'\r\n                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                            selected={this.props.toDate}\r\n                            value={this.props.toDate}\r\n                            dateFormat={this.props.userInfo.ssitedate}\r\n                            onChange={date => this.props.onFilterComboChange(date, \"toDate\")}\r\n                            isClearable={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            name=\"nsampletypecode\"\r\n                            optionId=\"nsampletypecode\"\r\n                            optionValue=\"ssampletypename\"\r\n                            className='form-control'\r\n                            options={this.props.SampleType}\r\n                            value={this.props.SampleTypeValue ? { \"label\": this.props.SampleTypeValue.ssampletypename, \"value\": this.props.SampleTypeValue.nsampletypecode } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nsampletypecode\")}\r\n                        />\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            name=\"nregtypecode\"\r\n                            className='form-control'\r\n                            options={this.props.RegType}\r\n                            value={this.props.RegTypeValue ? { \"label\": this.props.RegTypeValue.sregtypename, \"value\": this.props.RegTypeValue.nregtypecode } : \"\"}\r\n                            optionId=\"nregtypecode\"\r\n                            optionValue=\"sregtypename\"\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nregtypecode\")}\r\n                        />\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            name=\"nregsubtypecode\"\r\n                            optionId=\"nregsubtypecode\"\r\n                            optionValue=\"sregsubtypename\"\r\n                            className='form-control'\r\n                            options={this.props.RegSubType}\r\n                            value={this.props.RegSubTypeValue ? { \"label\": this.props.RegSubTypeValue.sregsubtypename, \"value\": this.props.RegSubTypeValue.nregsubtypecode } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nregsubtypecode\")}\r\n                        />\r\n\r\n                        {/* <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_JOBSTATUS\" })}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_JOBSTATUS\" })}\r\n                            name=\"sidsjobstatusname\"\r\n                            optionId=\"njobstatuscode\"\r\n                            optionValue=\"sidsjobstatusname\"\r\n                            className='form-control'\r\n                            options={props.REJobStatus}\r\n                            value={props.JobStatusValue ? { \"label\": props.JobStatusValue.sidsjobstatusname, \"value\": props.JobStatusValue.njobstatuscode } : \"\"}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => props.onFilterComboChange(event, \"jobstatus\")}\r\n                        /> */}\r\n\r\n                        {/* <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={this.props.intl.formatMessage({ id: \"IDS_DESIGNTEMPLATE\" })}\r\n                    isSearchable={true}\r\n                    name={\"ndesigntemplatemappingcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    options={this.props.DynamicDesignMapping}\r\n                    optionId=\"ndesigntemplatemappingcode\"\r\n                    optionValue=\"sregtemplatename\"\r\n                    value={this.props.DesignTemplateMappingValue ? { \"label\": this.props.DesignTemplateMappingValue.sregtemplatename, \"value\": this.props.DesignTemplateMappingValue.ndesigntemplatemappingcode } : \"\"}\r\n                    showOption={true}\r\n                    sortField=\"ndesigntemplatemappingcode\"\r\n                    sortOrder=\"ascending\"\r\n                    onChange={(event) => this.props.onDesignTemplateChange(event, 'ndesigntemplatemappingcode', 'DesignTemplateMappingValue')}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col> */}\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_TESTSTATUS\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            name=\"ntransactionstatus\"\r\n                            optionId=\"ntransactionstatus\"\r\n                            optionValue=\"sfilterstatus\"\r\n                            className='form-control'\r\n                            options={this.props.FilterStatus}\r\n                            value={this.props.FilterStatusValue ? { \"label\": this.props.FilterStatusValue.sfilterstatus, \"value\": this.props.FilterStatusValue.ntransactionstatus } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"filter\")}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                {!this.state.showMore ?\r\n                    <button className=\"btn_sidebar_open\" onClick={this.showMoreToggle}> <FontAwesomeIcon icon={faAngleDoubleRight} /> </button> : ''}\r\n                <div className={`side_more_filter ${this.state.showMore ? 'active' : ''} `} >\r\n                    <button className=\"btn_sidebar_close\" onClick={this.showMoreToggle}> <FontAwesomeIcon icon={faTimes} /> </button>\r\n                    <Row>\r\n                        {/* {this.props.RegSubTypeValue.nneedtemplatebasedflow? */}\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_CONFIGVERSION\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"sversionname\"\r\n                                optionId=\"napprovalconfigversioncode\"\r\n                                optionValue=\"sversionname\"\r\n                                className='form-control'\r\n                                options={this.props.ApprovalVersion}\r\n                                value={this.props.ApprovalVersionValue ? { \"label\": this.props.ApprovalVersionValue.sversionname, \"value\": this.props.ApprovalVersionValue.napprovalconfigversioncode } : \"\"}\r\n                                isMandatory={false}\r\n\r\n                                isMulti={false}\r\n                                isSearchable={false}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                onChange={(event) => this.props.onFilterComboChange(event, \"version\")}\r\n                            />\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_DESIGNTEMPLATE\" })}\r\n                                isSearchable={true}\r\n                                name={\"ndesigntemplatemappingcode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={false}\r\n                                options={this.props.DynamicDesignMapping}\r\n                                optionId=\"ndesigntemplatemappingcode\"\r\n                                optionValue=\"sregtemplatename\"\r\n                                value={this.props.DesignTemplateMappingValue ? { \"label\": this.props.DesignTemplateMappingValue.sregtemplatename, \"value\": this.props.DesignTemplateMappingValue.ndesigntemplatemappingcode } : \"\"}\r\n                                showOption={true}\r\n                                sortField=\"ndesigntemplatemappingcode\"\r\n                                sortOrder=\"ascending\"\r\n                                onChange={(event) => this.props.onFilterComboChange(event, 'ndesigntemplatemappingcode', 'DesignTemplateMappingValue')}\r\n                            />\r\n                        </Col>\r\n                        {/* :\"\"} */}\r\n                        <Col md={12}>\r\n\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"ntestcode\"\r\n                                optionId=\"ntestcode\"\r\n                                optionValue=\"stestsynonym\"\r\n                                className='form-control'\r\n                                options={this.props.Test}\r\n                                value={this.props.TestValue ? { \"label\": this.props.TestValue.stestsynonym, \"value\": this.props.TestValue.ntestcode } : \"\"}\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                onChange={(event) => this.props.onFilterComboChange(event, \"test\")}\r\n                            />\r\n                        </Col>\r\n\r\n                        {this.props.RegSubTypeValue && (this.props.RegSubTypeValue.nneedbatch == true || this.props.RegSubTypeValue.nneedworklist == true) &&\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_WORKLISTORBATCH\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"nconfigfiltercode\"\r\n                                optionId=\"sfiltername\"\r\n                                optionValue=\"sfiltername\"\r\n                                className='form-control'\r\n                                options={this.props.ConfigurationFilter}\r\n                                value={this.props.ConfigurationFilterValue ? { \"label\": this.props.ConfigurationFilterValue.sfiltername, \"value\": this.props.ConfigurationFilterValue.nconfigfiltercode } : \"\"}\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={false}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={true}\r\n                                onChange={(event) => this.props.onFilterComboChange(event, \"nconfigfiltercode\")}\r\n                            />\r\n                        </Col>\r\n    }\r\n     {this.props.ConfigurationFilterValue && this.props.ConfigurationFilterValue.nconfigfiltercode == 1 && this.props.RegSubTypeValue.nneedworklist == true &&\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_WORKLIST\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"nworklistcode\"\r\n                                optionId=\"sworklistno\"\r\n                                optionValue=\"sworklistno\"\r\n                                className='form-control'\r\n                                options={this.props.Worklist}\r\n                                value={this.props.WorklistValue ? { \"label\": this.props.WorklistValue.sworklistno, \"value\": this.props.WorklistValue.nworklistcode } : \"\"}\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                onChange={(event) => this.props.onFilterComboChange(event, \"nworklistcode\")}\r\n                            />\r\n                        </Col>\r\n    }\r\n                      {this.props.ConfigurationFilterValue && this.props.ConfigurationFilterValue.nconfigfiltercode == 2 && this.props.RegSubTypeValue.nneedbatch == true &&\r\n                         <Col md={12}>\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_BATCH\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"nbatchmastercode\"\r\n                                optionId=\"nbatchmastercode\"\r\n                                optionValue=\"sbatcharno\"\r\n                                className='form-control'\r\n                                options={this.props.Batch}\r\n                                value={this.props.BatchValue ? { \"label\": this.props.BatchValue.sbatcharno, \"value\": this.props.BatchValue.nbatchmastercode } : \"\"}\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                onChange={(event) => this.props.onFilterComboChange(event, \"nbatchmastercode\")}\r\n                            />\r\n                        </Col> \r\n                         }\r\n            \r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(ResultEntryFilter)"]},"metadata":{},"sourceType":"module"}