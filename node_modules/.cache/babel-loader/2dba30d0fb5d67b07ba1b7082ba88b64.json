{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormInput from'../../components/form-input/form-input.component';import{injectIntl}from'react-intl';import FormTextarea from'../../components/form-textarea/form-textarea.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';var AddProduct=function AddProduct(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],isSearchable:true,name:\"nproductcatcode\",isDisabled:false,placeholder:props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],isMandatory:true,options:props.productCategoryList,alphabeticalSort:\"true\",optionId:\"nproductcatcode\",optionValue:\"sproductcatname\",value:props.selectedRecord?props.selectedRecord[\"nproductcatcode\"]:\"\",defaultValue:props.selectedRecord?props.selectedRecord[\"nproductcatcode\"]:\"\",closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,'nproductcatcode');}}),/*#__PURE__*/React.createElement(FormInput,{label:props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],name:\"sproductname\",type:\"text\",isMandatory:\"*\",required:true,maxLength:\"100\",value:props.selectedRecord[\"sproductname\"]||[],onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}),/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),name:\"sdescription\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord?props.selectedRecord[\"sdescription\"]:\"\",rows:\"2\",isMandatory:false,required:false,maxLength:255}),/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ndefaultstatus\",label:props.intl.formatMessage({id:\"IDS_DEFAULTSTATUS\"}),type:\"switch\",onChange:function onChange(event){return props.onInputOnChange(event,1,[3,4]);}//onChange={(event)=>props.onActiveStatusChange(event, [1, 2])}\n,placeholder:props.intl.formatMessage({id:\"IDS_DEFAULTSTATUS\"}),defaultValue:props.selectedRecord[\"ndefaultstatus\"]===3?true:false,checked:props.selectedRecord[\"ndefaultstatus\"]===3?true:false})));};export default injectIntl(AddProduct);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/product/AddProduct.jsx"],"names":["React","Row","Col","FormSelectSearch","FormInput","injectIntl","FormTextarea","CustomSwitch","AddProduct","props","genericLabel","userInfo","slanguagetypecode","productCategoryList","selectedRecord","event","onComboChange","onInputOnChange","intl","formatMessage","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\n\r\nconst AddProduct = (props) => {\r\n\r\n    return (\r\n\r\n        <Row>\r\n            <Col md={12}>\r\n\r\n                <FormSelectSearch\r\n                    formLabel={props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                    isSearchable={true}\r\n                    name={\"nproductcatcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                    isMandatory={true}\r\n                    options={props.productCategoryList}\r\n                    alphabeticalSort=\"true\"\r\n                    optionId=\"nproductcatcode\"\r\n                    optionValue=\"sproductcatname\"\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nproductcatcode\"] : \"\"}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"nproductcatcode\"] : \"\"}\r\n                    closeMenuOnSelect={true}\r\n                    onChange={(event) => props.onComboChange(event, 'nproductcatcode')}>\r\n                </FormSelectSearch>\r\n\r\n                <FormInput\r\n                    label={props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                    name=\"sproductname\"\r\n                    type=\"text\"\r\n                    isMandatory={\"*\"}\r\n                    required={true}\r\n                    maxLength=\"100\"\r\n                    value={props.selectedRecord[\"sproductname\"] || []}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                />\r\n\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    name={\"sdescription\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={255}\r\n                >\r\n                </FormTextarea>\r\n\r\n                <CustomSwitch\r\n                    name={\"ndefaultstatus\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                    type=\"switch\"\r\n                    onChange={(event) => props.onInputOnChange(event, 1, [3, 4])}\r\n                    //onChange={(event)=>props.onActiveStatusChange(event, [1, 2])}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                    defaultValue={props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false}\r\n                    checked={props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false}\r\n                >\r\n                </CustomSwitch>\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddProduct);\r\n"]},"metadata":{},"sourceType":"module"}