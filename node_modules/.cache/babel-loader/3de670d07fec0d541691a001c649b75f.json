{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\components\\\\form-email\\\\form-email.component.jsx\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\n\nconst FormEmail = ({\n  name,\n  type,\n  placeholder,\n  onChange,\n  className,\n  value,\n  error,\n  isMandatory,\n  isDisabled,\n  children,\n  label,\n  defaultValue,\n  required,\n  onBlur,\n  onKeyUp,\n  errors,\n  isInvalid,\n  onKeyPress,\n  ...props\n}) => {\n  let pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n  if (value !== undefined && value !== \"\" && !pattern.test(value)) {\n    isInvalid = true;\n    errors = \"Please enter valid email address.\";\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"floating-label react-select-wrap\",\n    controlId: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    id: name,\n    label: label,\n    name: name,\n    type: type,\n    placeholder: placeholder,\n    onChange: onChange,\n    value: value,\n    isInvalid: isInvalid,\n    className: className,\n    defaultValue: defaultValue,\n    required: required,\n    maxLength: props.maxLength,\n    readOnly: props.readOnly,\n    disabled: isDisabled,\n    onBlur: onBlur,\n    onKeyUp: onKeyUp,\n    onKeyPress: e => {\n      e.key === 'Enter' && e.preventDefault();\n    },\n    autoComplete: \"off\",\n    ref: props.ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, label, isMandatory && /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 67\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, errors))); // FormInput.defaultProps = {\n  //     type: \"text\",\n  //     className: \"\"\n  // }\n};\n\nexport default FormEmail;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/components/form-email/form-email.component.jsx"],"names":["React","Form","FormEmail","name","type","placeholder","onChange","className","value","error","isMandatory","isDisabled","children","label","defaultValue","required","onBlur","onKeyUp","errors","isInvalid","onKeyPress","props","pattern","RegExp","undefined","test","maxLength","readOnly","e","key","preventDefault","ref"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACfC,EAAAA,IADe;AAEfC,EAAAA,IAFe;AAGfC,EAAAA,WAHe;AAIfC,EAAAA,QAJe;AAKfC,EAAAA,SALe;AAMfC,EAAAA,KANe;AAOfC,EAAAA,KAPe;AAQfC,EAAAA,WARe;AASfC,EAAAA,UATe;AAUfC,EAAAA,QAVe;AAWfC,EAAAA,KAXe;AAYfC,EAAAA,YAZe;AAafC,EAAAA,QAbe;AAcfC,EAAAA,MAde;AAefC,EAAAA,OAfe;AAgBfC,EAAAA,MAhBe;AAiBfC,EAAAA,SAjBe;AAkBfC,EAAAA,UAlBe;AAmBf,KAAGC;AAnBY,CAAD,KAoBZ;AACF,MAAIC,OAAO,GAAG,IAAIC,MAAJ,CAAW,iSAAX,CAAd;;AACA,MAAIf,KAAK,KAAKgB,SAAV,IAAuBhB,KAAK,KAAK,EAAjC,IAAuC,CAACc,OAAO,CAACG,IAAR,CAAajB,KAAb,CAA5C,EAAiE;AAC7DW,IAAAA,SAAS,GAAG,IAAZ;AACAD,IAAAA,MAAM,GAAG,mCAAT;AACH;;AACD,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,kCAAtB;AAAyD,IAAA,SAAS,EAAEf,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,EAAE,EAAEA,IADR;AAEI,IAAA,KAAK,EAAEU,KAFX;AAGI,IAAA,IAAI,EAAEV,IAHV;AAII,IAAA,IAAI,EAAEC,IAJV;AAKI,IAAA,WAAW,EAAEC,WALjB;AAMI,IAAA,QAAQ,EAAEC,QANd;AAOI,IAAA,KAAK,EAAEE,KAPX;AAQI,IAAA,SAAS,EAAEW,SARf;AASI,IAAA,SAAS,EAAEZ,SATf;AAUI,IAAA,YAAY,EAAEO,YAVlB;AAWI,IAAA,QAAQ,EAAEC,QAXd;AAYI,IAAA,SAAS,EAAEM,KAAK,CAACK,SAZrB;AAaI,IAAA,QAAQ,EAAEL,KAAK,CAACM,QAbpB;AAcI,IAAA,QAAQ,EAAEhB,UAdd;AAeI,IAAA,MAAM,EAAEK,MAfZ;AAgBI,IAAA,OAAO,EAAEC,OAhBb;AAiBI,IAAA,UAAU,EAAGW,CAAD,IAAO;AAAEA,MAAAA,CAAC,CAACC,GAAF,KAAU,OAAV,IAAqBD,CAAC,CAACE,cAAF,EAArB;AAA0C,KAjBnE;AAkBI,IAAA,YAAY,EAAC,KAlBjB;AAmBI,IAAA,GAAG,EAAET,KAAK,CAACU,GAnBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAsBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAE5B,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BU,KAA5B,EAAmCH,WAAW,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlD,CAtBJ,eAuBI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,MADL,CAvBJ,CADJ,CADJ,CANE,CAqCF;AACA;AACA;AACA;AACH,CA7DD;;AA8DA,eAAehB,SAAf","sourcesContent":["import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst FormEmail = ({\r\n    name,\r\n    type,\r\n    placeholder,\r\n    onChange,\r\n    className,\r\n    value,\r\n    error,\r\n    isMandatory,\r\n    isDisabled,\r\n    children,\r\n    label,\r\n    defaultValue,\r\n    required,\r\n    onBlur,\r\n    onKeyUp,\r\n    errors,\r\n    isInvalid,\r\n    onKeyPress,\r\n    ...props\r\n}) => {\r\n    let pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n    if (value !== undefined && value !== \"\" && !pattern.test(value)) {\r\n        isInvalid = true;\r\n        errors = \"Please enter valid email address.\";\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Form.Group className=\"floating-label react-select-wrap\" controlId={name}>\r\n                <Form.Control\r\n                    id={name}\r\n                    label={label}\r\n                    name={name}\r\n                    type={type}\r\n                    placeholder={placeholder}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    isInvalid={isInvalid}\r\n                    className={className}\r\n                    defaultValue={defaultValue}\r\n                    required={required}\r\n                    maxLength={props.maxLength}\r\n                    readOnly={props.readOnly}\r\n                    disabled={isDisabled}\r\n                    onBlur={onBlur}\r\n                    onKeyUp={onKeyUp}\r\n                    onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }}\r\n                    autoComplete=\"off\"\r\n                    ref={props.ref}\r\n                />\r\n                <Form.Label htmlFor={name}>{label}{isMandatory && <sup>*</sup>}</Form.Label>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    {errors}\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        </React.Fragment>\r\n    );\r\n    // FormInput.defaultProps = {\r\n    //     type: \"text\",\r\n    //     className: \"\"\r\n    // }\r\n}\r\nexport default FormEmail;"]},"metadata":{},"sourceType":"module"}