{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\AddInstrument.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { injectIntl } from 'react-intl';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst AddInstrument = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTCATEGORY\"\n    }),\n    isSearchable: true,\n    name: \"ninstrumentcatcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.InstrumentCategory,\n    value: props.selectedRecord[\"ninstrumentcatcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"ninstrumentcatcode\"],\n    onChange: event => props.onComboChange(event, \"ninstrumentcatcode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTID\"\n    }),\n    name: \"sinstrumentid\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTID\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sinstrumentid\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTNAME\"\n    }),\n    name: \"sinstrumentname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTNAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sinstrumentname\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SUPPLIER\"\n    }),\n    isSearchable: true,\n    name: \"nsuppliercode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Supplier,\n    isMulti: false,\n    value: props.selectedRecord[\"nsuppliercode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nsuppliercode\"],\n    onChange: event => props.onComboChange(event, \"nsuppliercode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SERIALNO\"\n    }),\n    name: \"sserialno\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SERIALNO\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sserialno\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dmanufacdate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_MANUFACTURERDATEWOTIME\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord[\"dmanufacdate\"],\n    dateFormat: props.userInfo.ssitedate,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false,\n    isClearable: true,\n    isMandatory: true,\n    required: true //maxDate={props.currentTime}\n    ,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dmanufacdate\", date),\n    value: props.selectedRecord[\"dmanufacdate\"] //      name={\"dmanufacdate\"} \n    //      label={ props.intl.formatMessage({ id:\"IDS_MANUFACTURERDATE\"})}                     \n    //      className='form-control'\n    //      placeholderText=\"Select date..\"\n    //      selected={props.selectedRecord[\"dmanufacdate\"]}\n    //      dateFormat={props.userInfo.ssitedate }\n    //      isClearable={false}\n    //      timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\n    //      showTimeInput={true}\n    //      maxTime={props.currentTime}\n    //    //  minTime={props.manuDate}\n    //      onChange={date => props.handleDateChange(\"dmanufacdate\", date)}\n    //      value={props.selectedRecord[\"dmanufacdate\"]}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  })), props.userInfo.istimezoneshow === transactionStatus.YES && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzgoodsindate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList,\n    value: props.selectedRecord[\"ntzmanufdate\"] || \"\" //value = { props.selectedRecord[\"ntztimezoneid\"] }\n    ,\n    defaultValue: props.selectedRecord[\"ntzmanufdate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true //isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzmanufdate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dpodate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PODATEWOTIME\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord[\"dpodate\"],\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: true,\n    isMandatory: false,\n    required: true,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false //  maxTime={props.currentTime}\n    ,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dpodate\", date),\n    value: props.selectedRecord[\"dpodate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  })), props.userInfo.istimezoneshow === transactionStatus.YES && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzpodate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList,\n    optionId: \"ntimezonecode\",\n    optionValue: \"stimezoneid\",\n    value: props.selectedRecord[\"ntzpodate\"] || \"\",\n    defaultValue: props.selectedRecord[\"ntzpodate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzpodate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dreceiveddate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_RECEIVEDDATEWOTIME\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord[\"dreceiveddate\"],\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: true,\n    isMandatory: false,\n    required: true,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false //  maxTime={props.currentTime}\n    ,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dreceiveddate\", date),\n    value: props.selectedRecord[\"dreceiveddate\"] || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  })), props.userInfo.istimezoneshow === transactionStatus.YES && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzreceivedate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList,\n    value: props.selectedRecord[\"ntzreceivedate\"] || \"\",\n    defaultValue: props.selectedRecord[\"ntzreceivedate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzreceivedate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dinstallationdate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_INSTALLATIONDATEWOTIME\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord[\"dinstallationdate\"],\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: true,\n    isMandatory: false,\n    required: true,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false //  maxTime={props.currentTime}\n    ,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dinstallationdate\", date),\n    value: props.selectedRecord[\"dinstallationdate\"] || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  })), props.userInfo.istimezoneshow === transactionStatus.YES && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzinstallationdate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList,\n    value: props.selectedRecord[\"ntzinstallationdate\"] || \"\",\n    defaultValue: props.selectedRecord[\"ntzinstallationdate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzinstallationdate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dexpirydate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_EXPIRYDATEWOTIME\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord[\"dexpirydate\"],\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: true,\n    required: true,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false,\n    maxTime: props.expiryDate,\n    isMandatory: false // minTime={props.expiryDate}\n    ,\n    onChange: date => props.handleDateChange(\"dexpirydate\", date),\n    value: props.selectedRecord[\"dexpirydate\"] || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 25\n    }\n  })), props.userInfo.istimezoneshow === transactionStatus.YES && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzexpirydate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList,\n    value: props.selectedRecord[\"ntzexpirydate\"] || \"\",\n    defaultValue: props.selectedRecord[\"ntzexpirydate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzexpirydate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MODELNO\"\n    }),\n    name: \"smodelnumber\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MODELNO\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"smodelnumber\"] : \"\",\n    isMandatory: false,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  })), props.CalibrationRequired === transactionStatus.YES ? /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nnextcalibration\",\n    label: props.intl.formatMessage({\n      id: \"IDS_CALIBRATIONINTERVAL\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_CALIBRATIONINTERVAL\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"nnextcalibration\"],\n    max: 99,\n    min: 0,\n    strict: true,\n    maxLength: 3,\n    onChange: event => props.onInputOnChange(event, 1, \"nnextcalibration\"),\n    noStyle: true,\n    precision: 0,\n    className: \"form-control\",\n    isMandatory: true,\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 25\n    }\n  })) : \"\", props.CalibrationRequired === transactionStatus.YES ? /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PERIOD\"\n    }),\n    isSearchable: true,\n    name: \"nperiodcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: true,\n    required: false,\n    isMulti: false,\n    options: props.Period,\n    value: props.selectedRecord[\"nnextcalibrationperiod\"] || \"\",\n    defaultValue: props.selectedRecord[\"nnextcalibrationperiod\"],\n    onChange: event => props.onComboChange(event, \"nnextcalibrationperiod\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 25\n    }\n  })) : \"\")), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_MANUFACTURENAME\"\n    }),\n    isSearchable: true,\n    name: \"nmanufcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Manufacturer,\n    value: props.selectedRecord[\"nmanufcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nmanufcode\"],\n    onChange: event => props.onComboChange(event, \"nmanufcode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_PONO\"\n    }),\n    name: \"spono\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PONO\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"spono\"] : \"\",\n    isMandatory: false,\n    required: true,\n    maxLength: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SERVICEBY\"\n    }),\n    isSearchable: true,\n    name: \"nservicecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Supplier,\n    value: props.selectedRecord[\"nservicecode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nservicecode\"],\n    onChange: event => props.onComboChange(event, \"nservicecode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 25\n    }\n  })), props.operation === \"create\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SECTION\"\n    }),\n    isSearchable: false,\n    name: \"nsectioncode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    isMulti: false //  required={true}\n    ,\n    isClearable: true,\n    options: props.Lab || \"\",\n    disableSearch: false,\n    value: props.selectedRecord[\"nsectioncode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nsectioncode\"] || \"\",\n    onChange: event => props.onComboChange(event, \"nsectioncode\", 2) // closeMenuOnSelect={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormMultiSelect, {\n    label: props.intl.formatMessage({\n      id: \"IDS_INCHARGE\"\n    }),\n    isSearchable: true,\n    name: \"nusercode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: props.selectedRecord[\"nsectioncode\"] ? true : false,\n    isClearable: false,\n    options: props.selectedRecord[\"nsectioncode\"] ? props.SectionUsers || [] : [],\n    optionId: \"nusercode\",\n    optionValue: \"susername\",\n    disableSearch: false,\n    value: props.selectedRecord[\"nusercode\"] || [] //defaultValue={props.selectedRecord[\"SectionUsers\"]}\n    ,\n    onChange: event => props.onComboChange(event, \"nusercode\", 1),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_VALIDATIONSTATUS\"\n    }),\n    isSearchable: false,\n    name: \"validation\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isMulti: false,\n    isClearable: false,\n    options: props.ValidationStatus || \"\",\n    disableSearch: false,\n    value: props.selectedRecord[\"validation\"] || \"\",\n    defaultValue: props.selectedRecord[\"validation\"] || \"\",\n    onChange: event => props.onComboChange(event, \"validation\", 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 33\n    }\n  })), props.CalibrationRequired === transactionStatus.YES ? /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_CALIBRATIONSTATUS\"\n    }),\n    isSearchable: false,\n    name: \"calibration\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isMulti: false,\n    isClearable: false,\n    options: props.CalibrationStatus || \"\",\n    disableSearch: false,\n    value: props.selectedRecord[\"calibration\"] || \"\",\n    defaultValue: props.selectedRecord[\"calibration\"] || \"\",\n    onChange: event => props.onComboChange(event, \"calibration\", 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 33\n    }\n  })) : \"\", /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_MAINTENANCESTATUS\"\n    }),\n    isSearchable: false,\n    name: \"maintenance\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.MaintenanceStatus || \"\",\n    disableSearch: false,\n    value: props.selectedRecord[\"maintenance\"] || \"\",\n    defaultValue: props.selectedRecord[\"maintenance\"] || \"\",\n    onChange: event => props.onComboChange(event, \"maintenance\", 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 33\n    }\n  }))) //  :  \n  //                 <Col md={12}>\n  //                 <FormSelectSearch\n  //                 formLabel={props.intl.formatMessage({ id: \"IDS_LAB\" })}\n  //                 isSearchable={true}\n  //                 name={\"nsectioncode\"}\n  //                 isDisabled={true}\n  //                 placeholder=\"Please Select...\"\n  //                 isMandatory={true}\n  //                 isClearable={false}\n  //                 options={props.Lab}\n  //                 optionId='nsectioncode'\n  //                 optionValue='ssectionname'\n  //                 disableSearch={true}    \n  //                 value = { props.selectedRecord[\"nsectioncode\"] }\n  //                 defaultValue={props.selectedRecord[\"nsectioncode\"]}\n  //                 onChange={(event)=>props.onComboChange(event, \"nsectioncode\",2)}\n  //                 closeMenuOnSelect={true}\n  //                 alphabeticalSort={true}\n  //             />\n  // </Col>\n  , /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTSTATUS\"\n    }),\n    isSearchable: true,\n    name: \"ntranscode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.InstrumentStatus,\n    value: props.selectedRecord[\"ntranscode\"] || \"\",\n    defaultValue: props.selectedRecord[\"ntranscode\"],\n    onChange: event => props.onComboChange(event, \"ntranscode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_REMARKS\"\n    }),\n    name: \"sremarks\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_REMARKS\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sremarks\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: \"255\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    type: \"switch\",\n    name: \"ndefaultstatus\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : \"\",\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default injectIntl(AddInstrument);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/instrumentmanagement/AddInstrument.jsx"],"names":["React","Row","Col","FormSelectSearch","FormMultiSelect","FormInput","CustomSwitch","FormTextarea","DateTimePicker","injectIntl","FormNumericInput","transactionStatus","AddInstrument","props","intl","formatMessage","id","InstrumentCategory","selectedRecord","event","onComboChange","onInputOnChange","Supplier","userInfo","istimezoneshow","YES","ssitedate","currentTime","date","handleDateChange","TimeZoneList","expiryDate","CalibrationRequired","Period","Manufacturer","operation","Lab","SectionUsers","ValidationStatus","CalibrationStatus","MaintenanceStatus","InstrumentStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\n\r\nconst AddInstrument = (props) => { \r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORY\" })}\r\n                            isSearchable={true}\r\n                            name={\"ninstrumentcatcode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.InstrumentCategory}\r\n                            value={props.selectedRecord[\"ninstrumentcatcode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"ninstrumentcatcode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"ninstrumentcatcode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                            name={\"sinstrumentid\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sinstrumentid\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={\"100\"}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_INSTRUMENTNAME\" })}\r\n                            name={\"sinstrumentname\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_INSTRUMENTNAME\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sinstrumentname\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={\"100\"}\r\n                        />\r\n                    </Col>\r\n\r\n\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_SUPPLIER\" })}\r\n                            isSearchable={true}\r\n                            name={\"nsuppliercode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.Supplier}\r\n                            isMulti={false}\r\n                            value={props.selectedRecord[\"nsuppliercode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nsuppliercode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nsuppliercode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_SERIALNO\" })}\r\n                            name={\"sserialno\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SERIALNO\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sserialno\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={\"50\"}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={props.userInfo.istimezoneshow ===transactionStatus.YES ? 6 : 12}>\r\n                        <DateTimePicker\r\n                            name={\"dmanufacdate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_MANUFACTURERDATEWOTIME\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord[\"dmanufacdate\"]}\r\n                            dateFormat={props.userInfo.ssitedate}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            isClearable={true}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            //maxDate={props.currentTime}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"dmanufacdate\", date)}\r\n                            value={props.selectedRecord[\"dmanufacdate\"]}\r\n\r\n\r\n\r\n\r\n                        //      name={\"dmanufacdate\"} \r\n                        //      label={ props.intl.formatMessage({ id:\"IDS_MANUFACTURERDATE\"})}                     \r\n                        //      className='form-control'\r\n                        //      placeholderText=\"Select date..\"\r\n                        //      selected={props.selectedRecord[\"dmanufacdate\"]}\r\n                        //      dateFormat={props.userInfo.ssitedate }\r\n                        //      isClearable={false}\r\n                        //      timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\r\n                        //      showTimeInput={true}\r\n                        //      maxTime={props.currentTime}\r\n                        //    //  minTime={props.manuDate}\r\n                        //      onChange={date => props.handleDateChange(\"dmanufacdate\", date)}\r\n                        //      value={props.selectedRecord[\"dmanufacdate\"]}\r\n\r\n                        />\r\n                    </Col>\r\n                    {props.userInfo.istimezoneshow  === transactionStatus.YES  &&\r\n                        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                name={\"ntzgoodsindate\"}\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                options={props.TimeZoneList}\r\n                                value={props.selectedRecord[\"ntzmanufdate\"] || \"\"}\r\n                                //value = { props.selectedRecord[\"ntztimezoneid\"] }\r\n                                defaultValue={props.selectedRecord[\"ntzmanufdate\"]}\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                //isClearable={false}                               \r\n                                isDisabled={false}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                                onChange={(event) => props.onComboChange(event, 'ntzmanufdate', 1)}\r\n                            />\r\n                        </Col>\r\n                    }\r\n\r\n                    <Col md={props.userInfo.istimezoneshow ===transactionStatus.YES ? 6 : 12}>\r\n                        <DateTimePicker\r\n                            name={\"dpodate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_PODATEWOTIME\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord[\"dpodate\"]}\r\n                            dateFormat={props.userInfo.ssitedate}\r\n                            isClearable={true}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            //  maxTime={props.currentTime}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"dpodate\", date)}\r\n                            value={props.selectedRecord[\"dpodate\"]}\r\n\r\n                        />\r\n                    </Col>\r\n                    {props.userInfo.istimezoneshow ===transactionStatus.YES &&\r\n                        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                name={\"ntzpodate\"}\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                options={props.TimeZoneList}\r\n                                optionId=\"ntimezonecode\"\r\n                                optionValue=\"stimezoneid\"\r\n                                value={props.selectedRecord[\"ntzpodate\"] || \"\"}\r\n                                defaultValue={props.selectedRecord[\"ntzpodate\"]}\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                // isClearable={false}                               \r\n                                isDisabled={false}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                                onChange={(event) => props.onComboChange(event, 'ntzpodate', 1)}\r\n                            />\r\n                        </Col>\r\n                    }\r\n                    <Col md={props.userInfo.istimezoneshow ===transactionStatus.YES ? 6 : 12}>\r\n                        <DateTimePicker\r\n                            name={\"dreceiveddate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_RECEIVEDDATEWOTIME\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord[\"dreceiveddate\"]}\r\n                            dateFormat={props.userInfo.ssitedate}\r\n                            isClearable={true}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            //  maxTime={props.currentTime}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"dreceiveddate\", date)}\r\n                            value={props.selectedRecord[\"dreceiveddate\"] || \"\"}\r\n\r\n                        />\r\n                    </Col>\r\n\r\n                    {props.userInfo.istimezoneshow === transactionStatus.YES &&\r\n                        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                name={\"ntzreceivedate\"}\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                options={props.TimeZoneList}\r\n                                value={props.selectedRecord[\"ntzreceivedate\"] || \"\"}\r\n                                defaultValue={props.selectedRecord[\"ntzreceivedate\"]}\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                // isClearable={false}                               \r\n                                isDisabled={false}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                                onChange={(event) => props.onComboChange(event, 'ntzreceivedate', 1)}\r\n                            />\r\n                        </Col>\r\n                    }\r\n                    <Col md={props.userInfo.istimezoneshow  === transactionStatus.YES ? 6 : 12}>\r\n                        <DateTimePicker\r\n                            name={\"dinstallationdate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_INSTALLATIONDATEWOTIME\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord[\"dinstallationdate\"]}\r\n                            dateFormat={props.userInfo.ssitedate}\r\n                            isClearable={true}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            //  maxTime={props.currentTime}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"dinstallationdate\", date)}\r\n                            value={props.selectedRecord[\"dinstallationdate\"] || \"\"}\r\n\r\n                        />\r\n                    </Col>\r\n                    {props.userInfo.istimezoneshow  === transactionStatus.YES &&\r\n                        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                name={\"ntzinstallationdate\"}\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                options={props.TimeZoneList}\r\n                                value={props.selectedRecord[\"ntzinstallationdate\"] || \"\"}\r\n                                defaultValue={props.selectedRecord[\"ntzinstallationdate\"]}\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                // isClearable={false}                               \r\n                                isDisabled={false}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                                onChange={(event) => props.onComboChange(event, 'ntzinstallationdate', 1)}\r\n                            />\r\n                        </Col>\r\n                    }\r\n\r\n                    <Col md={props.userInfo.istimezoneshow  === transactionStatus.YES ? 6 : 12}>\r\n                        <DateTimePicker\r\n                            name={\"dexpirydate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_EXPIRYDATEWOTIME\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord[\"dexpirydate\"]}\r\n                            dateFormat={props.userInfo.ssitedate}\r\n                            isClearable={true}\r\n                            required={true}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            maxTime={props.expiryDate}\r\n                            isMandatory={false}\r\n                            // minTime={props.expiryDate}\r\n                            onChange={date => props.handleDateChange(\"dexpirydate\", date)}\r\n                            value={props.selectedRecord[\"dexpirydate\"] || \"\"}\r\n                        />\r\n                    </Col>\r\n                    {props.userInfo.istimezoneshow  === transactionStatus.YES &&\r\n                        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                name={\"ntzexpirydate\"}\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                options={props.TimeZoneList}\r\n                                value={props.selectedRecord[\"ntzexpirydate\"] || \"\"}\r\n                                defaultValue={props.selectedRecord[\"ntzexpirydate\"]}\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                // isClearable={false}                               \r\n                                isDisabled={false}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                                onChange={(event) => props.onComboChange(event, 'ntzexpirydate', 1)}\r\n                            />\r\n                        </Col>\r\n                    }\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MODELNO\" })}\r\n                            name={\"smodelnumber\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MODELNO\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"smodelnumber\"] : \"\"}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            maxLength={\"100\"}\r\n                        />\r\n                    </Col>\r\n                                            {/* <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_NEXTCALIBRATION\" })}\r\n                            name={\"nnextcalibration\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_NEXTCALIBRATION\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"nnextcalibration\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={\"100\"}\r\n                        /> */}\r\n                    {props.CalibrationRequired===transactionStatus.YES ?\r\n                    <Col md={6}>\r\n    \r\n                        <FormNumericInput\r\n                        name=\"nnextcalibration\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_CALIBRATIONINTERVAL\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_CALIBRATIONINTERVAL\" })}\r\n                        type=\"number\"\r\n                        value={props.selectedRecord[\"nnextcalibration\"]}\r\n                        max={99}\r\n                        min={0}\r\n                        strict={true}\r\n                        maxLength={3}\r\n                        onChange={(event) => props.onInputOnChange(event,1,\"nnextcalibration\")}\r\n                        noStyle={true}\r\n                        precision={0}\r\n                        className=\"form-control\"\r\n\r\n                        isMandatory={true}\r\n                        errors=\"Please provide a valid number.\"\r\n                    />\r\n                    </Col>\r\n                    :\"\"}\r\n                    {props.CalibrationRequired===transactionStatus.YES ?\r\n                    <Col md={6}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PERIOD\" })}\r\n                            isSearchable={true}\r\n                            name={\"nperiodcode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={true}\r\n                            required={false}\r\n                            isMulti={false}\r\n                            options={props.Period}\r\n                            value={props.selectedRecord[\"nnextcalibrationperiod\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nnextcalibrationperiod\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nnextcalibrationperiod\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                        \r\n                       \r\n                    </Col>\r\n:\"\"}\r\n                </Row>\r\n            </Col>\r\n\r\n\r\n            <Col md={6}>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_MANUFACTURENAME\" })}\r\n                            isSearchable={true}\r\n                            name={\"nmanufcode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.Manufacturer}\r\n                            value={props.selectedRecord[\"nmanufcode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nmanufcode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nmanufcode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_PONO\" })}\r\n                            name={\"spono\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_PONO\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"spono\"] : \"\"}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            maxLength={\"50\"}\r\n                        />\r\n                    </Col>\r\n\r\n\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_SERVICEBY\" })}\r\n                            isSearchable={true}\r\n                            name={\"nservicecode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.Supplier}\r\n                            value={props.selectedRecord[\"nservicecode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nservicecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nservicecode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    {props.operation === \"create\" &&\r\n                        <>\r\n                            <Col md={12}>\r\n                                <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_SECTION\" })}\r\n                                    isSearchable={false}\r\n                                    name={\"nsectioncode\"}\r\n                                    isDisabled={false}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={false}\r\n                                    isMulti={false}\r\n\r\n                                    //  required={true}\r\n                                    isClearable={true}\r\n                                    options={props.Lab || \"\"}\r\n                                    disableSearch={false}\r\n                                    value={props.selectedRecord[\"nsectioncode\"] || \"\"}\r\n                                    defaultValue={props.selectedRecord[\"nsectioncode\"] || \"\"}\r\n                                    onChange={(event) => props.onComboChange(event, \"nsectioncode\", 2)}\r\n                                // closeMenuOnSelect={true}\r\n\r\n                                />\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                <FormMultiSelect\r\n                                    label={props.intl.formatMessage({ id: \"IDS_INCHARGE\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"nusercode\"}\r\n                                    isDisabled={false}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={props.selectedRecord[\"nsectioncode\"] ? true : false}\r\n                                    isClearable={false}\r\n                                    options={props.selectedRecord[\"nsectioncode\"]?props.SectionUsers || []:[]}\r\n                                    optionId='nusercode'\r\n                                    optionValue='susername'\r\n                                    disableSearch={false}\r\n                                    value={props.selectedRecord[\"nusercode\"] || []}\r\n                                    //defaultValue={props.selectedRecord[\"SectionUsers\"]}\r\n                                    onChange={(event) => props.onComboChange(event, \"nusercode\", 1)}\r\n                                    closeMenuOnSelect={true}\r\n                                    alphabeticalSort={true}\r\n                                />\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_VALIDATIONSTATUS\" })}\r\n                                    isSearchable={false}\r\n                                    name={\"validation\"}\r\n                                    isDisabled={false}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    isMulti={false}\r\n                                    isClearable={false}\r\n                                    options={props.ValidationStatus || \"\"}\r\n                                    disableSearch={false}\r\n                                    value={props.selectedRecord[\"validation\"] || \"\"}\r\n                                    defaultValue={props.selectedRecord[\"validation\"] || \"\"}\r\n                                    onChange={(event) => props.onComboChange(event, \"validation\", 1)}\r\n\r\n                                />\r\n                            </Col>\r\n                            {props.CalibrationRequired===transactionStatus.YES ?\r\n                                <Col md={12}>\r\n                                <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_CALIBRATIONSTATUS\" })}\r\n                                    isSearchable={false}\r\n                                    name={\"calibration\"}\r\n                                    isDisabled={false}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    isMulti={false}\r\n                                    isClearable={false}\r\n                                    options={props.CalibrationStatus || \"\"}\r\n                                    disableSearch={false}\r\n                                    value={props.selectedRecord[\"calibration\"] || \"\"}\r\n                                    defaultValue={props.selectedRecord[\"calibration\"] || \"\"}\r\n                                    onChange={(event) => props.onComboChange(event, \"calibration\", 1)}\r\n\r\n                                />\r\n                            </Col>\r\n                           :\"\"}\r\n                            \r\n                            <Col md={12}>\r\n                                <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_MAINTENANCESTATUS\" })}\r\n                                    isSearchable={false}\r\n                                    name={\"maintenance\"}\r\n                                    isDisabled={false}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    isClearable={false}\r\n                                    options={props.MaintenanceStatus || \"\"}\r\n                                    disableSearch={false}\r\n                                    value={props.selectedRecord[\"maintenance\"] || \"\"}\r\n                                    defaultValue={props.selectedRecord[\"maintenance\"] || \"\"}\r\n                                    onChange={(event) => props.onComboChange(event, \"maintenance\", 1)}\r\n\r\n                                />\r\n                            </Col>\r\n                        </>\r\n                        //  :  \r\n                        //                 <Col md={12}>\r\n                        //                 <FormSelectSearch\r\n                        //                 formLabel={props.intl.formatMessage({ id: \"IDS_LAB\" })}\r\n                        //                 isSearchable={true}\r\n                        //                 name={\"nsectioncode\"}\r\n                        //                 isDisabled={true}\r\n                        //                 placeholder=\"Please Select...\"\r\n                        //                 isMandatory={true}\r\n                        //                 isClearable={false}\r\n                        //                 options={props.Lab}\r\n                        //                 optionId='nsectioncode'\r\n                        //                 optionValue='ssectionname'\r\n                        //                 disableSearch={true}    \r\n                        //                 value = { props.selectedRecord[\"nsectioncode\"] }\r\n                        //                 defaultValue={props.selectedRecord[\"nsectioncode\"]}\r\n                        //                 onChange={(event)=>props.onComboChange(event, \"nsectioncode\",2)}\r\n                        //                 closeMenuOnSelect={true}\r\n                        //                 alphabeticalSort={true}\r\n\r\n                        //             />\r\n                        // </Col>\r\n\r\n\r\n                    }\r\n\r\n                    {/* \r\n { props.SectionUsers  &&\r\n            <Col md={12}>\r\n            <FormMultiSelect\r\n                    label={props.intl.formatMessage({ id: \"IDS_INCHARGE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nusercode\"}\r\n                    isDisabled={false}\r\n                    placeholder=\"Please Select...\"\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.SectionUsers || []}\r\n                    optionId='nusercode'\r\n                    optionValue='susername'\r\n                    disableSearch={false}    \r\n                    value = { props.selectedRecord[\"nusercode\"] }\r\n                    //defaultValue={props.selectedRecord[\"SectionUsers\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"nusercode\",1)}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}                    \r\n            />\r\n         </Col>\r\n    }\r\n\r\n        { props.operation ===\"update\" &&\r\n            <Col md={12}>\r\n            <FormMultiSelect\r\n                    label={props.intl.formatMessage({ id: \"IDS_INCHARGE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nusercode\"}\r\n                    isDisabled={true}\r\n                    placeholder=\"Please Select...\"\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.SectionUsers || []}\r\n                    optionId='nusercode'\r\n                    optionValue='susername'\r\n                    disableSearch={false}    \r\n                   // value = { props.selectedRecord[\"susername\"] }\r\n                    defaultValue={props.selectedRecord[\"susername\"]}\r\n                    //onChange={(event)=>props.onComboChange(event, \"nusercode\",1)}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}                    \r\n            />\r\n         </Col>\r\n} */}\r\n\r\n\r\n\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_INSTRUMENTSTATUS\" })}\r\n                            isSearchable={true}\r\n                            name={\"ntranscode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.InstrumentStatus}\r\n                            value={props.selectedRecord[\"ntranscode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            label={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                            name={\"sremarks\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sremarks\"] : \"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={\"255\"}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n                    {/* <Col md={6}>\r\n                <FormNumericInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_WINDOW\" }).concat(  \"(+)\" )}\r\n                    name={\"nwindowsperiodplus\"}\r\n                    type=\"number\"\r\n                    onChange={(event) => props.onNumericInputOnChange(event,\"nwindowsperiodplus\")}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_WINDOW\" })}\r\n                    value={ props.selectedRecord[\"nwindowsperiodplus\"] }\r\n                    isMandatory={false}\r\n                    required={true}\r\n                    noStyle={true}\r\n                    className=\"form-control\"\r\n                    maxLength={10}\r\n                    strict={true}\r\n                />\r\n            </Col>\r\n            <Col md={6}>\r\n                <FormSelectSearch\r\n                   // formLabel={props.intl.formatMessage({ id: \"IDS_WINDOWPERIOD\" })}\r\n                    isSearchable={true}\r\n                    name={\"nperiodcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={false}\r\n                    isClearable={false}\r\n                    options={props.Period}\r\n                    value = { props.selectedRecord[\"nwindowsperiodplusunit\"] || \"\"}\r\n                    defaultValue={props.selectedRecord[\"nwindowsperiodplusunit\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"nwindowsperiodplusunit\",1)}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n\r\n            <Col md={6}>\r\n                <FormNumericInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_WINDOW\" }).concat(  \"(-)\" )}\r\n                    name={\"nwindowsperiodminus\"}\r\n                    type=\"number\"\r\n                    onChange={(event) => props.onNumericInputOnChange(event,\"nwindowsperiodminus\")}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_WINDOW\" })}\r\n                    value={props.selectedRecord[\"nwindowsperiodminus\"]}\r\n                    isMandatory={false}\r\n                    required={true}\r\n                    noStyle={true}\r\n                    className=\"form-control\"\r\n                    maxLength={10}\r\n                    strict={true}\r\n                />\r\n            </Col>\r\n            <Col md={6}>\r\n                <FormSelectSearch\r\n                   // formLabel={props.intl.formatMessage({ id: \"IDS_WINDOWPERIOD\" })}\r\n                    isSearchable={true}\r\n                    name={\"nperiodcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={false}\r\n                    isClearable={false}\r\n                    options={props.Period}\r\n                    value = { props.selectedRecord[\"nwindowsperiodminusunit\"] || \"\"}\r\n                    defaultValue={props.selectedRecord[\"nwindowsperiodminusunit\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"nwindowsperiodminusunit\",1)}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col> */}\r\n\r\n\r\n                    <Col md={12}>\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                            type=\"switch\"\r\n                            name={\"ndefaultstatus\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                            defaultValue={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : \"\"}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            checked={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : false}\r\n                        />\r\n                    </Col>\r\n\r\n\r\n                    {/* <Col md={4}>\r\n                <FormInput\r\n                    //label={props.intl.formatMessage({ id: \"IDS_PONO\" })}\r\n                    name={\"spono\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                   // placeholder={props.intl.formatMessage({ id: \"IDS_PONO\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"spono\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                />\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_LAB\" })}\r\n                    isSearchable={true}\r\n                    name={\"nlabcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id:\"IDS_LAB\"})}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.Lab}\r\n                    optionId='nlabcode'\r\n                    optionValue='slabname'\r\n                    // defaultValue={props.selectedRecord ? props.selectedRecord[\"nofficialmanufcode\"]:\"\"}\r\n                    defaultValue={props.defaultValue ? props.defaultValue:\"\"}\r\n                    onChange={(event)=>props.onComboChange(event, \"nlabcode\")}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col> */}\r\n                </Row>\r\n            </Col>\r\n\r\n        </Row>\r\n\r\n    );\r\n}\r\nexport default injectIntl(AddInstrument);"]},"metadata":{},"sourceType":"module"}