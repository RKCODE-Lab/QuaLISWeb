{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\AddInstrument.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { injectIntl } from 'react-intl';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\n\nconst AddInstrument = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTCATEGORY\"\n    }),\n    isSearchable: true,\n    name: \"ninstrumentcatcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.InstrumentCategory,\n    value: props.selectedRecord[\"ninstrumentcatcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"ninstrumentcatcode\"],\n    onChange: event => props.onComboChange(event, \"ninstrumentcatcode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTID\"\n    }),\n    name: \"sinstrumentid\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTID\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sinstrumentid\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTNAME\"\n    }),\n    name: \"sinstrumentname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTNAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sinstrumentname\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SUPPLIER\"\n    }),\n    isSearchable: true,\n    name: \"nsuppliercode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Supplier,\n    isMulti: false,\n    value: props.selectedRecord[\"nsuppliercode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nsuppliercode\"],\n    onChange: event => props.onComboChange(event, \"nsuppliercode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SERIALNO\"\n    }),\n    name: \"sserialno\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SERIALNO\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sserialno\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dmanufacdate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_MANUFACTURERDATEWOTIME\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"dmanufacdate\"],\n    dateFormat: props.userInfo.ssitedate,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false,\n    isClearable: true,\n    isMandatory: true,\n    required: true //maxDate={props.currentTime}\n    ,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dmanufacdate\", date),\n    value: props.selectedRecord[\"dmanufacdate\"] //      name={\"dmanufacdate\"} \n    //      label={ props.intl.formatMessage({ id:\"IDS_MANUFACTURERDATE\"})}                     \n    //      className='form-control'\n    //      placeholderText=\"Select date..\"\n    //      selected={props.selectedRecord[\"dmanufacdate\"]}\n    //      dateFormat={props.userInfo.ssitedate }\n    //      isClearable={false}\n    //      timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\n    //      showTimeInput={true}\n    //      maxTime={props.currentTime}\n    //    //  minTime={props.manuDate}\n    //      onChange={date => props.handleDateChange(\"dmanufacdate\", date)}\n    //      value={props.selectedRecord[\"dmanufacdate\"]}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dpodate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PODATEWOTIME\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"dpodate\"],\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: true,\n    isMandatory: false,\n    required: true,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false //  maxTime={props.currentTime}\n    ,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dpodate\", date),\n    value: props.selectedRecord[\"dpodate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dreceiveddate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_RECEIVEDDATEWOTIME\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"dreceiveddate\"],\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: true,\n    isMandatory: false,\n    required: true,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false //  maxTime={props.currentTime}\n    ,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dreceiveddate\", date),\n    value: props.selectedRecord[\"dreceiveddate\"] || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dinstallationdate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_INSTALLATIONDATEWOTIME\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"dinstallationdate\"],\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: true,\n    isMandatory: false,\n    required: true,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false //  maxTime={props.currentTime}\n    ,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dinstallationdate\", date),\n    value: props.selectedRecord[\"dinstallationdate\"] || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dexpirydate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_EXPIRYDATEWOTIME\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"dexpirydate\"],\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: true,\n    required: true,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false,\n    maxTime: props.expiryDate,\n    isMandatory: false // minTime={props.expiryDate}\n    ,\n    onChange: date => props.handleDateChange(\"dexpirydate\", date),\n    value: props.selectedRecord[\"dexpirydate\"] || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 24\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MODELNO\"\n    }),\n    name: \"smodelnumber\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MODELNO\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"smodelnumber\"] : \"\",\n    isMandatory: false,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_MANUFACTURENAME\"\n    }),\n    isSearchable: true,\n    name: \"nmanufcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Manufacturer,\n    value: props.selectedRecord[\"nmanufcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nmanufcode\"],\n    onChange: event => props.onComboChange(event, \"nmanufcode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_PONO\"\n    }),\n    name: \"spono\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PONO\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"spono\"] : \"\",\n    isMandatory: false,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SERVICEBY\"\n    }),\n    isSearchable: true,\n    name: \"nservicecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Supplier,\n    value: props.selectedRecord[\"nservicecode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nservicecode\"],\n    onChange: event => props.onComboChange(event, \"nservicecode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  })), props.operation === \"create\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SECTION\"\n    }),\n    isSearchable: false,\n    name: \"nsectioncode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    isMulti: false //  required={true}\n    ,\n    isClearable: true,\n    options: props.Lab || \"\",\n    disableSearch: false,\n    value: props.selectedRecord[\"nsectioncode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nsectioncode\"] || \"\",\n    onChange: event => props.onComboChange(event, \"nsectioncode\", 2) // closeMenuOnSelect={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 18\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormMultiSelect, {\n    label: props.intl.formatMessage({\n      id: \"IDS_INCHARGE\"\n    }),\n    isSearchable: true,\n    name: \"nusercode\",\n    isDisabled: false,\n    placeholder: \"Please Select...\",\n    isMandatory: props.selectedRecord[\"nsectioncode\"] ? true : false,\n    isClearable: false,\n    options: props.SectionUsers || [],\n    optionId: \"nusercode\",\n    optionValue: \"susername\",\n    disableSearch: false,\n    value: props.selectedRecord[\"nusercode\"] || [] //defaultValue={props.selectedRecord[\"SectionUsers\"]}\n    ,\n    onChange: event => props.onComboChange(event, \"nusercode\", 1),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }))) //  :  \n  //                 <Col md={12}>\n  //                 <FormSelectSearch\n  //                 formLabel={props.intl.formatMessage({ id: \"IDS_LAB\" })}\n  //                 isSearchable={true}\n  //                 name={\"nsectioncode\"}\n  //                 isDisabled={true}\n  //                 placeholder=\"Please Select...\"\n  //                 isMandatory={true}\n  //                 isClearable={false}\n  //                 options={props.Lab}\n  //                 optionId='nsectioncode'\n  //                 optionValue='ssectionname'\n  //                 disableSearch={true}    \n  //                 value = { props.selectedRecord[\"nsectioncode\"] }\n  //                 defaultValue={props.selectedRecord[\"nsectioncode\"]}\n  //                 onChange={(event)=>props.onComboChange(event, \"nsectioncode\",2)}\n  //                 closeMenuOnSelect={true}\n  //                 alphabeticalSort={true}\n  //             />\n  // </Col>\n  , /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTSTATUS\"\n    }),\n    isSearchable: true,\n    name: \"ntranscode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.InstrumentStatus,\n    value: props.selectedRecord[\"ntranscode\"] || \"\",\n    defaultValue: props.selectedRecord[\"ntranscode\"],\n    onChange: event => props.onComboChange(event, \"ntranscode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_REMARKS\"\n    }),\n    name: \"sremarks\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_REMARKS\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sremarks\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: \"255\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    type: \"switch\",\n    name: \"ndefaultstatus\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : \"\",\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default injectIntl(AddInstrument);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/instrumentmanagement/AddInstrument.jsx"],"names":["React","Row","Col","FormSelectSearch","FormMultiSelect","FormInput","CustomSwitch","FormTextarea","DateTimePicker","injectIntl","FormNumericInput","AddInstrument","props","intl","formatMessage","id","InstrumentCategory","selectedRecord","event","onComboChange","onInputOnChange","Supplier","userInfo","ssitedate","currentTime","date","handleDateChange","expiryDate","Manufacturer","operation","Lab","SectionUsers","InstrumentStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport {injectIntl } from 'react-intl';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\n\r\nconst AddInstrument = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n\r\n            <Row>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORY\" })}\r\n                    isSearchable={true}\r\n                    name={\"ninstrumentcatcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.InstrumentCategory}\r\n                    value = { props.selectedRecord[\"ninstrumentcatcode\"] || \"\" }\r\n                    defaultValue={props.selectedRecord[\"ninstrumentcatcode\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"ninstrumentcatcode\",1)}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                    name={\"sinstrumentid\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sinstrumentid\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                />\r\n            </Col>\r\n\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_INSTRUMENTNAME\" })}\r\n                    name={\"sinstrumentname\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_INSTRUMENTNAME\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sinstrumentname\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                />\r\n            </Col>\r\n\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_SUPPLIER\" })}\r\n                    isSearchable={true}\r\n                    name={\"nsuppliercode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.Supplier}\r\n                    isMulti={false}                             \r\n                    value = { props.selectedRecord[\"nsuppliercode\"] || \"\"}\r\n                    defaultValue={props.selectedRecord[\"nsuppliercode\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"nsuppliercode\",1)}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n\r\n\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_SERIALNO\" })}\r\n                    name={\"sserialno\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SERIALNO\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sserialno\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                />\r\n            </Col>\r\n\r\n            <Col md={12}>                     \r\n                       <DateTimePicker\r\n                             name={\"dmanufacdate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_MANUFACTURERDATEWOTIME\"})}                     \r\n                             className='form-control'\r\n                             placeholderText=\"Select date..\"\r\n                             selected={props.selectedRecord[\"dmanufacdate\"]}\r\n                             dateFormat={props.userInfo.ssitedate}\r\n                             timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\r\n                             showTimeInput={false}\r\n                             isClearable={true}\r\n                             isMandatory={true}                       \r\n                             required={true}\r\n                             //maxDate={props.currentTime}\r\n                             maxTime={props.currentTime}\r\n                             onChange={date => props.handleDateChange(\"dmanufacdate\", date)}\r\n                             value={props.selectedRecord[\"dmanufacdate\"]}\r\n\r\n\r\n\r\n\r\n                        //      name={\"dmanufacdate\"} \r\n                        //      label={ props.intl.formatMessage({ id:\"IDS_MANUFACTURERDATE\"})}                     \r\n                        //      className='form-control'\r\n                        //      placeholderText=\"Select date..\"\r\n                        //      selected={props.selectedRecord[\"dmanufacdate\"]}\r\n                        //      dateFormat={props.userInfo.ssitedate }\r\n                        //      isClearable={false}\r\n                        //      timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\r\n                        //      showTimeInput={true}\r\n                        //      maxTime={props.currentTime}\r\n                        //    //  minTime={props.manuDate}\r\n                        //      onChange={date => props.handleDateChange(\"dmanufacdate\", date)}\r\n                        //      value={props.selectedRecord[\"dmanufacdate\"]}\r\n                                                                       \r\n                            />\r\n            </Col>\r\n\r\n            {/* <Col md={6}>\r\n                              <FormSelectSearch\r\n                                   name={\"ntzgoodsindate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                   value = { props.selectedRecord[\"ntzmanufdate\"] || \"\" }\r\n                                   //value = { props.selectedRecord[\"ntztimezoneid\"] }\r\n                                   defaultValue={props.selectedRecord[\"ntzmanufdate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   //isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzmanufdate',1)}                               \r\n                              />\r\n                </Col> */}\r\n\r\n\r\n            <Col md={12}>                     \r\n                       <DateTimePicker\r\n                             name={\"dpodate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_PODATEWOTIME\"})}                     \r\n                             className='form-control'\r\n                             placeholderText=\"Select date..\"\r\n                             selected={props.selectedRecord[\"dpodate\"]}\r\n                             dateFormat={props.userInfo.ssitedate}\r\n                             isClearable={true}\r\n                             isMandatory={false}\r\n                             required={true}\r\n                             timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\r\n                             showTimeInput={false}\r\n                           //  maxTime={props.currentTime}\r\n                             maxTime={props.currentTime}\r\n                             onChange={date => props.handleDateChange(\"dpodate\", date)}\r\n                             value={props.selectedRecord[\"dpodate\"]}\r\n                                                                       \r\n                            />\r\n            </Col>\r\n\r\n            {/* <Col md={6}>\r\n                              <FormSelectSearch\r\n                                   name={\"ntzgoodsindate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                   optionId=\"ntimezonecode\"\r\n                                   optionValue=\"stimezoneid\"\r\n                                   value = { props.selectedRecord[\"ntzpodate\"] || \"\"}\r\n                                   defaultValue={props.selectedRecord[\"ntzpodate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzpodate',1)}                               \r\n                              />\r\n                </Col> */}\r\n\r\n            <Col md={12}>                     \r\n                       <DateTimePicker\r\n                             name={\"dreceiveddate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_RECEIVEDDATEWOTIME\"})}                     \r\n                             className='form-control'\r\n                             placeholderText=\"Select date..\"\r\n                             selected={props.selectedRecord[\"dreceiveddate\"]}\r\n                             dateFormat={props.userInfo.ssitedate }\r\n                             isClearable={true}\r\n                             isMandatory={false}\r\n                             required={true}\r\n                             timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\r\n                             showTimeInput={false}\r\n                           //  maxTime={props.currentTime}\r\n                             maxTime={props.currentTime}\r\n                             onChange={date => props.handleDateChange(\"dreceiveddate\", date)}\r\n                             value={props.selectedRecord[\"dreceiveddate\"] || \"\"}\r\n                                                                       \r\n                            />\r\n            </Col>\r\n\r\n            {/* <Col md={6}>\r\n                              <FormSelectSearch\r\n                                   name={\"ntzgoodsindate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                             \r\n                                   options={ props.TimeZoneList}\r\n                                   value = { props.selectedRecord[\"ntzreceivedate\"] || \"\"}\r\n                                   defaultValue={props.selectedRecord[\"ntzreceivedate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzreceivedate',1)}                               \r\n                              />\r\n                </Col> */}\r\n\r\n            <Col md={12}>                     \r\n                       <DateTimePicker\r\n                             name={\"dinstallationdate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_INSTALLATIONDATEWOTIME\"})}                     \r\n                             className='form-control'\r\n                             placeholderText=\"Select date..\"\r\n                             selected={props.selectedRecord[\"dinstallationdate\"]}\r\n                             dateFormat={props.userInfo.ssitedate }\r\n                             isClearable={true}\r\n                             isMandatory={false}\r\n                             required={true}\r\n                             timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\r\n                             showTimeInput={false}\r\n                           //  maxTime={props.currentTime}\r\n                             maxTime={props.currentTime}\r\n                             onChange={date => props.handleDateChange(\"dinstallationdate\", date)}\r\n                             value={props.selectedRecord[\"dinstallationdate\"] || \"\"}\r\n                                                                       \r\n                            />\r\n            </Col>\r\n\r\n              {/* <Col md={6}>\r\n                              <FormSelectSearch\r\n                                   name={\"ntzgoodsindate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                               \r\n                                   options={ props.TimeZoneList}\r\n                                   value = { props.selectedRecord[\"ntzinstallationdate\"] || \"\" }\r\n                                   defaultValue={props.selectedRecord[\"ntzinstallationdate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzinstallationdate',1)}                               \r\n                              />\r\n                </Col> */}\r\n\r\n            <Col md={12}>                     \r\n                       <DateTimePicker\r\n                             name={\"dexpirydate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_EXPIRYDATEWOTIME\"})}                     \r\n                             className='form-control'\r\n                             placeholderText=\"Select date..\"\r\n                             selected={props.selectedRecord[\"dexpirydate\"]}\r\n                             dateFormat={props.userInfo.ssitedate }\r\n                             isClearable={true}\r\n                             required={true}\r\n                             timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\r\n                             showTimeInput={false}\r\n                             maxTime={props.expiryDate}\r\n                             isMandatory={false}\r\n                            // minTime={props.expiryDate}\r\n                             onChange={date => props.handleDateChange(\"dexpirydate\", date)}\r\n                             value={props.selectedRecord[\"dexpirydate\"] || \"\"}                                                                     \r\n                            />\r\n            </Col>\r\n\r\n            {/* <Col md={6}>\r\n                              <FormSelectSearch\r\n                                   name={\"ntzgoodsindate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                   value = { props.selectedRecord[\"ntzexpirydate\"] || \"\" }\r\n                                   defaultValue={props.selectedRecord[\"ntzexpirydate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzexpirydate',1)}                               \r\n                              />\r\n                </Col> */}\r\n\r\n            </Row>\r\n            </Col>\r\n            \r\n\r\n            <Col md={6}>   \r\n            <Row>\r\n          \r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_MODELNO\" })}\r\n                    name={\"smodelnumber\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_MODELNO\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"smodelnumber\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                />\r\n            </Col>\r\n\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_MANUFACTURENAME\" })}\r\n                    isSearchable={true}\r\n                    name={\"nmanufcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.Manufacturer}\r\n                    value = { props.selectedRecord[\"nmanufcode\"] || \"\"}\r\n                    defaultValue={props.selectedRecord[\"nmanufcode\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"nmanufcode\",1)}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n\r\n\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_PONO\" })}\r\n                    name={\"spono\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_PONO\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"spono\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                />\r\n            </Col>\r\n\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_SERVICEBY\" })}\r\n                    isSearchable={true}\r\n                    name={\"nservicecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.Supplier}\r\n                    value = { props.selectedRecord[\"nservicecode\"] ||\"\"}\r\n                    defaultValue={props.selectedRecord[\"nservicecode\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"nservicecode\",1)}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n    \r\n            {props.operation===\"create\" && \r\n            <>\r\n            <Col md={12}>\r\n                 <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_SECTION\" })}\r\n                    isSearchable={false}\r\n                    name={\"nsectioncode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={false}\r\n                    isMulti={false}\r\n\r\n                  //  required={true}\r\n                    isClearable={true}\r\n                    options={props.Lab||\"\"}\r\n                    disableSearch={false}    \r\n                    value = { props.selectedRecord[\"nsectioncode\"] || \"\"}\r\n                    defaultValue={props.selectedRecord[\"nsectioncode\"]||\"\"}\r\n                    onChange={(event)=>props.onComboChange(event, \"nsectioncode\",2)}\r\n                   // closeMenuOnSelect={true}\r\n               \r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormMultiSelect\r\n                    label={props.intl.formatMessage({ id: \"IDS_INCHARGE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nusercode\"}\r\n                    isDisabled={false}\r\n                    placeholder=\"Please Select...\"\r\n                    isMandatory={props.selectedRecord[\"nsectioncode\"]  ? true :false}\r\n                    isClearable={false}\r\n                    options={props.SectionUsers || []}\r\n                    optionId='nusercode'\r\n                    optionValue='susername'\r\n                    disableSearch={false}    \r\n                    value = { props.selectedRecord[\"nusercode\"] || []}\r\n                    //defaultValue={props.selectedRecord[\"SectionUsers\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"nusercode\",1)}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}                    \r\n                />\r\n            </Col>\r\n            </>\r\n    //  :  \r\n    //                 <Col md={12}>\r\n    //                 <FormSelectSearch\r\n    //                 formLabel={props.intl.formatMessage({ id: \"IDS_LAB\" })}\r\n    //                 isSearchable={true}\r\n    //                 name={\"nsectioncode\"}\r\n    //                 isDisabled={true}\r\n    //                 placeholder=\"Please Select...\"\r\n    //                 isMandatory={true}\r\n    //                 isClearable={false}\r\n    //                 options={props.Lab}\r\n    //                 optionId='nsectioncode'\r\n    //                 optionValue='ssectionname'\r\n    //                 disableSearch={true}    \r\n    //                 value = { props.selectedRecord[\"nsectioncode\"] }\r\n    //                 defaultValue={props.selectedRecord[\"nsectioncode\"]}\r\n    //                 onChange={(event)=>props.onComboChange(event, \"nsectioncode\",2)}\r\n    //                 closeMenuOnSelect={true}\r\n    //                 alphabeticalSort={true}\r\n                \r\n    //             />\r\n                // </Col>\r\n}\r\n\r\n{/* \r\n { props.SectionUsers  &&\r\n            <Col md={12}>\r\n            <FormMultiSelect\r\n                    label={props.intl.formatMessage({ id: \"IDS_INCHARGE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nusercode\"}\r\n                    isDisabled={false}\r\n                    placeholder=\"Please Select...\"\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.SectionUsers || []}\r\n                    optionId='nusercode'\r\n                    optionValue='susername'\r\n                    disableSearch={false}    \r\n                    value = { props.selectedRecord[\"nusercode\"] }\r\n                    //defaultValue={props.selectedRecord[\"SectionUsers\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"nusercode\",1)}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}                    \r\n            />\r\n         </Col>\r\n    }\r\n\r\n        { props.operation ===\"update\" &&\r\n            <Col md={12}>\r\n            <FormMultiSelect\r\n                    label={props.intl.formatMessage({ id: \"IDS_INCHARGE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nusercode\"}\r\n                    isDisabled={true}\r\n                    placeholder=\"Please Select...\"\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.SectionUsers || []}\r\n                    optionId='nusercode'\r\n                    optionValue='susername'\r\n                    disableSearch={false}    \r\n                   // value = { props.selectedRecord[\"susername\"] }\r\n                    defaultValue={props.selectedRecord[\"susername\"]}\r\n                    //onChange={(event)=>props.onComboChange(event, \"nusercode\",1)}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}                    \r\n            />\r\n         </Col>\r\n} */}\r\n\r\n\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_INSTRUMENTSTATUS\" })}\r\n                    isSearchable={true}\r\n                    name={\"ntranscode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.InstrumentStatus}\r\n                    value = { props.selectedRecord[\"ntranscode\"] ||\"\" }\r\n                    defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"ntranscode\",1)}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n\r\n\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                    name={\"sremarks\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sremarks\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={\"255\"}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n\r\n            {/* <Col md={6}>\r\n                <FormNumericInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_WINDOW\" }).concat(  \"(+)\" )}\r\n                    name={\"nwindowsperiodplus\"}\r\n                    type=\"number\"\r\n                    onChange={(event) => props.onNumericInputOnChange(event,\"nwindowsperiodplus\")}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_WINDOW\" })}\r\n                    value={ props.selectedRecord[\"nwindowsperiodplus\"] }\r\n                    isMandatory={false}\r\n                    required={true}\r\n                    noStyle={true}\r\n                    className=\"form-control\"\r\n                    maxLength={10}\r\n                    strict={true}\r\n                />\r\n            </Col>\r\n            <Col md={6}>\r\n                <FormSelectSearch\r\n                   // formLabel={props.intl.formatMessage({ id: \"IDS_WINDOWPERIOD\" })}\r\n                    isSearchable={true}\r\n                    name={\"nperiodcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={false}\r\n                    isClearable={false}\r\n                    options={props.Period}\r\n                    value = { props.selectedRecord[\"nwindowsperiodplusunit\"] || \"\"}\r\n                    defaultValue={props.selectedRecord[\"nwindowsperiodplusunit\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"nwindowsperiodplusunit\",1)}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n\r\n            <Col md={6}>\r\n                <FormNumericInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_WINDOW\" }).concat(  \"(-)\" )}\r\n                    name={\"nwindowsperiodminus\"}\r\n                    type=\"number\"\r\n                    onChange={(event) => props.onNumericInputOnChange(event,\"nwindowsperiodminus\")}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_WINDOW\" })}\r\n                    value={props.selectedRecord[\"nwindowsperiodminus\"]}\r\n                    isMandatory={false}\r\n                    required={true}\r\n                    noStyle={true}\r\n                    className=\"form-control\"\r\n                    maxLength={10}\r\n                    strict={true}\r\n                />\r\n            </Col>\r\n            <Col md={6}>\r\n                <FormSelectSearch\r\n                   // formLabel={props.intl.formatMessage({ id: \"IDS_WINDOWPERIOD\" })}\r\n                    isSearchable={true}\r\n                    name={\"nperiodcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={false}\r\n                    isClearable={false}\r\n                    options={props.Period}\r\n                    value = { props.selectedRecord[\"nwindowsperiodminusunit\"] || \"\"}\r\n                    defaultValue={props.selectedRecord[\"nwindowsperiodminusunit\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"nwindowsperiodminusunit\",1)}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col> */}\r\n\r\n     \r\n            <Col md={12}>\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                    type=\"switch\"\r\n                    name={\"ndefaultstatus\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : false}\r\n                />\r\n            </Col>\r\n\r\n\r\n            {/* <Col md={4}>\r\n                <FormInput\r\n                    //label={props.intl.formatMessage({ id: \"IDS_PONO\" })}\r\n                    name={\"spono\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                   // placeholder={props.intl.formatMessage({ id: \"IDS_PONO\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"spono\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                />\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_LAB\" })}\r\n                    isSearchable={true}\r\n                    name={\"nlabcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id:\"IDS_LAB\"})}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.Lab}\r\n                    optionId='nlabcode'\r\n                    optionValue='slabname'\r\n                    // defaultValue={props.selectedRecord ? props.selectedRecord[\"nofficialmanufcode\"]:\"\"}\r\n                    defaultValue={props.defaultValue ? props.defaultValue:\"\"}\r\n                    onChange={(event)=>props.onComboChange(event, \"nlabcode\")}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col> */}\r\n            </Row>\r\n            </Col>\r\n           \r\n        </Row>\r\n\r\n    );\r\n}\r\nexport default injectIntl(AddInstrument);"]},"metadata":{},"sourceType":"module"}