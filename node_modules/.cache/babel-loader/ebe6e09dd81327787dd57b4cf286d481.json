{"ast":null,"code":"import React from'react';import{faChevronDown,faChevronUp,faPlus,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{Accordion,AccordionCollapse,Col,Form,InputGroup,Nav,Row,useAccordionToggle}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';import{condition}from'../Enumeration';import FormInput from'../form-input/form-input.component';import{ContentPanel,MediaHeader,MediaLabel}from'../App.styles';import FormSelectSearch from'../form-select-search/form-select-search.component';import DateTimePicker from'../date-time-picker/date-time-picker.component';import FormNumericInput from'../form-numeric-input/form-numeric-input.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{AtAccordion}from'../custom-accordion/custom-accordion.styles';import AccordionContext from\"react-bootstrap/AccordionContext\";var CustomToggle=function CustomToggle(_ref){var children=_ref.children,eventKey=_ref.eventKey;var currentEventKey=React.useContext(AccordionContext);var isCurrentEventKey=currentEventKey===eventKey;var decoratedOnClick=useAccordionToggle(eventKey,\"\");return/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between accordion-button\",onClick:decoratedOnClick},children,isCurrentEventKey?/*#__PURE__*/React.createElement(\"span\",{className:\"pr-2\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronUp})):/*#__PURE__*/React.createElement(\"span\",{className:\"pr-2\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronDown//onClick={children.props.onExpandCall}\n})));};var DateFilterProperties=function DateFilterProperties(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AtAccordion,null,/*#__PURE__*/React.createElement(Accordion,null,/*#__PURE__*/React.createElement(CustomToggle,{eventKey:\"DateValidation\"},props.intl.formatMessage({id:\"IDS_DATEVALIDATION\"})),/*#__PURE__*/React.createElement(AccordionCollapse,{eventKey:\"DateValidation\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{style:{'margin-top':'25px'}},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PERIOD\"}),isSearchable:true,name:\"period\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:false,isClearable:true,options:props.period,value:props.selectedFieldRecord&&props.selectedFieldRecord[\"period\"]?props.selectedFieldRecord[\"period\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"period\");},closeMenuOnSelect:true,alphabeticalSort:true})),/*#__PURE__*/React.createElement(Col,{md:12},props.selectedFieldRecord&&props.selectedFieldRecord[\"period\"]&&/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_DATEVALUE\"}),name:\"windowperiod\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DATEVALUE\"}),value:props.selectedFieldRecord&&props.selectedFieldRecord[\"windowperiod\"]?props.selectedFieldRecord[\"windowperiod\"]:\"\",isMandatory:true,required:true,maxLength:\"7\"}))),props.selectedFieldRecord[\"period\"]?props.selectedFieldRecord[\"period\"].value===6?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_MONTH\"}),name:\"nmonth\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MONTH\"}),value:props.selectedFieldRecord&&props.selectedFieldRecord[\"nmonth\"]?props.selectedFieldRecord[\"nmonth\"]:\"\",isMandatory:false,required:true,maxLength:\"7\"}),/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_DAYS\"}),name:\"nday\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DAYS\"}),value:props.selectedFieldRecord&&props.selectedFieldRecord[\"nday\"]?props.selectedFieldRecord[\"nday\"]:\"\",isMandatory:false,required:true,maxLength:\"7\"})):\"\":\"\",props.selectedFieldRecord[\"period\"]?props.selectedFieldRecord[\"period\"].value===5?/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_DAYS\"}),name:\"nday\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DAYS\"}),value:props.selectedFieldRecord&&props.selectedFieldRecord[\"nday\"]?props.selectedFieldRecord[\"nday\"]:\"\",isMandatory:false,required:true,maxLength:\"7\"}):\"\":\"\",/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_HIDEBEFOREDATE\"}),type:\"switch\",name:\"hidebeforedate\",onChange:function onChange(event){return props.onInputOnChange(event);}// defaultValue={props.selectedFieldRecord[\"readonly\"]}\n,isMandatory:false,required:true,checked:props.selectedFieldRecord[\"hidebeforedate\"]})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_HIDEAFTERDATE\"}),type:\"switch\",name:\"hideafterdate\",onChange:function onChange(event){return props.onInputOnChange(event);}// defaultValue={props.selectedFieldRecord[\"readonly\"]}\n,isMandatory:false,required:true,checked:props.selectedFieldRecord[\"hideafterdate\"]}))),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Check,{inline:true,type:\"checkbox\",name:'loadselecteddate',label:props.intl.formatMessage({id:\"IDS_LOADSELECTEDDATE\"}),onChange:function onChange(event){return props.onInputOnChange(event);},id:\"loadselecteddate\",checked:props.selectedFieldRecord[\"loadselecteddate\"]// isMandatory={control.mandatory}\n// required={control.mandatory}\n}))))))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_CONDITION\"}),isSearchable:true,name:\"condition\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:false,isClearable:false,options:props.dateConditions,value:props.selectedFieldRecord&&props.selectedFieldRecord[\"condition\"]?props.selectedFieldRecord[\"condition\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"condition\");},closeMenuOnSelect:true,alphabeticalSort:true}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_FILTERVALUE\"}),isSearchable:true,name:\"filtervalue\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:false,isClearable:false,options:props.dateComponents,value:props.selectedFieldRecord&&props.selectedFieldRecord[\"filtervalue\"]?props.selectedFieldRecord[\"filtervalue\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"filtervalue\");},closeMenuOnSelect:true,alphabeticalSort:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{onClick:props.addDateConstraints,className:\"add-txt-btn\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADD\",defaultMessage:\"Add\"}))),props.selectedFieldRecord.dateConstraintArrayUI&&props.selectedFieldRecord.dateConstraintArrayUI.map(function(condition,index){return/*#__PURE__*/React.createElement(ContentPanel,{className:\"d-flex justify-content-between\"},/*#__PURE__*/React.createElement(MediaLabel,{style:{border:\".5rem\"}},condition),/*#__PURE__*/React.createElement(Nav.Link,{onClick:function onClick(){return props.deleteCondition(index);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt,className:\"pt-1\"})));}));};export default injectIntl(DateFilterProperties);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/components/droparea/DateFilterProperties.jsx"],"names":["React","faChevronDown","faChevronUp","faPlus","faTrashAlt","FontAwesomeIcon","Accordion","AccordionCollapse","Col","Form","InputGroup","Nav","Row","useAccordionToggle","FormattedMessage","injectIntl","condition","FormInput","ContentPanel","MediaHeader","MediaLabel","FormSelectSearch","DateTimePicker","FormNumericInput","CustomSwitch","AtAccordion","AccordionContext","CustomToggle","children","eventKey","currentEventKey","useContext","isCurrentEventKey","decoratedOnClick","DateFilterProperties","props","intl","formatMessage","id","period","selectedFieldRecord","value","onComboChange","event","onNumericInputChange","onInputOnChange","dateConditions","dateComponents","addDateConstraints","dateConstraintArrayUI","map","index","border","deleteCondition"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { faChevronDown, faChevronUp, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Accordion, AccordionCollapse, Col, Form, InputGroup, Nav, Row, useAccordionToggle ,} from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { condition } from '../Enumeration';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport { ContentPanel, MediaHeader, MediaLabel } from '../App.styles';\r\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../date-time-picker/date-time-picker.component';\r\nimport FormNumericInput from '../form-numeric-input/form-numeric-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { AtAccordion } from '../custom-accordion/custom-accordion.styles';\r\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\r\n\r\nconst CustomToggle = ({ children, eventKey }) => {\r\n    const currentEventKey = React.useContext(AccordionContext);\r\n    const isCurrentEventKey = currentEventKey === eventKey;\r\n    const decoratedOnClick = useAccordionToggle(eventKey, \"\");\r\n\r\n    return (\r\n        <div\r\n          className=\"d-flex justify-content-between accordion-button\"\r\n          onClick={decoratedOnClick}>\r\n          {children}\r\n          {isCurrentEventKey ?\r\n            <span className=\"pr-2\"><FontAwesomeIcon icon={faChevronUp} /></span>\r\n            : <span className=\"pr-2\"><FontAwesomeIcon icon={faChevronDown} //onClick={children.props.onExpandCall}\r\n            /></span>}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const DateFilterProperties = (props) => {\r\n        return (\r\n            <>\r\n                <AtAccordion>\r\n                    <Accordion >\r\n                        <CustomToggle eventKey={\"DateValidation\"}>\r\n                        {props.intl.formatMessage({ id: \"IDS_DATEVALIDATION\" })}\r\n                            {/* <MediaHeader className=\"pl-2\">{props.intl.formatMessage({ id: \"IDS_DATEVALIDATION\" })}</MediaHeader> */}\r\n                        </CustomToggle>\r\n                        <AccordionCollapse eventKey={\"DateValidation\"}>\r\n                            <>\r\n                            <Row style={{'margin-top':'25px'}}>\r\n                                <Col md={12}>\r\n                                    <FormSelectSearch\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_PERIOD\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"period\"}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={false}\r\n                                        isClearable={true}\r\n                                        options={props.period}\r\n                                        value={props.selectedFieldRecord && props.selectedFieldRecord[\"period\"] ?\r\n                                            props.selectedFieldRecord[\"period\"] : \"\"}\r\n                                        onChange={value => props.onComboChange(value, \"period\")}\r\n                                        closeMenuOnSelect={true}\r\n                                        alphabeticalSort={true}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={12}>\r\n                                    {props.selectedFieldRecord && props.selectedFieldRecord[\"period\"] &&\r\n                                    <FormInput\r\n                                        label={props.intl.formatMessage({ id: \"IDS_DATEVALUE\" })}\r\n                                        name={\"windowperiod\"}\r\n                                        type=\"numeric\"\r\n                                        onChange={(event) => props.onNumericInputChange(event)}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_DATEVALUE\" })}\r\n                                        value={props.selectedFieldRecord && props.selectedFieldRecord[\"windowperiod\"] ?\r\n                                            props.selectedFieldRecord[\"windowperiod\"] : \"\"}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        maxLength={\"7\"}\r\n                                    />\r\n        }\r\n\r\n                                    {/* <FormNumericInput\r\n                        name={\"windowperiod\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_DATEVALUE\" }) }\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        strict={true}\r\n                        value={props.selectedFieldRecord && props.selectedFieldRecord[\"windowperiod\"] ?\r\n                        props.selectedFieldRecord[\"windowperiod\"] : \"\"}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        //maxLength={control.sfieldlength}\r\n\r\n                        // isDisabled={control.readonly ?\r\n                        //     control.readonly : checkReadOnly}\r\n\r\n                        onChange={(event) => props.onNumericInputChange(event, \"windowperiod\")}\r\n                        // precision={control.precision || 0}\r\n                        // max={control.max}\r\n                        // min={control.min}\r\n                        noStyle={true}\r\n                    // id={control.nchecklistversionqbcode}\r\n                    /> */}\r\n                                </Col>\r\n                            </Row>\r\n                            {props.selectedFieldRecord[\"period\"] ?\r\n                                props.selectedFieldRecord[\"period\"].value === 6 ?\r\n                                    <>\r\n                                        <FormInput\r\n                                            label={props.intl.formatMessage({ id: \"IDS_MONTH\" })}\r\n                                            name={\"nmonth\"}\r\n                                            type=\"numeric\"\r\n                                            onChange={(event) => props.onNumericInputChange(event)}\r\n                                            placeholder={props.intl.formatMessage({ id: \"IDS_MONTH\" })}\r\n                                            value={props.selectedFieldRecord && props.selectedFieldRecord[\"nmonth\"] ?\r\n                                                props.selectedFieldRecord[\"nmonth\"] : \"\"}\r\n                                            isMandatory={false}\r\n                                            required={true}\r\n                                            maxLength={\"7\"}\r\n                                        />\r\n                                        <FormInput\r\n                                            label={props.intl.formatMessage({ id: \"IDS_DAYS\" })}\r\n                                            name={\"nday\"}\r\n                                            type=\"numeric\"\r\n                                            onChange={(event) => props.onNumericInputChange(event)}\r\n                                            placeholder={props.intl.formatMessage({ id: \"IDS_DAYS\" })}\r\n                                            value={props.selectedFieldRecord && props.selectedFieldRecord[\"nday\"] ?\r\n                                                props.selectedFieldRecord[\"nday\"] : \"\"}\r\n                                            isMandatory={false}\r\n                                            required={true}\r\n                                            maxLength={\"7\"}\r\n                                        />\r\n                                    </>\r\n                                    : \"\" : \"\"\r\n\r\n                            }\r\n                            {props.selectedFieldRecord[\"period\"] ?\r\n                                props.selectedFieldRecord[\"period\"].value === 5 ?\r\n                                    <FormInput\r\n                                        label={props.intl.formatMessage({ id: \"IDS_DAYS\" })}\r\n                                        name={\"nday\"}\r\n                                        type=\"numeric\"\r\n                                        onChange={(event) => props.onNumericInputChange(event)}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_DAYS\" })}\r\n                                        value={props.selectedFieldRecord && props.selectedFieldRecord[\"nday\"] ?\r\n                                            props.selectedFieldRecord[\"nday\"] : \"\"}\r\n                                        isMandatory={false}\r\n                                        required={true}\r\n                                        maxLength={\"7\"}\r\n                                    />\r\n                                    : \"\" : \"\"\r\n\r\n                            }\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <CustomSwitch\r\n                                        label={props.intl.formatMessage({ id: \"IDS_HIDEBEFOREDATE\" })}\r\n                                        type=\"switch\"\r\n                                        name={\"hidebeforedate\"}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                        // defaultValue={props.selectedFieldRecord[\"readonly\"]}\r\n                                        isMandatory={false}\r\n                                        required={true}\r\n                                        checked={props.selectedFieldRecord[\"hidebeforedate\"]}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <CustomSwitch\r\n                                        label={props.intl.formatMessage({ id: \"IDS_HIDEAFTERDATE\" })}\r\n                                        type=\"switch\"\r\n                                        name={\"hideafterdate\"}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                        // defaultValue={props.selectedFieldRecord[\"readonly\"]}\r\n                                        isMandatory={false}\r\n                                        required={true}\r\n                                        checked={props.selectedFieldRecord[\"hideafterdate\"]}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/* <Col md={12}> */}\r\n                            <InputGroup>\r\n                                <Form.Group>\r\n                                    {/* <Form.Label as=\"legend\" htmlFor={control.squestion}>{control.squestion}{control.nmandatoryfield === transactionStatus.YES && <sup>*</sup>}</Form.Label> */}\r\n                                    <Form.Check\r\n                                        inline={true}\r\n                                        type=\"checkbox\"\r\n                                        name={'loadselecteddate'}\r\n                                        label={props.intl.formatMessage({ id: \"IDS_LOADSELECTEDDATE\" })}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                        id={\"loadselecteddate\"}\r\n                                        checked={props.selectedFieldRecord[\"loadselecteddate\"]}\r\n                                    // isMandatory={control.mandatory}\r\n                                    // required={control.mandatory}\r\n                                    />\r\n                                </Form.Group>\r\n                            </InputGroup >\r\n                            </>\r\n                        </AccordionCollapse>\r\n                    </Accordion>\r\n                    </AtAccordion>\r\n                    <hr />\r\n                {/* </Col> */}\r\n                {/* <DateTimePicker\r\n                name={\"mindate\"}\r\n                label={props.intl.formatMessage({ id: \"IDS_MINDATE\" })}\r\n                className='form-control'\r\n                placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                selected={props.selectedFieldRecord && props.selectedFieldRecord[\"mindate\"] ?\r\n                    props.selectedFieldRecord[\"mindate\"] : null}\r\n                dateFormat={props.userinfo[\"ssitedatetime\"]}\r\n                timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                showTimeInput={true}\r\n                showTimeSelectOnly={false}\r\n                // isClearable={false}\r\n                isDisabled={false}\r\n                isMandatory={false}\r\n                //maxDate={props.CurrentTime}\r\n                //maxTime={props.CurrentTime}\r\n                onChange={(date) => props.handleDateChange(date, \"mindate\")}\r\n                // value={props.selectedFieldRecord && props.selectedFieldRecord[\"mindate\"] ?\r\n                //     props.selectedFieldRecord[\"mindate\"] : null}\r\n            />\r\n            <DateTimePicker\r\n                name={\"maxdate\"}\r\n                label={props.intl.formatMessage({ id: \"IDS_MAXDATE\" })}\r\n                className='form-control'\r\n                placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                selected={props.selectedFieldRecord && props.selectedFieldRecord[\"maxdate\"] ?\r\n                    props.selectedFieldRecord[\"maxdate\"] : null}\r\n                dateFormat={props.userinfo[\"ssitedatetime\"]}\r\n                timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                showTimeInput={true}\r\n                showTimeSelectOnly={false}\r\n                // isClearable={false}\r\n                isDisabled={false}\r\n                isMandatory={false}\r\n                //maxDate={props.CurrentTime}\r\n                //maxTime={props.CurrentTime}\r\n                onChange={(date) => props.handleDateChange(date, \"maxdate\")}\r\n                value={props.selectedFieldRecord && props.selectedFieldRecord[\"maxdate\"] ?\r\n                    props.selectedFieldRecord[\"maxdate\"] : new Date()}\r\n            /> */}\r\n\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                    isSearchable={true}\r\n                    name={\"condition\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={false}\r\n                    isClearable={false}\r\n                    options={props.dateConditions}\r\n                    value={props.selectedFieldRecord && props.selectedFieldRecord[\"condition\"] ? props.selectedFieldRecord[\"condition\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"condition\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_FILTERVALUE\" })}\r\n                    isSearchable={true}\r\n                    name={\"filtervalue\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={false}\r\n                    isClearable={false}\r\n                    options={props.dateComponents}\r\n                    value={props.selectedFieldRecord && props.selectedFieldRecord[\"filtervalue\"] ? props.selectedFieldRecord[\"filtervalue\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"filtervalue\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n                <div className='d-flex justify-content-end'>\r\n                    <Nav.Link onClick={props.addDateConstraints} className=\"add-txt-btn\">\r\n                        <FontAwesomeIcon icon={faPlus} />{ }\r\n                        <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                    </Nav.Link>\r\n                </div>\r\n                {props.selectedFieldRecord.dateConstraintArrayUI && props.selectedFieldRecord.dateConstraintArrayUI.map((condition, index) => {\r\n                    return (\r\n                        <ContentPanel className='d-flex justify-content-between'>\r\n                            <MediaLabel style={{ border: \".5rem\" }}>\r\n                                {condition}\r\n                            </MediaLabel>\r\n                            <Nav.Link onClick={() => props.deleteCondition(index)}>\r\n                                <FontAwesomeIcon icon={faTrashAlt} className=\"pt-1\"></FontAwesomeIcon>\r\n                            </Nav.Link>\r\n                        </ContentPanel>\r\n                    );\r\n                })}\r\n            </>\r\n        )\r\n    }\r\n    export default injectIntl(DateFilterProperties);"]},"metadata":{},"sourceType":"module"}